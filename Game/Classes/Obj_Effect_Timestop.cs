// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Timestop : Obj_Effect {

		public ByTable immune = new ByTable();
		public ByTable stopped_atoms = new ByTable();
		public int freezerange = 2;
		public int duration = 140;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -64;
			this.pixel_y = -64;
			this.alpha = 125;
			this.anchored = 1;
			this.unacidable = true;
			this.icon = "icons/effects/160x160.dmi";
			this.icon_state = "time";
			this.layer = 5;
		}

		// Function from file: xenobiology.dm
		public Obj_Effect_Timestop ( dynamic loc = null ) : base( (object)(loc) ) {
			Mob_Living M = null;
			Obj_Effect_ProcHolder_Spell_AoeTurf_Conjure_Timestop T = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living) )) {
				M = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( M.mind.spell_list, typeof(Obj_Effect_ProcHolder_Spell_AoeTurf_Conjure_Timestop) )) {
					T = _a;
					
					this.immune.Or( M );
				}
			}
			this.timestop();
			return;
		}

		// Function from file: xenobiology.dm
		public void unfreeze_mob( Mob_Living M = null ) {
			Mob_Living H = null;

			M.stunned = 0;
			M.anchored = 0;

			if ( M is Mob_Living_SimpleAnimal_Hostile ) {
				H = M;
				((dynamic)H).AIStatus = Lang13.Initial( H, "AIStatus" );
			}
			return;
		}

		// Function from file: xenobiology.dm
		public virtual void timestop(  ) {
			double i = 0;
			Ent_Static A = null;
			Ent_Static M = null;
			Ent_Static H = null;
			Ent_Static P = null;
			Mob_Living M2 = null;
			Mob_Living M3 = null;
			Obj_Item_Projectile P2 = null;

			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/magic/TIMEPARADOX2.ogg", 100, 1, -1 );

			foreach (dynamic _c in Lang13.IterateRange( 1, this.duration - 1 )) {
				i = _c;
				

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this.loc, this.freezerange ), typeof(Ent_Static) )) {
					A = _a;
					

					if ( A is Mob_Living ) {
						M = A;

						if ( this.immune.Contains( M ) ) {
							continue;
						}
						((dynamic)M).stunned = 10;
						((dynamic)M).anchored = 1;

						if ( M is Mob_Living_SimpleAnimal_Hostile ) {
							H = M;
							((dynamic)H).AIStatus = 3;
							((dynamic)H).LoseTarget();
						}
						this.stopped_atoms.Or( M );
					} else if ( A is Obj_Item_Projectile ) {
						P = A;
						((dynamic)P).paused = GlobalVars.TRUE;
						this.stopped_atoms.Or( P );
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( this.stopped_atoms, typeof(Mob_Living) )) {
					M2 = _b;
					

					if ( Map13.GetDistance( GlobalFuncs.get_turf( M2 ), GlobalFuncs.get_turf( this ) ) > this.freezerange ) {
						this.unfreeze_mob( M2 );
						this.stopped_atoms.Remove( M2 );
					}
				}
				Task13.Sleep( 1 );
			}

			foreach (dynamic _d in Lang13.Enumerate( this.stopped_atoms, typeof(Mob_Living) )) {
				M3 = _d;
				
				this.unfreeze_mob( M3 );
			}

			foreach (dynamic _e in Lang13.Enumerate( this.stopped_atoms, typeof(Obj_Item_Projectile) )) {
				P2 = _e;
				
				P2.paused = GlobalVars.FALSE;
			}
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
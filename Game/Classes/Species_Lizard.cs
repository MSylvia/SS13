// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Species_Lizard : Species {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Lizardperson";
			this.id = "lizard";
			this.say_mod = "hisses";
			this.default_color = "00FF00";
			this.roundstart = true;
			this.specflags = new ByTable(new object [] { 1, 8, 16 });
			this.mutant_bodyparts = new ByTable(new object [] { "tail_lizard", "snout", "spines", "horns", "frills", "body_markings" });
			this.default_features = new ByTable().Set( "mcolor", "0F0" ).Set( "tail", "Smooth" ).Set( "snout", "Round" ).Set( "horns", "None" ).Set( "frills", "None" ).Set( "spines", "None" ).Set( "body_markings", "None" );
			this.attack_verb = "slash";
			this.attack_sound = "sound/weapons/slash.ogg";
			this.miss_sound = "sound/weapons/slashmiss.ogg";
			this.meat = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab_Human_Mutant_Lizard);
		}

		// Function from file: species_types.dm
		public override void spec_death( bool? gibbed = null, Mob_Living_Carbon_Human H = null ) {
			
			if ( H != null ) {
				H.endTailWag();
			}
			return;
		}

		// Function from file: species_types.dm
		public override dynamic handle_speech( dynamic message = null, Mob_Living_Carbon_Human H = null ) {
			
			if ( String13.SubStr( message, 1, 2 ) != "*" ) {
				message = GlobalFuncs.regEx_replaceall( message, "(?<!s)s(?!s)", "sss" );
				message = GlobalFuncs.regEx_replaceall( message, "(?<!s)ss(?!s)", "ssss" );
				message = GlobalFuncs.regEx_replaceall( message, "(?<!S)S(?!S)", "SSS" );
				message = GlobalFuncs.regEx_replaceall( message, "(?<!S)SS(?!S)", "SSSS" );
			}
			return message;
		}

		// Function from file: species_types.dm
		public override bool qualifies_for_rank( string rank = null, ByTable features = null ) {
			
			if ( GlobalVars.command_positions.Contains( rank ) ) {
				return false;
			}
			return true;
		}

		// Function from file: species_types.dm
		public override dynamic random_name( string gender = null, bool? unique = null, string lastname = null ) {
			string randname = null;

			
			if ( unique == true ) {
				return GlobalFuncs.random_unique_lizard_name( gender );
			}
			randname = GlobalFuncs.lizard_name( gender );

			if ( Lang13.Bool( lastname ) ) {
				randname += " " + lastname;
			}
			return randname;
		}

	}

}
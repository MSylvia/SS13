// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Wires_Syndicatebomb : Wires {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.random = true;
			this.holder_type = typeof(Obj_Machinery_Syndicatebomb);
			this.wire_count = 5;
		}

		public Wires_Syndicatebomb ( Obj holder = null ) : base( holder ) {
			
		}

		// Function from file: syndicatebomb.dm
		public override void UpdateCut( double? index = null, bool mended = false ) {
			Obj P = null;

			P = this.holder;

			switch ((double?)( index )) {
				case 1:
					
					if ( !mended ) {
						
						if ( Lang13.Bool( ((dynamic)P).active ) ) {
							P.loc.visible_message( new Txt( "<span class='danger'>" ).icon( this.holder ).str( " An alarm sounds! It's go-</span>" ).ToString() );
							((dynamic)P).timer = 0;
						} else {
							((dynamic)P).defused = 1;
						}
					}

					if ( mended ) {
						((dynamic)P).defused = 0;
					}
					break;
				case 2:
					
					if ( !mended && Lang13.Bool( P.anchored ) ) {
						GlobalFuncs.playsound( P.loc, "sound/effects/stealthoff.ogg", 30, 1 );
						P.loc.visible_message( new Txt( "<span class='notice'>" ).icon( this.holder ).str( " The bolts lift out of the ground!</span>" ).ToString() );
						P.anchored = 0;
					}
					break;
				case 8:
					
					if ( !mended && Lang13.Bool( ((dynamic)P).active ) ) {
						P.loc.visible_message( new Txt( "<span class='danger'>" ).icon( this.holder ).str( " An alarm sounds! It's go-</span>" ).ToString() );
						((dynamic)P).timer = 0;
					}
					break;
				case 16:
					
					if ( !mended && Lang13.Bool( ((dynamic)P).active ) ) {
						P.loc.visible_message( new Txt( "<span class='notice'>" ).icon( this.holder ).str( " The timer stops! The bomb has been defused!</span>" ).ToString() );
						P.icon_state = "" + Lang13.Initial( P, "icon_state" ) + "-inactive" + ( Lang13.Bool( ((dynamic)P).open_panel ) ? "-wires" : "" );
						((dynamic)P).active = 0;
						((dynamic)P).defused = 1;
					}
					break;
			}
			return;
		}

		// Function from file: syndicatebomb.dm
		public override void UpdatePulsed( double? index = null ) {
			Obj P = null;

			P = this.holder;

			switch ((double?)( index )) {
				case 1:
					
					if ( Lang13.Bool( ((dynamic)P).active ) ) {
						P.loc.visible_message( new Txt( "<span class='danger'>" ).icon( this.holder ).str( " An alarm sounds! It's go-</span>" ).ToString() );
						((dynamic)P).timer = 0;
					}
					break;
				case 2:
					P.loc.visible_message( new Txt( "<span class='notice'>" ).icon( this.holder ).str( " The bolts spin in place for a moment.</span>" ).ToString() );
					break;
				case 4:
					GlobalFuncs.playsound( P.loc, "sound/machines/chime.ogg", 30, 1 );
					P.loc.visible_message( new Txt( "<span class='notice'>" ).icon( this.holder ).str( " The bomb chirps.</span>" ).ToString() );
					((dynamic)P).timer += 10;
					break;
				case 8:
					GlobalFuncs.playsound( P.loc, "sound/machines/buzz-sigh.ogg", 30, 1 );
					P.loc.visible_message( new Txt( "<span class='danger'>" ).icon( this.holder ).str( " The bomb buzzes ominously!</span>" ).ToString() );

					if ( Convert.ToDouble( ((dynamic)P).timer ) >= 61 ) {
						((dynamic)P).timer = 60;
					}

					if ( Convert.ToDouble( ((dynamic)P).timer ) >= 21 ) {
						((dynamic)P).timer -= 10;
					} else if ( Convert.ToDouble( ((dynamic)P).timer ) >= 11 ) {
						((dynamic)P).timer = 10;
					}
					break;
				case 16:
					
					if ( !Lang13.Bool( ((dynamic)P).active ) && !Lang13.Bool( ((dynamic)P).defused ) ) {
						GlobalFuncs.playsound( P.loc, "sound/machines/click.ogg", 30, 1 );
						P.loc.visible_message( new Txt( "<span class='danger'>" ).icon( this.holder ).str( " You hear the bomb start ticking!</span>" ).ToString() );
						((dynamic)P).active = 1;
						P.icon_state = "" + Lang13.Initial( P, "icon_state" ) + "-active" + ( Lang13.Bool( ((dynamic)P).open_panel ) ? "-wires" : "" );
					} else {
						P.loc.visible_message( new Txt( "<span class='notice'>" ).icon( this.holder ).str( " The bomb seems to hesitate for a moment.</span>" ).ToString() );
						((dynamic)P).timer += 5;
					}
					break;
			}
			return;
		}

		// Function from file: syndicatebomb.dm
		public override bool CanUse( dynamic L = null ) {
			Obj P = null;

			P = this.holder;

			if ( Lang13.Bool( ((dynamic)P).open_panel ) ) {
				return true;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bodycontainer_Crematorium : Obj_Structure_Bodycontainer {

		public dynamic id = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "crema1";
		}

		// Function from file: morgue.dm
		public Obj_Structure_Bodycontainer_Crematorium ( dynamic loc = null ) : base( (object)(loc) ) {
			this.connected = new Obj_Structure_Tray_CTray( this );
			this.connected.connected = this;
			GlobalVars.crematoriums.Add( this );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: morgue.dm
		public void cremate( Mob user = null ) {
			Mob_Living M = null;
			Obj O = null;

			
			if ( this.locked ) {
				return;
			}

			if ( this.contents.len <= 1 ) {
				this.audible_message( "<span class='italics'>You hear a hollow crackle.</span>" );
				return;
			} else {
				this.audible_message( "<span class='italics'>You hear a roar as the crematorium activates.</span>" );
				this.locked = true;
				this.update_icon();

				foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Mob_Living) )) {
					M = _a;
					

					if ( M.stat != 2 ) {
						M.emote( "scream" );
					}

					if ( user != null ) {
						user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] Cremated <b>" + M + "/" + M.ckey + "</b>" );
						GlobalFuncs.log_attack( "[" + GlobalFuncs.time_stamp() + "] <b>" + user + "/" + user.ckey + "</b> cremated <b>" + M + "/" + M.ckey + "</b>" );
					} else {
						GlobalFuncs.log_attack( "[" + GlobalFuncs.time_stamp() + "] <b>UNKNOWN</b> cremated <b>" + M + "/" + M.ckey + "</b>" );
					}
					M.death( true );

					if ( M != null ) {
						M.ghostize();
						GlobalFuncs.qdel( M );
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( this.contents, typeof(Obj) )) {
					O = _b;
					

					if ( O != this.connected ) {
						GlobalFuncs.qdel( O );
					}
				}
				new Obj_Effect_Decal_Cleanable_Ash( this );
				Task13.Sleep( 30 );
				this.locked = false;
				this.update_icon();
				GlobalFuncs.playsound( this.loc, "sound/machines/ding.ogg", 50, 1 );
			}
			return;
		}

		// Function from file: morgue.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( !( this.connected != null ) || this.connected.loc != this ) {
				this.icon_state = "crema0";
			} else {
				
				if ( this.contents.len > 1 ) {
					this.icon_state = "crema2";
				} else {
					this.icon_state = "crema1";
				}

				if ( this.locked ) {
					this.icon_state = "crema_active";
				}
			}
			return null;
		}

		// Function from file: morgue.dm
		public override dynamic Destroy(  ) {
			GlobalVars.crematoriums.Remove( this );
			return base.Destroy();
		}

	}

}
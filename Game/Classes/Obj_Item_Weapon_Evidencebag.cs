// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Evidencebag : Obj_Item_Weapon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "";
			this.w_class = 1;
			this.icon = "icons/obj/storage.dmi";
			this.icon_state = "evidenceobj";
		}

		public Obj_Item_Weapon_Evidencebag ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: evidence.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic I = null;

			
			if ( this.contents.len != 0 ) {
				I = this.contents[1];
				((Ent_Static)user).visible_message( "" + user + " takes " + I + " out of " + this + ".", "<span class='notice'>You take " + I + " out of " + this + ".</span>", "<span class='italics'>You hear someone rustle around in a plastic bag, and remove something.</span>" );
				this.overlays.Cut();
				((Mob)user).put_in_hands( I );
				this.w_class = 1;
				this.icon_state = "evidenceobj";
				this.desc = "An empty evidence bag.";
			} else {
				user.WriteMsg( "" + this + " is empty." );
				this.icon_state = "evidenceobj";
			}
			return null;
		}

		// Function from file: evidence.dm
		public bool evidencebagEquip( dynamic I = null, dynamic user = null ) {
			Ent_Static U = null;
			int xx = 0;
			int yy = 0;
			Image img = null;

			
			if ( !( I is Obj_Item ) || I.anchored == 1 ) {
				return false;
			}

			if ( I is Obj_Item_Weapon_Evidencebag ) {
				user.WriteMsg( "<span class='notice'>You find putting an evidence bag in another evidence bag to be slightly absurd.</span>" );
				return true;
			}

			if ( Convert.ToDouble( I.w_class ) > 3 ) {
				user.WriteMsg( "<span class='notice'>" + I + " won't fit in " + this + ".</span>" );
				return false;
			}

			if ( this.contents.len != 0 ) {
				user.WriteMsg( "<span class='notice'>" + this + " already has something inside it.</span>" );
				return false;
			}

			if ( !( I.loc is Tile ) ) {
				
				if ( I.loc is Obj_Item_Weapon_Storage ) {
					U = I.loc;
					user.client.screen -= I;
					U.contents.Remove( I );
				} else if ( user.l_hand == I ) {
					((Mob)user).drop_l_hand();
				} else if ( user.r_hand == I ) {
					((Mob)user).drop_r_hand();
				} else {
					return false;
				}
			}
			((Ent_Static)user).visible_message( "" + user + " puts " + I + " into " + this + ".", "<span class='notice'>You put " + I + " inside " + this + ".</span>", "<span class='italics'>You hear a rustle as someone puts something into a plastic bag.</span>" );
			this.icon_state = "evidence";
			xx = Convert.ToInt32( I.pixel_x );
			yy = Convert.ToInt32( I.pixel_y );
			I.pixel_x = 0;
			I.pixel_y = 0;
			img = new Image( I, null, null, GlobalVars.FLOAT_LAYER );
			I.pixel_x = xx;
			I.pixel_y = yy;
			this.overlays.Add( img );
			this.overlays.Add( "evidence" );
			this.desc = "An evidence bag containing " + I + ". " + I.desc;
			I.loc = this;
			this.w_class = I.w_class;
			return true;
		}

		// Function from file: evidence.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( this.evidencebagEquip( A, user ) ) {
				return 1;
			}
			return null;
		}

		// Function from file: evidence.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( !( proximity_flag == true ) || this.loc == target ) {
				return false;
			}
			this.evidencebagEquip( target, user );
			return false;
		}

	}

}
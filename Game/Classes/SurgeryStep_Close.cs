// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_Close : SurgeryStep {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "mend incision";
			this.implements = new ByTable().Set( typeof(Obj_Item_Weapon_Cautery), 100 ).Set( typeof(Obj_Item_Weapon_Weldingtool), 70 ).Set( typeof(Obj_Item_Weapon_Lighter), 45 ).Set( typeof(Obj_Item_Weapon_Match), 20 );
			this.time = 24;
		}

		// Function from file: generic_steps.dm
		public override bool success( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			
			if ( Lang13.Bool( Lang13.FindIn( typeof(SurgeryStep_Saw), surgery.steps ) ) ) {
				((dynamic)target).heal_organ_damage( 45, 0 );
			}
			return base.success( (object)(user), target, target_zone, (object)(tool), surgery );
		}

		// Function from file: generic_steps.dm
		public override bool tool_check( dynamic user = null, dynamic tool = null ) {
			dynamic WT = null;
			dynamic L = null;
			dynamic M = null;

			
			if ( tool is Obj_Item_Weapon_Cautery ) {
				return true;
			}

			if ( tool is Obj_Item_Weapon_Weldingtool ) {
				WT = tool;

				if ( ((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
					return true;
				}
			} else if ( tool is Obj_Item_Weapon_Lighter ) {
				L = tool;

				if ( Lang13.Bool( L.lit ) ) {
					return true;
				}
			} else if ( tool is Obj_Item_Weapon_Match ) {
				M = tool;

				if ( Lang13.Bool( M.lit ) ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: generic_steps.dm
		public override int preop( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			((Ent_Static)user).visible_message( "" + user + " begins to mend the incision in " + target + "'s " + GlobalFuncs.parse_zone( target_zone ) + ".", "<span class='notice'>You begin to mend the incision in " + target + "'s " + GlobalFuncs.parse_zone( target_zone ) + "...</span>" );
			return 0;
		}

	}

}
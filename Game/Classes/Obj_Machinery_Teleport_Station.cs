// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Teleport_Station : Obj_Machinery_Teleport {

		public bool engaged = false;
		public dynamic teleporter_console = null;
		public dynamic teleporter_hub = null;
		public ByTable linked_stations = new ByTable();
		public int efficiency = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.idle_power_usage = 10;
			this.active_power_usage = 2000;
			this.icon_state = "controller";
		}

		// Function from file: teleporter.dm
		public Obj_Machinery_Teleport_Station ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_TeleporterStation( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_Ore_BluespaceCrystal_Artificial( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_Ore_BluespaceCrystal_Artificial( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Capacitor( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Capacitor( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_ConsoleScreen( null ) );
			this.RefreshParts();
			this.link_console_and_hub();
			return;
		}

		// Function from file: teleporter.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.panel_open == true ) {
				this.icon_state = "controller-o";
			} else if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "controller-p";
			} else {
				this.icon_state = "controller";
			}
			return null;
		}

		// Function from file: teleporter.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();

			if ( Lang13.Bool( this.teleporter_hub ) ) {
				this.teleporter_hub.update_icon();
			}
			return;
		}

		// Function from file: teleporter.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !( this.panel_open == true ) ) {
				this.toggle( a );
			}
			return null;
		}

		// Function from file: teleporter.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.attack_hand();
			return null;
		}

		// Function from file: teleporter.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand();
			return null;
		}

		// Function from file: teleporter.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic M = null;
			dynamic M2 = null;

			
			if ( A is Obj_Item_Device_Multitool && !( this.panel_open == true ) ) {
				M = A;

				if ( Lang13.Bool( M.buffer ) && M.buffer is Obj_Machinery_Teleport_Station && M.buffer != this ) {
					
					if ( this.linked_stations.len < this.efficiency ) {
						this.linked_stations.Add( M.buffer );
						M.buffer = null;
						user.WriteMsg( "<span class='caution'>You upload the data from the " + A.name + "'s buffer.</span>" );
					} else {
						user.WriteMsg( "<span class='alert'>This station can't hold more information, try to use better parts.</span>" );
					}
				}
			}

			if ( this.default_deconstruction_screwdriver( user, "controller-o", "controller", A ) ) {
				this.update_icon();
				return null;
			}

			if ( this.exchange_parts( user, A ) ) {
				return null;
			}
			this.default_deconstruction_crowbar( A );

			if ( this.panel_open == true ) {
				
				if ( A is Obj_Item_Device_Multitool ) {
					M2 = A;
					M2.buffer = this;
					user.WriteMsg( "<span class='caution'>You download the data to the " + A.name + "'s buffer.</span>" );
					return null;
				}

				if ( A is Obj_Item_Weapon_Wirecutters ) {
					this.link_console_and_hub();
					user.WriteMsg( "<span class='caution'>You reconnect the station to nearby machinery.</span>" );
					return null;
				}
			}
			return null;
		}

		// Function from file: teleporter.dm
		public override dynamic Destroy(  ) {
			
			if ( Lang13.Bool( this.teleporter_hub ) ) {
				this.teleporter_hub.power_station = null;
				this.teleporter_hub.update_icon();
				this.teleporter_hub = null;
			}

			if ( Lang13.Bool( this.teleporter_console ) ) {
				this.teleporter_console.power_station = null;
				this.teleporter_console = null;
			}
			return base.Destroy();
		}

		// Function from file: teleporter.dm
		public void toggle( dynamic user = null ) {
			
			if ( ( this.stat & 3 ) != 0 || !Lang13.Bool( this.teleporter_hub ) || !Lang13.Bool( this.teleporter_console ) ) {
				return;
			}

			if ( Lang13.Bool( this.teleporter_console.target ) ) {
				this.engaged = !this.engaged;
				this.f_use_power( 5000 );
				this.visible_message( "<span class='notice'>Teleporter " + ( this.engaged ? "" : "dis" ) + "engaged!</span>" );
			} else {
				this.visible_message( "<span class='alert'>No target detected.</span>" );
				this.engaged = false;
			}
			this.teleporter_hub.update_icon();
			this.add_fingerprint( user );
			return;
		}

		// Function from file: teleporter.dm
		public bool link_console_and_hub(  ) {
			
			foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { GlobalVars.NORTH, GlobalVars.EAST, GlobalVars.SOUTH, GlobalVars.WEST }) )) {
				this.dir = Convert.ToInt32( _a );
				
				this.teleporter_hub = Lang13.FindIn( typeof(Obj_Machinery_Teleport_Hub), Map13.GetStep( this, this.dir ) );

				if ( Lang13.Bool( this.teleporter_hub ) ) {
					this.teleporter_hub.link_power_station();
					break;
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { GlobalVars.NORTH, GlobalVars.EAST, GlobalVars.SOUTH, GlobalVars.WEST }) )) {
				this.dir = Convert.ToInt32( _b );
				
				this.teleporter_console = Lang13.FindIn( typeof(Obj_Machinery_Computer_Teleporter), Map13.GetStep( this, this.dir ) );

				if ( Lang13.Bool( this.teleporter_console ) ) {
					((Obj_Machinery_Computer_Teleporter)this.teleporter_console).link_power_station();
					break;
				}
			}
			return Lang13.Bool( this.teleporter_hub ) && Lang13.Bool( this.teleporter_console );
		}

		// Function from file: teleporter.dm
		public override void RefreshParts(  ) {
			dynamic E = null;
			Obj_Item_Weapon_StockParts_Capacitor C = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_Capacitor) )) {
				C = _a;
				
				E += C.rating;
			}
			this.efficiency = Convert.ToInt32( E - 1 );
			return;
		}

		// Function from file: teleporter.dm
		public override void initialize(  ) {
			this.link_console_and_hub();
			return;
		}

	}

}
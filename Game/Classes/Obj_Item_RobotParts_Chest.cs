// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_RobotParts_Chest : Obj_Item_RobotParts {

		public bool wires = false;
		public dynamic cell = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "chest";
		}

		public Obj_Item_RobotParts_Chest ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: robot_parts.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic coil = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_StockParts_Cell ) {
				
				if ( Lang13.Bool( this.cell ) ) {
					user.WriteMsg( "<span class='warning'>You have already inserted a cell!</span>" );
					return null;
				} else {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					A.loc = this;
					this.cell = A;
					user.WriteMsg( "<span class='notice'>You insert the cell.</span>" );
				}
			}

			if ( A is Obj_Item_Stack_CableCoil ) {
				
				if ( this.wires ) {
					user.WriteMsg( "<span class='warning'>You have already inserted wire!</span>" );
					return null;
				}
				coil = A;

				if ( Lang13.Bool( coil.use( 1 ) ) ) {
					this.wires = true;
					user.WriteMsg( "<span class='notice'>You insert the wire.</span>" );
				} else {
					user.WriteMsg( "<span class='warning'>You need one length of coil to wire it!</span>" );
				}
			}
			return null;
		}

	}

}
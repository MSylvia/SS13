// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Wires_RND : Wires {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.random = true;
			this.holder_type = typeof(Obj_Machinery_RND);
			this.wire_count = 6;
		}

		public Wires_RND ( Obj holder = null ) : base( holder ) {
			
		}

		// Function from file: r_n_d.dm
		public override string GetInteractWindow(  ) {
			string _default = null;

			Obj R = null;

			_default = base.GetInteractWindow();
			R = this.holder;
			_default += "<br>The red light is " + ( Lang13.Bool( ((dynamic)R).disabled ) ? "off" : "on" ) + ".<br>";
			_default += "The green light is " + ( Lang13.Bool( ((dynamic)R).shocked ) ? "off" : "on" ) + ".<br>";
			_default += "The blue light is " + ( Lang13.Bool( ((dynamic)R).hacked ) ? "off" : "on" ) + ".<br>";
			return _default;
		}

		// Function from file: r_n_d.dm
		public override void UpdateCut( double? index = null, bool mended = false ) {
			Obj R = null;

			R = this.holder;

			switch ((double?)( index )) {
				case 1:
					((dynamic)R).hacked = !mended;
					break;
				case 4:
					((dynamic)R).disabled = !mended;
					break;
				case 2:
					((dynamic)R).shocked = !mended;
					break;
			}
			return;
		}

		// Function from file: r_n_d.dm
		public override void UpdatePulsed( double? index = null ) {
			Obj R = null;
			dynamic Rshock = null;

			R = this.holder;

			switch ((double?)( index )) {
				case 1:
					((dynamic)R).hacked = !Lang13.Bool( ((dynamic)R).hacked );
					break;
				case 4:
					((dynamic)R).disabled = !Lang13.Bool( ((dynamic)R).disabled );
					break;
				case 2:
					Rshock = ((dynamic)R).shocked;
					((dynamic)R).shocked = !Lang13.Bool( ((dynamic)R).shocked );
					Task13.Schedule( 100, (Task13.Closure)(() => {
						
						if ( R != null ) {
							((dynamic)R).shocked = Rshock;
						}
						return;
					}));
					break;
			}
			return;
		}

		// Function from file: r_n_d.dm
		public override bool CanUse( dynamic L = null ) {
			Obj R = null;

			R = this.holder;

			if ( Lang13.Bool( ((dynamic)R).panel_open ) ) {
				return true;
			}
			return false;
		}

	}

}
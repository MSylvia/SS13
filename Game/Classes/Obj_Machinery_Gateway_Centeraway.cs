// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Gateway_Centeraway : Obj_Machinery_Gateway {

		public bool calibrated = true;
		public ByTable linked = new ByTable();
		public bool ready = false;
		public dynamic stationgate = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.use_power = 0;
			this.icon_state = "offcenter";
		}

		public Obj_Machinery_Gateway_Centeraway ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: gateway.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Device_Multitool ) {
				
				if ( this.calibrated ) {
					user.WriteMsg( "ÿ\"The gate is already calibrated, there is no work for you to do here." );
					return null;
				} else {
					user.WriteMsg( "<span class='boldnotice'>Recalibration successful!</span>: ÿ\"This gate's systems have been fine tuned.  Travel to this gate will now be on target." );
					this.calibrated = true;
					return null;
				}
			}
			return null;
		}

		// Function from file: gateway.dm
		public override bool Bumped( dynamic AM = null ) {
			Obj_Item_Weapon_Implant_Exile E = null;
			dynamic M = null;

			
			if ( !this.ready ) {
				return false;
			}

			if ( !this.active ) {
				return false;
			}

			if ( !Lang13.Bool( this.stationgate ) || GlobalFuncs.qdeleted( this.stationgate ) ) {
				return false;
			}

			if ( AM is Mob_Living_Carbon ) {
				
				foreach (dynamic _a in Lang13.Enumerate( AM, typeof(Obj_Item_Weapon_Implant_Exile) )) {
					E = _a;
					

					if ( E.imp_in == AM ) {
						AM.WriteMsg( "ÿ\"The station gate has detected your exile implant and is blocking your entry." );
						return false;
					}
				}
			}
			AM.loc = Map13.GetStep( this.stationgate.loc, ((int)( GlobalVars.SOUTH )) );
			AM.dir = GlobalVars.SOUTH;

			if ( AM is Mob ) {
				M = AM;

				if ( Lang13.Bool( M.client ) ) {
					M.client.move_delay = Num13.MaxInt( Game13.time + 5, Convert.ToInt32( M.client.move_delay ) );
				}
			}
			return false;
		}

		// Function from file: gateway.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !this.ready ) {
				this.detect();
				return null;
			}

			if ( !this.active ) {
				this.toggleon( a );
				return null;
			}
			this.toggleoff();
			return null;
		}

		// Function from file: gateway.dm
		public void toggleoff(  ) {
			Obj_Machinery_Gateway G = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.linked, typeof(Obj_Machinery_Gateway) )) {
				G = _a;
				
				G.active = false;
				G.update_icon();
			}
			this.active = false;
			this.update_icon();
			return;
		}

		// Function from file: gateway.dm
		public void toggleon( dynamic user = null ) {
			Obj_Machinery_Gateway G = null;

			
			if ( !this.ready ) {
				return;
			}

			if ( this.linked.len != 8 ) {
				return;
			}

			if ( !Lang13.Bool( this.stationgate ) ) {
				user.WriteMsg( "<span class='notice'>Error: No destination found.</span>" );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.linked, typeof(Obj_Machinery_Gateway) )) {
				G = _a;
				
				G.active = true;
				G.update_icon();
			}
			this.active = true;
			this.update_icon();
			return;
		}

		// Function from file: gateway.dm
		public void detect(  ) {
			Ent_Static T = null;
			dynamic i = null;
			dynamic G = null;

			this.linked = new ByTable();
			T = this.loc;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.alldirs )) {
				i = _a;
				
				T = Map13.GetStep( this.loc, Convert.ToInt32( i ) );
				G = Lang13.FindIn( typeof(Obj_Machinery_Gateway), T );

				if ( Lang13.Bool( G ) ) {
					this.linked.Add( G );
					continue;
				}
				this.ready = false;
				this.toggleoff();
				break;
			}

			if ( this.linked.len == 8 ) {
				this.ready = true;
			}
			return;
		}

		// Function from file: gateway.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.active ) {
				this.icon_state = "oncenter";
				return null;
			}
			this.icon_state = "offcenter";
			return null;
		}

		// Function from file: gateway.dm
		public override void initialize(  ) {
			this.update_icon();
			this.stationgate = Lang13.FindObj( typeof(Obj_Machinery_Gateway_Centerstation) );
			return;
		}

		// Function from file: observer.dm
		public override void attack_ghost( Mob user = null ) {
			
			if ( Lang13.Bool( this.stationgate ) ) {
				user.loc = this.stationgate.loc;
			} else {
				user.WriteMsg( "" + this + " has no destination." );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Head_Helmet_Plate_Crusader_Prophet : Obj_Item_Clothing_Head_Helmet_Plate_Crusader {

		public Action_Innate_Godspeak speak2god = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.alternate_worn_icon = "icons/mob/large-worn-icons/64x64/head.dmi";
			this.armor = new ByTable().Set( "melee", 60 ).Set( "bullet", 60 ).Set( "laser", 60 ).Set( "energy", 50 ).Set( "bomb", 70 ).Set( "bio", 50 ).Set( "rad", 50 );
			this.worn_x_dimension = 64;
			this.worn_y_dimension = 64;
		}

		public Obj_Item_Clothing_Head_Helmet_Plate_Crusader_Prophet ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: items.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( !GlobalFuncs.is_handofgod_cultist( user ) ) {
				user.WriteMsg( "A brownish, religious-looking hat." );
			} else {
				user.WriteMsg( "A hat bestowed upon a prophet of gods and demigods." );

				if ( this.speak2god != null && this.speak2god.god != null ) {
					user.WriteMsg( "This hat belongs to the " + this.speak2god.god.side + " god." );
				}
			}
			return 0;
		}

		// Function from file: items.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.speak2god != null ) {
				
				if ( this.speak2god.owner == user ) {
					this.speak2god.Remove( user );
					user.WriteMsg( "<span class='boldnotice'>You lose the ability to speak to the god this hat belongs to!</span>" );
				}
			}
			return false;
		}

		// Function from file: items.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			
			if ( slot == 11 ) {
				
				if ( this.speak2god != null ) {
					this.speak2god.Grant( user );
					user.WriteMsg( "<span class='boldnotice'>You gain the ability to speak to the god this hat belongs to!</span>" );
				}
			}
			return;
		}

		// Function from file: items.dm
		public void assign_deity( Mob_Camera_God G = null ) {
			
			if ( this.speak2god != null ) {
				
				if ( Lang13.Bool( this.speak2god.owner ) ) {
					this.speak2god.Remove( this.speak2god.owner );
				}
			} else {
				this.speak2god = new Action_Innate_Godspeak();
			}
			this.speak2god.god = G;
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Mask_Facehugger : Obj_Item_Clothing_Mask {

		public int stat = 0;
		public bool sterile = false;
		public bool real = true;
		public int strength = 5;
		public int attached = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "facehugger";
			this.w_class = 1;
			this.flags = 8;
			this.throw_range = 5;
			this.tint = 3;
			this.flags_cover = 10;
			this.icon = "icons/mob/alien.dmi";
			this.icon_state = "facehugger";
			this.layer = 4;
		}

		public Obj_Item_Clothing_Mask_Facehugger ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: facehugger.dm
		public virtual void Die(  ) {
			
			if ( this.stat == 2 ) {
				return;
			}
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_dead";
			this.item_state = "facehugger_inactive";
			this.stat = 2;
			this.visible_message( "<span class='danger'>" + this + " curls up into a ball!</span>" );
			return;
		}

		// Function from file: facehugger.dm
		public void GoIdle(  ) {
			
			if ( this.stat == 2 || this.stat == 1 ) {
				return;
			}
			this.stat = 1;
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_inactive";
			Task13.Schedule( Rand13.Int( GlobalVars.MIN_ACTIVE_TIME, GlobalVars.MAX_ACTIVE_TIME ), (Task13.Closure)(() => {
				this.GoActive();
				return;
			}));
			return;
		}

		// Function from file: facehugger.dm
		public void GoActive(  ) {
			
			if ( this.stat == 2 || this.stat == 0 ) {
				return;
			}
			this.stat = 0;
			this.icon_state = "" + Lang13.Initial( this, "icon_state" );
			return;
		}

		// Function from file: facehugger.dm
		public void Impregnate( dynamic target = null ) {
			dynamic C = null;
			dynamic C2 = null;

			
			if ( !Lang13.Bool( target ) || Convert.ToInt32( target.stat ) == 2 ) {
				return;
			}

			if ( target is Mob_Living_Carbon ) {
				C = target;

				if ( C.wear_mask != this ) {
					return;
				}
			}

			if ( !this.sterile ) {
				((Ent_Static)target).visible_message( "<span class='danger'>" + this + " falls limp after violating " + target + "'s face!</span>", "<span class='userdanger'>" + this + " falls limp after violating " + target + "'s face!</span>" );
				this.Die();
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_impregnated";

				if ( !Lang13.Bool( ((Mob)target).getlimb( typeof(Obj_Item_Organ_Limb_Robot_Chest) ) ) && !Lang13.Bool( ((Mob)target).getorgan( typeof(Obj_Item_Organ_Internal_BodyEgg_AlienEmbryo) ) ) ) {
					new Obj_Item_Organ_Internal_BodyEgg_AlienEmbryo( target );
				}

				if ( target is Mob_Living_SimpleAnimal_Pet_Dog_Corgi ) {
					C2 = target;
					this.loc = GlobalFuncs.get_turf( C2 );
					C2.facehugger = null;
				}
			} else {
				((Ent_Static)target).visible_message( "<span class='danger'>" + this + " violates " + target + "'s face!</span>", "<span class='userdanger'>" + this + " violates " + target + "'s face!</span>" );
			}
			return;
		}

		// Function from file: facehugger.dm
		public bool Attach( dynamic M = null ) {
			dynamic H = null;
			dynamic target = null;
			dynamic W = null;
			dynamic C = null;

			
			if ( !( M is Mob_Living ) ) {
				return false;
			}

			if ( !( M is Mob_Living_SimpleAnimal_Pet_Dog_Corgi ) && !( M is Mob_Living_Carbon ) || M is Mob_Living_Carbon_Alien ) {
				return false;
			}

			if ( this.attached != 0 ) {
				return false;
			} else {
				this.attached++;
				Task13.Schedule( GlobalVars.MAX_IMPREGNATION_TIME, (Task13.Closure)(() => {
					this.attached = 0;
					return;
				}));
			}

			if ( Lang13.Bool( ((Mob)M).getorgan( typeof(Obj_Item_Organ_Internal_Alien_Hivenode) ) ) ) {
				return false;
			}

			if ( Lang13.Bool( ((Mob)M).getorgan( typeof(Obj_Item_Organ_Internal_BodyEgg_AlienEmbryo) ) ) ) {
				return false;
			}

			if ( this.loc == M ) {
				return false;
			}

			if ( this.stat != 0 ) {
				return false;
			}

			if ( !this.sterile ) {
				((Mob_Living)M).take_organ_damage( this.strength, 0 );
			}
			((Ent_Static)M).visible_message( "<span class='danger'>" + this + " leaps at " + M + "'s face!</span>", "<span class='userdanger'>" + this + " leaps at " + M + "'s face!</span>" );

			if ( M is Mob_Living_Carbon_Human ) {
				H = M;

				if ( ((Mob_Living_Carbon)H).is_mouth_covered( true ) ) {
					((Ent_Static)H).visible_message( "<span class='danger'>" + this + " smashes against " + H + "'s " + H.head + "!</span>", "<span class='userdanger'>" + this + " smashes against " + H + "'s " + H.head + "!</span>" );
					this.Die();
					return false;
				}
			}

			if ( M is Mob_Living_Carbon ) {
				target = M;

				if ( Lang13.Bool( target.wear_mask ) ) {
					
					if ( Rand13.PercentChance( 20 ) ) {
						return false;
					}
					W = target.wear_mask;

					if ( Lang13.Bool( W.flags & 2 ) ) {
						return false;
					}
					((Mob)target).unEquip( W );
					((Ent_Static)target).visible_message( "<span class='danger'>" + this + " tears " + W + " off of " + target + "'s face!</span>", "<span class='userdanger'>" + this + " tears " + W + " off of " + target + "'s face!</span>" );
				}
				this.loc = target;
				((Mob)target).equip_to_slot( this, 2 );

				if ( !this.sterile ) {
					((Mob)M).Paralyse( 25 );
				}
			} else if ( M is Mob_Living_SimpleAnimal_Pet_Dog_Corgi ) {
				C = M;
				this.loc = C;
				C.facehugger = this;
				((Mob)C).regenerate_icons();
			}
			this.GoIdle();
			Task13.Schedule( Rand13.Int( GlobalVars.MIN_IMPREGNATION_TIME, GlobalVars.MAX_IMPREGNATION_TIME ), (Task13.Closure)(() => {
				this.Impregnate( M );
				return;
			}));
			return true;
		}

		// Function from file: facehugger.dm
		public override bool throw_impact( dynamic target = null, Mob_Living_Carbon thrower = null ) {
			base.throw_impact( (object)(target), thrower );

			if ( this.stat == 0 ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" );
				this.Attach( target );
			}
			return false;
		}

		// Function from file: facehugger.dm
		public override bool throw_at( dynamic target = null, double? range = null, dynamic speed = null, dynamic thrower = null, bool? spin = null, bool? diagonals_first = null ) {
			
			if ( !base.throw_at( (object)(target), range, (object)(speed), (object)(thrower), spin, diagonals_first ) ) {
				return false;
			}

			if ( this.stat == 0 ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_thrown";
				Task13.Schedule( 15, (Task13.Closure)(() => {
					
					if ( this.icon_state == "" + Lang13.Initial( this, "icon_state" ) + "_thrown" ) {
						this.icon_state = "" + Lang13.Initial( this, "icon_state" );
					}
					return;
				}));
			}
			return false;
		}

		// Function from file: facehugger.dm
		public override bool HasProximity( dynamic AM = null ) {
			
			if ( GlobalFuncs.CanHug( AM ) && this.Adjacent( AM ) ) {
				return this.Attach( AM );
			}
			return false;
		}

		// Function from file: facehugger.dm
		public override bool on_found( dynamic finder = null ) {
			
			if ( this.stat == 0 ) {
				return this.HasProximity( finder );
			}
			return false;
		}

		// Function from file: facehugger.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			this.HasProximity( O );
			return null;
		}

		// Function from file: facehugger.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			this.Attach( user );
			return;
		}

		// Function from file: facehugger.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			
			if ( Convert.ToDouble( exposed_temperature ) > 300 ) {
				this.Die();
			}
			return null;
		}

		// Function from file: facehugger.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( Lang13.Bool( P.damage ) ) {
				this.Die();
			}
			return null;
		}

		// Function from file: facehugger.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( Lang13.Bool( A.force ) ) {
				this.Die();
			}
			return null;
		}

		// Function from file: facehugger.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( !this.real ) {
				return 0;
			}

			switch ((int)( this.stat )) {
				case 2:
				case 1:
					user.WriteMsg( "<span class='boldannounce'>" + this + " is not moving.</span>" );
					break;
				case 0:
					user.WriteMsg( "<span class='boldannounce'>" + this + " seems to be active!</span>" );
					break;
			}

			if ( this.sterile ) {
				user.WriteMsg( "<span class='boldannounce'>It looks like the proboscis has been removed.</span>" );
			}
			return 0;
		}

		// Function from file: facehugger.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			base.attack( (object)(M), (object)(user), def_zone );
			((Mob)user).unEquip( this );
			this.Attach( M );
			return false;
		}

		// Function from file: facehugger.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.stat == 0 && !this.sterile && !( a is Mob_Living_Carbon_Alien ) ) {
				
				if ( this.Attach( a ) ) {
					return null;
				}
			}
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: facehugger.dm
		public override bool attack_alien( dynamic user = null ) {
			this.attack_hand( user );
			return false;
		}

	}

}
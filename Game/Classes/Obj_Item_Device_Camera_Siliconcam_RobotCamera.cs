// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Camera_Siliconcam_RobotCamera : Obj_Item_Device_Camera_Siliconcam {

		public Obj_Item_Device_Camera_Siliconcam_RobotCamera ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photography.dm
		public void borgprint(  ) {
			ByTable nametemp = null;
			dynamic find = null;
			Picture selection = null;
			Ent_Static C = null;
			Obj_Item_Device_Camera_Siliconcam targetcam = null;
			Picture t = null;
			Picture q = null;
			Obj_Item_Weapon_Photo p = null;

			nametemp = new ByTable();
			C = this.loc;
			targetcam = null;

			if ( Convert.ToDouble( ((dynamic)C).toner ) < 20 ) {
				Task13.User.WriteMsg( "Insufficent toner to print image." );
				return;
			}

			if ( Lang13.Bool( ((dynamic)C).connected_ai ) ) {
				targetcam = ((dynamic)C).connected_ai.aicamera;
			} else {
				targetcam = ((dynamic)C).aicamera;
			}

			if ( targetcam.aipictures.len == 0 ) {
				Task13.User.WriteMsg( "<span class='userdanger'>No images saved</span>" );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( targetcam.aipictures, typeof(Picture) )) {
				t = _a;
				
				nametemp.Add( t.fields["name"] );
			}
			find = Interface13.Input( "Select image (numbered in order taken)", null, null, null, nametemp, InputType.Any );

			foreach (dynamic _b in Lang13.Enumerate( targetcam.aipictures, typeof(Picture) )) {
				q = _b;
				

				if ( q.fields["name"] == find ) {
					selection = q;
					break;
				}
			}
			p = new Obj_Item_Weapon_Photo( C.loc );
			p.photocreate( selection.fields["icon"], selection.fields["img"], selection.fields["desc"], selection.fields["blueprints"] );
			p.pixel_x = Rand13.Int( -10, 10 );
			p.pixel_y = Rand13.Int( -10, 10 );
			((dynamic)C).toner -= 20;
			this.visible_message( "" + C.name + " spits out a photograph from a narrow slot on it's chassis." );
			Task13.User.WriteMsg( "<span class='notice'>You print a photograph.</span>" );
			return;
		}

		// Function from file: photography.dm
		[Verb]
		[VerbInfo( name: "Print Image", group: "Robot Commands", access: VerbAccess.InUserContents, range: 127 )]
		public void borgprinting(  ) {
			
			if ( Task13.User.stat == 2 ) {
				return;
			}
			this.borgprint();
			return;
		}

	}

}
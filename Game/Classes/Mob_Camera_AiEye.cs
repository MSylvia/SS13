// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Camera_AiEye : Mob_Camera {

		public ByTable visibleCameraChunks = new ByTable();
		public Mob_Living_Silicon_Ai ai = null;
		public bool? relay_speech = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.invisibility = 100;
		}

		public Mob_Camera_AiEye ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: eye.dm
		public override string Hear( string message = null, dynamic speaker = null, int message_langs = 0, dynamic raw_message = null, dynamic radio_freq = null, ByTable spans = null ) {
			
			if ( this.relay_speech == true && Lang13.Bool( speaker ) && this.ai != null && !Lang13.Bool( radio_freq ) && speaker != this.ai && GlobalFuncs.near_camera( speaker ) ) {
				this.ai.relay_speech( message, speaker, message_langs, raw_message, radio_freq, spans );
			}
			return null;
		}

		// Function from file: eye.dm
		public override dynamic Destroy(  ) {
			this.ai = null;
			return base.Destroy();
		}

		// Function from file: eye.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			return false;
		}

		// Function from file: eye.dm
		public virtual Client GetViewerClient(  ) {
			
			if ( this.ai != null ) {
				return this.ai.client;
			}
			return null;
		}

		// Function from file: eye.dm
		public virtual void setLoc( dynamic T = null ) {
			dynamic H = null;

			
			if ( this.ai != null ) {
				
				if ( !( this.ai.loc is Tile ) ) {
					return;
				}
				T = GlobalFuncs.get_turf( T );
				this.loc = T;
				GlobalVars.cameranet.visibility( this );

				if ( this.ai.client != null ) {
					this.ai.client.eye = this;
				}

				if ( this.ai.current is Obj_Machinery_Hologram_Holopad ) {
					H = this.ai.current;
					((Obj_Machinery_Hologram_Holopad)H).move_hologram( this.ai );
				}
			}
			return;
		}

	}

}
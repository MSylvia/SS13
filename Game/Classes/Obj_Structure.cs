// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure : Obj {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pressure_resistance = 8;
			this.icon = "icons/obj/structures.dmi";
		}

		// Function from file: structures.dm
		public Obj_Structure ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.smooth != 0 ) {
				GlobalFuncs.smooth_icon( this );
				GlobalFuncs.smooth_icon_neighbors( this );
				this.icon_state = "";
			}

			if ( GlobalVars.ticker != null ) {
				GlobalVars.cameranet.updateVisibility( this );
			}
			return;
		}

		// Function from file: structures.dm
		public override bool mech_melee_attack( Obj_Mecha M = null ) {
			
			if ( M.damtype == "brute" ) {
				this.visible_message( "<span class='danger'>" + M.name + " has hit " + this + ".</span>" );
				return true;
			}
			return false;
		}

		// Function from file: structures.dm
		public override dynamic Destroy(  ) {
			
			if ( GlobalVars.ticker != null ) {
				GlobalVars.cameranet.updateVisibility( this );
			}

			if ( this.opacity ) {
				this.UpdateAffectingLights();
			}

			if ( this.smooth != 0 ) {
				GlobalFuncs.smooth_icon_neighbors( this );
			}
			return base.Destroy();
		}

		// Function from file: structures.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( !this.density ) {
				GlobalFuncs.qdel( this );
			}

			if ( Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

	}

}
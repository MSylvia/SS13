// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_SyndicateBeacon : Obj_Machinery {

		public string temptext = "";
		public bool selfdestructing = false;
		public int charges = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/device.dmi";
			this.icon_state = "syndbeacon";
		}

		public Obj_Machinery_SyndicateBeacon ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: syndicatebeacon.dm
		public void selfdestruct(  ) {
			this.selfdestructing = true;
			Task13.Schedule( 0, (Task13.Closure)(() => {
				GlobalFuncs.explosion( this.loc, Rand13.Int( 3, 8 ), Rand13.Int( 1, 3 ), 1, 10 );
				return;
			}));
			return;
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic M = null;
			dynamic N = null;
			string objective = null;
			Objective custom_objective = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["betraitor"] ) ) {
				
				if ( this.charges < 1 ) {
					this.updateUsrDialog();
					return null;
				}
				M = Lang13.FindObj( href_list["traitormob"] );

				if ( Lang13.Bool( M.mind.special_role ) ) {
					this.temptext = "<i>We have no need for you at this time. Have a pleasant day.</i><br>";
					this.updateUsrDialog();
					return null;
				}
				this.charges -= 1;

				switch ((int)( Rand13.Int( 1, 2 ) )) {
					case 1:
						this.temptext = "<font color=red><i><b>Double-crosser. You planned to betray us from the start. Allow us to repay the favor in kind.</b></i></font>";
						this.updateUsrDialog();
						Task13.Schedule( Rand13.Int( 50, 200 ), (Task13.Closure)(() => {
							this.selfdestruct();
							return;
						}));
						return null;
						break;
				}

				if ( M is Mob_Living_Carbon_Human ) {
					N = M;
					((GameMode)GlobalVars.ticker.mode).equip_traitor( N );
					GlobalVars.ticker.mode.traitors.Add( N.mind );
					N.mind.special_role = "traitor";
					objective = "Free Objective";

					dynamic _b = Rand13.Int( 1, 100 ); // Was a switch-case, sorry for the mess.
					if ( 1<=_b&&_b<=50 ) {
						objective = "Steal " + Rand13.Pick(new object [] { "a hand teleporter", "the Captain's antique laser gun", "a jetpack", "the Captain's ID", "the Captain's jumpsuit" }) + ".";
					} else if ( 51<=_b&&_b<=60 ) {
						objective = "Destroy 70% or more of the station's plasma tanks.";
					} else if ( 61<=_b&&_b<=70 ) {
						objective = "Cut power to 80% or more of the station's tiles.";
					} else if ( 71<=_b&&_b<=80 ) {
						objective = "Destroy the AI.";
					} else if ( 81<=_b&&_b<=90 ) {
						objective = "Kill all monkeys aboard the station.";
					} else {
						objective = "Make certain at least 80% of the station evacuates on the shuttle.";
					}
					custom_objective = new Objective( objective );
					custom_objective.owner = N.mind;
					N.mind.objectives.Add( custom_objective );
					GlobalFuncs.add_objective( N.mind, typeof(Objective_EscapeObj_Escape), true );
					M.WriteMsg( "<B>You have joined the ranks of the Syndicate and become a traitor to the station!</B>" );
				}
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			string honorific = null;

			Task13.User.set_machine( this );
			dat = "<font color=#005500><i>Scanning " + Rand13.Pick(new object [] { "retina pattern", "voice print", "fingerprints", "dna sequence" }) + "...<br>Identity confirmed,<br></i></font>";

			if ( a is Mob_Living_Carbon_Human || a is Mob_Living_Silicon_Ai ) {
				
				if ( GlobalFuncs.is_special_character( a ) != 0 ) {
					dat += "<font color=#07700><i>Operative record found. Greetings, Agent " + a.name + ".</i></font><br>";
				} else if ( this.charges < 1 ) {
					dat += "<TT>Connection severed.</TT><BR>";
				} else {
					honorific = "Mr.";

					if ( a.gender == GlobalVars.FEMALE ) {
						honorific = "Ms.";
					}
					dat += "<font color=red><i>Identity not found in operative database. What can the Syndicate do for you today, " + honorific + " " + a.name + "?</i></font><br>";

					if ( !this.selfdestructing ) {
						dat += new Txt( "<br><br><A href='?src=" ).Ref( this ).str( ";betraitor=1;traitormob=" ).Ref( a ).str( "'>\"" ).item( Rand13.Pick(new object [] { "I want to switch teams.", "I want to work for you.", "Let me join you.", "I can be of use to you.", "You want me working for you, and here's why...", "Give me an objective.", "How's the 401k over at the Syndicate?" }) ).str( "\"</A><BR>" ).ToString();
					}
				}
			}
			dat += this.temptext;
			Interface13.Browse( a, dat, "window=syndbeacon" );
			GlobalFuncs.onclose( a, "syndbeacon" );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Consumable_Neurotoxin : Reagent_Consumable {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Neurotoxin";
			this.id = "neurotoxin";
			this.description = "A strong neurotoxin that puts the subject into a death-like state.";
			this.color = "#2E2E61";
		}

		// Function from file: drink_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			M.weakened = Num13.MaxInt( M.weakened, 3 );
			M.dizziness += 6;

			dynamic _a = this.current_cycle; // Was a switch-case, sorry for the mess.
			if ( 15<=_a&&_a<=45 ) {
				
				if ( !( M.slurring != 0 ) ) {
					M.slurring = 1;
				}
				M.slurring += 3;
			} else if ( 45<=_a&&_a<=55 ) {
				
				if ( Rand13.PercentChance( 50 ) ) {
					M.confused = Num13.MaxInt( ((int)( M.confused + 3 )), 0 );
				}
			} else if ( 55<=_a&&_a<=200 ) {
				M.druggy = Num13.MaxInt( Convert.ToInt32( M.druggy ), 55 );
			} else if ( 200<=_a&&_a<=Double.PositiveInfinity ) {
				((Mob_Living)M).adjustToxLoss( 2 );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
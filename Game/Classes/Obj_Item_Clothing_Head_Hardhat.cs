// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Head_Hardhat : Obj_Item_Clothing_Head {

		public double brightness_on = 4;
		public bool on = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "hardhat0_yellow";
			this.item_color = "yellow";
			this.armor = new ByTable().Set( "melee", 15 ).Set( "bullet", 5 ).Set( "laser", 20 ).Set( "energy", 10 ).Set( "bomb", 20 ).Set( "bio", 10 ).Set( "rad", 20 );
			this.flags_inv = 0;
			this.action_button_name = "Toggle Helmet Light";
			this.icon_state = "hardhat0_yellow";
		}

		public Obj_Item_Clothing_Head_Hardhat ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hardhat.dm
		public virtual void turn_off( dynamic user = null ) {
			((Ent_Static)user).AddLuminosity( -this.brightness_on );
			return;
		}

		// Function from file: hardhat.dm
		public virtual void turn_on( dynamic user = null ) {
			((Ent_Static)user).AddLuminosity( this.brightness_on );
			return;
		}

		// Function from file: hardhat.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.on ) {
				((Ent_Static)user).AddLuminosity( -this.brightness_on );
				this.SetLuminosity( this.brightness_on );
			}
			return false;
		}

		// Function from file: hardhat.dm
		public override bool pickup( dynamic user = null ) {
			
			if ( this.on ) {
				((Ent_Static)user).AddLuminosity( this.brightness_on );
				this.SetLuminosity( 0 );
			}
			return false;
		}

		// Function from file: hardhat.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !( user.loc is Tile ) ) {
				user.WriteMsg( "<span class='warning'>You cannot turn the light on while in this " + user.loc + "!</span>" );
				return null;
			}
			this.on = !this.on;
			this.icon_state = "hardhat" + this.on + "_" + this.item_color;
			this.item_state = "hardhat" + this.on + "_" + this.item_color;
			((Mob)user).update_inv_head();

			if ( this.on ) {
				this.turn_on( user );
			} else {
				this.turn_off( user );
			}
			return null;
		}

	}

}
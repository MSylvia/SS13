// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Holotape : Obj_Item {

		public string icon_base = null;
		public double health = 10;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/holotape.dmi";
		}

		public Obj_Item_Holotape ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: holotape.dm
		public override bool hitby( Ent_Dynamic AM = null, bool? skipcatch = null, bool? hitpush = null, bool? blocked = null ) {
			int tforce = 0;
			Ent_Dynamic I = null;

			base.hitby( AM, skipcatch, hitpush, blocked );
			tforce = 0;

			if ( AM is Mob ) {
				tforce = 5;
			} else if ( AM is Obj ) {
				I = AM;
				tforce = Num13.MaxInt( 0, Convert.ToInt32( ((dynamic)I).throwforce * 0.5 ) );
			}
			GlobalFuncs.playsound( this.loc, "sound/weapons/Egloves.ogg", 80, 1 );
			this.health = Num13.MaxInt( 0, ((int)( this.health - tforce )) );
			this.healthcheck();
			return false;
		}

		// Function from file: holotape.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			((Mob)user).changeNext_move( 8 );
			this.add_fingerprint( user );
			this.health -= Convert.ToDouble( A.force * 0.3 );
			this.healthcheck();
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: holotape.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( P.damage_type == "brute" || P.damage_type == "fire" ) {
				this.health -= Convert.ToDouble( P.damage );
			}
			base.bullet_act( (object)(P), (object)(def_zone) );

			if ( this.health <= 0 ) {
				this.breaktape();
			}
			return null;
		}

		// Function from file: holotape.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand( a );
			return null;
		}

		// Function from file: holotape.dm
		public override bool blob_act( dynamic severity = null ) {
			this.breaktape();
			return false;
		}

		// Function from file: holotape.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			this.breaktape();
			return false;
		}

		// Function from file: holotape.dm
		public void breaktape(  ) {
			ByTable dir = null;
			string icon_dir = null;
			int? i = null;
			bool N = false;
			Tile cur = null;
			Obj_Item_Holotape P = null;

			dir = new ByTable( 2 );
			icon_dir = this.icon_state;

			if ( icon_dir == "" + this.icon_base + "_h" ) {
				dir[1] = GlobalVars.EAST;
				dir[2] = GlobalVars.WEST;
			}

			if ( icon_dir == "" + this.icon_base + "_v" ) {
				dir[1] = GlobalVars.NORTH;
				dir[2] = GlobalVars.SOUTH;
			}
			i = null;
			i = 1;

			while (( i ??0) < 3) {
				N = false;
				cur = Map13.GetStep( this, Convert.ToInt32( dir[i] ) );

				while (!N) {
					N = true;

					foreach (dynamic _a in Lang13.Enumerate( cur, typeof(Obj_Item_Holotape) )) {
						P = _a;
						

						if ( P.icon_state == icon_dir ) {
							N = false;
							GlobalFuncs.qdel( P );
						}
					}
					cur = Map13.GetStep( cur, Convert.ToInt32( dir[i] ) );
				}
				i++;
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: holotape.dm
		public void healthcheck(  ) {
			
			if ( this.health <= 0 ) {
				this.breaktape();
			}
			return;
		}

		// Function from file: holotape.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			((Mob)a).changeNext_move( 8 );
			((Ent_Dynamic)a).do_attack_animation( this );
			GlobalFuncs.playsound( this.loc, "sound/weapons/Egloves.ogg", 80, 1 );
			((Ent_Static)a).visible_message( "<span class='danger'>" + a + " hits " + this + ".</span>", "<span class='danger'>You hit " + this + ".</span>" );
			this.health -= Rand13.Int( 1, 2 );
			this.healthcheck();
			return null;
		}

		// Function from file: holotape.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 0;
			air_group = air_group ?? false;

			
			if ( !this.density ) {
				return true;
			}

			if ( air_group == true || height == 0 ) {
				return true;
			}

			if ( Lang13.Bool( mover.flags & 2 ) || mover is Obj_Effect_Meteor || mover.throwing ) {
				return true;
			} else {
				return false;
			}
		}

		// Function from file: holotape.dm
		public override bool Bumped( dynamic AM = null ) {
			dynamic C = null;
			dynamic T = null;
			dynamic T2 = null;

			
			if ( !( AM is Mob ) ) {
				return false;
			}

			if ( AM is Mob_Living_Carbon ) {
				C = AM;

				if ( C.m_intent == "walk" ) {
					T = GlobalFuncs.get_turf( this );
					C.loc = T;
				}
			}

			if ( AM.has_unlimited_silicon_privilege ) {
				T2 = GlobalFuncs.get_turf( this );
				AM.loc = T2;
			}
			return false;
		}

	}

}
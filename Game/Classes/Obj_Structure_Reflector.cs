// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Reflector : Obj_Structure {

		public bool finished = false;
		public bool admin = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/stock_parts.dmi";
			this.icon_state = "box_0";
			this.layer = 2.9;
		}

		public Obj_Structure_Reflector ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: reflector.dm
		public override double singularity_act( int? current_size = null, Obj_Singularity S = null ) {
			
			if ( this.admin ) {
				return 0;
			} else {
				base.singularity_act( current_size, S );
			}
			return 0;
		}

		// Function from file: reflector.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			if ( this.admin ) {
				return false;
			} else {
				base.ex_act( severity, (object)(target) );
			}
			return false;
		}

		// Function from file: reflector.dm
		public override bool AltClick( Mob user = null ) {
			base.AltClick( user );

			if ( !user.canUseTopic( user ) ) {
				user.WriteMsg( "<span class='warning'>You can't do that right now!</span>" );
				return false;
			}

			if ( !( Map13.GetDistance( this, user ) <= 1 ) ) {
				return false;
			} else {
				this.__CallVerb("Rotate" );
			}
			return false;
		}

		// Function from file: reflector.dm
		public virtual bool get_reflection( int srcdir = 0, int pdir = 0 ) {
			return false;
		}

		// Function from file: reflector.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;
			dynamic S = null;

			
			if ( this.admin ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Wrench ) {
				
				if ( Lang13.Bool( this.anchored ) ) {
					user.WriteMsg( "Unweld the " + this + " first!" );
				}

				if ( GlobalFuncs.do_after( user, 80 / A.toolspeed, null, this ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
					user.WriteMsg( "You dismantle the " + this + "." );
					GlobalFuncs.qdel( this );
				}
			}

			if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				dynamic _a = this.anchored; // Was a switch-case, sorry for the mess.
				if ( _a==0 ) {
					
					if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
						GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 50, 1 );
						((Ent_Static)user).visible_message( "" + user.name + " starts to weld the " + this.name + " to the floor.", new Txt( "<span class='notice'>You start to weld " ).the( this ).item().str( " to the floor...</span>" ).ToString(), "<span class='italics'>You hear welding.</span>" );

						if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
							
							if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								return null;
							}
							this.anchored = 1;
							user.WriteMsg( new Txt( "<span class='notice'>You weld " ).the( this ).item().str( " to the floor.</span>" ).ToString() );
						}
					}
				} else if ( _a==1 ) {
					
					if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
						GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 50, 1 );
						((Ent_Static)user).visible_message( "" + user.name + " starts to cut the " + this.name + " free from the floor.", new Txt( "<span class='notice'>You start to cut " ).the( this ).item().str( " free from the floor...</span>" ).ToString(), "<span class='italics'>You hear welding.</span>" );

						if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
							
							if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								return null;
							}
							this.anchored = 0;
							user.WriteMsg( new Txt( "<span class='notice'>You cut " ).the( this ).item().str( " free from the floor.</span>" ).ToString() );
						}
					}
				}
			}

			if ( A is Obj_Item_Stack_Sheet ) {
				
				if ( this.finished ) {
					return null;
				}
				S = A;

				if ( A is Obj_Item_Stack_Sheet_Glass ) {
					
					if ( ( ((Obj_Item_Stack)S).get_amount() ??0) < 5 ) {
						user.WriteMsg( "<span class='warning'>You need five sheets of glass to create a reflector!</span>" );
						return null;
					} else {
						((Obj_Item_Stack)S).use( 5 );
						new Obj_Structure_Reflector_Single( this.loc );
						GlobalFuncs.qdel( this );
					}
				}

				if ( A is Obj_Item_Stack_Sheet_Rglass ) {
					
					if ( ( ((Obj_Item_Stack)S).get_amount() ??0) < 10 ) {
						user.WriteMsg( "<span class='warning'>You need ten sheets of reinforced glass to create a double reflector!</span>" );
						return null;
					} else {
						((Obj_Item_Stack)S).use( 10 );
						new Obj_Structure_Reflector_Double( this.loc );
						GlobalFuncs.qdel( this );
					}
				}

				if ( A is Obj_Item_Stack_Sheet_Mineral_Diamond ) {
					
					if ( ( ((Obj_Item_Stack)S).get_amount() ??0) >= 1 ) {
						((Obj_Item_Stack)S).use( 1 );
						new Obj_Structure_Reflector_Box( this.loc );
						GlobalFuncs.qdel( this );
					}
				}
			}
			return null;
		}

		// Function from file: reflector.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			dynamic reflector_turf = null;
			Tile reflect_turf = null;
			int new_dir = 0;

			reflector_turf = GlobalFuncs.get_turf( this );
			new_dir = this.get_reflection( this.dir, Convert.ToInt32( P.dir ) ) ?1:0;

			if ( !( P is Obj_Item_Projectile_Beam ) ) {
				return base.bullet_act( (object)(P), (object)(def_zone) );
			}

			if ( new_dir != 0 ) {
				reflect_turf = Map13.GetStep( reflect_turf, new_dir );
			} else {
				this.visible_message( "<span class='notice'>" + this + " is hit by the " + P + "!</span>" );
				new_dir = 0;
				return base.bullet_act( (object)(P), (object)(def_zone) );
			}
			reflect_turf = Map13.GetStep( this.loc, new_dir );
			P.original = reflect_turf;
			P.starting = reflector_turf;
			P.current = reflector_turf;
			P.yo = reflect_turf.y - Convert.ToDouble( reflector_turf.y );
			P.xo = reflect_turf.x - Convert.ToDouble( reflector_turf.x );
			P.range = Lang13.Initial( P, "range" );
			new_dir = 0;
			return -1;
		}

		// Function from file: reflector.dm
		[Verb]
		[VerbInfo( name: "Rotate", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public bool rotate(  ) {
			
			if ( Task13.User.stat != 0 || !Task13.User.canmove || Task13.User.restrained() ) {
				return false;
			}

			if ( Lang13.Bool( this.anchored ) ) {
				Task13.User.WriteMsg( "<span class='warning'>It is fastened to the floor!</span>" );
				return false;
			}
			this.dir = Num13.Rotate( this.dir, 270 );
			return true;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Analyzer : Obj_Item_Device {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.w_class = 2;
			this.flags = 64;
			this.slot_flags = 512;
			this.throw_speed = 3;
			this.materials = new ByTable().Set( "$metal", 30 ).Set( "$glass", 20 );
			this.origin_tech = "magnets=1;engineering=1";
			this.icon_state = "atmos";
		}

		public Obj_Item_Device_Analyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: scanners.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Ent_Static location = null;
			GasMixture environment = null;
			double pressure = 0;
			double total_moles = 0;
			double o2_concentration = 0;
			double n2_concentration = 0;
			double co2_concentration = 0;
			double plasma_concentration = 0;
			double unknown_concentration = 0;

			
			if ( Lang13.Bool( user.stat ) ) {
				return null;
			}
			location = user.loc;

			if ( !( location is Tile ) ) {
				return null;
			}
			environment = location.return_air();
			pressure = environment.return_pressure();
			total_moles = environment.total_moles();
			user.show_message( "<span class='info'><B>Results:</B></span>", 1 );

			if ( Math.Abs( pressure - 101.32499694824219 ) < 10 ) {
				user.show_message( "<span class='info'>Pressure: " + Num13.Round( pressure, 0.1 ) + " kPa</span>", 1 );
			} else {
				user.show_message( "<span class='alert'>Pressure: " + Num13.Round( pressure, 0.1 ) + " kPa</span>", 1 );
			}

			if ( total_moles != 0 ) {
				o2_concentration = ( environment.oxygen ??0) / total_moles;
				n2_concentration = environment.nitrogen / total_moles;
				co2_concentration = ( environment.carbon_dioxide ??0) / total_moles;
				plasma_concentration = ( environment.toxins ??0) / total_moles;
				unknown_concentration = 1 - ( o2_concentration + n2_concentration + co2_concentration + plasma_concentration );

				if ( Math.Abs( n2_concentration - 0.79 ) < 20 ) {
					user.show_message( "<span class='info'>Nitrogen: " + Num13.Floor( n2_concentration * 100 ) + " %</span>", 1 );
				} else {
					user.show_message( "<span class='alert'>Nitrogen: " + Num13.Floor( n2_concentration * 100 ) + " %</span>", 1 );
				}

				if ( Math.Abs( o2_concentration - 0.01 ) < 2 ) {
					user.show_message( "<span class='info'>Oxygen: " + Num13.Floor( o2_concentration * 100 ) + " %</span>", 1 );
				} else {
					user.show_message( "<span class='alert'>Oxygen: " + Num13.Floor( o2_concentration * 100 ) + " %</span>", 1 );
				}

				if ( co2_concentration > 0.01 ) {
					user.show_message( "<span class='alert'>CO2: " + Num13.Floor( co2_concentration * 100 ) + " %</span>", 1 );
				} else {
					user.show_message( "<span class='info'>CO2: " + Num13.Floor( co2_concentration * 100 ) + " %</span>", 1 );
				}

				if ( plasma_concentration > 0.01 ) {
					user.show_message( "<span class='info'>Plasma: " + Num13.Floor( plasma_concentration * 100 ) + " %</span>", 1 );
				}

				if ( unknown_concentration > 0.01 ) {
					user.show_message( "<span class='alert'>Unknown: " + Num13.Floor( unknown_concentration * 100 ) + " %</span>", 1 );
				}
				user.show_message( "<span class='info'>Temperature: " + Num13.Floor( Convert.ToDouble( environment.temperature - 273.41 ) ) + " &deg;C</span>", 1 );
			}
			this.add_fingerprint( user );
			return null;
		}

	}

}
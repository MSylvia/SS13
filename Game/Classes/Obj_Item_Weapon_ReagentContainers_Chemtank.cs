// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Chemtank : Obj_Item_Weapon_ReagentContainers {

		public bool on = false;
		public double? usage_ratio = 5;
		public double? injection_amount = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "waterbackpackatmos";
			this.w_class = 4;
			this.slot_flags = 1024;
			this.slowdown = 1;
			this.action_button_name = "Activate Injector";
			this.volume = 300;
			this.flags = 4096;
			this.possible_transfer_amounts = new ByTable(new object [] { 5, 10, 15 });
			this.icon = "icons/obj/hydroponics/equipment.dmi";
			this.icon_state = "waterbackpackatmos";
		}

		public Obj_Item_Weapon_ReagentContainers_Chemtank ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: watertank.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static user = null;
			double used_amount = 0;

			
			if ( !( this.loc is Mob_Living_Carbon_Human ) ) {
				this.turn_off();
				return null;
			}

			if ( !Lang13.Bool( this.reagents.total_volume ) ) {
				this.turn_off();
				return null;
			}
			user = this.loc;

			if ( ((dynamic)user).back != this ) {
				this.turn_off();
				return null;
			}
			used_amount = ( this.injection_amount ??0) / ( this.usage_ratio ??0);
			this.reagents.reaction( user, GlobalVars.INJECT, this.injection_amount, false );
			this.reagents.trans_to( user, used_amount, this.usage_ratio );
			this.update_filling();
			((dynamic)user).update_inv_back();
			return null;
		}

		// Function from file: watertank.dm
		public override ByTable worn_overlays( bool? isinhands = null ) {
			isinhands = isinhands ?? GlobalVars.FALSE;

			ByTable _default = null;

			Image filling = null;
			int percent = 0;

			_default = new ByTable();

			if ( !( isinhands == true ) && Lang13.Bool( this.reagents.total_volume ) ) {
				filling = new Image( "icons/obj/reagentfillings.dmi", null, "backpackmob-10" );
				percent = Num13.Floor( ( this.reagents.total_volume ??0) / ( this.volume ??0) * 100 );

				dynamic _a = percent; // Was a switch-case, sorry for the mess.
				if ( 0<=_a&&_a<=15 ) {
					filling.icon_state = "backpackmob-10";
				} else if ( 16<=_a&&_a<=60 ) {
					filling.icon_state = "backpackmob50";
				} else if ( 61<=_a&&_a<=Double.PositiveInfinity ) {
					filling.icon_state = "backpackmob100";
				}
				filling.color = GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				_default.Add( filling );
			}
			return _default;
		}

		// Function from file: watertank.dm
		public void turn_off(  ) {
			this.on = false;
			GlobalVars.SSobj.processing.Remove( this );

			if ( this.loc is Mob ) {
				((dynamic)this.loc).WriteMsg( "<span class='notice'>" + this + " turns off.</span>" );
			}
			return;
		}

		// Function from file: watertank.dm
		public void turn_on(  ) {
			this.on = true;
			GlobalVars.SSobj.processing.Or( this );

			if ( this.loc is Mob ) {
				((dynamic)this.loc).WriteMsg( "<span class='notice'>" + this + " turns on.</span>" );
			}
			return;
		}

		// Function from file: watertank.dm
		public void update_filling(  ) {
			Image filling = null;
			int percent = 0;

			this.overlays.Cut();

			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				filling = new Image( "icons/obj/reagentfillings.dmi", null, "backpack-10" );
				percent = Num13.Floor( ( this.reagents.total_volume ??0) / ( this.volume ??0) * 100 );

				dynamic _a = percent; // Was a switch-case, sorry for the mess.
				if ( 0<=_a&&_a<=15 ) {
					filling.icon_state = "backpack-10";
				} else if ( 16<=_a&&_a<=60 ) {
					filling.icon_state = "backpack50";
				} else if ( 61<=_a&&_a<=Double.PositiveInfinity ) {
					filling.icon_state = "backpack100";
				}
				filling.color = GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				this.overlays.Add( filling );
			}
			return;
		}

		// Function from file: watertank.dm
		public void toggle_injection(  ) {
			Mob user = null;

			user = Task13.User;

			if ( !( user is Mob_Living_Carbon_Human ) ) {
				return;
			}

			if ( user.get_item_by_slot( 1 ) != this ) {
				user.WriteMsg( "<span class='warning'>The chemtank needs to be on your back before you can activate it!</span>" );
				return;
			}

			if ( this.on ) {
				this.turn_off();
			} else {
				this.turn_on();
			}
			return;
		}

		// Function from file: watertank.dm
		public override void ui_action_click(  ) {
			this.toggle_injection();
			return;
		}

	}

}
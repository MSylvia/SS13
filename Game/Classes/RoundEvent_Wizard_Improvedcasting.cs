// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_Wizard_Improvedcasting : RoundEvent_Wizard {

		// Function from file: aid.dm
		public override bool start(  ) {
			Mob_Living L = null;
			Obj_Effect_ProcHolder_Spell S = null;

			
			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living) )) {
				L = _c;
				

				if ( L.mind != null && L.mind.spell_list.len != 0 ) {
					
					foreach (dynamic _b in Lang13.Enumerate( L.mind.spell_list, typeof(Obj_Effect_ProcHolder_Spell) )) {
						S = _b;
						
						S.name = Lang13.Initial( S, "name" );
						S.spell_level++;

						if ( S.spell_level >= 6 || S.charge_max <= 0 ) {
							continue;
						}

						if ( S.level_max <= 0 ) {
							continue;
						}
						S.charge_max = Num13.Floor( Convert.ToDouble( Lang13.Initial( S, "charge_max" ) - S.spell_level * Convert.ToDouble( Lang13.Initial( S, "charge_max" ) - S.cooldown_min ) / S.level_max ) );

						if ( S.charge_max < S.charge_counter ) {
							S.charge_counter = S.charge_max;
						}

						switch ((int)( S.spell_level )) {
							case 1:
								S.name = "Efficient " + S.name;
								break;
							case 2:
								S.name = "Quickened " + S.name;
								break;
							case 3:
								S.name = "Free " + S.name;
								break;
							case 4:
								S.name = "Instant " + S.name;
								break;
							case 5:
								S.name = "Ludicrous " + S.name;
								break;
						}
					}
					L.WriteMsg( "<span class='notice'>You suddenly feel more competent with your casting!</span>" );
				}
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_RND_DestructiveAnalyzer : Obj_Machinery_RND {

		public dynamic loaded_item = null;
		public double decon_mod = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "d_analyzer";
		}

		// Function from file: destructive_analyzer.dm
		public Obj_Machinery_RND_DestructiveAnalyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_DestructiveAnalyzer( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_ScanningModule( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MicroLaser( null ) );
			this.RefreshParts();
			return;
		}

		// Function from file: destructive_analyzer.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			ByTable temp_tech = null;

			
			if ( this.shocked ) {
				this.shock( user, 50 );
			}

			if ( this.default_deconstruction_screwdriver( user, "d_analyzer_t", "d_analyzer", A ) ) {
				
				if ( Lang13.Bool( this.linked_console ) ) {
					this.linked_console.linked_destroy = null;
					this.linked_console = null;
				}
				return null;
			}

			if ( this.exchange_parts( user, A ) ) {
				return null;
			}
			this.default_deconstruction_crowbar( A );

			if ( this.disabled ) {
				return null;
			}

			if ( !Lang13.Bool( this.linked_console ) ) {
				user.WriteMsg( "<span class='warning'>The " + this.name + " must be linked to an R&D console first!</span>" );
				return null;
			}

			if ( this.busy ) {
				user.WriteMsg( "<span class='warning'>The " + this.name + " is busy right now.</span>" );
				return null;
			}

			if ( A is Obj_Item && !Lang13.Bool( this.loaded_item ) ) {
				
				if ( !Lang13.Bool( A.origin_tech ) ) {
					user.WriteMsg( "<span class='warning'>This doesn't seem to have a tech origin!</span>" );
					return null;
				}
				temp_tech = this.ConvertReqString2List( A.origin_tech );

				if ( temp_tech.len == 0 ) {
					user.WriteMsg( "<span class='warning'>You cannot deconstruct this item!</span>" );
					return null;
				}

				if ( !Lang13.Bool( user.drop_item() ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( A ).item().str( " is stuck to your hand, you cannot put it in the " ).item( this.name ).str( "!</span>" ).ToString() );
					return null;
				}
				this.busy = true;
				this.loaded_item = A;
				A.loc = this;
				user.WriteMsg( "<span class='notice'>You add the " + A.name + " to the " + this.name + "!</span>" );
				Icon13.Flick( "d_analyzer_la", this );
				Task13.Schedule( 10, (Task13.Closure)(() => {
					this.icon_state = "d_analyzer_l";
					this.busy = false;
					return;
				}));
			}
			return null;
		}

		// Function from file: destructive_analyzer.dm
		public ByTable ConvertReqString2List( dynamic source_list = null ) {
			ByTable temp_list = null;
			dynamic O = null;

			temp_list = String13.ParseUrlParams( source_list );

			foreach (dynamic _a in Lang13.Enumerate( temp_list )) {
				O = _a;
				
				temp_list[O] = String13.ParseNumber( temp_list[O] );
			}
			return temp_list;
		}

		// Function from file: destructive_analyzer.dm
		public override void RefreshParts(  ) {
			double T = 0;
			Obj_Item_Weapon_StockParts S = null;

			T = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
				S = _a;
				
				T += Convert.ToDouble( S.rating );
			}
			this.decon_mod = T;
			return;
		}

	}

}
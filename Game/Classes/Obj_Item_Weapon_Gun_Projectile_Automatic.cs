// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Automatic : Obj_Item_Weapon_Gun_Projectile {

		public bool alarmed = false;
		public int select = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "combat=4;materials=2";
			this.can_suppress = true;
			this.burst_size = 3;
			this.fire_delay = 2;
			this.action_button_name = "Toggle Firemode";
		}

		public Obj_Item_Weapon_Gun_Projectile_Automatic ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: automatic.dm
		public override dynamic can_shoot(  ) {
			return this.get_ammo();
		}

		// Function from file: automatic.dm
		public void empty_alarm(  ) {
			
			if ( !Lang13.Bool( this.chambered ) && !( this.get_ammo() != 0 ) && !this.alarmed ) {
				GlobalFuncs.playsound( this.loc, "sound/weapons/smg_empty_alarm.ogg", 40, 1 );
				this.update_icon();
				this.alarmed = true;
			}
			return;
		}

		// Function from file: automatic.dm
		public virtual void burst_select(  ) {
			Mob user = null;

			user = Task13.User;
			this.select = !( this.select != 0 ) ?1:0;

			if ( !( this.select != 0 ) ) {
				this.burst_size = 1;
				this.fire_delay = 0;
				user.WriteMsg( "<span class='notice'>You switch to semi-automatic.</span>" );
			} else {
				this.burst_size = Lang13.Initial( this, "burst_size" );
				this.fire_delay = Lang13.Initial( this, "fire_delay" );
				user.WriteMsg( "<span class='notice'>You switch to " + this.burst_size + "-rnd burst.</span>" );
			}
			GlobalFuncs.playsound( user, "sound/weapons/empty.ogg", 100, 1 );
			this.update_icon();
			return;
		}

		// Function from file: automatic.dm
		public override void ui_action_click(  ) {
			this.burst_select();
			return;
		}

		// Function from file: automatic.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic _default = null;

			dynamic AM = null;

			_default = base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}

			if ( A is Obj_Item_AmmoBox_Magazine ) {
				AM = A;

				if ( Lang13.Bool( ((dynamic)this.mag_type).IsInstanceOfType( AM ) ) ) {
					
					if ( Lang13.Bool( this.magazine ) ) {
						user.WriteMsg( new Txt( "<span class='notice'>You perform a tactical reload on " ).the( this ).item().str( ", replacing the magazine.</span>" ).ToString() );
						this.magazine.loc = GlobalFuncs.get_turf( this.loc );
						this.magazine.update_icon();
						this.magazine = null;
					} else {
						user.WriteMsg( new Txt( "<span class='notice'>You insert the magazine into " ).the( this ).item().str( ".</span>" ).ToString() );
					}
					((Mob)user).remove_from_mob( AM );
					this.magazine = AM;
					this.magazine.loc = this;
					this.chamber_round();
					A.update_icon();
					this.update_icon();
					return 1;
				}
			}
			return _default;
		}

		// Function from file: automatic.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );
			this.overlays.Cut();

			if ( !( this.select != 0 ) ) {
				this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "semi" );
			}

			if ( this.select == 1 ) {
				this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "burst" );
			}
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + ( Lang13.Bool( this.magazine ) ? "-" + this.magazine.max_ammo : "" ) + ( Lang13.Bool( this.chambered ) ? "" : "-e" ) + ( Lang13.Bool( this.suppressed ) ? "-suppressed" : "" );
			return null;
		}

	}

}
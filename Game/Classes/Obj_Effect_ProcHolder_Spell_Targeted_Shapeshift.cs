// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Targeted_Shapeshift : Obj_Effect_ProcHolder_Spell_Targeted {

		public dynamic shapeshift_type = typeof(Mob_Living_SimpleAnimal_Hostile_Retaliate_Goat);
		public ByTable current_shapes = new ByTable();
		public ByTable current_casters = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.clothes_req = 0;
			this.charge_max = 200;
			this.cooldown_min = 50;
			this.range = -1;
			this.include_user = true;
			this.invocation = "RAC'WA NO!";
			this.invocation_type = "shout";
			this.action_icon_state = "shapeshift";
		}

		public Obj_Effect_ProcHolder_Spell_Targeted_Shapeshift ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: shapeshift.dm
		public void Restore( Mob_Living shape = null ) {
			Mob_Living caster = null;
			Mob_Living M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( shape, typeof(Mob_Living) )) {
				M = _a;
				

				if ( this.current_casters.Contains( M ) ) {
					caster = M;
					break;
				}
			}

			if ( !( caster != null ) ) {
				return;
			}
			caster.loc = shape.loc;
			caster.status_flags &= 61439;
			this.clothes_req = Lang13.Initial( this, "clothes_req" );
			this.human_req = Lang13.Initial( this, "human_req" );
			this.current_casters.Remove( caster );
			this.current_shapes.Remove( shape );
			shape.mind.transfer_to( caster );
			GlobalFuncs.qdel( shape );
			return;
		}

		// Function from file: shapeshift.dm
		public void Shapeshift( Mob_Living caster = null ) {
			Mob_Living M = null;
			dynamic shape = null;

			
			foreach (dynamic _a in Lang13.Enumerate( caster, typeof(Mob_Living) )) {
				M = _a;
				

				if ( ( M.status_flags & 4096 ) != 0 ) {
					caster.WriteMsg( "<span class='warning'>You're already shapeshifted!</span>" );
					return;
				}
			}
			shape = Lang13.Call( this.shapeshift_type, caster.loc );
			caster.loc = shape;
			caster.status_flags |= 4096;
			this.current_shapes.Or( shape );
			this.current_casters.Or( caster );
			this.clothes_req = 0;
			this.human_req = 0;
			caster.mind.transfer_to( shape );
			return;
		}

		// Function from file: shapeshift.dm
		public override bool cast( dynamic targets = null, dynamic thearea = null, dynamic user = null ) {
			thearea = thearea ?? Task13.User;

			Mob_Living M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( targets, typeof(Mob_Living) )) {
				M = _a;
				

				if ( this.current_shapes.Contains( M ) ) {
					this.Restore( M );
				} else {
					this.Shapeshift( M );
				}
			}
			return false;
		}

	}

}
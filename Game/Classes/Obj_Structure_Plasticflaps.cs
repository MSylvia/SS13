// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Plasticflaps : Obj_Structure {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/stationobjs.dmi";
			this.icon_state = "plasticflaps";
			this.layer = 4;
		}

		public Obj_Structure_Plasticflaps ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: plasticflaps.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			base.ex_act( severity, (object)(target) );

			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.qdel( this );
					}
					break;
			}
			return false;
		}

		// Function from file: plasticflaps.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			((Mob)user).changeNext_move( 8 );
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: plasticflaps.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			dynamic B = null;
			dynamic C = null;
			dynamic M = null;

			
			if ( mover is Ent_Dynamic && ((Ent_Dynamic)mover).checkpass( 2 ) != 0 ) {
				return Rand13.PercentChance( 60 );
			}
			B = mover;

			if ( mover is Obj_Structure_Bed && ( Lang13.Bool( B.buckled_mob ) || B.density ) ) {
				return false;
			}

			if ( mover is Obj_Structure_Closet_Cardboard ) {
				C = mover;

				if ( Lang13.Bool( C.move_delay ) ) {
					return false;
				}
			} else if ( mover is Mob_Living ) {
				M = mover;

				if ( mover is Mob_Living_SimpleAnimal_Bot_Mulebot ) {
					return true;
				}

				if ( M.buckled != null && M.buckled is Mob_Living_SimpleAnimal_Bot_Mulebot ) {
					return true;
				}

				if ( !Lang13.Bool( M.lying ) && !Lang13.Bool( M.ventcrawler ) && M.mob_size != 0 ) {
					return false;
				}
			}
			return base.CanPass( (object)(mover), (object)(target), height, air_group );
		}

	}

}
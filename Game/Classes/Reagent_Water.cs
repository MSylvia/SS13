// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Water : Reagent {

		public int cooling_temperature = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Water";
			this.id = "water";
			this.description = "A ubiquitous chemical substance that is composed of hydrogen and oxygen.";
			this.color = "#AAAAAA77";
		}

		// Function from file: other_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null ) {
			method = method ?? GlobalVars.TOUCH;

			
			if ( !( M is Mob_Living ) ) {
				return 0;
			}

			if ( method == GlobalVars.TOUCH ) {
				((Mob_Living)M).adjust_fire_stacks( -( ( reac_volume ??0) / 10 ) );
				((Mob_Living)M).ExtinguishMob();
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection) );
			return 0;
		}

		// Function from file: other_reagents.dm
		public override bool reaction_obj( dynamic O = null, double? volume = null ) {
			dynamic cube = null;
			dynamic dehy = null;

			
			if ( O is Obj ) {
				((Obj)O).extinguish();
			}

			if ( O is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Monkeycube ) {
				cube = O;

				if ( !Lang13.Bool( cube.wrapped ) ) {
					((Obj_Item_Weapon_ReagentContainers_Food_Snacks_Monkeycube)cube).Expand();
				}
			} else if ( O is Obj_Item_Toy_Carpplushie_DehyCarp ) {
				dehy = O;
				((Obj_Item_Toy_Carpplushie_DehyCarp)dehy).Swell();
			}
			return false;
		}

		// Function from file: other_reagents.dm
		public override void reaction_turf( dynamic T = null, double? volume = null ) {
			int CT = 0;
			Mob_Living_SimpleAnimal_Slime M = null;
			dynamic hotspot = null;
			GasMixture G = null;

			
			if ( !( T is Tile_Simulated ) ) {
				return;
			}
			CT = this.cooling_temperature;

			if ( ( volume ??0) >= 10 ) {
				((Tile_Simulated)T).MakeSlippery();
			}

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Mob_Living_SimpleAnimal_Slime) )) {
				M = _a;
				
				M.apply_water();
			}
			hotspot = Lang13.FindIn( typeof(Obj_Effect_Hotspot), T );

			if ( Lang13.Bool( hotspot ) && !( T is Tile_Space ) ) {
				
				if ( Lang13.Bool( T.air ) ) {
					G = T.air;
					G.temperature = Num13.MaxInt( Num13.MinInt( Convert.ToInt32( G.temperature - CT * 1000 ), Convert.ToInt32( G.temperature / CT ) ), 0 );
					G.react();
					GlobalFuncs.qdel( hotspot );
				}
			}
			return;
		}

	}

}
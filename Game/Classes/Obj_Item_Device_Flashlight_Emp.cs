// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Flashlight_Emp : Obj_Item_Device_Flashlight {

		public int emp_max_charges = 4;
		public int emp_cur_charges = 4;
		public int charge_tick = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "magnets=4;syndicate=5";
		}

		// Function from file: flashlight.dm
		public Obj_Item_Device_Flashlight_Emp ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: tgstation.dme
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic M = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( target is Obj_Item_Weapon_Storage && target.loc == user ) {
				return false;
			}

			if ( this.emp_cur_charges > 0 ) {
				this.emp_cur_charges -= 1;
				((Ent_Static)target).visible_message( new Txt( "<span class='danger'>" ).item( user ).str( " blinks " ).the( this ).item().str( " at " ).the( target ).item().str( "." ).ToString(), new Txt( "<span class='userdanger'>" ).item( user ).str( " blinks " ).the( this ).item().str( " at " ).the( target ).item().str( "." ).ToString() );

				if ( target is Mob ) {
					M = target;
					GlobalFuncs.add_logs( user, M, "attacked", "EMP-light" );
				}
				user.WriteMsg( new Txt().The( this ).item().str( " now has " ).item( this.emp_cur_charges ).str( " charge" ).s().str( "." ).ToString() );
				((Ent_Static)target).emp_act( 1 );
			} else {
				user.WriteMsg( new Txt( "<span class='warning'>" ).The( this ).item().str( " needs time to recharge!</span>" ).ToString() );
			}
			return false;
		}

		// Function from file: flashlight.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			
			if ( this.on && user.zone_sel.selecting == "eyes" ) {
				base.attack( (object)(M), (object)(user), def_zone );
			}
			return false;
		}

		// Function from file: flashlight.dm
		public override int? process( dynamic seconds = null ) {
			this.charge_tick++;

			if ( this.charge_tick < 10 ) {
				return 0;
			}
			this.charge_tick = 0;
			this.emp_cur_charges = Num13.MinInt( this.emp_cur_charges + 1, this.emp_max_charges );
			return 1;
		}

		// Function from file: flashlight.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );
			return base.Destroy();
		}

	}

}
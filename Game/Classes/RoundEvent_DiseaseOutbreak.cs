// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_DiseaseOutbreak : RoundEvent {

		public Type virus_type = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 15;
		}

		// Function from file: tgstation.dme
		public override bool start(  ) {
			Mob_Living_Carbon_Human H = null;
			dynamic T = null;
			bool foundAlready = false;
			Disease D = null;
			dynamic D2 = null;
			dynamic DS = null;

			
			if ( !( this.virus_type != null ) ) {
				this.virus_type = Rand13.Pick(new object [] { typeof(Disease_Dnaspread), typeof(Disease_Advance_Flu), typeof(Disease_Advance_Cold), typeof(Disease_Brainrot), typeof(Disease_Magnitis) });
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.shuffle( GlobalVars.living_mob_list ), typeof(Mob_Living_Carbon_Human) )) {
				H = _b;
				
				T = GlobalFuncs.get_turf( H );

				if ( !Lang13.Bool( T ) ) {
					continue;
				}

				if ( Lang13.Bool( T.z ) != true ) {
					continue;
				}
				foundAlready = false;

				foreach (dynamic _a in Lang13.Enumerate( H.viruses, typeof(Disease) )) {
					D = _a;
					
					foundAlready = true;
					break;
				}

				if ( H.stat == 2 || foundAlready ) {
					continue;
				}
				D2 = null;

				if ( this.virus_type == typeof(Disease_Dnaspread) ) {
					
					if ( !( H.dna != null ) || Lang13.Bool( H.disabilities & 1 ) ) {
						continue;
					}
					D2 = Lang13.Call( this.virus_type );
					DS = D2;
					DS.strain_data["name"] = H.real_name;
					DS.strain_data["UI"] = H.dna.uni_identity;
					DS.strain_data["SE"] = H.dna.struc_enzymes;
				} else {
					D2 = Lang13.Call( this.virus_type );
				}
				D2.carrier = true;
				H.AddDisease( D2 );
				break;
			}
			return false;
		}

		// Function from file: disease_outbreak.dm
		public override void setup( int? loop = null ) {
			this.announceWhen = Rand13.Int( 15, 30 );
			return;
		}

		// Function from file: disease_outbreak.dm
		public override void announce(  ) {
			GlobalFuncs.priority_announce( "Confirmed outbreak of level 7 viral biohazard aboard " + GlobalFuncs.station_name() + ". All personnel must contain the outbreak.", "Biohazard Alert", "sound/AI/outbreak7.ogg" );
			return;
		}

	}

}
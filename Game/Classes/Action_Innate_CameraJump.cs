// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Action_Innate_CameraJump : Action_Innate {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Jump To Camera";
			this.button_icon_state = "camera_jump";
		}

		public Action_Innate_CameraJump ( dynamic Target = null ) : base( (object)(Target) ) {
			
		}

		// Function from file: camera_advanced.dm
		public override void Activate(  ) {
			dynamic C = null;
			Obj remote_eye = null;
			dynamic origin = null;
			ByTable L = null;
			Obj_Machinery_Camera cam = null;
			ByTable T = null;
			Obj_Machinery_Camera netcam = null;
			ByTable tempnetwork = null;
			dynamic camera = null;
			dynamic final = null;

			
			if ( !Lang13.Bool( this.target ) || !( this.target is Mob_Living_Carbon ) ) {
				return;
			}
			C = this.target;
			remote_eye = C.remote_control;
			origin = ((dynamic)remote_eye).origin;
			L = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cameranet.cameras, typeof(Obj_Machinery_Camera) )) {
				cam = _a;
				
				L.Add( cam );
			}
			GlobalFuncs.camera_sort( L );
			T = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( L, typeof(Obj_Machinery_Camera) )) {
				netcam = _b;
				
				tempnetwork = netcam.network & origin.networks;

				if ( tempnetwork.len != 0 ) {
					T["" + netcam.c_tag + ( netcam.can_use() ? null : " (Deactivated)" )] = netcam;
				}
			}
			camera = Interface13.Input( "Choose which camera you want to view", "Cameras", null, null, T, InputType.Null | InputType.Any );
			final = T[camera];

			if ( Lang13.Bool( final ) ) {
				((Mob_Camera_AiEye)remote_eye).setLoc( GlobalFuncs.get_turf( final ) );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Restraints_Handcuffs : Obj_Item_Weapon_Restraints {

		public string cuffsound = "sound/weapons/handcuffs.ogg";
		public Type trashtype = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 64;
			this.slot_flags = 512;
			this.w_class = 2;
			this.throw_speed = 3;
			this.throw_range = 5;
			this.materials = new ByTable().Set( "$metal", 500 );
			this.origin_tech = "materials=1";
			this.icon_state = "handcuff";
		}

		public Obj_Item_Weapon_Restraints_Handcuffs ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: handcuffs.dm
		public virtual void apply_cuffs( dynamic target = null, dynamic user = null, bool? dispense = null ) {
			dispense = dispense ?? false;

			dynamic cuffs = null;

			
			if ( Lang13.Bool( target.handcuffed ) ) {
				return;
			}

			if ( !Lang13.Bool( user.drop_item() ) && !( dispense == true ) ) {
				return;
			}
			cuffs = this;

			if ( this.trashtype != null ) {
				cuffs = Lang13.Call( this.trashtype );
			} else if ( dispense == true ) {
				cuffs = Lang13.Call( this.type );
			}
			cuffs.loc = target;
			target.handcuffed = cuffs;
			((Mob)target).update_inv_handcuffed(  );

			if ( this.trashtype != null && !( dispense == true ) ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: handcuffs.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			
			if ( !( M is Mob_Living_Carbon ) ) {
				return false;
			}

			if ( Lang13.Bool( user.disabilities & 256 ) && Rand13.PercentChance( 50 ) ) {
				user.WriteMsg( "<span class='warning'>Uh... how do those things work?!</span>" );
				this.apply_cuffs( user, user );
				return false;
			}

			if ( !Lang13.Bool( M.handcuffed ) ) {
				((Ent_Static)M).visible_message( "<span class='danger'>" + user + " is trying to put " + this.name + " on " + M + "!</span>", "<span class='userdanger'>" + user + " is trying to put " + this.name + " on " + M + "!</span>" );
				GlobalFuncs.playsound( this.loc, this.cuffsound, 30, 1, -2 );

				if ( GlobalFuncs.do_mob( user, M, 30 ) ) {
					this.apply_cuffs( M, user );
					user.WriteMsg( "<span class='notice'>You handcuff " + M + ".</span>" );

					if ( this is Obj_Item_Weapon_Restraints_Handcuffs_Cable ) {
						GlobalFuncs.feedback_add_details( "handcuffs", "C" );
					} else {
						GlobalFuncs.feedback_add_details( "handcuffs", "H" );
					}
					GlobalFuncs.add_logs( user, M, "handcuffed" );
				} else {
					user.WriteMsg( "<span class='warning'>You fail to handcuff " + M + "!</span>" );
				}
			}
			return false;
		}

	}

}
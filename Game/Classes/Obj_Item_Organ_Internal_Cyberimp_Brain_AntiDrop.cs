// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Organ_Internal_Cyberimp_Brain_AntiDrop : Obj_Item_Organ_Internal_Cyberimp_Brain {

		public bool active = false;
		public bool l_hand_ignore = false;
		public bool r_hand_ignore = false;
		public Obj_Item_Weapon l_hand_obj = null;
		public Obj_Item_Weapon r_hand_obj = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.implant_color = "#DE7E00";
			this.slot = "brain_antidrop";
			this.origin_tech = "materials=5;programming=4;biotech=4";
			this.organ_action_name = "Toggle Anti-Drop";
		}

		public Obj_Item_Organ_Internal_Cyberimp_Brain_AntiDrop ( dynamic M = null ) : base( (object)(M) ) {
			
		}

		// Function from file: augments_internal.dm
		public override void Remove( dynamic M = null, bool? special = null ) {
			special = special ?? false;

			
			if ( this.active ) {
				this.ui_action_click();
			}
			base.Remove( (object)(M), special );
			return;
		}

		// Function from file: augments_internal.dm
		public void release_items(  ) {
			
			if ( this.owner.contents.Contains( !this.l_hand_ignore && this.l_hand_obj != null ) ) {
				this.l_hand_obj.flags ^= 2;
			}

			if ( this.owner.contents.Contains( !this.r_hand_ignore && this.r_hand_obj != null ) ) {
				this.r_hand_obj.flags ^= 2;
			}
			return;
		}

		// Function from file: augments_internal.dm
		public override double emp_act( int severity = 0 ) {
			double? range = null;
			dynamic A = null;
			Obj_Item_Weapon L_item = null;
			Obj_Item_Weapon R_item = null;

			
			if ( !Lang13.Bool( this.owner ) ) {
				return 0;
			}
			range = ( severity != 0 ? 10 : 5 );
			L_item = this.owner.l_hand;
			R_item = this.owner.r_hand;
			this.release_items();
			base.emp_act( severity );

			if ( L_item != null ) {
				A = Rand13.PickFromTable( Map13.FetchInViewExcludeThis( null, range ) );
				L_item.throw_at( A, range, 2 );
				this.owner.WriteMsg( "<span class='notice'>Your left arm spasms and throws the " + L_item.name + "!</span>" );
			}

			if ( R_item != null ) {
				A = Rand13.PickFromTable( Map13.FetchInViewExcludeThis( null, range ) );
				R_item.throw_at( A, range, 2 );
				this.owner.WriteMsg( "<span class='notice'>Your right arm spasms and throws the " + R_item.name + "!</span>" );
			}
			return 0;
		}

		// Function from file: augments_internal.dm
		public override void ui_action_click(  ) {
			int msg = 0;

			this.active = !this.active;

			if ( this.active ) {
				this.l_hand_obj = this.owner.l_hand;
				this.r_hand_obj = this.owner.r_hand;

				if ( this.l_hand_obj != null ) {
					
					if ( Lang13.Bool( this.owner.l_hand.flags & 2 ) ) {
						this.l_hand_ignore = true;
					} else {
						this.owner.l_hand.flags |= 2;
						this.l_hand_ignore = false;
					}
				}

				if ( this.r_hand_obj != null ) {
					
					if ( Lang13.Bool( this.owner.r_hand.flags & 2 ) ) {
						this.r_hand_ignore = true;
					} else {
						this.owner.r_hand.flags |= 2;
						this.r_hand_ignore = false;
					}
				}

				if ( !( this.l_hand_obj != null ) && !( this.r_hand_obj != null ) ) {
					this.owner.WriteMsg( "<span class='notice'>You are not holding any items, your hands relax...</span>" );
					this.active = false;
				} else {
					msg = 0;
					msg += ( !this.l_hand_ignore && this.l_hand_obj != null ? true : false ) ?1:0;
					msg += ( !this.r_hand_ignore && this.r_hand_obj != null ? 2 : 0 );

					switch ((int)( msg )) {
						case 1:
							this.owner.WriteMsg( "<span class='notice'>Your left hand's grip tightens.</span>" );
							break;
						case 2:
							this.owner.WriteMsg( "<span class='notice'>Your right hand's grip tightens.</span>" );
							break;
						case 3:
							this.owner.WriteMsg( "<span class='notice'>Both of your hand's grips tighten.</span>" );
							break;
					}
				}
			} else {
				this.release_items();
				this.owner.WriteMsg( "<span class='notice'>Your hands relax...</span>" );
				this.l_hand_obj = null;
				this.r_hand_obj = null;
			}
			return;
		}

	}

}
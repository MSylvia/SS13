// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Atmospherics_Pipe_Simple : Obj_Machinery_Atmospherics_Pipe {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.initialize_directions = 3;
			this.device_type = 2;
			this.icon = "icons/obj/atmospherics/pipes/simple.dmi";
			this.icon_state = "intact";
		}

		public Obj_Machinery_Atmospherics_Pipe_Simple ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: simple.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.normalize_dir();
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );
			return null;
		}

		// Function from file: simple.dm
		public void normalize_dir(  ) {
			
			if ( this.dir == GlobalVars.SOUTH ) {
				this.dir = ((int)( GlobalVars.NORTH ));
			} else if ( this.dir == GlobalVars.WEST ) {
				this.dir = ((int)( GlobalVars.EAST ));
			}
			return;
		}

		// Function from file: simple.dm
		public override void atmosinit( ByTable node_connects = null ) {
			this.normalize_dir();
			base.atmosinit( node_connects );
			return;
		}

		// Function from file: simple.dm
		public override void SetInitDirections(  ) {
			
			if ( GlobalVars.diagonals.Contains( this.dir ) ) {
				this.initialize_directions = this.dir;
			}

			switch ((int)( this.dir )) {
				case 1:
				case 2:
					this.initialize_directions = 3;
					break;
				case 4:
				case 8:
					this.initialize_directions = 12;
					break;
			}
			return;
		}

	}

}
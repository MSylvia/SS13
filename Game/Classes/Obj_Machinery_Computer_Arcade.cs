// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Arcade : Obj_Machinery_Computer {

		public ByTable prizes = new ByTable()
											.Set( typeof(Obj_Item_Weapon_Storage_Box_Snappops), 2 )
											.Set( typeof(Obj_Item_Toy_AI), 2 )
											.Set( typeof(Obj_Item_Clothing_Under_Syndicate_Tacticool), 2 )
											.Set( typeof(Obj_Item_Toy_Sword), 2 )
											.Set( typeof(Obj_Item_Toy_Gun), 2 )
											.Set( typeof(Obj_Item_Weapon_Gun_Projectile_Shotgun_Toy_Crossbow), 2 )
											.Set( typeof(Obj_Item_Weapon_Storage_Box_Fakesyndiesuit), 2 )
											.Set( typeof(Obj_Item_Weapon_Storage_Crayons), 2 )
											.Set( typeof(Obj_Item_Toy_Spinningtoy), 2 )
											.Set( typeof(Obj_Item_Toy_Prize_Ripley), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Fireripley), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Deathripley), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Gygax), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Durand), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Honk), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Marauder), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Seraph), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Mauler), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Odysseus), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Phazon), 1 )
											.Set( typeof(Obj_Item_Toy_Prize_Reticence), 1 )
											.Set( typeof(Obj_Item_Toy_Cards_Deck), 2 )
											.Set( typeof(Obj_Item_Toy_Nuke), 2 )
											.Set( typeof(Obj_Item_Toy_Minimeteor), 2 )
											.Set( typeof(Obj_Item_Toy_Carpplushie), 2 )
											.Set( typeof(Obj_Item_Toy_Foamblade), 2 )
											.Set( typeof(Obj_Item_Toy_Redbutton), 2 )
											.Set( typeof(Obj_Item_Toy_Owl), 2 )
											.Set( typeof(Obj_Item_Toy_Griffin), 2 )
											.Set( typeof(Obj_Item_Weapon_Coin_Antagtoken), 2 )
											.Set( typeof(Obj_Item_Stack_Tile_Fakespace_Loaded), 2 )
											.Set( typeof(Obj_Item_Toy_ToyXeno), 2 )
										;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_keyboard = null;
			this.icon_screen = "invaders";
			this.icon_state = "arcade";
		}

		// Function from file: arcade.dm
		public Obj_Machinery_Computer_Arcade ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			dynamic choice = null;
			dynamic CB = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( !Lang13.Bool( this.circuit ) ) {
				choice = Rand13.PickFromTable( Lang13.GetTypes( typeof(Obj_Item_Weapon_Circuitboard_Arcade) ) - typeof(Obj_Item_Weapon_Circuitboard_Arcade) );
				CB = Lang13.Call( choice );
				Lang13.Call( CB.build_path, this.loc, CB );
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: arcade.dm
		public override double emp_act( int severity = 0 ) {
			dynamic empprize = null;
			int num_of_prizes = 0;
			int? i = null;

			base.emp_act( severity );

			if ( ( this.stat & 3 ) != 0 ) {
				return 0;
			}
			empprize = null;
			num_of_prizes = 0;

			switch ((int)( severity )) {
				case 1:
					num_of_prizes = Rand13.Int( 1, 4 );
					break;
				case 2:
					num_of_prizes = Rand13.Int( 0, 2 );
					break;
			}
			i = null;
			i = num_of_prizes;

			while (( i ??0) > 0) {
				empprize = GlobalFuncs.pickweight( this.prizes );
				Lang13.Call( empprize, this.loc );
				i--;
			}
			GlobalFuncs.explosion( this.loc, -1, 0, num_of_prizes + 1, null, null, null, num_of_prizes + 1 );
			return 0;
		}

		// Function from file: arcade.dm
		public void prizevend(  ) {
			dynamic prizeselect = null;
			dynamic prize = null;

			
			if ( !( this.contents.len != 0 ) ) {
				prizeselect = GlobalFuncs.pickweight( this.prizes );
				Lang13.Call( prizeselect, this.loc );

				if ( prizeselect is Obj_Item_Toy_Gun ) {
					new Obj_Item_Toy_Ammo_Gun( this.loc );
				} else if ( prizeselect is Obj_Item_Clothing_Suit_Syndicatefake ) {
					new Obj_Item_Clothing_Head_Syndicatefake( this.loc );
				}
			} else {
				prize = Rand13.PickFromTable( this.contents );
				prize.loc = this.loc;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Twohanded_Required : Obj_Item_Weapon_Twohanded {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 5;
		}

		public Obj_Item_Weapon_Twohanded_Required ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: twohanded.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic H = null;

			H = ((Mob)a).get_inactive_hand();

			if ( Map13.GetDistance( this, a ) > 1 ) {
				return 0;
			}

			if ( H != null ) {
				a.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " is too cumbersome to carry in one hand!</span>" ).ToString() );
				return null;
			}
			this.wield( a );
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: twohanded.dm
		public override dynamic mob_can_equip( Mob M = null, dynamic slot = null, bool? disable_warning = null ) {
			
			if ( this.wielded ) {
				M.WriteMsg( new Txt( "<span class='warning'>" ).The( this ).item().str( " is too cumbersome to carry with anything but your hands!</span>" ).ToString() );
				return 0;
			}
			return base.mob_can_equip( M, (object)(slot), disable_warning );
		}

		// Function from file: twohanded.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			return null;
		}

	}

}
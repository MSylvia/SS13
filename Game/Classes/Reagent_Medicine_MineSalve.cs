// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Medicine_MineSalve : Reagent_Medicine {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Miner's Salve";
			this.id = "mine_salve";
			this.description = "A powerful painkiller. Restores bruising and burns in addition to making the patient believe they are fully healed.";
			this.color = "#6D6374";
			this.metabolization_rate = 0.16;
		}

		// Function from file: medicine_reagents.dm
		public override void on_mob_delete( dynamic M = null ) {
			dynamic N = null;

			
			if ( M is Mob_Living_Carbon ) {
				N = M;
				N.hal_screwyhud = 0;
			}
			base.on_mob_delete( (object)(M) );
			return;
		}

		// Function from file: medicine_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null ) {
			method = method ?? GlobalVars.TOUCH;
			show_message = show_message ?? true;

			
			if ( M is Mob_Living_Carbon && Convert.ToInt32( M.stat ) != 2 ) {
				
				if ( new ByTable(new object [] { GlobalVars.INGEST, GlobalVars.VAPOR, GlobalVars.INJECT }).Contains( method ) ) {
					((Mob)M).Stun( 4 );
					((Mob)M).Weaken( 4 );

					if ( show_message == true ) {
						M.WriteMsg( "<span class='warning'>Your stomach agonizingly cramps!</span>" );
					}
				} else if ( show_message == true ) {
					M.WriteMsg( "<span class='danger'>You feel your wounds fade away to nothing!</span>" );
				}
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection) );
			return 0;
		}

		// Function from file: medicine_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			dynamic N = null;

			
			if ( M is Mob_Living_Carbon ) {
				N = M;
				N.hal_screwyhud = 5;
			}
			((Mob_Living)M).adjustBruteLoss( -0.25 );
			((Mob_Living)M).adjustFireLoss( -0.25 );
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
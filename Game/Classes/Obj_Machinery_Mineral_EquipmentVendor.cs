// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Mineral_EquipmentVendor : Obj_Machinery_Mineral {

		public dynamic inserted_id = null;
		public ByTable prize_list = new ByTable(new object [] { 
											new Data_MiningEquipment( "Stimpack", typeof(Obj_Item_Weapon_ReagentContainers_Hypospray_Medipen_Stimpack), 50 ), 
											new Data_MiningEquipment( "Stimpack Bundle", typeof(Obj_Item_Weapon_Storage_Box_Medipens_Utility), 200 ), 
											new Data_MiningEquipment( "Whiskey", typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle_Whiskey), 100 ), 
											new Data_MiningEquipment( "Cigar", typeof(Obj_Item_Clothing_Mask_Cigarette_Cigar_Havana), 150 ), 
											new Data_MiningEquipment( "Soap", typeof(Obj_Item_Weapon_Soap_Nanotrasen), 200 ), 
											new Data_MiningEquipment( "Laser Pointer", typeof(Obj_Item_Device_LaserPointer), 300 ), 
											new Data_MiningEquipment( "Alien Toy", typeof(Obj_Item_Clothing_Mask_Facehugger_Toy), 300 ), 
											new Data_MiningEquipment( "Advanced Scanner", typeof(Obj_Item_Device_TScanner_AdvMiningScanner), 400 ), 
											new Data_MiningEquipment( "Hivelord Stabilizer", typeof(Obj_Item_Weapon_Hivelordstabilizer), 400 ), 
											new Data_MiningEquipment( "Mining Drone", typeof(Mob_Living_SimpleAnimal_Hostile_MiningDrone), 500 ), 
											new Data_MiningEquipment( "GAR mesons", typeof(Obj_Item_Clothing_Glasses_Meson_Gar), 500 ), 
											new Data_MiningEquipment( "Brute First-Aid Kit", typeof(Obj_Item_Weapon_Storage_Firstaid_Brute), 600 ), 
											new Data_MiningEquipment( "Jaunter", typeof(Obj_Item_Device_WormholeJaunter), 600 ), 
											new Data_MiningEquipment( "Kinetic Accelerator", typeof(Obj_Item_Weapon_Gun_Energy_KineticAccelerator), 750 ), 
											new Data_MiningEquipment( "Resonator", typeof(Obj_Item_Weapon_Resonator), 800 ), 
											new Data_MiningEquipment( "Lazarus Injector", typeof(Obj_Item_Weapon_LazarusInjector), 1000 ), 
											new Data_MiningEquipment( "Silver Pickaxe", typeof(Obj_Item_Weapon_Pickaxe_Silver), 1000 ), 
											new Data_MiningEquipment( "Jetpack", typeof(Obj_Item_Weapon_Tank_Jetpack_Carbondioxide_Mining), 2000 ), 
											new Data_MiningEquipment( "Space Cash", typeof(Obj_Item_Stack_Spacecash_C1000), 2000 ), 
											new Data_MiningEquipment( "Diamond Pickaxe", typeof(Obj_Item_Weapon_Pickaxe_Diamond), 2000 ), 
											new Data_MiningEquipment( "Super Resonator", typeof(Obj_Item_Weapon_Resonator_Upgraded), 2500 ), 
											new Data_MiningEquipment( "Super Accelerator", typeof(Obj_Item_Weapon_Gun_Energy_KineticAccelerator_Super), 3000 ), 
											new Data_MiningEquipment( "Point Transfer Card", typeof(Obj_Item_Weapon_Card_MiningPointCard), 500 )
										 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/machines/mining_machines.dmi";
			this.icon_state = "mining";
		}

		// Function from file: equipment_locker.dm
		public Obj_Machinery_Mineral_EquipmentVendor ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_MiningEquipmentVendor( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MatterBin( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MatterBin( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MatterBin( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_ConsoleScreen( null ) );
			this.RefreshParts();
			return;
		}

		// Function from file: equipment_locker.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			EffectSystem_SparkSpread s = null;

			s = new EffectSystem_SparkSpread();
			s.set_up( 5, 1, this );
			s.start();

			if ( Rand13.PercentChance( ((int)( 50 / ( severity ??0) )) ) && ( severity ??0) < 3 ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: equipment_locker.dm
		public void RedeemVoucher( dynamic voucher = null, dynamic redeemer = null ) {
			dynamic selection = null;

			selection = Interface13.Input( redeemer, "Pick your equipment", "Mining Voucher Redemption", null, new ByTable(new object [] { "Kinetic Accelerator", "Resonator", "Mining Drone", "Advanced Scanner" }), InputType.Null | InputType.Any );

			if ( !Lang13.Bool( selection ) || !this.Adjacent( redeemer ) || Lang13.Bool( voucher.gc_destroyed ) || voucher.loc != redeemer ) {
				return;
			}

			dynamic _a = selection; // Was a switch-case, sorry for the mess.
			if ( _a=="Kinetic Accelerator" ) {
				new Obj_Item_Weapon_Gun_Energy_KineticAccelerator( this.loc );
			} else if ( _a=="Resonator" ) {
				new Obj_Item_Weapon_Resonator( this.loc );
			} else if ( _a=="Mining Drone" ) {
				new Mob_Living_SimpleAnimal_Hostile_MiningDrone( this.loc );
				new Obj_Item_Weapon_Weldingtool_Hugetank( this.loc );
			} else if ( _a=="Advanced Scanner" ) {
				new Obj_Item_Device_TScanner_AdvMiningScanner( this.loc );
			}
			GlobalFuncs.qdel( voucher );
			return;
		}

		// Function from file: equipment_locker.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;

			
			if ( A is Obj_Item_Weapon_MiningVoucher ) {
				this.RedeemVoucher( A, user );
				return null;
			}

			if ( A is Obj_Item_Weapon_Card_Id ) {
				C = Task13.User.get_active_hand();

				if ( C is Obj_Item_Weapon_Card_Id && !( this.inserted_id is Obj_Item_Weapon_Card_Id ) ) {
					
					if ( !Task13.User.drop_item() ) {
						return null;
					}
					C.loc = this;
					this.inserted_id = C;
					this.interact( user );
				}
				return null;
			}

			if ( this.default_deconstruction_screwdriver( user, "mining-open", "mining", A ) ) {
				this.updateUsrDialog();
				return null;
			}

			if ( this.panel_open == true ) {
				
				if ( A is Obj_Item_Weapon_Crowbar ) {
					this.default_deconstruction_crowbar( A );
				}
				return 1;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: equipment_locker.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic I = null;
			dynamic prize = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["choice"] ) ) {
				
				if ( this.inserted_id is Obj_Item_Weapon_Card_Id ) {
					
					if ( href_list["choice"] == "eject" ) {
						this.inserted_id.loc = this.loc;
						this.inserted_id.__CallVerb("Pick up" );
						this.inserted_id = null;
					}
				} else if ( href_list["choice"] == "insert" ) {
					I = Task13.User.get_active_hand();

					if ( I is Obj_Item_Weapon_Card_Id ) {
						
						if ( !Task13.User.drop_item() ) {
							return null;
						}
						I.loc = this;
						this.inserted_id = I;
					} else {
						Task13.User.WriteMsg( "<span class='danger'>No valid ID.</span>" );
					}
				}
			}

			if ( Lang13.Bool( href_list["purchase"] ) ) {
				
				if ( this.inserted_id is Obj_Item_Weapon_Card_Id ) {
					prize = Lang13.FindObj( href_list["purchase"] );

					if ( !Lang13.Bool( prize ) || !this.prize_list.Contains( prize ) ) {
						return null;
					}

					if ( Convert.ToDouble( prize.cost ) > this.inserted_id.mining_points ) {
						
					} else {
						this.inserted_id.mining_points -= Convert.ToDouble( prize.cost );
						Lang13.Call( prize.equipment_path, this.loc );
					}
				}
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: equipment_locker.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			dynamic dat = null;
			Data_MiningEquipment prize = null;
			Browser popup = null;

			dat += "<div class='statusDisplay'>";

			if ( this.inserted_id is Obj_Item_Weapon_Card_Id ) {
				dat += new Txt( "You have " ).item( this.inserted_id.mining_points ).str( " mining points collected. <A href='?src=" ).Ref( this ).str( ";choice=eject'>Eject ID.</A><br>" ).ToString();
			} else {
				dat += new Txt( "No ID inserted.  <A href='?src=" ).Ref( this ).str( ";choice=insert'>Insert ID.</A><br>" ).ToString();
			}
			dat += "</div>";
			dat += "<br><b>Equipment point cost list:</b><BR><table border='0' width='200'>";

			foreach (dynamic _a in Lang13.Enumerate( this.prize_list, typeof(Data_MiningEquipment) )) {
				prize = _a;
				
				dat += new Txt( "<tr><td>" ).item( prize.equipment_name ).str( "</td><td>" ).item( prize.cost ).str( "</td><td><A href='?src=" ).Ref( this ).str( ";purchase=" ).Ref( prize ).str( "'>Purchase</A></td></tr>" ).ToString();
			}
			dat += "</table>";
			popup = new Browser( user, "miningvendor", "Mining Equipment Vendor", 400, 350 );
			popup.set_content( dat );
			popup.open();
			return null;
		}

		// Function from file: equipment_locker.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			this.interact( a );
			return null;
		}

		// Function from file: equipment_locker.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( Lang13.Bool( this.powered() ) ) {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			} else {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-off";
			}
			return null;
		}

		// Function from file: equipment_locker.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_EmergencyShuttle : Obj_Machinery_Computer {

		public int auth_need = 3;
		public ByTable authorized = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "shuttle";
			this.icon_keyboard = "tech_key";
		}

		public Obj_Machinery_Computer_EmergencyShuttle ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: shuttle.dm
		public override bool emag_act( dynamic user = null ) {
			double time = 0;

			
			if ( !( this.emagged != 0 ) && GlobalVars.SSshuttle.emergency.mode == 3 ) {
				time = GlobalVars.SSshuttle.emergency.timeLeft();
				GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( user.client ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) has emagged the emergency shuttle  " ).item( time ).str( " seconds before launch." ).ToString() );
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has emagged the emergency shuttle in (" + this.x + "," + this.y + "," + this.z + ") " + time + " seconds before launch." );
				GlobalFuncs.minor_announce( "The emergency shuttle will launch in 10 seconds", "SYSTEM ERROR:", null );
				GlobalVars.SSshuttle.emergency.setTimer( 100 );
				this.emagged = 1;
			}
			return false;
		}

		// Function from file: shuttle.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic pda = null;
			dynamic cardaccess = null;
			string choice = null;
			double seconds = 0;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( !( A is Obj_Item_Weapon_Card ) ) {
				return null;
			}

			if ( GlobalVars.SSshuttle.emergency.mode != 3 ) {
				return null;
			}

			if ( !Lang13.Bool( user ) ) {
				return null;
			}

			if ( GlobalVars.SSshuttle.emergency.timeLeft() < 11 ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Card_Id || A is Obj_Item_Device_Pda ) {
				
				if ( A is Obj_Item_Device_Pda ) {
					pda = A;
					A = pda.id;
				}

				if ( !Lang13.Bool( A.access ) ) {
					user.WriteMsg( "The access level of " + A.registered_name + "'s card is not high enough. " );
					return null;
				}
				cardaccess = A.access;

				if ( !( cardaccess is ByTable ) || !Lang13.Bool( cardaccess.len ) ) {
					user.WriteMsg( "The access level of " + A.registered_name + "'s card is not high enough. " );
					return null;
				}

				if ( !Lang13.Bool( A.access.Contains( GlobalVars.access_heads ) ) ) {
					user.WriteMsg( "The access level of " + A.registered_name + "'s card is not high enough. " );
					return 0;
				}
				choice = Interface13.Alert( user, new Txt( "Would you like to (un)authorize a shortened launch time? " ).item( this.auth_need - this.authorized.len ).str( " authorization" ).s().str( " are still needed. Use abort to cancel all authorizations." ).ToString(), "Shuttle Launch", "Authorize", "Repeal", "Abort" );

				if ( GlobalVars.SSshuttle.emergency.mode != 3 || ((Mob)user).get_active_hand() != A ) {
					return 0;
				}
				seconds = GlobalVars.SSshuttle.emergency.timeLeft();

				if ( seconds <= 10 ) {
					return 0;
				}

				switch ((string)( choice )) {
					case "Authorize":
						
						if ( !( this.authorized.Find( A.registered_name ) != 0 ) ) {
							this.authorized.Add( A.registered_name );

							if ( this.auth_need - this.authorized.len > 0 ) {
								GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( user.client ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) has authorized early shuttle launch " ).ToString() );
								GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has authorized early shuttle launch in (" + this.x + "," + this.y + "," + this.z + ")" );
								GlobalFuncs.minor_announce( "" + ( this.auth_need - this.authorized.len ) + " more authorization(s) needed until shuttle is launched early", null, true );
							} else {
								GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( user.client ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) has launched the emergency shuttle " ).item( seconds ).str( " seconds before launch." ).ToString() );
								GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has launched the emergency shuttle in (" + this.x + "," + this.y + "," + this.z + ") " + seconds + " seconds before launch." );
								GlobalFuncs.minor_announce( "The emergency shuttle will launch in 10 seconds", null, true );
								GlobalVars.SSshuttle.emergency.setTimer( 100 );
							}
						}
						break;
					case "Repeal":
						
						if ( this.authorized.Remove( A.registered_name ) ) {
							GlobalFuncs.minor_announce( "" + ( this.auth_need - this.authorized.len ) + " authorizations needed until shuttle is launched early" );
						}
						break;
					case "Abort":
						
						if ( this.authorized.len != 0 ) {
							GlobalFuncs.minor_announce( "All authorizations to launch the shuttle early have been revoked." );
							this.authorized.Cut();
						}
						break;
				}
			}
			return null;
		}

	}

}
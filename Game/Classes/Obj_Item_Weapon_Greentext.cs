// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Greentext : Obj_Item_Weapon {

		public Mob last_holder = null;
		public Mob new_holder = null;
		public ByTable color_altered_mobs = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 4;
			this.icon = "icons/obj/wizard.dmi";
			this.icon_state = "greentext";
		}

		public Obj_Item_Weapon_Greentext ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: greentext.dm
		public override dynamic Destroy(  ) {
			dynamic M = null;
			string message = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				
				message = "<span class='warning'>A dark temptation has passed from this world";

				if ( this.color_altered_mobs.Contains( M ) ) {
					message += " and you're finally able to forgive yourself";
					M.color = Lang13.Initial( M, "color" );
				}
				message += "...</span>";
				M.WriteMsg( message );
			}
			return base.Destroy();
		}

		// Function from file: greentext.dm
		public override int? process( dynamic seconds = null ) {
			Objective O = null;

			
			if ( this.new_holder != null && this.new_holder.z == 2 ) {
				this.new_holder.WriteMsg( "<font color='green'>At last it feels like victory is assured!</font>" );

				if ( !GlobalVars.ticker.mode.traitors.Contains( this.new_holder ) ) {
					GlobalVars.ticker.mode.traitors.Add( this.new_holder.mind );
				}
				this.new_holder.mind.special_role = "winner";
				O = new Objective( "Succeed" );
				O.completed = true;
				O.owner = this.new_holder.mind;
				this.new_holder.mind.objectives.Add( O );
				this.new_holder.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <font color='green'>Won with greentext!!!</font>" );
				this.color_altered_mobs.Remove( this.new_holder );
				GlobalFuncs.qdel( this );
			}

			if ( this.last_holder != null && this.last_holder != this.new_holder ) {
				this.last_holder.WriteMsg( "<span class='warning'>A sudden wave of failure washes over you...</span>" );
				this.last_holder.color = "#FF0000";
				this.last_holder = this.new_holder;
			}
			return null;
		}

		// Function from file: greentext.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.color_altered_mobs.Contains( user ) ) {
				user.WriteMsg( "<span class='warning'>A sudden wave of failure washes over you...</span>" );
				user.color = "#FF0000";
			}
			this.last_holder = null;
			this.new_holder = null;
			GlobalVars.SSobj.processing.Remove( this );
			base.dropped( (object)(user) );
			return false;
		}

		// Function from file: greentext.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			user.WriteMsg( "<font color='green'>So long as you leave this place with greentext in hand you know will be happy...</font>" );

			if ( user.mind != null && user.mind.objectives.len > 0 ) {
				user.WriteMsg( "<span class='warning'>... so long as you still perform your other objectives that is!</span>" );
			}
			this.new_holder = user;

			if ( !( this.last_holder != null ) ) {
				this.last_holder = user;
			}

			if ( !this.color_altered_mobs.Contains( user ) ) {
				this.color_altered_mobs.Add( user );
			}
			user.color = "#00FF00";
			GlobalVars.SSobj.processing.Or( this );
			base.equipped( user, (object)(slot) );
			return;
		}

	}

}
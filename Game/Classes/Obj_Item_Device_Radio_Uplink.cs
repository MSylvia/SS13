// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Radio_Uplink : Obj_Item_Device_Radio {

		// Function from file: uplinks.dm
		public Obj_Item_Device_Radio_Uplink ( dynamic loc = null ) : base( (object)(loc) ) {
			this.hidden_uplink = new Obj_Item_Device_Uplink_Hidden( this );
			this.icon_state = "radio";
			return;
		}

		// Function from file: uplinks.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.hidden_uplink != null ) {
				this.hidden_uplink.trigger( user );
			}
			return null;
		}

		// Function from file: uplinks.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic path = null;
			dynamic D = null;

			
			if ( A is Obj_Item_Weapon ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(UplinkItem) ) - typeof(UplinkItem) )) {
					path = _a;
					
					D = path;

					if ( Lang13.Initial( D, "item" ) == A.type && Lang13.Bool( Lang13.Initial( D, "refundable" ) ) ) {
						this.hidden_uplink.uses += D.cost;
						this.hidden_uplink.used_TC -= Convert.ToDouble( Lang13.Initial( D, "cost" ) );
						user.WriteMsg( "<span class='notice'>" + A + " refunded.</span>" );
						GlobalFuncs.qdel( A );
						return null;
					}
				}
			}
			return null;
		}

	}

}
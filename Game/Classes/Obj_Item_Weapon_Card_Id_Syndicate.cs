// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Card_Id_Syndicate : Obj_Item_Weapon_Card_Id {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.access = new ByTable(new object [] { 12, 150 });
			this.origin_tech = "syndicate=3";
		}

		public Obj_Item_Weapon_Card_Id_Syndicate ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cards_ids.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string t = null;
			string u = null;

			
			if ( user is Mob_Living && Lang13.Bool( user.mind ) ) {
				
				if ( Lang13.Bool( user.mind.special_role ) ) {
					
					if ( Interface13.Alert( user, "Action", "Agent ID", "Show", "Forge" ) == "Forge" ) {
						t = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( user, "What name would you like to put on this card?", "Agent card name", ( Lang13.Bool( this.registered_name ) ? this.registered_name : ( user is Mob_Living_Carbon_Human ? user.real_name : user.name ) ), null, InputType.Str | InputType.Null ) ), 1, 26 );

						if ( !Lang13.Bool( t ) || t == "Unknown" || t == "floor" || t == "wall" || t == "r-wall" ) {
							
							if ( Lang13.Bool( t ) ) {
								Interface13.Alert( "Invalid name." );
							}
							return null;
						}
						this.registered_name = t;
						u = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( user, "What occupation would you like to put on this card?\nNote: This will not grant any access levels other than Maintenance.", "Agent card job assignment", "Assistant", null, InputType.Str | InputType.Null ) ), 1, 1024 );

						if ( !Lang13.Bool( u ) ) {
							this.registered_name = "";
							return null;
						}
						this.assignment = u;
						this.update_label();
						user.WriteMsg( "<span class='notice'>You successfully forge the ID card.</span>" );
						return null;
					}
				}
			}
			base.attack_self( (object)(user), (object)(flag), emp );
			return null;
		}

		// Function from file: cards_ids.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic I = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( target is Obj_Item_Weapon_Card_Id ) {
				I = target;
				this.access |= I.access;

				if ( user is Mob_Living && Lang13.Bool( user.mind ) ) {
					
					if ( Lang13.Bool( user.mind.special_role ) ) {
						Task13.User.WriteMsg( "<span class='notice'>The card's microscanners activate as you pass it over the ID, copying its access.</span>" );
					}
				}
			}
			return false;
		}

	}

}
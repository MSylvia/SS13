// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Piano : Obj_Structure {

		public Song song = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/musician.dmi";
			this.icon_state = "minimoog";
		}

		// Function from file: musician.dm
		public Obj_Structure_Piano ( dynamic loc = null ) : base( (object)(loc) ) {
			this.song = new Song( "piano", this );

			if ( Rand13.PercentChance( 50 ) ) {
				this.name = "space minimoog";
				this.desc = "This is a minimoog, like a space piano, but more spacey!";
				this.icon_state = "minimoog";
			} else {
				this.name = "space piano";
				this.desc = "This is a space piano, like a regular piano, but always in tune! Even if the musician isn't.";
				this.icon_state = "piano";
			}
			return;
		}

		// Function from file: musician.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Wrench ) {
				
				if ( !Lang13.Bool( this.anchored ) && !this.isinspace() ) {
					GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
					user.WriteMsg( new Txt( "<span class='notice'> You begin to tighten " ).the( this ).item().str( " to the floor...</span>" ).ToString() );

					if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
						((Ent_Static)user).visible_message( new Txt().item( user ).str( " tightens " ).the( this ).item().str( "'s casters." ).ToString(), new Txt( "<span class='notice'>You tighten " ).the( this ).item().str( "'s casters. Now it can be played again.</span>" ).ToString(), "<span class='italics'>You hear ratchet.</span>" );
						this.anchored = 1;
					}
				} else if ( Lang13.Bool( this.anchored ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
					user.WriteMsg( new Txt( "<span class='notice'> You begin to loosen " ).the( this ).item().str( "'s casters...</span>" ).ToString() );

					if ( GlobalFuncs.do_after( user, 40 / A.toolspeed, null, this ) ) {
						((Ent_Static)user).visible_message( new Txt().item( user ).str( " loosens " ).the( this ).item().str( "'s casters." ).ToString(), new Txt( "<span class='notice'>You loosen " ).the( this ).item().str( ". Now it can be pulled somewhere else.</span>" ).ToString(), "<span class='italics'>You hear ratchet.</span>" );
						this.anchored = 0;
					}
				}
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: musician.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			
			if ( !Lang13.Bool( user ) || !Lang13.Bool( this.anchored ) ) {
				return null;
			}
			((Mob)user).set_machine( this );
			this.song.interact( user );
			return null;
		}

		// Function from file: musician.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: musician.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !((Mob)a).IsAdvancedToolUser() ) {
				a.WriteMsg( "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return 1;
			}
			this.interact( a );
			return null;
		}

		// Function from file: musician.dm
		public override void initialize(  ) {
			this.song.tempo = this.song.sanitize_tempo( this.song.tempo );
			base.initialize();
			return;
		}

		// Function from file: musician.dm
		public override dynamic Destroy(  ) {
			GlobalFuncs.qdel( this.song );
			this.song = null;
			return base.Destroy();
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Pet_Dog_Corgi_Ian : Mob_Living_SimpleAnimal_Pet_Dog_Corgi {

		public int turns_since_scan = 0;
		public Obj_Item_Weapon_ReagentContainers_Food_Snacks movement_target = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "Ian";
		}

		public Mob_Living_SimpleAnimal_Pet_Dog_Corgi_Ian ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: dog.dm
		public override bool Life(  ) {
			Obj_Item_Weapon_ReagentContainers_Food_Snacks S = null;
			dynamic i = null;

			base.Life();

			if ( !( this.stat != 0 ) && !( this.resting != 0 ) && !( this.buckled != null ) ) {
				this.turns_since_scan++;

				if ( this.turns_since_scan > 5 ) {
					this.turns_since_scan = 0;

					if ( this.movement_target != null && !( this.movement_target.loc is Tile || this.movement_target.loc is Mob_Living_Carbon_Human ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;
					}

					if ( !( this.movement_target != null ) || !Map13.FetchInViewExcludeThis( 3, this ).Contains( this.movement_target.loc ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;

						foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInViewExcludeThis( 3, this ), typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks) )) {
							S = _a;
							

							if ( S.loc is Tile || S.loc is Mob_Living_Carbon_Human ) {
								this.movement_target = S;
								break;
							}
						}
					}

					if ( this.movement_target != null ) {
						this.stop_automated_movement = true;
						Map13.StepTowards( this, this.movement_target, 1 );
						Task13.Sleep( 3 );
						Map13.StepTowards( this, this.movement_target, 1 );
						Task13.Sleep( 3 );
						Map13.StepTowards( this, this.movement_target, 1 );

						if ( this.movement_target != null ) {
							
							if ( this.movement_target.loc.x < this.x ) {
								this.dir = ((int)( GlobalVars.WEST ));
							} else if ( this.movement_target.loc.x > this.x ) {
								this.dir = ((int)( GlobalVars.EAST ));
							} else if ( this.movement_target.loc.y < this.y ) {
								this.dir = ((int)( GlobalVars.SOUTH ));
							} else if ( this.movement_target.loc.y > this.y ) {
								this.dir = ((int)( GlobalVars.NORTH ));
							} else {
								this.dir = ((int)( GlobalVars.SOUTH ));
							}

							if ( !this.Adjacent( this.movement_target ) ) {
								return false;
							}

							if ( this.movement_target.loc is Tile ) {
								this.movement_target.attack_animal( this );
							} else if ( this.movement_target.loc is Mob_Living_Carbon_Human ) {
								
								if ( Rand13.PercentChance( 20 ) ) {
									this.emote( "me", 1, "stares at " + this.movement_target.loc + "'s " + this.movement_target + " with a sad puppy-face" );
								}
							}
						}
					}
				}

				if ( Rand13.PercentChance( 1 ) ) {
					this.emote( "me", 1, Rand13.Pick(new object [] { "dances around.", "chases its tail!" }) );
					Task13.Schedule( 0, (Task13.Closure)(() => {
						
						foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2 }) )) {
							i = _b;
							
							this.dir = Convert.ToInt32( i );
							Task13.Sleep( 1 );
						}
						return;
					}));
				}
			}
			return false;
		}

	}

}
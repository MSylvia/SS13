// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_MechBayPowerConsole : Obj_Machinery_Computer {

		public dynamic recharge_port = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "recharge_comp";
			this.icon_keyboard = "rd_key";
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_MechBayPowerConsole);
		}

		public Obj_Machinery_Computer_MechBayPowerConsole ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: mech_bay.dm
		public override void initialize(  ) {
			this.reconnect();
			return;
		}

		// Function from file: mech_bay.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );

			if ( !Lang13.Bool( this.recharge_port ) || !Lang13.Bool( this.recharge_port.recharging_mech ) || !Lang13.Bool( this.recharge_port.recharging_mech.cell ) || !( Convert.ToDouble( this.recharge_port.recharging_mech.cell.charge ) < ( this.recharge_port.recharging_mech.cell.maxcharge ??0) ) || ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.overlays.Add( "recharge_comp_on" );
			return null;
		}

		// Function from file: mech_bay.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( Lang13.Bool( this.recharge_port ) && Lang13.Bool( this.recharge_port.recharging_mech ) && Lang13.Bool( this.recharge_port.recharging_mech.cell ) ) {
				this.updateDialog();
			}
			return null;
		}

		// Function from file: mech_bay.dm
		public void reconnect(  ) {
			dynamic D = null;
			Tile A = null;

			
			if ( Lang13.Bool( this.recharge_port ) ) {
				return;
			}
			this.recharge_port = Lang13.FindIn( typeof(Obj_Machinery_MechBayRechargePort), Map13.FetchInRange( null, 1 ) );

			if ( !Lang13.Bool( this.recharge_port ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cardinal )) {
					D = _a;
					
					A = Map13.GetStep( this, Convert.ToInt32( D ) );
					A = Map13.GetStep( A, Convert.ToInt32( D ) );
					this.recharge_port = Lang13.FindIn( typeof(Obj_Machinery_MechBayRechargePort), A );

					if ( Lang13.Bool( this.recharge_port ) ) {
						break;
					}
				}
			}

			if ( Lang13.Bool( this.recharge_port ) ) {
				
				if ( !( this.recharge_port.recharge_console != null ) ) {
					this.recharge_port.recharge_console = this;
				} else {
					this.recharge_port = null;
				}
			}
			return;
		}

		// Function from file: mech_bay.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["reconnect"] ) ) {
				this.reconnect();
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			dynamic data = null;
			Browser popup = null;

			
			if ( !Lang13.Bool( this.recharge_port ) ) {
				data += "<div class='statusDisplay'>No recharging port detected.</div><BR>";
				data += new Txt( "<A href='?src=" ).Ref( this ).str( ";reconnect=1'>Reconnect</A>" ).ToString();
			} else {
				data += "<h3>Mech status</h3>";

				if ( !Lang13.Bool( this.recharge_port.recharging_mech ) ) {
					data += "<div class='statusDisplay'>No mech detected.</div>";
				} else {
					data += "<div class='statusDisplay'>Integrity: " + this.recharge_port.recharging_mech.health + "<BR>";

					if ( this.recharge_port.recharging_mech.cell.crit_fail ) {
						data += "<span class='bad'>WARNING : the mech cell seems faulty!</span></div>";
					} else {
						data += "Power: " + this.recharge_port.recharging_mech.cell.charge + "/" + this.recharge_port.recharging_mech.cell.maxcharge + "</div>";
					}
				}
			}
			popup = new Browser( user, "mech recharger", this.name, 300, 300 );
			popup.set_content( data );
			popup.open();
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			this.interact( a );
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.interact( user );
		}

	}

}
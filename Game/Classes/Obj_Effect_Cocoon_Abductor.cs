// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Cocoon_Abductor : Obj_Effect_Cocoon {

		public int hatch_time = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#0a780a";
			this.icon = "icons/effects/effects.dmi";
			this.icon_state = "cocoon_large3";
		}

		public Obj_Effect_Cocoon_Abductor ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: gland.dm
		public override int? process( dynamic seconds = null ) {
			dynamic M = null;

			
			if ( Game13.time > this.hatch_time ) {
				GlobalVars.SSobj.processing.Remove( this );

				foreach (dynamic _a in Lang13.Enumerate( this.contents )) {
					M = _a;
					
					this.visible_message( "<span class='warning'>" + this + " hatches!</span>" );
					M.loc = this.loc;
				}
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: gland.dm
		public void Start(  ) {
			this.hatch_time = Game13.time + 600;
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: gland.dm
		public void Copy( dynamic H = null ) {
			Mob_Living_Carbon_Human_Interactive_Greytide clone = null;
			ByTable slots = null;
			dynamic slot = null;
			dynamic I = null;

			clone = new Mob_Living_Carbon_Human_Interactive_Greytide( this );
			clone.hardset_dna( H.dna.uni_identity, H.dna.struc_enzymes, H.real_name, H.dna.blood_type, H.dna.species.type, H.dna.features );
			slots = new ByTable(new object [] { 1, 14, 13, 2, 11, 12, 10, 8, 9, 6, 17, 15, 16, 7 });

			foreach (dynamic _a in Lang13.Enumerate( slots )) {
				slot = _a;
				
				I = ((Mob)H).get_item_by_slot( slot );

				if ( Lang13.Bool( I ) ) {
					clone.equip_to_slot_if_possible( I, slot );
				}
			}
			return;
		}

	}

}
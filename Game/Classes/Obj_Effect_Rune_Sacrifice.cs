// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune_Sacrifice : Obj_Effect_Rune {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#ffffff";
			this.cultist_name = "Sacrifice";
			this.cultist_desc = "Sacrifices a crew member to the Geometer. May place them into a soul shard if their spirit remains in their body.";
			this.invocation = "Barhah hra zar'garis!";
			this.icon_state = "3";
		}

		// Function from file: runes.dm
		public Obj_Effect_Rune_Sacrifice ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_state = "" + Rand13.Int( 1, 6 );
			return;
		}

		// Function from file: runes.dm
		public void sac( dynamic T = null ) {
			Mob_Living M = null;
			Obj_Item_Device_Soulstone stone = null;

			
			if ( Lang13.Bool( T ) ) {
				GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Cult_Sac), this.loc );

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 3 ), typeof(Mob_Living) )) {
					M = _a;
					

					if ( GlobalFuncs.iscultist( M ) ) {
						
						if ( T is Mob_Living_Carbon_Human || T is Mob_Living_Silicon_Robot ) {
							M.WriteMsg( "<span class='cultlarge'>\"I accept this sacrifice.\"</span>" );
						} else {
							M.WriteMsg( "<span class='cultlarge'>\"I accept this meager sacrifice.\"</span>" );
						}
					}
				}

				if ( Lang13.Bool( T.mind ) ) {
					
					if ( T is Mob_Living_Carbon_Human || T is Mob_Living_Silicon_Robot ) {
						new Obj_Item_SummoningOrb( GlobalFuncs.get_turf( this ) );
					}
					stone = new Obj_Item_Device_Soulstone( GlobalFuncs.get_turf( this ) );
					stone.invisibility = 100;

					if ( !stone.transfer_soul( "FORCE", T, Task13.User ) ) {
						GlobalFuncs.qdel( stone );
					}

					if ( stone != null ) {
						stone.invisibility = 0;
					}

					if ( !Lang13.Bool( T ) ) {
						this.rune_in_use = false;
						return;
					}
				}

				if ( T is Mob_Living_Silicon_Robot ) {
					GlobalFuncs.playsound( T, "sound/magic/Disable_Tech.ogg", 100, 1 );
					((Mob)T).dust();
				} else {
					GlobalFuncs.playsound( T, "sound/magic/Disintegrate.ogg", 100, 1 );
					((Mob)T).gib();
				}
			}
			this.rune_in_use = false;
			return;
		}

		// Function from file: runes.dm
		public override void invoke( dynamic user = null ) {
			dynamic T = null;
			ByTable possible_targets = null;
			Mob_Living M = null;
			dynamic offering = null;
			int cultists_nearby = 0;
			Mob_Living M2 = null;

			
			if ( this.rune_in_use ) {
				return;
			}
			this.rune_in_use = true;
			T = GlobalFuncs.get_turf( this );
			possible_targets = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Mob_Living) )) {
				M = _a;
				

				if ( !GlobalFuncs.iscultist( M ) ) {
					possible_targets.Add( M );
				}
			}
			offering = null;

			if ( possible_targets.len > 1 ) {
				offering = Interface13.Input( user, "Choose an offering to sacrifice.", "Unholy Tribute", null, possible_targets, InputType.Null | InputType.Any );

				if ( !this.Adjacent( user ) || !( this != null ) || GlobalFuncs.qdeleted( this ) || ((Mob)user).incapacitated() ) {
					return;
				}
			} else if ( possible_targets.len != 0 ) {
				offering = possible_targets[possible_targets.len];
			}

			if ( !Lang13.Bool( offering ) ) {
				this.rune_in_use = false;
				return;
			}

			if ( ((Mob)offering).null_rod_check() ) {
				user.WriteMsg( "<span class='warning'>Something is blocking the Geometer's magic!</span>" );
				GlobalFuncs.log_game( "Sacrifice rune failed - target has null rod" );
				this.fail_invoke();
				this.rune_in_use = false;
				return;
			}

			if ( ( offering is Mob_Living_Carbon_Human || offering is Mob_Living_Silicon_Robot ) && Convert.ToInt32( offering.stat ) != 2 ) {
				cultists_nearby = 1;

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this, 1 ), typeof(Mob_Living) )) {
					M2 = _b;
					

					if ( GlobalFuncs.iscultist( M2 ) && M2 != user ) {
						cultists_nearby++;
						M2.say( this.invocation );
					}
				}

				if ( cultists_nearby < 2 ) {
					user.WriteMsg( "<span class='cultitalic'>" + offering + " is too greatly linked to the world! You need more acolytes!</span>" );
					this.fail_invoke();
					GlobalFuncs.log_game( "Sacrifice rune failed - not enough acolytes and target is living" );
					this.rune_in_use = false;
					return;
				}
			}
			this.visible_message( "<span class='warning'>" + this + " pulses blood red!</span>" );
			this.color = "#7e1717";
			Task13.Schedule( 5, (Task13.Closure)(() => {
				this.color = Lang13.Initial( this, "color" );
				return;
			}));
			this.sac( offering );
			return;
		}

	}

}
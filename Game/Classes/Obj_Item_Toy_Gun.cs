// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Gun : Obj_Item_Toy {

		public int bullets = 7;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "gun";
			this.lefthand_file = "icons/mob/inhands/guns_lefthand.dmi";
			this.righthand_file = "icons/mob/inhands/guns_righthand.dmi";
			this.flags = 64;
			this.slot_flags = 512;
			this.materials = new ByTable().Set( "$metal", 10 ).Set( "$glass", 10 );
			this.attack_verb = new ByTable(new object [] { "struck", "pistol whipped", "hit", "bashed" });
			this.icon = "icons/obj/guns/projectile.dmi";
			this.icon_state = "revolver";
		}

		public Obj_Item_Toy_Gun ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( proximity_flag == true ) {
				return false;
			}

			if ( !( Task13.User is Mob_Living_Carbon_Human || GlobalVars.ticker != null ) && GlobalVars.ticker.mode.name != "monkey" ) {
				Task13.User.WriteMsg( "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return false;
			}
			this.add_fingerprint( user );

			if ( this.bullets < 1 ) {
				user.show_message( "<span class='warning'>*click*</span>", 2 );
				GlobalFuncs.playsound( user, "sound/weapons/empty.ogg", 100, 1 );
				return false;
			}
			GlobalFuncs.playsound( user, "sound/weapons/gunshot.ogg", 100, 1 );
			this.bullets--;
			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " fires " + this + " at " + target + "!</span>", "<span class='danger'>You fire " + this + " at " + target + "!</span>", "<span class='italics'>You hear a gunshot!</span>" );
			return false;
		}

		// Function from file: toys.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Toy_Ammo_Gun ) {
				
				if ( this.bullets >= 7 ) {
					user.WriteMsg( "<span class='warning'>It's already fully loaded!</span>" );
					return 1;
				}

				if ( A.amount_left <= 0 ) {
					user.WriteMsg( "<span class='warning'>There are no more caps!</span>" );
					return 1;
				}

				if ( A.amount_left < 7 - this.bullets ) {
					this.bullets += A.amount_left;
					user.WriteMsg( new Txt( "<span class='notice'>You reload " ).item( A.amount_left ).str( " cap" ).s().str( ".</span>" ).ToString() );
					A.amount_left = 0;
				} else {
					user.WriteMsg( new Txt( "<span class='notice'>You reload " ).item( 7 - this.bullets ).str( " cap" ).s().str( ".</span>" ).ToString() );
					A.amount_left -= 7 - this.bullets;
					this.bullets = 7;
				}
				A.update_icon();
				return 1;
			}
			return null;
		}

		// Function from file: toys.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( new Txt( "There " ).item( ( this.bullets == 1 ? "is" : "are" ) ).str( " " ).item( this.bullets ).str( " cap" ).s().str( " left." ).ToString() );
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Supplycomp : Obj_Machinery_Computer {

		public string temp = null;
		public int reqtime = 0;
		public bool hacked = false;
		public bool can_order_contraband = false;
		public string last_viewed_group = "categories";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "supply";
			this.req_access = new ByTable(new object [] { 31 });
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_Supplycomp);
			this.verb_say = "flashes";
			this.verb_ask = "flashes";
			this.verb_exclaim = "flashes";
		}

		// Function from file: shuttle.dm
		public Obj_Machinery_Computer_Supplycomp ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			dynamic board = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			board = this.circuit;
			this.can_order_contraband = board.contraband_enabled;
			return;
		}

		// Function from file: supply.dm
		public void post_signal( string command = null ) {
			RadioFrequency frequency = null;
			Signal status_signal = null;

			frequency = GlobalVars.SSradio.return_frequency( 1435 );

			if ( !( frequency != null ) ) {
				return;
			}
			status_signal = new Signal();
			status_signal.source = this;
			status_signal.transmission_method = 1;
			status_signal.data["command"] = command;
			frequency.post_signal( this, status_signal );
			return;
		}

		// Function from file: supply.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic cat = null;
			double? cat2 = null;
			dynamic supply_type = null;
			dynamic N = null;
			int timeout = 0;
			string reason = null;
			dynamic idname = null;
			dynamic idrank = null;
			Mob H = null;
			SupplyOrder O = null;
			double? ordernum = null;
			SupplyOrder O2 = null;
			SupplyPacks P = null;
			int? i = null;
			dynamic SO = null;
			SupplyOrder SO2 = null;
			SupplyOrder SO3 = null;
			double? ordernum2 = null;
			int? i2 = null;
			dynamic SO4 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( this.loc is Tile && ( Map13.GetDistance( this, Task13.User ) <= 1 || Task13.User is Mob_Living_Silicon ) ) {
				Task13.User.set_machine( this );
			}

			if ( Lang13.Bool( href_list["send"] ) ) {
				
				if ( GlobalVars.SSshuttle.supply.canMove() ) {
					
					if ( GlobalVars.SSshuttle.shuttle_loan != null ) {
						this.temp = new Txt( "The supply shuttle must be docked to send new commands.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
					} else {
						this.temp = new Txt( "For safety reasons the automated supply shuttle cannot transport live organisms, classified nuclear weaponry or homing beacons.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
					}
				} else if ( GlobalVars.SSshuttle.supply.getDockedId() == "supply_home" ) {
					
					if ( Lang13.Bool( href_list["loan"] ) && GlobalVars.SSshuttle.shuttle_loan != null ) {
						
						if ( !GlobalVars.SSshuttle.shuttle_loan.dispatched ) {
							GlobalVars.SSshuttle.shuttle_loan.loan_shuttle();
							this.temp = new Txt( "The supply shuttle has been loaned to Centcom.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
							this.post_signal( "supply" );
						} else {
							this.temp = new Txt( "You can not loan the supply shuttle at this time.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
						}
					} else {
						this.temp = new Txt( "The supply shuttle has departed.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
						GlobalVars.SSshuttle.toggleShuttle( "supply", "supply_home", "supply_away", true );
						this.investigate_log( "" + Task13.User.key + " has sent the supply shuttle away. Remaining points: " + GlobalVars.SSshuttle.points + ". Shuttle contents:" + GlobalVars.SSshuttle.sold_atoms, "cargo" );
					}
				} else if ( Lang13.Bool( href_list["loan"] ) && GlobalVars.SSshuttle.shuttle_loan != null ) {
					
					if ( !GlobalVars.SSshuttle.shuttle_loan.dispatched && GlobalVars.SSshuttle.supply.mode == 0 ) {
						GlobalVars.SSshuttle.shuttle_loan.loan_shuttle();
						this.temp = new Txt( "The supply shuttle has been loaned to Centcom.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
						this.post_signal( "supply" );
					} else {
						this.temp = new Txt( "You can not loan the supply shuttle at this time.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
					}
				} else if ( !( GlobalVars.SSshuttle.supply.request( GlobalVars.SSshuttle.getDock( "supply_home" ) ) != 0 ) ) {
					this.temp = new Txt( "The supply shuttle has been called and will arrive in " ).item( GlobalVars.SSshuttle.supply.timeLeft( 600 ) ).str( " minutes.<BR><BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
					this.post_signal( "supply" );
				}
			} else if ( Lang13.Bool( href_list["order"] ) ) {
				
				if ( GlobalVars.SSshuttle.supply.mode != 0 ) {
					return null;
				}

				if ( href_list["order"] == "categories" ) {
					this.last_viewed_group = "categories";
					this.temp = "<div class='statusDisplay'><b>Supply points: " + GlobalVars.SSshuttle.points + "</b><BR>";
					this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR></div><BR>" ).ToString();
					this.temp += "<b>Select a category</b><BR><BR>";

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.all_supply_groups )) {
						cat = _a;
						
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";order=" ).item( cat ).str( "'>" ).item( GlobalFuncs.get_supply_group_name( cat ) ).str( "</A><BR>" ).ToString();
					}
				} else {
					this.last_viewed_group = href_list["order"];
					cat2 = String13.ParseNumber( this.last_viewed_group );
					this.temp = "<div class='statusDisplay'><b>Supply points: " + GlobalVars.SSshuttle.points + "</b><BR>";
					this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";order=categories'>Back to all categories</A><BR></div><BR>" ).ToString();
					this.temp += "<b>Request from: " + GlobalFuncs.get_supply_group_name( cat2 ) + "</b><BR><BR>";

					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.SSshuttle.supply_packs )) {
						supply_type = _b;
						
						N = GlobalVars.SSshuttle.supply_packs[supply_type];

						if ( Lang13.Bool( N.hidden ) && !this.hacked || Lang13.Bool( N.contraband ) && !this.can_order_contraband || Lang13.DoubleNullable( N.group ) != cat2 ) {
							continue;
						}
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";doorder=" ).item( supply_type ).str( "'>" ).item( N.name ).str( "</A> Cost: " ).item( N.cost ).str( "<BR>" ).ToString();
					}
				}
			} else if ( Lang13.Bool( href_list["doorder"] ) ) {
				
				if ( Game13.time < this.reqtime ) {
					this.say( "" + ( Game13.time - this.reqtime ) + " seconds remaining until another requisition form may be printed." );
					return null;
				}

				if ( !Lang13.Bool( GlobalVars.SSshuttle.supply_packs[href_list["doorder"]] ) ) {
					return null;
				}
				timeout = Game13.time + 600;
				reason = GlobalFuncs.stripped_input( Task13.User, "Reason:", "Why do you require this item?", "" );

				if ( Game13.time > timeout ) {
					return null;
				}
				idname = "*None Provided*";
				idrank = "*None Provided*";

				if ( Task13.User is Mob_Living_Carbon_Human ) {
					H = Task13.User;
					idname = ((Mob_Living_Carbon_Human)H).get_authentification_name();
					idrank = ((Mob_Living_Carbon_Human)H).get_assignment();
				} else if ( Task13.User is Mob_Living_Silicon ) {
					idname = Task13.User.real_name;
				}
				O = GlobalVars.SSshuttle.generateSupplyOrder( href_list["doorder"], idname, idrank, reason );

				if ( !( O != null ) ) {
					return null;
				}
				O.generateRequisition( this.loc );
				this.reqtime = ( Game13.time + 5 ) % 100000;
				this.temp = "Order request placed.<BR>";
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";order=" ).item( this.last_viewed_group ).str( "'>Back</A> | <A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A> | <A href='?src=" ).Ref( this ).str( ";confirmorder=" ).item( O.ordernum ).str( "'>Authorize Order</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["confirmorder"] ) ) {
				ordernum = String13.ParseNumber( href_list["confirmorder"] );
				O2 = null;
				P = null;
				this.temp = "Invalid Request";
				i = null;
				i = 1;

				while (( i ??0) <= GlobalVars.SSshuttle.requestlist.len) {
					SO = GlobalVars.SSshuttle.requestlist[i];

					if ( Lang13.Bool( SO ) && Lang13.DoubleNullable( SO.ordernum ) == ordernum ) {
						O2 = SO;
						P = O2.v_object;

						if ( GlobalVars.SSshuttle.points >= P.cost ) {
							GlobalVars.SSshuttle.requestlist.Cut( i, ( i ??0) + 1 );
							GlobalVars.SSshuttle.points -= P.cost;
							GlobalVars.SSshuttle.shoppinglist.Add( O2 );
							this.temp = "Thanks for your order.";
							this.investigate_log( "" + Task13.User.key + " has authorized an order for " + P.name + ". Remaining points: " + GlobalVars.SSshuttle.points + ".", "cargo" );
						} else {
							this.temp = "Not enough supply points.";
						}
						break;
					}
					i++;
				}
				this.temp += new Txt( "<BR><BR><A href='?src=" ).Ref( this ).str( ";viewrequests=1'>Back</A> <A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["vieworders"] ) ) {
				this.temp = new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR><BR>Current approved orders: <BR><BR>" ).ToString();

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.SSshuttle.shoppinglist, typeof(SupplyOrder) )) {
					SO2 = _c;
					
					this.temp += "#" + SO2.ordernum + " - " + SO2.v_object.name + " approved by " + SO2.orderedby + ( Lang13.Bool( SO2.comment ) ? " (" + SO2.comment + ")" : "" ) + "<BR>";
				}
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["viewrequests"] ) ) {
				this.temp = new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR><BR>Current requests: <BR><BR>" ).ToString();

				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.SSshuttle.requestlist, typeof(SupplyOrder) )) {
					SO3 = _d;
					
					this.temp += "#" + SO3.ordernum + " - " + SO3.v_object.name + " requested by " + SO3.orderedby + "  " + ( GlobalVars.SSshuttle.supply.getDockedId() == "supply_away" ? new Txt( "<A href='?src=" ).Ref( this ).str( ";confirmorder=" ).item( SO3.ordernum ).str( "'>Approve</A> <A href='?src=" ).Ref( this ).str( ";rreq=" ).item( SO3.ordernum ).str( "'>Remove</A>" ).ToString() : "" ) + "<BR>";
				}
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";clearreq=1'>Clear list</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["rreq"] ) ) {
				ordernum2 = String13.ParseNumber( href_list["rreq"] );
				this.temp = "Invalid Request.<BR>";
				i2 = null;
				i2 = 1;

				while (( i2 ??0) <= GlobalVars.SSshuttle.requestlist.len) {
					SO4 = GlobalVars.SSshuttle.requestlist[i2];

					if ( Lang13.Bool( SO4 ) && Lang13.DoubleNullable( SO4.ordernum ) == ordernum2 ) {
						GlobalVars.SSshuttle.requestlist.Cut( i2, ( i2 ??0) + 1 );
						this.temp = "Request removed.<BR>";
						break;
					}
					i2++;
				}
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";viewrequests=1'>Back</A> <A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["clearreq"] ) ) {
				GlobalVars.SSshuttle.requestlist.Cut();
				this.temp = "List cleared.<BR>";
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["mainmenu"] ) ) {
				this.temp = null;
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			return null;
		}

		// Function from file: supply.dm
		public override bool emag_act( dynamic user = null ) {
			
			if ( !this.hacked ) {
				user.WriteMsg( "<span class='notice'>Special supplies unlocked.</span>" );
				this.hacked = true;
			}
			return false;
		}

		// Function from file: supply.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			bool atDepot = false;
			bool inTransit = false;
			bool canOrder = false;
			Browser popup = null;

			
			if ( !this.allowed( a ) ) {
				a.WriteMsg( "<span class='warning'>Access Denied.</span>" );
				return null;
			}

			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			((Mob)a).set_machine( this );
			this.post_signal( "supply" );

			if ( Lang13.Bool( this.temp ) ) {
				dat = this.temp;
			} else {
				atDepot = GlobalVars.SSshuttle.supply.getDockedId() == "supply_away";
				inTransit = GlobalVars.SSshuttle.supply.mode != 0;
				canOrder = atDepot && !inTransit;
				dat += new Txt( "<div class='statusDisplay'><B>Supply shuttle</B><HR>\n		Location: " ).item( GlobalVars.SSshuttle.supply.getStatusText() ).str( "<BR>\n		<HR>\nSupply Points: " ).item( GlobalVars.SSshuttle.points ).str( "<BR>\n</div><BR>\n		" ).item( ( canOrder ? new Txt( "\n<A href='?src=" ).Ref( this ).str( ";order=categories'>Order items</A><BR>\n<BR>" ).ToString() : "\n*Must be away to order items*<BR>\n<BR>" ) ).str( "\n		" ).item( ( inTransit ? "\n*Shuttle already called*<BR>\n<BR>" : ( atDepot ? new Txt( "\n<A href='?src=" ).Ref( this ).str( ";send=1'>Send to station</A><BR>\n<BR>" ).ToString() : new Txt( "\n<A href='?src=" ).Ref( this ).str( ";send=1'>Send to centcom</A><BR>\n<BR>" ).ToString() ) ) ).str( "\n		" ).item( ( GlobalVars.SSshuttle.shuttle_loan != null ? ( GlobalVars.SSshuttle.shuttle_loan.dispatched ? "\n*Shuttle loaned to Centcom*<BR>\n<BR>" : new Txt( "\n<A href='?src=" ).Ref( this ).str( ";send=1;loan=1'>Loan shuttle to Centcom (5 mins duration)</A><BR>\n<BR>" ).ToString() ) : "\n*No pending external shuttle requests*<BR>\n<BR>" ) ).str( "\n		\n<A href='?src=" ).Ref( this ).str( ";viewrequests=1'>View requests</A><BR>\n<BR>\n		\n<A href='?src=" ).Ref( this ).str( ";vieworders=1'>View orders</A><BR>\n<BR>\n		\n<A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A><BR>\n		<HR>\n<B>Central Command messages:</B><BR> " ).item( ( Lang13.Bool( GlobalVars.SSshuttle.centcom_message ) ? GlobalVars.SSshuttle.centcom_message : "Remember to stamp and send back the supply manifests." ) ).ToString();
			}
			popup = new Browser( a, "computer", "Supply Shuttle Console", 700, 455 );
			popup.set_content( dat );
			popup.open();
			return null;
		}

	}

}
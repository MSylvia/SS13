// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_StationAlert : Obj_Machinery_Computer {

		public ByTable alarms = new ByTable().Set( "Fire", new ByTable() ).Set( "Atmosphere", new ByTable() ).Set( "Power", new ByTable() );

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "alert:0";
			this.icon_keyboard = "atmos_key";
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_Stationalert);
		}

		public Obj_Machinery_Computer_StationAlert ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: station_alert.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			bool active_alarms = false;
			dynamic cat = null;
			dynamic L = null;

			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			active_alarms = false;

			foreach (dynamic _a in Lang13.Enumerate( this.alarms )) {
				cat = _a;
				
				L = this.alarms[cat];

				if ( Lang13.Bool( L.len ) ) {
					active_alarms = true;
				}
			}

			if ( active_alarms ) {
				this.overlays.Add( "alert:2" );
			}
			return null;
		}

		// Function from file: station_alert.dm
		public override int? process( dynamic seconds = null ) {
			this.update_icon();
			base.process( (object)(seconds) );
			return null;
		}

		// Function from file: station_alert.dm
		public bool cancelAlarm( string _class = null, Zone A = null, Ent_Static origin = null ) {
			dynamic L = null;
			bool cleared = false;
			dynamic I = null;
			dynamic alarm = null;
			dynamic srcs = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				return false;
			}
			L = this.alarms[_class];
			cleared = false;

			foreach (dynamic _a in Lang13.Enumerate( L )) {
				I = _a;
				

				if ( I == A.name ) {
					alarm = L[I];
					srcs = alarm[3];

					if ( Lang13.Bool( srcs.Contains( origin ) ) ) {
						srcs -= origin;
					}

					if ( Lang13.Bool( srcs.len ) == false ) {
						cleared = true;
						L -= I;
					}
				}
			}
			return !cleared;
		}

		// Function from file: station_alert.dm
		public bool triggerAlarm( string _class = null, Zone A = null, ByTable O = null, Ent_Static alarmsource = null ) {
			dynamic L = null;
			dynamic I = null;
			dynamic alarm = null;
			dynamic sources = null;
			ByTable C = null;
			ByTable CL = null;

			
			if ( alarmsource.z != this.z ) {
				return false;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				return false;
			}
			L = this.alarms[_class];

			foreach (dynamic _a in Lang13.Enumerate( L )) {
				I = _a;
				

				if ( I == A.name ) {
					alarm = L[I];
					sources = alarm[3];

					if ( !Lang13.Bool( sources.Contains( alarmsource ) ) ) {
						sources += alarmsource;
					}
					return true;
				}
			}
			C = null;
			CL = null;

			if ( O != null && O is ByTable ) {
				CL = O;

				if ( CL.len == 1 ) {
					C = CL[1];
				}
			} else if ( O != null && O is Obj_Machinery_Camera ) {
				C = O;
			}
			L[A.name] = new ByTable(new object [] { A, ( C != null ? C : O ), new ByTable(new object [] { alarmsource }) });
			return true;
		}

		// Function from file: station_alert.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}
			return null;
		}

		// Function from file: station_alert.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			dynamic cat = null;
			dynamic L = null;
			dynamic alarm = null;
			dynamic alm = null;
			dynamic A = null;
			dynamic sources = null;
			Browser popup = null;

			Task13.User.set_machine( this );
			dat = "";

			foreach (dynamic _b in Lang13.Enumerate( this.alarms )) {
				cat = _b;
				
				dat += "<h2>" + cat + "</h2>";
				L = this.alarms[cat];

				if ( Lang13.Bool( L.len ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( L )) {
						alarm = _a;
						
						alm = L[alarm];
						A = alm[1];
						sources = alm[3];
						dat += "<NOBR>";
						dat += "&bull; ";
						dat += "" + GlobalFuncs.format_text( A.name );

						if ( Convert.ToDouble( sources.len ) > 1 ) {
							dat += " - " + sources.len + " sources";
						}
						dat += "</NOBR><BR>\n";
					}
				} else {
					dat += "-- All Systems Nominal<BR>\n";
				}
				dat += "<BR>\n";
			}
			popup = new Browser( user, "alerts", "Station Alert Console" );
			popup.add_head_content( "<META HTTP-EQUIV='Refresh' CONTENT='10'>" );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)user).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: station_alert.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			this.interact( a );
			return null;
		}

	}

}
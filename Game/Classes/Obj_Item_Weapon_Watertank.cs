// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Watertank : Obj_Item_Weapon {

		public Obj_Item_Weapon noz = null;
		public bool on = false;
		public int volume = 500;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "waterbackpack";
			this.w_class = 4;
			this.slot_flags = 1024;
			this.slowdown = 1;
			this.action_button_name = "Toggle Mister";
			this.icon = "icons/obj/hydroponics/equipment.dmi";
			this.icon_state = "waterbackpack";
		}

		// Function from file: watertank.dm
		public Obj_Item_Weapon_Watertank ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( this.volume );
			this.noz = this.make_noz();
			return;
		}

		// Function from file: watertank.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A == this.noz ) {
				this.remove_noz();
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: watertank.dm
		public override dynamic MouseDrop( dynamic over = null, dynamic src_location = null, dynamic over_location = null, string src_control = null, dynamic over_control = null, string _params = null ) {
			Ent_Static H = null;

			H = this.loc;

			if ( H is Mob ) {
				
				dynamic _a = over.name; // Was a switch-case, sorry for the mess.
				if ( _a=="r_hand" ) {
					
					if ( Lang13.Bool( ((dynamic)H).r_hand ) ) {
						return null;
					}

					if ( !((Mob)H).unEquip( this ) ) {
						return null;
					}
					((Mob)H).put_in_r_hand( this );
				} else if ( _a=="l_hand" ) {
					
					if ( Lang13.Bool( ((dynamic)H).l_hand ) ) {
						return null;
					}

					if ( !((Mob)H).unEquip( this ) ) {
						return null;
					}
					((Mob)H).put_in_l_hand( this );
				}
			}
			return null;
		}

		// Function from file: watertank.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.loc == a ) {
				this.ui_action_click();
				return null;
			}
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: watertank.dm
		public override dynamic Destroy(  ) {
			
			if ( this.on ) {
				this.remove_noz();
				GlobalFuncs.qdel( this.noz );
				this.noz = null;
			}
			return base.Destroy();
		}

		// Function from file: watertank.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			
			if ( slot != 1 ) {
				this.remove_noz();
			}
			return;
		}

		// Function from file: watertank.dm
		public void remove_noz(  ) {
			Ent_Static M = null;

			
			if ( this.noz.loc is Mob ) {
				M = this.noz.loc;
				((Mob)M).unEquip( this.noz, true );
			}
			return;
		}

		// Function from file: watertank.dm
		public virtual Obj_Item_Weapon make_noz(  ) {
			return new Obj_Item_Weapon_ReagentContainers_Spray_Mister( this );
		}

		// Function from file: watertank.dm
		public override void ui_action_click(  ) {
			this.toggle_mister();
			return;
		}

		// Function from file: watertank.dm
		[Verb]
		[VerbInfo( name: "Toggle Mister", group: "Object" )]
		public void toggle_mister(  ) {
			Mob user = null;

			
			if ( Task13.User.get_item_by_slot( Task13.User.getWatertankSlot() ) != this ) {
				Task13.User.WriteMsg( "<span class='warning'>The watertank must be worn properly to use!</span>" );
				return;
			}

			if ( Task13.User.incapacitated() ) {
				return;
			}
			this.on = !this.on;
			user = Task13.User;

			if ( this.on ) {
				
				if ( this.noz == null ) {
					this.noz = this.make_noz();
				}

				if ( !user.put_in_hands( this.noz ) ) {
					this.on = false;
					user.WriteMsg( "<span class='warning'>You need a free hand to hold the mister!</span>" );
					return;
				}
				this.noz.loc = user;
			} else {
				this.remove_noz();
			}
			return;
		}

	}

}
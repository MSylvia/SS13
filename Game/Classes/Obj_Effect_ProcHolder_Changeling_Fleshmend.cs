// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Changeling_Fleshmend : Obj_Effect_ProcHolder_Changeling {

		public int recent_uses = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.helptext = "Heals a moderate amount of damage over a short period of time. Can be used while unconscious, and will alert nearby crew.";
			this.chemical_cost = 25;
			this.dna_cost = 2;
			this.req_stat = 1;
		}

		// Function from file: fleshmend.dm
		public Obj_Effect_ProcHolder_Changeling_Fleshmend ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.SSobj.processing.Add( this );
			return;
		}

		// Function from file: fleshmend.dm
		public override dynamic sting_action( Mob user = null, dynamic target = null ) {
			Mob H = null;
			int? i = null;

			user.WriteMsg( "<span class='notice'>We begin to heal rapidly.</span>" );

			if ( this.recent_uses > 1 ) {
				user.WriteMsg( "<span class='warning'>Our healing's effectiveness is reduced by quickly repeated use!</span>" );
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.recent_uses++;

				if ( user is Mob_Living_Carbon_Human ) {
					H = user;
					((Mob_Living_Carbon_Human)H).restore_blood();
					((Mob_Living_Carbon_Human)H).remove_all_embedded_objects();
				}
				i = null;
				i = 0;

				while (( i ??0) < 10) {
					
					if ( user != null ) {
						((Mob_Living)user).adjustBruteLoss( -10 / this.recent_uses );
						((Mob_Living)user).adjustOxyLoss( -10 / this.recent_uses );
						((Mob_Living)user).adjustFireLoss( -10 / this.recent_uses );
					}
					Task13.Sleep( 10 );
					i++;
				}
				return;
			}));
			GlobalFuncs.feedback_add_details( "changeling_powers", "RR" );
			return 1;
		}

		// Function from file: fleshmend.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( this.recent_uses > 1 ) {
				this.recent_uses--;
			}
			return null;
		}

		// Function from file: fleshmend.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );
			base.Destroy();
			return null;
		}

	}

}
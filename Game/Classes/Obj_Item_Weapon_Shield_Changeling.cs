// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Shield_Changeling : Obj_Item_Weapon_Shield {

		public int remaining_uses = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 130;
			this.icon_state = "ling_shield";
		}

		// Function from file: mutations.dm
		public Obj_Item_Weapon_Shield_Changeling ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.loc is Mob ) {
				this.loc.visible_message( "<span class='warning'>The end of " + this.loc.name + "'s hand inflates rapidly, forming a huge shield-like mass!</span>", "<span class='warning'>We inflate our hand into a strong shield.</span>", "<span class='italics'>You hear organic matter ripping and tearing!</span>" );
			}
			return;
		}

		// Function from file: mutations.dm
		public override bool hit_reaction( Mob_Living_Carbon owner = null, string attack_text = null, int? final_block_chance = null, dynamic damage = null, int? attack_type = null ) {
			Ent_Static H = null;

			
			if ( this.remaining_uses < 1 ) {
				
				if ( this.loc is Mob_Living_Carbon_Human ) {
					H = this.loc;
					H.visible_message( "<span class='warning'>With a sickening crunch, " + H + " reforms his shield into an arm!</span>", "<span class='notice'>We assimilate our shield into our body</span>", "<span class='italics>You hear organic matter ripping and tearing!</span>" );
					((Mob)H).unEquip( this, true );
				}
				GlobalFuncs.qdel( this );
				return false;
			} else {
				this.remaining_uses--;
				return base.hit_reaction( owner, attack_text, final_block_chance, (object)(damage), attack_type );
			}
		}

	}

}
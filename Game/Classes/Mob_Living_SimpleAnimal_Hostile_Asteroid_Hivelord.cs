// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Asteroid_Hivelord : Mob_Living_SimpleAnimal_Hostile_Asteroid {

		public int next_brood = 0;
		public int brood_cooldown = 20;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "Hivelord";
			this.icon_aggro = "Hivelord_alert";
			this.icon_dead = "Hivelord_dead";
			this.icon_gib = "syndicate_gib";
			this.move_to_delay = 14;
			this.ranged = true;
			this.vision_range = 5;
			this.idle_vision_range = 5;
			this.speed = 3;
			this.maxHealth = 75;
			this.health = 75;
			this.harm_intent_damage = 5;
			this.attacktext = "lashes out at";
			this.speak_emote = new ByTable(new object [] { "telepathically cries" });
			this.attack_sound = "sound/weapons/pierce.ogg";
			this.throw_message = "falls right through the strange body of the";
			this.ranged_cooldown_cap = 0;
			this.retreat_distance = 3;
			this.minimum_distance = 3;
			this.pass_flags = 1;
			this.loot = new ByTable(new object [] { typeof(Obj_Item_Organ_Internal_HivelordCore) });
			this.icon_state = "Hivelord";
		}

		public Mob_Living_SimpleAnimal_Hostile_Asteroid_Hivelord ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mining_mobs.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			this.mouse_opacity = 1;
			base.death( gibbed, toast );
			return false;
		}

		// Function from file: mining_mobs.dm
		public override dynamic AttackingTarget(  ) {
			this.OpenFire();
			return null;
		}

		// Function from file: mining_mobs.dm
		public override void OpenFire( dynamic A = null ) {
			Mob_Living_SimpleAnimal_Hostile_Asteroid_Hivelordbrood A2 = null;

			
			if ( Game13.time >= this.next_brood ) {
				A2 = new Mob_Living_SimpleAnimal_Hostile_Asteroid_Hivelordbrood( this.loc );
				A2.GiveTarget( this.target );
				A2.friends = this.friends;
				A2.faction = this.faction;
				this.next_brood = Game13.time + this.brood_cooldown;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Table_Glass : Obj_Structure_Table {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.buildstack = typeof(Obj_Item_Stack_Sheet_Glass);
			this.icon = "icons/obj/smooth_structures/glass_table.dmi";
			this.icon_state = "glass_table";
		}

		public Obj_Structure_Table_Glass ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tables_racks.dm
		public override bool climb_table( dynamic user = null ) {
			
			if ( base.climb_table( (object)(user) ) ) {
				this.visible_message( "<span class='warning'>" + this + " breaks!</span>" );
				GlobalFuncs.playsound( this.loc, "shatter", 50, 1 );
				Lang13.Call( this.frame, this.loc );
				new Obj_Item_Weapon_Shard( this.loc );
				GlobalFuncs.qdel( this );
				((Mob)user).Weaken( 5 );
			}
			return false;
		}

		// Function from file: tables_racks.dm
		public override bool tablepush( dynamic I = null, dynamic user = null ) {
			
			if ( base.tablepush( (object)(I), (object)(user) ) ) {
				this.visible_message( "<span class='warning'>" + this + " breaks!</span>" );
				GlobalFuncs.playsound( this.loc, "shatter", 50, 1 );
				Lang13.Call( this.frame, this.loc );
				new Obj_Item_Weapon_Shard( this.loc );
				GlobalFuncs.qdel( this );
			}
			return false;
		}

	}

}
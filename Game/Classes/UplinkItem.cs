// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class UplinkItem : Game_Data {

		public string name = "item name";
		public string category = "item category";
		public string desc = "item description";
		public Type item = null;
		public double cost = 0;
		public bool last = false;
		public ByTable gamemodes = new ByTable();
		public ByTable excludefrom = new ByTable();
		public int surplus = 100;
		public bool refundable = false;

		// Function from file: uplink_item.dm
		public bool buy( Ent_Static U = null, Mob user = null ) {
			dynamic I = null;
			Mob A = null;
			Ent_Static o = null;

			Lang13.SuperCall( U, user );

			if ( !( U is Obj_Item_Device_Uplink ) ) {
				return false;
			}

			if ( !( user != null ) || user.incapacitated() ) {
				return false;
			}

			if ( user.contents.Contains( U.loc ) || Map13.GetDistance( U.loc, user ) <= 1 && U.loc.loc is Tile ) {
				user.set_machine( U );

				if ( this.cost > Convert.ToDouble( ((dynamic)U).uses ) ) {
					return false;
				}
				I = this.spawn_item( GlobalFuncs.get_turf( user ), U );

				if ( I is Obj_Item ) {
					
					if ( user is Mob_Living_Carbon_Human ) {
						A = user;
						A.put_in_any_hand_if_possible( I );
					}

					if ( I is Obj_Item_Weapon_Storage_Box && I.contents.len > 0 ) {
						
						foreach (dynamic _a in Lang13.Enumerate( I, typeof(Ent_Static) )) {
							o = _a;
							
							((dynamic)U).purchase_log += new Txt( "<BIG>" ).icon( o ).str( "</BIG>" ).ToString();
						}
					} else {
						((dynamic)U).purchase_log += new Txt( "<BIG>" ).icon( I ).str( "</BIG>" ).ToString();
					}
				}
				((dynamic)U).interact( user );
				return true;
			}
			return false;
		}

		// Function from file: uplink_item.dm
		public virtual dynamic spawn_item( dynamic loc = null, Ent_Static U = null ) {
			
			if ( this.item != null ) {
				((dynamic)U).uses -= Num13.MaxInt( ((int)( this.cost )), 0 );
				((dynamic)U).used_TC += this.cost;
				GlobalFuncs.feedback_add_details( "traitor_uplink_items_bought", "" + this.item );
				return Lang13.Call( this.item, loc );
			}
			return null;
		}

	}

}
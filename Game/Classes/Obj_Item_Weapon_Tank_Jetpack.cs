// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Tank_Jetpack : Obj_Item_Weapon_Tank {

		public EffectSystem_TrailFollow_Ion ion_trail = null;
		public bool on = false;
		public bool stabilization_on = false;
		public int volume_rate = 500;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 4;
			this.item_state = "jetpack";
			this.distribute_pressure = 21.278247833251953;
			this.action_button_name = "Toggle Jetpack";
			this.icon_state = "jetpack";
		}

		// Function from file: jetpack.dm
		public Obj_Item_Weapon_Tank_Jetpack ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.ion_trail = new EffectSystem_TrailFollow_Ion();
			this.ion_trail.set_up( this );
			return;
		}

		// Function from file: jetpack.dm
		public override void ui_action_click(  ) {
			this.__CallVerb("Toggle Jetpack" );
			return;
		}

		// Function from file: jetpack.dm
		public bool allow_thrust( double num = 0, Mob_Living_Carbon_Human user = null ) {
			GasMixture G = null;
			double allgases = 0;

			
			if ( !this.on ) {
				return false;
			}

			if ( num < 0.041 || this.air_contents.total_moles() < num ) {
				this.ion_trail.stop();
				return false;
			}
			G = this.air_contents.remove( num );
			allgases = ( G.carbon_dioxide ??0) + G.nitrogen + ( G.oxygen ??0) + ( G.toxins ??0);

			if ( allgases >= 0.041 ) {
				return true;
			}
			GlobalFuncs.qdel( G );
			return false;
		}

		// Function from file: jetpack.dm
		[Verb]
		[VerbInfo( name: "Toggle Jetpack", group: "Object" )]
		public virtual void toggle(  ) {
			
			if ( Task13.User.stat != 0 || !Task13.User.canmove || Task13.User.restrained() ) {
				return;
			}
			this.on = !this.on;

			if ( this.on ) {
				this.icon_state = "" + this.icon_state + "-on";
				this.ion_trail.start();
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.ion_trail.stop();
			}
			Task13.User.WriteMsg( "<span class='notice'>You toggle the jetpack " + ( this.on ? "on" : "off" ) + ".</span>" );
			return;
		}

		// Function from file: jetpack.dm
		[Verb]
		[VerbInfo( name: "Toggle Jetpack Stabilization", group: "Object" )]
		public void toggle_rockets(  ) {
			
			if ( Task13.User.stat != 0 || !Task13.User.canmove || Task13.User.restrained() ) {
				return;
			}
			this.stabilization_on = !this.stabilization_on;
			Task13.User.WriteMsg( "<span class='notice'>You toggle the stabilization " + ( this.stabilization_on ? "on" : "off" ) + ".</span>" );
			return;
		}

	}

}
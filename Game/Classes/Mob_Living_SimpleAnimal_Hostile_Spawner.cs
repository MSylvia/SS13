// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Spawner : Mob_Living_SimpleAnimal_Hostile {

		public ByTable spawned_mobs = new ByTable();
		public int max_mobs = 5;
		public int spawn_delay = 0;
		public int spawn_time = 300;
		public Type mob_type = typeof(Mob_Living_SimpleAnimal_Hostile_Carp);
		public string spawn_text = "emerges from";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.status_flags = 0;
			this.anchored = 1;
			this.AIStatus = 3;
			this.a_intent = "harm";
			this.stop_automated_movement = true;
			this.wander = false;
			this.atmos_requirements = new ByTable().Set( "min_oxy", 0 ).Set( "max_oxy", 0 ).Set( "min_tox", 0 ).Set( "max_tox", 0 ).Set( "min_co2", 0 ).Set( "max_co2", 5 ).Set( "min_n2", 0 ).Set( "max_n2", 0 );
			this.minbodytemp = 0;
			this.layer = 3.9;
		}

		public Mob_Living_SimpleAnimal_Hostile_Spawner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: spawner.dm
		public bool spawn_mob(  ) {
			dynamic L = null;

			
			if ( this.spawned_mobs.len >= this.max_mobs ) {
				return false;
			}

			if ( this.spawn_delay > Game13.time ) {
				return false;
			}
			this.spawn_delay = Game13.time + this.spawn_time;
			L = Lang13.Call( this.mob_type, this.loc );
			this.spawned_mobs.Add( L );
			L.nest = this;
			L.faction = this.faction;
			this.visible_message( "<span class='danger'>" + L + " " + this.spawn_text + " " + this + ".</span>" );
			return false;
		}

		// Function from file: spawner.dm
		public override bool Life(  ) {
			base.Life();

			if ( !( this.stat != 0 ) ) {
				this.spawn_mob();
			}
			return false;
		}

		// Function from file: spawner.dm
		public override dynamic Destroy(  ) {
			Mob_Living_SimpleAnimal L = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.spawned_mobs, typeof(Mob_Living_SimpleAnimal) )) {
				L = _a;
				

				if ( L.nest == this ) {
					L.nest = null;
				}
			}
			this.spawned_mobs = null;
			return base.Destroy();
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Prize : Obj_Item_Toy {

		public bool cooldown = false;
		public bool quiet = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "ripleytoy";
		}

		public Obj_Item_Toy_Prize ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.loc == a ) {
				
				if ( !this.cooldown ) {
					a.WriteMsg( "<span class='notice'>You play with " + this + ".</span>" );
					this.cooldown = true;
					Task13.Schedule( 30, (Task13.Closure)(() => {
						this.cooldown = false;
						return;
					}));

					if ( !this.quiet ) {
						GlobalFuncs.playsound( a, "sound/mecha/mechturn.ogg", 20, 1 );
					}
					return null;
				}
			}
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: toys.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !this.cooldown ) {
				user.WriteMsg( "<span class='notice'>You play with " + this + ".</span>" );
				this.cooldown = true;
				Task13.Schedule( 30, (Task13.Closure)(() => {
					this.cooldown = false;
					return;
				}));

				if ( !this.quiet ) {
					GlobalFuncs.playsound( user, "sound/mecha/mechstep.ogg", 20, 1 );
				}
				return null;
			}
			base.attack_self( (object)(user), (object)(flag), emp );
			return null;
		}

	}

}
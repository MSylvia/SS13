// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Objective_Default_Destroy : Objective_Default {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dangerrating = 10;
			this.martyr_compatible = true;
			this.error_text = "No active AIs with minds.";
		}

		public Objective_Default_Destroy ( string text = null ) : base( text ) {
			
		}

		// Function from file: objective.dm
		public override bool extra_prep(  ) {
			
			if ( !Lang13.Bool( this.target ) ) {
				return false;
			}
			return true;
		}

		// Function from file: objective.dm
		public override void update_explanation_text(  ) {
			base.update_explanation_text();

			if ( Lang13.Bool( this.target ) && Lang13.Bool( this.target.current ) ) {
				this.explanation_text = "Destroy " + this.target.name + ", the experimental AI.";
			} else {
				this.explanation_text = "Free Objective";
			}
			return;
		}

		// Function from file: objective.dm
		public override int check_completion(  ) {
			
			if ( Lang13.Bool( this.target ) && Lang13.Bool( this.target.current ) ) {
				
				if ( Convert.ToInt32( this.target.current.stat ) == 2 || Convert.ToDouble( this.target.current.z ) > 6 || !Lang13.Bool( this.target.current.ckey ) ) {
					return 1;
				}
				return 0;
			}
			return 1;
		}

		// Function from file: objective.dm
		public override dynamic find_target(  ) {
			ByTable possible_targets = null;
			dynamic target_ai = null;

			possible_targets = GlobalFuncs.active_ais( true );
			target_ai = Rand13.PickFromTable( possible_targets );
			this.target = target_ai.mind;
			this.update_explanation_text();
			return this.target;
		}

	}

}
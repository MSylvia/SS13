// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Decal_Cleanable_Crayon_Gang : Obj_Effect_Decal_Cleanable_Crayon {

		public dynamic gang = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.do_icon_rotate = false;
			this.layer = 3.6;
		}

		// Function from file: crayon.dm
		public Obj_Effect_Decal_Cleanable_Crayon_Gang ( dynamic location = null, dynamic G = null, string e_name = null, double? rotation = null ) : base( (object)(location), /* Bad Super Arg: [color] */ null, /* Bad Super Arg: [this.icon_state] */ null, e_name, rotation ) {
			e_name = e_name ?? "gang tag";
			rotation = rotation ?? 0;

			dynamic territory = null;
			string color = null;

			
			if ( !( this.type != null ) || !Lang13.Bool( G ) ) {
				GlobalFuncs.qdel( this );
			}
			territory = GlobalFuncs.get_area( location );
			this.gang = G;
			color = G.color_hex;
			this.icon_state = G.name;
			G.territory_new.Or( new ByTable().Set( territory.type, territory.name ) );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: crayon.dm
		public override dynamic Destroy(  ) {
			dynamic territory = null;

			territory = GlobalFuncs.get_area( this );

			if ( Lang13.Bool( this.gang ) ) {
				this.gang.territory.Remove( territory.type );
				this.gang.territory_new.Remove( territory.type );
				this.gang.territory_lost.Or( new ByTable().Set( territory.type, territory.name ) );
			}
			return base.Destroy();
		}

		// Function from file: swarmer.dm
		public override void swarmer_act( Mob_Living_SimpleAnimal_Hostile_Swarmer S = null ) {
			S.WriteMsg( "<span class='warning'>Searching... sensor malfunction! Target lost. Aborting.</span>" );
			return;
		}

	}

}
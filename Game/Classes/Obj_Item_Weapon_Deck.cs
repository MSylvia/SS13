// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Deck : Obj_Item_Weapon {

		public ByTable cards = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.icon = "playing_cards.dmi";
			this.icon_state = "deck";
		}

		// Function from file: cards.dm
		public Obj_Item_Weapon_Deck ( dynamic loc = null ) : base( (object)(loc) ) {
			string color = null;
			Playingcard card = null;
			dynamic suit = null;
			dynamic number = null;
			dynamic number2 = null;
			int? i = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			foreach (dynamic _c in Lang13.Enumerate( new ByTable(new object [] { "spades", "clubs", "diamonds", "hearts" }) )) {
				suit = _c;
				

				if ( suit == "spades" || suit == "clubs" ) {
					color = "black_";
				} else {
					color = "red_";
				}

				foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { "ace", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten" }) )) {
					number = _a;
					
					card = new Playingcard();
					card.name = "" + number + " of " + suit;
					card.card_icon = "" + color + "num";
					card.suit = suit;
					card.number = number;
					this.cards.Add( card );
				}

				foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { "jack", "queen", "king" }) )) {
					number2 = _b;
					
					card = new Playingcard();
					card.name = "" + number2 + " of " + suit;
					card.card_icon = "" + color + "col";
					card.suit = suit;
					card.number = number2;
					this.cards.Add( card );
				}
			}
			i = null;
			i = 0;

			while (( i ??0) < 2) {
				card = new Playingcard();
				card.name = "joker";
				card.card_icon = "joker";
				card.suit = "joker";
				card.number = "";
				this.cards.Add( card );
				i++;
			}
			return;
		}

		// Function from file: cards.dm
		public void dealTo( dynamic target = null, dynamic source = null ) {
			dynamic card = null;
			Obj_Item_Weapon_Hand H = null;

			
			if ( !( this.cards.len != 0 ) ) {
				source.show_message( "There are no cards in the deck." );
				return;
			}
			card = this.cards[1];
			this.cards.Remove( card );
			H = new Obj_Item_Weapon_Hand( GlobalFuncs.get_turf( this ) );
			H.concealed = true;
			H.update_conceal();
			H.cards.Add( card );
			H.update_icon();
			((Ent_Static)source).visible_message( new Txt().The( source ).item().str( " deals a card to " ).the( target ).item().str( "." ).ToString() );
			H.throw_at( Map13.GetStep( target, Convert.ToInt32( target.dir ) ), 10, 1, source );
			return;
		}

		// Function from file: cards.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			
			if ( M is Mob_Living ) {
				this.dealTo( M, user );
			} else {
				return base.attack( (object)(M), (object)(user), def_zone );
			}
			return false;
		}

		// Function from file: cards.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( proximity_flag == true ) {
				return false;
			}

			if ( target is Mob_Living ) {
				this.dealTo( target, user );
			} else {
				return base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			}
			return false;
		}

		// Function from file: cards.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			ByTable newcards = null;
			dynamic card = null;

			newcards = new ByTable();

			while (this.cards.len != 0) {
				card = Rand13.PickFromTable( this.cards );
				newcards.Add( card );
				this.cards.Remove( card );
			}
			this.cards = newcards;
			((Ent_Static)user).visible_message( new Txt().The( user ).item().str( " shuffles " ).item( this ).str( "." ).ToString() );
			return null;
		}

		// Function from file: cards.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic H = null;
			Playingcard P = null;

			
			if ( A is Obj_Item_Weapon_Hand ) {
				H = A;

				foreach (dynamic _a in Lang13.Enumerate( H.cards, typeof(Playingcard) )) {
					P = _a;
					
					this.cards.Add( P );
				}
				GlobalFuncs.qdel( A );
				user.show_message( "You place your cards on the bottom of the deck." );
			} else {
				return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

	}

}
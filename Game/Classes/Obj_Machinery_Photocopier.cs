// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Photocopier : Obj_Machinery {

		public dynamic copy = null;
		public dynamic photocopy = null;
		public int? copies = 1;
		public int toner = 40;
		public int? maxcopies = 10;
		public string greytoggle = "Greyscale";
		public Ent_Static ass = null;
		public bool busy = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 30;
			this.active_power_usage = 200;
			this.icon = "icons/obj/library.dmi";
			this.icon_state = "photocopier";
		}

		public Obj_Machinery_Photocopier ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photocopier.dm
		public bool copier_empty(  ) {
			
			if ( Lang13.Bool( this.copy ) || Lang13.Bool( this.photocopy ) || this.check_ass() ) {
				return false;
			} else {
				return true;
			}
		}

		// Function from file: photocopier.dm
		public bool copier_blocked(  ) {
			Ent_Dynamic AM = null;

			
			if ( Lang13.Bool( this.gc_destroyed ) ) {
				return false;
			}

			if ( this.loc.density ) {
				return true;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Ent_Dynamic) )) {
				AM = _a;
				

				if ( AM == this ) {
					continue;
				}

				if ( AM.density ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: photocopier.dm
		public bool check_ass(  ) {
			
			if ( !( this.ass != null ) ) {
				return false;
			}

			if ( this.ass.loc != this.loc ) {
				this.ass = null;
				this.updateUsrDialog();
				return false;
			} else if ( this.ass is Mob_Living_Carbon_Human ) {
				
				if ( !Lang13.Bool( ((Mob)this.ass).get_item_by_slot( 14 ) ) && !Lang13.Bool( ((Mob)this.ass).get_item_by_slot( 13 ) ) ) {
					return true;
				} else {
					return false;
				}
			} else {
				return true;
			}
			return false;
		}

		// Function from file: photocopier.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			this.check_ass();

			if ( !( O is Mob ) || Lang13.Bool( ((dynamic)O).anchored ) || Lang13.Bool( ((dynamic)O).buckled ) || !this.Adjacent( user ) || !this.Adjacent( O ) || !((Mob)user).canUseTopic( this, true ) || O == this.ass || this.copier_blocked() ) {
				return false;
			}
			this.add_fingerprint( user );

			if ( O == user ) {
				((Ent_Static)user).visible_message( "" + user + " starts climbing onto the photocopier!", "<span class='notice'>You start climbing onto the photocopier...</span>" );
			} else {
				((Ent_Static)user).visible_message( "<span class='warning'>" + user + " starts putting " + O + " onto the photocopier!</span>", "<span class='notice'>You start putting " + O + " onto the photocopier...</span>" );
			}

			if ( GlobalFuncs.do_after( user, 20, null, this ) ) {
				
				if ( !( O != null ) || Lang13.Bool( O.gc_destroyed ) || Lang13.Bool( this.gc_destroyed ) || !this.Adjacent( O ) ) {
					return false;
				}

				if ( O == user ) {
					((Ent_Static)user).visible_message( "" + user + " climbs onto the photocopier!", "<span class='notice'>You climb onto the photocopier.</span>" );
				} else {
					((Ent_Static)user).visible_message( "<span class='warning'>" + user + " puts " + O + " onto the photocopier!</span>", "<span class='notice'>You put " + O + " onto the photocopier.</span>" );
				}
				O.loc = GlobalFuncs.get_turf( this );
				this.ass = O;

				if ( Lang13.Bool( this.photocopy ) ) {
					this.photocopy.loc = this.loc;
					this.visible_message( "<span class='warning'>" + this.photocopy + " is shoved out of the way by " + this.ass + "!</span>" );
					this.photocopy = null;
				} else if ( Lang13.Bool( this.copy ) ) {
					this.copy.loc = this.loc;
					this.visible_message( "<span class='warning'>" + this.copy + " is shoved out of the way by " + this.ass + "!</span>" );
					this.copy = null;
				}
			}
			this.updateUsrDialog();
			return false;
		}

		// Function from file: photocopier.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			} else if ( this.toner > 0 ) {
				new Obj_Effect_Decal_Cleanable_Oil( GlobalFuncs.get_turf( this ) );
				this.toner = 0;
			}
			return false;
		}

		// Function from file: photocopier.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
					} else if ( this.toner > 0 ) {
						new Obj_Effect_Decal_Cleanable_Oil( GlobalFuncs.get_turf( this ) );
						this.toner = 0;
					}
					break;
				default:
					
					if ( Rand13.PercentChance( 50 ) ) {
						
						if ( this.toner > 0 ) {
							new Obj_Effect_Decal_Cleanable_Oil( GlobalFuncs.get_turf( this ) );
							this.toner = 0;
						}
					}
					break;
			}
			return false;
		}

		// Function from file: photocopier.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic G = null;

			
			if ( A is Obj_Item_Weapon_Paper ) {
				
				if ( this.copier_empty() ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					this.copy = A;
					A.loc = this;
					user.WriteMsg( "<span class='notice'>You insert " + A + " into " + this + ".</span>" );
					Icon13.Flick( "photocopier1", this );
					this.updateUsrDialog();
				} else {
					user.WriteMsg( "<span class='warning'>There is already something in " + this + "!</span>" );
				}
			} else if ( A is Obj_Item_Weapon_Photo ) {
				
				if ( this.copier_empty() ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					this.photocopy = A;
					A.loc = this;
					user.WriteMsg( "<span class='notice'>You insert " + A + " into " + this + ".</span>" );
					Icon13.Flick( "photocopier1", this );
					this.updateUsrDialog();
				} else {
					user.WriteMsg( "<span class='warning'>There is already something in " + this + "!</span>" );
				}
			} else if ( A is Obj_Item_Device_Toner ) {
				
				if ( this.toner <= 0 ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					GlobalFuncs.qdel( A );
					this.toner = 40;
					user.WriteMsg( "<span class='notice'>You insert " + A + " into " + this + ".</span>" );
					this.updateUsrDialog();
				} else {
					user.WriteMsg( "<span class='warning'>This cartridge is not yet ready for replacement! Use up the rest of the toner.</span>" );
				}
			} else if ( A is Obj_Item_Weapon_Wrench ) {
				
				if ( this.isinspace() ) {
					user.WriteMsg( "<span class='warning'>There's nothing to fasten " + this + " to!</span>" );
					return null;
				}
				GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
				user.WriteMsg( "<span class='warning'>You start " + ( Lang13.Bool( this.anchored ) ? "unwrenching" : "wrenching" ) + " " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
					
					if ( Lang13.Bool( this.gc_destroyed ) ) {
						return null;
					}
					user.WriteMsg( "<span class='notice'>You " + ( Lang13.Bool( this.anchored ) ? "unwrench" : "wrench" ) + " " + this + ".</span>" );
					this.anchored = !Lang13.Bool( this.anchored );
				}
			} else if ( A is Obj_Item_Weapon_Grab ) {
				G = A;

				if ( G.affecting is Mob && G.affecting != this.ass ) {
					this.MouseDrop_T( G.affecting, user );
				}
			}
			return null;
		}

		// Function from file: photocopier.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			int? i = null;
			Obj_Item_Weapon_Paper c = null;
			dynamic copied = null;
			int? i2 = null;
			Obj_Item_Weapon_Photo p = null;
			Icon I = null;
			Icon img = null;
			int? i3 = null;
			Icon temp_img = null;
			Obj_Item_Weapon_Photo p2 = null;
			Icon small_img = null;
			Icon ic = null;
			ByTable nametemp = null;
			dynamic find = null;
			Picture selection = null;
			Mob tempAI = null;
			Picture t = null;
			Obj_Item_Weapon_Photo p3 = null;
			Picture q = null;
			dynamic I2 = null;
			dynamic img2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["copy"] ) ) {
				
				if ( Lang13.Bool( this.copy ) ) {
					i = null;
					i = 0;

					while (( i ??0) < ( this.copies ??0)) {
						
						if ( this.toner > 0 && !this.busy && Lang13.Bool( this.copy ) ) {
							c = new Obj_Item_Weapon_Paper( this.loc );

							if ( Lang13.Length( this.copy.info ) > 0 ) {
								
								if ( this.toner > 10 ) {
									c.info = "<font color = #101010>";
								} else {
									c.info = "<font color = #808080>";
								}
								copied = this.copy.info;
								copied = GlobalFuncs.replacetext( copied, "<font face=\"" + "Verdana" + "\" color=", "<font face=\"" + "Verdana" + "\" nocolor=" );
								copied = GlobalFuncs.replacetext( copied, "<font face=\"" + "Comic Sans MS" + "\" color=", "<font face=\"" + "Comic Sans MS" + "\" nocolor=" );
								c.info += copied;
								c.info += "</font>";
								c.name = this.copy.name;
								c.fields = Lang13.DoubleNullable( this.copy.fields );
								c.updateinfolinks();
								this.toner--;
							}
							this.busy = true;
							Task13.Sleep( 15 );
							this.busy = false;
						} else {
							break;
						}
						i++;
					}
					this.updateUsrDialog();
				} else if ( Lang13.Bool( this.photocopy ) ) {
					i2 = null;
					i2 = 0;

					while (( i2 ??0) < ( this.copies ??0)) {
						
						if ( this.toner >= 5 && !this.busy && Lang13.Bool( this.photocopy ) ) {
							p = new Obj_Item_Weapon_Photo( this.loc );
							I = new Icon( this.photocopy.icon, this.photocopy.icon_state );
							img = new Icon( this.photocopy.img );

							if ( this.greytoggle == "Greyscale" ) {
								
								if ( this.toner > 10 ) {
									I.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#000000" );
									img.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#000000" );
								} else {
									I.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#646464" );
									img.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#646464" );
								}
								this.toner -= 5;
							} else if ( this.greytoggle == "Color" ) {
								
								if ( this.toner >= 10 ) {
									this.toner -= 10;
								} else {
									i2++;
									continue;
								}
							}
							p.icon = I;
							p.img = img;
							p.name = this.photocopy.name;
							p.desc = this.photocopy.desc;
							p.scribble = this.photocopy.scribble;
							p.pixel_x = Rand13.Int( -10, 10 );
							p.pixel_y = Rand13.Int( -10, 10 );
							p.blueprints = Lang13.Bool( this.photocopy.blueprints );
							this.busy = true;
							Task13.Sleep( 15 );
							this.busy = false;
						} else {
							break;
						}
						i2++;
					}
				} else if ( this.ass != null ) {
					i3 = null;
					i3 = 0;

					while (( i3 ??0) < ( this.copies ??0)) {
						temp_img = null;

						if ( this.ass is Mob_Living_Carbon_Human && ( Lang13.Bool( ((Mob)this.ass).get_item_by_slot( 14 ) ) || Lang13.Bool( ((Mob)this.ass).get_item_by_slot( 13 ) ) ) ) {
							Task13.User.WriteMsg( "<span class='notice'>You feel kind of silly, copying " + ( this.ass == Task13.User ? ((dynamic)( "your" )) : ((dynamic)( this.ass )) ) + ( this.ass == Task13.User ? "" : "'s" ) + " ass with " + ( this.ass == Task13.User ? "your" : "their" ) + " clothes on.</span>" );
							break;
						} else if ( this.toner >= 5 && !this.busy && this.check_ass() ) {
							
							if ( this.ass is Mob_Living_Carbon_Alien_Humanoid || this.ass is Mob_Living_SimpleAnimal_Hostile_Alien ) {
								temp_img = new Icon( "icons/ass/assalien.png" );
							} else if ( this.ass is Mob_Living_Carbon_Human ) {
								
								if ( this.ass.gender == GlobalVars.MALE ) {
									temp_img = new Icon( "icons/ass/assmale.png" );
								} else if ( this.ass.gender == GlobalVars.FEMALE ) {
									temp_img = new Icon( "icons/ass/assfemale.png" );
								} else {
									temp_img = new Icon( "icons/ass/assmale.png" );
								}
							} else if ( this.ass is Mob_Living_SimpleAnimal_Drone || this.ass is Mob_Living_SimpleAnimal_Drone ) {
								temp_img = new Icon( "icons/ass/assdrone.png" );
							} else {
								break;
							}
							p2 = new Obj_Item_Weapon_Photo( this.loc );
							p2.desc = "You see " + this.ass + "'s ass on the photo.";
							p2.pixel_x = Rand13.Int( -10, 10 );
							p2.pixel_y = Rand13.Int( -10, 10 );
							p2.img = temp_img;
							small_img = new Icon( temp_img );
							ic = new Icon( "icons/obj/items.dmi", "photo" );
							small_img.Scale( 8, 8 );
							ic.Blend( small_img, 3, 10, 13 );
							p2.icon = ic;
							this.toner -= 5;
							this.busy = true;
							Task13.Sleep( 15 );
							this.busy = false;
						} else {
							break;
						}
						i3++;
					}
				}
				this.updateUsrDialog();
			} else if ( Lang13.Bool( href_list["remove"] ) ) {
				
				if ( Lang13.Bool( this.copy ) ) {
					
					if ( !( Task13.User is Mob_Living_Silicon_Ai ) ) {
						this.copy.loc = Task13.User.loc;
						Task13.User.put_in_hands( this.copy );
					} else {
						this.copy.loc = this.loc;
					}
					Task13.User.WriteMsg( "<span class='notice'>You take " + this.copy + " out of " + this + ".</span>" );
					this.copy = null;
					this.updateUsrDialog();
				} else if ( Lang13.Bool( this.photocopy ) ) {
					
					if ( !( Task13.User is Mob_Living_Silicon_Ai ) ) {
						this.photocopy.loc = Task13.User.loc;
						Task13.User.put_in_hands( this.photocopy );
					} else {
						this.photocopy.loc = this.loc;
					}
					Task13.User.WriteMsg( "<span class='notice'>You take " + this.photocopy + " out of " + this + ".</span>" );
					this.photocopy = null;
					this.updateUsrDialog();
				} else if ( this.check_ass() ) {
					((dynamic)this.ass).WriteMsg( "<span class='notice'>You feel a slight pressure on your ass.</span>" );
				}
			} else if ( Lang13.Bool( href_list["min"] ) ) {
				
				if ( ( this.copies ??0) > 1 ) {
					this.copies--;
					this.updateUsrDialog();
				}
			} else if ( Lang13.Bool( href_list["add"] ) ) {
				
				if ( ( this.copies ??0) < ( this.maxcopies ??0) ) {
					this.copies++;
					this.updateUsrDialog();
				}
			} else if ( Lang13.Bool( href_list["aipic"] ) ) {
				
				if ( !( Task13.User is Mob_Living_Silicon_Ai ) ) {
					return null;
				}

				if ( this.toner >= 5 && !this.busy ) {
					nametemp = new ByTable();
					find = null;
					selection = null;
					tempAI = Task13.User;

					if ( ((dynamic)tempAI).aicamera.aipictures.len == 0 ) {
						Task13.User.WriteMsg( "<span class='boldannounce'>No images saved</span>" );
						return null;
					}

					foreach (dynamic _a in Lang13.Enumerate( ((dynamic)tempAI).aicamera.aipictures, typeof(Picture) )) {
						t = _a;
						
						nametemp.Add( t.fields["name"] );
					}
					find = Interface13.Input( "Select image (numbered in order taken)", null, null, null, nametemp, InputType.Any );
					p3 = new Obj_Item_Weapon_Photo( this.loc );

					foreach (dynamic _b in Lang13.Enumerate( ((dynamic)tempAI).aicamera.aipictures, typeof(Picture) )) {
						q = _b;
						

						if ( q.fields["name"] == find ) {
							selection = q;
							break;
						}
					}
					I2 = selection.fields["icon"];
					img2 = selection.fields["img"];
					p3.icon = I2;
					p3.img = img2;
					p3.desc = selection.fields["desc"];
					p3.blueprints = Lang13.Bool( selection.fields["blueprints"] );
					p3.pixel_x = Rand13.Int( -10, 10 );
					p3.pixel_y = Rand13.Int( -10, 10 );
					this.toner -= 5;
					this.busy = true;
					Task13.Sleep( 15 );
					this.busy = false;
				}
				this.updateUsrDialog();
			} else if ( Lang13.Bool( href_list["colortoggle"] ) ) {
				
				if ( this.greytoggle == "Greyscale" ) {
					this.greytoggle = "Color";
				} else {
					this.greytoggle = "Greyscale";
				}
				this.updateUsrDialog();
			}
			return null;
		}

		// Function from file: photocopier.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;

			((Mob)a).set_machine( this );
			dat = "Photocopier<BR><BR>";

			if ( Lang13.Bool( this.copy ) || Lang13.Bool( this.photocopy ) || this.ass != null && this.ass.loc == this.loc ) {
				dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";remove=1'>Remove Paper</a><BR>" ).ToString();

				if ( this.toner != 0 ) {
					dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";copy=1'>Copy</a><BR>" ).ToString();
					dat += "Printing: " + this.copies + " copies.";
					dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";min=1'>-</a> " ).ToString();
					dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";add=1'>+</a><BR><BR>" ).ToString();

					if ( Lang13.Bool( this.photocopy ) ) {
						dat += new Txt( "Printing in <a href='byond://?src=" ).Ref( this ).str( ";colortoggle=1'>" ).item( this.greytoggle ).str( "</a><BR><BR>" ).ToString();
					}
				}
			} else if ( this.toner != 0 ) {
				dat += "Please insert paper to copy.<BR><BR>";
			}

			if ( a is Mob_Living_Silicon_Ai ) {
				dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";aipic=1'>Print photo from database</a><BR><BR>" ).ToString();
			}
			dat += "Current toner level: " + this.toner;

			if ( !( this.toner != 0 ) ) {
				dat += "<BR>Please insert a new toner cartridge!";
			}
			Interface13.Browse( a, dat, "window=copier" );
			GlobalFuncs.onclose( a, "copier" );
			return null;
		}

		// Function from file: photocopier.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: photocopier.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

	}

}
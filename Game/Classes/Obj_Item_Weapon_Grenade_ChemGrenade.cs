// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grenade_ChemGrenade : Obj_Item_Weapon_Grenade {

		public int? stage = 1;
		public ByTable beakers = new ByTable();
		public ByTable allowed_containers = new ByTable(new object [] { typeof(Obj_Item_Weapon_ReagentContainers_Glass_Beaker), typeof(Obj_Item_Weapon_ReagentContainers_Glass_Bottle) });
		public int? affected_area = 3;
		public dynamic nadeassembly = null;
		public string assemblyattacher = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 2;
			this.icon_state = "chemg";
		}

		// Function from file: chem_grenade.dm
		public Obj_Item_Weapon_Grenade_ChemGrenade ( dynamic loc = null ) : base( (object)(loc) ) {
			this.create_reagents( 1000 );
			this.stage_change();
			return;
		}

		// Function from file: chem_grenade.dm
		public override void prime(  ) {
			bool has_reagents = false;
			Obj_Item I = null;
			dynamic M = null;
			dynamic last = null;
			dynamic T = null;
			dynamic A = null;
			EffectSystem_SteamSpread steam = null;
			ByTable viewable = null;
			ByTable accessible = null;
			ByTable reactable = null;
			ByTable mycontents = null;
			dynamic T2 = null;
			Ent_Static A2 = null;
			double? fraction = null;
			Ent_Static A3 = null;

			
			if ( this.stage != 3 || !( this.reagents != null ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj_Item) )) {
				I = _a;
				

				if ( Lang13.Bool( I.reagents.total_volume ) ) {
					has_reagents = true;
				}
			}

			if ( !has_reagents ) {
				GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver2.ogg", 50, 1 );
				return;
			}

			if ( Lang13.Bool( this.nadeassembly ) ) {
				M = GlobalFuncs.get_mob_by_ckey( this.assemblyattacher );
				last = GlobalFuncs.get_mob_by_ckey( this.nadeassembly.fingerprintslast );
				T = GlobalFuncs.get_turf( this );
				A = GlobalFuncs.get_area( T );
				GlobalFuncs.message_admins( new Txt( "grenade primed by an assembly, attached by " ).item( GlobalFuncs.key_name_admin( M ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( M ).str( "'>(?)</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( M ).str( "'>FLW</A>) and last touched by " ).item( GlobalFuncs.key_name_admin( last ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( last ).str( "'>(?)</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( last ).str( "'>FLW</A>) (" ).item( this.nadeassembly.a_left.name ).str( " and " ).item( this.nadeassembly.a_right.name ).str( ") at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( T.x ).str( ";Y=" ).item( T.y ).str( ";Z=" ).item( T.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
				GlobalFuncs.log_game( "grenade primed by an assembly, attached by " + GlobalFuncs.key_name( M ) + " and last touched by " + GlobalFuncs.key_name( last ) + " (" + this.nadeassembly.a_left.name + " and " + this.nadeassembly.a_right.name + ") at " + A.name + " (" + T.x + ", " + T.y + ", " + T.z + ")" );
			}
			GlobalFuncs.playsound( this.loc, "sound/effects/bamf.ogg", 50, 1 );
			this.update_mob();
			this.mix_reagents();

			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				steam = new EffectSystem_SteamSpread();
				steam.set_up( 10, 0, GlobalFuncs.get_turf( this ) );
				steam.attach( this );
				steam.start();
				viewable = Map13.FetchInView( this.loc, this.affected_area );
				accessible = this.can_flood_from( this.loc, this.affected_area );
				reactable = accessible;
				mycontents = this.GetAllContents();

				foreach (dynamic _c in Lang13.Enumerate( accessible )) {
					T2 = _c;
					

					foreach (dynamic _b in Lang13.Enumerate( ((Ent_Static)T2).GetAllContents(), typeof(Ent_Static) )) {
						A2 = _b;
						

						if ( mycontents.Contains( A2 ) ) {
							continue;
						}

						if ( !viewable.Contains( A2 ) ) {
							continue;
						}
						reactable.Or( A2 );
					}
				}

				if ( !( reactable.len != 0 ) ) {
					GlobalFuncs.qdel( this );
					return;
				}
				fraction = 1 / reactable.len;

				foreach (dynamic _d in Lang13.Enumerate( reactable, typeof(Ent_Static) )) {
					A3 = _d;
					
					this.reagents.reaction( A3, GlobalVars.TOUCH, fraction );
				}
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: chem_grenade.dm
		public override bool on_found( dynamic finder = null ) {
			
			if ( Lang13.Bool( this.nadeassembly ) ) {
				((Obj_Item)this.nadeassembly).on_found( finder );
			}
			return false;
		}

		// Function from file: chem_grenade.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			
			if ( Lang13.Bool( this.nadeassembly ) ) {
				((Base_Dynamic)this.nadeassembly).Crossed( O );
			}
			return null;
		}

		// Function from file: chem_grenade.dm
		public override bool HasProximity( dynamic AM = null ) {
			
			if ( Lang13.Bool( this.nadeassembly ) ) {
				((Ent_Static)this.nadeassembly).HasProximity( AM );
			}
			return false;
		}

		// Function from file: chem_grenade.dm
		public override bool receive_signal( Signal signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			this.prime();
			return false;
		}

		// Function from file: chem_grenade.dm
		public ByTable can_flood_from( Ent_Static myloc = null, int? maxrange = null ) {
			dynamic myturf = null;
			ByTable reachable = null;
			int? i = null;
			ByTable turflist = null;
			dynamic T = null;
			dynamic T2 = null;
			dynamic T3 = null;
			dynamic NT = null;

			myturf = GlobalFuncs.get_turf( myloc );
			reachable = new ByTable(new object [] { myloc });
			i = null;
			i = 1;

			while (( i ??0) <= ( maxrange ??0)) {
				turflist = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( myloc, i ) - Map13.FetchInRangeExcludeThis( myloc, ( i ??0) - 1 ) )) {
					T = _a;
					
					turflist.Or( T );
				}

				foreach (dynamic _b in Lang13.Enumerate( turflist )) {
					T2 = _b;
					

					if ( !GlobalVars.cardinal.Contains( Map13.GetDistance( T2, myloc ) ) && Math.Abs( Convert.ToDouble( T2.x - myturf.x ) ) == Math.Abs( Convert.ToDouble( T2.y - myturf.y ) ) ) {
						turflist.Remove( T2 );
						turflist.Add( T2 );
					}
				}

				foreach (dynamic _d in Lang13.Enumerate( turflist )) {
					T3 = _d;
					

					if ( reachable.Contains( T3 ) ) {
						continue;
					}

					foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T3, 1 ) )) {
						NT = _c;
						

						if ( !reachable.Contains( NT ) ) {
							continue;
						}

						if ( !GlobalVars.cardinal.Contains( Map13.GetDistance( T3, NT ) ) ) {
							continue;
						}

						if ( !((Tile)NT).CanAtmosPass( T3 ) ) {
							continue;
						}
						reachable.Or( T3 );
						break;
					}
				}
				i++;
			}
			return reachable;
		}

		// Function from file: chem_grenade.dm
		public virtual void mix_reagents(  ) {
			dynamic total_temp = null;
			Obj_Item_Weapon_ReagentContainers_Glass G = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj_Item_Weapon_ReagentContainers_Glass) )) {
				G = _a;
				
				G.reagents.trans_to( this, G.reagents.total_volume );
				total_temp += G.reagents.chem_temp;
			}
			this.reagents.chem_temp = total_temp;
			return;
		}

		// Function from file: chem_grenade.dm
		public void stage_change( int? N = null ) {
			
			if ( Lang13.Bool( N ) ) {
				this.stage = N;
			}

			if ( this.stage == 1 ) {
				this.name = "" + Lang13.Initial( this, "name" ) + " casing";
				this.desc = "A do it yourself " + Lang13.Initial( this, "name" ) + " casing!";
				this.icon_state = Lang13.Initial( this, "icon_state" );
			} else if ( this.stage == 2 ) {
				this.name = "unsecured " + Lang13.Initial( this, "name" );
				this.desc = "An unsecured " + Lang13.Initial( this, "name" ) + " assembly.";
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_ass";
			} else if ( this.stage == 3 ) {
				this.name = Lang13.Initial( this, "name" );
				this.desc = Lang13.Initial( this, "desc" );
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_locked";
			}
			return;
		}

		// Function from file: chem_grenade.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic A2 = null;
			dynamic C = null;
			Obj O = null;

			
			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( this.stage == 2 ) {
					
					if ( this.beakers.len != 0 ) {
						this.stage_change( 3 );
						user.WriteMsg( "<span class='notice'>You lock the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
						GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 25, -3 );
					} else {
						user.WriteMsg( "<span class='warning'>You need to add at least one beaker before locking the " + Lang13.Initial( this, "name" ) + " assembly!</span>" );
					}
				} else if ( this.stage == 3 && !Lang13.Bool( this.nadeassembly ) ) {
					this.det_time = ( this.det_time == 50 ? 30 : 50 );
					user.WriteMsg( new Txt( "<span class='notice'>You modify the time delay. It's set for " ).item( ( this.det_time ??0) / 10 ).str( " second" ).s().str( ".</span>" ).ToString() );
				} else if ( this.stage == 1 ) {
					user.WriteMsg( "<span class='warning'>You need to add an activation mechanism!</span>" );
				}
			} else if ( this.stage == 2 && GlobalFuncs.is_type_in_list( A, this.allowed_containers ) ) {
				
				if ( this.beakers.len == 2 ) {
					user.WriteMsg( "<span class='warning'>" + this + " can not hold more containers!</span>" );
					return null;
				} else if ( Lang13.Bool( A.reagents.total_volume ) ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					user.WriteMsg( "<span class='notice'>You add " + A + " to the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
					A.loc = this;
					this.beakers.Add( A );
				} else {
					user.WriteMsg( "<span class='warning'>" + A + " is empty!</span>" );
				}
			} else if ( this.stage == 1 && A is Obj_Item_Device_AssemblyHolder ) {
				A2 = A;

				if ( A2.a_left is Obj_Item_Device_Assembly_Igniter == A2.a_right is Obj_Item_Device_Assembly_Igniter ) {
					return null;
				}

				if ( !((Mob)user).unEquip( A ) ) {
					return null;
				}
				this.nadeassembly = A2;
				A2.master = this;
				A2.loc = this;
				this.assemblyattacher = user.ckey;
				this.stage_change( 2 );
				user.WriteMsg( "<span class='notice'>You add " + A2 + " to the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
			} else if ( this.stage == 1 && A is Obj_Item_Stack_CableCoil ) {
				C = A;

				if ( Lang13.Bool( C.use( 1 ) ) ) {
					this.det_time = 50;
					this.stage_change( 2 );
					user.WriteMsg( "<span class='notice'>You rig the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
				} else {
					user.WriteMsg( "<span class='warning'>You need one length of coil to wire the assembly!</span>" );
					return null;
				}
			} else if ( this.stage == 3 && A is Obj_Item_Weapon_Wirecutters ) {
				this.stage_change( 2 );
				user.WriteMsg( "<span class='notice'>You unlock the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
			} else if ( this.stage == 2 && A is Obj_Item_Weapon_Wrench ) {
				
				if ( this.beakers.len != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj) )) {
						O = _a;
						
						O.loc = GlobalFuncs.get_turf( this );
					}
					this.beakers = new ByTable();
					user.WriteMsg( "<span class='notice'>You open the " + Lang13.Initial( this, "name" ) + " assembly and remove the payload.</span>" );
					return null;
				}

				if ( Lang13.Bool( this.nadeassembly ) ) {
					this.nadeassembly.loc = GlobalFuncs.get_turf( this );
					this.nadeassembly.master = null;
					this.nadeassembly = null;
				} else {
					new Obj_Item_Stack_CableCoil( GlobalFuncs.get_turf( this ), 1 );
				}
				this.stage_change( 1 );
				user.WriteMsg( "<span class='notice'>You remove the activation mechanism from the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
			}
			return null;
		}

		// Function from file: chem_grenade.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic bombturf = null;
			dynamic A = null;
			dynamic C = null;

			
			if ( this.stage == 3 && !this.active ) {
				
				if ( Lang13.Bool( this.nadeassembly ) ) {
					((Obj_Item)this.nadeassembly).attack_self( user );
				} else if ( this.clown_check( user ) ) {
					bombturf = GlobalFuncs.get_turf( this );
					A = GlobalFuncs.get_area( bombturf );
					GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( Task13.User ).str( "'>FLW</A>) has primed a " ).item( this.name ).str( " for detonation at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " has primed a " + this.name + " for detonation at " + A.name + " (" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")." );
					user.WriteMsg( new Txt( "<span class='warning'>You prime the " ).item( this.name ).str( "! " ).item( ( this.det_time ??0) / 10 ).str( " second" ).s().str( "!</span>" ).ToString() );
					GlobalFuncs.playsound( user.loc, "sound/weapons/armbomb.ogg", 60, 1 );
					this.active = true;
					this.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";

					if ( user is Mob_Living_Carbon ) {
						C = user;
						((Mob_Living_Carbon)C).throw_mode_on();
					}
					Task13.Schedule( ((int)( this.det_time ??0 )), (Task13.Closure)(() => {
						this.prime();
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: chem_grenade.dm
		public override double examine( dynamic user = null ) {
			this.display_timer = this.stage == 3 && !Lang13.Bool( this.nadeassembly );
			base.examine( (object)(user) );
			return 0;
		}

	}

}
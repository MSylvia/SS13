// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Soulstone : Obj_Item_Device {

		public string imprinted = "empty";
		public bool usability = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.w_class = 1;
			this.slot_flags = 512;
			this.origin_tech = "bluespace=4;materials=4";
			this.icon = "icons/obj/wizard.dmi";
			this.icon_state = "soulstone";
		}

		public Obj_Item_Device_Soulstone ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: soulstone.dm
		public bool getCultGhost( Obj_Item_Device_Soulstone C = null, dynamic T = null, dynamic U = null ) {
			ByTable consenting_candidates = null;
			dynamic ghost = null;
			Obj_Item W = null;

			consenting_candidates = GlobalFuncs.pollCandidates( "Would you like to play as a Shade?", null, null, "cultist", 100 );

			if ( !Lang13.Bool( T ) ) {
				return false;
			}

			if ( consenting_candidates.len != 0 ) {
				ghost = null;
				ghost = Rand13.PickFromTable( consenting_candidates );

				if ( C.contents.len != 0 ) {
					return false;
				}

				if ( !Lang13.Bool( T.client ) ) {
					T.client = ghost;
				}

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Item) )) {
					W = _a;
					
					((Mob)T).unEquip( W );
				}
				this.init_shade( C, T, U );
				GlobalFuncs.qdel( T );
				return true;
			} else {
				U.WriteMsg( "<span class='danger'>The ghost has fled beyond your grasp.</span>" );
				return false;
			}
		}

		// Function from file: soulstone.dm
		public void init_shade( Obj_Item_Device_Soulstone C = null, dynamic T = null, dynamic U = null, bool? vic = null ) {
			vic = vic ?? false;

			Dynamic_Overlay animation = null;
			Mob_Living_SimpleAnimal_Shade S = null;

			new Obj_Effect_Decal_Remains_Human( T.loc );
			T.invisibility = 101;
			animation = new Dynamic_Overlay( T.loc );
			animation.icon_state = "blank";
			animation.icon = "icons/mob/mob.dmi";
			animation.master = T;
			Icon13.Flick( "dust-h", animation );
			GlobalFuncs.qdel( animation );
			S = new Mob_Living_SimpleAnimal_Shade( T.loc );
			S.loc = C;
			S.status_flags |= 4096;
			S.canmove = false;
			S.name = "Shade of " + T.real_name;
			S.real_name = "Shade of " + T.real_name;
			S.key = T.key;
			S.faction |= new Txt().Ref( U ).ToString();

			if ( GlobalFuncs.iscultist( U ) ) {
				((GameMode)GlobalVars.ticker.mode).add_cultist( S.mind );
			}
			S.__CallVerb("Cancel Camera View" );
			C.icon_state = "soulstone2";
			C.name = "Soul Stone: " + S.real_name;

			if ( GlobalFuncs.iswizard( U ) || this.usability ) {
				S.WriteMsg( "Your soul has been captured! You are now bound to " + U.name + "'s will, help them suceed in their goals at all costs." );
			} else if ( GlobalFuncs.iscultist( U ) ) {
				S.WriteMsg( "Your soul has been captured! You are now bound to the cult's will, help them suceed in their goals at all costs." );
			}
			C.imprinted = "" + S.name;

			if ( vic == true ) {
				U.WriteMsg( "<span class='info'><b>Capture successful!</b>:</span> " + T.real_name + "'s soul has been ripped from their body and stored within the soul stone." );
				U.WriteMsg( "The soulstone has been imprinted with " + S.real_name + "'s mind, it will no longer react to other souls." );
			}
			return;
		}

		// Function from file: soulstone.dm
		public bool transfer_soul( string choice = null, dynamic target = null, dynamic user = null ) {
			dynamic T = null;
			Obj_Item W = null;
			dynamic T2 = null;
			Obj_Item W2 = null;
			dynamic T3 = null;
			dynamic T4 = null;
			dynamic A = null;
			string construct_class = null;

			
			switch ((string)( choice )) {
				case "FORCE":
					
					if ( !( target is Mob_Living_Carbon ) ) {
						return false;
					}

					if ( this.contents.len != 0 ) {
						return false;
					}
					T = target;

					if ( T.client != null ) {
						
						foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Item) )) {
							W = _a;
							
							((Mob)T).unEquip( W );
						}
						this.init_shade( this, T, user );
						return true;
					} else {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul has already fled it's mortal frame. You attempt to bring it back..." );
						return this.getCultGhost( this, T, user );
					}
					break;
				case "VICTIM":
					T2 = target;

					if ( this.imprinted != "empty" ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul stone has already been imprinted with " + this.imprinted + "'s mind!" );
					} else if ( Lang13.Bool( T2.stat ) == false ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: Kill or maim the victim first!" );
					} else if ( T2.client == null ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul has already fled it's mortal frame. You attempt to bring it back..." );
						this.getCultGhost( this, T2, user );
					} else if ( this.contents.len != 0 ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul stone is full! Use or free an existing soul to make room." );
					} else {
						
						foreach (dynamic _b in Lang13.Enumerate( T2, typeof(Obj_Item) )) {
							W2 = _b;
							
							((Mob)T2).unEquip( W2 );
						}
						this.init_shade( this, T2, user, true );
						GlobalFuncs.qdel( T2 );
					}
					break;
				case "SHADE":
					T3 = target;

					if ( Convert.ToInt32( T3.stat ) == 2 ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The shade has already been banished!" );
					} else if ( this.contents.len != 0 ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul stone is full! Use or free an existing soul to make room." );
					} else if ( T3.name != this.imprinted ) {
						user.WriteMsg( "<span class='userdanger'>Capture failed!</span>: The soul stone has already been imprinted with " + this.imprinted + "'s mind!" );
					} else {
						T3.loc = this;
						T3.status_flags |= 4096;
						T3.canmove = 0;
						T3.health = T3.maxHealth;
						this.icon_state = "soulstone2";
						T3.WriteMsg( "Your soul has been recaptured by the soul stone, its arcane energies are reknitting your ethereal form" );

						if ( user != T3 ) {
							user.WriteMsg( "<span class='info'><b>Capture successful!</b>:</span> " + T3.name + "'s has been recaptured and stored within the soul stone." );
						}
					}
					break;
				case "CONSTRUCT":
					T4 = target;
					A = Lang13.FindIn( typeof(Mob_Living_SimpleAnimal_Shade), this );

					if ( Lang13.Bool( A ) ) {
						construct_class = Interface13.Alert( user, "Please choose which type of construct you wish to create.", null, "Juggernaut", "Wraith", "Artificer" );

						if ( !Lang13.Bool( T4 ) || !( T4.loc != null ) ) {
							return false;
						}

						switch ((string)( construct_class )) {
							case "Juggernaut":
								GlobalFuncs.makeNewConstruct( typeof(Mob_Living_SimpleAnimal_Hostile_Construct_Armored), A, user, false, T4.loc );
								break;
							case "Wraith":
								GlobalFuncs.makeNewConstruct( typeof(Mob_Living_SimpleAnimal_Hostile_Construct_Wraith), A, user, false, T4.loc );
								break;
							case "Artificer":
								GlobalFuncs.makeNewConstruct( typeof(Mob_Living_SimpleAnimal_Hostile_Construct_Builder), A, user, false, T4.loc );
								break;
						}
						GlobalFuncs.qdel( T4 );
						GlobalFuncs.qdel( this );
					} else {
						user.WriteMsg( "<span class='userdanger'>Creation failed!</span>: The soul stone is empty! Go kill someone!" );
					}
					break;
			}
			return false;
		}

		// Function from file: soulstone.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Mob U = null;
			Mob_Living_SimpleAnimal_Shade A = null;

			U = Task13.User;

			if ( !( Map13.GetDistance( this, U ) <= 1 ) || U.machine != this ) {
				Interface13.Browse( U, null, "window=aicard" );
				U.unset_machine();
				return null;
			}
			this.add_fingerprint( U );
			U.set_machine( this );

			dynamic _b = href_list["choice"]; // Was a switch-case, sorry for the mess.
			if ( _b=="Close" ) {
				Interface13.Browse( U, null, "window=aicard" );
				U.unset_machine();
				return null;
			} else if ( _b=="Summon" ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this, typeof(Mob_Living_SimpleAnimal_Shade) )) {
					A = _a;
					
					A.status_flags &= 61439;
					A.canmove = true;
					A.loc = U.loc;
					A.__CallVerb("Cancel Camera View" );
					this.icon_state = "soulstone";

					if ( GlobalFuncs.iswizard( U ) || this.usability ) {
						A.WriteMsg( "<b>You have been released from your prison, but you are still bound to " + U.name + "'s will. Help them suceed in their goals at all costs.</b>" );
					} else if ( GlobalFuncs.iscultist( U ) ) {
						A.WriteMsg( "<b>You have been released from your prison, but you are still bound to the cult's will. Help them suceed in their goals at all costs.</b>" );
					}
				}
			}
			this.attack_self( U );
			return null;
		}

		// Function from file: soulstone.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;
			Mob_Living_SimpleAnimal_Shade A = null;

			
			if ( !( Map13.GetDistance( this, user ) <= 1 ) ) {
				return null;
			}

			if ( !GlobalFuncs.iscultist( user ) && !GlobalFuncs.iswizard( user ) && !this.usability ) {
				((Mob)user).Paralyse( 5 );
				user.WriteMsg( "<span class='userdanger'>Your body is wracked with debilitating pain!</span>" );
				return null;
			}
			((Mob)user).set_machine( this );
			dat = "<TT><B>Soul Stone</B><BR>";

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Mob_Living_SimpleAnimal_Shade) )) {
				A = _a;
				
				dat += "Captured Soul: " + A.name + "<br>";
				dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";choice=Summon'>Summon Shade</A>" ).ToString();
				dat += "<br>";
				dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Close'>Close</a>" ).ToString();
			}
			Interface13.Browse( user, dat, "window=aicard" );
			GlobalFuncs.onclose( user, "aicard" );
			return null;
		}

		// Function from file: soulstone.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			
			if ( !GlobalFuncs.iscultist( user ) && !GlobalFuncs.iswizard( user ) && !this.usability ) {
				((Mob)user).Paralyse( 5 );
				user.WriteMsg( "<span class='userdanger'>Your body is wracked with debilitating pain!</span>" );
				return false;
			}

			if ( !( M is Mob_Living_Carbon_Human ) ) {
				return base.attack( (object)(M), (object)(user), def_zone );
			}

			if ( M is Mob_Living_Carbon_Human_Dummy ) {
				return base.attack( (object)(M), (object)(user), def_zone );
			}

			if ( GlobalFuncs.iscultist( M ) ) {
				user.WriteMsg( "<span class='cultlarge'>You shouldn't do that.</span>" );
				return false;
			}
			GlobalFuncs.add_logs( user, M, "captured " + M.name + "'s soul", this );

			if ( GlobalFuncs.iscultist( user ) && Lang13.Bool( M ) && Lang13.Bool( M.mind ) ) {
				new Obj_Item_SummoningOrb( GlobalFuncs.get_turf( M ) );
			}
			this.transfer_soul( "VICTIM", M, user );
			return false;
		}

		// Function from file: soulstone.dm
		public override bool pickup( dynamic user = null ) {
			
			if ( !GlobalFuncs.iscultist( user ) && !GlobalFuncs.iswizard( user ) && !this.usability ) {
				user.WriteMsg( "<span class='danger'>An overwhelming feeling of dread comes over you as you pick up the soulstone. It would be wise to be rid of this quickly.</span>" );
				((Mob)user).Dizzy( 120 );
			}
			return false;
		}

	}

}
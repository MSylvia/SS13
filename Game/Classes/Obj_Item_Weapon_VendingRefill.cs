// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_VendingRefill : Obj_Item_Weapon {

		public string machine_name = "Generic";
		public ByTable charges = new ByTable(new object [] { 0, 0, 0 });
		public ByTable init_charges = new ByTable(new object [] { 0, 0, 0 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "restock_unit";
			this.flags = 64;
			this.force = 7;
			this.throwforce = 10;
			this.throw_speed = 1;
			this.w_class = 4;
			this.icon = "icons/obj/vending_restock.dmi";
			this.icon_state = "refill_snack";
		}

		// Function from file: vending_items.dm
		public Obj_Item_Weapon_VendingRefill ( dynamic amt = null ) : base( (object)(amt) ) {
			amt = amt ?? -1;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.name = new Txt().improper().item( this.machine_name ).str( " restocking unit" ).ToString();

			if ( Lang13.Bool( Lang13.IsNumber( amt ) ) && Convert.ToDouble( amt ) > -1 ) {
				this.charges[1] = amt;
			}
			return;
		}

		// Function from file: vending_items.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( Convert.ToDouble( this.charges[1] ) > 0 ) {
				user.WriteMsg( "It can restock " + this.charges[1] + " item(s)." );
			} else {
				user.WriteMsg( "It's empty!" );
			}
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Combat : Obj_Mecha {

		public string am = "d3c2fbcadca903a41161ccc9df9cf948";
		public bool thrusters = false;
		public Action_Innate_Mecha_MechToggleThrusters thrusters_action = new Action_Innate_Mecha_MechToggleThrusters();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 30;
			this.damage_absorption = new ByTable().Set( "brute", 061 ).Set( "fire", 1 ).Set( "bullet", 061 ).Set( "laser", 0.85 ).Set( "energy", 1 ).Set( "bomb", 0.8 );
		}

		public Obj_Mecha_Combat ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: combat.dm
		public override int Process_Spacemove( dynamic movement_dir = null ) {
			movement_dir = movement_dir ?? 0;

			
			if ( base.Process_Spacemove( (object)(movement_dir) ) != 0 ) {
				return 1;
			}

			if ( this.thrusters && Lang13.Bool( movement_dir ) && this.use_power( this.step_energy_drain ) ) {
				return 1;
			}
			return 0;
		}

		// Function from file: combat.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			TopicInput filter = null;

			base.Topic( href, href_list, (object)(hsrc) );
			filter = new TopicInput( href, href_list );

			if ( Lang13.Bool( filter.get( "close" ) ) ) {
				this.am = null;
				return null;
			}
			return null;
		}

		// Function from file: combat.dm
		public override void go_out( bool? forced = null, Ent_Static newloc = null ) {
			
			if ( Lang13.Bool( this.occupant ) && Lang13.Bool( this.occupant.client ) ) {
				this.occupant.client.mouse_pointer_icon = Lang13.Initial( this.occupant.client, "mouse_pointer_icon" );
			}
			base.go_out( forced, newloc );
			return;
		}

		// Function from file: combat.dm
		public override bool mmi_moved_inside( dynamic mmi_as_oc = null, dynamic user = null ) {
			
			if ( base.mmi_moved_inside( (object)(mmi_as_oc), (object)(user) ) ) {
				
				if ( Lang13.Bool( this.occupant.client ) ) {
					this.occupant.client.mouse_pointer_icon = new File( "icons/mecha/mecha_mouse.dmi" );
				}
				return true;
			} else {
				return false;
			}
		}

		// Function from file: combat.dm
		public override bool moved_inside( dynamic H = null ) {
			
			if ( base.moved_inside( (object)(H) ) ) {
				
				if ( Lang13.Bool( H.client ) ) {
					H.client.mouse_pointer_icon = new File( "icons/mecha/mecha_mouse.dmi" );
				}
				return true;
			} else {
				return false;
			}
		}

		// Function from file: combat.dm
		public override void CheckParts( Game_Data holder = null ) {
			dynamic C = null;
			dynamic SM = null;
			dynamic DR = null;

			C = Lang13.FindIn( typeof(Obj_Item_Weapon_StockParts_Capacitor), holder );
			SM = Lang13.FindIn( typeof(Obj_Item_Weapon_StockParts_ScanningModule), holder );
			this.step_energy_drain = 20 - Convert.ToDouble( SM.rating * 5 );
			DR = this.damage_absorption["energy"];
			this.damage_absorption["energy"] = DR - C.rating / 10;
			GlobalFuncs.qdel( C );
			GlobalFuncs.qdel( SM );
			return;
		}

	}

}
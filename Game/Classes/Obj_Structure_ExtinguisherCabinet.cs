// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_ExtinguisherCabinet : Obj_Structure {

		public dynamic has_extinguisher = new Obj_Item_Weapon_Extinguisher();
		public bool opened = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/wallmounts.dmi";
			this.icon_state = "extinguisher_closed";
		}

		public Obj_Structure_ExtinguisherCabinet ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: extinguisher.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( !this.opened ) {
				this.icon_state = "extinguisher_closed";
				return null;
			}

			if ( Lang13.Bool( this.has_extinguisher ) ) {
				
				if ( this.has_extinguisher is Obj_Item_Weapon_Extinguisher_Mini ) {
					this.icon_state = "extinguisher_mini";
				} else {
					this.icon_state = "extinguisher_full";
				}
			} else {
				this.icon_state = "extinguisher_empty";
			}
			return null;
		}

		// Function from file: extinguisher.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand( a );
			return null;
		}

		// Function from file: extinguisher.dm
		public override void attack_tk( Mob_Living_Carbon_Human user = null ) {
			
			if ( Lang13.Bool( this.has_extinguisher ) ) {
				this.has_extinguisher.loc = this.loc;
				user.WriteMsg( "<span class='notice'>You telekinetically remove " + this.has_extinguisher + " from " + this + ".</span>" );
				this.has_extinguisher = null;
				this.opened = true;
			} else {
				this.opened = !this.opened;
			}
			this.update_icon();
			return;
		}

		// Function from file: extinguisher.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( a is Mob_Living_Silicon_Robot || a is Mob_Living_Carbon_Alien ) {
				return null;
			}

			if ( Lang13.Bool( this.has_extinguisher ) ) {
				((Mob)a).put_in_hands( this.has_extinguisher );
				a.WriteMsg( "<span class='notice'>You take " + this.has_extinguisher + " from " + this + ".</span>" );
				this.has_extinguisher = null;
				this.opened = true;
			} else {
				this.opened = !this.opened;
			}
			this.update_icon();
			return null;
		}

		// Function from file: extinguisher.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( user is Mob_Living_Silicon_Robot || user is Mob_Living_Carbon_Alien ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Extinguisher ) {
				
				if ( !Lang13.Bool( this.has_extinguisher ) && this.opened ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					this.contents.Add( A );
					this.has_extinguisher = A;
					user.WriteMsg( "<span class='notice'>You place " + A + " in " + this + ".</span>" );
				} else {
					this.opened = !this.opened;
				}
			} else {
				this.opened = !this.opened;
			}
			this.update_icon();
			return null;
		}

		// Function from file: extinguisher.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						
						if ( Lang13.Bool( this.has_extinguisher ) ) {
							this.has_extinguisher.loc = this.loc;
						}
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
				case 3:
					return false;
					break;
			}
			return false;
		}

	}

}
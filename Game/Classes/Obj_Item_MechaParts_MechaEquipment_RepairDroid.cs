// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_RepairDroid : Obj_Item_MechaParts_MechaEquipment {

		public bool health_boost = true;
		public Icon droid_overlay = null;
		public ByTable repairable_damage = new ByTable(new object [] { 2, 8 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "magnets=3;programming=3";
			this.energy_drain = 50;
			this.range = 0;
			this.icon_state = "repair_droid";
		}

		public Obj_Item_MechaParts_MechaEquipment_RepairDroid ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: other_tools.dm
		public override int? process( dynamic seconds = null ) {
			int h_boost = 0;
			bool repaired = false;
			dynamic int_dam_flag = null;

			
			if ( !( this.chassis != null ) ) {
				GlobalVars.SSobj.processing.Remove( this );
				this.set_ready_state( true );
				return null;
			}
			h_boost = this.health_boost ?1:0;
			repaired = false;

			if ( ( this.chassis.internal_damage & 4 ) != 0 ) {
				h_boost *= -2;
			} else if ( this.chassis.internal_damage != 0 && Rand13.PercentChance( 15 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.repairable_damage )) {
					int_dam_flag = _a;
					

					if ( ( this.chassis.internal_damage & Convert.ToInt32( int_dam_flag ) ) != 0 ) {
						this.chassis.clearInternalDamage( int_dam_flag );
						repaired = true;
						break;
					}
				}
			}

			if ( ( this.health_boost ?1:0) < 0 || this.chassis.health < Convert.ToDouble( Lang13.Initial( this.chassis, "health" ) ) ) {
				this.chassis.health += Num13.MinInt( this.health_boost ?1:0, Convert.ToInt32( Lang13.Initial( this.chassis, "health" ) - this.chassis.health ) );
				repaired = true;
			}

			if ( repaired ) {
				
				if ( !this.chassis.use_power( this.energy_drain ) ) {
					GlobalVars.SSobj.processing.Remove( this );
					this.set_ready_state( true );
				}
			} else {
				GlobalVars.SSobj.processing.Remove( this );
				this.set_ready_state( true );
				this.chassis.overlays.Remove( this.droid_overlay );
				this.droid_overlay = new Icon( this.icon, "repair_droid" );
				this.chassis.overlays.Add( this.droid_overlay );
			}
			return null;
		}

		// Function from file: other_tools.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			base.Topic( href, href_list, (object)(hsrc) );

			if ( Lang13.Bool( href_list["toggle_repairs"] ) ) {
				this.chassis.overlays.Remove( this.droid_overlay );

				if ( this.equip_ready ) {
					GlobalVars.SSobj.processing.Or( this );
					this.droid_overlay = new Icon( this.icon, "repair_droid_a" );
					this.log_message( "Activated." );
					this.set_ready_state( false );
				} else {
					GlobalVars.SSobj.processing.Remove( this );
					this.droid_overlay = new Icon( this.icon, "repair_droid" );
					this.log_message( "Deactivated." );
					this.set_ready_state( true );
				}
				this.chassis.overlays.Add( this.droid_overlay );
				GlobalFuncs.send_byjax( this.chassis.occupant, "exosuit.browser", new Txt().Ref( this ).ToString(), this.get_equip_info() );
			}
			return null;
		}

		// Function from file: other_tools.dm
		public override string get_equip_info(  ) {
			
			if ( !( this.chassis != null ) ) {
				return null;
			}
			return new Txt( "<span style=\"color:" ).item( ( this.equip_ready ? "#0f0" : "#f00" ) ).str( ";\">*</span>&nbsp;" ).item( this.name ).str( " - <a href='?src=" ).Ref( this ).str( ";toggle_repairs=1'>" ).item( ( this.equip_ready ? "A" : "Dea" ) ).str( "ctivate</a>" ).ToString();
		}

		// Function from file: other_tools.dm
		public override void detach( dynamic moveto = null ) {
			this.chassis.overlays.Remove( this.droid_overlay );
			GlobalVars.SSobj.processing.Remove( this );
			base.detach( (object)(moveto) );
			return;
		}

		// Function from file: other_tools.dm
		public override void attach( Obj_Mecha M = null ) {
			base.attach( M );
			this.droid_overlay = new Icon( this.icon, "repair_droid" );
			M.overlays.Add( this.droid_overlay );
			return;
		}

		// Function from file: other_tools.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );

			if ( this.chassis != null ) {
				this.chassis.overlays.Remove( this.droid_overlay );
			}
			return base.Destroy();
		}

	}

}
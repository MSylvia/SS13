// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Suit_Space_Hardsuit_Shielded : Obj_Item_Clothing_Suit_Space_Hardsuit {

		public int current_charges = 3;
		public int max_charges = 3;
		public int recharge_delay = 200;
		public int recharge_cooldown = 0;
		public bool recharge_rate = true;
		public string shield_state = "shield-old";
		public string shield_on = "shield-old";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.helmettype = typeof(Obj_Item_Clothing_Head_Helmet_Space_Hardsuit_Security_Hos);
			this.v_allowed = new ByTable(new object [] { 
				typeof(Obj_Item_Device_Flashlight), 
				typeof(Obj_Item_Weapon_Tank_Internals), 
				typeof(Obj_Item_Weapon_Gun), 
				typeof(Obj_Item_Weapon_ReagentContainers_Spray_Pepper), 
				typeof(Obj_Item_AmmoBox), 
				typeof(Obj_Item_AmmoCasing), 
				typeof(Obj_Item_Weapon_Melee_Baton), 
				typeof(Obj_Item_Weapon_Restraints_Handcuffs)
			 });
			this.armor = new ByTable().Set( "melee", 30 ).Set( "bullet", 15 ).Set( "laser", 30 ).Set( "energy", 10 ).Set( "bomb", 10 ).Set( "bio", 100 ).Set( "rad", 50 );
			this.icon_state = "hardsuit-hos";
		}

		public Obj_Item_Clothing_Suit_Space_Hardsuit_Shielded ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hardsuit.dm
		public override ByTable worn_overlays( bool? isinhands = null ) {
			ByTable _default = null;

			_default = new ByTable();

			if ( !( isinhands == true ) ) {
				_default.Add( new Image( "icons/effects/effects.dmi", null, "" + this.shield_state ) );
			}
			return _default;
		}

		// Function from file: hardsuit.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static C = null;

			
			if ( Game13.time > this.recharge_cooldown && this.current_charges < this.max_charges ) {
				this.current_charges = Num13.MaxInt( 0, Num13.MinInt( this.current_charges + ( this.recharge_rate ?1:0), this.max_charges ) );
				GlobalFuncs.playsound( this.loc, "sound/magic/Charge.ogg", 50, 1 );

				if ( this.current_charges == this.max_charges ) {
					GlobalFuncs.playsound( this.loc, "sound/machines/ding.ogg", 50, 1 );
					GlobalVars.SSobj.processing.Remove( this );
				}
				this.shield_state = "" + this.shield_on;

				if ( this.loc is Mob_Living_Carbon_Human ) {
					C = this.loc;
					((dynamic)C).update_inv_wear_suit();
				}
			}
			return null;
		}

		// Function from file: hardsuit.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );
			return base.Destroy();
		}

		// Function from file: hardsuit.dm
		public override bool hit_reaction( Mob_Living_Carbon owner = null, string attack_text = null, int? final_block_chance = null, dynamic damage = null, int? attack_type = null ) {
			EffectSystem_SparkSpread s = null;

			
			if ( this.current_charges > 0 ) {
				s = new EffectSystem_SparkSpread();
				s.set_up( 2, 1, this );
				s.start();
				owner.visible_message( "<span class='danger'>" + owner + "'s shields deflect " + attack_text + " in a shower of sparks!</span>" );
				this.current_charges--;
				this.recharge_cooldown = Game13.time + this.recharge_delay;
				GlobalVars.SSobj.processing.Or( this );

				if ( this.current_charges <= 0 ) {
					owner.visible_message( "" + owner + "'s shield overloads!" );
					this.shield_state = "broken";
					owner.update_inv_wear_suit();
				}
				return true;
			}
			return false;
		}

	}

}
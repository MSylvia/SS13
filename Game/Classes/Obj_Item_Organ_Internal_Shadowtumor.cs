// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Organ_Internal_Shadowtumor : Obj_Item_Organ_Internal {

		public int health = 3;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "biotech=4";
			this.w_class = 1;
			this.zone = "head";
			this.slot = "brain_tumor";
			this.icon_state = "blacktumor";
		}

		// Function from file: organ_internal.dm
		public Obj_Item_Organ_Internal_Shadowtumor ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: organ_internal.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static T = null;
			double light_count = 0;

			
			if ( this.loc is Tile ) {
				T = this.loc;
				light_count = ((Tile)T).get_lumcount();

				if ( light_count > 4 && this.health > 0 ) {
					this.health--;
				} else if ( light_count < 2 && this.health < 3 ) {
					this.health++;
				}

				if ( this.health <= 0 ) {
					this.visible_message( "<span class='warning'>" + this + " collapses in on itself!</span>" );
					GlobalFuncs.qdel( this );
				}
			}
			return null;
		}

		// Function from file: organ_internal.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );
			base.Destroy();
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Action_Innate_Mecha_MechOverloadMode : Action_Innate_Mecha {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Toggle leg actuators overload";
			this.button_icon_state = "mech_overload_off";
		}

		public Action_Innate_Mecha_MechOverloadMode ( dynamic Target = null ) : base( (object)(Target) ) {
			
		}

		// Function from file: gygax.dm
		public override void Activate(  ) {
			Obj_Mecha G = null;

			
			if ( !Lang13.Bool( this.owner ) || !( this.chassis != null ) || this.chassis.occupant != this.owner ) {
				return;
			}
			G = this.chassis;
			((dynamic)G).overload = !Lang13.Bool( ((dynamic)G).overload );
			this.button_icon_state = "mech_overload_" + ( Lang13.Bool( ((dynamic)G).overload ) ? "on" : "off" );
			G.log_message( "Toggled leg actuators overload." );

			if ( Lang13.Bool( ((dynamic)G).overload ) ) {
				((dynamic)G).overload = 1;
				G.step_in = Num13.MinInt( 1, Num13.Floor( Convert.ToDouble( G.step_in / 2 ) ) );
				G.step_energy_drain = G.step_energy_drain * ((dynamic)G).overload_coeff;
				G.occupant_message( "<span class='danger'>You enable leg actuators overload.</span>" );
			} else {
				((dynamic)G).overload = 0;
				G.step_in = Lang13.Initial( G, "step_in" );
				G.step_energy_drain = Lang13.Initial( G, "step_energy_drain" );
				G.occupant_message( "<span class='notice'>You disable leg actuators overload.</span>" );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_PizzaBomb : Obj_Item_Device {

		public dynamic timer = 10;
		public bool timer_set = false;
		public bool primed = false;
		public bool disarmed = false;
		public Mob armer = null;
		public Wires_PizzaBomb wires = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "pizzabox";
			this.burn_state = 0;
			this.icon = "icons/obj/food/containers.dmi";
			this.icon_state = "pizzabox1";
		}

		// Function from file: pizza_bomb.dm
		public Obj_Item_Device_PizzaBomb ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.wires = new Wires_PizzaBomb( this );
			return;
		}

		// Function from file: pizza_bomb.dm
		public override dynamic Destroy(  ) {
			GlobalFuncs.qdel( this.wires );
			this.wires = null;
			return base.Destroy();
		}

		// Function from file: pizza_bomb.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Stack_CableCoil C = null;

			
			if ( A is Obj_Item_Weapon_Wirecutters ) {
				
				if ( this.disarmed ) {
					
					if ( !( Map13.GetDistance( user, this ) <= 1 ) ) {
						user.WriteMsg( "<span class='warning'>You can't see the box well enough to cut the wires out!</span>" );
						return null;
					}
					((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " starts removing the payload and wires from " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start removing the payload and wires from " ).the( this ).item().str( "...</span>" ).ToString() );

					if ( GlobalFuncs.do_after( user, 40 / A.toolspeed, null, this ) ) {
						GlobalFuncs.playsound( this, "sound/items/Wirecutter.ogg", 50, 1, 1 );
						((Mob)user).unEquip( this );
						((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " removes the insides of " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You remove the insides of " ).the( this ).item().str( ".</span>" ).ToString() );
						C = new Obj_Item_Stack_CableCoil( this.loc );
						C.amount = 3;
						new Obj_Item_Weapon_Bombcore_Miniature( this.loc );
						new Obj_Item_Pizzabox( this.loc );
						GlobalFuncs.qdel( this );
					}
					return null;
				} else {
					this.attack_hand( user );
					return null;
				}
			}

			if ( this.wires.IsInteractionTool( A ) ) {
				this.attack_hand( user );
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: pizza_bomb.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.loc == a || this.primed ) {
				this.wires.Interact( a );
			} else {
				base.attack_hand( (object)(a), b, c );
			}
			return null;
		}

		// Function from file: pizza_bomb.dm
		public void arm(  ) {
			this.name = "pizza bomb";
			this.desc = "OH GOD THAT'S NOT A PIZZA";
			this.icon_state = "pizzabox_bomb";
			this.audible_message( new Txt( "<span class='warning'>" ).icon( this ).str( " *beep* *beep*</span>" ).ToString() );
			this.primed = true;
			Task13.Sleep( Convert.ToInt32( this.timer ) );
			this.go_boom(); return;
		}

		// Function from file: pizza_bomb.dm
		public void disarm(  ) {
			this.audible_message( new Txt().icon( this ).str( " " ).The( this ).item().str( " suddenly stops beeping and seems lifeless." ).ToString() );
			this.icon_state = "pizzabox_bomb_" + this.wires.GetColour( GlobalVars.PIZZA_WIRE_DISARM );
			this.name = "pizza bomb";
			this.desc = "A devious contraption, made of a small explosive payload hooked up to pressure-sensitive wires. It's disarmed.";
			this.disarmed = true;
			this.primed = false;
			return;
		}

		// Function from file: pizza_bomb.dm
		public void go_boom(  ) {
			
			if ( this.disarmed ) {
				this.visible_message( new Txt( "<span class='danger'>" ).icon( this ).str( " Sparks briefly jump out of " ).the( this ).item().str( ", but it's disarmed!" ).ToString() );
				return;
			}
			this.audible_message( new Txt().icon( this ).str( " <b>" ).item( this ).str( "</b> beeps, \"Enjoy the pizza!\"" ).ToString() );
			this.visible_message( new Txt( "<span class='userdanger'>" ).The( this ).item().str( " violently explodes!</span>" ).ToString() );
			GlobalFuncs.explosion( this.loc, 1, 2, 4, null, null, null, 2 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: pizza_bomb.dm
		public override void burn(  ) {
			this.go_boom();
			return;
		}

		// Function from file: pizza_bomb.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.disarmed ) {
				user.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " is disarmed.</span>" ).ToString() );
				return null;
			}

			if ( !this.timer_set ) {
				this.name = "pizza bomb";
				this.desc = "It seems inactive.";
				this.icon_state = "pizzabox_bomb";
				this.timer_set = true;
				this.timer = Interface13.Input( user, "Set a timer, from one second to ten seconds.", "Timer", "" + this.timer, null, InputType.Num ) * 10;

				if ( !((Mob)user).canUseTopic( this ) ) {
					this.timer_set = false;
					this.name = "pizza box";
					this.desc = "A box suited for pizzas.";
					this.icon_state = "pizzabox1";
					return null;
				}
				this.timer = Num13.MaxInt( 10, Num13.MinInt( Convert.ToInt32( this.timer ), 100 ) );
				this.icon_state = "pizzabox1";
				user.WriteMsg( new Txt( "<span class='notice'>You set the timer to " ).item( this.timer / 10 ).str( " before activating the payload and closing " ).the( this ).item().str( "." ).ToString() );
				GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( Task13.User ).str( "'>FLW</A>) has set a timer on a pizza bomb to " ).item( this.timer / 10 ).str( " seconds at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.loc.x ).str( ";Y=" ).item( this.loc.y ).str( ";Z=" ).item( this.loc.z ).str( "'>(JMP)</a>." ).ToString() );
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " has set the timer on a pizza bomb to " + this.timer / 10 + " seconds (" + this.loc.x + "," + this.loc.y + "," + this.loc.z + ")." );
				this.armer = Task13.User;
				this.name = "pizza box";
				this.desc = "A box suited for pizzas.";
				return null;
			}

			if ( !this.primed ) {
				user.WriteMsg( "<span class='danger'>That's no pizza! That's a bomb!</span>" );
				GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( Task13.User ).str( "'>FLW</A>) has triggered a pizza bomb armed by " ).item( GlobalFuncs.key_name_admin( this.armer ) ).str( " at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.loc.x ).str( ";Y=" ).item( this.loc.y ).str( ";Z=" ).item( this.loc.z ).str( "'>(JMP)</a>." ).ToString() );
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " has triggered a pizza bomb armed by " + GlobalFuncs.key_name( this.armer ) + " (" + this.loc.x + "," + this.loc.y + "," + this.loc.z + ")." );
				this.arm();
			}
			return null;
		}

		// Function from file: pizza_bomb.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( new Txt( "<span class='suicide'>" ).item( user ).str( " is opening " ).item( this ).str( "! It looks like " ).he_she_it_they().str( "'s hungry and looking for pizza.</span>" ).ToString() );
			Task13.Sleep( 10 );
			this.go_boom();
			return 1;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab : Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dried_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Sosjerky);
			this.bitesize = 3;
			this.list_reagents = new ByTable().Set( "nutriment", 3 );
			this.cooked_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Steak_Plain);
			this.slice_path = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Rawcutlet_Plain);
			this.slices_num = 3;
			this.filling_color = "#FF0000";
			this.icon_state = "meat";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: meat.dm
		public override void initialize_cooked_food( dynamic S = null, bool? cooking_efficiency = null ) {
			base.initialize_cooked_food( (object)(S), cooking_efficiency );
			S.name = "" + this.name + " steak";
			return;
		}

		// Function from file: meat.dm
		public override void initialize_slice( dynamic slice = null, double reagents_per_slice = 0 ) {
			Image I = null;

			base.initialize_slice( (object)(slice), reagents_per_slice );
			I = new Image( this.icon, "rawcutlet_coloration" );
			I.color = this.filling_color;
			slice.overlays += I;
			slice.filling_color = this.filling_color;
			slice.name = "raw " + this.name + " cutlet";
			slice.meat_type = this.name;
			return;
		}

	}

}
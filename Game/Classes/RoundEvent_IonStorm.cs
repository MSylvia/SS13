// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_IonStorm : RoundEvent {

		public int? botEmagChance = 10;
		public int? announceEvent = 0;
		public dynamic ionMessage = null;
		public int? ionAnnounceChance = 33;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 1;
		}

		// Function from file: ion_storm.dm
		public RoundEvent_IonStorm ( int? botEmagChance = null, int? announceEvent = null, dynamic ionMessage = null, int? ionAnnounceChance = null ) {
			botEmagChance = botEmagChance ?? 10;
			announceEvent = announceEvent ?? 0;
			ionAnnounceChance = ionAnnounceChance ?? 33;

			this.botEmagChance = botEmagChance;
			this.announceEvent = announceEvent;
			this.ionMessage = ionMessage;
			this.ionAnnounceChance = ionAnnounceChance;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: ion_storm.dm
		public override bool start(  ) {
			Mob_Living_Silicon_Ai M = null;
			dynamic message = null;
			Mob_Living_SimpleAnimal_Bot bot = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Silicon_Ai) )) {
				M = _a;
				

				if ( M.stat != 2 && M.see_in_dark != 0 ) {
					message = GlobalFuncs.generate_ion_law( this.ionMessage );

					if ( Lang13.Bool( message ) ) {
						M.add_ion_law( message );
						M.WriteMsg( "<br>" );
						M.WriteMsg( "<span class='danger'>" + message + " ...LAWS UPDATED</span>" );
						M.WriteMsg( "<br>" );
					}
				}
			}

			if ( Lang13.Bool( this.botEmagChance ) ) {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_SimpleAnimal_Bot) )) {
					bot = _b;
					

					if ( Rand13.PercentChance( this.botEmagChance ??0 ) ) {
						bot.Emag();
					}
				}
			}
			return false;
		}

		// Function from file: ion_storm.dm
		public override void announce(  ) {
			
			if ( this.announceEvent == 1 || this.announceEvent == 0 && Rand13.PercentChance( this.ionAnnounceChance ??0 ) ) {
				GlobalFuncs.priority_announce( "Ion storm detected near the station. Please check all AI-controlled equipment for errors.", "Anomaly Alert", "sound/AI/ionstorm.ogg" );
			}
			return;
		}

	}

}
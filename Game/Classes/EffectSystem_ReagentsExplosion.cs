// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class EffectSystem_ReagentsExplosion : EffectSystem {

		public dynamic amount = null;
		public dynamic flashing = 0;
		public dynamic flashing_factor = 0;
		public bool? explosion_message = true;

		// Function from file: effects_other.dm
		public override void start(  ) {
			EffectSystem_SparkSpread s = null;
			dynamic M = null;
			double devastation = 0;
			double heavy = 0;
			double light = 0;
			double flash = 0;

			
			if ( this.explosion_message == true ) {
				((Ent_Static)this.location).visible_message( "<span class='danger'>The solution violently explodes!</span>", "<span class='italics'>You hear an explosion!</span>" );
			}

			if ( Convert.ToDouble( this.amount ) <= 2 ) {
				s = new EffectSystem_SparkSpread();
				s.set_up( 2, 1, this.location );
				s.start();

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( this.location, 1 ) )) {
					M = _a;
					

					if ( Rand13.PercentChance( Convert.ToInt32( this.amount * 50 ) ) ) {
						M.WriteMsg( "<span class='danger'>The explosion knocks you down.</span>" );
						((Mob)M).Weaken( Rand13.Int( 1, 5 ) );
					}
				}
				return;
			} else {
				devastation = -1;
				heavy = -1;
				light = -1;
				flash = -1;

				if ( Num13.Floor( Convert.ToDouble( this.amount / 12 ) ) > 0 ) {
					devastation = Num13.MinInt( GlobalVars.MAX_EX_DEVESTATION_RANGE, ((int)( devastation + Num13.Floor( Convert.ToDouble( this.amount / 12 ) ) )) );
				}

				if ( Num13.Floor( Convert.ToDouble( this.amount / 6 ) ) > 0 ) {
					heavy = Num13.MinInt( GlobalVars.MAX_EX_HEAVY_RANGE, ((int)( heavy + Num13.Floor( Convert.ToDouble( this.amount / 6 ) ) )) );
				}

				if ( Num13.Floor( Convert.ToDouble( this.amount / 3 ) ) > 0 ) {
					light = Num13.MinInt( Convert.ToInt32( GlobalVars.MAX_EX_LIGHT_RANGE ), ((int)( light + Num13.Floor( Convert.ToDouble( this.amount / 3 ) ) )) );
				}

				if ( Lang13.Bool( this.flashing ) && Lang13.Bool( this.flashing_factor ) ) {
					flash += Num13.Floor( Convert.ToDouble( this.amount / 4 ) ) * Convert.ToDouble( this.flashing_factor );
				}
				GlobalFuncs.explosion( this.location, devastation, heavy, light, flash );
			}
			return;
		}

		// Function from file: effects_other.dm
		public override void set_up( dynamic amt = null, dynamic loca = null, dynamic flash = null, dynamic flash_fact = null, bool? message = null ) {
			flash = flash ?? 0;
			flash_fact = flash_fact ?? 0;
			message = message ?? true;

			this.amount = amt;
			this.explosion_message = message;

			if ( loca is Tile ) {
				this.location = loca;
			} else {
				this.location = GlobalFuncs.get_turf( loca );
			}
			this.flashing = flash;
			this.flashing_factor = flash_fact;
			return;
		}

	}

}
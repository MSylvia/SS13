// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mutation_Human_Hulk : Mutation_Human {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Hulk";
			this.quality = 1;
			this.get_chance = 15;
			this.lowest_value = 3072;
			this.text_gain_indication = "<span class='notice'>Your muscles hurt!</span>";
			this.species_allowed = new ByTable(new object [] { "human" });
			this.health_req = 25;
		}

		// Function from file: mutations.dm
		public Mutation_Human_Hulk (  ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.visual_indicators.Or( new Image( "icons/effects/genetics.dmi", null, "hulk_f_s", -26 ) );
			this.visual_indicators.Or( new Image( "icons/effects/genetics.dmi", null, "hulk_m_s", -26 ) );
			return;
		}

		// Function from file: mutations.dm
		public override dynamic say_mod( dynamic message = null ) {
			
			if ( Lang13.Bool( message ) ) {
				message = "" + String13.ToUpper( GlobalFuncs.replacetext( message, ".", "!" ) ) + "!!";
			}
			return message;
		}

		// Function from file: mutations.dm
		public override dynamic on_losing( dynamic owner = null ) {
			
			if ( Lang13.Bool( base.on_losing( (object)(owner) ) ) ) {
				return null;
			}
			owner.status_flags |= 15;
			return null;
		}

		// Function from file: mutations.dm
		public override void on_life( dynamic owner = null ) {
			
			if ( Convert.ToDouble( owner.health ) < 0 ) {
				this.on_losing( owner );
				owner.WriteMsg( "<span class='danger'>You suddenly feel very weak.</span>" );
			}
			return;
		}

		// Function from file: mutations.dm
		public override dynamic get_visual_indicator( dynamic owner = null ) {
			int g = 0;

			g = ( owner.gender == GlobalVars.FEMALE ? 1 : 2 );
			return this.visual_indicators[g];
		}

		// Function from file: mutations.dm
		public override bool on_attack_hand( Mob_Living_Carbon_Human owner = null, dynamic target = null ) {
			return ((Ent_Static)target).attack_hulk( owner );
		}

		// Function from file: mutations.dm
		public override dynamic on_acquiring( dynamic owner = null ) {
			int status = 0;

			
			if ( Lang13.Bool( base.on_acquiring( (object)(owner) ) ) ) {
				return null;
			}
			status = 15;
			owner.status_flags &= ~status;
			return null;
		}

	}

}
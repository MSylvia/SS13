// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Electropack : Obj_Item_Device {

		public bool on = true;
		public double code = 2;
		public double? frequency = 1449;
		public bool shock_cooldown = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electropack";
			this.flags = 64;
			this.slot_flags = 1024;
			this.w_class = 5;
			this.materials = new ByTable().Set( "$metal", 10000 ).Set( "$glass", 2500 );
			this.icon = "icons/obj/radio.dmi";
			this.icon_state = "electropack0";
		}

		public Obj_Item_Device_Electropack ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: electropack.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			
			if ( !( user is Mob_Living_Carbon_Human ) ) {
				return null;
			}
			((Mob)user).set_machine( this );
			dat = new Txt( "<TT>Turned " ).item( ( this.on ? "On" : "Off" ) ).str( " -\n<A href='?src=" ).Ref( this ).str( ";power=1'>Toggle</A><BR>\n<B>Frequency/Code</B> for electropack:<BR>\nFrequency:\n<A href='byond://?src=" ).Ref( this ).str( ";freq=-10'>-</A>\n<A href='byond://?src=" ).Ref( this ).str( ";freq=-2'>-</A> " ).item( GlobalFuncs.format_frequency( this.frequency ) ).str( "\n<A href='byond://?src=" ).Ref( this ).str( ";freq=2'>+</A>\n<A href='byond://?src=" ).Ref( this ).str( ";freq=10'>+</A><BR>\n\nCode:\n<A href='byond://?src=" ).Ref( this ).str( ";code=-5'>-</A>\n<A href='byond://?src=" ).Ref( this ).str( ";code=-1'>-</A> " ).item( this.code ).str( "\n<A href='byond://?src=" ).Ref( this ).str( ";code=1'>+</A>\n<A href='byond://?src=" ).Ref( this ).str( ";code=5'>+</A><BR>\n</TT>" ).ToString();
			Interface13.Browse( user, dat, "window=radio" );
			GlobalFuncs.onclose( user, "radio" );
			return null;
		}

		// Function from file: electropack.dm
		public override bool receive_signal( Signal signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			Ent_Static M = null;
			EffectSystem_SparkSpread s = null;

			
			if ( !( signal != null ) || signal.encryption != this.code ) {
				return false;
			}

			if ( this.loc is Mob && this.on ) {
				
				if ( this.shock_cooldown ) {
					return false;
				}
				this.shock_cooldown = true;
				Task13.Schedule( 100, (Task13.Closure)(() => {
					this.shock_cooldown = false;
					return;
				}));
				M = this.loc;
				Map13.Step( (Ent_Dynamic)(M), Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) ) );
				((dynamic)M).WriteMsg( "<span class='danger'>You feel a sharp shock!</span>" );
				s = new EffectSystem_SparkSpread();
				s.set_up( 3, 1, M );
				s.start();
				((dynamic)M).Weaken( 5 );
			}

			if ( Lang13.Bool( this.master ) ) {
				this.master.receive_signal();
			}
			return false;
		}

		// Function from file: electropack.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Mob C = null;
			dynamic M = null;
			dynamic M2 = null;

			C = Task13.User;

			if ( Task13.User.stat != 0 || Task13.User.restrained() || ((dynamic)C).back == this ) {
				return null;
			}

			if ( Task13.User is Mob_Living_Carbon_Human && ( !( GlobalVars.ticker != null ) || GlobalVars.ticker != null && GlobalVars.ticker.mode != "monkey" ) && Task13.User.contents.Find( this ) != 0 || Task13.User.contents.Find( this.master ) != 0 || Map13.GetDistance( this, Task13.User ) <= 1 && this.loc is Tile ) {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["freq"] ) ) {
					GlobalVars.SSradio.remove_object( this, this.frequency );
					this.frequency = GlobalFuncs.sanitize_frequency( ( this.frequency ??0) + ( String13.ParseNumber( href_list["freq"] ) ??0) );
					GlobalVars.SSradio.add_object( this, this.frequency, GlobalVars.RADIO_CHAT );
				} else if ( Lang13.Bool( href_list["code"] ) ) {
					this.code += String13.ParseNumber( href_list["code"] ) ??0;
					this.code = Num13.Floor( this.code );
					this.code = Num13.MinInt( 100, ((int)( this.code )) );
					this.code = Num13.MaxInt( 1, ((int)( this.code )) );
				} else if ( Lang13.Bool( href_list["power"] ) ) {
					this.on = !this.on;
					this.icon_state = "electropack" + this.on;
				}

				if ( !Lang13.Bool( this.master ) ) {
					
					if ( this.loc is Mob ) {
						this.attack_self( this.loc );
					} else {
						
						foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( this, 1 ) )) {
							M = _a;
							

							if ( Lang13.Bool( M.client ) ) {
								this.attack_self( M );
							}
						}
					}
				} else if ( this.master.loc is Mob ) {
					this.attack_self( this.master.loc );
				} else {
					
					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( this.master, 1 ) )) {
						M2 = _b;
						

						if ( Lang13.Bool( M2.client ) ) {
							this.attack_self( M2 );
						}
					}
				}
			} else {
				Interface13.Browse( Task13.User, null, "window=radio" );
				return null;
			}
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Assembly_ShockKit A2 = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Clothing_Head_Helmet ) {
				A2 = new Obj_Item_Assembly_ShockKit( user );
				A2.icon = "icons/obj/assemblies.dmi";

				if ( !((Mob)user).unEquip( A ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).the( A ).item().str( " is stuck to your hand, you cannot attach it to " ).the( this ).item().str( "!</span>" ).ToString() );
					return null;
				}
				A.loc = A2;
				A.master = A2;
				A2.part1 = A;
				((Mob)user).unEquip( this );
				this.loc = A2;
				this.master = A2;
				A2.part2 = this;
				((Mob)user).put_in_hands( A2 );
				A2.add_fingerprint( user );

				if ( Lang13.Bool( this.flags & 2 ) ) {
					A2.flags |= 2;
				}
			}
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic C = null;

			
			if ( a is Mob_Living_Carbon ) {
				C = a;

				if ( this == C.back ) {
					a.WriteMsg( "<span class='warning'>You need help taking this off!</span>" );
					return null;
				}
			}
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic Destroy(  ) {
			
			if ( GlobalVars.SSradio != null ) {
				GlobalVars.SSradio.remove_object( this, this.frequency );
			}
			return base.Destroy();
		}

		// Function from file: electropack.dm
		public override void initialize(  ) {
			
			if ( GlobalVars.SSradio != null ) {
				GlobalVars.SSradio.add_object( this, this.frequency, GlobalVars.RADIO_CHAT );
			}
			return;
		}

		// Function from file: electropack.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( new Txt( "<span class='suicide'>" ).item( user ).str( " hooks " ).himself_herself_itself_themself().str( " to the electropack and spams the trigger! It looks like " ).he_she_it_they().str( "'s trying to commit suicide..</span>" ).ToString() );
			return 2;
		}

	}

}
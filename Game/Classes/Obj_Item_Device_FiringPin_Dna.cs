// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_FiringPin_Dna : Obj_Item_Device_FiringPin {

		public dynamic unique_enzymes = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fail_message = "<span class='warning'>DNA CHECK FAILED.</span>";
			this.icon_state = "firing_pin_dna";
		}

		public Obj_Item_Device_FiringPin_Dna ( dynamic newloc = null ) : base( (object)(newloc) ) {
			
		}

		// Function from file: pins.dm
		public override void auth_fail( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.unique_enzymes ) ) {
				
				if ( user is Mob_Living_Carbon && Lang13.Bool( user.dna ) && Lang13.Bool( user.dna.unique_enzymes ) ) {
					this.unique_enzymes = user.dna.unique_enzymes;
					user.WriteMsg( "<span class='notice'>DNA-LOCK SET.</span>" );
				}
			} else {
				base.auth_fail( (object)(user) );
			}
			return;
		}

		// Function from file: pins.dm
		public override bool pin_auth( dynamic user = null ) {
			
			if ( user is Mob_Living_Carbon && Lang13.Bool( user.dna ) && Lang13.Bool( user.dna.unique_enzymes ) ) {
				
				if ( user.dna.unique_enzymes == this.unique_enzymes ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: pins.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic M = null;

			base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );

			if ( proximity_flag == true && target is Mob_Living_Carbon ) {
				M = target;

				if ( Lang13.Bool( M.dna ) && Lang13.Bool( M.dna.unique_enzymes ) ) {
					this.unique_enzymes = M.dna.unique_enzymes;
					user.WriteMsg( "<span class='notice'>DNA-LOCK SET.</span>" );
				}
			}
			return false;
		}

	}

}
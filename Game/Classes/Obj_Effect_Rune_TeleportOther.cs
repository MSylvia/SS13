// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune_TeleportOther : Obj_Effect_Rune {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#c80000";
			this.cultist_name = "Teleport Other";
			this.cultist_desc = "Warps the target to a random rune of the same keyword.";
			this.invocation = "Sas'so c'arta forbica!";
			this.req_keyword = true;
		}

		// Function from file: runes.dm
		public Obj_Effect_Rune_TeleportOther ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.teleport_other_runes.Add( this );
			return;
		}

		// Function from file: runes.dm
		public override void invoke( dynamic user = null ) {
			ByTable potential_runes = null;
			Obj_Effect_Rune_TeleportOther T = null;
			dynamic selected_rune = null;
			dynamic target = null;
			ByTable targets = null;
			Mob_Living L = null;

			potential_runes = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.teleport_other_runes, typeof(Obj_Effect_Rune_TeleportOther) )) {
				T = _a;
				

				if ( T.keyword == this.keyword && T != this && T.z <= 7 ) {
					potential_runes.Add( T );
				}
			}

			if ( !( potential_runes.len != 0 ) ) {
				user.WriteMsg( "<span class='warning'>There are no runes with the same keyword!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Teleport Other rune failed - no candidates with matching keyword" );
				return;
			}

			if ( Convert.ToDouble( user.z ) > 7 ) {
				user.WriteMsg( "<span class='cultitalic'>You are not in the right dimension!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Teleport rune failed - user in away mission" );
				return;
			}
			selected_rune = Rand13.PickFromTable( potential_runes );
			target = null;
			targets = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.get_turf( this ), typeof(Mob_Living) )) {
				L = _b;
				

				if ( L != user ) {
					targets.Add( L );
				}
			}

			if ( !( targets.len != 0 ) ) {
				user.WriteMsg( "<span class='warning'>There are no targets standing on the rune!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Teleport Other rune failed - no targets on rune" );
				return;
			}

			if ( targets.len > 1 ) {
				target = Interface13.Input( user, "Choose a person to teleport.", "Rite of Forced Translocation", null, targets - user, InputType.Null | InputType.Any );

				if ( !this.Adjacent( user ) || !( this != null ) || GlobalFuncs.qdeleted( this ) || ((Mob)user).incapacitated() ) {
					return;
				}

				if ( !Lang13.Bool( target ) ) {
					this.fail_invoke();
					return;
				}
			} else {
				target = targets[targets.len];
			}

			if ( target.buckled != null ) {
				target.buckled.unbuckle_mob();
			}
			((Ent_Static)target).visible_message( "<span class='warning'>" + target + " vanishes in a flash of red light!</span>", "<span class='cult'>Your vision blurs, and you suddenly appear somewhere else.</span>" );
			((Ent_Dynamic)target).forceMove( GlobalFuncs.get_turf( selected_rune ) );
			return;
		}

		// Function from file: runes.dm
		public override dynamic Destroy(  ) {
			GlobalVars.teleport_other_runes.Remove( this );
			base.Destroy();
			return null;
		}

	}

}
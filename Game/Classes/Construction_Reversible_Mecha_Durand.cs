// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Construction_Reversible_Mecha_Durand : Construction_Reversible_Mecha {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.result = "/obj/mecha/combat/durand";
			this.steps = new ByTable(new object [] { 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "backkey", typeof(Obj_Item_Weapon_Wrench) ).Set( "desc", "External armor is wrenched." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "External armor is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_MechaParts_Part_DurandArmor) ).Set( "backkey", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "desc", "Internal armor is welded." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "backkey", typeof(Obj_Item_Weapon_Wrench) ).Set( "desc", "Internal armor is wrenched." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Internal armor is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Stack_Sheet_Metal) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "Super capacitor is secured." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Super capacitor is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_StockParts_Capacitor) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "Phasic scanner module is secured." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Phasic scanner module is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_StockParts_ScanningModule) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "Weapon control module is secured." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Weapon control module is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Circuitboard_Mecha_Durand_Targeting) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "Peripherals control module is secured." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Peripherals control module is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Circuitboard_Mecha_Durand_Peripherals) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "Central control module is secured." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Crowbar) ).Set( "desc", "Central control module is installed." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Circuitboard_Mecha_Durand_Main) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "The wiring is adjusted." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wirecutters) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "The wiring is added." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Stack_CableCoil) ).Set( "backkey", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "desc", "The hydraulic systems are active." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "backkey", typeof(Obj_Item_Weapon_Wrench) ).Set( "desc", "The hydraulic systems are connected." ), 
				new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "desc", "The hydraulic systems are disconnected." )
			 });
		}

		public Construction_Reversible_Mecha_Durand ( Game_Data atom = null ) : base( atom ) {
			
		}

		// Function from file: mecha_construction_paths.dm
		public override void spawn_result(  ) {
			dynamic M = null;

			M = Lang13.Call( this.result, GlobalFuncs.get_turf( this.holder ) );
			((Ent_Static)M).CheckParts( this.holder );
			GlobalFuncs.qdel( this.holder );
			GlobalFuncs.feedback_inc( "mecha_durand_created", 1 );
			return;
		}

		// Function from file: mecha_construction_paths.dm
		public override bool custom_action( int? index = null, dynamic diff = null, dynamic used_atom = null, dynamic user = null ) {
			Obj_Item_Stack_CableCoil coil = null;
			dynamic I = null;
			dynamic I2 = null;
			dynamic I3 = null;
			dynamic I4 = null;
			Obj_Item_Stack_Sheet_Metal MS = null;

			
			if ( !base.custom_action( index, (object)(diff), (object)(used_atom), (object)(user) ) ) {
				return false;
			}

			switch ((int?)( index )) {
				case 20:
					((Ent_Static)user).visible_message( "" + user + " connects the " + this.holder + " hydraulic systems", "<span class='notice'>You connect the " + this.holder + " hydraulic systems.</span>" );
					((dynamic)this.holder).icon_state = "durand1";
					break;
				case 19:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " activates the " + this.holder + " hydraulic systems.", "<span class='notice'>You activate the " + this.holder + " hydraulic systems.</span>" );
						((dynamic)this.holder).icon_state = "durand2";
					} else {
						((Ent_Static)user).visible_message( "" + user + " disconnects the " + this.holder + " hydraulic systems", "<span class='notice'>You disconnect the " + this.holder + " hydraulic systems.</span>" );
						((dynamic)this.holder).icon_state = "durand0";
					}
					break;
				case 18:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " adds the wiring to the " + this.holder + ".", "<span class='notice'>You add the wiring to the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand3";
					} else {
						((Ent_Static)user).visible_message( "" + user + " deactivates the " + this.holder + " hydraulic systems.", "<span class='notice'>You deactivate the " + this.holder + " hydraulic systems.</span>" );
						((dynamic)this.holder).icon_state = "durand1";
					}
					break;
				case 17:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " adjusts the wiring of the " + this.holder + ".", "<span class='notice'>You adjust the wiring of the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand4";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the wiring from the " + this.holder + ".", "<span class='notice'>You remove the wiring from the " + this.holder + ".</span>" );
						coil = new Obj_Item_Stack_CableCoil( GlobalFuncs.get_turf( this.holder ) );
						coil.amount = 4;
						((dynamic)this.holder).icon_state = "durand2";
					}
					break;
				case 16:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs the central control module into the " + this.holder + ".", "<span class='notice'>You install the central computer mainboard into the " + this.holder + ".</span>" );
						GlobalFuncs.qdel( used_atom );
						((dynamic)this.holder).icon_state = "durand5";
					} else {
						((Ent_Static)user).visible_message( "" + user + " disconnects the wiring of the " + this.holder + ".", "<span class='notice'>You disconnect the wiring of the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand3";
					}
					break;
				case 15:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the mainboard.", "<span class='notice'>You secure the mainboard.</span>" );
						((dynamic)this.holder).icon_state = "durand6";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the central control module from the " + this.holder + ".", "<span class='notice'>You remove the central computer mainboard from the " + this.holder + ".</span>" );
						new Obj_Item_Weapon_Circuitboard_Mecha_Durand_Main( GlobalFuncs.get_turf( this.holder ) );
						((dynamic)this.holder).icon_state = "durand4";
					}
					break;
				case 14:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs the peripherals control module into the " + this.holder + ".", "<span class='notice'>You install the peripherals control module into the " + this.holder + ".</span>" );
						GlobalFuncs.qdel( used_atom );
						((dynamic)this.holder).icon_state = "durand7";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the mainboard.", "<span class='notice'>You unfasten the mainboard.</span>" );
						((dynamic)this.holder).icon_state = "durand5";
					}
					break;
				case 13:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the peripherals control module.", "<span class='notice'>You secure the peripherals control module.</span>" );
						((dynamic)this.holder).icon_state = "durand8";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the peripherals control module from the " + this.holder + ".", "<span class='notice'>You remove the peripherals control module from the " + this.holder + ".</span>" );
						new Obj_Item_Weapon_Circuitboard_Mecha_Durand_Peripherals( GlobalFuncs.get_turf( this.holder ) );
						((dynamic)this.holder).icon_state = "durand6";
					}
					break;
				case 12:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs the weapon control module into the " + this.holder + ".", "<span class='notice'>You install the weapon control module into the " + this.holder + ".</span>" );
						GlobalFuncs.qdel( used_atom );
						((dynamic)this.holder).icon_state = "durand9";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the peripherals control module.", "<span class='notice'>You unfasten the peripherals control module.</span>" );
						((dynamic)this.holder).icon_state = "durand7";
					}
					break;
				case 11:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the weapon control module.", "<span class='notice'>You secure the weapon control module.</span>" );
						((dynamic)this.holder).icon_state = "durand10";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the weapon control module from the " + this.holder + ".", "<span class='notice'>You remove the weapon control module from the " + this.holder + ".</span>" );
						new Obj_Item_Weapon_Circuitboard_Mecha_Durand_Targeting( GlobalFuncs.get_turf( this.holder ) );
						((dynamic)this.holder).icon_state = "durand8";
					}
					break;
				case 10:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs scanner module to the " + this.holder + ".", "<span class='notice'>You install phasic scanner module to the " + this.holder + ".</span>" );
						I = used_atom;
						((Mob)user).unEquip( I );
						I.loc = this.holder;
						((dynamic)this.holder).icon_state = "durand11";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the weapon control module.", "<span class='notice'>You unfasten the weapon control module.</span>" );
						((dynamic)this.holder).icon_state = "durand9";
					}
					break;
				case 9:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the scanner module.", "<span class='notice'>You secure the scanner module.</span>" );
						((dynamic)this.holder).icon_state = "durand12";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the scanner module from the " + this.holder + ".", "<span class='notice'>You remove the scanner module from the " + this.holder + ".</span>" );
						I2 = Lang13.FindIn( typeof(Obj_Item_Weapon_StockParts_ScanningModule), this.holder );
						I2.loc = GlobalFuncs.get_turf( this.holder );
						((dynamic)this.holder).icon_state = "durand10";
					}
					break;
				case 8:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs capacitor to the " + this.holder + ".", "<span class='notice'>You install capacitor to the " + this.holder + ".</span>" );
						I3 = used_atom;
						((Mob)user).unEquip( I3 );
						I3.loc = this.holder;
						((dynamic)this.holder).icon_state = "durand13";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the scanner module.", "<span class='notice'>You unfasten the scanner module.</span>" );
						((dynamic)this.holder).icon_state = "durand11";
					}
					break;
				case 7:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the capacitor.", "<span class='notice'>You secure the capacitor.</span>" );
						((dynamic)this.holder).icon_state = "durand14";
					} else {
						((Ent_Static)user).visible_message( "" + user + " removes the super capacitor from the " + this.holder + ".", "<span class='notice'>You remove the capacitor from the " + this.holder + ".</span>" );
						I4 = Lang13.FindIn( typeof(Obj_Item_Weapon_StockParts_Capacitor), this.holder );
						I4.loc = GlobalFuncs.get_turf( this.holder );
						((dynamic)this.holder).icon_state = "durand12";
					}
					break;
				case 6:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs the internal armor layer to the " + this.holder + ".", "<span class='notice'>You install the internal armor layer to the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand15";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the super capacitor.", "<span class='notice'>You unfasten the capacitor.</span>" );
						((dynamic)this.holder).icon_state = "durand13";
					}
					break;
				case 5:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures the internal armor layer.", "<span class='notice'>You secure the internal armor layer.</span>" );
						((dynamic)this.holder).icon_state = "durand16";
					} else {
						((Ent_Static)user).visible_message( "" + user + " pries internal armor layer from the " + this.holder + ".", "<span class='notice'>You pry internal armor layer from the " + this.holder + ".</span>" );
						MS = new Obj_Item_Stack_Sheet_Metal( GlobalFuncs.get_turf( this.holder ) );
						MS.amount = 5;
						((dynamic)this.holder).icon_state = "durand14";
					}
					break;
				case 4:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " welds the internal armor layer to the " + this.holder + ".", "<span class='notice'>You weld the internal armor layer to the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand17";
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens the internal armor layer.", "<span class='notice'>You unfasten the internal armor layer.</span>" );
						((dynamic)this.holder).icon_state = "durand15";
					}
					break;
				case 3:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " installs Durand Armor Plates to the " + this.holder + ".", "<span class='notice'>You install Durand Armor Plates to the " + this.holder + ".</span>" );
						GlobalFuncs.qdel( used_atom );
						((dynamic)this.holder).icon_state = "durand18";
					} else {
						((Ent_Static)user).visible_message( "" + user + " cuts the internal armor layer from the " + this.holder + ".", "<span class='notice'>You cut the internal armor layer from the " + this.holder + ".</span>" );
						((dynamic)this.holder).icon_state = "durand16";
					}
					break;
				case 2:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " secures Durand Armor Plates.", "<span class='notice'>You secure Durand Armor Plates.</span>" );
						((dynamic)this.holder).icon_state = "durand19";
					} else {
						((Ent_Static)user).visible_message( "" + user + " pries Durand Armor Plates from the " + this.holder + ".", "<span class='notice'>You pry Durand Armor Plates from the " + this.holder + ".</span>" );
						new Obj_Item_MechaParts_Part_DurandArmor( GlobalFuncs.get_turf( this.holder ) );
						((dynamic)this.holder).icon_state = "durand17";
					}
					break;
				case 1:
					
					if ( diff == -1 ) {
						((Ent_Static)user).visible_message( "" + user + " welds Durand Armor Plates to the " + this.holder + ".", "<span class='notice'>You weld Durand Armor Plates to the " + this.holder + ".</span>" );
					} else {
						((Ent_Static)user).visible_message( "" + user + " unfastens Durand Armor Plates.", "<span class='notice'>You unfasten Durand Armor Plates.</span>" );
						((dynamic)this.holder).icon_state = "durand18";
					}
					break;
			}
			return true;
		}

		// Function from file: mecha_construction_paths.dm
		public override bool action( dynamic used_atom = null, dynamic user = null ) {
			return this.check_step( used_atom, user );
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Targeted_TurfTeleport : Obj_Effect_ProcHolder_Spell_Targeted {

		public bool inner_tele_radius = true;
		public int outer_tele_radius = 2;
		public bool include_space = false;
		public bool include_dense = false;
		public string sound1 = "sound/weapons/ZapBang.ogg";
		public string sound2 = "sound/weapons/ZapBang.ogg";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.nonabstract_req = true;
		}

		public Obj_Effect_ProcHolder_Spell_Targeted_TurfTeleport ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: turf_teleport.dm
		public override bool cast( dynamic targets = null, dynamic thearea = null, dynamic user = null ) {
			thearea = thearea ?? Task13.User;

			Mob_Living target = null;
			ByTable turfs = null;
			dynamic T = null;
			ByTable turfs_to_pick_from = null;
			dynamic T2 = null;
			dynamic picked = null;

			GlobalFuncs.playsound( GlobalFuncs.get_turf( thearea ), this.sound1, 50, 1 );

			foreach (dynamic _c in Lang13.Enumerate( targets, typeof(Mob_Living) )) {
				target = _c;
				
				turfs = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.outer_tele_radius, target ) )) {
					T = _a;
					

					if ( Map13.FetchInRange( this.inner_tele_radius, target ).Contains( T ) ) {
						continue;
					}

					if ( T is Tile_Space && !this.include_space ) {
						continue;
					}

					if ( T.density && !this.include_dense ) {
						continue;
					}

					if ( Convert.ToDouble( T.x ) > Game13.map_size_x - this.outer_tele_radius || Convert.ToDouble( T.x ) < this.outer_tele_radius ) {
						continue;
					}

					if ( Convert.ToDouble( T.y ) > Game13.map_size_y - this.outer_tele_radius || Convert.ToDouble( T.y ) < this.outer_tele_radius ) {
						continue;
					}
					turfs.Add( T );
				}

				if ( !( turfs.len != 0 ) ) {
					turfs_to_pick_from = new ByTable();

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this.outer_tele_radius, target ) )) {
						T2 = _b;
						

						if ( !Map13.FetchInRangeExcludeThis( this.inner_tele_radius, target ).Contains( T2 ) ) {
							turfs_to_pick_from.Add( T2 );
						}
					}
					turfs.Add( Rand13.PickFromTable( turfs_to_pick_from.Contains( typeof(Tile) ) ) );
				}
				picked = Rand13.PickFromTable( turfs );

				if ( !Lang13.Bool( picked ) || !( picked is Tile ) ) {
					return false;
				}

				if ( !target.Move( picked ) ) {
					
					if ( target.buckled != null ) {
						target.buckled.unbuckle_mob();
					}

					if ( Lang13.Bool( target.buckled_mob ) ) {
						target.unbuckle_mob( true );
					}
					target.loc = picked;
					GlobalFuncs.playsound( GlobalFuncs.get_turf( thearea ), this.sound2, 50, 1 );
				}
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mutation_Human_Unintelligable : Mutation_Human {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Unintelligable";
			this.quality = 2;
			this.text_gain_indication = "<span class='danger'>You can't seem to form any coherent thoughts!</span>";
			this.text_lose_indication = "<span class='danger'>Your mind feels more clear.</span>";
		}

		// Function from file: mutations.dm
		public override dynamic say_mod( dynamic message = null ) {
			string prefix = null;
			ByTable words = null;
			ByTable rearranged = null;
			int? i = null;
			dynamic cword = null;
			string suffix = null;

			
			if ( Lang13.Bool( message ) ) {
				prefix = String13.SubStr( message, 1, 2 );

				if ( prefix == ";" ) {
					message = String13.SubStr( message, 2, 0 );
				} else if ( new ByTable(new object [] { ":", "#" }).Contains( prefix ) ) {
					prefix += String13.SubStr( message, 2, 3 );
					message = String13.SubStr( message, 3, 0 );
				} else {
					prefix = "";
				}
				words = GlobalFuncs.text2list( message, " " );
				rearranged = new ByTable();
				i = null;
				i = 1;

				while (( i ??0) <= words.len) {
					cword = Rand13.PickFromTable( words );
					words.Remove( cword );
					suffix = String13.SubStr( cword, Lang13.Length( cword ) - 1, Lang13.Length( cword ) );

					while (new ByTable(new object [] { ".", ",", ";", "!", ":", "?" }).Contains( Lang13.Length( cword ) > 0 && Lang13.Bool( suffix ) )) {
						cword = String13.SubStr( cword, 1, Lang13.Length( cword ) - 1 );
						suffix = String13.SubStr( cword, Lang13.Length( cword ) - 1, Lang13.Length( cword ) );
					}

					if ( Lang13.Length( cword ) != 0 ) {
						rearranged.Add( cword );
					}
					i++;
				}
				message = "" + prefix + String13.ToUpper( GlobalFuncs.list2text( rearranged, " " ) ) + "!!";
			}
			return message;
		}

	}

}
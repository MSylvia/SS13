// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_SupermatterShard : Obj_Machinery_Power {

		public double gasefficency = 0.125;
		public string base_icon_state = "darkmatter_shard";
		public double damage = 0;
		public double damage_archived = 0;
		public string safe_alert = "Crystalline hyperstructure returning to safe operating levels.";
		public double warning_point = 50;
		public string warning_alert = "Danger! Crystal hyperstructure instability!";
		public double emergency_point = 500;
		public string emergency_alert = "CRYSTAL DELAMINATION IMMINENT.";
		public double explosion_point = 900;
		public bool emergency_issued = false;
		public int explosion_power = 8;
		public int lastwarning = 0;
		public double power = 0;
		public double oxygen = 0;
		public int config_bullet_energy = 2;
		public double config_hallucination_power = 0.1;
		public Obj_Item_Device_Radio radio = null;
		public bool has_been_powered = false;
		public bool has_reached_emergency = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 4;
			this.icon = "icons/obj/supermatter.dmi";
			this.icon_state = "darkmatter_shard";
		}

		// Function from file: supermatter.dm
		public Obj_Machinery_Power_SupermatterShard ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.radio = new Obj_Item_Device_Radio( this );
			this.radio.listening = 0;
			this.investigate_log( "has been created.", "supermatter" );
			return;
		}

		// Function from file: supermatter.dm
		public override bool Bumped( dynamic AM = null ) {
			
			if ( AM is Mob_Living ) {
				((Ent_Static)AM).visible_message( new Txt( "<span class='danger'>" ).The( AM ).item().str( " slams into " ).the( this ).item().str( " inducing a resonance... " ).his_her_its_their().str( " body starts to glow and catch flame before flashing into ash.</span>" ).ToString(), new Txt( "<span class='userdanger'>You slam into " ).the( this ).item().str( " as your ears are filled with unearthly ringing. Your last thought is \"Oh, fuck.\"</span>" ).ToString(), "<span class='italics'>You hear an unearthly noise as a wave of heat washes over you.</span>" );
			} else if ( AM is Obj && !( AM is Obj_Effect ) ) {
				((Ent_Static)AM).visible_message( new Txt( "<span class='danger'>" ).The( AM ).item().str( " smacks into " ).the( this ).item().str( " and rapidly flashes to ash.</span>" ).ToString(), "<span class='italics'>You hear a loud crack as you are washed with a wave of heat.</span>" );
			} else {
				return false;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
			this.Consume( AM );
			return false;
		}

		// Function from file: supermatter.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( !( A is Obj_Item ) || Lang13.Bool( A.flags & 128 ) || !( user is Mob_Living ) ) {
				return null;
			}

			if ( Lang13.Bool( user.drop_item( A ) ) ) {
				this.Consume( A );
				((Ent_Static)user).visible_message( new Txt( "<span class='danger'>As " ).item( user ).str( " touches " ).the( this ).item().str( " with " ).a( A ).item().str( ", silence fills the room...</span>" ).ToString(), new Txt( "<span class='userdanger'>You touch " ).the( this ).item().str( " with " ).the( A ).item().str( ", and everything suddenly goes silent.\"</span>\n<span class='notice'>" ).The( A ).item().str( " flashes into dust as you flinch away from " ).the( this ).item().str( ".</span>" ).ToString(), "<span class='italics'>Everything suddenly goes silent.</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
				GlobalFuncs.radiation_pulse( GlobalFuncs.get_turf( this ), 1, 1, 150, true );
			}
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !( a is Mob_Living ) ) {
				return null;
			}
			((Ent_Static)a).visible_message( new Txt( "<span class='danger'>" ).The( a ).item().str( " reaches out and touches " ).the( this ).item().str( ", inducing a resonance... " ).his_her_its_their().str( " body starts to glow and bursts into flames before flashing into ash.</span>" ).ToString(), new Txt( "<span class='userdanger'>You reach out and touch " ).the( this ).item().str( ". Everything starts burning and all you can hear is ringing. Your last thought is \"That was not a wise decision.\"</span>" ).ToString(), "<span class='italics'>You hear an unearthly noise as a wave of heat washes over you.</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
			this.Consume( a );
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_ai( dynamic user = null ) {
			user.WriteMsg( "<span class='warning'>You attempt to interface with the control circuits but find they are not connected to your network. Maybe in a future firmware update.</span>" );
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_robot( Mob_Living_Silicon_Robot user = null ) {
			
			if ( this.Adjacent( user ) ) {
				return this.attack_hand( user );
			} else {
				user.WriteMsg( "<span class='warning'>You attempt to interface with the control circuits but find they are not connected to your network. Maybe in a future firmware update.</span>" );
			}
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: supermatter.dm
		public override double singularity_act( int? current_size = null, Obj_Singularity S = null ) {
			int gain = 0;
			dynamic M = null;

			gain = 100;
			this.investigate_log( "Supermatter shard consumed by singularity.", "singulo" );
			GlobalFuncs.message_admins( "Singularity has consumed a supermatter shard and can now become stage six." );
			this.visible_message( "<span class='userdanger'>" + this + " is consumed by the singularity!</span>" );

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				
				M.WriteMsg( "sound/effects/supermatter.ogg" );
				M.WriteMsg( "<span class='boldannounce'>A horrible screeching fills your ears, and a wave of dread washes over you...</span>" );
			}
			GlobalFuncs.qdel( this );
			return gain;
		}

		// Function from file: supermatter.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			Ent_Static L = null;

			L = this.loc;

			if ( !( L is Tile ) ) {
				return 0;
			}

			if ( P.flag != "bullet" ) {
				this.power += Convert.ToDouble( P.damage * this.config_bullet_energy );

				if ( !this.has_been_powered ) {
					this.investigate_log( "has been powered for the first time.", "supermatter" );
					GlobalFuncs.message_admins( "" + this + " has been powered for the first time <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>(JMP)</a>." );
					this.has_been_powered = true;
				}
			} else {
				this.damage += Convert.ToDouble( P.damage * this.config_bullet_energy );
			}
			return 0;
		}

		// Function from file: supermatter.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static L = null;
			string stability = null;
			Mob_Living mob = null;
			Mob_Living H = null;
			double rads = 0;
			GasMixture env = null;
			GasMixture removed = null;
			int temp_factor = 0;
			double device_energy = 0;
			Mob_Living_Carbon_Human l = null;
			Mob_Living l2 = null;
			double rads2 = 0;

			L = this.loc;

			if ( L == null ) {
				return 26;
			}

			if ( !( L is Tile ) ) {
				return null;
			}

			if ( L is Tile_Space ) {
				return null;
			}

			if ( this.damage > this.warning_point ) {
				
				if ( ( Game13.timeofday - this.lastwarning ) / 10 >= 30 ) {
					stability = String13.NumberToString( Num13.Floor( this.damage / this.explosion_point * 100 ) );

					if ( this.damage > this.emergency_point ) {
						this.radio.talk_into( this, "" + this.emergency_alert + " Instability: " + stability + "%" );
						this.lastwarning = Game13.timeofday;

						if ( !this.has_reached_emergency ) {
							this.investigate_log( "has reached the emergency point for the first time.", "supermatter" );
							GlobalFuncs.message_admins( "" + this + " has reached the emergency point <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>(JMP)</a>." );
							this.has_reached_emergency = true;
						}
					} else if ( this.damage >= this.damage_archived ) {
						this.radio.talk_into( this, "" + this.warning_alert + " Instability: " + stability + "%" );
						this.lastwarning = Game13.timeofday - 150;
					} else {
						this.radio.talk_into( this, "" + this.safe_alert );
						this.lastwarning = Game13.timeofday;
					}
				}

				if ( this.damage > this.explosion_point ) {
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living) )) {
						mob = _a;
						

						if ( mob is Mob_Living_Carbon_Human ) {
							H = mob;
							H.hallucination += Num13.MaxInt( 50, Num13.MinInt( 300, ((int)( Math.Sqrt( 1 / ( Map13.GetDistance( mob, this ) + 1 ) ) * 600 )) ) );
						}
						rads = Math.Sqrt( 1 / ( Map13.GetDistance( mob, this ) + 1 ) ) * 200;
						mob.rad_act( rads );
					}
					this.explode();
				}
			}
			env = L.return_air();
			removed = env.remove( this.gasefficency * env.total_moles() );

			if ( !( removed != null ) || !( removed.total_moles() != 0 ) ) {
				this.damage += Num13.MaxInt( ((int)( ( this.power - 1600 ) / 10 )), 0 );
				this.power = Num13.MinInt( ((int)( this.power )), 1600 );
				return 1;
			}
			this.damage_archived = this.damage;
			this.damage = Num13.MaxInt( ((int)( this.damage + Convert.ToDouble( ( removed.temperature - 800 ) / 150 ) )), 0 );
			this.oxygen = Num13.MaxInt( Num13.MinInt( ((int)( ( ( removed.oxygen ??0) - removed.nitrogen * 2 ) / 103.98379516601562 )), 1 ), 0 );
			temp_factor = 50;

			if ( this.oxygen > 0.8 ) {
				this.icon_state = "" + this.base_icon_state + "_glow";
			} else {
				temp_factor = 30;
				this.icon_state = this.base_icon_state;
			}
			this.power = Num13.MaxInt( Convert.ToInt32( removed.temperature * temp_factor / 273.41 * this.oxygen + this.power ), 0 );
			this.transfer_energy();
			device_energy = this.power * 0.55;
			removed.temperature += device_energy / 5;
			removed.temperature = Num13.MaxInt( 0, Num13.MinInt( Convert.ToInt32( removed.temperature ), 2500 ) );
			removed.toxins += Num13.MaxInt( ((int)( device_energy / 750 )), 0 );
			removed.oxygen += Num13.MaxInt( ((int)( ( device_energy + Convert.ToDouble( removed.temperature ) - 273.41 ) / 325 )), 0 );
			env.merge( removed );

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInView( Num13.MinInt( 7, Num13.Floor( Math.Pow( this.power, 0.25 ) ) ), this ), typeof(Mob_Living_Carbon_Human) )) {
				l = _b;
				

				if ( !( l.glasses is Obj_Item_Clothing_Glasses_Meson ) ) {
					l.hallucination = Num13.MaxInt( 0, Num13.MinInt( 200, ((int)( l.hallucination + this.power * this.config_hallucination_power * Math.Sqrt( 1 / Num13.MaxInt( 1, Map13.GetDistance( l, this ) ) ) )) ) );
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRange( Num13.Floor( Math.Pow( this.power / 100, 0.25 ) ), this ), typeof(Mob_Living) )) {
				l2 = _c;
				
				rads2 = this.power / 10 * Math.Sqrt( 1 / Num13.MaxInt( Map13.GetDistance( l2, this ), 1 ) );
				l2.rad_act( rads2 );
			}
			this.power -= Math.Pow( this.power / 500, 3 );
			return 1;
		}

		// Function from file: supermatter.dm
		public void Consume( dynamic AM = null ) {
			dynamic user = null;
			Mob_Living L = null;

			
			if ( AM is Mob_Living ) {
				user = AM;
				GlobalFuncs.message_admins( new Txt().item( this ).str( " has consumed " ).item( GlobalFuncs.key_name_admin( user ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.x ).str( ";Y=" ).item( this.y ).str( ";Z=" ).item( this.z ).str( "'>(JMP)</a>." ).ToString() );
				this.investigate_log( "has consumed " + GlobalFuncs.key_name( user ) + ".", "supermatter" );
				((Mob)user).dust();
				this.power += 200;
			} else if ( AM is Obj && !( AM is Obj_Effect ) ) {
				this.investigate_log( "has consumed " + AM + ".", "supermatter" );
				GlobalFuncs.qdel( AM );
			}
			this.power += 200;
			GlobalFuncs.radiation_pulse( GlobalFuncs.get_turf( this ), 4, 10, 500, true );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( null, 10 ), typeof(Mob_Living) )) {
				L = _a;
				
				this.investigate_log( "has irradiated " + L + " after consuming " + AM + ".", "supermatter" );

				if ( Map13.FetchInView( null, null ).Contains( L ) ) {
					L.show_message( new Txt( "<span class='danger'>As " ).the( this ).item().str( " slowly stops resonating, you find your skin covered in new radiation burns.</span>" ).ToString(), 1, "<span class='danger'>The unearthly ringing subsides and you notice you have new radiation burns.</span>", 2 );
				} else {
					L.show_message( "<span class='italics'>You hear an uneartly ringing and notice your skin is covered in fresh radiation burns.</span>", 2 );
				}
			}
			return;
		}

		// Function from file: supermatter.dm
		public void transfer_energy(  ) {
			Obj_Machinery_Power_RadCollector R = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.rad_collectors, typeof(Obj_Machinery_Power_RadCollector) )) {
				R = _a;
				

				if ( Map13.GetDistance( R, this ) <= 15 ) {
					R.receive_pulse( this.power / 10 );
				}
			}
			return;
		}

		// Function from file: supermatter.dm
		public void explode(  ) {
			this.investigate_log( "has exploded.", "supermatter" );
			GlobalFuncs.explosion( GlobalFuncs.get_turf( this ), this.explosion_power, this.explosion_power * 2, this.explosion_power * 3, this.explosion_power * 4, 1 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: supermatter.dm
		public override dynamic Destroy(  ) {
			dynamic _default = null;

			this.investigate_log( "has been destroyed.", "supermatter" );
			GlobalFuncs.qdel( this.radio );
			_default = base.Destroy();
			return _default;
		}

	}

}
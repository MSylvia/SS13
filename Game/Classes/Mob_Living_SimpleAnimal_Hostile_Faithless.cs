// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Faithless : Mob_Living_SimpleAnimal_Hostile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "faithless";
			this.icon_dead = "faithless_dead";
			this.turns_per_move = 5;
			this.response_help = "passes through";
			this.emote_taunt = new ByTable(new object [] { "wails" });
			this.taunt_chance = 25;
			this.speed = 0;
			this.maxHealth = 80;
			this.health = 80;
			this.stat_attack = 1;
			this.robust_searching = true;
			this.harm_intent_damage = 10;
			this.melee_damage_lower = 15;
			this.melee_damage_upper = 15;
			this.attacktext = "grips";
			this.attack_sound = "sound/hallucinations/growl1.ogg";
			this.speak_emote = new ByTable(new object [] { "growls" });
			this.atmos_requirements = new ByTable().Set( "min_oxy", 0 ).Set( "max_oxy", 0 ).Set( "min_tox", 0 ).Set( "max_tox", 0 ).Set( "min_co2", 0 ).Set( "max_co2", 0 ).Set( "min_n2", 0 ).Set( "max_n2", 0 );
			this.minbodytemp = 0;
			this.faction = new ByTable(new object [] { "faithless" });
			this.gold_core_spawnable = 1;
			this.icon_state = "faithless";
		}

		public Mob_Living_SimpleAnimal_Hostile_Faithless ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: faithless.dm
		public override dynamic AttackingTarget(  ) {
			dynamic C = null;

			base.AttackingTarget();

			if ( this.target is Mob_Living_Carbon ) {
				C = this.target;

				if ( Rand13.PercentChance( 12 ) ) {
					((Mob)C).Weaken( 3 );
					((Ent_Static)C).visible_message( new Txt( "<span class='danger'>" ).The( this ).item().str( " knocks down " ).the( C ).item().str( "!</span>" ).ToString(), new Txt( "<span class='userdanger'>" ).The( this ).item().str( " knocks you down!</span>" ).ToString() );
				}
			}
			return null;
		}

		// Function from file: faithless.dm
		public override int Process_Spacemove( dynamic movement_dir = null ) {
			movement_dir = movement_dir ?? 0;

			return 1;
		}

	}

}
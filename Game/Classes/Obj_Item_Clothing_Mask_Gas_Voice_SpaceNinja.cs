// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Mask_Gas_Voice_SpaceNinja : Obj_Item_Clothing_Mask_Gas_Voice {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "s-ninja_mask";
			this.vchange = true;
			this.strip_delay = 120;
			this.icon_state = "s-ninja";
		}

		// Function from file: mask.dm
		public Obj_Item_Clothing_Mask_Gas_Voice_SpaceNinja ( dynamic loc = null ) : base( (object)(loc) ) {
			this.verbs.Add( typeof(Obj_Item_Clothing_Mask_Gas_Voice_SpaceNinja).GetMethod( "togglev" ) );
			return;
		}

		// Function from file: mask.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "Voice mimicking algorithm is set <B>" + ( !this.vchange ? "inactive" : "active" ) + "</B>." );
			return 0;
		}

		// Function from file: mask.dm
		[VerbInfo( name: "Toggle Voice", desc: "Toggles the voice synthesizer on or off.", group: "Ninja Equip" )]
		public void togglev(  ) {
			Ent_Static U = null;
			string vchange = null;
			int chance = 0;
			ByTable names = null;
			Mob_Living_Carbon_Human M = null;

			U = this.loc;
			vchange = Interface13.Alert( "Would you like to synthesize a new name or turn off the voice synthesizer?", null, "New Name", "Turn Off" );

			if ( vchange == "New Name" ) {
				chance = Rand13.Int( 1, 100 );

				dynamic _b = chance; // Was a switch-case, sorry for the mess.
				if ( 1<=_b&&_b<=50 ) {
					this.voice = "" + ( Rand13.Int( 0, 1 ) == 1 ? Rand13.PickFromTable( GlobalVars.first_names_female ) : Rand13.PickFromTable( GlobalVars.first_names_male ) ) + " " + Rand13.PickFromTable( GlobalVars.last_names );
				} else if ( 51<=_b&&_b<=70 ) {
					this.voice = "" + Rand13.Pick(new object [] { GlobalFuncs.lizard_name( GlobalVars.MALE ), GlobalFuncs.lizard_name( GlobalVars.FEMALE ) });
				} else if ( 71<=_b&&_b<=80 ) {
					this.voice = "" + Rand13.PickFromTable( GlobalVars.clown_names );
				} else if ( 81<=_b&&_b<=90 ) {
					this.voice = "" + Rand13.PickFromTable( GlobalVars.wizard_first ) + " " + Rand13.PickFromTable( GlobalVars.wizard_second );
				} else if ( 91<=_b&&_b<=100 ) {
					names = new ByTable();

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Human) )) {
						M = _a;
						

						if ( M == U || !( M.client != null ) || !Lang13.Bool( M.real_name ) ) {
							continue;
						}
						names.Add( M.real_name );
					}
					this.voice = ( !( names.len != 0 ) ? ((dynamic)( "Cuban Pete" )) : Rand13.PickFromTable( names ) );
				}
				((dynamic)U).WriteMsg( "You are now mimicking <B>" + this.voice + "</B>." );
			} else {
				((dynamic)U).WriteMsg( "The voice synthesizer is " + ( this.voice != "Unknown" ? "now" : "already" ) + " deactivated." );
				this.voice = "Unknown";
			}
			return;
		}

		// Function from file: mask.dm
		public bool assess_targets( dynamic target_list = null, dynamic U = null ) {
			string tempHud = null;
			Mob_Living target = null;
			Mob_Living silicon_target = null;

			tempHud = "icons/mob/hud.dmi";

			foreach (dynamic _b in Lang13.Enumerate( target_list, typeof(Mob_Living) )) {
				target = _b;
				

				if ( target is Mob_Living_Carbon ) {
					
					switch ((string)( target.mind.special_role )) {
						case "traitor":
							U.client.images.Add( new Image( tempHud, target, "hudtraitor" ) );
							break;
						case "Revolutionary":
						case "Head Revolutionary":
							U.client.images.Add( new Image( tempHud, target, "hudrevolutionary" ) );
							break;
						case "Cultist":
							U.client.images.Add( new Image( tempHud, target, "hudcultist" ) );
							break;
						case "Changeling":
							U.client.images.Add( new Image( tempHud, target, "hudchangeling" ) );
							break;
						case "Wizard":
						case "Fake Wizard":
							U.client.images.Add( new Image( tempHud, target, "hudwizard" ) );
							break;
						case "Hunter":
						case "Sentinel":
						case "Drone":
						case "Queen":
							U.client.images.Add( new Image( tempHud, target, "hudalien" ) );
							break;
						case "Syndicate":
							U.client.images.Add( new Image( tempHud, target, "hudoperative" ) );
							break;
						case "Death Commando":
							U.client.images.Add( new Image( tempHud, target, "huddeathsquad" ) );
							break;
						case "Space Ninja":
							U.client.images.Add( new Image( tempHud, target, "hudninja" ) );
							break;
						default:
							U.client.images.Add( new Image( tempHud, target, "hudunknown1" ) );
							break;
					}
				} else if ( target is Mob_Living_Silicon ) {
					silicon_target = target;

					if ( !Lang13.Bool( ((dynamic)silicon_target).laws ) || Lang13.Bool( ((dynamic)silicon_target).laws ) && ( Lang13.Bool( ((dynamic)silicon_target).laws.zeroth ) || !( ((dynamic)silicon_target).laws.inherent.len != 0 ) ) ) {
						
						if ( silicon_target is Mob_Living_Silicon_Robot ) {
							U.client.images.Add( new Image( tempHud, silicon_target, "hudmalborg" ) );
						} else {
							U.client.images.Add( new Image( tempHud, silicon_target, "hudmalai" ) );
						}
					}
				}
			}
			return true;
		}

		// Function from file: mask.dm
		public override dynamic speechModification( dynamic message = null ) {
			ByTable temp_message = null;
			ByTable pick_list = null;
			int? i = null;
			double? i2 = null;
			dynamic H = null;

			
			if ( this.voice == "Unknown" ) {
				
				if ( String13.SubStr( message, 1, 2 ) != "*" ) {
					temp_message = GlobalFuncs.text2list( message, " " );
					pick_list = new ByTable();
					i = null;
					i = 1;

					while (( i ??0) <= temp_message.len) {
						pick_list.Add( i );
						i++;
					}
					i2 = null;
					i2 = 1;

					while (( i2 ??0) <= Math.Abs( temp_message.len / 3 )) {
						H = Rand13.PickFromTable( pick_list );

						if ( String13.FindIgnoreCase( temp_message[H], "*", 1, 0 ) != 0 || String13.FindIgnoreCase( temp_message[H], ";", 1, 0 ) != 0 || String13.FindIgnoreCase( temp_message[H], ":", 1, 0 ) != 0 ) {
							
						} else {
							temp_message[H] = GlobalFuncs.ninjaspeak( temp_message[H] );
							pick_list.Remove( H );
						}
						i2++;
					}
					message = GlobalFuncs.list2text( temp_message, " " );
					message = GlobalFuncs.replacetext( message, "l", "r" );
					message = GlobalFuncs.replacetext( message, "rr", "ru" );
					message = GlobalFuncs.replacetext( message, "v", "b" );
					message = GlobalFuncs.replacetext( message, "f", "hu" );
					message = GlobalFuncs.replacetext( message, "'t", "" );
					message = GlobalFuncs.replacetext( message, "t ", "to " );
					message = GlobalFuncs.replacetext( message, " I ", " ai " );
					message = GlobalFuncs.replacetext( message, "th", "z" );
					message = GlobalFuncs.replacetext( message, "is", "izu" );
					message = GlobalFuncs.replacetext( message, "ziz", "zis" );
					message = GlobalFuncs.replacetext( message, "se", "su" );
					message = GlobalFuncs.replacetext( message, "br", "bur" );
					message = GlobalFuncs.replacetext( message, "ry", "ri" );
					message = GlobalFuncs.replacetext( message, "you", "yuu" );
					message = GlobalFuncs.replacetext( message, "ck", "cku" );
					message = GlobalFuncs.replacetext( message, "eu", "uu" );
					message = GlobalFuncs.replacetext( message, "ow", "au" );
					message = GlobalFuncs.replacetext( message, "are", "aa" );
					message = GlobalFuncs.replacetext( message, "ay", "ayu" );
					message = GlobalFuncs.replacetext( message, "ea", "ii" );
					message = GlobalFuncs.replacetext( message, "ch", "chi" );
					message = GlobalFuncs.replacetext( message, "than", "sen" );
					message = GlobalFuncs.replacetext( message, ".", "" );
					message = String13.ToLower( message );
				}
			}
			return message;
		}

	}

}
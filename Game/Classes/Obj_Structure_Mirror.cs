// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Mirror : Obj_Structure {

		public bool shattered = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/watercloset.dmi";
			this.icon_state = "mirror";
		}

		public Obj_Structure_Mirror ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mirror.dm
		public override bool attack_slime( Mob_Living_SimpleAnimal_Slime user = null ) {
			user.do_attack_animation( this );

			if ( this.shattered ) {
				GlobalFuncs.playsound( this.loc, "sound/effects/hit_on_shattered_glass.ogg", 70, 1 );
				return false;
			}
			user.visible_message( "<span class='danger'>" + user + " smashes " + this + "!</span>" );
			this.shatter();
			return false;
		}

		// Function from file: mirror.dm
		public override bool attack_animal( Mob_Living user = null ) {
			Mob_Living M = null;

			
			if ( !( user is Mob_Living_SimpleAnimal ) ) {
				return false;
			}
			M = user;

			if ( Convert.ToDouble( ((dynamic)M).melee_damage_upper ) <= 0 ) {
				return false;
			}
			M.do_attack_animation( this );

			if ( this.shattered ) {
				GlobalFuncs.playsound( this.loc, "sound/effects/hit_on_shattered_glass.ogg", 70, 1 );
				return false;
			}
			user.visible_message( "<span class='danger'>" + user + " smashes " + this + "!</span>" );
			this.shatter();
			return false;
		}

		// Function from file: mirror.dm
		public override bool attack_alien( dynamic user = null ) {
			((Ent_Dynamic)user).do_attack_animation( this );

			if ( user is Mob_Living_Carbon_Alien_Larva ) {
				return false;
			}

			if ( this.shattered ) {
				GlobalFuncs.playsound( this.loc, "sound/effects/hit_on_shattered_glass.ogg", 70, 1 );
				return false;
			}
			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " smashes " + this + "!</span>" );
			this.shatter();
			return false;
		}

		// Function from file: mirror.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;

			((Ent_Dynamic)user).do_attack_animation( this );

			if ( A.damtype == "stamina" ) {
				return null;
			}

			if ( this.shattered ) {
				
				if ( A is Obj_Item_Weapon_Weldingtool ) {
					WT = A;

					if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
						user.WriteMsg( "<span class='notice'>You begin repairing " + this + "...</span>" );
						GlobalFuncs.playsound( this, "sound/items/welder.ogg", 100, 1 );

						if ( GlobalFuncs.do_after( user, 10 / A.toolspeed, null, this ) ) {
							
							if ( !Lang13.Bool( user ) || !Lang13.Bool( WT ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								return null;
							}
							user.WriteMsg( "<span class='notice'>You repair " + this + ".</span>" );
							this.shattered = false;
							this.icon_state = Lang13.Initial( this, "icon_state" );
							this.desc = Lang13.Initial( this, "desc" );
						}
						return null;
					}
				}
				GlobalFuncs.playsound( this.loc, "sound/effects/hit_on_shattered_glass.ogg", 70, 1 );
				return null;
			}

			if ( Rand13.PercentChance( Convert.ToInt32( A.force * 2 ) ) ) {
				this.visible_message( "<span class='warning'>" + user + " smashes " + this + " with " + A + ".</span>" );
				this.shatter();
			} else {
				this.visible_message( "<span class='warning'>" + user + " hits " + this + " with " + A + "!</span>" );
				GlobalFuncs.playsound( this.loc, "sound/effects/Glasshit.ogg", 70, 1 );
			}
			return null;
		}

		// Function from file: mirror.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( Rand13.PercentChance( Convert.ToInt32( P.damage * 2 ) ) ) {
				
				if ( P.damage_type == "brute" || P.damage_type == "fire" ) {
					
					if ( !this.shattered ) {
						this.shatter();
					} else {
						GlobalFuncs.playsound( this, "sound/effects/hit_on_shattered_glass.ogg", 70, 1 );
					}
				}
			}
			base.bullet_act( (object)(P), (object)(def_zone) );
			return null;
		}

		// Function from file: mirror.dm
		public void shatter(  ) {
			
			if ( this.shattered ) {
				return;
			}
			this.shattered = true;
			this.icon_state = "mirror_broke";
			GlobalFuncs.playsound( this, "shatter", 70, 1 );
			this.desc = "Oh no, seven years of bad luck!";
			return;
		}

		// Function from file: mirror.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic H = null;
			Ent_Static userloc = null;
			dynamic new_style = null;
			dynamic new_style2 = null;

			
			if ( this.shattered ) {
				return null;
			}

			if ( a is Mob_Living_Carbon_Human ) {
				H = a;
				userloc = H.loc;

				if ( H.gender == GlobalVars.MALE ) {
					new_style = Interface13.Input( a, "Select a facial hair style", "Grooming", null, GlobalVars.facial_hair_styles_list, InputType.Null | InputType.Any );

					if ( userloc != H.loc ) {
						return null;
					}

					if ( Lang13.Bool( new_style ) ) {
						H.facial_hair_style = new_style;
					}
				} else {
					H.facial_hair_style = "Shaved";
				}
				new_style2 = Interface13.Input( a, "Select a hair style", "Grooming", null, GlobalVars.hair_styles_list, InputType.Null | InputType.Any );

				if ( userloc != H.loc ) {
					return null;
				}

				if ( Lang13.Bool( new_style2 ) ) {
					H.hair_style = new_style2;
				}
				((Mob)H).update_hair();
			}
			return null;
		}

	}

}
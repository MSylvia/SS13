// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_BodyBag : Obj_Structure_Closet {

		public Type foldedbag_path = typeof(Obj_Item_Bodybag);
		public bool tagged = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.mob_storage_capacity = 2;
			this.open_sound = "sound/items/zip.ogg";
			this.icon = "icons/obj/bodybag.dmi";
			this.icon_state = "bodybag";
		}

		public Obj_Structure_Closet_BodyBag ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bodybag.dm
		public override dynamic MouseDrop( dynamic over = null, dynamic src_location = null, dynamic over_location = null, string src_control = null, dynamic over_control = null, string _params = null ) {
			dynamic B = null;

			base.MouseDrop( (object)(over), (object)(src_location), (object)(over_location), src_control, (object)(over_control), _params );

			if ( over == Task13.User && this.Adjacent( Task13.User ) && ( Map13.GetDistance( this, Task13.User ) <= 1 || Task13.User.contents.Find( this ) != 0 ) ) {
				
				if ( !( Task13.User is Mob_Living_Carbon_Human ) ) {
					return 0;
				}

				if ( this.opened ) {
					return 0;
				}

				if ( this.contents.len != 0 ) {
					return 0;
				}
				this.visible_message( "<span class='notice'>" + Task13.User + " folds up " + this + ".</span>" );
				B = Lang13.Call( this.foldedbag_path, GlobalFuncs.get_turf( this ) );
				Task13.User.put_in_hands( B );
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: bodybag.dm
		public override bool close(  ) {
			
			if ( base.close() ) {
				this.density = false;
				return true;
			}
			return false;
		}

		// Function from file: bodybag.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );

			if ( this.tagged ) {
				this.overlays.Add( "bodybag_label" );
			}
			return null;
		}

		// Function from file: bodybag.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			string t = null;

			
			if ( A is Obj_Item_Weapon_Pen || A is Obj_Item_Toy_Crayon ) {
				t = GlobalFuncs.stripped_input( user, "What would you like the label to be?", this.name, null, 53 );

				if ( ((Mob)user).get_active_hand() != A ) {
					return null;
				}

				if ( !( Map13.GetDistance( this, user ) <= 1 ) && this.loc != user ) {
					return null;
				}

				if ( Lang13.Bool( t ) ) {
					this.name = "body bag - " + t;
					this.tagged = true;
					this.update_icon();
				} else {
					this.name = "body bag";
				}
				return null;
			} else if ( A is Obj_Item_Weapon_Wirecutters ) {
				user.WriteMsg( "<span class='notice'>You cut the tag off " + this + ".</span>" );
				this.name = "body bag";
				this.tagged = false;
				this.update_icon();
			}
			return null;
		}

	}

}
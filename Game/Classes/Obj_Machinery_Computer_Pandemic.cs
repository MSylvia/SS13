// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Pandemic : Obj_Machinery_Computer {

		public string temp_html = "";
		public bool? wait = null;
		public dynamic beaker = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_Pandemic);
			this.idle_power_usage = 20;
			this.icon = "icons/obj/chemical.dmi";
			this.icon_state = "mixer0";
		}

		// Function from file: pandemic.dm
		public Obj_Machinery_Computer_Pandemic ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_icon();
			return;
		}

		// Function from file: pandemic.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_ReagentContainers_Glass ) {
				
				if ( ( this.stat & 3 ) != 0 ) {
					return null;
				}

				if ( Lang13.Bool( this.beaker ) ) {
					user.WriteMsg( "<span class='warning'>A beaker is already loaded into the machine!</span>" );
					return null;
				}

				if ( !Lang13.Bool( user.drop_item() ) ) {
					return null;
				}
				this.beaker = A;
				this.beaker.loc = this;
				user.WriteMsg( "<span class='notice'>You add the beaker to the machine.</span>" );
				this.updateUsrDialog();
				this.icon_state = "mixer1";
			} else if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.beaker ) ) {
					this.beaker.loc = GlobalFuncs.get_turf( this );
				}
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
				return null;
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: pandemic.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			Reagents R = null;
			Reagent_Blood Blood = null;
			Reagent_Blood B = null;
			dynamic vir = null;
			int i = 0;
			Disease D = null;
			Disease A = null;
			Disease A2 = null;
			ByTable english_symptoms = null;
			Symptom S = null;
			dynamic res = null;
			int i2 = 0;
			dynamic type = null;
			string disease_name = null;
			dynamic A3 = null;
			dynamic D2 = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			((Mob)a).set_machine( this );
			dat = "";

			if ( Lang13.Bool( this.temp_html ) ) {
				dat = new Txt().item( this.temp_html ).str( "<BR><BR><A href='?src=" ).Ref( this ).str( ";clear=1'>Main Menu</A>" ).ToString();
			} else if ( !Lang13.Bool( this.beaker ) ) {
				dat += "Please insert beaker.<BR>";
				dat += new Txt( "<A href='?src=" ).Ref( a ).str( ";mach_close=pandemic'>Close</A>" ).ToString();
			} else {
				R = this.beaker.reagents;
				Blood = null;

				foreach (dynamic _a in Lang13.Enumerate( R.reagent_list, typeof(Reagent_Blood) )) {
					B = _a;
					

					if ( B != null ) {
						Blood = B;
						break;
					}
				}

				if ( !Lang13.Bool( R.total_volume ) || !( R.reagent_list.len != 0 ) ) {
					dat += "The beaker is empty<BR>";
				} else if ( !( Blood != null ) ) {
					dat += "No blood sample found in beaker.";
				} else if ( !Lang13.Bool( Blood.data ) ) {
					dat += "No blood data found in beaker.";
				} else {
					dat += "<h3>Blood sample data:</h3>";
					dat += "<b>Blood DNA:</b> " + ( Lang13.Bool( Blood.data["blood_DNA"] ) || Lang13.Bool( "none" ) ) + "<BR>";
					dat += "<b>Blood Type:</b> " + ( Lang13.Bool( Blood.data["blood_type"] ) || Lang13.Bool( "none" ) ) + "<BR>";

					if ( Lang13.Bool( Blood.data["viruses"] ) ) {
						vir = Blood.data["viruses"];

						if ( Lang13.Bool( vir.len ) ) {
							i = 0;

							foreach (dynamic _c in Lang13.Enumerate( Blood.data["viruses"], typeof(Disease) )) {
								D = _c;
								
								i++;

								if ( !( ( D.visibility_flags & 2 ) != 0 ) ) {
									
									if ( D is Disease_Advance ) {
										A = D;
										D = GlobalVars.archive_diseases[A.GetDiseaseID()];

										if ( D != null && D.name == "Unknown" ) {
											dat += new Txt( "<b><a href='?src=" ).Ref( this ).str( ";name_disease=" ).item( i ).str( "'>Name Disease</a></b><BR>" ).ToString();
										}
									}

									if ( !( D != null ) ) {
										Task13.Crash( "We weren't able to get the advance disease from the archive." );
									}
									dat += "<b>Disease Agent:</b> " + ( D != null ? new Txt().item( D.agent ).str( " - <A href='?src=" ).Ref( this ).str( ";create_virus_culture=" ).item( i ).str( "'>Create virus culture bottle</A>" ).ToString() : "none" ) + "<BR>";
									dat += "<b>Common name:</b> " + ( Lang13.Bool( D.name ) || Lang13.Bool( "none" ) ) + "<BR>";
									dat += "<b>Description: </b> " + ( Lang13.Bool( D.desc ) || Lang13.Bool( "none" ) ) + "<BR>";
									dat += "<b>Spread:</b> " + ( Lang13.Bool( D.spread_text ) || Lang13.Bool( "none" ) ) + "<BR>";
									dat += "<b>Possible cure:</b> " + ( Lang13.Bool( D.cure_text ) || Lang13.Bool( "none" ) ) + "<BR><BR>";

									if ( D is Disease_Advance ) {
										A2 = D;
										dat += "<b>Symptoms:</b> ";
										english_symptoms = new ByTable();

										foreach (dynamic _b in Lang13.Enumerate( ((dynamic)A2).symptoms, typeof(Symptom) )) {
											S = _b;
											
											english_symptoms.Add( S.name );
										}
										dat += GlobalFuncs.english_list( english_symptoms );
									}
								} else {
									dat += "No detectable virus in the sample.";
								}
							}
						}
					} else {
						dat += "No detectable virus in the sample.";
					}
					dat += "<BR><b>Contains antibodies to:</b> ";

					if ( Lang13.Bool( Blood.data["resistances"] ) ) {
						res = Blood.data["resistances"];

						if ( Lang13.Bool( res.len ) ) {
							dat += "<ul>";
							i2 = 0;

							foreach (dynamic _d in Lang13.Enumerate( Blood.data["resistances"] )) {
								type = _d;
								
								i2++;
								disease_name = "Unknown";

								if ( !( type is Type ) ) {
									A3 = GlobalVars.archive_diseases[type];

									if ( Lang13.Bool( A3 ) ) {
										disease_name = A3.name;
									}
								} else {
									D2 = Lang13.Call( type, 0, null );
									disease_name = D2.name;
								}
								dat += new Txt( "<li>" ).item( disease_name ).str( " - <A href='?src=" ).Ref( this ).str( ";create_vaccine=" ).item( i2 ).str( "'>Create vaccine bottle</A></li>" ).ToString();
							}
							dat += "</ul><BR>";
						} else {
							dat += "nothing<BR>";
						}
					} else {
						dat += "nothing<BR>";
					}
				}
				dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";eject=1'>Eject beaker</A>" ).item( ( Lang13.Bool( R.total_volume ) && R.reagent_list.len != 0 ? new Txt( "-- <A href='?src=" ).Ref( this ).str( ";empty_beaker=1'>Empty beaker</A>" ).ToString() : "" ) ).str( "<BR>" ).ToString();
				dat += new Txt( "<A href='?src=" ).Ref( a ).str( ";mach_close=pandemic'>Close</A>" ).ToString();
			}
			Interface13.Browse( a, "<TITLE>" + this.name + "</TITLE><BR>" + dat, "window=pandemic;size=575x400" );
			GlobalFuncs.onclose( a, "pandemic" );
			return null;
		}

		// Function from file: pandemic.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Obj_Item_Weapon_ReagentContainers_Glass_Bottle B = null;
			dynamic path = null;
			dynamic vaccine_type = null;
			string vaccine_name = null;
			dynamic D = null;
			dynamic D2 = null;
			dynamic type = null;
			dynamic D3 = null;
			Base_Data A = null;
			string name = null;
			Obj_Item_Weapon_ReagentContainers_Glass_Bottle B2 = null;
			ByTable data = null;
			string new_name = null;
			dynamic id = null;
			Disease_Advance A2 = null;
			Disease_Advance AD = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}
			Task13.User.set_machine( this );

			if ( !Lang13.Bool( this.beaker ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["create_vaccine"] ) ) {
				
				if ( !( this.wait == true ) ) {
					B = new Obj_Item_Weapon_ReagentContainers_Glass_Bottle( this.loc );

					if ( B != null ) {
						B.pixel_x = Rand13.Int( -3, 3 );
						B.pixel_y = Rand13.Int( -3, 3 );
						path = this.GetResistancesByIndex( String13.ParseNumber( href_list["create_vaccine"] ) );
						vaccine_type = path;
						vaccine_name = "Unknown";

						if ( !( vaccine_type is Type ) ) {
							
							if ( Lang13.Bool( GlobalVars.archive_diseases[path] ) ) {
								D = GlobalVars.archive_diseases[path];

								if ( Lang13.Bool( D ) ) {
									vaccine_name = D.name;
									vaccine_type = path;
								}
							}
						} else if ( Lang13.Bool( vaccine_type ) ) {
							D2 = Lang13.Call( vaccine_type, 0, null );

							if ( Lang13.Bool( D2 ) ) {
								vaccine_name = D2.name;
							}
						}

						if ( Lang13.Bool( vaccine_type ) ) {
							B.name = "" + vaccine_name + " vaccine bottle";
							B.reagents.add_reagent( "vaccine", 15, new ByTable(new object [] { vaccine_type }) );
							this.replicator_cooldown( 200 );
						}
					}
				} else {
					this.temp_html = "The replicator is not ready yet.";
				}
				this.updateUsrDialog();
				return null;
			} else if ( Lang13.Bool( href_list["create_virus_culture"] ) ) {
				
				if ( !( this.wait == true ) ) {
					type = this.GetVirusTypeByIndex( String13.ParseNumber( href_list["create_virus_culture"] ) );
					D3 = null;

					if ( !( type is Type ) ) {
						D3 = this.GetVirusByIndex( String13.ParseNumber( href_list["create_virus_culture"] ) );
						A = GlobalVars.archive_diseases[((Disease)D3).GetDiseaseID()];

						if ( A != null ) {
							D3 = Lang13.Call( A.type, 0, A );
						}
					} else if ( Lang13.Bool( type ) ) {
						
						if ( Lang13.Bool( GlobalVars.diseases.Contains( type ) ) ) {
							D3 = Lang13.Call( type, 0, null );
						}
					}

					if ( !Lang13.Bool( D3 ) ) {
						return null;
					}
					name = GlobalFuncs.stripped_input( Task13.User, "Name:", "Name the culture", D3.name, 26 );

					if ( name == null || this.wait == true ) {
						return null;
					}
					B2 = new Obj_Item_Weapon_ReagentContainers_Glass_Bottle( this.loc );
					B2.icon_state = "bottle3";
					B2.pixel_x = Rand13.Int( -3, 3 );
					B2.pixel_y = Rand13.Int( -3, 3 );
					this.replicator_cooldown( 50 );
					data = new ByTable().Set( "viruses", new ByTable(new object [] { D3 }) );
					B2.name = "" + name + " culture bottle";
					B2.desc = "A small bottle. Contains " + D3.agent + " culture in synthblood medium.";
					B2.reagents.add_reagent( "blood", 20, data );
					this.updateUsrDialog();
				} else {
					this.temp_html = "The replicator is not ready yet.";
				}
				this.updateUsrDialog();
				return null;
			} else if ( Lang13.Bool( href_list["empty_beaker"] ) ) {
				((Reagents)this.beaker.reagents).clear_reagents();
				this.updateUsrDialog();
				return null;
			} else if ( Lang13.Bool( href_list["eject"] ) ) {
				this.beaker.loc = this.loc;
				this.beaker = null;
				this.icon_state = "mixer0";
				this.updateUsrDialog();
				return null;
			} else if ( Lang13.Bool( href_list["clear"] ) ) {
				this.temp_html = "";
				this.updateUsrDialog();
				return null;
			} else if ( Lang13.Bool( href_list["name_disease"] ) ) {
				new_name = GlobalFuncs.stripped_input( Task13.User, "Name the Disease", "New Name", "", 26 );

				if ( !Lang13.Bool( new_name ) ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
					return null;
				}
				id = this.GetVirusTypeByIndex( String13.ParseNumber( href_list["name_disease"] ) );

				if ( Lang13.Bool( GlobalVars.archive_diseases[id] ) ) {
					A2 = GlobalVars.archive_diseases[id];
					A2.AssignName( new_name );

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.SSdisease.processing, typeof(Disease_Advance) )) {
						AD = _a;
						
						AD.Refresh();
					}
				}
				this.updateUsrDialog();
			} else {
				Interface13.Browse( Task13.User, null, "window=pandemic" );
				this.updateUsrDialog();
				return null;
			}
			this.add_fingerprint( Task13.User );
			return null;
		}

		// Function from file: pandemic.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = ( Lang13.Bool( this.beaker ) ? "mixer1_b" : "mixer0_b" );
				return null;
			}
			this.icon_state = "mixer" + ( Lang13.Bool( this.beaker ) ? "1" : "0" ) + ( Lang13.Bool( this.powered() ) ? "" : "_nopower" );

			if ( this.wait == true ) {
				this.overlays.Cut();
			} else {
				this.overlays.Add( "waitlight" );
			}
			return null;
		}

		// Function from file: pandemic.dm
		public void replicator_cooldown( int waittime = 0 ) {
			this.wait = true;
			this.update_icon();
			Task13.Schedule( waittime, (Task13.Closure)(() => {
				this.wait = null;
				this.update_icon();
				GlobalFuncs.playsound( this.loc, "sound/machines/ping.ogg", 30, 1 );
				return;
			}));
			return;
		}

		// Function from file: pandemic.dm
		public dynamic GetVirusTypeByIndex( double? index = null ) {
			Disease D = null;

			D = this.GetVirusByIndex( index );

			if ( D != null ) {
				return D.GetDiseaseID();
			}
			return null;
		}

		// Function from file: pandemic.dm
		public dynamic GetResistancesByIndex( double? index = null ) {
			dynamic BL = null;
			dynamic resistances = null;

			
			if ( Lang13.Bool( this.beaker ) && Lang13.Bool( this.beaker.reagents ) ) {
				
				if ( Lang13.Bool( this.beaker.reagents.reagent_list.len ) ) {
					BL = Lang13.FindIn( typeof(Reagent_Blood), this.beaker.reagents.reagent_list );

					if ( Lang13.Bool( BL ) ) {
						
						if ( Lang13.Bool( BL.data ) && Lang13.Bool( BL.data["resistances"] ) ) {
							resistances = BL.data["resistances"];
							return resistances[index];
						}
					}
				}
			}
			return null;
		}

		// Function from file: pandemic.dm
		public dynamic GetVirusByIndex( double? index = null ) {
			dynamic BL = null;
			dynamic viruses = null;

			
			if ( Lang13.Bool( this.beaker ) && Lang13.Bool( this.beaker.reagents ) ) {
				
				if ( Lang13.Bool( this.beaker.reagents.reagent_list.len ) ) {
					BL = Lang13.FindIn( typeof(Reagent_Blood), this.beaker.reagents.reagent_list );

					if ( Lang13.Bool( BL ) ) {
						
						if ( Lang13.Bool( BL.data ) && Lang13.Bool( BL.data["viruses"] ) ) {
							viruses = BL.data["viruses"];
							return viruses[index];
						}
					}
				}
			}
			return null;
		}

		// Function from file: pandemic.dm
		public override void set_broken(  ) {
			this.icon_state = ( Lang13.Bool( this.beaker ) ? "mixer1_b" : "mixer0_b" );
			this.overlays.Cut();
			this.stat |= 1;
			return;
		}

	}

}
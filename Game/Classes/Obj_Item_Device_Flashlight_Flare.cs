// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Flashlight_Flare : Obj_Item_Device_Flashlight {

		public int fuel = 0;
		public int on_damage = 7;
		public int produce_heat = 1500;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.brightness_on = 7;
			this.item_state = "flare";
			this.heat = 1000;
			this.icon_state = "flare";
		}

		// Function from file: flashlight.dm
		public Obj_Item_Device_Flashlight_Flare ( dynamic loc = null ) : base( (object)(loc) ) {
			this.fuel = Rand13.Int( 800, 1000 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: flashlight.dm
		public override int is_hot(  ) {
			return ( this.on ?1:0) * this.heat;
		}

		// Function from file: flashlight.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic _default = null;

			
			if ( !( this.fuel != 0 ) ) {
				user.WriteMsg( "<span class='warning'>It's out of fuel!</span>" );
				return _default;
			}

			if ( this.on ) {
				return _default;
			}
			_default = base.attack_self( (object)(user), (object)(flag), emp );

			if ( Lang13.Bool( _default ) ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " lights " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You light " ).the( this ).item().str( "!</span>" ).ToString() );
				this.force = this.on_damage;
				this.damtype = "fire";
				GlobalVars.SSobj.processing.Add( this );
			}
			return _default;
		}

		// Function from file: flashlight.dm
		public override void update_brightness( dynamic user = null ) {
			base.update_brightness( (object)(user) );

			if ( this.on ) {
				this.item_state = "" + Lang13.Initial( this, "item_state" ) + "-on";
			} else {
				this.item_state = "" + Lang13.Initial( this, "item_state" );
			}
			return;
		}

		// Function from file: flashlight.dm
		public void turn_off(  ) {
			Ent_Static U = null;

			this.on = false;
			this.force = Lang13.Initial( this, "force" );
			this.damtype = Lang13.Initial( this, "damtype" );

			if ( this.loc is Mob ) {
				U = this.loc;
				this.update_brightness( U );
			} else {
				this.update_brightness( null );
			}
			return;
		}

		// Function from file: flashlight.dm
		public override int? process( dynamic seconds = null ) {
			dynamic pos = null;

			pos = GlobalFuncs.get_turf( this );

			if ( Lang13.Bool( pos ) ) {
				((Tile)pos).hotspot_expose( this.produce_heat, 5 );
			}
			this.fuel = Num13.MaxInt( this.fuel - 1, 0 );

			if ( !( this.fuel != 0 ) || !this.on ) {
				this.turn_off();

				if ( !( this.fuel != 0 ) ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-empty";
				}
				GlobalVars.SSobj.processing.Remove( this );
			}
			return null;
		}

	}

}
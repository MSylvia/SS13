// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class UplinkItem_Badass_SurplusCrate : UplinkItem_Badass {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Syndicate Surplus Crate";
			this.desc = "A crate containing 50 telecrystals worth of random syndicate leftovers.";
			this.cost = 20;
			this.item = typeof(Obj_Item_Weapon_Storage_Box_Syndicate);
			this.excludefrom = new ByTable(new object [] { typeof(GameMode_Nuclear) });
		}

		// Function from file: uplink_item.dm
		public override dynamic spawn_item( dynamic loc = null, Ent_Static U = null ) {
			Obj_Structure_Closet_Crate C = null;
			ByTable temp_uplink_list = null;
			ByTable buyable_items = null;
			dynamic category = null;
			ByTable bought_items = null;
			double remaining_TC = 0;
			dynamic I = null;
			dynamic item = null;

			C = new Obj_Structure_Closet_Crate( loc );
			temp_uplink_list = GlobalFuncs.get_uplink_items();
			buyable_items = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( temp_uplink_list )) {
				category = _a;
				
				buyable_items.Add( temp_uplink_list[category] );
			}
			bought_items = new ByTable();
			((dynamic)U).uses -= this.cost;
			((dynamic)U).used_TC += 20;
			remaining_TC = 50;
			I = null;

			while (remaining_TC != 0) {
				I = Rand13.PickFromTable( buyable_items );

				if ( !Lang13.Bool( I.surplus ) ) {
					continue;
				}

				if ( Convert.ToDouble( I.cost ) > remaining_TC ) {
					continue;
				}

				if ( bought_items.Contains( I.item ) && Rand13.PercentChance( 33 ) ) {
					continue;
				}
				bought_items.Add( I.item );
				remaining_TC -= Convert.ToDouble( I.cost );
			}
			((dynamic)U).purchase_log += new Txt( "<BIG>" ).icon( C ).str( "</BIG>" ).ToString();

			foreach (dynamic _b in Lang13.Enumerate( bought_items )) {
				item = _b;
				
				Lang13.Call( item, C );
				((dynamic)U).purchase_log += new Txt( "<BIG>" ).icon( item ).str( "</BIG>" ).ToString();
			}
			return null;
		}

	}

}
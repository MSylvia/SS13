// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent : Game_Data {

		public string name = "Reagent";
		public string id = "reagent";
		public string description = "";
		public Game_Data holder = null;
		public int reagent_state = 2;
		public dynamic data = null;
		public double current_cycle = 0;
		public double volume = 0;
		public string color = "#000000";
		public bool can_synth = true;
		public double metabolization_rate = 0.4;
		public bool overrides_metab = false;
		public double overdose_threshold = 0;
		public int addiction_threshold = 0;
		public int addiction_stage = 0;
		public bool overdosed = false;

		// Function from file: reagents.dm
		public virtual void addiction_act_stage4( dynamic M = null ) {
			
			if ( Rand13.PercentChance( 30 ) ) {
				M.WriteMsg( "<span class='boldannounce'>You're not feeling good at all! You really need some " + this.name + ".</span>" );
			}
			return;
		}

		// Function from file: reagents.dm
		public virtual void addiction_act_stage3( dynamic M = null ) {
			
			if ( Rand13.PercentChance( 30 ) ) {
				M.WriteMsg( "<span class='danger'>You have an intense craving for " + this.name + ".</span>" );
			}
			return;
		}

		// Function from file: reagents.dm
		public virtual void addiction_act_stage2( dynamic M = null ) {
			
			if ( Rand13.PercentChance( 30 ) ) {
				M.WriteMsg( "<span class='notice'>You feel like you need " + this.name + ". You just can't get enough.</span>" );
			}
			return;
		}

		// Function from file: reagents.dm
		public virtual void addiction_act_stage1( dynamic M = null ) {
			
			if ( Rand13.PercentChance( 30 ) ) {
				M.WriteMsg( "<span class='notice'>You feel like some " + this.name + " right about now.</span>" );
			}
			return;
		}

		// Function from file: reagents.dm
		public virtual void overdose_start( dynamic M = null ) {
			M.WriteMsg( "<span class='userdanger'>You feel like you took too much of " + this.name + "!</span>" );
			return;
		}

		// Function from file: reagents.dm
		public virtual void overdose_process( dynamic M = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual void on_ex_act( dynamic severity = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual void on_tick( dynamic data = null ) {
			return;
		}

		// Function from file: reagents.dm
		public void on_update( dynamic A = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual bool on_merge( dynamic data = null ) {
			return false;
		}

		// Function from file: reagents.dm
		public virtual void on_new( dynamic data = null ) {
			return;
		}

		// Function from file: reagents.dm
		public void on_move( dynamic M = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual void on_mob_delete( dynamic M = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual bool on_mob_life( dynamic M = null ) {
			this.current_cycle++;
			((Reagents)this.holder).remove_reagent( this.id, this.metabolization_rate * M.metabolism_efficiency );
			return false;
		}

		// Function from file: reagents.dm
		public virtual void reaction_turf( dynamic T = null, double? volume = null ) {
			return;
		}

		// Function from file: reagents.dm
		public virtual bool reaction_obj( dynamic O = null, double? volume = null ) {
			return false;
		}

		// Function from file: reagents.dm
		public virtual double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null ) {
			method = method ?? GlobalVars.TOUCH;
			show_message = show_message ?? true;
			touch_protection = touch_protection ?? 0;

			int modifier = 0;
			double? amount = null;

			
			if ( !( M is Mob_Living ) ) {
				return 0;
			}

			if ( method == GlobalVars.VAPOR ) {
				
				if ( Lang13.Bool( M.reagents ) ) {
					modifier = Num13.MaxInt( 0, Num13.MinInt( ((int)( 1 - Convert.ToDouble( touch_protection ) )), 1 ) );
					amount = Num13.Round( ( reac_volume ??0) * modifier, 0.1 );

					if ( ( amount ??0) >= 0.5 ) {
						((Reagents)M.reagents).add_reagent( this.id, amount );
					}
				}
			}
			return 1;
		}

		// Function from file: reagents.dm
		public override dynamic Destroy(  ) {
			dynamic _default = null;

			_default = base.Destroy();
			this.holder = null;
			return _default;
		}

	}

}
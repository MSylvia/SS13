// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_FoodCart : Obj_Machinery {

		public int food_stored = 0;
		public int glasses = 0;
		public double? portion = 10;
		public dynamic selected_drink = null;
		public ByTable stored_food = new ByTable();
		public Obj_Item_Weapon_ReagentContainers mixer = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.use_power = 0;
			this.flags = 20480;
			this.icon = "icons/obj/kitchen.dmi";
			this.icon_state = "foodcart";
		}

		// Function from file: food_cart.dm
		public Obj_Machinery_FoodCart ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 200 );
			this.mixer = new Obj_Item_Weapon_ReagentContainers( this, 100 );
			this.mixer.name = "Mixer";
			return;
		}

		// Function from file: food_cart.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Obj O = null;
			Obj_Item_Weapon_ReagentContainers_Food_Drinks_Drinkingglass DG = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["disposeI"] ) ) {
				this.reagents.del_reagent( href_list["disposeI"] );
			}

			if ( Lang13.Bool( href_list["dispense"] ) ) {
				
				if ( Convert.ToDouble( this.stored_food[href_list["dispense"]]-- ) <= 0 ) {
					this.stored_food[href_list["dispense"]] = 0;
				} else {
					
					foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj) )) {
						O = _a;
						

						if ( GlobalFuncs.sanitize( O.name ) == href_list["dispense"] ) {
							O.loc = this.loc;
							break;
						}
					}
				}
			}

			if ( Lang13.Bool( href_list["portion"] ) ) {
				this.portion = Num13.MaxInt( 0, Num13.MinInt( Convert.ToInt32( Interface13.Input( "How much drink do you want to dispense per glass?", null, null, null, null, InputType.Num ) ), 50 ) );
			}

			if ( Lang13.Bool( href_list["pour"] ) || Lang13.Bool( href_list["m_pour"] ) ) {
				
				if ( this.glasses-- <= 0 ) {
					Task13.User.WriteMsg( "<span class='warning'>There are no glasses left!</span>" );
					this.glasses = 0;
				} else {
					DG = new Obj_Item_Weapon_ReagentContainers_Food_Drinks_Drinkingglass( this.loc );

					if ( Lang13.Bool( href_list["pour"] ) ) {
						this.reagents.trans_id_to( DG, href_list["pour"], this.portion );
					}

					if ( Lang13.Bool( href_list["m_pour"] ) ) {
						this.mixer.reagents.trans_id_to( DG, href_list["m_pour"], this.portion );
					}
				}
			}

			if ( Lang13.Bool( href_list["mix"] ) ) {
				
				if ( this.reagents.trans_id_to( this.mixer, href_list["mix"], this.portion ) == 0 ) {
					Task13.User.WriteMsg( "<span class='warning'>The " + this.mixer + " is full!</span>" );
				}
			}

			if ( Lang13.Bool( href_list["transfer"] ) ) {
				
				if ( this.mixer.reagents.trans_id_to( this, href_list["transfer"], this.portion ) == 0 ) {
					Task13.User.WriteMsg( "<span class='warning'>The " + this + " is full!</span>" );
				}
			}
			this.updateDialog();

			if ( Lang13.Bool( href_list["close"] ) ) {
				Task13.User.unset_machine();
				Interface13.Browse( Task13.User, null, "window=foodcart" );
			}
			return null;
		}

		// Function from file: food_cart.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic DG = null;
			dynamic S = null;
			dynamic G = null;
			dynamic T = null;
			Obj_Item_Weapon_ReagentContainers_Food_Snacks S2 = null;

			
			if ( A is Obj_Item_Weapon_ReagentContainers_Food_Drinks_Drinkingglass ) {
				DG = A;

				if ( !Lang13.Bool( DG.reagents.total_volume ) ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					GlobalFuncs.qdel( DG );
					this.glasses++;
					user.WriteMsg( "<span class='notice'>The " + this + " accepts the drinking glass, sterilizing it.</span>" );
				}
			} else if ( A is Obj_Item_Weapon_ReagentContainers_Food_Snacks ) {
				
				if ( this.isFull() ) {
					user.WriteMsg( "<span class='warning'>The " + this + " is at full capacity.</span>" );
				} else {
					S = A;

					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					S.loc = this;

					if ( Lang13.Bool( this.stored_food[GlobalFuncs.sanitize( S.name )] ) ) {
						this.stored_food[GlobalFuncs.sanitize( S.name )]++;
					} else {
						this.stored_food[GlobalFuncs.sanitize( S.name )] = 1;
					}
				}
			} else if ( A is Obj_Item_Stack_Sheet_Glass ) {
				G = A;

				if ( ( ((Obj_Item_Stack)G).get_amount() ??0) >= 1 ) {
					G.use( 1 );
					this.glasses += 4;
					user.WriteMsg( "<span class='notice'>The " + this + " accepts a sheet of glass.</span>" );
				}
			} else if ( A is Obj_Item_Weapon_Storage_Bag_Tray ) {
				T = A;

				foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks) )) {
					S2 = _a;
					

					if ( this.isFull() ) {
						user.WriteMsg( "<span class='warning'>The " + this + " is at full capacity.</span>" );
						break;
					} else {
						((Obj_Item_Weapon_Storage)T).remove_from_storage( S2, this );

						if ( Lang13.Bool( this.stored_food[GlobalFuncs.sanitize( S2.name )] ) ) {
							this.stored_food[GlobalFuncs.sanitize( S2.name )]++;
						} else {
							this.stored_food[GlobalFuncs.sanitize( S2.name )] = 1;
						}
					}
				}
			} else if ( Lang13.Bool( ((Ent_Static)A).is_open_container() ) ) {
				return null;
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			this.updateDialog();
			return null;
		}

		// Function from file: food_cart.dm
		public bool isFull(  ) {
			return this.food_stored >= 30;
		}

		// Function from file: food_cart.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			dynamic dat = null;
			Reagent R = null;
			Reagent R2 = null;
			dynamic V = null;
			Browser popup = null;

			dat += "<br><b>STORED INGREDIENTS AND DRINKS</b><br><div class='statusDisplay'>";
			dat += "Remaining glasses: " + this.glasses + "<br>";
			dat += new Txt( "Portion: <a href='?src=" ).Ref( this ).str( ";portion=1'>" ).item( this.portion ).str( "</a><br>" ).ToString();

			foreach (dynamic _a in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
				R = _a;
				
				dat += "" + R.name + ": " + R.volume + " ";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";disposeI=" ).item( R.id ).str( "'>Purge</a>" ).ToString();

				if ( this.glasses > 0 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";pour=" ).item( R.id ).str( "'>Pour in a glass</a>" ).ToString();
				}
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";mix=" ).item( R.id ).str( "'>Add to the mixer</a><br>" ).ToString();
			}
			dat += "</div><br><b>MIXER CONTENTS</b><br><div class='statusDisplay'>";

			foreach (dynamic _b in Lang13.Enumerate( this.mixer.reagents.reagent_list, typeof(Reagent) )) {
				R2 = _b;
				
				dat += "" + R2.name + ": " + R2.volume + " ";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";transfer=" ).item( R2.id ).str( "'>Transfer back</a>" ).ToString();

				if ( this.glasses > 0 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";m_pour=" ).item( R2.id ).str( "'>Pour in a glass</a>" ).ToString();
				}
				dat += "<br>";
			}
			dat += "</div><br><b>STORED FOOD</b><br><div class='statusDisplay'>";

			foreach (dynamic _c in Lang13.Enumerate( this.stored_food )) {
				V = _c;
				

				if ( Convert.ToDouble( this.stored_food[V] ) > 0 ) {
					dat += new Txt( "<b>" ).item( V ).str( ": " ).item( this.stored_food[V] ).str( "</b> <a href='?src=" ).Ref( this ).str( ";dispense=" ).item( V ).str( "'>Dispense</a><br>" ).ToString();
				}
			}
			dat += new Txt( "</div><br><a href='?src=" ).Ref( this ).str( ";refresh=1'>Refresh</a> <a href='?src=" ).Ref( this ).str( ";close=1'>Close</a>" ).ToString();
			popup = new Browser( user, "foodcart", "Food Cart", 500, 350, this );
			popup.set_content( dat );
			popup.open();
			return null;
		}

		// Function from file: food_cart.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			((Mob)a).set_machine( this );
			this.interact( a );
			return null;
		}

	}

}
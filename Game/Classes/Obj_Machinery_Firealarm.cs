// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Firealarm : Obj_Machinery {

		public bool detecting = true;
		public double time = 10;
		public double? timing = 0;
		public bool lockdownbyai = false;
		public int last_process = 0;
		public int buildstage = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 2;
			this.active_power_usage = 6;
			this.power_channel = 3;
			this.icon = "icons/obj/monitors.dmi";
			this.icon_state = "fire0";
		}

		// Function from file: alarm.dm
		public Obj_Machinery_Firealarm ( dynamic loc = null, dynamic ndir = null, dynamic building = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( Lang13.Bool( ndir ) ) {
				this.dir = Convert.ToInt32( ndir );
			}

			if ( Lang13.Bool( building ) ) {
				this.buildstage = 0;
				this.panel_open = true;
				this.pixel_x = ( ( this.dir & 3 ) != 0 ? 0 : ( this.dir == 4 ? -24 : 24 ) );
				this.pixel_y = ( ( this.dir & 3 ) != 0 ? ( this.dir == 1 ? -24 : 24 ) : 0 );
			}

			if ( this.z == 1 ) {
				
				if ( GlobalVars.security_level != 0 ) {
					this.overlays.Add( new Image( "icons/obj/monitors.dmi", "overlay_" + GlobalFuncs.get_security_level() ) );
				} else {
					this.overlays.Add( new Image( "icons/obj/monitors.dmi", "overlay_green" ) );
				}
			}
			this.update_icon();
			return;
		}

		// Function from file: alarm.dm
		public virtual void alarm(  ) {
			dynamic A = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}
			A = GlobalFuncs.get_area( this );

			if ( !( A.fire == true ) ) {
				((Zone)A).firealert( this );
			}
			return;
		}

		// Function from file: alarm.dm
		public virtual void reset(  ) {
			dynamic A = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}
			A = GlobalFuncs.get_area( this );
			((Zone)A).firereset( this );
			return;
		}

		// Function from file: alarm.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			double? tp = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( this.buildstage != 2 ) {
				return null;
			}
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["reset"] ) ) {
				this.reset();
			} else if ( Lang13.Bool( href_list["alarm"] ) ) {
				this.alarm();
			} else if ( Lang13.Bool( href_list["time"] ) ) {
				this.timing = String13.ParseNumber( href_list["time"] );
				this.last_process = Game13.timeofday;
				GlobalVars.SSobj.processing.Or( this );
			} else if ( Lang13.Bool( href_list["tp"] ) ) {
				tp = String13.ParseNumber( href_list["tp"] );
				this.time += tp ??0;
				this.time = Num13.MinInt( Num13.MaxInt( Num13.Floor( this.time ), 0 ), 120 );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: alarm.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			Ent_Static A = null;
			string safety_warning = null;
			string d1 = null;
			string d2 = null;
			string dat = null;
			int second = 0;
			double minute = 0;
			int second2 = 0;
			double minute2 = 0;
			Browser popup = null;

			
			if ( Lang13.Bool( a.stat ) && !GlobalFuncs.IsAdminGhost( a ) || ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( this.buildstage != 2 ) {
				return null;
			}
			((Mob)a).set_machine( this );
			A = this.loc;
			dat = "";

			if ( a is Mob_Living_Carbon_Human || a.has_unlimited_silicon_privilege ) {
				A = A.loc;

				if ( this.emagged != 0 ) {
					safety_warning = "<font color='red'>NOTICE: Thermal sensors nonfunctional. Device will not report or recognize high temperatures.</font>";
				} else {
					safety_warning = "Safety measures functioning properly.";
				}

				if ( Lang13.Bool( ((dynamic)A).fire ) ) {
					d1 = new Txt( "<A href='?src=" ).Ref( this ).str( ";reset=1'>Reset - Lockdown</A>" ).ToString();
				} else {
					d1 = new Txt( "<A href='?src=" ).Ref( this ).str( ";alarm=1'>Alarm - Lockdown</A>" ).ToString();
				}

				if ( Lang13.Bool( this.timing ) ) {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=0'>Stop Time Lock</A>" ).ToString();
				} else {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=1'>Initiate Time Lock</A>" ).ToString();
				}
				second = Num13.Floor( this.time ) % 60;
				minute = ( Num13.Floor( this.time ) - second ) / 60;
				dat = new Txt().item( safety_warning ).str( "<br /><br />" ).item( d1 ).str( "<br /><b>The current alert level is: " ).item( GlobalFuncs.get_security_level() ).str( "</b><br /><br />Timer System: " ).item( d2 ).str( "<br />Time Left: <A href='?src=" ).Ref( this ).str( ";tp=-30'>-</A> <A href='?src=" ).Ref( this ).str( ";tp=-1'>-</A> " ).item( ( minute != 0 ? "" + minute + ":" : null ) ).item( second ).str( " <A href='?src=" ).Ref( this ).str( ";tp=1'>+</A> <A href='?src=" ).Ref( this ).str( ";tp=30'>+</A>" ).ToString();
			} else {
				A = A.loc;

				if ( Lang13.Bool( ((dynamic)A).fire ) ) {
					d1 = new Txt( "<A href='?src=" ).Ref( this ).str( ";reset=1'>" ).item( GlobalFuncs.stars( "Reset - Lockdown" ) ).str( "</A>" ).ToString();
				} else {
					d1 = new Txt( "<A href='?src=" ).Ref( this ).str( ";alarm=1'>" ).item( GlobalFuncs.stars( "Alarm - Lockdown" ) ).str( "</A>" ).ToString();
				}

				if ( Lang13.Bool( this.timing ) ) {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=0'>" ).item( GlobalFuncs.stars( "Stop Time Lock" ) ).str( "</A>" ).ToString();
				} else {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=1'>" ).item( GlobalFuncs.stars( "Initiate Time Lock" ) ).str( "</A>" ).ToString();
				}
				second2 = Num13.Floor( this.time ) % 60;
				minute2 = ( Num13.Floor( this.time ) - second2 ) / 60;
				dat = new Txt().item( d1 ).str( "<br /><b>The current alert level is: " ).item( GlobalFuncs.stars( GlobalFuncs.get_security_level() ) ).str( "</b><br /><br />Timer System: " ).item( d2 ).str( "<br />Time Left: <A href='?src=" ).Ref( this ).str( ";tp=-30'>-</A> <A href='?src=" ).Ref( this ).str( ";tp=-1'>-</A> " ).item( ( minute2 != 0 ? "" + minute2 + ":" : null ) ).item( second2 ).str( " <A href='?src=" ).Ref( this ).str( ";tp=1'>+</A> <A href='?src=" ).Ref( this ).str( ";tp=30'>+</A>" ).ToString();
			}
			popup = new Browser( a, "firealarm", "Fire Alarm" );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: alarm.dm
		public override void power_change(  ) {
			
			if ( Lang13.Bool( this.powered( 3 ) ) ) {
				this.stat &= 65533;
			} else {
				this.stat |= 2;
			}
			Task13.Schedule( Rand13.Int( 0, 15 ), (Task13.Closure)(() => {
				
				if ( this.loc != null ) {
					this.update_icon();
				}
				return;
			}));
			return;
		}

		// Function from file: alarm.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( Lang13.Bool( this.timing ) ) {
				
				if ( this.time > 0 ) {
					this.time = this.time - ( Game13.timeofday - this.last_process ) / 10;
				} else {
					this.alarm();
					this.time = 0;
					this.timing = 0;
					GlobalVars.SSobj.processing.Remove( this );
				}
				this.updateDialog();
			}
			this.last_process = Game13.timeofday;
			return null;
		}

		// Function from file: alarm.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Stack_CableCoil coil = null;
			dynamic coil2 = null;
			Obj_Item_Wallframe_Firealarm frame = null;

			this.add_fingerprint( user );

			if ( A is Obj_Item_Weapon_Screwdriver && this.buildstage == 2 ) {
				GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
				this.panel_open = !( this.panel_open == true );
				user.WriteMsg( "<span class='notice'>The wires have been " + ( this.panel_open == true ? "exposed" : "unexposed" ) + ".</span>" );
				this.update_icon();
				return null;
			}

			if ( this.panel_open == true ) {
				
				switch ((int)( this.buildstage )) {
					case 2:
						
						if ( A is Obj_Item_Device_Multitool ) {
							this.detecting = !this.detecting;

							if ( this.detecting ) {
								((Ent_Static)user).visible_message( "" + user + " has reconnected " + this + "'s detecting unit!", "<span class='notice'>You reconnect " + this + "'s detecting unit.</span>" );
							} else {
								((Ent_Static)user).visible_message( "" + user + " has disconnected " + this + "'s detecting unit!", "<span class='notice'>You disconnect " + this + "'s detecting unit.</span>" );
							}
							return null;
						} else if ( A is Obj_Item_Weapon_Wirecutters ) {
							this.buildstage = 1;
							GlobalFuncs.playsound( this.loc, "sound/items/Wirecutter.ogg", 50, 1 );
							coil = new Obj_Item_Stack_CableCoil();
							coil.amount = 5;
							coil.loc = user.loc;
							user.WriteMsg( new Txt( "<span class='notice'>You cut the wires from " ).the( this ).item().str( ".</span>" ).ToString() );
							this.update_icon();
							return null;
						}
						break;
					case 1:
						
						if ( A is Obj_Item_Stack_CableCoil ) {
							coil2 = A;

							if ( ( ((Obj_Item_Stack)coil2).get_amount() ??0) < 5 ) {
								user.WriteMsg( "<span class='warning'>You need more cable for this!</span>" );
							} else {
								coil2.use( 5 );
								this.buildstage = 2;
								user.WriteMsg( new Txt( "<span class='notice'>You wire " ).the( this ).item().str( ".</span>" ).ToString() );
								this.update_icon();
							}
							return null;
						} else if ( A is Obj_Item_Weapon_Crowbar ) {
							GlobalFuncs.playsound( this.loc, "sound/items/Crowbar.ogg", 50, 1 );
							((Ent_Static)user).visible_message( "" + user.name + " removes the electronics from " + this.name + ".", "<span class='notice'>You start prying out the circuit...</span>" );

							if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
								
								if ( this.buildstage == 1 ) {
									
									if ( ( this.stat & 1 ) != 0 ) {
										user.WriteMsg( "<span class='notice'>You remove the destroyed circuit.</span>" );
									} else {
										user.WriteMsg( "<span class='notice'>You pry out the circuit.</span>" );
										new Obj_Item_Weapon_Electronics_Firealarm( user.loc );
									}
									this.buildstage = 0;
									this.update_icon();
								}
							}
							return null;
						}
						break;
					case 0:
						
						if ( A is Obj_Item_Weapon_Electronics_Firealarm ) {
							user.WriteMsg( "<span class='notice'>You insert the circuit.</span>" );
							GlobalFuncs.qdel( A );
							this.buildstage = 1;
							this.update_icon();
							return null;
						} else if ( A is Obj_Item_Weapon_Wrench ) {
							((Ent_Static)user).visible_message( "" + user + " removes the fire alarm assembly from the wall.", "<span class='notice'>You remove the fire alarm assembly from the wall.</span>" );
							frame = new Obj_Item_Wallframe_Firealarm();
							frame.loc = user.loc;
							GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
				}
			}
			return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
		}

		// Function from file: alarm.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( Rand13.PercentChance( ((int)( 50 / severity )) ) ) {
				this.alarm();
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: alarm.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: alarm.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			this.alarm(); return null;
		}

		// Function from file: alarm.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

		// Function from file: alarm.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			
			if ( this.detecting ) {
				
				if ( Convert.ToDouble( exposed_temperature ) > 473.41 ) {
					
					if ( !( this.emagged != 0 ) ) {
						this.alarm();
					}
				}
			}
			return null;
		}

		// Function from file: alarm.dm
		public override bool emag_act( dynamic user = null ) {
			
			if ( !( this.emagged != 0 ) ) {
				this.emagged = 1;

				if ( Lang13.Bool( user ) ) {
					((Ent_Static)user).visible_message( "<span class='warning'>Sparks fly out of the " + this + "!</span>", "<span class='notice'>You emag the " + this + ", disabling its thermal sensors.</span>" );
				}
				GlobalFuncs.playsound( this.loc, "sound/effects/sparks4.ogg", 50, 1 );
				return false;
			}
			return false;
		}

		// Function from file: alarm.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			Ent_Static A = null;

			this.overlays = new ByTable();
			A = this.loc;
			A = A.loc;

			if ( this.panel_open == true ) {
				
				switch ((int)( this.buildstage )) {
					case 0:
						this.icon_state = "fire_b0";
						return null;
						break;
					case 1:
						this.icon_state = "fire_b1";
						return null;
						break;
					case 2:
						this.icon_state = "fire_b2";
						break;
				}

				if ( ( this.stat & 1 ) != 0 || ( this.stat & 2 ) != 0 ) {
					return null;
				}
				this.overlays.Add( "overlay_" + GlobalVars.security_level );
				return null;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "firex";
				return null;
			}
			this.icon_state = "fire0";

			if ( ( this.stat & 2 ) != 0 ) {
				return null;
			}
			this.overlays.Add( "overlay_" + GlobalVars.security_level );

			if ( !this.detecting ) {
				this.overlays.Add( "overlay_fire" );
			} else {
				this.overlays.Add( "overlay_" + ( Lang13.Bool( ((dynamic)A).fire ) ? "fire" : "clear" ) );
			}
			return null;
		}

	}

}
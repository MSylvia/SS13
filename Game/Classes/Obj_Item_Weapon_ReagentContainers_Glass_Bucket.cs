// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Glass_Bucket : Obj_Item_Weapon_ReagentContainers_Glass {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "bucket";
			this.materials = new ByTable().Set( "$metal", 200 );
			this.amount_per_transfer_from_this = 20;
			this.possible_transfer_amounts = new ByTable(new object [] { 10, 15, 20, 25, 30, 50, 70 });
			this.volume = 70;
			this.flags = 36864;
			this.slot_flags = 64;
			this.armor = new ByTable().Set( "melee", 10 ).Set( "bullet", 0 ).Set( "laser", 0 ).Set( "energy", 0 ).Set( "bomb", 0 ).Set( "bio", 0 ).Set( "rad", 0 );
			this.icon = "icons/obj/janitor.dmi";
			this.icon_state = "bucket";
		}

		public Obj_Item_Weapon_ReagentContainers_Glass_Bucket ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: glass.dm
		public override bool equip_to_best_slot( Mob M = null ) {
			bool _default = false;

			int index = 0;

			
			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				index = this.slot_equipment_priority.Find( 11 );
				this.slot_equipment_priority.Remove( 11 );
				_default = base.equip_to_best_slot( M );
				this.slot_equipment_priority.Insert( index, 11 );
				return _default;
			}
			return base.equip_to_best_slot( M );
		}

		// Function from file: glass.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			base.equipped( user, (object)(slot) );

			if ( slot == 11 && Lang13.Bool( this.reagents.total_volume ) ) {
				user.WriteMsg( "<span class='userdanger'>" + this + "'s contents spill all over you!</span>" );
				this.reagents.reaction( user, GlobalVars.TOUCH );
				this.reagents.clear_reagents();
			}
			return;
		}

		// Function from file: glass.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Mop ) {
				
				if ( ( this.reagents.total_volume ??0) < 1 ) {
					user.WriteMsg( "<span class='warning'>" + this + " is out of water!</span>" );
				} else {
					this.reagents.trans_to( A, 5 );
					user.WriteMsg( "<span class='notice'>You wet " + A + " in " + this + ".</span>" );
					GlobalFuncs.playsound( this.loc, "sound/effects/slosh.ogg", 25, 1 );
				}
			} else if ( A is Obj_Item_Device_Assembly_ProxSensor ) {
				user.WriteMsg( "<span class='notice'>You add " + A + " to " + this + ".</span>" );
				GlobalFuncs.qdel( A );
				((Mob)user).unEquip( this );
				GlobalFuncs.qdel( this );
				((Mob)user).put_in_hands( new Obj_Item_Weapon_BucketSensor() );
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

	}

}
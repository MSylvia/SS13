// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Disease_Dnaspread : Disease {

		public dynamic original_dna = null;
		public bool transformed = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Space Retrovirus";
			this.max_stages = 4;
			this.spread_text = "On contact";
			this.spread_flags = 32;
			this.cure_text = "Mutadone";
			this.cures = new ByTable(new object [] { "mutadone" });
			this.disease_flags = 6;
			this.agent = "S4E1 retrovirus";
			this.viable_mobtypes = new ByTable(new object [] { typeof(Mob_Living_Carbon_Human) });
			this.desc = "This disease transplants the genetic code of the initial vector into new hosts.";
			this.severity = "Medium";
		}

		// Function from file: dna_spread.dm
		public override dynamic Destroy(  ) {
			
			if ( Lang13.Bool( this.original_dna ) && this.transformed && Lang13.Bool( this.affected_mob ) ) {
				((Dna)this.original_dna).transfer_identity( this.affected_mob, true );
				this.affected_mob.real_name = this.affected_mob.dna.real_name;
				((Mob_Living_Carbon)this.affected_mob).updateappearance( null, true );
				((Mob)this.affected_mob).domutcheck();
				this.affected_mob.WriteMsg( "<span class='notice'>You feel more like yourself.</span>" );
			}
			return base.Destroy();
		}

		// Function from file: dna_spread.dm
		public override void stage_act(  ) {
			Dna transform_dna = null;

			base.stage_act();

			if ( !Lang13.Bool( this.affected_mob.dna ) ) {
				this.cure();
			}

			if ( !Lang13.Bool( this.strain_data["dna"] ) ) {
				this.strain_data["dna"] = Lang13.Call( this.affected_mob.dna.type );
				((Dna)this.affected_mob.dna).copy_dna( this.strain_data["dna"] );
				this.carrier = true;
				this.stage = 4;
				return;
			}

			switch ((int?)( this.stage )) {
				case 2:
					
					if ( Rand13.PercentChance( 8 ) ) {
						((Mob)this.affected_mob).emote( "sneeze" );
					}

					if ( Rand13.PercentChance( 8 ) ) {
						((Mob)this.affected_mob).emote( "cough" );
					}

					if ( Rand13.PercentChance( 1 ) ) {
						this.affected_mob.WriteMsg( "<span class='danger'>Your muscles ache.</span>" );

						if ( Rand13.PercentChance( 20 ) ) {
							((Mob_Living)this.affected_mob).take_organ_damage( 1 );
						}
					}

					if ( Rand13.PercentChance( 1 ) ) {
						this.affected_mob.WriteMsg( "<span class='danger'>Your stomach hurts.</span>" );

						if ( Rand13.PercentChance( 20 ) ) {
							((Mob_Living)this.affected_mob).adjustToxLoss( 2 );
							((Mob_Living)this.affected_mob).updatehealth();
						}
					}
					break;
				case 4:
					
					if ( !this.transformed && !this.carrier ) {
						this.original_dna = Lang13.Call( this.affected_mob.dna.type );
						((Dna)this.affected_mob.dna).copy_dna( this.original_dna );
						this.affected_mob.WriteMsg( "<span class='danger'>You don't feel like yourself..</span>" );
						transform_dna = this.strain_data["dna"];
						transform_dna.transfer_identity( this.affected_mob, true );
						this.affected_mob.real_name = this.affected_mob.dna.real_name;
						((Mob_Living_Carbon)this.affected_mob).updateappearance( null, true );
						((Mob)this.affected_mob).domutcheck();
						this.transformed = true;
						this.carrier = true;
					}
					break;
			}
			return;
		}

	}

}
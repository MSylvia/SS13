// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_MiningScanner : Obj_Item_MechaParts_MechaEquipment {

		public bool scanning = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=3;engineering=2";
			this.equip_cooldown = 30;
			this.icon_state = "mecha_analyzer";
		}

		// Function from file: mining_tools.dm
		public Obj_Item_MechaParts_MechaEquipment_MiningScanner ( dynamic loc = null ) : base( (object)(loc) ) {
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: mining_tools.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static mecha = null;
			Base_Mob pilot = null;
			ByTable occupant = null;

			
			if ( !( this.loc != null ) ) {
				GlobalVars.SSobj.processing.Remove( this );
				GlobalFuncs.qdel( this );
			}

			if ( this.scanning ) {
				return null;
			}

			if ( this.loc is Obj_Mecha_Working ) {
				mecha = this.loc;

				if ( !Lang13.Bool( ((dynamic)mecha).occupant ) ) {
					return null;
				}
				pilot = ((dynamic)mecha).occupant;
				occupant = new ByTable();
				occupant.Or( pilot );
				pilot.sight |= GlobalVars.SEE_TURFS;
				this.scanning = true;
				GlobalFuncs.mineral_scan_pulse( occupant, GlobalFuncs.get_turf( this.loc ) );
				Task13.Schedule( Convert.ToInt32( this.equip_cooldown ), (Task13.Closure)(() => {
					this.scanning = false;
					pilot.sight -= GlobalVars.SEE_TURFS;
					return;
				}));
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Flashlight_Pen : Obj_Item_Device_Flashlight {

		public bool holo_cooldown = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "";
			this.brightness_on = 2;
			this.icon_state = "penlight";
		}

		public Obj_Item_Device_Flashlight_Pen ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: flashlight.dm
		public void CreateHolo( dynamic tturf = null, dynamic creator = null ) {
			Obj_Effect_MedicalHolosign M = null;

			M = new Obj_Effect_MedicalHolosign( tturf );
			M.visible_message( "<span class='danger'>" + creator + " created a medical hologram!</span>" );
			this.holo_cooldown = true;
			Task13.Schedule( 100, (Task13.Closure)(() => {
				this.holo_cooldown = false;
				return;
			}));
			return;
		}

		// Function from file: flashlight.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic T = null;

			
			if ( !( proximity_flag == true ) ) {
				
				if ( this.holo_cooldown ) {
					user.WriteMsg( "<span class='warning'>" + this + " is not ready yet!</span>" );
					return false;
				}
				T = GlobalFuncs.get_turf( target );

				if ( Lang13.Bool( Lang13.FindIn( typeof(Mob_Living), T ) ) ) {
					this.CreateHolo( T, user );
					return false;
				}
			}
			base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			return false;
		}

	}

}
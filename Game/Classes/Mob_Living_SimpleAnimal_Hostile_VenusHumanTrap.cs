// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_VenusHumanTrap : Mob_Living_SimpleAnimal_Hostile {

		public ByTable grasping = new ByTable();
		public int max_grasps = 4;
		public int grasp_chance = 20;
		public int grasp_pull_chance = 85;
		public int grasp_range = 4;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.health = 50;
			this.maxHealth = 50;
			this.ranged = true;
			this.harm_intent_damage = 5;
			this.melee_damage_lower = 25;
			this.melee_damage_upper = 25;
			this.a_intent = "harm";
			this.attack_sound = "sound/weapons/bladeslice.ogg";
			this.atmos_requirements = new ByTable().Set( "min_oxy", 0 ).Set( "max_oxy", 0 ).Set( "min_tox", 0 ).Set( "max_tox", 0 ).Set( "min_co2", 0 ).Set( "max_co2", 0 ).Set( "min_n2", 0 ).Set( "max_n2", 0 );
			this.unsuitable_atmos_damage = 0;
			this.faction = new ByTable(new object [] { "hostile", "vines", "plants" });
			this.del_on_death = true;
			this.icon_state = "venus_human_trap";
		}

		public Mob_Living_SimpleAnimal_Hostile_VenusHumanTrap ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: venus_human_trap.dm
		public override bool CanAttack( dynamic the_target = null ) {
			bool _default = false;

			_default = base.CanAttack( (object)(the_target) );

			if ( _default ) {
				
				if ( this.grasping.Contains( the_target ) ) {
					return false;
				}
			}
			return _default;
		}

		// Function from file: venus_human_trap.dm
		public override void OpenFire( dynamic A = null ) {
			int dist = 0;

			dist = Map13.GetDistance( this, A );
			this.Beam( A, "vine", "icons/effects/spacevines.dmi", dist * 2, dist + 2, typeof(Obj_Effect_Ebeam_Vine) );
			((Ent_Static)A).attack_animal( this );
			return;
		}

		// Function from file: venus_human_trap.dm
		public override bool handle_automated_action(  ) {
			Mob_Living L = null;
			dynamic B = null;
			Mob_Living L2 = null;

			
			if ( base.handle_automated_action() ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.grasping, typeof(Mob_Living) )) {
					L = _a;
					

					if ( L.stat == 2 ) {
						B = this.grasping[L];

						if ( Lang13.Bool( B ) ) {
							B.End();
						}
						this.grasping.Remove( L );
					}

					if ( L.Adjacent( this ) ) {
						L.attack_animal( this );
					} else if ( Rand13.PercentChance( this.grasp_pull_chance ) ) {
						this.dir = Map13.GetDistance( this, L );
						Map13.Step( L, Map13.GetDistance( L, this ) );
						L.Weaken( 3 );
					}
				}

				if ( this.grasping.len < this.max_grasps ) {
					
					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this, this.grasp_range ), typeof(Mob_Living) )) {
						L2 = _b;
						

						if ( L2 == this || this.faction_check( L2 ) ) {
							continue;
						}

						if ( !this.grasping.Contains( L2 ) && L2 != this.target && Rand13.PercentChance( this.grasp_chance ) ) {
							L2.WriteMsg( new Txt( "<span class='userdanger'>" ).the( this ).item().str( " has you entangled!</span>" ).ToString() );
							this.grasping[L2] = this.Beam( L2, "vine", "icons/effects/spacevines.dmi", Double.PositiveInfinity, 5, typeof(Obj_Effect_Ebeam_Vine) );
							break;
						}
					}
				}
			}
			return false;
		}

	}

}
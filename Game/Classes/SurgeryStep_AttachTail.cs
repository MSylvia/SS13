// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_AttachTail : SurgeryStep {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "attach tail";
			this.implements = new ByTable().Set( typeof(Obj_Item_Organ_Severedtail), 100 );
			this.time = 64;
		}

		// Function from file: tail_modification.dm
		public override bool success( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			Mob L = null;
			dynamic T = null;

			L = target;
			((Ent_Static)user).visible_message( "" + user + " gives " + L + " a tail!", "<span class='notice'>You give " + L + " a tail. It adjusts to " + L + "'s melanin.</span>" );

			if ( !Lang13.Bool( ((dynamic)L).dna.features["mcolor"] ) ) {
				((dynamic)L).dna.features["mcolor"] = tool.color;
			}
			T = tool;
			((dynamic)L).dna.features["tail_lizard"] = T.markings;
			((dynamic)L).dna.species.mutant_bodyparts.Add( "tail_lizard" );
			GlobalFuncs.qdel( tool );
			((Mob_Living_Carbon_Human)L).update_body();
			return true;
		}

		// Function from file: tail_modification.dm
		public override int preop( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			((Ent_Static)user).visible_message( "" + user + " begins to attach a tail to " + target + "!", "<span class='notice'>You begin to attach the tail to " + target + "...</span>" );
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bedsheetbin : Obj_Structure {

		public int amount = 10;
		public ByTable sheets = new ByTable();
		public dynamic hidden = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.burn_state = 0;
			this.burntime = 20;
			this.icon_state = "linenbin-full";
		}

		public Obj_Structure_Bedsheetbin ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bedsheet_bin.dm
		public override void attack_tk( Mob_Living_Carbon_Human user = null ) {
			Obj_Item_Weapon_Bedsheet B = null;

			
			if ( this.amount >= 1 ) {
				this.amount--;

				if ( this.sheets.len > 0 ) {
					B = this.sheets[this.sheets.len];
					this.sheets.Remove( B );
				} else {
					B = new Obj_Item_Weapon_Bedsheet( this.loc );
				}
				B.loc = this.loc;
				user.WriteMsg( "<span class='notice'>You telekinetically remove " + B + " from " + this + ".</span>" );
				this.update_icon();

				if ( Lang13.Bool( this.hidden ) ) {
					this.hidden.loc = this.loc;
					this.hidden = null;
				}
			}
			this.add_fingerprint( user );
			return;
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			Obj_Item_Weapon_Bedsheet B = null;

			
			if ( Lang13.Bool( a.lying ) ) {
				return null;
			}

			if ( this.amount >= 1 ) {
				this.amount--;

				if ( this.sheets.len > 0 ) {
					B = this.sheets[this.sheets.len];
					this.sheets.Remove( B );
				} else {
					B = new Obj_Item_Weapon_Bedsheet( this.loc );
				}
				B.loc = a.loc;
				((Mob)a).put_in_hands( B );
				a.WriteMsg( "<span class='notice'>You take " + B + " out of " + this + ".</span>" );
				this.update_icon();

				if ( Lang13.Bool( this.hidden ) ) {
					this.hidden.loc = a.loc;
					a.WriteMsg( "<span class='notice'>" + this.hidden + " falls out of " + B + "!</span>" );
					this.hidden = null;
				}
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Bedsheet ) {
				
				if ( !Lang13.Bool( user.drop_item() ) ) {
					return null;
				}
				A.loc = this;
				this.sheets.Add( A );
				this.amount++;
				user.WriteMsg( "<span class='notice'>You put " + A + " in " + this + ".</span>" );
				this.update_icon();
			} else if ( this.amount != 0 && !Lang13.Bool( this.hidden ) && Convert.ToDouble( A.w_class ) < 4 ) {
				
				if ( !Lang13.Bool( user.drop_item() ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( A ).item().str( " is stuck to your hand, you cannot hide it among the sheets!</span>" ).ToString() );
					return null;
				}
				A.loc = this;
				this.hidden = A;
				user.WriteMsg( "<span class='notice'>You hide " + A + " among the sheets.</span>" );
			}
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override void burn(  ) {
			this.amount = 0;
			this.extinguish();
			this.update_icon();
			return;
		}

		// Function from file: bedsheet_bin.dm
		public override bool fire_act( bool? air = null, dynamic exposed_temperature = null, double? exposed_volume = null ) {
			
			if ( !( this.amount != 0 ) ) {
				return false;
			}
			base.fire_act( air, (object)(exposed_temperature), exposed_volume );
			return false;
		}

		// Function from file: bedsheet_bin.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			dynamic _a = this.amount; // Was a switch-case, sorry for the mess.
			if ( 1<=_a&&_a<=5 ) {
				this.icon_state = "linenbin-half";
			} else if ( _a==0 ) {
				this.icon_state = "linenbin-empty";
			} else {
				this.icon_state = "linenbin-full";
			}
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.amount < 1 ) {
				user.WriteMsg( "There are no bed sheets in the bin." );
			} else if ( this.amount == 1 ) {
				user.WriteMsg( "There is one bed sheet in the bin." );
			} else {
				user.WriteMsg( "There are " + this.amount + " bed sheets in the bin." );
			}
			return 0;
		}

	}

}
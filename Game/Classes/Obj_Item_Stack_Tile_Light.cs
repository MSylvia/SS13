// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Tile_Light : Obj_Item_Stack_Tile {

		public int state = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "light floor tile";
			this.flags = 64;
			this.attack_verb = new ByTable(new object [] { "bashed", "battered", "bludgeoned", "thrashed", "smashed" });
			this.turf_type = typeof(Tile_Simulated_Floor_Light);
			this.icon_state = "tile_e";
		}

		// Function from file: light.dm
		public Obj_Item_Stack_Tile_Light ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( Rand13.PercentChance( 5 ) ) {
				this.state = 3;
			} else if ( Rand13.PercentChance( 5 ) ) {
				this.state = 2;
			} else if ( Rand13.PercentChance( 10 ) ) {
				this.state = 1;
			} else {
				this.state = 0;
			}
			return;
		}

		// Function from file: light.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Crowbar ) {
				new Obj_Item_Stack_Sheet_Metal( user.loc );
				this.amount--;
				new Obj_Item_Stack_LightW( user.loc );

				if ( ( this.amount ??0) <= 0 ) {
					((Mob)user).unEquip( this, true );
					GlobalFuncs.qdel( this );
				}
			}
			return null;
		}

	}

}
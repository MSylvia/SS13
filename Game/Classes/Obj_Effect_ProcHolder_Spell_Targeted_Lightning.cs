// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Targeted_Lightning : Obj_Effect_ProcHolder_Spell_Targeted {

		public bool ready = false;
		public Image halo = null;
		public Sound Snd = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.charge_max = 300;
			this.invocation = "UN'LTD P'WAH!";
			this.invocation_type = "shout";
			this.cooldown_min = 30;
			this.random_target = true;
			this.action_icon_state = "lightning";
		}

		public Obj_Effect_ProcHolder_Spell_Targeted_Lightning ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: lightning.dm
		public override bool cast( dynamic targets = null, dynamic thearea = null, dynamic user = null ) {
			thearea = thearea ?? Task13.User;

			dynamic target = null;

			this.ready = false;
			target = targets[1];
			this.Snd = new Sound( null, false, true, this.Snd.channel );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( thearea ), this.Snd, 50, 0 );

			if ( Map13.GetDistance( thearea, target ) > ( this.range ??0) ) {
				thearea.WriteMsg( "<span class='notice'>They are too far away!</span>" );
				this.Reset( thearea );
				return false;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( thearea ), "sound/magic/lightningbolt.ogg", 50, 1 );
			((Ent_Static)thearea).Beam( target, "lightning" + Rand13.Int( 1, 12 ), "icons/effects/effects.dmi", 5 );
			this.Bolt( thearea, target, 30, 5, thearea );
			this.Reset( thearea );
			return false;
		}

		// Function from file: lightning.dm
		public override void revert_cast( Mob user = null ) {
			user = user ?? Task13.User;

			user.WriteMsg( "<span class='notice'>No target found in range.</span>" );
			this.Reset( user );
			base.revert_cast( user );
			return;
		}

		// Function from file: lightning.dm
		public void Bolt( dynamic origin = null, dynamic target = null, int bolt_energy = 0, int bounces = 0, dynamic user = null ) {
			user = user ?? Task13.User;

			dynamic current = null;
			ByTable possible_targets = null;
			Mob_Living M = null;
			dynamic next = null;

			((Ent_Static)origin).Beam( target, "lightning" + Rand13.Int( 1, 12 ), "icons/effects/effects.dmi", 5 );
			current = target;

			if ( bounces < 1 ) {
				((Mob_Living)current).electrocute_act( bolt_energy, "Lightning Bolt", null, true );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( current ), "sound/magic/LightningShock.ogg", 50, 1, -1 );
			} else {
				((Mob_Living)current).electrocute_act( bolt_energy, "Lightning Bolt", null, true );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( current ), "sound/magic/LightningShock.ogg", 50, 1, -1 );
				possible_targets = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.view_or_range( this.range, target, "view" ), typeof(Mob_Living) )) {
					M = _a;
					

					if ( user == M || target == M && this.los_check( current, M ) ) {
						continue;
					}
					possible_targets.Add( M );
				}

				if ( !( possible_targets.len != 0 ) ) {
					return;
				}
				next = Rand13.PickFromTable( possible_targets );

				if ( Lang13.Bool( next ) ) {
					this.Bolt( current, next, Num13.MaxInt( bolt_energy - 5, 5 ), bounces - 1, user );
				}
			}
			return;
		}

		// Function from file: lightning.dm
		public void Reset( dynamic user = null ) {
			user = user ?? Task13.User;

			this.ready = false;

			if ( this.halo != null ) {
				user.overlays.Remove( this.halo );
			}
			return;
		}

		// Function from file: lightning.dm
		public void StartChargeup( Mob user = null ) {
			user = user ?? Task13.User;

			this.ready = true;
			user.WriteMsg( "<span class='notice'>You start gathering the power.</span>" );
			this.Snd = new Sound( "sound/magic/lightning_chargeup.ogg", null, null, 7 );
			this.halo = new Image( "icons/effects/effects.dmi", null, "electricity", GlobalVars.EFFECTS_LAYER );
			user.overlays.Add( this.halo );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( user ), this.Snd, 50, 0 );

			if ( GlobalFuncs.do_mob( user, user, 100, true ) ) {
				
				if ( this.ready && this.cast_check( true ) ) {
					this.choose_targets();
				} else {
					this.Reset( user );
				}
			}
			return;
		}

		// Function from file: lightning.dm
		public override bool Click( dynamic loc = null, string control = null, string _params = null ) {
			
			if ( !this.ready && this.cast_check() ) {
				this.StartChargeup();
			}
			return true;
		}

	}

}
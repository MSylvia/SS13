// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Storage_Box : Obj_Item_Weapon_Storage {

		public Type foldable = typeof(Obj_Item_Stack_Sheet_Cardboard);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "syringe_kit";
			this.burn_state = 0;
			this.icon_state = "box";
		}

		public Obj_Item_Weapon_Storage_Box ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: boxes.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Stack_PackageWrap ) {
				return 0;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: boxes.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic I = null;

			base.attack_self( (object)(user), (object)(flag), emp );

			if ( !( this.foldable != null ) ) {
				return null;
			}

			if ( this.contents.len != 0 ) {
				user.WriteMsg( "<span class='warning'>You can't fold this box with items still inside!</span>" );
				return null;
			}

			if ( !( this.foldable is Type ) ) {
				return null;
			}
			this.close_all();
			user.WriteMsg( "<span class='notice'>You fold " + this + " flat.</span>" );
			I = Lang13.Call( this.foldable, GlobalFuncs.get_turf( this ) );
			user.drop_item();
			((Mob)user).put_in_hands( I );
			((Mob)user).update_inv_l_hand();
			((Mob)user).update_inv_r_hand();
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
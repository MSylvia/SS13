// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Singularity_EnergyBall : Obj_Singularity {

		public ByTable orbiting_balls = new ByTable();
		public dynamic produced_power = null;
		public bool is_orbiting = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -32;
			this.pixel_y = -32;
			this.current_size = 3;
			this.grav_pull = 0;
			this.contained = false;
			this.icon = "icons/obj/tesla_engine/energy_ball.dmi";
			this.icon_state = "energy_ball";
		}

		public Obj_Singularity_EnergyBall ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			
		}

		// Function from file: energy_ball.dm
		public override bool Bumped( dynamic AM = null ) {
			this.dust_mobs( AM );
			return false;
		}

		// Function from file: energy_ball.dm
		public override dynamic Bump( Ent_Dynamic A = null, dynamic yes = null ) {
			this.dust_mobs( A );
			return null;
		}

		// Function from file: energy_ball.dm
		public void dust_mobs( dynamic A = null ) {
			dynamic C = null;

			
			if ( A is Mob_Living_Carbon ) {
				C = A;
				((Mob)C).dust();
			}
			return;
		}

		// Function from file: energy_ball.dm
		public void handle_energy(  ) {
			Obj_Singularity_EnergyBall EB = null;
			Icon I = null;
			double? orbitsize = null;

			
			if ( ( this.energy ??0) >= 300 ) {
				this.energy -= 300;
				GlobalFuncs.playsound( this.loc, "sound/magic/lightning_chargeup.ogg", 100, 1, 5 );
				Task13.Schedule( 100, (Task13.Closure)(() => {
					EB = new Obj_Singularity_EnergyBall( this.loc );
					this.orbiting_balls.Add( EB );
					GlobalVars.poi_list.Remove( EB );
					EB.transform *= Rand13.Pick(new object [] { 0.3, 0.4, 0.5, 0.6, 061 });
					EB.is_orbiting = true;
					I = new Icon( this.icon, this.icon_state, this.dir );
					orbitsize = ( I.Width() + I.Height() ) * Convert.ToDouble( Rand13.Pick(new object [] { 0.5, 0.6, 061 }) );
					orbitsize -= ( orbitsize ??0) / Game13.icon_size * Game13.icon_size * 0.25;
					EB.orbit( this, orbitsize, Lang13.BoolNullable( Rand13.Pick(new object [] { GlobalVars.FALSE, GlobalVars.TRUE }) ), Rand13.Int( 10, 25 ), Lang13.IntNullable( Rand13.Pick(new object [] { 3, 4, 5, 6, 36 }) ) );
					return;
				}));
			}
			return;
		}

		// Function from file: energy_ball.dm
		public void move_the_basket_ball( int? move_amount = null ) {
			int? i = null;
			dynamic move_dir = null;
			Tile T = null;

			i = null;
			i = 0;

			while (( i ??0) < ( move_amount ??0)) {
				move_dir = Rand13.PickFromTable( GlobalVars.alldirs );
				T = Map13.GetStep( this, Convert.ToInt32( move_dir ) );

				if ( this.can_move( T ) ) {
					this.loc = Map13.GetStep( this, Convert.ToInt32( move_dir ) );
				}
				i++;
			}
			return;
		}

		// Function from file: energy_ball.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.orbiting_balls.len != 0 ) {
				user.WriteMsg( "The amount of orbiting mini-balls is " + this.orbiting_balls.len + "." );
			}
			return 0;
		}

		// Function from file: energy_ball.dm
		public override int? process( dynamic seconds = null ) {
			int? amount_to_move = null;
			double what_does_the_scouter_say_about_the_balls_power_level = 0;

			
			if ( !this.is_orbiting ) {
				this.handle_energy();
				amount_to_move = this.orbiting_balls.len * 2 + 2;
				what_does_the_scouter_say_about_the_balls_power_level = this.orbiting_balls.len * 1738260 + 3476520;
				this.move_the_basket_ball( amount_to_move );
				this.pixel_x = 0;
				this.pixel_y = 0;
				GlobalFuncs.playsound( this.loc, "sound/magic/lightningbolt.ogg", 100, 1, 5 );
				GlobalFuncs.tesla_zap( this, 7, what_does_the_scouter_say_about_the_balls_power_level );
				this.pixel_x = -32;
				this.pixel_y = -32;
				this.energy += Rand13.Int( 1, 3 );
			} else {
				this.energy = 0;
			}
			return null;
		}

		// Function from file: energy_ball.dm
		public override dynamic Destroy(  ) {
			Obj_Singularity_EnergyBall EB = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.orbiting_balls, typeof(Obj_Singularity_EnergyBall) )) {
				EB = _a;
				
				GlobalFuncs.qdel( EB );
			}
			base.Destroy();
			return null;
		}

	}

}
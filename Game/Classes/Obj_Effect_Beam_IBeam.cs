// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Beam_IBeam : Obj_Effect_Beam {

		public Obj_Effect_Beam_IBeam next = null;
		public Obj_Effect_Beam_IBeam previous = null;
		public Obj_Item_Device_Assembly_Infra master = null;
		public int limit = 0;
		public bool visible = false;
		public int left = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/projectiles.dmi";
			this.icon_state = "ibeam";
		}

		public Obj_Effect_Beam_IBeam ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: infrared.dm
		public override dynamic Destroy(  ) {
			
			if ( this.master.first == this ) {
				this.master.first = null;
			}

			if ( this.next != null ) {
				GlobalFuncs.qdel( this.next );
				this.next = null;
			}

			if ( this.previous != null ) {
				this.previous.next = null;
				this.master.last = this.previous;
			}
			return base.Destroy();
		}

		// Function from file: infrared.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			
			if ( O is Obj_Effect_Beam ) {
				return null;
			}
			this.hit();
			return null;
		}

		// Function from file: infrared.dm
		public override bool Bumped( dynamic AM = null ) {
			this.hit();
			return false;
		}

		// Function from file: infrared.dm
		public override dynamic Bump( Ent_Dynamic A = null, dynamic yes = null ) {
			GlobalFuncs.qdel( this );
			return null;
		}

		// Function from file: infrared.dm
		public override int? process( dynamic seconds = null ) {
			Obj_Effect_Beam_IBeam I = null;

			
			if ( this.loc.density || !( this.master != null ) ) {
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( this.left > 0 ) {
				this.left--;
			}

			if ( this.left < 1 ) {
				
				if ( !this.visible ) {
					this.invisibility = 101;
				} else {
					this.invisibility = 0;
				}
			} else {
				this.invisibility = 0;
			}

			if ( !( this.next != null ) && this.limit > 0 ) {
				I = new Obj_Effect_Beam_IBeam( this.loc );
				I.master = this.master;
				I.density = true;
				I.dir = this.dir;
				I.previous = this;
				this.next = I;
				Map13.Step( I, I.dir );

				if ( this.next != null ) {
					I.density = false;
					I.vis_spread( this.visible );
					I.limit = this.limit - 1;
					this.master.last = I;
					I.process();
				}
			}
			return null;
		}

		// Function from file: infrared.dm
		public void vis_spread( bool v = false ) {
			this.visible = v;

			if ( this.next != null ) {
				this.next.vis_spread( v );
			}
			return;
		}

		// Function from file: infrared.dm
		public void hit(  ) {
			
			if ( this.master != null ) {
				this.master.trigger_beam();
			}
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
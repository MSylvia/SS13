// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Gangtool : Obj_Item_Device {

		public dynamic gang = null;
		public bool recalling = false;
		public int outfits = 3;
		public bool free_pen = false;
		public bool promotable = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "walkietalkie";
			this.w_class = 1;
			this.throw_speed = 3;
			this.flags = 64;
			this.origin_tech = "programming=3;bluespace=2;syndicate=5";
			this.icon_state = "gangtool-white";
		}

		// Function from file: recaller.dm
		public Obj_Item_Device_Gangtool ( dynamic loc = null ) : base( (object)(loc) ) {
			
			if ( !( GlobalVars.ticker.mode.gang_points != null ) ) {
				GlobalVars.ticker.mode.gang_points = new GangPoints(  );
			}
			return;
		}

		// Function from file: recaller.dm
		public bool can_use( dynamic user = null ) {
			
			if ( !( user is Mob_Living_Carbon_Human ) ) {
				return false;
			}

			if ( ((Mob)user).restrained() || Lang13.Bool( user.lying ) || Lang13.Bool( user.stat ) || user.stunned != 0 || user.weakened != 0 ) {
				return false;
			}

			if ( !user.contents.Contains( this ) ) {
				return false;
			}

			if ( !Lang13.Bool( user.mind ) ) {
				return false;
			}

			if ( Lang13.Bool( this.gang ) ) {
				
				if ( this.gang.bosses.Contains( user.mind ) ) {
					return true;
				}
			} else if ( ((GameMode)GlobalVars.ticker.mode).get_all_gangsters().Contains( user.mind ) ) {
				return true;
			}
			return false;
		}

		// Function from file: recaller.dm
		public bool recall( Mob user = null ) {
			dynamic userturf = null;
			StationState end_state = null;

			
			if ( !this.can_use( user ) ) {
				return false;
			}

			if ( this.recalling ) {
				Task13.User.WriteMsg( "<span class='warning'>Error: Recall already in progress.</span>" );
				return false;
			}
			((Gang)this.gang).message_gangtools( "" + Task13.User + " is attempting to recall the emergency shuttle." );
			this.recalling = true;
			((dynamic)this.loc).WriteMsg( new Txt( "<span class='info'>" ).icon( this ).str( "Generating shuttle recall order with codes retrieved from last call signal...</span>" ).ToString() );
			Task13.Sleep( Rand13.Int( 100, 300 ) );

			if ( GlobalVars.SSshuttle.emergency.mode != 2 ) {
				user.WriteMsg( new Txt( "<span class='warning'>" ).icon( this ).str( "Emergency shuttle cannot be recalled at this time.</span>" ).ToString() );
				this.recalling = false;
				return false;
			}
			((dynamic)this.loc).WriteMsg( new Txt( "<span class='info'>" ).icon( this ).str( "Shuttle recall order generated. Accessing station long-range communication arrays...</span>" ).ToString() );
			Task13.Sleep( Rand13.Int( 100, 300 ) );

			if ( !( this.gang.dom_attempts != 0 ) ) {
				user.WriteMsg( new Txt( "<span class='warning'>" ).icon( this ).str( "Error: Unable to access communication arrays. Firewall has logged our signature and is blocking all further attempts.</span>" ).ToString() );
				this.recalling = false;
				return false;
			}
			userturf = GlobalFuncs.get_turf( user );

			if ( Lang13.Bool( userturf.z ) != true ) {
				user.WriteMsg( new Txt( "<span class='warning'>" ).icon( this ).str( "Error: Device out of range of station communication arrays.</span>" ).ToString() );
				this.recalling = false;
				return false;
			}
			end_state = new StationState();
			end_state.count();

			if ( GlobalVars.start_state.score( end_state ) * 100 < 80 ) {
				user.WriteMsg( new Txt( "<span class='warning'>" ).icon( this ).str( "Error: Station communication systems compromised. Unable to establish connection.</span>" ).ToString() );
				this.recalling = false;
				return false;
			}
			((dynamic)this.loc).WriteMsg( new Txt( "<span class='info'>" ).icon( this ).str( "Comm arrays accessed. Broadcasting recall signal...</span>" ).ToString() );
			Task13.Sleep( Rand13.Int( 100, 300 ) );
			this.recalling = false;
			GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has tried to recall the shuttle with a gangtool." );
			GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " has tried to recall the shuttle with a gangtool." );
			userturf = GlobalFuncs.get_turf( user );

			if ( Lang13.Bool( userturf.z ) == true ) {
				
				if ( GlobalVars.SSshuttle.cancelEvac( user ) ) {
					return true;
				}
			}
			((dynamic)this.loc).WriteMsg( new Txt( "<span class='info'>" ).icon( this ).str( "No response recieved. Emergency shuttle cannot be recalled at this time.</span>" ).ToString() );
			return false;
		}

		// Function from file: recaller.dm
		public void register_device( dynamic user = null ) {
			
			if ( Lang13.Bool( this.gang ) ) {
				return;
			}

			if ( this.promotable && ((GameMode)GlobalVars.ticker.mode).get_gangsters().Contains( user.mind ) || ((GameMode)GlobalVars.ticker.mode).get_gang_bosses().Contains( user.mind ) ) {
				this.gang = user.mind.gang_datum;
				this.gang.gangtools.Add( this );
				this.icon_state = "gangtool-" + this.gang.color;

				if ( !this.gang.bosses.Contains( user.mind ) ) {
					((GameMode)GlobalVars.ticker.mode).remove_gangster( user.mind, false, 2 );
					this.gang.bosses.Add( user.mind );
					user.mind.gang_datum = this.gang;
					user.mind.special_role = "" + this.gang.name + " Gang Lieutenant";
					((Gang)this.gang).add_gang_hud( user.mind );
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has been promoted to Lieutenant in the " + this.gang.name + " Gang" );
					this.free_pen = true;
					((Gang)this.gang).message_gangtools( "" + user + " has been promoted to Lieutenant." );
					user.WriteMsg( "<FONT size=3 color=red><B>You have been promoted to Lieutenant!</B></FONT>" );
					((GameMode)GlobalVars.ticker.mode).forge_gang_objectives( user.mind );
					((GameMode)GlobalVars.ticker.mode).greet_gang( user.mind, false );
					user.WriteMsg( "The <b>Gangtool</b> you registered will allow you to purchase weapons and equipment, and send messages to your gang." );
					user.WriteMsg( "Unlike regular gangsters, you may use <b>recruitment pens</b> to add recruits to your gang. Use them on unsuspecting crew members to recruit them. Don't forget to get your one free pen from the gangtool." );
				}
			} else {
				Task13.User.WriteMsg( "<span class='warning'>ACCESS DENIED: Unauthorized user.</span>" );
			}
			return;
		}

		// Function from file: recaller.dm
		public void ping_gang( Mob user = null ) {
			string message = null;
			ByTable members = null;
			dynamic gang_rank = null;
			string ping = null;
			Mind ganger = null;
			dynamic M = null;

			
			if ( !( user != null ) ) {
				return;
			}
			message = GlobalFuncs.stripped_input( user, "Discreetly send a gang-wide message.", "Send Message" );

			if ( !Lang13.Bool( message ) || !this.can_use( user ) ) {
				return;
			}

			if ( user.z > 2 ) {
				user.WriteMsg( new Txt( "<span class='info'>" ).icon( this ).str( "Error: Station out of range.</span>" ).ToString() );
				return;
			}
			members = new ByTable();
			members.Add( this.gang.gangsters );
			members.Add( this.gang.bosses );

			if ( members.len != 0 ) {
				gang_rank = this.gang.bosses.Find( user.mind );

				dynamic _a = gang_rank; // Was a switch-case, sorry for the mess.
				if ( _a==1 ) {
					gang_rank = "Gang Boss";
				} else if ( _a==2 ) {
					gang_rank = "1st Lieutenant";
				} else if ( _a==3 ) {
					gang_rank = "2nd Lieutenant";
				} else if ( _a==4 ) {
					gang_rank = "3rd Lieutenant";
				} else {
					gang_rank = "" + ( gang_rank - 1 ) + "th Lieutenant";
				}
				ping = "<span class='danger'><B><i>" + this.gang.name + " " + gang_rank + "</i>: " + message + "</B></span>";

				foreach (dynamic _b in Lang13.Enumerate( members, typeof(Mind) )) {
					ganger = _b;
					

					if ( Lang13.Bool( ganger.current ) && Convert.ToDouble( ganger.current.z ) <= 2 && Lang13.Bool( ganger.current.stat ) == false ) {
						ganger.current.WriteMsg( ping );
					}
				}

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.dead_mob_list )) {
					M = _c;
					
					M.WriteMsg( new Txt( "<a href='?src=" ).Ref( M ).str( ";follow=" ).Ref( user ).str( "'>(F)</a> " ).item( ping ).ToString() );
				}
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " Messaged " + this.gang.name + " Gang: " + message + "." );
			}
			return;
		}

		// Function from file: recaller.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			int pointcost = 0;
			Type item_type = null;
			dynamic usrarea = null;
			dynamic usrturf = null;
			Obj obj = null;
			dynamic purchased = null;
			Mob H = null;

			
			if ( !this.can_use( Task13.User ) ) {
				return null;
			}
			this.add_fingerprint( Task13.User );

			if ( Lang13.Bool( href_list["register"] ) ) {
				this.register_device( Task13.User );
			} else if ( !Lang13.Bool( this.gang ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["purchase"] ) ) {
				
				dynamic _b = href_list["purchase"]; // Was a switch-case, sorry for the mess.
				if ( _b=="spraycan" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 5 ) {
						item_type = typeof(Obj_Item_Toy_Crayon_Spraycan_Gang);
						pointcost = 5;
					}
				} else if ( _b=="switchblade" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 10 ) {
						item_type = typeof(Obj_Item_Weapon_Switchblade);
						pointcost = 10;
					}
				} else if ( _b=="necklace" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 1 ) {
						item_type = typeof(Obj_Item_Clothing_Tie_DopeNecklace);
						pointcost = 1;
					}
				} else if ( _b=="pistol" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 25 ) {
						item_type = typeof(Obj_Item_Weapon_Gun_Projectile_Automatic_Pistol);
						pointcost = 25;
					}
				} else if ( _b=="10mmammo" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 10 ) {
						item_type = typeof(Obj_Item_AmmoBox_Magazine_M10mm);
						pointcost = 10;
					}
				} else if ( _b=="uzi" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 60 ) {
						item_type = typeof(Obj_Item_Weapon_Gun_Projectile_Automatic_MiniUzi);
						pointcost = 60;
					}
				} else if ( _b=="9mmammo" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 40 ) {
						item_type = typeof(Obj_Item_AmmoBox_Magazine_Uzim9mm);
						pointcost = 40;
					}
				} else if ( _b=="scroll" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 30 ) {
						item_type = typeof(Obj_Item_Weapon_SleepingCarpScroll);
						Task13.User.WriteMsg( "<span class='notice'>Anyone who reads the <b>sleeping carp scroll</b> will learn secrets of the sleeping carp martial arts style.</span>" );
						pointcost = 30;
					}
				} else if ( _b=="wrestlingbelt" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 20 ) {
						item_type = typeof(Obj_Item_Weapon_Storage_Belt_Champion_Wrestling);
						Task13.User.WriteMsg( "<span class='notice'>Anyone wearing the <b>wresting belt</b> will know how to be effective with wrestling.</span>" );
						pointcost = 20;
					}
				} else if ( _b=="bostaff" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 10 ) {
						item_type = typeof(Obj_Item_Weapon_Twohanded_Bostaff);
						pointcost = 10;
					}
				} else if ( _b=="C4" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 10 ) {
						item_type = typeof(Obj_Item_Weapon_C4);
						pointcost = 10;
					}
				} else if ( _b=="pen" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 50 || this.free_pen ) {
						item_type = typeof(Obj_Item_Weapon_Pen_Gang);
						Task13.User.WriteMsg( "<span class='notice'>More <b>recruitment pens</b> will allow you to recruit gangsters faster. Only gang leaders can recruit with pens.</span>" );

						if ( this.free_pen ) {
							this.free_pen = false;
						} else {
							pointcost = 50;
						}
					}
				} else if ( _b=="implant" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 15 ) {
						item_type = typeof(Obj_Item_Weapon_Implanter_Gang);
						Task13.User.WriteMsg( "<span class='notice'>The <b>implant breaker</b> is a single-use device that destroys all implants within the target before trying to recruit them to your gang. Also works on enemy gangsters.</span>" );
						pointcost = 15;
					}
				} else if ( _b=="gangtool" ) {
					
					if ( Convert.ToDouble( this.gang.points ) >= 10 ) {
						
						if ( Task13.User.mind == this.gang.bosses[1] ) {
							item_type = typeof(Obj_Item_Device_Gangtool_Spare_Lt);

							if ( this.gang.bosses.len < 3 ) {
								Task13.User.WriteMsg( "<span class='notice'><b>Gangtools</b> allow you to promote a gangster to be your Lieutenant, enabling them to recruit and purchase items like you. Simply have them register the gangtool. You may promote up to " + ( 3 - this.gang.bosses.len ) + " more Lieutenants</span>" );
							}
						} else {
							item_type = typeof(Obj_Item_Device_Gangtool_Spare);
						}
						pointcost = 10;
					}
				} else if ( _b=="dominator" ) {
					
					if ( !( this.gang.dom_attempts != 0 ) ) {
						return null;
					}
					usrarea = GlobalFuncs.get_area( Task13.User.loc );
					usrturf = GlobalFuncs.get_turf( Task13.User.loc );

					if ( Lang13.Initial( usrarea, "name" ) == "Space" || usrturf is Tile_Space || Task13.User.z != 1 ) {
						Task13.User.WriteMsg( "<span class='warning'>You can only use this on the station!</span>" );
						return null;
					}

					foreach (dynamic _a in Lang13.Enumerate( usrturf, typeof(Obj) )) {
						obj = _a;
						

						if ( obj.density ) {
							Task13.User.WriteMsg( "<span class='warning'>There's not enough room here!</span>" );
							return null;
						}
					}

					if ( ( this.gang.territory | this.gang.territory_new ).Contains( usrarea.type ) ) {
						
						if ( Convert.ToDouble( this.gang.points ) >= 30 ) {
							item_type = typeof(Obj_Machinery_Dominator);
							Task13.User.WriteMsg( "<span class='notice'>The <b>dominator</b> will secure your gang's dominance over the station. Turn it on when you are ready to defend it.</span>" );
							pointcost = 30;
						}
					} else {
						Task13.User.WriteMsg( "<span class='warning'>The <b>dominator</b> can be spawned only on territory controlled by your gang!</span>" );
						return null;
					}
				}

				if ( item_type != null ) {
					this.gang.points -= pointcost;

					if ( item_type is Type ) {
						purchased = Lang13.Call( item_type, GlobalFuncs.get_turf( Task13.User ), this.gang );
						H = Task13.User;
						H.put_in_any_hand_if_possible( purchased );

						if ( pointcost != 0 ) {
							((Gang)this.gang).message_gangtools( "A " + href_list["purchase"] + " was purchased by " + Task13.User.real_name + " for " + pointcost + " Influence." );
						}
					}
					GlobalFuncs.log_game( "A " + href_list["purchase"] + " was purchased by " + GlobalFuncs.key_name( Task13.User ) + " (" + this.gang.name + " Gang) for " + pointcost + " Influence." );
				} else {
					Task13.User.WriteMsg( "<span class='warning'>Not enough influence.</span>" );
				}
			} else if ( Lang13.Bool( href_list["choice"] ) ) {
				
				dynamic _c = href_list["choice"]; // Was a switch-case, sorry for the mess.
				if ( _c=="recall" ) {
					
					if ( Task13.User.mind == this.gang.bosses[1] ) {
						this.recall( Task13.User );
					}
				} else if ( _c=="outfit" ) {
					
					if ( this.outfits > 0 ) {
						
						if ( ((Gang)this.gang).gang_outfit( Task13.User, this ) ) {
							Task13.User.WriteMsg( "<span class='notice'><b>Gang Outfits</b> can act as armor with moderate protection against ballistic and melee attacks. Every gangster wearing one will also help grow your gang's influence.</span>" );
							this.outfits -= 1;
						}
					}
				} else if ( _c=="ping" ) {
					this.ping_gang( Task13.User );
				}
			}
			this.attack_self( Task13.User );
			return null;
		}

		// Function from file: recaller.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;
			bool isboss = false;
			int points = 0;
			string gangtooltext = null;
			Browser popup = null;

			
			if ( !this.can_use( user ) ) {
				return null;
			}

			if ( !Lang13.Bool( this.gang ) ) {
				dat += "This device is not registered.<br><br>";

				if ( ((GameMode)GlobalVars.ticker.mode).get_gang_bosses().Contains( user.mind ) ) {
					
					if ( this.promotable && user.mind.gang_datum.bosses.len < 3 ) {
						dat += "Give this device to another member of your organization to use to promote them to Lieutenant.<br><br>";
						dat += "If this is meant as a spare device for yourself:<br>";
					}
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";register=1'>Register Device as Spare</a><br>" ).ToString();
				} else if ( this.promotable ) {
					
					if ( user.mind.gang_datum.bosses.len < 3 ) {
						dat += "You have been selected for a promotion!<br>";
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";register=1'>Accept Promotion</a><br>" ).ToString();
					} else {
						dat += "No promotions available: All positions filled.<br>";
					}
				} else {
					dat += "This device is not authorized to promote.<br>";
				}
			} else {
				
				if ( Lang13.Bool( Lang13.IsNumber( this.gang.dom_timer ) ) ) {
					dat += "<center><font color='red'>Takeover In Progress:<br><B>" + this.gang.dom_timer + " seconds remain</B></font></center>";
				}
				isboss = user.mind == this.gang.bosses[1];
				points = Convert.ToInt32( this.gang.points );
				dat += "Registration: <B>" + this.gang.name + " Gang " + ( isboss ? "Boss" : "Lieutenant" ) + "</B><br>";
				dat += "Organization Size: <B>" + ( this.gang.gangsters.len + this.gang.bosses.len ) + "</B> | Station Control: <B>" + Num13.Round( this.gang.territory.len / GlobalVars.start_state.num_territories * 100, 1 ) + "%</B><br>";
				dat += "Gang Influence: <B>" + points + "</B><br>";
				dat += "Time until Influence grows: <B>" + ( points >= 999 ? "--:--" : String13.FormatTime( GlobalVars.ticker.mode.gang_points.next_point_time - Game13.time, "mm:ss" ) ) + "</B><br>";
				dat += "<hr>";
				dat += "<B>Gangtool Functions:</B><br>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=ping'>Send Message to Gang</a><br>" ).ToString();

				if ( this.outfits > 0 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=outfit'>Create Armored Gang Outfit</a><br>" ).ToString();
				} else {
					dat += "<b>Create Gang Outfit</b> (Restocking)<br>";
				}

				if ( isboss ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=recall'>Recall Emergency Shuttle</a><br>" ).ToString();
				}
				dat += "<br>";
				dat += "<B>Purchase Weapons:</B><br>";

				if ( this.gang.fighting_style == "normal" ) {
					dat += "(10 Influence) ";

					if ( points >= 10 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=switchblade'>Switchblade</a><br>" ).ToString();
					} else {
						dat += "Switchblade<br>";
					}
					dat += "(25 Influence) ";

					if ( points >= 25 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=pistol'>10mm Pistol</a><br>" ).ToString();
					} else {
						dat += "10mm Pistol<br>";
					}
					dat += "&nbsp;&#8627;(10 Influence) ";

					if ( points >= 10 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=10mmammo'>10mm Ammo</a><br>" ).ToString();
					} else {
						dat += "10mm Ammo<br>";
					}
					dat += "(60 Influence) ";

					if ( points >= 60 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=uzi'>Uzi SMG</a><br>" ).ToString();
					} else {
						dat += "Uzi SMG<br>";
					}
					dat += "&nbsp;&#8627;(40 Influence) ";

					if ( points >= 40 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=9mmammo'>Uzi Ammo</a><br>" ).ToString();
					} else {
						dat += "Uzi Ammo<br>";
					}
					dat += "(1 Influence) ";

					if ( points >= 1 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=necklace'>Dope Necklace</a><br>" ).ToString();
					} else {
						dat += "Dope Necklace<br>";
					}
					dat += "<br>";
				} else if ( this.gang.fighting_style == "martial" ) {
					dat += "(10 Influence) ";

					if ( points >= 10 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=bostaff'>Bo Staff</a><br>" ).ToString();
					} else {
						dat += "Bo Staff<br>";
					}
					dat += "(20 Influence) ";

					if ( points >= 20 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=wrestlingbelt'>Wrestling Belt</a><br>" ).ToString();
					} else {
						dat += "Wrestling Belt<br>";
					}
					dat += "(30 Influence) ";

					if ( points >= 30 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=scroll'>Sleeping Carp Scroll (one-use)</a><br>" ).ToString();
					} else {
						dat += "Sleeping Carp Scroll (one-use)<br>";
					}
					dat += "<br>";
				}
				dat += "<B>Purchase Equipment:</B><br>";
				dat += "(5 Influence) ";

				if ( points >= 5 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=spraycan'>Territory Spraycan</a><br>" ).ToString();
				} else {
					dat += "Territory Spraycan<br>";
				}
				dat += "(10 Influence) ";

				if ( points >= 10 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=C4'>C4 Explosive</a><br>" ).ToString();
				} else {
					dat += "C4 Explosive<br>";
				}
				dat += "(15 Influence) ";

				if ( points >= 15 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=implant'>Implant Breaker</a><br>" ).ToString();
				} else {
					dat += "Implant Breaker<br>";
				}

				if ( this.free_pen ) {
					dat += "(GET ONE FREE) ";
				} else {
					dat += "(50 Influence) ";
				}

				if ( points >= 50 || this.free_pen ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=pen'>Recruitment Pen</a><br>" ).ToString();
				} else {
					dat += "Recruitment Pen<br>";
				}
				gangtooltext = "Spare Gangtool";

				if ( isboss && this.gang.bosses.len < 3 ) {
					gangtooltext = "Promote a Gangster";
				}
				dat += "(10 Influence) ";

				if ( points >= 10 ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=gangtool'>" ).item( gangtooltext ).str( "</a><br>" ).ToString();
				} else {
					dat += "" + gangtooltext + "<br>";
				}

				if ( !( this.gang.dom_attempts != 0 ) ) {
					dat += "(Out of stock) Station Dominator<br>";
				} else {
					dat += "(30 Influence) ";

					if ( points >= 30 ) {
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";purchase=dominator'><b>Station Dominator</b></a><br>" ).ToString();
					} else {
						dat += "<b>Station Dominator</b><br>";
					}
					dat += "<i>(Estimated Takeover Time: " + Num13.Round( GlobalFuncs.get_domination_time( this.gang ) / 60, 0.1 ) + " minutes)</i><br>";
				}
			}
			dat += "<br>";
			dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=refresh'>Refresh</a><br>" ).ToString();
			popup = new Browser( user, "gangtool", "Welcome to GangTool v3.2", 340, 625 );
			popup.set_content( dat );
			popup.open();
			return null;
		}

	}

}
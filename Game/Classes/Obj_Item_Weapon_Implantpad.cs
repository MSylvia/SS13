// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Implantpad : Obj_Item_Weapon {

		public dynamic v_case = null;
		public dynamic broadcasting = null;
		public bool listening = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.throw_speed = 3;
			this.throw_range = 5;
			this.w_class = 2;
			this.icon_state = "implantpad-0";
		}

		public Obj_Item_Weapon_Implantpad ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: implantpad.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic T = null;
			dynamic M = null;

			base.Topic( href, href_list, (object)(hsrc) );

			if ( Task13.User.stat != 0 ) {
				return null;
			}

			if ( Task13.User.contents.Find( this ) != 0 || Map13.GetDistance( this, Task13.User ) <= 1 && this.loc is Tile ) {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["tracking_id"] ) ) {
					T = this.v_case.imp;
					T.id += String13.ParseNumber( href_list["tracking_id"] );
					T.id = Num13.MinInt( 100, Convert.ToInt32( T.id ) );
					T.id = Num13.MaxInt( 1, Convert.ToInt32( T.id ) );
				}

				if ( this.loc is Mob ) {
					this.attack_self( this.loc );
				} else {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( this, 1 ) )) {
						M = _a;
						

						if ( Lang13.Bool( M.client ) ) {
							this.attack_self( M );
						}
					}
				}
				this.add_fingerprint( Task13.User );
			} else {
				Interface13.Browse( Task13.User, null, "window=implantpad" );
			}
			return null;
		}

		// Function from file: implantpad.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			((Mob)user).set_machine( this );
			dat = "<B>Implant Mini-Computer:</B><HR>";

			if ( Lang13.Bool( this.v_case ) ) {
				
				if ( Lang13.Bool( this.v_case.imp ) ) {
					
					if ( this.v_case.imp is Obj_Item_Weapon_Implant ) {
						dat += this.v_case.imp.get_data();

						if ( this.v_case.imp is Obj_Item_Weapon_Implant_Tracking ) {
							dat += new Txt( "ID (1-100):\n					<A href='byond://?src=" ).Ref( this ).str( ";tracking_id=-10'>-</A>\n					<A href='byond://?src=" ).Ref( this ).str( ";tracking_id=-1'>-</A> " ).item( this.v_case.imp.id ).str( "\n					<A href='byond://?src=" ).Ref( this ).str( ";tracking_id=1'>+</A>\n					<A href='byond://?src=" ).Ref( this ).str( ";tracking_id=10'>+</A><BR>" ).ToString();
						}
					}
				} else {
					dat += "The implant casing is empty.";
				}
			} else {
				dat += "Please insert an implant casing!";
			}
			Interface13.Browse( user, dat, "window=implantpad" );
			GlobalFuncs.onclose( user, "implantpad" );
			return null;
		}

		// Function from file: implantpad.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Implantcase ) {
				
				if ( !Lang13.Bool( this.v_case ) ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					A.loc = this;
					this.v_case = A;
				}
			} else {
				return null;
			}
			this.update_icon();
			return null;
		}

		// Function from file: implantpad.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( Lang13.Bool( this.v_case ) && ( a.l_hand == this || a.r_hand == this ) ) {
				((Mob)a).put_in_active_hand( this.v_case );
				((Ent_Static)this.v_case).add_fingerprint( a );
				this.v_case = null;
				this.add_fingerprint( a );
				this.update_icon();
			} else {
				return base.attack_hand( (object)(a), b, c );
			}
			return null;
		}

		// Function from file: implantpad.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( Lang13.Bool( this.v_case ) ) {
				this.icon_state = "implantpad-1";
			} else {
				this.icon_state = "implantpad-0";
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Suit_Space_Hardsuit : Obj_Item_Clothing_Suit_Space {

		public dynamic helmet = null;
		public Type helmettype = typeof(Obj_Item_Clothing_Head_Helmet_Space_Hardsuit);
		public Obj_Item_Weapon_Tank_Jetpack_Suit jetpack = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "eng_hardsuit";
			this.armor = new ByTable().Set( "melee", 10 ).Set( "bullet", 5 ).Set( "laser", 10 ).Set( "energy", 5 ).Set( "bomb", 10 ).Set( "bio", 100 ).Set( "rad", 75 );
			this.v_allowed = new ByTable(new object [] { typeof(Obj_Item_Device_Flashlight), typeof(Obj_Item_Weapon_Tank_Internals), typeof(Obj_Item_Device_TScanner), typeof(Obj_Item_Weapon_Rcd) });
			this.siemens_coefficient = 0;
			this.action_button_name = "Toggle Helmet";
			this.icon_state = "hardsuit-engineering";
		}

		// Function from file: toggles.dm
		public Obj_Item_Clothing_Suit_Space_Hardsuit ( dynamic loc = null ) : base( (object)(loc) ) {
			this.MakeHelmet();

			if ( !( this.jetpack != null ) ) {
				this.verbs.Remove( typeof(Obj_Item_Clothing_Suit_Space_Hardsuit).GetMethod( "Jetpack" ) );
				this.verbs.Remove( typeof(Obj_Item_Clothing_Suit_Space_Hardsuit).GetMethod( "Jetpack_Rockets" ) );
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: toggles.dm
		public override bool dropped( dynamic user = null ) {
			this.RemoveHelmet();
			return false;
		}

		// Function from file: toggles.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			
			if ( !( this.helmettype != null ) ) {
				return;
			}

			if ( slot != 13 ) {
				this.RemoveHelmet();
			}
			base.equipped( user, (object)(slot) );
			return;
		}

		// Function from file: toggles.dm
		public override void ui_action_click(  ) {
			base.ui_action_click();
			this.ToggleHelmet();
			return;
		}

		// Function from file: toggles.dm
		public void ToggleHelmet(  ) {
			Ent_Static H = null;

			H = this.loc;

			if ( !( this.helmettype != null ) ) {
				return;
			}

			if ( !Lang13.Bool( this.helmet ) ) {
				return;
			}

			if ( !this.suittoggled ) {
				
				if ( this.loc is Mob_Living_Carbon_Human ) {
					
					if ( ((dynamic)H).wear_suit != this ) {
						((dynamic)H).WriteMsg( "<span class='warning'>You must be wearing " + this + " to engage the helmet!</span>" );
						return;
					}

					if ( Lang13.Bool( ((dynamic)H).head ) ) {
						((dynamic)H).WriteMsg( "<span class='warning'>You're already wearing something on your head!</span>" );
						return;
					} else {
						((dynamic)H).WriteMsg( "<span class='notice'>You engage the helmet on the hardsuit.</span>" );
						((dynamic)H).equip_to_slot_if_possible( this.helmet, 11, 0, 0, 1 );
						this.suittoggled = true;
						((dynamic)H).update_inv_wear_suit();
						GlobalFuncs.playsound( this.loc, "sound/mecha/mechmove03.ogg", 50, 1 );
					}
				}
			} else {
				((dynamic)H).WriteMsg( "<span class='notice'>You disengage the helmet on the hardsuit.</span>" );
				GlobalFuncs.playsound( this.loc, "sound/mecha/mechmove03.ogg", 50, 1 );
				this.RemoveHelmet();
			}
			return;
		}

		// Function from file: toggles.dm
		public void RemoveHelmet(  ) {
			Ent_Static H = null;

			
			if ( !Lang13.Bool( this.helmet ) ) {
				return;
			}
			this.suittoggled = false;

			if ( this.helmet.loc is Mob_Living_Carbon_Human ) {
				H = this.helmet.loc;

				if ( Lang13.Bool( this.helmet.on ) ) {
					((Obj_Item)this.helmet).attack_self( H );
				}
				((Mob)H).unEquip( this.helmet, true );
				((dynamic)H).update_inv_wear_suit();
			}
			this.helmet.loc = this;
			return;
		}

		// Function from file: toggles.dm
		public void MakeHelmet(  ) {
			dynamic W = null;

			
			if ( !( this.helmettype != null ) ) {
				return;
			}

			if ( !Lang13.Bool( this.helmet ) ) {
				W = Lang13.Call( this.helmettype, this );
				W.suit = this;
				this.helmet = W;
			}
			return;
		}

		// Function from file: toggles.dm
		public override dynamic Destroy(  ) {
			
			if ( Lang13.Bool( this.helmet ) ) {
				this.helmet.suit = null;
				GlobalFuncs.qdel( this.helmet );
			}
			GlobalFuncs.qdel( this.jetpack );
			return base.Destroy();
		}

		// Function from file: hardsuit.dm
		[Verb]
		[VerbInfo( name: "Toggle Inbuilt Jetpack Stabilization", group: "Object" )]
		public void Jetpack_Rockets(  ) {
			this.jetpack.toggle_rockets();
			return;
		}

		// Function from file: hardsuit.dm
		[Verb]
		[VerbInfo( name: "Toggle Inbuilt Jetpack", group: "Object" )]
		public void Jetpack(  ) {
			this.jetpack.__CallVerb("Toggle Jetpack" );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Areaeditor_Blueprints : Obj_Item_Areaeditor {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fluffnotice = "Property of Nanotrasen. For heads of staff only. Store in high-secure storage.";
		}

		public Obj_Item_Areaeditor_Blueprints ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: blueprints.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			base.Topic( href, href_list, (object)(hsrc) );

			if ( Lang13.Bool( href_list["edit_area"] ) ) {
				
				if ( this.get_area_type() != ( GlobalVars.AREA_STATION ?1:0) ) {
					return null;
				}
				this.edit_area();
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: blueprints.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic _default = null;

			Ent_Static A = null;
			Browser popup = null;

			_default = base.attack_self( (object)(user), (object)(flag), emp );
			A = this.get_area();

			if ( this.get_area_type() == ( GlobalVars.AREA_STATION ?1:0) ) {
				_default += new Txt( "<p>According to " ).the( this ).item().str( ", you are now in <b>\"" ).item( String13.HtmlEncode( A.name ) ).str( "\"</b>.</p>" ).ToString();
				_default += new Txt( "<p>You may <a href='?src=" ).Ref( this ).str( ";edit_area=1'>make an amendment</a> to the drawing.</p>" ).ToString();
			}
			popup = new Browser( user, "blueprints", "" + this, 700, 500 );
			popup.set_content( _default );
			popup.open();
			GlobalFuncs.onclose( user, "blueprints" );
			return _default;
		}

	}

}
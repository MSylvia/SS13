// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Melee_Energy_Sword_Saber : Obj_Item_Weapon_Melee_Energy_Sword {

		public Obj_Item_Weapon_Melee_Energy_Sword_Saber ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: energy.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Weapon_Twohanded_Dualsaber newSaber = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Melee_Energy_Sword_Saber ) {
				
				if ( A == this ) {
					user.WriteMsg( "<span class='notice'>You try to attach the end of the energy sword to... itself. You're not very smart, are you?</span>" );

					if ( user is Mob_Living_Carbon_Human ) {
						((Mob_Living)user).adjustBrainLoss( 10 );
					}
				} else {
					user.WriteMsg( "<span class='notice'>You attach the ends of the two energy swords, making a single double-bladed weapon! You're cool.</span>" );
					newSaber = new Obj_Item_Weapon_Twohanded_Dualsaber( user.loc );

					if ( this.hacked ) {
						newSaber.hacked = true;
						newSaber.item_color = "rainbow";
					}
					((Mob)user).unEquip( A );
					((Mob)user).unEquip( this );
					GlobalFuncs.qdel( A );
					GlobalFuncs.qdel( this );
					((Mob)user).put_in_hands( newSaber );
				}
			} else if ( A is Obj_Item_Device_Multitool ) {
				
				if ( !this.hacked ) {
					this.hacked = true;
					this.item_color = "rainbow";
					user.WriteMsg( "<span class='warning'>RNBW_ENGAGE</span>" );

					if ( this.active ) {
						this.icon_state = "swordrainbow";

						if ( user.r_hand == this ) {
							((Mob)user).update_inv_r_hand(  );
						} else if ( user.l_hand == this ) {
							((Mob)user).update_inv_l_hand(  );
						}
					}
				} else {
					user.WriteMsg( "<span class='warning'>It's already fabulous!</span>" );
				}
			}
			return null;
		}

	}

}
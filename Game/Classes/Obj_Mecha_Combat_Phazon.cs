// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Combat_Phazon : Obj_Mecha_Combat {

		public bool phasing = false;
		public int phasing_energy_drain = 200;
		public Action_Innate_Mecha_MechSwitchDamtype switch_damtype_action = new Action_Innate_Mecha_MechSwitchDamtype();
		public Action_Innate_Mecha_MechTogglePhasing phasing_action = new Action_Innate_Mecha_MechTogglePhasing();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.infra_luminosity = 3;
			this.step_in = 2;
			this.step_energy_drain = 3;
			this.health = 200;
			this.deflect_chance = 30;
			this.damage_absorption = new ByTable().Set( "brute", 061 ).Set( "fire", 061 ).Set( "bullet", 061 ).Set( "laser", 061 ).Set( "energy", 061 ).Set( "bomb", 061 );
			this.wreckage = typeof(Obj_Structure_MechaWreckage_Phazon);
			this.internal_damage_threshold = 25;
			this.force = 15;
			this.icon_state = "phazon";
		}

		public Obj_Mecha_Combat_Phazon ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: phazon.dm
		public override void RemoveActions( dynamic user = null, bool? human_occupant = null ) {
			human_occupant = human_occupant ?? false;

			base.RemoveActions( (object)(user), human_occupant );
			this.switch_damtype_action.Remove( user );
			this.phasing_action.Remove( user );
			return;
		}

		// Function from file: phazon.dm
		public override void GrantActions( dynamic user = null, bool? human_occupant = null ) {
			human_occupant = human_occupant ?? false;

			base.GrantActions( (object)(user), human_occupant );
			this.switch_damtype_action.chassis = this;
			this.switch_damtype_action.Grant( user );
			this.phasing_action.chassis = this;
			this.phasing_action.Grant( user );
			return;
		}

		// Function from file: phazon.dm
		public override void click_action( dynamic target = null, Mob user = null ) {
			
			if ( this.phasing ) {
				this.occupant_message( "Unable to interact with objects while phasing" );
				return;
			} else {
				base.click_action( (object)(target), user ); return;
			}
		}

		// Function from file: phazon.dm
		public override string get_stats_part(  ) {
			string output = null;

			output = base.get_stats_part();
			output += "<b>Phasing:</b> " + ( this.phasing ? "on" : "off" ) + "<br>\n				<b>Damage Type:</b> " + this.damtype + "\n					";
			return output;
		}

		// Function from file: phazon.dm
		public override dynamic Bump( Ent_Dynamic A = null, dynamic yes = null ) {
			dynamic _default = null;

			
			if ( this.phasing && this.get_charge() >= this.phasing_energy_drain && !this.throwing ) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					
					if ( this.can_move ) {
						this.can_move = false;
						Icon13.Flick( "phazon-phase", this );
						this.loc = Map13.GetStep( this, this.dir );
						this.use_power( this.phasing_energy_drain );
						Task13.Sleep( Convert.ToInt32( this.step_in * 3 ) );
						this.can_move = true;
					}
					return;
				}));
			} else {
				_default = base.Bump( A );
			}
			return _default;
		}

	}

}
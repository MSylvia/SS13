// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Floor_Carpet : Tile_Simulated_Floor {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.floor_tile = typeof(Obj_Item_Stack_Tile_Carpet);
			this.broken_states = new ByTable(new object [] { "damaged" });
			this.smooth = 1;
			this.icon = "icons/turf/floors/carpet.dmi";
			this.icon_state = "carpet";
		}

		// Function from file: fancy_floor.dm
		public Tile_Simulated_Floor_Carpet ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.update_icon();
				return;
			}));
			return;
		}

		// Function from file: fancy_floor.dm
		public override void burn_tile(  ) {
			this.burnt = true;
			this.update_icon();
			return;
		}

		// Function from file: fancy_floor.dm
		public override void break_tile(  ) {
			this.broken = true;
			this.update_icon();
			return;
		}

		// Function from file: fancy_floor.dm
		public override bool update_icon(  ) {
			
			if ( !base.update_icon() ) {
				return false;
			}

			if ( !this.broken && !this.burnt ) {
				
				if ( this.smooth != 0 ) {
					GlobalFuncs.smooth_icon( this );
				}
			} else {
				this.make_plating();

				if ( this.smooth != 0 ) {
					GlobalFuncs.smooth_icon_neighbors( this );
				}
			}
			return false;
		}

	}

}
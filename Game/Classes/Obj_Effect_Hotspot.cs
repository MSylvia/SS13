// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Hotspot : Obj_Effect {

		public double? volume = 125;
		public dynamic temperature = 373.41;
		public bool just_spawned = true;
		public bool bypassing = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 3;
			this.anchored = 1;
			this.unacidable = true;
			this.icon = "icons/effects/fire.dmi";
			this.icon_state = "1";
		}

		// Function from file: LINDA_fire.dm
		public Obj_Effect_Hotspot ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.SSair.hotspots.Add( this );
			this.perform_exposure();
			this.dir = Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) );
			this.air_update_turf();
			return;
		}

		// Function from file: LINDA_fire.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			base.Crossed( O, (object)(X) );

			if ( O is Mob_Living ) {
				O.fire_act();
			}
			return null;
		}

		// Function from file: LINDA_fire.dm
		public override dynamic Destroy(  ) {
			Ent_Static T = null;

			this.SetLuminosity( 0 );
			GlobalVars.SSair.hotspots.Remove( this );
			this.DestroyTurf();

			if ( this.loc is Tile_Simulated ) {
				T = this.loc;

				if ( ((dynamic)T).active_hotspot == this ) {
					((dynamic)T).active_hotspot = null;
				}
			}
			this.loc = null;
			base.Destroy();
			return 5;
		}

		// Function from file: LINDA_fire.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static location = null;
			int radiated_temperature = 0;
			dynamic direction = null;
			Tile T = null;

			
			if ( this.just_spawned ) {
				this.just_spawned = false;
				return 0;
			}
			location = this.loc;

			if ( !( location is Tile_Simulated ) ) {
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( Lang13.Bool( ((dynamic)location).excited_group ) ) {
				((ExcitedGroup)((dynamic)location).excited_group).reset_cooldowns();
			}

			if ( Convert.ToDouble( this.temperature ) < 373.41 || ( this.volume ??0) <= 1 ) {
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( !Lang13.Bool( ((dynamic)location).air ) || Convert.ToDouble( ((dynamic)location).air.toxins ) < 0.5 || Convert.ToDouble( ((dynamic)location).air.oxygen ) < 0.5 ) {
				GlobalFuncs.qdel( this );
				return null;
			}
			this.perform_exposure();

			if ( Lang13.Bool( ((dynamic)location).wet ) ) {
				((dynamic)location).wet = 0;
			}

			if ( this.bypassing ) {
				this.icon_state = "3";
				((dynamic)location).burn_tile();

				if ( Convert.ToDouble( ((dynamic)location).air.temperature ) > 423.41 ) {
					radiated_temperature = Convert.ToInt32( ((dynamic)location).air.temperature * 0.85 );

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cardinal )) {
						direction = _a;
						

						if ( !Lang13.Bool( ((dynamic)location).atmos_adjacent_turfs & direction ) ) {
							continue;
						}
						T = Map13.GetStep( this, Convert.ToInt32( direction ) );

						if ( T is Tile_Simulated && Lang13.Bool( ((dynamic)T).active_hotspot ) ) {
							T.hotspot_expose( radiated_temperature, 625 );
						}
					}
				}
			} else if ( ( this.volume ??0) > 1000 ) {
				this.icon_state = "2";
			} else {
				this.icon_state = "1";
			}

			if ( Convert.ToDouble( this.temperature ) > Convert.ToDouble( ((dynamic)location).max_fire_temperature_sustained ) ) {
				((dynamic)location).max_fire_temperature_sustained = this.temperature;
			}

			if ( Lang13.Bool( ((dynamic)location).heat_capacity ) && Convert.ToDouble( this.temperature ) > Convert.ToDouble( ((dynamic)location).heat_capacity ) ) {
				((dynamic)location).to_be_destroyed = 1;
			}
			return 1;
		}

		// Function from file: LINDA_fire.dm
		public void DestroyTurf(  ) {
			Ent_Static T = null;
			int chance_of_deletion = 0;

			
			if ( this.loc is Tile_Simulated ) {
				T = this.loc;

				if ( Lang13.Bool( ((dynamic)T).to_be_destroyed ) ) {
					
					if ( Lang13.Bool( ((dynamic)T).heat_capacity ) ) {
						chance_of_deletion = Convert.ToInt32( ((dynamic)T).max_fire_temperature_sustained / ((dynamic)T).heat_capacity * 8 );
					} else {
						chance_of_deletion = 100;
					}

					if ( Rand13.PercentChance( chance_of_deletion ) ) {
						((dynamic)T).ChangeTurf( ((dynamic)T).baseturf );
					} else {
						((dynamic)T).to_be_destroyed = 0;
						((dynamic)T).max_fire_temperature_sustained = 0;
					}
				}
			}
			return;
		}

		// Function from file: LINDA_fire.dm
		public bool perform_exposure(  ) {
			Ent_Static location = null;
			GasMixture affected = null;
			dynamic A = null;
			dynamic item = null;

			location = this.loc;

			if ( !( location is Tile_Simulated ) || !Lang13.Bool( ((dynamic)location).air ) ) {
				return false;
			}

			if ( ( this.volume ??0) > 2375 ) {
				this.bypassing = true;
			} else {
				this.bypassing = false;
			}

			if ( this.bypassing ) {
				
				if ( !this.just_spawned ) {
					this.volume = ((dynamic)location).air.fuel_burnt * 40000;
					this.temperature = ((dynamic)location).air.temperature;
				}
			} else {
				affected = ((GasMixture)((dynamic)location).air).remove_ratio( ( this.volume ??0) / Convert.ToDouble( ((dynamic)location).air.volume ) );
				affected.temperature = this.temperature;
				affected.react();
				this.temperature = affected.temperature;
				this.volume = affected.fuel_burnt * 40000;
				location.assume_air( affected );
			}

			foreach (dynamic _a in Lang13.Enumerate( this.loc )) {
				A = _a;
				
				item = A;

				if ( Lang13.Bool( item ) && item != this ) {
					((Ent_Static)item).fire_act( null, this.temperature, this.volume );
				}
			}
			return false;
		}

	}

}
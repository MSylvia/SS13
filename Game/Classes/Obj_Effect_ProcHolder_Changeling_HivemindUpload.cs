// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Changeling_HivemindUpload : Obj_Effect_ProcHolder_Changeling {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.chemical_cost = 10;
		}

		public Obj_Effect_ProcHolder_Changeling_HivemindUpload ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hivemind.dm
		public override dynamic sting_action( Mob user = null, dynamic target = null ) {
			Changeling changeling = null;
			ByTable names = null;
			Changelingprofile prof = null;
			dynamic chosen_name = null;
			Changelingprofile chosen_dna = null;
			dynamic uploaded_dna = null;

			changeling = user.mind.changeling;
			names = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( changeling.stored_profiles, typeof(Changelingprofile) )) {
				prof = _a;
				

				if ( !GlobalVars.hivemind_bank.Contains( prof ) ) {
					names.Add( prof.name );
				}
			}

			if ( names.len <= 0 ) {
				user.WriteMsg( "<span class='notice'>The airwaves already have all of our DNA.</span>" );
				return null;
			}
			chosen_name = Interface13.Input( "Select a DNA to channel: ", "Channel DNA", null, null, names, InputType.Null | InputType.Any );

			if ( !Lang13.Bool( chosen_name ) ) {
				return null;
			}
			chosen_dna = changeling.get_dna( chosen_name );

			if ( !( chosen_dna != null ) ) {
				return null;
			}
			uploaded_dna = Lang13.Call( chosen_dna.type );
			chosen_dna.copy_profile( uploaded_dna );
			GlobalVars.hivemind_bank.Add( uploaded_dna );
			user.WriteMsg( "<span class='notice'>We channel the DNA of " + chosen_name + " to the air.</span>" );
			GlobalFuncs.feedback_add_details( "changeling_powers", "HU" );
			return 1;
		}

	}

}
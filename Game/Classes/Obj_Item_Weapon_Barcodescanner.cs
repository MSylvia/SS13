// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Barcodescanner : Obj_Item_Weapon {

		public dynamic computer = null;
		public Obj_Item_Weapon_Book book = null;
		public int mode = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.throw_speed = 3;
			this.throw_range = 5;
			this.w_class = 1;
			this.icon = "icons/obj/library.dmi";
			this.icon_state = "scanner";
		}

		public Obj_Item_Weapon_Barcodescanner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: lib_items.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string modedesc = null;

			this.mode += 1;

			if ( this.mode > 3 ) {
				this.mode = 0;
			}
			user.WriteMsg( "" + this + " Status Display:" );

			switch ((int)( this.mode )) {
				case 0:
					modedesc = "Scan book to local buffer.";
					break;
				case 1:
					modedesc = "Scan book to local buffer and set associated computer buffer to match.";
					break;
				case 2:
					modedesc = "Scan book to local buffer, attempt to check in scanned book.";
					break;
				case 3:
					modedesc = "Scan book to local buffer, attempt to add book to general inventory.";
					break;
				default:
					modedesc = "ERROR";
					break;
			}
			user.WriteMsg( " - Mode " + this.mode + " : " + modedesc );

			if ( Lang13.Bool( this.computer ) ) {
				user.WriteMsg( "<font color=green>Computer has been associated with this unit.</font>" );
			} else {
				user.WriteMsg( "<font color=red>No associated computer found. Only local scans will function properly.</font>" );
			}
			user.WriteMsg( "\n" );
			return null;
		}

	}

}
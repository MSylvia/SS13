// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed_Chair : Obj_Structure_Bed {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.buckle_lying = 0;
			this.buildstackamount = 1;
			this.icon_state = "chair";
		}

		// Function from file: chair.dm
		public Obj_Structure_Bed_Chair ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 3, (Task13.Closure)(() => {
				this.handle_layer();
				return;
			}));
			return;
		}

		// Function from file: chair.dm
		public override bool AltClick( Mob user = null ) {
			base.AltClick( user );

			if ( user.incapacitated() ) {
				user.WriteMsg( "<span class='warning'>You can't do that right now!</span>" );
				return false;
			}

			if ( !( Map13.GetDistance( this, user ) <= 1 ) ) {
				return false;
			} else {
				this.__CallVerb("Rotate Chair" );
			}
			return false;
		}

		// Function from file: chair.dm
		public void spin(  ) {
			this.dir = Num13.Rotate( this.dir, 90 );
			this.handle_layer();

			if ( Lang13.Bool( this.buckled_mob ) ) {
				this.buckled_mob.dir = this.dir;
			}
			return;
		}

		// Function from file: chair.dm
		public void handle_layer(  ) {
			
			if ( this.dir == GlobalVars.NORTH ) {
				this.layer = GlobalVars.FLY_LAYER;
			} else {
				this.layer = GlobalVars.OBJ_LAYER;
			}
			return;
		}

		// Function from file: chair.dm
		public bool handle_rotation( int? direction = null ) {
			
			if ( Lang13.Bool( this.buckled_mob ) ) {
				this.buckled_mob.buckled = null;

				if ( !Lang13.Bool( direction ) || !Lang13.Bool( this.buckled_mob.Move( Map13.GetStep( this, direction ??0 ), direction ) ) ) {
					this.buckled_mob.buckled = this;
					this.dir = Convert.ToInt32( this.buckled_mob.dir );
					return false;
				}
				this.buckled_mob.buckled = this;
			}
			this.handle_layer();
			return true;
		}

		// Function from file: chair.dm
		public override void attack_tk( Mob_Living_Carbon_Human user = null ) {
			
			if ( Lang13.Bool( this.buckled_mob ) ) {
				base.attack_tk( user );
			} else {
				this.rotate();
			}
			return;
		}

		// Function from file: chair.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic SK = null;
			Obj_Structure_Bed_Chair_EChair E = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Assembly_ShockKit ) {
				
				if ( !Lang13.Bool( user.drop_item() ) ) {
					return null;
				}
				SK = A;
				E = new Obj_Structure_Bed_Chair_EChair( this.loc );
				GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 50, 1 );
				E.dir = this.dir;
				E.part = SK;
				SK.loc = E;
				SK.master = E;
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: chair.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			this.handle_rotation();
			return false;
		}

		// Function from file: chair.dm
		[Verb]
		[VerbInfo( name: "Rotate Chair", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public virtual void rotate(  ) {
			
			if ( GlobalVars.config.ghost_interaction ) {
				this.spin();
			} else {
				
				if ( !( Task13.User != null ) || !( Task13.User.loc is Tile ) ) {
					return;
				}

				if ( Task13.User.stat != 0 || Task13.User.restrained() ) {
					return;
				}
				this.spin();
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Landmark_Corpse : Obj_Effect_Landmark {

		public string mobname = "default";
		public string mobgender = "male";
		public Type mob_species = null;
		public Type corpseuniform = null;
		public Type corpsesuit = null;
		public Type corpseshoes = null;
		public Type corpsegloves = null;
		public Type corpseradio = null;
		public Type corpseglasses = null;
		public Type corpsemask = null;
		public Type corpsehelmet = null;
		public Type corpsebelt = null;
		public Type corpsepocket1 = null;
		public Type corpsepocket2 = null;
		public Type corpseback = null;
		public bool corpseid = false;
		public string corpseidjob = null;
		public string corpseidaccess = null;
		public dynamic corpseidicon = null;
		public dynamic corpsehusk = null;
		public dynamic corpsebrute = null;
		public dynamic corpseoxy = null;
		public bool roundstart = true;
		public bool death = true;
		public string flavour_text = "The mapper forgot to set this!";
		public string faction = null;
		public ByTable implants = new ByTable();

		// Function from file: corpse.dm
		public Obj_Effect_Landmark_Corpse ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.invisibility = 0;
			return;
		}

		// Function from file: corpse.dm
		public override void attack_ghost( Mob user = null ) {
			string ghost_role = null;

			
			if ( GlobalVars.ticker.current_state != 3 ) {
				return;
			}
			ghost_role = Interface13.Alert( "Become " + this.mobname + "? (Warning, You can no longer be cloned!)", null, "Yes", "No" );

			if ( ghost_role == "No" ) {
				return;
			}
			this.createCorpse( this.death, user.ckey );
			return;
		}

		// Function from file: corpse.dm
		public virtual void createCorpse( bool death = false, string ckey = null ) {
			Mob_Living_Carbon_Human M = null;
			Obj_Item_Weapon_Card_Id W = null;
			dynamic jobdatum = null;
			dynamic jobtype = null;
			dynamic J = null;
			dynamic I = null;
			dynamic X = null;

			M = new Mob_Living_Carbon_Human( this.loc );

			if ( this.mobname != "default" ) {
				M.real_name = this.mobname;
			} else {
				M.real_name = this.name;
			}
			M.gender = this.mobgender;

			if ( this.mob_species != null ) {
				M.set_species( this.mob_species );
			}

			if ( death ) {
				M.death( true );

				if ( Lang13.Bool( this.corpsehusk ) ) {
					M.Drain();
				}
			}

			if ( Lang13.Bool( this.faction ) ) {
				M.faction = new ByTable(new object [] { this.faction });
			}
			M.adjustBruteLoss( this.corpsebrute );
			M.adjustOxyLoss( this.corpseoxy );

			if ( this.corpseuniform != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpseuniform, M ), 14 );
			}

			if ( this.corpsesuit != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsesuit, M ), 13 );
			}

			if ( this.corpseshoes != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpseshoes, M ), 12 );
			}

			if ( this.corpsegloves != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsegloves, M ), 10 );
			}

			if ( this.corpseradio != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpseradio, M ), 8 );
			}

			if ( this.corpseglasses != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpseglasses, M ), 9 );
			}

			if ( this.corpsemask != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsemask, M ), 2 );
			}

			if ( this.corpsehelmet != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsehelmet, M ), 11 );
			}

			if ( this.corpsebelt != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsebelt, M ), 6 );
			}

			if ( this.corpsepocket1 != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsepocket1, M ), 16 );
			}

			if ( this.corpsepocket2 != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpsepocket2, M ), 15 );
			}

			if ( this.corpseback != null ) {
				M.equip_to_slot_or_del( Lang13.Call( this.corpseback, M ), 1 );
			}

			if ( this.corpseid ) {
				W = new Obj_Item_Weapon_Card_Id( M );

				foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(Job) ) )) {
					jobtype = _a;
					
					J = Lang13.Call( jobtype );

					if ( J.title == this.corpseidaccess ) {
						jobdatum = J;
						break;
					}
				}

				if ( Lang13.Bool( this.corpseidicon ) ) {
					W.icon_state = this.corpseidicon;
				}

				if ( Lang13.Bool( this.corpseidaccess ) ) {
					
					if ( Lang13.Bool( jobdatum ) ) {
						W.access = ((Job)jobdatum).get_access();
					} else {
						W.access = new ByTable();
					}
				}

				if ( Lang13.Bool( this.corpseidjob ) ) {
					W.assignment = this.corpseidjob;
				}
				W.registered_name = M.real_name;
				W.update_label();
				M.equip_to_slot_or_del( W, 7 );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.implants )) {
				I = _b;
				
				X = Lang13.Call( I );
				X.implant( M );
			}

			if ( Lang13.Bool( ckey ) ) {
				M.ckey = ckey;
				M.WriteMsg( "" + this.flavour_text );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: corpse.dm
		public override void initialize(  ) {
			
			if ( this.roundstart ) {
				this.createCorpse( this.death );
			} else {
				return;
			}
			return;
		}

	}

}
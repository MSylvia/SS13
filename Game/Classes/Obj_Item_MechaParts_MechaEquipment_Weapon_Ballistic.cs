// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_Weapon_Ballistic : Obj_Item_MechaParts_MechaEquipment_Weapon {

		public int projectiles = 0;
		public int projectile_energy_cost = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fire_sound = "sound/weapons/gunshot.ogg";
		}

		public Obj_Item_MechaParts_MechaEquipment_Weapon_Ballistic ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: weapons.dm
		[VerbInfo( name: "action" )]
		[VerbArg( 1, InputType.Mob | InputType.Obj | InputType.Tile | InputType.Zone )]
		public override bool f_action( dynamic target = null ) {
			
			if ( base.f_action( (object)(target) ) ) {
				this.projectiles -= this.get_shot_amount();
				GlobalFuncs.send_byjax( this.chassis.occupant, "exosuit.browser", new Txt().Ref( this ).ToString(), this.get_equip_info() );
				return true;
			}
			return false;
		}

		// Function from file: weapons.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			base.Topic( href, href_list, (object)(hsrc) );

			if ( Lang13.Bool( href_list["rearm"] ) ) {
				this.rearm();
			}
			return null;
		}

		// Function from file: weapons.dm
		public void rearm(  ) {
			dynamic projectiles_to_add = null;

			
			if ( this.projectiles < Convert.ToDouble( Lang13.Initial( this, "projectiles" ) ) ) {
				projectiles_to_add = Lang13.Initial( this, "projectiles" ) - this.projectiles;

				while (this.chassis.get_charge() >= this.projectile_energy_cost && Lang13.Bool( projectiles_to_add )) {
					this.projectiles++;
					projectiles_to_add--;
					this.chassis.use_power( this.projectile_energy_cost );
				}
			}
			GlobalFuncs.send_byjax( this.chassis.occupant, "exosuit.browser", new Txt().Ref( this ).ToString(), this.get_equip_info() );
			this.log_message( "Rearmed " + this.name + "." );
			return;
		}

		// Function from file: weapons.dm
		public override string get_equip_info(  ) {
			return "" + base.get_equip_info() + "[" + this.projectiles + "]" + ( this.projectiles < Convert.ToDouble( Lang13.Initial( this, "projectiles" ) ) ? new Txt( " - <a href='?src=" ).Ref( this ).str( ";rearm=1'>Rearm</a>" ).ToString() : null );
		}

		// Function from file: weapons.dm
		public override bool action_checks( dynamic target = null ) {
			
			if ( !base.action_checks( (object)(target) ) ) {
				return false;
			}

			if ( this.projectiles <= 0 ) {
				return false;
			}
			return true;
		}

		// Function from file: weapons.dm
		public override int get_shot_amount(  ) {
			return Num13.MinInt( this.projectiles, this.projectiles_per_shot );
		}

	}

}
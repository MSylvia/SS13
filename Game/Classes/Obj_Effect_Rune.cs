// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune : Obj_Effect {

		public string cultist_name = "basic rune";
		public string cultist_desc = "A basic rune with no function.";
		public string invocation = "Aiy ele-mayo!";
		public int req_cultists = 1;
		public bool rune_in_use = false;
		public int req_pylons = 0;
		public int req_forges = 0;
		public int req_archives = 0;
		public int req_altars = 0;
		public bool req_keyword = false;
		public string keyword = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#ff0000";
			this.anchored = 1;
			this.unacidable = true;
			this.icon = "icons/obj/rune.dmi";
			this.icon_state = "1";
		}

		public Obj_Effect_Rune ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: swarmer.dm
		public override void swarmer_act( Mob_Living_SimpleAnimal_Hostile_Swarmer S = null ) {
			S.WriteMsg( "<span class='warning'>Searching... sensor malfunction! Target lost. Aborting.</span>" );
			return;
		}

		// Function from file: runes.dm
		public bool structure_check( int rpylons = 0, int rforges = 0, int rarchives = 0, int raltars = 0 ) {
			int pylons = 0;
			int forges = 0;
			int archives = 0;
			int altars = 0;
			Obj_Structure_Cult pylon = null;
			Obj_Structure_Cult forge = null;
			Obj_Structure_Cult tome = null;
			Obj_Structure_Cult talisman = null;

			pylons = 0;
			forges = 0;
			archives = 0;
			altars = 0;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 3 ), typeof(Obj_Structure_Cult) )) {
				pylon = _a;
				
				pylons++;
			}

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 3 ), typeof(Obj_Structure_Cult) )) {
				forge = _b;
				
				forges++;
			}

			foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 3 ), typeof(Obj_Structure_Cult) )) {
				tome = _c;
				
				archives++;
			}

			foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 3 ), typeof(Obj_Structure_Cult) )) {
				talisman = _d;
				
				altars++;
			}

			if ( pylons >= rpylons && forges >= rforges && archives >= rarchives && altars >= raltars ) {
				return true;
			}
			return false;
		}

		// Function from file: runes.dm
		public virtual void fail_invoke( dynamic user = null ) {
			this.visible_message( "<span class='warning'>The markings pulse with a small flash of red light, then fall dark.</span>" );
			return;
		}

		// Function from file: runes.dm
		public virtual void invoke( dynamic user = null ) {
			return;
		}

		// Function from file: runes.dm
		public bool can_invoke( dynamic user = null ) {
			int cultists_in_range = 0;
			Mob_Living L = null;
			Mob_Living H = null;

			
			if ( !this.structure_check( this.req_pylons, this.req_forges, this.req_archives, this.req_altars ) ) {
				return false;
			}

			if ( !Lang13.Bool( this.keyword ) && this.req_keyword ) {
				return false;
			}

			if ( this.req_cultists <= 1 ) {
				
				if ( Lang13.Bool( this.invocation ) ) {
					((Ent_Dynamic)user).say( this.invocation );
				}
				return true;
			} else {
				cultists_in_range = 0;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 1 ), typeof(Mob_Living) )) {
					L = _a;
					

					if ( GlobalFuncs.iscultist( L ) ) {
						H = L;

						if ( !( H is Mob_Living_Carbon_Human ) ) {
							
							if ( L is Mob_Living_SimpleAnimal_Hostile_Construct ) {
								
								if ( Lang13.Bool( this.invocation ) ) {
									L.say( this.invocation );
								}
								cultists_in_range++;
							}
							continue;
						}

						if ( L.stat != 0 || Lang13.Bool( H.disabilities & 2 ) || Lang13.Bool( ((dynamic)H).silent ) ) {
							continue;
						}

						if ( Lang13.Bool( this.invocation ) ) {
							L.say( this.invocation );
						}
						cultists_in_range++;
					}
				}

				if ( cultists_in_range >= this.req_cultists ) {
					return true;
				} else {
					return false;
				}
			}
			return false;
		}

		// Function from file: runes.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			Matrix oldtransform = null;

			
			if ( !GlobalFuncs.iscultist( a ) ) {
				a.WriteMsg( "<span class='warning'>You aren't able to understand the words of " + this + ".</span>" );
				return null;
			}

			if ( this.can_invoke( a ) ) {
				this.invoke( a );
				oldtransform = this.transform;
				Icon13.Animate( new ByTable().Set( 1, this ).Set( "transform", Num13.Matrix() * 2 ).Set( "alpha", 0 ).Set( "time", 5 ) );
				Icon13.Animate( new ByTable().Set( "transform", oldtransform ).Set( "alpha", 255 ).Set( "time", 0 ) );
			} else {
				this.fail_invoke( a );
			}
			return null;
		}

		// Function from file: runes.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Tome && GlobalFuncs.iscultist( user ) ) {
				user.WriteMsg( "<span class='notice'>You carefully erase " + this + ".</span>" );
				GlobalFuncs.qdel( this );
				return null;
			} else if ( A is Obj_Item_Weapon_Nullrod ) {
				user.WriteMsg( "<span class='danger'>You disrupt the magic of " + this + " with " + A + ".</span>" );
				GlobalFuncs.qdel( this );
				return null;
			}
			return null;
		}

		// Function from file: runes.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( GlobalFuncs.iscultist( user ) || Convert.ToInt32( user.stat ) == 2 ) {
				user.WriteMsg( "<b>Name:</b> " + this.cultist_name );
				user.WriteMsg( "<b>Effects:</b> " + this.cultist_desc );
				user.WriteMsg( "<b>Required Acolytes:</b> " + this.req_cultists );

				if ( this.req_keyword && Lang13.Bool( this.keyword ) ) {
					user.WriteMsg( "<b>Keyword:</b> " + this.keyword );
				}
			}
			return 0;
		}

	}

}
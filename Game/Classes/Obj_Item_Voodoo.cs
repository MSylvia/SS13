// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Voodoo : Obj_Item {

		public dynamic target = null;
		public ByTable possible = new ByTable();
		public dynamic link = null;
		public int cooldown_time = 30;
		public int cooldown = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.burntime = 0;
			this.burn_state = 0;
			this.icon = "icons/obj/wizard.dmi";
			this.icon_state = "voodoo";
		}

		public Obj_Item_Voodoo ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: artefact.dm
		public override bool fire_act( bool? air = null, dynamic exposed_temperature = null, double? exposed_volume = null ) {
			
			if ( Lang13.Bool( this.target ) ) {
				((Mob_Living)this.target).adjust_fire_stacks( 20 );
				((Mob_Living)this.target).IgniteMob();
				this.GiveHint( this.target, 1 );
			}
			return base.fire_act( air, (object)(exposed_temperature), exposed_volume );
		}

		// Function from file: artefact.dm
		public void GiveHint( dynamic victim = null, dynamic force = null ) {
			force = force ?? 0;

			string way = null;
			dynamic A = null;

			
			if ( Rand13.PercentChance( 50 ) || Lang13.Bool( force ) ) {
				way = GlobalFuncs.dir2text( Map13.GetDistance( victim, GlobalFuncs.get_turf( this ) ) );
				victim.WriteMsg( "<span class='notice'>You feel a dark presence from " + way + "</span>" );
			}

			if ( Rand13.PercentChance( 20 ) || Lang13.Bool( force ) ) {
				A = GlobalFuncs.get_area( this );
				victim.WriteMsg( "<span class='notice'>You feel a dark presence from " + A.name + "</span>" );
			}
			return;
		}

		// Function from file: artefact.dm
		public void update_targets(  ) {
			Mob_Living_Carbon_Human H = null;

			this.possible = new ByTable();

			if ( !Lang13.Bool( this.link ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Carbon_Human) )) {
				H = _a;
				

				if ( this.link.fingerprints.Contains( Num13.Md5( H.dna.uni_identity ) ) ) {
					this.possible.Or( H );
				}
			}
			return;
		}

		// Function from file: artefact.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string wgw = null;
			Tile T = null;
			ByTable nearby_mobs = null;
			Mob_Living L = null;
			dynamic T2 = null;

			
			if ( !Lang13.Bool( this.target ) && this.possible.len != 0 ) {
				this.target = Interface13.Input( user, "Select your victim!", "Voodoo", null, this.possible, InputType.Null | InputType.Any );
				return null;
			}

			if ( user.zone_sel.selecting == "chest" ) {
				
				if ( Lang13.Bool( this.link ) ) {
					this.target = null;
					this.link.loc = GlobalFuncs.get_turf( this );
					user.WriteMsg( "<span class='notice'>You remove the " + this.link + " from the doll.</span>" );
					this.link = null;
					this.update_targets();
					return null;
				}
			}

			if ( Lang13.Bool( this.target ) && this.cooldown < Game13.time ) {
				
				switch ((string)( user.zone_sel.selecting )) {
					case "mouth":
						wgw = GlobalFuncs.sanitize( Interface13.Input( user, "What would you like the victim to say", "Voodoo", null, null, InputType.Str ) );
						((Ent_Dynamic)this.target).say( wgw );
						GlobalFuncs.log_game( "" + user + user.key + " made " + this.target + this.target.key + " say " + wgw + " with a voodoo doll." );
						break;
					case "eyes":
						((Mob)user).set_machine( this );

						if ( Lang13.Bool( user.client ) ) {
							user.client.eye = this.target;
							user.client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
						}
						Task13.Schedule( 100, (Task13.Closure)(() => {
							((Mob)user).reset_view();
							((Mob)user).unset_machine();
							return;
						}));
						break;
					case "r_leg":
					case "l_leg":
						user.WriteMsg( "<span class='notice'>You move the doll's legs around.</span>" );
						T = Map13.GetStep( this.target, Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) ) );
						this.target.Move( T );
						break;
					case "r_arm":
					case "l_arm":
						nearby_mobs = new ByTable();

						foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.target, 1 ), typeof(Mob_Living) )) {
							L = _a;
							

							if ( L != this.target ) {
								nearby_mobs.Or( L );
							}
						}

						if ( nearby_mobs.len != 0 ) {
							T2 = Rand13.PickFromTable( nearby_mobs );
							GlobalFuncs.log_game( "" + user + user.key + " made " + this.target + this.target.key + " click on " + T2 + " with a voodoo doll." );
							((Mob)this.target).ClickOn( T2 );
							this.GiveHint( this.target );
						}
						break;
					case "head":
						user.WriteMsg( "<span class='notice'>You smack the doll's head with your hand.</span>" );
						((Mob)this.target).Dizzy( 10 );
						this.target.WriteMsg( "<span class='warning'>You suddenly feel as if your head was hit with a hammer!</span>" );
						this.GiveHint( this.target, user );
						break;
				}
				this.cooldown = Game13.time + this.cooldown_time;
			}
			return null;
		}

		// Function from file: artefact.dm
		public override bool? check_eye( Mob user = null ) {
			return this.loc == user;
		}

		// Function from file: artefact.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( Lang13.Bool( this.target ) && this.cooldown < Game13.time ) {
				
				if ( ((Obj_Item)A).is_hot() != 0 ) {
					this.target.WriteMsg( "<span class='userdanger'>You suddenly feel very hot</span>" );
					this.target.bodytemperature += 50;
					this.GiveHint( this.target );
				} else if ( GlobalFuncs.is_pointed( A ) ) {
					this.target.WriteMsg( "<span class='userdanger'>You feel a stabbing pain in " + GlobalFuncs.parse_zone( user.zone_sel.selecting ) + "!</span>" );
					((Mob)this.target).Weaken( 2 );
					this.GiveHint( this.target );
				} else if ( A is Obj_Item_Weapon_Bikehorn ) {
					this.target.WriteMsg( "<span class='userdanger'>HONK</span>" );
					this.target.WriteMsg( "sound/items/AirHorn.ogg" );
					((Mob)this.target).adjustEarDamage( 0, 3 );
					this.GiveHint( this.target );
				}
				this.cooldown = Game13.time + this.cooldown_time;
				return null;
			}

			if ( !Lang13.Bool( this.link ) ) {
				
				if ( A.loc == user && A is Obj_Item && Convert.ToDouble( A.w_class ) <= 2 ) {
					user.drop_item();
					A.loc = this;
					this.link = A;
					user.WriteMsg( "You attach " + A + " to the doll." );
					this.update_targets();
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Uplink : Obj_Item_Device {

		public string welcome = "Syndicate Uplink Console:";
		public dynamic uses = 20;
		public string purchase_log = "";
		public Type show_description = null;
		public bool active = false;
		public string uplink_owner = null;
		public double used_TC = 0;
		public Type mode_override = null;

		// Function from file: uplinks.dm
		public Obj_Item_Device_Uplink ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.world_uplinks.Add( this );
			return;
		}

		// Function from file: uplinks.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic item = null;
			ByTable split = null;
			dynamic category = null;
			double? number = null;
			ByTable buyable_items = null;
			dynamic uplink = null;
			dynamic I = null;
			Type type = null;

			base.Topic( href, href_list, (object)(hsrc) );

			if ( !this.active ) {
				return null;
			}

			if ( Lang13.Bool( href_list["buy_item"] ) ) {
				item = href_list["buy_item"];
				split = GlobalFuncs.text2list( item, ":" );

				if ( split.len == 2 ) {
					category = split[1];
					number = String13.ParseNumber( split[2] );
					buyable_items = GlobalFuncs.get_uplink_items( this.mode_override );
					uplink = buyable_items[category];

					if ( Lang13.Bool( uplink ) && Convert.ToDouble( uplink.len ) >= ( number ??0) ) {
						I = uplink[number];

						if ( Lang13.Bool( I ) ) {
							I.buy( this, Task13.User );
						}
					}
				}
			} else if ( Lang13.Bool( href_list["show_desc"] ) ) {
				type = Lang13.FindClass( href_list["show_desc"] );
				this.show_description = type;
				this.interact( Task13.User );
			}
			return null;
		}

		// Function from file: uplinks.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;

			dat = "<body link='yellow' alink='white' bgcolor='#601414'><font color='white'>";
			dat += this.generate_menu();
			dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";lock=1'>Lock</a>" ).ToString();
			dat += "</font></body>";
			Interface13.Browse( user, dat, "window=hidden" );
			GlobalFuncs.onclose( user, "hidden" );
			return null;
		}

		// Function from file: uplinks.dm
		public string generate_menu(  ) {
			string dat = null;
			ByTable buyable_items = null;
			int index = 0;
			dynamic category = null;
			int i = 0;
			UplinkItem item = null;
			string desc = null;
			string cost_text = null;

			dat = "<B>" + this.welcome + "</B><BR>";
			dat += "Tele-Crystals left: " + this.uses + "<BR>";
			dat += "<HR>";
			dat += "<B>Request item:</B><BR>";
			dat += "<I>Each item costs a number of tele-crystals as indicated by the number following their name.</I><br><BR>";
			buyable_items = GlobalFuncs.get_uplink_items( this.mode_override );
			index = 0;

			foreach (dynamic _b in Lang13.Enumerate( buyable_items )) {
				category = _b;
				
				index++;
				dat += "<b>" + category + "</b><br>";
				i = 0;

				foreach (dynamic _a in Lang13.Enumerate( buyable_items[category], typeof(UplinkItem) )) {
					item = _a;
					
					i++;
					desc = "" + item.desc;
					cost_text = "";

					if ( item.cost > 0 ) {
						cost_text = "(" + item.cost + ")";
					}

					if ( item.cost <= Convert.ToDouble( this.uses ) ) {
						dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";buy_item=" ).item( category ).str( ":" ).item( i ).str( ";'>" ).item( item.name ).str( "</A> " ).item( cost_text ).str( " " ).ToString();
					} else {
						dat += "<font color='grey'><i>" + item.name + " " + cost_text + " </i></font>";
					}

					if ( Lang13.Bool( item.desc ) ) {
						
						if ( this.show_description == item.type ) {
							dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";show_desc=0'><font size=2>[-]</font></A><BR><font size=2>" ).item( desc ).str( "</font>" ).ToString();
						} else {
							dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";show_desc=" ).item( item.type ).str( "'><font size=2>[?]</font></A>" ).ToString();
						}
					}
					dat += "<BR>";
				}

				if ( buyable_items.len != index ) {
					dat += "<br>";
				}
			}
			dat += "<HR>";
			return dat;
		}

		// Function from file: uplinks.dm
		public override dynamic Destroy(  ) {
			GlobalVars.world_uplinks.Remove( this );
			return base.Destroy();
		}

	}

}
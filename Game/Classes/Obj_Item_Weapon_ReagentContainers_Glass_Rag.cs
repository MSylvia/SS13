// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Glass_Rag : Obj_Item_Weapon_ReagentContainers_Glass {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.possible_transfer_amounts = new ByTable();
			this.volume = 5;
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "rag";
		}

		public Obj_Item_Weapon_ReagentContainers_Glass_Rag ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: footprints_and_rag.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic C = null;
			string reagentlist = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( target is Mob_Living_Carbon && Lang13.Bool( target.reagents ) && Lang13.Bool( this.reagents.total_volume ) ) {
				C = target;

				if ( user.a_intent == "harm" && !((Mob_Living_Carbon)C).is_mouth_covered() ) {
					this.reagents.reaction( C, GlobalVars.INGEST );
					this.reagents.trans_to( C, this.reagents.total_volume );
					((Ent_Static)C).visible_message( new Txt( "<span class='danger'>" ).item( user ).str( " has smothered " ).the( C ).item().str( " with " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='userdanger'>" ).item( user ).str( " has smothered you with " ).the( this ).item().str( "!</span>" ).ToString(), "<span class='italics'>You hear some struggling and muffled cries of surprise.</span>" );
					reagentlist = GlobalFuncs.pretty_string_from_reagent_list( target.reagents );
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " smothered " + GlobalFuncs.key_name( target ) + " with a damp rag containing " + reagentlist );
					GlobalFuncs.log_attack( "" + GlobalFuncs.key_name( user ) + " smothered " + GlobalFuncs.key_name( target ) + " with a damp rag containing " + reagentlist );
				} else {
					this.reagents.reaction( C, GlobalVars.TOUCH );
					this.reagents.clear_reagents();
					((Ent_Static)C).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " has touched " ).the( C ).item().str( " with " ).the( this ).item().str( ".</span>" ).ToString() );
				}
			} else if ( Lang13.Bool( user.Contains( target is Ent_Static && this != null ) ) ) {
				((Ent_Static)user).visible_message( "" + user + " starts to wipe down " + target + " with " + this + "!", "<span class='notice'>You start to wipe down " + target + " with " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 30, null, target ) ) {
					((Ent_Static)user).visible_message( "" + user + " finishes wiping off the " + target + "!", "<span class='notice'>You finish wiping off the " + target + ".</span>" );
					((Ent_Static)target).clean_blood();
				}
			}
			return false;
		}

		// Function from file: footprints_and_rag.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( "<span class='suicide'>" + user + " ties the " + this.name + " around their head and groans! It looks like--</span>" );
			user.say( "MY BRAIN HURTS!!" );
			return 8;
		}

	}

}
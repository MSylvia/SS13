// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_TeslaEnergyRelay : Obj_Item_MechaParts_MechaEquipment {

		public int coeff = 100;
		public ByTable use_channels = new ByTable(new object [] { 1, 3, 2 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "magnets=4;powerstorage=3";
			this.range = 0;
			this.icon_state = "tesla";
		}

		public Obj_Item_MechaParts_MechaEquipment_TeslaEnergyRelay ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: other_tools.dm
		public override int? process( dynamic seconds = null ) {
			double? cur_charge = null;
			dynamic A = null;
			dynamic pow_chan = null;
			dynamic c = null;
			int delta = 0;

			
			if ( !( this.chassis != null ) || ( this.chassis.internal_damage & 4 ) != 0 ) {
				GlobalVars.SSobj.processing.Remove( this );
				this.set_ready_state( true );
				return null;
			}
			cur_charge = this.chassis.get_charge();

			if ( cur_charge == null || !Lang13.Bool( this.chassis.cell ) ) {
				GlobalVars.SSobj.processing.Remove( this );
				this.set_ready_state( true );
				this.occupant_message( "No powercell detected." );
				return null;
			}

			if ( ( cur_charge ??0) < ( this.chassis.cell.maxcharge ??0) ) {
				A = GlobalFuncs.get_area( this.chassis );

				if ( Lang13.Bool( A ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { 1, 3, 2 }) )) {
						c = _a;
						

						if ( Lang13.Bool( A.master.powered( c ) ) ) {
							pow_chan = c;
							break;
						}
					}

					if ( Lang13.Bool( pow_chan ) ) {
						delta = Num13.MinInt( 20, ((int)( ( this.chassis.cell.maxcharge ??0) - ( cur_charge ??0) )) );
						this.chassis.give_power( delta );
						A.master.use_power( delta * this.coeff, pow_chan );
					}
				}
			}
			return null;
		}

		// Function from file: other_tools.dm
		public override string get_equip_info(  ) {
			
			if ( !( this.chassis != null ) ) {
				return null;
			}
			return new Txt( "<span style=\"color:" ).item( ( this.equip_ready ? "#0f0" : "#f00" ) ).str( ";\">*</span>&nbsp;" ).item( this.name ).str( " - <a href='?src=" ).Ref( this ).str( ";toggle_relay=1'>" ).item( ( this.equip_ready ? "A" : "Dea" ) ).str( "ctivate</a>" ).ToString();
		}

		// Function from file: other_tools.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			base.Topic( href, href_list, (object)(hsrc) );

			if ( Lang13.Bool( href_list["toggle_relay"] ) ) {
				
				if ( this.equip_ready ) {
					GlobalVars.SSobj.processing.Or( this );
					this.set_ready_state( false );
					this.log_message( "Activated." );
				} else {
					GlobalVars.SSobj.processing.Remove( this );
					this.set_ready_state( true );
					this.log_message( "Deactivated." );
				}
			}
			return null;
		}

		// Function from file: other_tools.dm
		public dynamic get_power_channel( dynamic A = null ) {
			dynamic pow_chan = null;
			dynamic c = null;

			
			if ( Lang13.Bool( A ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.use_channels )) {
					c = _a;
					

					if ( Lang13.Bool( A.master ) && Lang13.Bool( ((Zone)A.master).powered( c ) ) ) {
						pow_chan = c;
						break;
					}
				}
			}
			return pow_chan;
		}

		// Function from file: other_tools.dm
		public int get_charge(  ) {
			dynamic A = null;
			dynamic pow_chan = null;

			
			if ( this.equip_ready ) {
				return 0;
			}
			A = GlobalFuncs.get_area( this.chassis );
			pow_chan = this.get_power_channel( A );

			if ( Lang13.Bool( pow_chan ) ) {
				return 1000;
			}
			return 0;
		}

		// Function from file: other_tools.dm
		public override void detach( dynamic moveto = null ) {
			GlobalVars.SSobj.processing.Remove( this );
			base.detach( (object)(moveto) );
			return;
		}

		// Function from file: other_tools.dm
		public override dynamic Destroy(  ) {
			GlobalVars.SSobj.processing.Remove( this );
			return base.Destroy();
		}

	}

}
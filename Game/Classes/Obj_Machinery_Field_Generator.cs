// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Field_Generator : Obj_Machinery_Field {

		public int num_power_levels = 6;
		public bool Varedit_start = false;
		public bool Varpower = false;
		public int active = 0;
		public double? power = 20;
		public int state = 0;
		public int warming_up = 0;
		public ByTable fields = null;
		public ByTable connected_gens = null;
		public bool clean_up = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.use_power = 0;
			this.icon = "icons/obj/machines/field_generator.dmi";
			this.icon_state = "Field_Gen";
		}

		// Function from file: field_generator.dm
		public Obj_Machinery_Field_Generator ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.fields = new ByTable();
			this.connected_gens = new ByTable();
			return;
		}

		// Function from file: field_generator.dm
		public override void bump_field( dynamic AM = null ) {
			
			if ( this.fields.len != 0 ) {
				base.bump_field( (object)(AM) );
			}
			return;
		}

		// Function from file: field_generator.dm
		public override bool shock( dynamic user = null ) {
			
			if ( this.fields.len != 0 ) {
				base.shock( (object)(user) );
			}
			return false;
		}

		// Function from file: field_generator.dm
		public void cleanup(  ) {
			Obj_Machinery_Field_Containment F = null;
			Obj_Machinery_Field_Generator FG = null;
			bool temp = false;
			Obj_Singularity O = null;

			this.clean_up = true;

			foreach (dynamic _a in Lang13.Enumerate( this.fields, typeof(Obj_Machinery_Field_Containment) )) {
				F = _a;
				

				if ( F == null ) {
					continue;
				}
				GlobalFuncs.qdel( F );
			}
			this.fields = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( this.connected_gens, typeof(Obj_Machinery_Field_Generator) )) {
				FG = _b;
				

				if ( FG == null ) {
					continue;
				}
				FG.connected_gens.Remove( this );

				if ( !FG.clean_up ) {
					FG.cleanup();
				}
				this.connected_gens.Remove( FG );
			}
			this.connected_gens = new ByTable();
			this.clean_up = false;
			this.update_icon();
			Task13.Schedule( 1, (Task13.Closure)(() => {
				temp = true;

				foreach (dynamic _c in Lang13.Enumerate( typeof(Game13), typeof(Obj_Singularity) )) {
					O = _c;
					

					if ( O.last_warning != 0 && temp ) {
						
						if ( Game13.time - O.last_warning > 50 ) {
							temp = false;
							GlobalFuncs.message_admins( "A singulo exists and a containment field has failed." );
							this.investigate_log( "has <font color='red'>failed</font> whilst a singulo exists.", "singulo" );
						}
					}
					O.last_warning = Game13.time;
				}
				return;
			}));
			return;
		}

		// Function from file: field_generator.dm
		public bool setup_field( int NSEW = 0 ) {
			Ent_Static T = null;
			dynamic G = null;
			int? steps = null;
			int? dist = null;
			Ent_Static A = null;
			int? dist2 = null;
			int field_dir = 0;
			Obj_Machinery_Field_Containment CF = null;
			Mob_Living L = null;
			bool listcheck = false;
			Obj_Machinery_Field_Generator FG = null;
			Obj_Machinery_Field_Generator FG2 = null;

			T = this.loc;
			steps = 0;

			if ( !( NSEW != 0 ) ) {
				return false;
			}
			dist = null;
			dist = 0;

			while (( dist ??0) <= 9) {
				T = Map13.GetStep( T, NSEW );

				if ( T.density ) {
					return false;
				}

				foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Ent_Static) )) {
					A = _a;
					

					if ( A is Mob ) {
						continue;
					}

					if ( !( A is Obj_Machinery_Field_Generator ) ) {
						
						if ( ( A is Obj_Machinery_Door || A is Obj_Machinery_TheSingularitygen ) && A.density ) {
							return false;
						}
					}
				}
				steps += 1;
				G = Lang13.FindIn( typeof(Obj_Machinery_Field_Generator), T );

				if ( !( G == null ) ) {
					steps -= 1;

					if ( !Lang13.Bool( G.active ) ) {
						return false;
					}
					break;
				}
				dist += 1;
			}

			if ( G == null ) {
				return false;
			}
			T = this.loc;
			dist2 = null;
			dist2 = 0;

			while (( dist2 ??0) < ( steps ??0)) {
				field_dir = Map13.GetDistance( T, Map13.GetStep( G.loc, NSEW ) );
				T = Map13.GetStep( T, NSEW );

				if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Machinery_Field_Containment), T ) ) ) {
					CF = new Obj_Machinery_Field_Containment();
					CF.set_master( this, G );
					this.fields.Add( CF );
					G.fields += CF;
					CF.loc = T;
					CF.dir = field_dir;

					foreach (dynamic _b in Lang13.Enumerate( CF.loc, typeof(Mob_Living) )) {
						L = _b;
						
						CF.Crossed( L );
					}
				}
				dist2 += 1;
			}
			listcheck = false;

			foreach (dynamic _c in Lang13.Enumerate( this.connected_gens, typeof(Obj_Machinery_Field_Generator) )) {
				FG = _c;
				

				if ( FG == null ) {
					continue;
				}

				if ( FG == G ) {
					listcheck = true;
					break;
				}
			}

			if ( !listcheck ) {
				this.connected_gens.Add( G );
			}
			listcheck = false;

			foreach (dynamic _d in Lang13.Enumerate( G.connected_gens, typeof(Obj_Machinery_Field_Generator) )) {
				FG2 = _d;
				

				if ( FG2 == null ) {
					continue;
				}

				if ( FG2 == this ) {
					listcheck = true;
					break;
				}
			}

			if ( !listcheck ) {
				G.connected_gens.Add( this );
			}
			return false;
		}

		// Function from file: field_generator.dm
		public void start_fields(  ) {
			
			if ( ( !( this.state != 0 ) ?1:0) == 2 || !Lang13.Bool( this.anchored ) ) {
				this.turn_off();
				return;
			}
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.setup_field( 1 );
				return;
			}));
			Task13.Schedule( 2, (Task13.Closure)(() => {
				this.setup_field( 2 );
				return;
			}));
			Task13.Schedule( 3, (Task13.Closure)(() => {
				this.setup_field( 4 );
				return;
			}));
			Task13.Schedule( 4, (Task13.Closure)(() => {
				this.setup_field( 8 );
				return;
			}));
			this.active = 2;
			return;
		}

		// Function from file: field_generator.dm
		public bool draw_power( double? draw = null, int? failsafe = null, Obj_Machinery_Field_Generator G = null, Obj_Machinery_Field_Generator last = null ) {
			draw = draw ?? 0;
			failsafe = failsafe ?? 0;

			Obj_Machinery_Field_Generator FG = null;

			
			if ( this.Varpower ) {
				return true;
			}

			if ( G != null && G == this || ( failsafe ??0) >= 8 ) {
				return false;
			} else {
				failsafe++;
			}

			if ( ( this.power ??0) >= ( draw ??0) ) {
				this.power -= draw ??0;
				return true;
			} else {
				draw -= this.power ??0;
				this.power = 0;

				foreach (dynamic _a in Lang13.Enumerate( this.connected_gens, typeof(Obj_Machinery_Field_Generator) )) {
					FG = _a;
					

					if ( FG == null ) {
						continue;
					}

					if ( FG == last ) {
						continue;
					}

					if ( G != null ) {
						
						if ( FG.draw_power( draw, failsafe, G, this ) ) {
							return true;
						} else {
							return false;
						}
					} else if ( FG.draw_power( draw, failsafe, this, this ) ) {
						return true;
					} else {
						return false;
					}
				}
			}
			return false;
		}

		// Function from file: field_generator.dm
		public bool calc_power(  ) {
			int power_draw = 0;
			Obj_Machinery_Field_Containment F = null;

			
			if ( this.Varpower ) {
				return true;
			}
			this.update_icon();

			if ( ( this.power ??0) > 250 ) {
				this.power = 250;
			}
			power_draw = 2;

			foreach (dynamic _a in Lang13.Enumerate( this.fields, typeof(Obj_Machinery_Field_Containment) )) {
				F = _a;
				

				if ( F == null ) {
					continue;
				}
				power_draw++;
			}

			if ( this.draw_power( Num13.Round( power_draw / 2, 1 ) ) ) {
				return true;
			} else {
				this.visible_message( "<span class='danger'>The " + this.name + " shuts down!</span>", "<span class='italics'>You hear something shutting down.</span>" );
				this.turn_off();
				this.investigate_log( "ran out of power and <font color='red'>deactivated</font>", "singulo" );
				this.power = 0;
				return false;
			}
		}

		// Function from file: field_generator.dm
		public void turn_on(  ) {
			this.active = 1;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				
				while (this.warming_up < 3 && this.active != 0) {
					Task13.Sleep( 50 );
					this.warming_up++;
					this.update_icon();

					if ( this.warming_up >= 3 ) {
						this.start_fields();
					}
				}
				return;
			}));
			return;
		}

		// Function from file: field_generator.dm
		public void turn_off(  ) {
			this.active = 0;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.cleanup();

				while (this.warming_up > 0 && !( this.active != 0 )) {
					Task13.Sleep( 50 );
					this.warming_up--;
					this.update_icon();
				}
				return;
			}));
			return;
		}

		// Function from file: field_generator.dm
		public override dynamic Destroy(  ) {
			this.cleanup();
			return base.Destroy();
		}

		// Function from file: field_generator.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( P.flag != "bullet" ) {
				this.power += Convert.ToDouble( P.damage );
				this.update_icon();
			}
			return 0;
		}

		// Function from file: field_generator.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( this.active != 0 ) {
				return false;
			} else {
				base.blob_act( (object)(severity) );
			}
			return false;
		}

		// Function from file: field_generator.dm
		public override double emp_act( int severity = 0 ) {
			return 0;
		}

		// Function from file: field_generator.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;

			
			if ( this.active != 0 ) {
				user.WriteMsg( "<span class='warning'>The " + this + " needs to be off!</span>" );
				return null;
			} else if ( A is Obj_Item_Weapon_Wrench ) {
				
				switch ((int)( this.state )) {
					case 0:
						
						if ( this.isinspace() ) {
							return null;
						}
						this.state = 1;
						GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 75, 1 );
						((Ent_Static)user).visible_message( "" + user.name + " secures " + this.name + " to the floor.", "<span class='notice'>You secure the external reinforcing bolts to the floor.</span>", "<span class='italics'>You hear ratchet.</span>" );
						this.anchored = 1;
						break;
					case 1:
						this.state = 0;
						GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 75, 1 );
						((Ent_Static)user).visible_message( "" + user.name + " unsecures " + this.name + " reinforcing bolts from the floor.", "<span class='notice'>You undo the external reinforcing bolts.</span>", "<span class='italics'>You hear ratchet.</span>" );
						this.anchored = 0;
						break;
					case 2:
						user.WriteMsg( "<span class='warning'>The " + this.name + " needs to be unwelded from the floor!</span>" );
						return null;
						break;
				}
			} else if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				switch ((int)( this.state )) {
					case 0:
						user.WriteMsg( "<span class='warning'>The " + this.name + " needs to be wrenched to the floor!</span>" );
						return null;
						break;
					case 1:
						
						if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
							GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 50, 1 );
							((Ent_Static)user).visible_message( "" + user.name + " starts to weld the " + this.name + " to the floor.", new Txt( "<span class='notice'>You start to weld " ).the( this ).item().str( " to the floor...</span>" ).ToString(), "<span class='italics'>You hear welding.</span>" );

							if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
								
								if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
									return null;
								}
								this.state = 2;
								user.WriteMsg( "<span class='notice'>You weld the field generator to the floor.</span>" );
							}
						} else {
							return null;
						}
						break;
					case 2:
						
						if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
							GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 50, 1 );
							((Ent_Static)user).visible_message( "" + user.name + " starts to cut the " + this.name + " free from the floor.", new Txt( "<span class='notice'>You start to cut " ).the( this ).item().str( " free from the floor...</span>" ).ToString(), "<span class='italics'>You hear welding.</span>" );

							if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
								
								if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
									return null;
								}
								this.state = 1;
								user.WriteMsg( new Txt( "<span class='notice'>You cut " ).the( this ).item().str( " free from the floor.</span>" ).ToString() );
							}
						} else {
							return null;
						}
						break;
				}
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: field_generator.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.state == 2 ) {
				
				if ( Map13.GetDistance( this, a ) <= 1 ) {
					
					if ( this.active >= 1 ) {
						a.WriteMsg( "<span class='warning'>You are unable to turn off the " + this.name + " once it is online!</span>" );
						return 1;
					} else {
						((Ent_Static)a).visible_message( "" + a.name + " turns on the " + this.name + ".", "<span class='notice'>You turn on the " + this.name + ".</span>", "<span class='italics'>You hear heavy droning.</span>" );
						this.turn_on();
						this.investigate_log( "<font color='green'>activated</font> by " + a.key + ".", "singulo" );
						this.add_fingerprint( a );
					}
				}
			} else {
				a.WriteMsg( "<span class='warning'>The " + this + " needs to be firmly secured to the floor first!</span>" );
				return null;
			}
			return null;
		}

		// Function from file: field_generator.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( this.Varedit_start ) {
				
				if ( this.active == 0 ) {
					this.active = 1;
					this.state = 2;
					this.power = 250;
					this.anchored = 1;
					this.warming_up = 3;
					this.start_fields();
					this.update_icon();
				}
				this.Varedit_start = false;
			}

			if ( this.active == 2 ) {
				this.calc_power();
				this.update_icon();
			}
			return null;
		}

		// Function from file: field_generator.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			int level = 0;

			this.overlays.Cut();

			if ( this.warming_up != 0 ) {
				this.overlays.Add( "+a" + this.warming_up );
			}

			if ( this.fields.len != 0 ) {
				this.overlays.Add( "+on" );
			}
			level = Num13.Floor( ( this.power ??0) * 6 / 250 );
			level = Num13.MaxInt( 0, Num13.MinInt( level, GlobalVars.num_power_levels ) );

			if ( level != 0 ) {
				this.overlays.Add( "+p" + level );
			}
			return null;
		}

		// Function from file: swarmer.dm
		public override void swarmer_act( Mob_Living_SimpleAnimal_Hostile_Swarmer S = null ) {
			S.DisIntegrate( this );
			return;
		}

	}

}
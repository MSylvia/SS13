// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_DoorTimer : Obj_Machinery {

		public string id = null;
		public double releasetime = 0;
		public double timelength = 0;
		public double? timing = 0;
		public string picture_state = null;
		public ByTable targets = new ByTable();
		public Obj_Item_Device_Radio Radio = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable(new object [] { 2 });
			this.anchored = 1;
			this.icon = "icons/obj/status_display.dmi";
			this.icon_state = "frame";
		}

		// Function from file: brigdoors.dm
		public Obj_Machinery_DoorTimer ( dynamic loc = null ) : base( (object)(loc) ) {
			Obj_Machinery_Door_Window_Brigdoor M = null;
			Obj_Machinery_Flasher F = null;
			Obj_Structure_Closet_SecureCloset_Brig C = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.Radio = new Obj_Item_Device_Radio( this );
			this.Radio.listening = 0;
			Task13.Schedule( 20, (Task13.Closure)(() => {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.ultra_range( 20, this ), typeof(Obj_Machinery_Door_Window_Brigdoor) )) {
					M = _a;
					

					if ( M.id == this.id ) {
						this.targets.Add( M );
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.ultra_range( 20, this ), typeof(Obj_Machinery_Flasher) )) {
					F = _b;
					

					if ( F.id == this.id ) {
						this.targets.Add( F );
					}
				}

				foreach (dynamic _c in Lang13.Enumerate( GlobalFuncs.ultra_range( 20, this ), typeof(Obj_Structure_Closet_SecureCloset_Brig) )) {
					C = _c;
					

					if ( C.id == this.id ) {
						this.targets.Add( C );
					}
				}

				if ( this.targets.len == 0 ) {
					this.stat |= 1;
				}
				this.update_icon();
				return;
				return;
			}));
			return;
		}

		// Function from file: brigdoors.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			string disp1 = null;
			double timeleft = 0;
			string disp2 = null;

			
			if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "frame";
				return null;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				this.set_picture( "ai_bsod" );
				return null;
			}

			if ( Lang13.Bool( this.timing ) ) {
				disp1 = this.id;
				timeleft = this.timeleft();
				disp2 = "" + GlobalFuncs.add_zero( String13.NumberToString( timeleft / 60 % 60 ), 2 ) + "~" + GlobalFuncs.add_zero( String13.NumberToString( timeleft % 60 ), 2 );

				if ( Lang13.Length( disp2 ) > 5 ) {
					disp2 = "Error";
				}
				this.update_display( disp1, disp2 );
			} else if ( Lang13.Bool( this.maptext ) ) {
				this.maptext = "";
			}
			return null;
		}

		// Function from file: brigdoors.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			double timeleft = 0;
			double timeleft2 = 0;
			double? tp = null;
			Obj_Machinery_Flasher F = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( !this.allowed( Task13.User ) ) {
				return null;
			}
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["timing"] ) ) {
				timeleft = this.timeleft();
				timeleft = Num13.MinInt( Num13.MaxInt( Num13.Floor( timeleft ), 0 ), 600 );
				this.timing = String13.ParseNumber( href_list["timing"] );
				this.timeset( timeleft );
			} else if ( Lang13.Bool( href_list["tp"] ) ) {
				timeleft2 = this.timeleft();
				tp = String13.ParseNumber( href_list["tp"] );
				timeleft2 += tp ??0;
				timeleft2 = Num13.MinInt( Num13.MaxInt( Num13.Floor( timeleft2 ), 0 ), 600 );
				this.timeset( timeleft2 );
			} else if ( Lang13.Bool( href_list["fc"] ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.targets, typeof(Obj_Machinery_Flasher) )) {
					F = _a;
					
					F.flash();
				}
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			this.update_icon();

			if ( Lang13.Bool( this.timing ) ) {
				this.timer_start();
			} else {
				this.timer_end();
			}
			return null;
		}

		// Function from file: brigdoors.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			int second = 0;
			int minute = 0;
			string dat = null;
			Obj_Machinery_Flasher F = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			second = Num13.Floor( this.timeleft() % 60 );
			minute = Num13.Floor( ( this.timeleft() - second ) / 60 );
			((Mob)a).set_machine( this );
			dat = "<HTML><BODY><TT>";
			dat += "<HR>Timer System:</hr>";
			dat += "<b>Door " + this.id + " controls</b><br/>";

			if ( Lang13.Bool( this.timing ) ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";timing=0'>Stop Timer and open door</a><br/>" ).ToString();
			} else {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";timing=1'>Activate Timer and close door</a><br/>" ).ToString();
			}
			dat += "Time Left: " + ( minute != 0 ? "" + minute + ":" : null ) + second + " <br/>";
			dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";tp=-60'>-</a> <a href='?src=" ).Ref( this ).str( ";tp=-1'>-</a> <a href='?src=" ).Ref( this ).str( ";tp=1'>+</a> <A href='?src=" ).Ref( this ).str( ";tp=60'>+</a><br/>" ).ToString();

			foreach (dynamic _a in Lang13.Enumerate( this.targets, typeof(Obj_Machinery_Flasher) )) {
				F = _a;
				

				if ( F.last_flash != 0 && F.last_flash + 150 > Game13.time ) {
					dat += new Txt( "<br/><A href='?src=" ).Ref( this ).str( ";fc=1'>Flash Charging</A>" ).ToString();
				} else {
					dat += new Txt( "<br/><A href='?src=" ).Ref( this ).str( ";fc=1'>Activate Flash</A>" ).ToString();
				}
			}
			dat += new Txt( "<br/><br/><a href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</a>" ).ToString();
			dat += "</TT></BODY></HTML>";
			Interface13.Browse( a, dat, "window=computer;size=400x500" );
			GlobalFuncs.onclose( a, "computer" );
			return null;
		}

		// Function from file: brigdoors.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

		// Function from file: brigdoors.dm
		public void update_display( string line1 = null, string line2 = null ) {
			string new_text = null;

			new_text = "<div style=\"font-size:" + "5pt" + ";color:" + "#09f" + ";font:'" + "Arial Black" + "';text-align:center;\" valign=\"top\">" + line1 + "<br>" + line2 + "</div>";

			if ( this.maptext != new_text ) {
				this.maptext = new_text;
			}
			return;
		}

		// Function from file: brigdoors.dm
		public void set_picture( string state = null ) {
			
			if ( Lang13.Bool( this.maptext ) ) {
				this.maptext = "";
			}
			this.picture_state = state;
			this.overlays.Cut();
			this.overlays.Add( new Image( "icons/obj/status_display.dmi", null, this.picture_state ) );
			return;
		}

		// Function from file: brigdoors.dm
		public void timeset( double seconds = 0 ) {
			
			if ( Lang13.Bool( this.timing ) ) {
				this.releasetime = Game13.time + seconds * 10;
			} else {
				this.timelength = seconds * 10;
			}
			return;
		}

		// Function from file: brigdoors.dm
		public double timeleft(  ) {
			double _default = 0;

			_default = ( Lang13.Bool( this.timing ) ? this.releasetime - Game13.time : this.timelength ) / 10;

			if ( _default < 0 ) {
				_default = 0;
			}
			return _default;
		}

		// Function from file: brigdoors.dm
		public bool timer_end(  ) {
			Obj_Machinery_Door_Window_Brigdoor door = null;
			Obj_Structure_Closet_SecureCloset_Brig C = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.targets, typeof(Obj_Machinery_Door_Window_Brigdoor) )) {
				door = _a;
				

				if ( !door.density ) {
					continue;
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					door.open();
					return;
				}));
			}

			foreach (dynamic _b in Lang13.Enumerate( this.targets, typeof(Obj_Structure_Closet_SecureCloset_Brig) )) {
				C = _b;
				

				if ( C.broken ) {
					continue;
				}

				if ( C.opened ) {
					continue;
				}
				C.locked = false;
				C.update_icon();
			}
			return true;
		}

		// Function from file: brigdoors.dm
		public bool timer_start(  ) {
			Obj_Machinery_Door_Window_Brigdoor door = null;
			Obj_Structure_Closet_SecureCloset_Brig C = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.targets, typeof(Obj_Machinery_Door_Window_Brigdoor) )) {
				door = _a;
				

				if ( door.density ) {
					continue;
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					door.close();
					return;
				}));
			}

			foreach (dynamic _b in Lang13.Enumerate( this.targets, typeof(Obj_Structure_Closet_SecureCloset_Brig) )) {
				C = _b;
				

				if ( C.broken ) {
					continue;
				}

				if ( C.opened && !C.close() ) {
					continue;
				}
				C.locked = true;
				C.update_icon();
			}
			return true;
		}

		// Function from file: brigdoors.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

		// Function from file: brigdoors.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( Lang13.Bool( this.timing ) ) {
				
				if ( Game13.time > this.releasetime ) {
					this.Radio.set_frequency( GlobalVars.SEC_FREQ );
					this.Radio.talk_into( this, "Timer has expired. Releasing prisoner.", GlobalVars.SEC_FREQ );
					this.timer_end();
					this.timing = 0;
					this.timeset( 0 );
				}
				this.updateUsrDialog();
				this.update_icon();
			} else {
				this.timer_end();
			}
			return null;
		}

	}

}
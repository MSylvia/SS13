// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed_Nest : Obj_Structure_Bed {

		public int health = 100;
		public Image nest_overlay = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.smooth = 1;
			this.buildstacktype = null;
			this.icon = "icons/obj/smooth_structures/alien/nest.dmi";
			this.icon_state = "nest";
		}

		// Function from file: alien_nest.dm
		public Obj_Structure_Bed_Nest ( dynamic loc = null ) : base( (object)(loc) ) {
			this.nest_overlay = new Image( "icons/mob/alien.dmi", "nestoverlay", null, 371 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: alien_nest.dm
		public void healthcheck(  ) {
			
			if ( this.health <= 0 ) {
				this.density = false;
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: alien_nest.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic aforce = null;

			aforce = A.force;
			this.health = Num13.MaxInt( 0, ((int)( this.health - Convert.ToDouble( aforce ) )) );
			GlobalFuncs.playsound( this.loc, "sound/effects/attackblob.ogg", 100, 1 );
			this.visible_message( "<span class='danger'>" + user + " hits " + this + " with " + A + "!</span>" );
			this.healthcheck();
			return null;
		}

		// Function from file: alien_nest.dm
		public override void post_buckle_mob( dynamic M = null ) {
			
			if ( M == this.buckled_mob ) {
				M.pixel_y = 0;
				M.pixel_x = Lang13.Initial( M, "pixel_x" ) + 2;
				M.layer = 3.7;
				this.overlays.Add( this.nest_overlay );
			} else {
				M.pixel_x = ((Mob_Living)M).get_standard_pixel_x_offset( M.lying );
				M.pixel_y = ((Mob_Living)M).get_standard_pixel_y_offset( M.lying );
				M.layer = Lang13.Initial( M, "layer" );
				this.overlays.Remove( this.nest_overlay );
			}
			return;
		}

		// Function from file: alien_nest.dm
		public override bool user_buckle_mob( Ent_Static M = null, dynamic user = null ) {
			
			if ( !( M is Mob ) || Map13.GetDistance( this, user ) > 1 || M.loc != this.loc || ((Mob)user).restrained() || Lang13.Bool( user.stat ) || Lang13.Bool( ((dynamic)M).buckled ) || user is Mob_Living_Silicon_Pai ) {
				return false;
			}

			if ( Lang13.Bool( ((dynamic)M).getorgan( typeof(Obj_Item_Organ_Internal_Alien_Plasmavessel) ) ) ) {
				return false;
			}

			if ( !Lang13.Bool( ((Mob)user).getorgan( typeof(Obj_Item_Organ_Internal_Alien_Plasmavessel) ) ) ) {
				return false;
			}
			this.unbuckle_mob();

			if ( this.buckle_mob( M ) ) {
				M.visible_message( "" + user.name + " secretes a thick vile goo, securing " + M.name + " into " + this + "!", "<span class='danger'>" + user.name + " drenches you in a foul-smelling resin, trapping you in " + this + "!</span>", "<span class='italics'>You hear squelching...</span>" );
			}
			return false;
		}

		// Function from file: alien_nest.dm
		public override dynamic user_unbuckle_mob( dynamic user = null ) {
			dynamic M = null;

			
			if ( Lang13.Bool( this.buckled_mob ) && this.buckled_mob.buckled == this ) {
				M = this.buckled_mob;

				if ( Lang13.Bool( ((Mob)user).getorgan( typeof(Obj_Item_Organ_Internal_Alien_Plasmavessel) ) ) ) {
					this.unbuckle_mob();
					this.add_fingerprint( user );
					return null;
				}

				if ( M != user ) {
					((Ent_Static)M).visible_message( "" + user.name + " pulls " + M.name + " free from the sticky nest!", "<span class='notice'>" + user.name + " pulls you free from the gelatinous resin.</span>", "<span class='italics'>You hear squelching...</span>" );
				} else {
					((Ent_Static)M).visible_message( "<span class='warning'>" + M.name + " struggles to break free from the gelatinous resin!</span>", "<span class='notice'>You struggle to break free from the gelatinous resin... (Stay still for two minutes.)</span>", "<span class='italics'>You hear squelching...</span>" );

					if ( !GlobalFuncs.do_after( M, 1200, null, this ) ) {
						
						if ( Lang13.Bool( M ) && M.buckled != null ) {
							M.WriteMsg( "<span class='warning'>You fail to unbuckle yourself!</span>" );
						}
						return null;
					}

					if ( !( M.buckled != null ) ) {
						return null;
					}
					((Ent_Static)M).visible_message( "<span class='warning'>" + M.name + " breaks free from the gelatinous resin!</span>", "<span class='notice'>You break free from the gelatinous resin!</span>", "<span class='italics'>You hear squelching...</span>" );
				}
				this.unbuckle_mob();
				this.add_fingerprint( user );
			}
			return null;
		}

	}

}
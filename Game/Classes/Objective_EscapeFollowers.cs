// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Objective_EscapeFollowers : Objective {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dangerrating = 5;
		}

		public Objective_EscapeFollowers ( string text = null ) : base( text ) {
			
		}

		// Function from file: objectives.dm
		public override int check_completion(  ) {
			double? escaped = null;
			dynamic G = null;
			Mind follower_mind = null;
			Mind follower_mind2 = null;

			escaped = 0;

			if ( GlobalFuncs.is_handofgod_god( this.owner.current ) ) {
				G = this.owner.current;

				if ( G.side == "red" ) {
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.red_deity_followers, typeof(Mind) )) {
						follower_mind = _a;
						

						if ( Lang13.Bool( follower_mind.current ) && Convert.ToInt32( follower_mind.current.stat ) != 2 ) {
							
							if ( ((Ent_Static)follower_mind.current).onCentcom() ) {
								escaped++;
							}
						}
					}
				}

				if ( G.side == "blue" ) {
					
					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.ticker.mode.blue_deity_followers, typeof(Mind) )) {
						follower_mind2 = _b;
						

						if ( Lang13.Bool( follower_mind2.current ) && Convert.ToInt32( follower_mind2.current.stat ) != 2 ) {
							
							if ( ((Ent_Static)follower_mind2.current).onCentcom() ) {
								escaped++;
							}
						}
					}
				}
			}
			return ( escaped ??0) >= ( this.target_amount ??0) ?1:0;
		}

		// Function from file: objectives.dm
		public double? gen_amount_goal( int lower = 0, int upper = 0 ) {
			this.target_amount = Rand13.Int( lower, upper );
			this.explanation_text = "Your will must surpass this station. Having " + this.target_amount + " followers escape on the shuttle or pods will allow that.";
			return this.target_amount;
		}

	}

}
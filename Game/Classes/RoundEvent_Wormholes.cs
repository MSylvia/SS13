// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_Wormholes : RoundEvent {

		public ByTable pick_turfs = new ByTable();
		public ByTable wormholes = new ByTable();
		public int shift_frequency = 3;
		public int? number_of_wormholes = 400;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 10;
			this.endWhen = 60;
		}

		// Function from file: wormholes.dm
		public override void end(  ) {
			Obj_Effect_Portal_Wormhole O = null;

			GlobalVars.portals.Remove( this.wormholes );

			foreach (dynamic _a in Lang13.Enumerate( this.wormholes, typeof(Obj_Effect_Portal_Wormhole) )) {
				O = _a;
				
				O.loc = null;
			}
			this.wormholes.Cut();
			return;
		}

		// Function from file: wormholes.dm
		public override void tick(  ) {
			Obj_Effect_Portal_Wormhole O = null;
			dynamic T = null;

			
			if ( ( this.activeFor ??0) % this.shift_frequency == 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.wormholes, typeof(Obj_Effect_Portal_Wormhole) )) {
					O = _a;
					
					T = Rand13.PickFromTable( this.pick_turfs );

					if ( Lang13.Bool( T ) ) {
						O.loc = T;
					}
				}
			}
			return;
		}

		// Function from file: wormholes.dm
		public override void announce(  ) {
			GlobalFuncs.priority_announce( "Space-time anomalies detected on the station. There is no additional data.", "Anomaly Alert", "sound/AI/spanomalies.ogg" );
			return;
		}

		// Function from file: wormholes.dm
		public override bool start(  ) {
			Tile_Simulated_Floor T = null;
			int? i = null;
			dynamic T2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Tile_Simulated_Floor) )) {
				T = _a;
				

				if ( T.z == 1 ) {
					this.pick_turfs.Add( T );
				}
			}
			i = null;
			i = 1;

			while (( i ??0) <= ( this.number_of_wormholes ??0)) {
				T2 = Rand13.PickFromTable( this.pick_turfs );
				this.wormholes.Add( new Obj_Effect_Portal_Wormhole( T2, null, null, -1 ) );
				i++;
			}
			return false;
		}

		// Function from file: wormholes.dm
		public override void setup( int? loop = null ) {
			this.announceWhen = Rand13.Int( 0, 20 );
			this.endWhen = Rand13.Int( 40, 80 );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_ReagentDispensers : Obj_Structure {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pressure_resistance = 202.41;
			this.icon = "icons/obj/objects.dmi";
			this.icon_state = "watertank";
		}

		// Function from file: reagent_dispenser.dm
		public Obj_Structure_ReagentDispensers ( dynamic loc = null ) : base( (object)(loc) ) {
			this.create_reagents( 1000 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: reagent_dispenser.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "It contains " + this.reagents.total_volume + " units." );
			return 0;
		}

		// Function from file: reagent_dispenser.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			return null;
		}

		// Function from file: reagent_dispenser.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
			}
			return false;
		}

	}

}
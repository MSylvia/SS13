// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SupplyOrder : Game_Data {

		public int ordernum = 0;
		public SupplyPacks v_object = null;
		public dynamic orderedby = null;
		public dynamic orderedbyRank = null;
		public string comment = null;

		// Function from file: shuttles.dm
		public dynamic createObject( dynamic _loc = null, int? errors = null ) {
			errors = errors ?? 0;

			dynamic Crate = null;
			Obj_Item_Weapon_Paper_Manifest slip = null;
			dynamic stationName = null;
			int packagesAmt = 0;
			ByTable contains = null;
			SupplyPacks SO = null;
			int? j = null;
			dynamic typepath = null;
			dynamic A = null;
			dynamic CritCrate = null;
			Type crittername = null;
			int lostAmt = 0;
			dynamic CR = null;
			dynamic LC = null;

			
			if ( !( this.v_object != null ) ) {
				return null;
			}
			Crate = Lang13.Call( this.v_object.containertype, _loc );
			Crate.name = "" + this.v_object.containername + " " + ( Lang13.Bool( this.comment ) ? "(" + this.comment + ")" : "" );

			if ( Lang13.Bool( this.v_object.access ) ) {
				Crate.req_access = new ByTable(new object [] { String13.ParseNumber( this.v_object.access ) });
			}
			slip = new Obj_Item_Weapon_Paper_Manifest();
			slip.erroneous = errors;
			slip.points = this.v_object.cost;
			slip.ordernumber = this.ordernum;
			stationName = ( ( ( errors ??0) & 1 ) != 0 ? ((dynamic)( GlobalFuncs.new_station_name() )) : GlobalFuncs.station_name() );
			packagesAmt = GlobalVars.SSshuttle.shoppinglist.len + ( ( ( errors ??0) & 2 ) != 0 ? Rand13.Int( 1, 2 ) : 0 );
			slip.info = "<h3>" + GlobalFuncs.command_name() + " Shipping Manifest</h3><hr><br>";
			slip.info += "Order #" + this.ordernum + "<br>";
			slip.info += "Destination: " + stationName + "<br>";
			slip.info += "" + packagesAmt + " PACKAGES IN THIS SHIPMENT<br>";
			slip.info += "CONTENTS:<br><ul>";

			if ( this.v_object is SupplyPacks_Misc_Randomised ) {
				SO = this.v_object;
				contains = new ByTable();

				if ( this.v_object.contains.len != 0 ) {
					j = null;
					j = 1;

					while (( j ??0) <= Convert.ToDouble( ((dynamic)SO).num_contained )) {
						contains.Add( Rand13.PickFromTable( this.v_object.contains ) );
						j++;
					}
				}
			} else {
				contains = this.v_object.contains;
			}

			foreach (dynamic _a in Lang13.Enumerate( contains )) {
				typepath = _a;
				

				if ( !Lang13.Bool( typepath ) ) {
					continue;
				}
				A = Lang13.Call( typepath, Crate );

				if ( this.v_object.amount != 0 && A.vars.Find( "amount" ) != 0 && Lang13.Bool( A.amount ) ) {
					A.amount = this.v_object.amount;
				}
				slip.info += "<li>" + A.name + "</li>";
			}

			if ( Crate is Obj_Structure_Closet_Critter ) {
				CritCrate = Crate;

				if ( CritCrate.content_mob != null ) {
					crittername = CritCrate.content_mob;
					slip.info += "<li>" + Lang13.Initial( crittername, "name" ) + "</li>";
				}
			}

			if ( ( ( errors ??0) & 4 ) != 0 ) {
				
				if ( String13.FindIgnoreCase( "" + this.v_object.containertype, "/secure/", 1, 0 ) != 0 || String13.FindIgnoreCase( "" + this.v_object.containertype, "/largecrate/", 1, 0 ) != 0 ) {
					errors &= 65531;
				} else {
					lostAmt = Num13.MaxInt( Num13.Floor( Crate.contents.len / 10 ), 1 );

					while (--lostAmt >= 0) {
						GlobalFuncs.qdel( Rand13.PickFromTable( Crate.contents ) );
					}
				}
			}
			slip.info += "</ul><br>";
			slip.info += "CHECK CONTENTS AND STAMP BELOW THE LINE TO CONFIRM RECEIPT OF GOODS<hr>";
			slip.loc = Crate;

			if ( Crate is Obj_Structure_Closet_Crate ) {
				CR = Crate;
				CR.manifest = slip;
				CR.update_icon();
			}

			if ( Crate is Obj_Structure_Largecrate ) {
				LC = Crate;
				LC.manifest = slip;
				LC.update_icon();
			}
			return Crate;
		}

		// Function from file: shuttles.dm
		public Obj_Item_Weapon_Paper generateRequisition( Ent_Static _loc = null ) {
			Obj_Item_Weapon_Paper reqform = null;

			
			if ( !( this.v_object != null ) ) {
				return null;
			}
			reqform = new Obj_Item_Weapon_Paper( _loc );
			reqform.name = "requisition form - " + this.v_object.name;
			reqform.info += "<h3>" + GlobalVars.station_name + " Supply Requisition Form</h3><hr>";
			reqform.info += "INDEX: #" + this.ordernum + "<br>";
			reqform.info += "REQUESTED BY: " + this.orderedby + "<br>";
			reqform.info += "RANK: " + this.orderedbyRank + "<br>";
			reqform.info += "REASON: " + this.comment + "<br>";
			reqform.info += "SUPPLY CRATE TYPE: " + this.v_object.name + "<br>";
			reqform.info += "ACCESS RESTRICTION: " + GlobalFuncs.get_access_desc( this.v_object.access ) + "<br>";
			reqform.info += "CONTENTS:<br>";
			reqform.info += this.v_object.manifest;
			reqform.info += "<hr>";
			reqform.info += "STAMP BELOW TO APPROVE THIS REQUISITION:<br>";
			reqform.update_icon();
			return reqform;
		}

	}

}
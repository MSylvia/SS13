// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_Terminal : Obj_Machinery_Power {

		public Obj_Machinery_Power master = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.level = 1;
			this.icon_state = "term";
			this.layer = 2.6;
		}

		// Function from file: terminal.dm
		public Obj_Machinery_Power_Terminal ( dynamic loc = null ) : base( (object)(loc) ) {
			Ent_Static T = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			T = this.loc;

			if ( this.level == 1 ) {
				this.hide( Lang13.Bool( ((dynamic)T).intact ) );
			}
			return;
		}

		// Function from file: terminal.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Wirecutters ) {
				this.dismantle( user );
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: terminal.dm
		public void dismantle( dynamic user = null ) {
			Ent_Static T = null;
			EffectSystem_SparkSpread s = null;

			
			if ( this.loc is Tile_Simulated ) {
				T = this.loc;

				if ( Lang13.Bool( ((dynamic)T).intact ) ) {
					user.WriteMsg( "<span class='warning'>You must first expose the power terminal!</span>" );
					return;
				}

				if ( this.master != null && this.master.can_terminal_dismantle() ) {
					((Ent_Static)user).visible_message( "" + user.name + " dismantles the power terminal from " + this.master + ".", "<span class='notice'>You begin to cut the cables...</span>" );
					GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 50, 1 );

					if ( GlobalFuncs.do_after( user, 50, null, this ) ) {
						
						if ( this.master != null && this.master.can_terminal_dismantle() ) {
							
							if ( Rand13.PercentChance( 50 ) && Lang13.Bool( GlobalFuncs.electrocute_mob( user, this.powernet, this ) ) ) {
								s = new EffectSystem_SparkSpread();
								s.set_up( 5, 1, this.master );
								s.start();
								return;
							}
							new Obj_Item_Stack_CableCoil( this.loc, 10 );
							user.WriteMsg( "<span class='notice'>You cut the cables and dismantle the power terminal.</span>" );
							GlobalFuncs.qdel( this );
						}
					}
				}
			}
			return;
		}

		// Function from file: terminal.dm
		public override void hide( bool h = false ) {
			
			if ( h ) {
				this.invisibility = 101;
				this.icon_state = "term-f";
			} else {
				this.invisibility = 0;
				this.icon_state = "term";
			}
			return;
		}

		// Function from file: terminal.dm
		public override dynamic Destroy(  ) {
			
			if ( this.master != null ) {
				this.master.disconnect_terminal();
			}
			return base.Destroy();
		}

	}

}
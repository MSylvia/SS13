// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Easel : Obj_Structure {

		public dynamic painting = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.burn_state = 0;
			this.burntime = 15;
			this.icon = "icons/obj/artstuff.dmi";
			this.icon_state = "easel";
		}

		public Obj_Structure_Easel ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: artstuff.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );
			base.Move( (object)(NewLoc), Dir, step_x, step_y );

			if ( Lang13.Bool( this.painting ) && this.painting.loc == T ) {
				this.painting.loc = GlobalFuncs.get_turf( this );
			} else {
				this.painting = null;
			}
			return false;
		}

		// Function from file: artstuff.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;

			
			if ( A is Obj_Item_Weapon_Canvas ) {
				C = A;
				((Mob)user).unEquip( C );
				this.painting = C;
				C.loc = GlobalFuncs.get_turf( this );
				C.layer = this.layer + 0.1;
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " puts " ).the( C ).item().str( " on " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You place " ).the( C ).item().str( " on " ).the( this ).item().str( ".</span>" ).ToString() );
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

	}

}
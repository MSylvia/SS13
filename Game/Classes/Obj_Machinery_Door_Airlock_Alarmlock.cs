// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Door_Airlock_Alarmlock : Obj_Machinery_Door_Airlock {

		public RadioFrequency air_connection = null;
		public double? air_frequency = 1437;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.overlays_file = "icons/obj/doors/airlocks/station2/overlays.dmi";
			this.doortype = typeof(Obj_Structure_DoorAssembly_DoorAssemblyGlass);
			this.glass = true;
			this.autoclose = false;
			this.icon = "icons/obj/doors/airlocks/station2/glass.dmi";
		}

		// Function from file: alarmlock.dm
		public Obj_Machinery_Door_Airlock_Alarmlock ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.air_connection = new RadioFrequency();
			return;
		}

		// Function from file: alarmlock.dm
		public override bool receive_signal( Signal signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			dynamic alarm_area = null;
			dynamic alert = null;
			dynamic our_area = null;

			base.receive_signal( signal, receive_method, (object)(receive_param) );

			if ( ( this.stat & 3 ) != 0 ) {
				return false;
			}
			alarm_area = signal.data["zone"];
			alert = signal.data["alert"];
			our_area = GlobalFuncs.get_area( this );

			if ( Lang13.Bool( our_area.master ) ) {
				our_area = our_area.master;
			}

			if ( alarm_area == our_area.name ) {
				
				dynamic _a = alert; // Was a switch-case, sorry for the mess.
				if ( _a=="severe" ) {
					this.autoclose = true;
					this.close();
				} else if ( _a=="minor" || _a=="clear" ) {
					this.autoclose = false;
					this.open();
				}
			}
			return false;
		}

		// Function from file: alarmlock.dm
		public override void initialize(  ) {
			base.initialize();
			GlobalVars.SSradio.remove_object( this, this.air_frequency );
			this.air_connection = GlobalVars.SSradio.add_object( this, this.air_frequency, GlobalVars.RADIO_TO_AIRALARM );
			this.open();
			return;
		}

		// Function from file: alarmlock.dm
		public override dynamic Destroy(  ) {
			
			if ( GlobalVars.SSradio != null ) {
				GlobalVars.SSradio.remove_object( this, this.air_frequency );
			}
			this.air_connection = null;
			return base.Destroy();
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Surgery : Game_Data {

		public string name = "surgery";
		public int status = 1;
		public ByTable steps = new ByTable();
		public bool step_in_progress = false;
		public bool can_cancel = true;
		public ByTable species = new ByTable(new object [] { typeof(Mob_Living_Carbon_Human) });
		public string location = "chest";
		public bool requires_organic_bodypart = true;
		public ByTable possible_locs = new ByTable();
		public bool ignore_clothes = false;
		public dynamic organ = null;

		// Function from file: surgery.dm
		public void complete( Mob target = null ) {
			((dynamic)target).surgeries -= this;
			Task13.Source = null;
			return;
		}

		// Function from file: surgery.dm
		public dynamic get_surgery_step(  ) {
			dynamic step_type = null;

			step_type = this.steps[this.status];
			return Lang13.Call( step_type );
		}

		// Function from file: surgery.dm
		public bool next_step( dynamic user = null, Mob_Living target = null ) {
			dynamic S = null;

			
			if ( this.step_in_progress ) {
				return false;
			}
			S = this.get_surgery_step();

			if ( Lang13.Bool( S ) ) {
				
				if ( ((SurgeryStep)S).try_op( user, target, user.zone_sel.selecting, ((Mob)user).get_active_hand(), this ) ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: surgery.dm
		public virtual bool can_start( dynamic user = null, dynamic target = null ) {
			return true;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Atmospherics_Pipe_Manifold4w : Obj_Machinery_Atmospherics_Pipe {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.initialize_directions = 15;
			this.device_type = 4;
			this.icon = "icons/obj/atmospherics/pipes/manifold.dmi";
			this.icon_state = "manifold4w";
		}

		public Obj_Machinery_Atmospherics_Pipe_Manifold4w ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: manifold4w.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			string invis = null;
			double I = 0;

			invis = ( this.invisibility != 0 ? "-f" : "" );
			this.icon_state = "manifold4w_center" + invis;
			this.overlays.Cut();

			foreach (dynamic _a in Lang13.IterateRange( 1, this.device_type )) {
				I = _a;
				

				if ( Lang13.Bool( this.nodes[I] ) ) {
					this.overlays.Add( this.getpipeimage( "icons/obj/atmospherics/pipes/manifold.dmi", "manifold_full" + invis, Map13.GetDistance( this, this.nodes[I] ) ) );
				}
			}
			return null;
		}

		// Function from file: manifold4w.dm
		public override void SetInitDirections(  ) {
			this.initialize_directions = Lang13.Initial( this, "initialize_directions" );
			return;
		}

	}

}
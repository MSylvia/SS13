// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class MartialArt_Wrestling : MartialArt {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Wrestling";
			this.help_verb = typeof(Mob_Living_Carbon_Human).GetMethod( "wrestling_help" );
		}

		// Function from file: martial.dm
		public override bool grab_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			dynamic affecting = null;
			double armor_block = 0;

			D.grabbedby( A, true );
			D.visible_message( "<span class='danger'>" + A + " holds " + D + " down!</span>", "<span class='userdanger'>" + A + " holds " + D + " down!</span>" );
			affecting = D.get_organ( GlobalFuncs.ran_zone( A.zone_sel.selecting ) );
			armor_block = D.run_armor_check( affecting, "melee" );
			D.apply_damage( 10, "stamina", affecting, armor_block );
			return true;
		}

		// Function from file: martial.dm
		public override bool disarm_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			dynamic G = null;

			
			if ( ((Mob)A).get_inactive_hand() is Obj_Item_Weapon_Grab ) {
				G = ((Mob)A).get_inactive_hand();

				if ( G.affecting == D ) {
					this.Suplex( A, D );
					return true;
				}
			}
			this.harm_act( A, D );
			return true;
		}

		// Function from file: martial.dm
		public void Suplex( dynamic A = null, Ent_Dynamic D = null ) {
			double armor_block = 0;

			D.visible_message( "<span class='danger'>" + A + " suplexes " + D + "!</span>", "<span class='userdanger'>" + A + " suplexes " + D + "!</span>" );
			D.forceMove( A.loc );
			armor_block = ((Mob_Living)D).run_armor_check( null, "melee" );
			((Mob_Living)D).apply_damage( 30, "brute", null, armor_block );
			((Mob_Living)D).apply_effect( 6, "weaken", armor_block );
			GlobalFuncs.add_logs( A, D, "suplexed" );
			((Ent_Static)A).SpinAnimation( 10, 1 );
			D.SpinAnimation( 10, 1 );
			Task13.Schedule( 3, (Task13.Closure)(() => {
				armor_block = ((Mob_Living)A).run_armor_check( null, "melee" );
				((Mob_Living)A).apply_effect( 4, "weaken", armor_block );
				return;
			}));
			return;
		}

		// Function from file: martial.dm
		public override bool harm_act( dynamic A = null, Mob_Living D = null ) {
			dynamic G = null;

			D.grabbedby( A, true );
			G = ((Mob)A).get_active_hand();

			if ( Lang13.Bool( G ) && Rand13.PercentChance( 50 ) ) {
				G.state = 2;
				D.visible_message( "<span class='danger'>" + A + " has " + D + " in a clinch!</span>", "<span class='userdanger'>" + A + " has " + D + " in a clinch!</span>" );
			} else {
				D.visible_message( "<span class='danger'>" + A + " fails to get " + D + " in a clinch!</span>", "<span class='userdanger'>" + A + " fails to get " + D + " in a clinch!</span>" );
			}
			return true;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Twohanded_Fireaxe : Obj_Item_Weapon_Twohanded {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 5;
			this.throwforce = 15;
			this.w_class = 4;
			this.slot_flags = 1024;
			this.force_unwielded = 5;
			this.force_wielded = 24;
			this.attack_verb = new ByTable(new object [] { "attacked", "chopped", "cleaved", "torn", "cut" });
			this.hitsound = "sound/weapons/bladeslice.ogg";
			this.sharpness = 1;
			this.icon_state = "fireaxe0";
		}

		public Obj_Item_Weapon_Twohanded_Fireaxe ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: twohanded.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic W = null;
			dynamic G = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( this.wielded ) {
				
				if ( target is Obj_Structure_Window ) {
					W = target;
					((Obj_Structure_Window)W).spawnfragments();
				} else if ( target is Obj_Structure_Grille ) {
					G = target;
					G.health = -6;
					G.destroyed += Rand13.PercentChance( 25 ) ?1:0;
					G.healthcheck();
				}
			}
			return false;
		}

		// Function from file: twohanded.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( new Txt( "<span class='suicide'>" ).item( user ).str( " axes " ).himself_herself_itself_themself().str( " from head to toe! It looks like " ).he_she_it_they().str( "'s trying to commit suicide..</span>" ).ToString() );
			return 1;
		}

		// Function from file: twohanded.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.icon_state = "fireaxe" + this.wielded;
			return null;
		}

	}

}
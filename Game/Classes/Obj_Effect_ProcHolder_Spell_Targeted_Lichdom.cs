// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Targeted_Lichdom : Obj_Effect_ProcHolder_Spell_Targeted {

		public Obj marked_item = null;
		public Mob_Living_Carbon_Human current_body = null;
		public int resurrections = 0;
		public bool existence_stops_round_end = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.school = "necromancy";
			this.charge_max = 10;
			this.clothes_req = 0;
			this.centcom_cancast = false;
			this.invocation = "NECREM IMORTIUM!";
			this.invocation_type = "shout";
			this.range = -1;
			this.level_max = 0;
			this.cooldown_min = 10;
			this.include_user = true;
			this.action_icon_state = "skeleton";
		}

		// Function from file: lichdom.dm
		public Obj_Effect_ProcHolder_Spell_Targeted_Lichdom ( dynamic loc = null ) : base( (object)(loc) ) {
			
			if ( Lang13.Bool( Lang13.Initial( GlobalVars.ticker.mode, "round_ends_with_antag_death" ) ) ) {
				this.existence_stops_round_end = true;
				GlobalVars.ticker.mode.round_ends_with_antag_death = false;
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: lichdom.dm
		public override bool cast( dynamic targets = null, dynamic thearea = null, dynamic user = null ) {
			thearea = thearea ?? Task13.User;

			dynamic M = null;
			ByTable hand_items = null;
			dynamic user_turf = null;
			dynamic item_turf = null;
			dynamic O = null;
			Mob_Living_Carbon_Human lich = null;
			Mob_Living_Carbon_Human old_body = null;
			dynamic body_turf = null;
			Mob C = null;
			Obj_Item W = null;
			string wheres_wizdo = null;
			Obj item = null;
			dynamic H = null;

			
			foreach (dynamic _c in Lang13.Enumerate( targets )) {
				M = _c;
				
				hand_items = new ByTable();

				if ( M is Mob_Living_Carbon ) {
					hand_items = new ByTable(new object [] { ((Mob)M).get_active_hand(), ((Mob)M).get_inactive_hand() });
				}

				if ( this.marked_item != null && !this.stat_allowed ) {
					this.marked_item = null;
					return false;
				}

				if ( this.stat_allowed ) {
					
					if ( Lang13.Bool( M.stat ) == false && M is Mob_Living_Carbon ) {
						M.WriteMsg( "<span class='notice'>You aren't dead enough to revive!</span>" );
						this.charge_counter = this.charge_max;
						return false;
					}

					if ( !( this.marked_item != null ) || GlobalFuncs.qdeleted( this.marked_item ) ) {
						M.WriteMsg( "<span class='warning'>Your phylactery is gone!</span>" );
						return false;
					}
					user_turf = GlobalFuncs.get_turf( M );
					item_turf = GlobalFuncs.get_turf( this.marked_item );

					if ( user_turf.z != item_turf.z ) {
						M.WriteMsg( "<span class='warning'>Your phylactery is out of range!</span>" );
						return false;
					}

					if ( M is Mob_Dead_Observer ) {
						O = M;
						O.__CallVerb("Re-enter Corpse" );
					}
					lich = new Mob_Living_Carbon_Human( item_turf );
					lich.equip_to_slot_or_del( new Obj_Item_Clothing_Shoes_Sandal( lich ), 12 );
					lich.equip_to_slot_or_del( new Obj_Item_Clothing_Under_Color_Black( lich ), 14 );
					lich.equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Wizrobe_Black( lich ), 13 );
					lich.equip_to_slot_or_del( new Obj_Item_Clothing_Head_Wizard_Black( lich ), 11 );
					lich.real_name = M.mind.name;
					((Mind)M.mind).transfer_to( lich );
					lich.hardset_dna( null, null, lich.real_name, null, typeof(Species_Skeleton) );
					lich.WriteMsg( "<span class='warning'>Your bones clatter and shutter as they're pulled back into this world!</span>" );
					this.charge_max += 600;
					old_body = this.current_body;
					body_turf = GlobalFuncs.get_turf( old_body );
					this.current_body = lich;
					lich.Weaken( this.resurrections * 10 + 10 );
					this.resurrections++;

					if ( old_body != null && old_body.loc != null ) {
						
						if ( old_body is Mob_Living_Carbon ) {
							C = old_body;

							foreach (dynamic _a in Lang13.Enumerate( C, typeof(Obj_Item) )) {
								W = _a;
								
								C.unEquip( W );
							}
						}
						wheres_wizdo = GlobalFuncs.dir2text( Map13.GetDistance( body_turf, item_turf ) );

						if ( Lang13.Bool( wheres_wizdo ) ) {
							old_body.visible_message( "<span class='warning'>Suddenly " + old_body.name + "'s corpse falls to pieces! You see a strange energy rise from the remains, and speed off towards the " + wheres_wizdo + "!</span>" );
							((Ent_Static)body_turf).Beam( item_turf, "lichbeam", "icons/effects/effects.dmi", this.resurrections * 10 + 10, Double.PositiveInfinity );
						}
						old_body.dust();
					}
				}

				if ( !( this.marked_item != null ) ) {
					this.message = "<span class='warning'>";

					foreach (dynamic _b in Lang13.Enumerate( hand_items, typeof(Obj) )) {
						item = _b;
						

						if ( Lang13.Bool( item.flags.Contains( ((dynamic)( Lang13.Bool( item.flags ) || 2 != 0 )).Contains( 128 ) ) ) ) {
							continue;
						}
						this.marked_item = item;
						M.WriteMsg( "<span class='warning'>You begin to focus your very being into the " + item.name + "...</span>" );
						break;
					}

					if ( !( this.marked_item != null ) ) {
						M.WriteMsg( "<span class='caution'>You must hold an item you wish to make your phylactery...</span>" );
					}
					Task13.Schedule( 50, (Task13.Closure)(() => {
						
						if ( this.marked_item.loc != M ) {
							M.WriteMsg( "<span class='warning'>Your soul snaps back to your body as you drop the " + this.marked_item.name + "!</span>" );
							this.marked_item = null;
							return;
						}
						this.name = "RISE!";
						this.desc = "Rise from the dead! You will reform at the location of your phylactery and your old body will crumble away.";
						this.charge_max = 1800;
						this.charge_counter = 1800;
						this.stat_allowed = true;
						this.marked_item.name = "Ensouled " + this.marked_item.name;
						this.marked_item.desc = "A terrible aura surrounds this item, its very existence is offensive to life itself...";
						this.marked_item.color = "#003300";
						M.WriteMsg( "<span class='userdanger'>With a hideous feeling of emptiness you watch in horrified fascination as skin sloughs off bone! Blood boils, nerves disintegrate, eyes boil in their sockets! As your organs crumble to dust in your fleshless chest you come to terms with your choice. You're a lich!</span>" );
						((Mob)M).set_species( typeof(Species_Skeleton) );
						this.current_body = M.mind.current;

						if ( M is Mob_Living_Carbon_Human ) {
							H = M;
							((Mob)H).unEquip( H.wear_suit );
							((Mob)H).unEquip( H.head );
							((Mob)H).equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Wizrobe_Black( H ), 13 );
							((Mob)H).equip_to_slot_or_del( new Obj_Item_Clothing_Head_Wizard_Black( H ), 11 );
						}
						return;
					}));
				}
			}
			return false;
		}

		// Function from file: lichdom.dm
		public override dynamic Destroy(  ) {
			Mind M = null;
			Obj_Effect_ProcHolder_Spell S = null;

			
			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.ticker.mode.wizards, typeof(Mind) )) {
				M = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( M.spell_list, typeof(Obj_Effect_ProcHolder_Spell) )) {
					S = _a;
					

					if ( S is Obj_Effect_ProcHolder_Spell_Targeted_Lichdom && S != this ) {
						return base.Destroy();
					}
				}
			}

			if ( this.existence_stops_round_end ) {
				GlobalVars.ticker.mode.round_ends_with_antag_death = true;
			}
			base.Destroy();
			return null;
		}

	}

}
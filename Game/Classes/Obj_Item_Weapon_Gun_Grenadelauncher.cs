// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Grenadelauncher : Obj_Item_Weapon_Gun {

		public ByTable grenades = new ByTable();
		public int max_grenades = 3;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "riotgun";
			this.w_class = 4;
			this.materials = new ByTable().Set( "$metal", 2000 );
			this.icon_state = "riotgun";
		}

		public Obj_Item_Weapon_Gun_Grenadelauncher ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: grenade_launcher.dm
		public void fire_grenade( dynamic target = null, dynamic user = null ) {
			Ent_Static F = null;

			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " fired a grenade!</span>", "<span class='danger'>You fire the grenade launcher!</span>" );
			F = this.grenades[1];
			this.grenades.Remove( F );
			F.loc = user.loc;
			((dynamic)F).throw_at_fast( target, 30, 2, user );
			GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " fired a grenade (" + F.name + ") from a grenade launcher (" + this.name + ")." );
			GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " fired a grenade (" + F.name + ") from a grenade launcher (" + this.name + ")." );
			((dynamic)F).active = 1;
			F.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
			GlobalFuncs.playsound( user.loc, "sound/weapons/armbomb.ogg", 75, 1, -3 );
			Task13.Schedule( 15, (Task13.Closure)(() => {
				((dynamic)F).prime();
				return;
			}));
			return;
		}

		// Function from file: grenade_launcher.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( target is Obj_Item_Weapon_Storage_Backpack ) {
				return false;
			} else if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Table), this.loc ) ) ) {
				return false;
			} else if ( target == user ) {
				return false;
			}

			if ( this.grenades.len != 0 ) {
				this.fire_grenade( target, user );
			} else {
				Task13.User.WriteMsg( "<span class='danger'>The grenade launcher is empty.</span>" );
			}
			return false;
		}

		// Function from file: grenade_launcher.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Grenade ) {
				
				if ( this.grenades.len < this.max_grenades ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					A.loc = this;
					this.grenades.Add( A );
					user.WriteMsg( "<span class='notice'>You put the grenade in the grenade launcher.</span>" );
					user.WriteMsg( "<span class='notice'>" + this.grenades.len + " / " + this.max_grenades + " Grenades.</span>" );
				} else {
					Task13.User.WriteMsg( "<span class='danger'>The grenade launcher cannot hold more grenades.</span>" );
				}
			}
			return null;
		}

		// Function from file: grenade_launcher.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "" + this.grenades.len + " / " + this.max_grenades + " grenades loaded." );
			return 0;
		}

	}

}
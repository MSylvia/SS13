// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_LightW : Obj_Item_Stack {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "wired glass floor tile";
			this.force = 3;
			this.throwforce = 5;
			this.throw_speed = 3;
			this.flags = 64;
			this.max_amount = 60;
			this.icon = "icons/obj/tiles.dmi";
			this.icon_state = "glass_wire";
		}

		public Obj_Item_Stack_LightW ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: light.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Stack_CableCoil CC = null;
			Obj_Item_Stack_Sheet_Glass G = null;
			dynamic M = null;
			Obj_Item_Stack_Tile_Light L = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Wirecutters ) {
				CC = new Obj_Item_Stack_CableCoil( user.loc );
				CC.amount = 5;
				CC.add_fingerprint( user );
				this.amount--;
				G = new Obj_Item_Stack_Sheet_Glass( user.loc );
				G.add_fingerprint( user );

				if ( ( this.amount ??0) <= 0 ) {
					((Mob)user).unEquip( this, true );
					GlobalFuncs.qdel( this );
				}
			}

			if ( A is Obj_Item_Stack_Sheet_Metal ) {
				M = A;

				if ( Lang13.Bool( M.use( 1 ) ) ) {
					this.use( 1 );
					L = new Obj_Item_Stack_Tile_Light( user.loc );
					user.WriteMsg( "<span class='notice'>You make a light tile.</span>" );
					L.add_fingerprint( user );
				} else {
					user.WriteMsg( "<span class='warning'>You need one metal sheet to finish the light tile!</span>" );
					return null;
				}
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Mimic_Crate : Mob_Living_SimpleAnimal_Hostile_Mimic {

		public bool attempt_open = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.attacktext = "bites";
			this.speak_emote = new ByTable(new object [] { "clatters" });
			this.stop_automated_movement = true;
			this.wander = false;
		}

		public Mob_Living_SimpleAnimal_Hostile_Mimic_Crate ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mimic.dm
		public override dynamic AttackingTarget(  ) {
			dynamic _default = null;

			_default = base.AttackingTarget();

			if ( Lang13.Bool( _default ) ) {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			return _default;
		}

		// Function from file: mimic.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			Obj_Structure_Closet_Crate C = null;
			Obj O = null;

			C = new Obj_Structure_Closet_Crate( GlobalFuncs.get_turf( this ) );

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj) )) {
				O = _a;
				
				O.loc = C;
			}
			base.death( gibbed, toast );
			return false;
		}

		// Function from file: mimic.dm
		public override void LoseTarget(  ) {
			base.LoseTarget();
			this.icon_state = Lang13.Initial( this, "icon_state" );
			return;
		}

		// Function from file: mimic.dm
		public override bool adjustHealth( dynamic amount = null ) {
			this.trigger();
			base.adjustHealth( (object)(amount) );
			return false;
		}

		// Function from file: mimic.dm
		public void trigger(  ) {
			
			if ( !this.attempt_open ) {
				this.visible_message( "<b>" + this + "</b> starts to move!" );
				this.attempt_open = true;
			}
			return;
		}

		// Function from file: mimic.dm
		public override dynamic FindTarget( ByTable possible_targets = null, bool? HasTargetsList = null ) {
			dynamic _default = null;

			_default = base.FindTarget( possible_targets, HasTargetsList );

			if ( Lang13.Bool( _default ) ) {
				this.trigger();
			}
			return _default;
		}

		// Function from file: mimic.dm
		public override ByTable ListTargets(  ) {
			
			if ( this.attempt_open ) {
				return base.ListTargets();
			}
			return base.ListTargets(  );
		}

		// Function from file: mimic.dm
		public override void DestroySurroundings(  ) {
			base.DestroySurroundings();

			if ( Rand13.PercentChance( 90 ) ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "open";
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			return;
		}

		// Function from file: mimic.dm
		public override void initialize(  ) {
			Obj_Item I = null;

			base.initialize();

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Item) )) {
				I = _a;
				
				I.loc = this;
			}
			return;
		}

	}

}
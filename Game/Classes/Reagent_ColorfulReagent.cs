// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_ColorfulReagent : Reagent {

		public ByTable random_color_list = new ByTable(new object [] { "#00aedb", "#a200ff", "#f47835", "#d41243", "#d11141", "#00b159", "#00aedb", "#f37735", "#ffc425", "#008744", "#0057e7", "#d62d20", "#ffa700" });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Colorful Reagent";
			this.id = "colorful_reagent";
			this.description = "A solution.";
			this.color = "#C8A5DC";
		}

		// Function from file: other_reagents.dm
		public override void reaction_turf( dynamic T = null, double? volume = null ) {
			
			if ( Lang13.Bool( T ) ) {
				T.color = Rand13.PickFromTable( this.random_color_list );
			}
			base.reaction_turf( (object)(T), volume );
			return;
		}

		// Function from file: other_reagents.dm
		public override bool reaction_obj( dynamic O = null, double? volume = null ) {
			
			if ( Lang13.Bool( O ) ) {
				O.color = Rand13.PickFromTable( this.random_color_list );
			}
			base.reaction_obj( (object)(O), volume );
			return false;
		}

		// Function from file: other_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null ) {
			
			if ( Lang13.Bool( M ) && M is Mob_Living ) {
				M.color = Rand13.PickFromTable( this.random_color_list );
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection) );
			return 0;
		}

		// Function from file: other_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			
			if ( Lang13.Bool( M ) && M is Mob_Living ) {
				M.color = Rand13.PickFromTable( this.random_color_list );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
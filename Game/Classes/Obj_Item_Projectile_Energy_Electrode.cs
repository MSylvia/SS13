// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Projectile_Energy_Electrode : Obj_Item_Projectile_Energy {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#FFFF00";
			this.nodamage = true;
			this.stun = 5;
			this.weaken = 5;
			this.stutter = 5;
			this.jitter = 20;
			this.hitsound = "sound/weapons/taserhit.ogg";
			this.range = 7;
		}

		public Obj_Item_Projectile_Energy_Electrode ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: energy.dm
		public override void on_range(  ) {
			EffectSystem_SparkSpread sparks = null;

			sparks = new EffectSystem_SparkSpread();
			sparks.set_up( 1, 1, this );
			sparks.start();
			base.on_range();
			return;
		}

		// Function from file: energy.dm
		public override dynamic on_hit( Ent_Static target = null, double? blocked = null, dynamic hit_zone = null ) {
			blocked = blocked ?? 0;

			dynamic _default = null;

			EffectSystem_SparkSpread sparks = null;
			Ent_Static C = null;

			_default = base.on_hit( target, blocked, (object)(hit_zone) );

			if ( !( target is Mob ) || ( blocked ??0) >= 2 ) {
				sparks = new EffectSystem_SparkSpread();
				sparks.set_up( 1, 1, this );
				sparks.start();
			} else if ( target is Mob_Living_Carbon ) {
				C = target;

				if ( Lang13.Bool( ((dynamic)C).dna ) && ((Dna)((dynamic)C).dna).check_mutation( "Hulk" ) != 0 ) {
					((dynamic)C).say( Rand13.Pick(new object [] { ";RAAAAAAAARGH!", ";HNNNNNNNNNGGGGGGH!", ";GWAAAAAAAARRRHHH!", "NNNNNNNNGGGGGGGGHH!", ";AAAAAAARRRGH!" }) );
				} else if ( Lang13.Bool( ((dynamic)C).status_flags & 2 ) ) {
					Task13.Schedule( 5, (Task13.Closure)(() => {
						((dynamic)C).do_jitter_animation( this.jitter );
						return;
					}));
				}
			}
			return _default;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Mop : Obj_Item_Weapon {

		public bool mopping = false;
		public bool mopcount = false;
		public int mopcap = 5;
		public double mopspeed = 30;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 3;
			this.throwforce = 5;
			this.throw_speed = 3;
			this.attack_verb = new ByTable(new object [] { "mopped", "bashed", "bludgeoned", "whacked" });
			this.burn_state = 0;
			this.icon = "icons/obj/janitor.dmi";
			this.icon_state = "mop";
		}

		// Function from file: mop.dm
		public Obj_Item_Weapon_Mop ( dynamic loc = null ) : base( (object)(loc) ) {
			this.create_reagents( this.mopcap );
			return;
		}

		// Function from file: mop.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic turf = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( ( this.reagents.total_volume ??0) < 1 ) {
				user.WriteMsg( "<span class='warning'>Your mop is dry!</span>" );
				return false;
			}
			turf = target;

			if ( target is Obj_Effect_Decal_Cleanable || target is Obj_Effect_Rune ) {
				turf = target.loc;
			}
			target = null;

			if ( turf is Tile_Simulated ) {
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " begins to clean " ).the( turf ).item().str( " with " ).item( this ).str( "." ).ToString(), new Txt( "<span class='notice'>You begin to clean " ).the( turf ).item().str( " with " ).item( this ).str( "...</span>" ).ToString() );

				if ( GlobalFuncs.do_after( user, this.mopspeed, null, turf ) ) {
					user.WriteMsg( "<span class='notice'>You finish mopping.</span>" );
					this.clean( turf );
				}
			}
			return false;
		}

		// Function from file: mop.dm
		public virtual void janicart_insert( dynamic user = null, Obj_Structure_Janitorialcart J = null ) {
			J.put_in_cart( this, user );
			J.mymop = this;
			J.update_icon();
			return;
		}

		// Function from file: mop.dm
		public void clean( dynamic A = null ) {
			Obj_Effect O = null;

			
			if ( Lang13.Bool( this.reagents.has_reagent( "water", 1 ) ) || Lang13.Bool( this.reagents.has_reagent( "holywater", 1 ) ) ) {
				((Ent_Static)A).clean_blood();
				A.thermite = 0;

				foreach (dynamic _a in Lang13.Enumerate( A, typeof(Obj_Effect) )) {
					O = _a;
					

					if ( O is Obj_Effect_Decal_Cleanable || O is Obj_Effect_Rune ) {
						GlobalFuncs.qdel( O );
					}
				}
			}
			this.reagents.reaction( A, GlobalVars.TOUCH, 10 );
			this.reagents.remove_any( 1 );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Ordercomp : Obj_Machinery_Computer {

		public string temp = null;
		public int reqtime = 0;
		public string last_viewed_group = "categories";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "request";
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_Ordercomp);
			this.verb_say = "flashes";
			this.verb_ask = "flashes";
			this.verb_exclaim = "flashes";
		}

		public Obj_Machinery_Computer_Ordercomp ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: supply.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic cat = null;
			double? cat2 = null;
			dynamic supply_type = null;
			dynamic N = null;
			int timeout = 0;
			string reason = null;
			dynamic idname = null;
			dynamic idrank = null;
			Mob H = null;
			SupplyOrder O = null;
			SupplyOrder SO = null;
			SupplyOrder SO2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( this.loc is Tile && ( Map13.GetDistance( this, Task13.User ) <= 1 || Task13.User is Mob_Living_Silicon ) ) {
				Task13.User.set_machine( this );
			}

			if ( Lang13.Bool( href_list["order"] ) ) {
				
				if ( href_list["order"] == "categories" ) {
					this.last_viewed_group = "categories";
					this.temp = "<div class='statusDisplay'><b>Supply points: " + GlobalVars.SSshuttle.points + "</b><BR>";
					this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR></div><BR>" ).ToString();
					this.temp += "<b>Select a category</b><BR><BR>";

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.all_supply_groups )) {
						cat = _a;
						
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";order=" ).item( cat ).str( "'>" ).item( GlobalFuncs.get_supply_group_name( cat ) ).str( "</A><BR>" ).ToString();
					}
				} else {
					this.last_viewed_group = href_list["order"];
					cat2 = String13.ParseNumber( this.last_viewed_group );
					this.temp = "<div class='statusDisplay'><b>Supply points: " + GlobalVars.SSshuttle.points + "</b><BR>";
					this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";order=categories'>Back to all categories</A><BR></div><BR>" ).ToString();
					this.temp += "<b>Request from: " + GlobalFuncs.get_supply_group_name( cat2 ) + "</b><BR><BR>";

					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.SSshuttle.supply_packs )) {
						supply_type = _b;
						
						N = GlobalVars.SSshuttle.supply_packs[supply_type];

						if ( Lang13.Bool( N.hidden ) || Lang13.Bool( N.contraband ) || Lang13.DoubleNullable( N.group ) != cat2 ) {
							continue;
						}
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";doorder=" ).item( supply_type ).str( "'>" ).item( N.name ).str( "</A> Cost: " ).item( N.cost ).str( "<BR>" ).ToString();
					}
				}
			} else if ( Lang13.Bool( href_list["doorder"] ) ) {
				
				if ( Game13.time < this.reqtime ) {
					this.say( "" + ( Game13.time - this.reqtime ) + " seconds remaining until another requisition form may be printed." );
					return null;
				}

				if ( !Lang13.Bool( GlobalVars.SSshuttle.supply_packs["" + href_list["doorder"]] ) ) {
					return null;
				}
				timeout = Game13.time + 600;
				reason = GlobalFuncs.stripped_input( Task13.User, "Reason:", "Why do you require this item?", "" );

				if ( Game13.time > timeout ) {
					return null;
				}

				if ( !Lang13.Bool( reason ) ) {
					return null;
				}
				idname = "*None Provided*";
				idrank = "*None Provided*";

				if ( Task13.User is Mob_Living_Carbon_Human ) {
					H = Task13.User;
					idname = ((Mob_Living_Carbon_Human)H).get_authentification_name();
					idrank = ((Mob_Living_Carbon_Human)H).get_assignment();
				} else if ( Task13.User is Mob_Living_Silicon ) {
					idname = Task13.User.real_name;
				}
				O = GlobalVars.SSshuttle.generateSupplyOrder( href_list["doorder"], idname, idrank, reason );

				if ( !( O != null ) ) {
					return null;
				}
				O.generateRequisition( this.loc );
				this.reqtime = ( Game13.time + 5 ) % 100000;
				this.temp = "Thanks for your request. The cargo team will process it as soon as possible.<BR>";
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";order=" ).item( this.last_viewed_group ).str( "'>Back</A> <A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["vieworders"] ) ) {
				this.temp = new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR><BR>Current approved orders: <BR><BR>" ).ToString();

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.SSshuttle.shoppinglist, typeof(SupplyOrder) )) {
					SO = _c;
					
					this.temp += "" + SO.v_object.name + " approved by " + SO.orderedby + " " + ( Lang13.Bool( SO.comment ) ? "(" + SO.comment + ")" : "" ) + "<BR>";
				}
			} else if ( Lang13.Bool( href_list["viewrequests"] ) ) {
				this.temp = new Txt( "<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><BR><BR>Current requests: <BR><BR>" ).ToString();

				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.SSshuttle.requestlist, typeof(SupplyOrder) )) {
					SO2 = _d;
					
					this.temp += "#" + SO2.ordernum + " - " + SO2.v_object.name + " requested by " + SO2.orderedby + "<BR>";
				}
			} else if ( Lang13.Bool( href_list["mainmenu"] ) ) {
				this.temp = null;
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			return null;
		}

		// Function from file: supply.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			Browser popup = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			((Mob)a).set_machine( this );

			if ( Lang13.Bool( this.temp ) ) {
				dat = this.temp;
			} else {
				dat += new Txt( "<div class='statusDisplay'>Shuttle Location: " ).item( GlobalVars.SSshuttle.supply.name ).str( "<BR>\n		<HR>Supply Points: " ).item( GlobalVars.SSshuttle.points ).str( "<BR></div>\n\n		<BR>\n<A href='?src=" ).Ref( this ).str( ";order=categories'>Request items</A><BR><BR>\n		<A href='?src=" ).Ref( this ).str( ";vieworders=1'>View approved orders</A><BR><BR>\n		<A href='?src=" ).Ref( this ).str( ";viewrequests=1'>View requests</A><BR><BR>\n		<A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A>" ).ToString();
			}
			popup = new Browser( a, "computer", "Supply Ordering Console", 575, 450 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Clf3 : Reagent {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Chlorine Trifluoride";
			this.id = "clf3";
			this.description = "Makes a temporary 3x3 fireball when it comes into existence, so be careful when mixing. ClF3 applied to a surface burns things that wouldn't otherwise burn, sometimes through the very floors of the station and exposing it to the vacuum of space.";
			this.color = "#FF0000";
			this.metabolization_rate = 4;
		}

		// Function from file: pyrotechnic_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null ) {
			method = method ?? GlobalVars.TOUCH;

			
			if ( M is Mob_Living ) {
				
				if ( method != GlobalVars.INGEST && method != GlobalVars.INJECT ) {
					((Mob_Living)M).adjust_fire_stacks( Num13.MinInt( ((int)( ( reac_volume ??0) / 5 )), 10 ) );
					((Mob_Living)M).IgniteMob();
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Hotspot), M.loc );
				}
			}
			return 0;
		}

		// Function from file: pyrotechnic_reagents.dm
		public override void reaction_turf( dynamic T = null, double? volume = null ) {
			dynamic F = null;
			dynamic F2 = null;
			dynamic W = null;

			
			if ( T is Tile_Simulated_Floor_Plating ) {
				F = T;

				if ( Rand13.PercentChance( ((int)( ( F.burnt ?1:0) + Convert.ToDouble( F.broken * 5 ) + 1 )) ) ) {
					((Tile)F).ChangeTurf( F.baseturf );
				}
			}

			if ( T is Tile_Simulated_Floor ) {
				F2 = T;

				if ( Rand13.PercentChance( ((int)( ( volume ??0) / 10 )) ) ) {
					((Tile_Simulated_Floor)F2).make_plating();
				} else if ( Rand13.PercentChance( ((int)( volume ??0 )) ) ) {
					((Tile_Simulated)F2).burn_tile();
				}

				if ( F2 is Tile_Simulated_Floor ) {
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Hotspot), F2 );
				}
			}

			if ( T is Tile_Simulated_Wall ) {
				W = T;

				if ( Rand13.PercentChance( ((int)( ( volume ??0) / 10 )) ) ) {
					((Tile)W).ChangeTurf( typeof(Tile_Simulated_Floor_Plating) );
				}
			}
			return;
		}

		// Function from file: pyrotechnic_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			double burndmg = 0;

			((Mob_Living)M).adjust_fire_stacks( 2 );
			burndmg = Num13.MaxInt( ((int)( M.fire_stacks * 0.3 )), ((int)( 0.3 )) );
			((Mob_Living)M).adjustFireLoss( burndmg );
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
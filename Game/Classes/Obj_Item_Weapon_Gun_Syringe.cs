// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Syringe : Obj_Item_Weapon_Gun {

		public ByTable syringes = new ByTable();
		public int max_syringes = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "syringegun";
			this.force = 4;
			this.materials = new ByTable().Set( "$metal", 2000 );
			this.clumsy_check = 0;
			this.fire_sound = "sound/items/syringeproj.ogg";
			this.icon_state = "syringegun";
		}

		// Function from file: syringe_gun.dm
		public Obj_Item_Weapon_Gun_Syringe ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.chambered = new Obj_Item_AmmoCasing_Syringegun( this );
			return;
		}

		// Function from file: syringe_gun.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			silent = silent ?? true;

			
			if ( A is Obj_Item_Weapon_ReagentContainers_Syringe ) {
				
				if ( this.syringes.len < this.max_syringes ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					user.WriteMsg( new Txt( "<span class='notice'>You load " ).item( A ).str( " into " ).the( this ).item().str( ".</span>" ).ToString() );
					this.syringes.Add( A );
					A.loc = this;
					return 1;
				} else {
					Task13.User.WriteMsg( "<span class='warning'>" + this + " cannot hold more syringes!</span>" );
				}
			}
			return 0;
		}

		// Function from file: syringe_gun.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Ent_Static S = null;

			
			if ( !( this.syringes.len != 0 ) ) {
				user.WriteMsg( "<span class='warning'>" + this + " is empty!</span>" );
				return 0;
			}
			S = this.syringes[this.syringes.len];

			if ( !( S != null ) ) {
				return 0;
			}
			S.loc = user.loc;
			this.syringes.Remove( S );
			user.WriteMsg( new Txt( "<span class='notice'>You unload " ).item( S ).str( " from " ).the( this ).item().str( ".</span>" ).ToString() );
			return 1;
		}

		// Function from file: syringe_gun.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( new Txt( "Can hold " ).item( this.max_syringes ).str( " syringe" ).s().str( ". Has " ).item( this.syringes.len ).str( " syringe" ).s().str( " remaining." ).ToString() );
			return 0;
		}

		// Function from file: syringe_gun.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( target == this.loc ) {
				return false;
			}
			this.newshot();
			base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			return false;
		}

		// Function from file: syringe_gun.dm
		public override bool process_chamber( bool? eject_casing = null, bool? empty_chamber = null ) {
			return false;
		}

		// Function from file: syringe_gun.dm
		public override void newshot(  ) {
			dynamic S = null;

			
			if ( !( this.syringes.len != 0 ) ) {
				return;
			}
			S = this.syringes[1];

			if ( !Lang13.Bool( S ) ) {
				return;
			}
			this.chambered.BB = new Obj_Item_Projectile_Bullet_Dart_Syringe( this );
			((Reagents)S.reagents).trans_to( this.chambered.BB, S.reagents.total_volume );
			this.chambered.BB.name = S.name;
			this.syringes.Remove( S );
			GlobalFuncs.qdel( S );
			return;
		}

	}

}
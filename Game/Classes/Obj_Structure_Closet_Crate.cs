// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Crate : Obj_Structure_Closet {

		public string icon_crate = "crate";
		public bool rigged = false;
		public string sound_effect_open = "sound/machines/click.ogg";
		public string sound_effect_close = "sound/machines/click.ogg";
		public Ent_Static manifest = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/crates.dmi";
			this.icon_state = "crate";
		}

		// Function from file: crates.dm
		public Obj_Structure_Closet_Crate ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_icon();
			return;
		}

		// Function from file: crates.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;

			
			if ( this.opened ) {
				
				if ( user is Mob_Living_Silicon_Robot ) {
					return null;
				}

				if ( !Lang13.Bool( user.drop_item() ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( A ).item().str( " is stuck to your hand, you cannot put it in " ).the( this ).item().str( "!</span>" ).ToString() );
					return null;
				}

				if ( Lang13.Bool( A ) ) {
					A.loc = this.loc;
				}
			} else if ( A is Obj_Item_Stack_PackageWrap ) {
				return null;
			} else if ( A is Obj_Item_Stack_CableCoil ) {
				
				if ( this.rigged ) {
					user.WriteMsg( "<span class='warning'>" + this + " is already rigged!</span>" );
					return null;
				}
				C = A;

				if ( ((Obj_Item_Stack)C).use( 5 ) != 0 ) {
					user.WriteMsg( "<span class='notice'>You rig " + this + ".</span>" );
					this.rigged = true;
				} else {
					user.WriteMsg( "<span class='warning'>You need 5 lengths of cable to rig " + this + "!</span>" );
				}
				return null;
			} else if ( A is Obj_Item_Device_Electropack ) {
				
				if ( this.rigged ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					user.WriteMsg( "<span class='notice'>You attach " + A + " to " + this + ".</span>" );
					A.loc = this;
					return null;
				}
			} else if ( A is Obj_Item_Weapon_Wirecutters ) {
				
				if ( this.rigged ) {
					user.WriteMsg( "<span class='notice'>You cut away the wiring.</span>" );
					GlobalFuncs.playsound( this.loc, "sound/items/Wirecutter.ogg", 100, 1 );
					this.rigged = false;
					return null;
				}
			} else if ( !this.place( user, A ) ) {
				return this.attack_hand( user );
			}
			return null;
		}

		// Function from file: crates.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: crates.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic L = null;
			EffectSystem_SparkSpread s = null;

			
			if ( this.manifest != null ) {
				this.tear_manifest( a );
				return null;
			}

			if ( this.opened ) {
				this.close();
			} else {
				
				if ( this.rigged && Lang13.Bool( Lang13.FindIn( typeof(Obj_Item_Device_Electropack), this ) ) ) {
					
					if ( a is Mob_Living ) {
						L = a;

						if ( Lang13.Bool( ((Mob_Living)L).electrocute_act( 17, this ) ) ) {
							s = new EffectSystem_SparkSpread();
							s.set_up( 5, 1, this );
							s.start();
							return null;
						}
					}
				}
				this.open();
			}
			return null;
		}

		// Function from file: crates.dm
		public void tear_manifest( dynamic user = null ) {
			user.WriteMsg( "<span class='notice'>You tear the manifest off of the crate.</span>" );
			GlobalFuncs.playsound( this.loc, "sound/items/poster_ripped.ogg", 75, 1 );
			this.manifest.loc = this.loc;

			if ( user is Mob_Living_Carbon_Human ) {
				((Mob)user).put_in_hands( this.manifest );
			}
			this.manifest = null;
			this.overlays.Remove( "manifest" );
			return;
		}

		// Function from file: crates.dm
		public override int insert( dynamic I = null, bool? include_mobs = null, bool? animate = null ) {
			include_mobs = include_mobs ?? false;

			dynamic L = null;
			dynamic B = null;

			
			if ( this.contents.len >= this.storage_capacity ) {
				return -1;
			}

			if ( include_mobs == true && I is Mob_Living ) {
				L = I;

				if ( L.buckled != null ) {
					return 0;
				}
			} else if ( I is Obj ) {
				
				if ( I.density || Lang13.Bool( I.anchored ) || I is Obj_Structure_Closet ) {
					return 0;
				}
			} else {
				return 0;
			}

			if ( I is Obj_Structure_Bed ) {
				B = I;

				if ( Lang13.Bool( B.buckled_mob ) ) {
					return 0;
				}
			}
			I.loc = this;
			return 1;
		}

		// Function from file: crates.dm
		public override bool close(  ) {
			GlobalFuncs.playsound( this.loc, this.sound_effect_close, 15, 1, -3 );
			this.take_contents();
			this.opened = false;
			this.update_icon();
			return true;
		}

		// Function from file: crates.dm
		public override bool open(  ) {
			GlobalFuncs.playsound( this.loc, this.sound_effect_open, 15, 1, -3 );
			this.dump_contents();
			this.opened = true;
			this.update_icon();
			return true;
		}

		// Function from file: crates.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();

			if ( this.opened ) {
				this.icon_state = "" + this.icon_crate + "open";
			} else {
				this.icon_state = this.icon_crate;
			}

			if ( this.manifest != null ) {
				this.overlays.Add( "manifest" );
			}
			return null;
		}

	}

}
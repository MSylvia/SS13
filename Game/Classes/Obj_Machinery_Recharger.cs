// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Recharger : Obj_Machinery {

		public dynamic charging = null;
		public dynamic recharge_coeff = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 4;
			this.active_power_usage = 250;
			this.icon_state = "recharger0";
		}

		// Function from file: recharger.dm
		public Obj_Machinery_Recharger ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_Recharger() );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Capacitor() );
			this.RefreshParts();
			return;
		}

		// Function from file: recharger.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				this.icon_state = "rechargeroff";
			} else if ( this.panel_open == true ) {
				this.icon_state = "rechargeropen";
			} else if ( Lang13.Bool( this.charging ) ) {
				this.icon_state = "recharger1";
			} else {
				this.icon_state = "recharger0";
			}
			return null;
		}

		// Function from file: recharger.dm
		public override double emp_act( int severity = 0 ) {
			dynamic E = null;
			dynamic B = null;

			
			if ( ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				base.emp_act( severity );
				return 0;
			}

			if ( this.charging is Obj_Item_Weapon_Gun_Energy ) {
				E = this.charging;

				if ( Lang13.Bool( E.power_supply ) ) {
					((Ent_Static)E.power_supply).emp_act( severity );
				}
			} else if ( this.charging is Obj_Item_Weapon_Melee_Baton ) {
				B = this.charging;

				if ( Lang13.Bool( B.bcell ) ) {
					B.bcell.charge = 0;
				}
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: recharger.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

		// Function from file: recharger.dm
		public override int? process( dynamic seconds = null ) {
			dynamic E = null;
			dynamic B = null;

			
			if ( ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				return null;
			}

			if ( Lang13.Bool( this.charging ) ) {
				
				if ( this.charging is Obj_Item_Weapon_Gun_Energy ) {
					E = this.charging;

					if ( Convert.ToDouble( E.power_supply.charge ) < ( E.power_supply.maxcharge ??0) ) {
						E.power_supply.give( E.power_supply.chargerate * Convert.ToDouble( this.recharge_coeff ) );
						this.icon_state = "recharger1";
						this.f_use_power( this.recharge_coeff * 250 );
					} else {
						this.icon_state = "recharger2";
					}
					return null;
				}

				if ( this.charging is Obj_Item_Weapon_Melee_Baton ) {
					B = this.charging;

					if ( Lang13.Bool( B.bcell ) ) {
						
						if ( Lang13.Bool( B.bcell.give( B.bcell.chargerate * Convert.ToDouble( this.recharge_coeff ) ) ) ) {
							this.icon_state = "recharger1";
							this.f_use_power( this.recharge_coeff * 200 );
						} else {
							this.icon_state = "recharger2";
						}
					} else {
						this.icon_state = "recharger3";
					}
				}
			}
			return null;
		}

		// Function from file: recharger.dm
		public override void attack_tk( Mob_Living_Carbon_Human user = null ) {
			
			if ( Lang13.Bool( this.charging ) ) {
				this.charging.update_icon();
				this.charging.loc = this.loc;
				this.charging = null;
				this.use_power = 1;
				this.update_icon();
			}
			return;
		}

		// Function from file: recharger.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: recharger.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( a is Mob_Living_Silicon ) {
				return null;
			}
			this.add_fingerprint( a );

			if ( Lang13.Bool( this.charging ) ) {
				this.charging.update_icon();
				this.charging.loc = this.loc;
				((Mob)a).put_in_hands( this.charging );
				this.charging = null;
				this.use_power = 1;
				this.update_icon();
			}
			return null;
		}

		// Function from file: recharger.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic a = null;
			dynamic gun = null;

			
			if ( A is Obj_Item_Weapon_Wrench ) {
				
				if ( Lang13.Bool( this.charging ) ) {
					user.WriteMsg( "<span class='notice'>Remove the charging item first!</span>" );
					return null;
				}
				this.anchored = !Lang13.Bool( this.anchored );
				this.power_change();
				user.WriteMsg( "<span class='notice'>You " + ( Lang13.Bool( this.anchored ) ? "attached" : "detached" ) + " " + this + ".</span>" );
				GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 75, 1 );
				return null;
			}

			if ( user is Mob_Living_Silicon ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Gun_Energy || A is Obj_Item_Weapon_Melee_Baton ) {
				
				if ( Lang13.Bool( this.anchored ) ) {
					
					if ( Lang13.Bool( this.charging ) || this.panel_open == true ) {
						return null;
					}
					a = GlobalFuncs.get_area( this );

					if ( !( a is Zone ) || !a.power_equip ) {
						user.WriteMsg( "<span class='notice'>" + this + " blinks red as you try to insert " + A + ".</span>" );
						return null;
					}

					if ( A is Obj_Item_Weapon_Gun_Energy ) {
						gun = A;

						if ( !Lang13.Bool( gun.can_charge ) ) {
							user.WriteMsg( "<span class='notice'>Your gun has no external power connector.</span>" );
							return null;
						}
					}

					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					A.loc = this;
					this.charging = A;
					this.use_power = 2;
					this.update_icon();
				} else {
					user.WriteMsg( "<span class='notice'>" + this + " isn't connected to anything!</span>" );
				}
			}

			if ( Lang13.Bool( this.anchored ) && !Lang13.Bool( this.charging ) ) {
				
				if ( this.default_deconstruction_screwdriver( user, "rechargeropen", "recharger0", A ) ) {
					return null;
				}

				if ( this.panel_open == true && A is Obj_Item_Weapon_Crowbar ) {
					this.default_deconstruction_crowbar( A );
					return null;
				}

				if ( this.exchange_parts( user, A ) ) {
					return null;
				}
			}
			return null;
		}

		// Function from file: recharger.dm
		public override void RefreshParts(  ) {
			Obj_Item_Weapon_StockParts_Capacitor C = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_Capacitor) )) {
				C = _a;
				
				this.recharge_coeff = C.rating;
			}
			return;
		}

	}

}
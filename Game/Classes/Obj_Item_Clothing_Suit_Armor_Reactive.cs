// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Suit_Armor_Reactive : Obj_Item_Clothing_Suit_Armor {

		public bool active = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "reactiveoff";
			this.blood_overlay_type = "armor";
			this.armor = new ByTable().Set( "melee", 0 ).Set( "bullet", 0 ).Set( "laser", 0 ).Set( "energy", 0 ).Set( "bomb", 0 ).Set( "bio", 0 ).Set( "rad", 0 );
			this.action_button_name = "Toggle Armor";
			this.unacidable = true;
			this.hit_reaction_chance = 50;
			this.icon_state = "reactiveoff";
		}

		public Obj_Item_Clothing_Suit_Armor_Reactive ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: armor.dm
		public override bool hit_reaction( Mob_Living_Carbon owner = null, string attack_text = null, int? final_block_chance = null, dynamic damage = null, int? attack_type = null ) {
			Mob_Living_Carbon H = null;
			ByTable turfs = null;
			dynamic T = null;
			dynamic picked = null;

			
			if ( !this.active ) {
				return false;
			}

			if ( Rand13.PercentChance( this.hit_reaction_chance ) ) {
				H = owner;
				owner.visible_message( "<span class='danger'>The reactive teleport system flings " + H + " clear of " + attack_text + "!</span>" );
				turfs = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( H, 6 ) )) {
					T = _a;
					

					if ( T.density ) {
						continue;
					}

					if ( Convert.ToDouble( T.x ) > Game13.map_size_x - 6 || Convert.ToDouble( T.x ) < 6 ) {
						continue;
					}

					if ( Convert.ToDouble( T.y ) > Game13.map_size_y - 6 || Convert.ToDouble( T.y ) < 6 ) {
						continue;
					}
					turfs.Add( T );
				}

				if ( !( turfs.len != 0 ) ) {
					turfs.Add( Rand13.PickFromTable( Map13.FetchInRangeExcludeThis( H, 6 ).Contains( typeof(Tile) ) ) );
				}
				picked = Rand13.PickFromTable( turfs );

				if ( !( picked is Tile ) ) {
					return false;
				}

				if ( H.buckled != null ) {
					H.buckled.unbuckle_mob();
				}
				H.forceMove( picked );
				return true;
			}
			return false;
		}

		// Function from file: armor.dm
		public override double emp_act( int severity = 0 ) {
			this.active = false;
			this.icon_state = "reactiveoff";
			this.item_state = "reactiveoff";
			base.emp_act( severity );
			return 0;
		}

		// Function from file: armor.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.active = !this.active;

			if ( this.active ) {
				user.WriteMsg( "<span class='notice'>" + this + " is now active.</span>" );
				this.icon_state = "reactive";
				this.item_state = "reactive";
			} else {
				user.WriteMsg( "<span class='notice'>" + this + " is now inactive.</span>" );
				this.icon_state = "reactiveoff";
				this.item_state = "reactiveoff";
				this.add_fingerprint( user );
			}
			return null;
		}

	}

}
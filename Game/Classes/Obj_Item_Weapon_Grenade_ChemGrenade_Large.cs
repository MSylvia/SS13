// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grenade_ChemGrenade_Large : Obj_Item_Weapon_Grenade_ChemGrenade {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_containers = new ByTable(new object [] { typeof(Obj_Item_Weapon_ReagentContainers_Glass), typeof(Obj_Item_Weapon_ReagentContainers_Food_Condiment), typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks) });
			this.origin_tech = "combat=3;materials=3";
			this.affected_area = 4;
			this.icon_state = "large_grenade";
		}

		public Obj_Item_Weapon_Grenade_ChemGrenade_Large ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: chem_grenade.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_SlimeExtract && this.stage == 2 ) {
				
				if ( !((Mob)user).unEquip( A ) ) {
					return null;
				}
				user.WriteMsg( "<span class='notice'>You add " + A + " to the " + Lang13.Initial( this, "name" ) + " assembly.</span>" );
				A.loc = this;
				this.beakers.Add( A );
			} else {
				return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: chem_grenade.dm
		public override void mix_reagents(  ) {
			Obj_Item_SlimeExtract S = null;
			Obj_Item_Weapon_ReagentContainers_Glass G = null;

			
			foreach (dynamic _b in Lang13.Enumerate( this.beakers, typeof(Obj_Item_SlimeExtract) )) {
				S = _b;
				

				if ( S.Uses != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj_Item_Weapon_ReagentContainers_Glass) )) {
						G = _a;
						
						G.reagents.trans_to( S, G.reagents.total_volume );
					}

					if ( S != null && S.reagents != null && Lang13.Bool( S.reagents.total_volume ) ) {
						S.reagents.trans_to( this, S.reagents.total_volume );
					}
					return;
				}
			}
			base.mix_reagents();
			return;
		}

	}

}
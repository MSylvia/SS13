// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Gibspawner_Robot : Obj_Effect_Gibspawner {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.sparks = true;
			this.gibtypes = new ByTable(new object [] { 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris_Up), 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris_Down), 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris), 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris), 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris), 
				typeof(Obj_Effect_Decal_Cleanable_RobotDebris_Limb)
			 });
			this.gibamounts = new ByTable(new object [] { 1, 1, 1, 1, 1, 1 });
		}

		// Function from file: gibspawner.dm
		public Obj_Effect_Gibspawner_Robot ( dynamic location = null, ByTable viruses = null, Dna MobDNA = null ) : base( (object)(location), viruses, MobDNA ) {
			this.gibdirections = new ByTable(new object [] { 
				new ByTable(new object [] { GlobalVars.NORTH, GlobalVars.NORTHEAST, GlobalVars.NORTHWEST }), 
				new ByTable(new object [] { GlobalVars.SOUTH, GlobalVars.SOUTHEAST, GlobalVars.SOUTHWEST }), 
				new ByTable(new object [] { GlobalVars.WEST, GlobalVars.NORTHWEST, GlobalVars.SOUTHWEST }), 
				new ByTable(new object [] { GlobalVars.EAST, GlobalVars.NORTHEAST, GlobalVars.SOUTHEAST }), 
				GlobalVars.alldirs, 
				GlobalVars.alldirs
			 });
			this.gibamounts[6] = Rand13.Pick(new object [] { 0, 1, 2 });
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Tray : Obj_Structure {

		public Obj_Structure_Bodycontainer connected = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.pass_flags = 32;
			this.icon = "icons/obj/stationobjs.dmi";
			this.layer = 2.9;
		}

		public Obj_Structure_Tray ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: morgue.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			Ent_Static M = null;

			
			if ( !( O is Ent_Dynamic ) || Lang13.Bool( ((dynamic)O).anchored ) || !this.Adjacent( user ) || !((Ent_Static)user).Adjacent( O ) || O.loc == user ) {
				return false;
			}

			if ( !( O is Mob ) ) {
				
				if ( !( O is Obj_Structure_Closet_BodyBag ) ) {
					return false;
				}
			} else {
				M = O;

				if ( Lang13.Bool( ((dynamic)M).buckled ) ) {
					return false;
				}
			}

			if ( !( user is Mob ) || Lang13.Bool( user.lying ) || ((Mob)user).incapacitated() ) {
				return false;
			}
			O.loc = this.loc;

			if ( user != O ) {
				this.visible_message( "<span class='warning'>" + user + " stuffs " + O + " into " + this + ".</span>" );
			}
			return false;
		}

		// Function from file: morgue.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.connected != null ) {
				this.connected.close();
				this.add_fingerprint( a );
			} else {
				a.WriteMsg( "<span class='warning'>That's not connected to anything!</span>" );
			}
			return null;
		}

		// Function from file: morgue.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: morgue.dm
		public override dynamic Destroy(  ) {
			
			if ( this.connected != null ) {
				this.connected.connected = null;
				this.connected.update_icon();
				this.connected = null;
			}
			return base.Destroy();
		}

	}

}
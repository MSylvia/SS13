// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Implant_Storage : Obj_Item_Weapon_Implant {

		public Obj_Item_Weapon_Storage_Internal_Implant storage = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=2;magnets=4;bluespace=4;syndicate=4";
			this.item_color = "r";
			this.icon_state = "storage";
		}

		// Function from file: implant_storage.dm
		public Obj_Item_Weapon_Implant_Storage ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.storage = new Obj_Item_Weapon_Storage_Internal_Implant( this );
			return;
		}

		// Function from file: implant_storage.dm
		public override int implant( dynamic source = null, dynamic user = null ) {
			dynamic imp_e = null;

			imp_e = Lang13.FindIn( this.type, source );

			if ( Lang13.Bool( imp_e ) ) {
				imp_e.storage.storage_slots += this.storage.storage_slots ??0;
				imp_e.storage.max_combined_w_class += this.storage.max_combined_w_class;
				imp_e.storage.contents.Add( this.storage.contents );
				this.storage.close_all();
				this.storage.show_to( source );
				GlobalFuncs.qdel( this );
				return 1;
			}
			return base.implant( (object)(source), (object)(user) );
		}

		// Function from file: implant_storage.dm
		public override bool removed( dynamic target = null, bool? silent = null ) {
			Obj_Item I = null;

			
			if ( base.removed( (object)(target), silent ) ) {
				this.storage.close_all();

				foreach (dynamic _a in Lang13.Enumerate( this.storage, typeof(Obj_Item) )) {
					I = _a;
					
					this.storage.remove_from_storage( I, GlobalFuncs.get_turf( target ) );
				}
				return true;
			}
			return false;
		}

		// Function from file: implant_storage.dm
		public override bool activate( dynamic cause = null ) {
			this.storage.MouseDrop( this.imp_in );
			return false;
		}

	}

}
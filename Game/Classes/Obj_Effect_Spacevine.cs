// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Spacevine : Obj_Effect {

		public int energy = 0;
		public Obj_Effect_SpacevineController master = null;
		public ByTable mutations = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.pass_flags = 5;
			this.icon = "icons/effects/spacevines.dmi";
			this.icon_state = "Light1";
			this.layer = 5;
		}

		public Obj_Effect_Spacevine ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: spacevine.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			int _override = 0;
			SpacevineMutation SM = null;

			_override = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				_override += SM.process_temperature( this, exposed_temperature, exposed_volume ) ?1:0;
			}

			if ( !( _override != 0 ) ) {
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: spacevine.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			dynamic i = null;
			SpacevineMutation SM = null;

			
			if ( Lang13.Bool( ((dynamic)this.type).IsInstanceOfType( target ) ) ) {
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				i += SM.on_explosion( severity, target, this ) ?1:0;
			}

			if ( !Lang13.Bool( i ) && Rand13.PercentChance( ((int)( 100 / ( severity ??0) )) ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: spacevine.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			SpacevineMutation SM = null;

			((Ent_Dynamic)a).do_attack_animation( this );

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_hit( this, a );
			}
			this.user_unbuckle_mob( a );
			return null;
		}

		// Function from file: spacevine.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			SpacevineMutation SM = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_hit( this, a );
			}
			this.user_unbuckle_mob( a );
			return null;
		}

		// Function from file: spacevine.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			SpacevineMutation SM = null;

			
			if ( O is Mob_Living ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
					SM = _a;
					
					SM.on_cross( this, O );
				}
			}
			return null;
		}

		// Function from file: spacevine.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			int _override = 0;
			SpacevineMutation SM = null;
			Obj_Effect_Spacevine B = null;
			dynamic WT = null;

			
			if ( !Lang13.Bool( A ) || !Lang13.Bool( user ) || !( A.type != null ) ) {
				return null;
			}
			((Mob)user).changeNext_move( 8 );
			_override = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				_override += SM.on_hit( this, user ) ?1:0;
			}

			if ( _override != 0 ) {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
				return null;
			}

			if ( A is Obj_Item_Weapon_Scythe ) {
				
				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Obj_Effect_Spacevine) )) {
					B = _b;
					

					if ( Rand13.PercentChance( 80 ) ) {
						GlobalFuncs.qdel( B );
					}
				}
				GlobalFuncs.qdel( this );
			} else if ( ((Obj_Item)A).is_sharp() != 0 ) {
				GlobalFuncs.qdel( this );
			} else if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
					GlobalFuncs.qdel( this );
				} else {
					this.user_unbuckle_mob( user );
					return null;
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: spacevine.dm
		public void spread(  ) {
			dynamic direction = null;
			Tile stepturf = null;
			SpacevineMutation SM = null;

			direction = Rand13.PickFromTable( GlobalVars.cardinal );
			stepturf = Map13.GetStep( this, Convert.ToInt32( direction ) );

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_spread( this, stepturf );
				stepturf = Map13.GetStep( this, Convert.ToInt32( direction ) );
			}

			if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Effect_Spacevine), stepturf ) ) ) {
				
				if ( stepturf.Enter( this ) ) {
					
					if ( this.master != null ) {
						this.master.spawn_spacevine_piece( stepturf, this );
					}
				}
			}
			return;
		}

		// Function from file: spacevine.dm
		public void entangle( Ent_Dynamic V = null ) {
			SpacevineMutation SM = null;

			
			if ( !( V != null ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_buckle( this, V );
			}

			if ( Convert.ToInt32( ((dynamic)V).stat ) != 2 && ((dynamic)V).buckled != this ) {
				((dynamic)V).WriteMsg( "<span class='danger'>The vines " + Rand13.Pick(new object [] { "wind", "tangle", "tighten" }) + " around you!</span>" );
				this.buckle_mob( V );
			}
			return;
		}

		// Function from file: spacevine.dm
		public void entangle_mob(  ) {
			Mob_Living V = null;

			
			if ( !Lang13.Bool( this.buckled_mob ) && Rand13.PercentChance( 25 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Mob_Living) )) {
					V = _a;
					
					this.entangle( V );

					if ( Lang13.Bool( this.buckled_mob ) ) {
						break;
					}
				}
			}
			return;
		}

		// Function from file: spacevine.dm
		public void grow(  ) {
			SpacevineMutation SM = null;

			
			if ( !( this.energy != 0 ) ) {
				this.icon_state = Rand13.Pick(new object [] { "Med1", "Med2", "Med3" });
				this.energy = 1;
				this.SetOpacity( 1 );
				this.layer = 5;
			} else {
				this.icon_state = Rand13.Pick(new object [] { "Hvy1", "Hvy2", "Hvy3" });
				this.energy = 2;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_grow( this );
			}
			return;
		}

		// Function from file: spacevine.dm
		public void eat( Mob_Living_SimpleAnimal_Hostile_Retaliate_Goat eater = null ) {
			double _override = 0;
			SpacevineMutation SM = null;

			_override = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				_override += /*[I CANNOT CONVERT SOME RANDOM SHIT TO A DOUBLE: void]*/ 0;
			}

			if ( !( _override != 0 ) ) {
				
				if ( Rand13.PercentChance( 10 ) ) {
					eater.say( "Nom" );
				}
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: spacevine.dm
		public void on_chem_effect( Reagent_Toxin_Plantbgone R = null ) {
			double _override = 0;
			SpacevineMutation SM = null;

			_override = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				_override += /*[I CANNOT CONVERT SOME RANDOM SHIT TO A DOUBLE: void]*/ 0;
			}

			if ( !( _override != 0 ) && R is Reagent_Toxin_Plantbgone ) {
				
				if ( Rand13.PercentChance( 50 ) ) {
					GlobalFuncs.qdel( this );
				}
			}
			return;
		}

		// Function from file: spacevine.dm
		public override dynamic Destroy(  ) {
			SpacevineMutation SM = null;
			Obj_Item_Seeds_Kudzuseed KZ = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.mutations, typeof(SpacevineMutation) )) {
				SM = _a;
				
				SM.on_death( this );
			}

			if ( this.master != null ) {
				this.master.vines.Remove( this );
				this.master.growth_queue.Remove( this );

				if ( !( this.master.vines.len != 0 ) ) {
					KZ = new Obj_Item_Seeds_Kudzuseed( this.loc );
					KZ.mutations.Or( this.mutations );
					KZ.potency = Num13.MinInt( 100, ((int)( this.master.mutativness * 10 )) );
					KZ.production = this.master.spread_cap / Convert.ToDouble( Lang13.Initial( this.master, "spread_cap" ) ) * 50;
				}
			}
			this.mutations = new ByTable();
			this.SetOpacity( 0 );

			if ( Lang13.Bool( this.buckled_mob ) ) {
				this.unbuckle_mob();
			}
			return base.Destroy();
		}

	}

}
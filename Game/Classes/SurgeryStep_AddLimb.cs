// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_AddLimb : SurgeryStep {

		public dynamic L = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "replace limb";
			this.implements = new ByTable().Set( typeof(Obj_Item_RobotParts), 100 );
			this.time = 32;
		}

		// Function from file: limb augmentation.dm
		public override bool success( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			Mob H = null;
			Obj_Item_Organ_Internal I = null;

			
			if ( Lang13.Bool( this.L ) ) {
				
				if ( target is Mob_Living_Carbon_Human ) {
					H = target;
					((Ent_Static)user).visible_message( "" + user + " successfully augments " + target + "'s " + GlobalFuncs.parse_zone( target_zone ) + "!", "<span class='notice'>You successfully augment " + target + "'s " + GlobalFuncs.parse_zone( target_zone ) + ".</span>" );
					this.L.loc = GlobalFuncs.get_turf( target );
					((dynamic)H).organs -= this.L;

					switch ((string)( target_zone )) {
						case "r_leg":
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_RLeg( this );
							break;
						case "l_leg":
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_LLeg( this );
							break;
						case "r_arm":
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_RArm( this );
							break;
						case "l_arm":
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_LArm( this );
							break;
						case "head":
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_Head( this );
							break;
						case "chest":
							
							foreach (dynamic _a in Lang13.Enumerate( target.getorganszone( target_zone, true ), typeof(Obj_Item_Organ_Internal) )) {
								I = _a;
								

								if ( I.status == 1 ) {
									I.Remove( target, true );
									GlobalFuncs.qdel( I );
								}
							}
							((dynamic)H).organs += new Obj_Item_Organ_Limb_Robot_Chest( this );
							break;
					}
					user.drop_item();
					GlobalFuncs.qdel( tool );
					((dynamic)H).update_damage_overlays( 0 );
					((dynamic)H).update_augments();
					GlobalFuncs.add_logs( user, target, "augmented", null, "by giving him new " + GlobalFuncs.parse_zone( target_zone ) + " INTENT: " + String13.ToUpper( user.a_intent ) );
				}
			} else {
				user.WriteMsg( "<span class='warning'>" + target + " has no organic " + GlobalFuncs.parse_zone( target_zone ) + " there!</span>" );
			}
			return true;
		}

		// Function from file: limb augmentation.dm
		public override int preop( dynamic user = null, Mob target = null, string target_zone = null, dynamic tool = null, Surgery surgery = null ) {
			this.L = surgery.organ;

			if ( Lang13.Bool( this.L ) ) {
				((Ent_Static)user).visible_message( "" + user + " begins to augment " + target + "'s " + GlobalFuncs.parse_zone( user.zone_sel.selecting ) + ".", "<span class ='notice'>You begin to augment " + target + "'s " + GlobalFuncs.parse_zone( user.zone_sel.selecting ) + "...</span>" );
			} else {
				((Ent_Static)user).visible_message( "" + user + " looks for " + target + "'s " + GlobalFuncs.parse_zone( user.zone_sel.selecting ) + ".", "<span class ='notice'>You look for " + target + "'s " + GlobalFuncs.parse_zone( user.zone_sel.selecting ) + "...</span>" );
			}
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_MassDriver : Obj_Machinery {

		public double? power = 1;
		public bool code = true;
		public dynamic id = 1;
		public int drive_range = 50;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 2;
			this.active_power_usage = 50;
			this.icon_state = "mass_driver";
		}

		public Obj_Machinery_MassDriver ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mass_driver.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return 0;
			}
			this.drive();
			base.emp_act( severity );
			return 0;
		}

		// Function from file: mass_driver.dm
		public void drive( dynamic amount = null ) {
			int O_limit = 0;
			dynamic target = null;
			Ent_Dynamic O = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}
			this.f_use_power( 500 );
			target = GlobalFuncs.get_edge_target_turf( this, this.dir );

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Ent_Dynamic) )) {
				O = _a;
				

				if ( !Lang13.Bool( O.anchored ) || O is Obj_Mecha ) {
					O_limit++;

					if ( O_limit >= 20 ) {
						this.audible_message( "<span class='notice'>" + this + " lets out a screech, it doesn't seem to be able to handle the load.</span>" );
						break;
					}
					this.f_use_power( 500 );
					O.throw_at_fast( target, this.drive_range * ( this.power ??0), this.power );
				}
			}
			Icon13.Flick( "mass_driver1", this );
			return;
		}

	}

}
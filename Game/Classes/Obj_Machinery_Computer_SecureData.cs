// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_SecureData : Obj_Machinery_Computer {

		public dynamic scan = null;
		public string authenticated = null;
		public dynamic rank = null;
		public int? screen = null;
		public dynamic active1 = null;
		public dynamic active2 = null;
		public dynamic a_id = null;
		public string temp = null;
		public bool? printing = null;
		public bool can_change_id = false;
		public dynamic Perp = null;
		public dynamic tempname = null;
		public string sortBy = "name";
		public dynamic order = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "security";
			this.icon_keyboard = "security_key";
			this.req_one_access = new ByTable(new object [] { 1, 4 });
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_SecureData);
		}

		public Obj_Machinery_Computer_SecureData ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: security.dm
		public override double emp_act( int severity = 0 ) {
			Data_Record R = null;
			dynamic G = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				base.emp_act( severity );
				return 0;
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.data_core.security, typeof(Data_Record) )) {
				R = _b;
				

				if ( Rand13.PercentChance( ((int)( 10 / severity )) ) ) {
					
					switch ((int)( Rand13.Int( 1, 8 ) )) {
						case 1:
							
							if ( Rand13.PercentChance( 10 ) ) {
								R.fields["name"] = "" + Rand13.Pick(new object [] { GlobalFuncs.lizard_name( GlobalVars.MALE ), GlobalFuncs.lizard_name( GlobalVars.FEMALE ) });
							} else {
								R.fields["name"] = "" + Rand13.Pick(new object [] { Rand13.PickFromTable( GlobalVars.first_names_male ), Rand13.PickFromTable( GlobalVars.first_names_female ) }) + " " + Rand13.PickFromTable( GlobalVars.last_names );
							}
							break;
						case 2:
							R.fields["sex"] = Rand13.Pick(new object [] { "Male", "Female" });
							break;
						case 3:
							R.fields["age"] = Rand13.Int( 5, 85 );
							break;
						case 4:
							R.fields["criminal"] = Rand13.Pick(new object [] { "None", "*Arrest*", "Incarcerated", "Parolled", "Discharged" });
							break;
						case 5:
							R.fields["p_stat"] = Rand13.Pick(new object [] { "*Unconcious*", "Active", "Physically Unfit" });
							break;
						case 6:
							R.fields["m_stat"] = Rand13.Pick(new object [] { "*Insane*", "*Unstable*", "*Watch*", "Stable" });
							break;
						case 7:
							R.fields["species"] = Rand13.PickFromTable( GlobalVars.roundstart_species );
							break;
						case 8:
							G = Rand13.PickFromTable( GlobalVars.data_core.general );
							R.fields["photo_front"] = G.fields["photo_front"];
							R.fields["photo_side"] = G.fields["photo_side"];
							break;
					}
					continue;
				} else if ( Rand13.PercentChance( 1 ) ) {
					GlobalFuncs.qdel( R );
					continue;
				}
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: security.dm
		public bool canUseSecurityRecordsConsole( Mob user = null, dynamic message1 = null, dynamic record1 = null, dynamic record2 = null ) {
			message1 = message1 ?? 0;

			
			if ( user != null ) {
				
				if ( Lang13.Bool( this.authenticated ) ) {
					
					if ( user.canUseTopic( this ) ) {
						
						if ( !Lang13.Bool( GlobalFuncs.trim( message1 ) ) ) {
							return false;
						}

						if ( !Lang13.Bool( record1 ) || record1 == this.active1 ) {
							
							if ( !Lang13.Bool( record2 ) || record2 == this.active2 ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		}

		// Function from file: security.dm
		public dynamic get_photo( Mob user = null ) {
			dynamic P = null;
			Mob tempAI = null;
			Picture selection = null;

			P = null;

			if ( user is Mob_Living_Silicon ) {
				tempAI = user;
				selection = ((Mob_Living_Silicon)tempAI).GetPhoto();

				if ( selection != null ) {
					P = new Obj_Item_Weapon_Photo();
					((Obj_Item_Weapon_Photo)P).photocreate( selection.fields["icon"], selection.fields["img"], selection.fields["desc"] );
				}
			} else if ( user.get_active_hand() is Obj_Item_Weapon_Photo ) {
				P = user.get_active_hand();
			}
			return P;
		}

		// Function from file: security.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic _default = null;

			dynamic I = null;
			Mob borg = null;
			dynamic R = null;
			dynamic S = null;
			Data_Record E = null;
			Obj_Item_Weapon_Paper P = null;
			Data_Crime c = null;
			Data_Crime c2 = null;
			int counter = 0;
			Data_Record R2 = null;
			dynamic a2 = null;
			string t1 = null;
			int counter2 = 0;
			Data_Record R3 = null;
			Data_Record G = null;
			Data_Record R4 = null;
			Data_Record M = null;
			dynamic a1 = null;
			dynamic a22 = null;
			string t12 = null;
			string t13 = null;
			string t14 = null;
			dynamic t15 = null;
			dynamic t16 = null;
			dynamic P2 = null;
			dynamic photo = null;
			dynamic P3 = null;
			dynamic photo2 = null;
			string t17 = null;
			string t2 = null;
			Data_Crime crime = null;
			string t18 = null;
			string t22 = null;
			Data_Crime crime2 = null;
			string t19 = null;
			ByTable L = null;
			dynamic rank = null;
			dynamic old_field = null;
			Mob_Living_Carbon_Human H = null;
			Data_Record R5 = null;

			_default = base.Topic( href, href_list, (object)(hsrc) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}

			if ( !( GlobalVars.data_core.general.Find( this.active1 ) != 0 ) ) {
				this.active1 = null;
			}

			if ( !( GlobalVars.data_core.security.Find( this.active2 ) != 0 ) ) {
				this.active2 = null;
			}

			if ( Task13.User.contents.Find( this ) != 0 || Map13.GetDistance( this, Task13.User ) <= 1 && this.loc is Tile || Task13.User is Mob_Living_Silicon || GlobalFuncs.IsAdminGhost( Task13.User ) ) {
				Task13.User.set_machine( this );

				dynamic _k = href_list["choice"]; // Was a switch-case, sorry for the mess.
				if ( _k=="Sorting" ) {
					
					if ( this.sortBy == href_list["sort"] ) {
						
						if ( this.order == 1 ) {
							this.order = -1;
						} else {
							this.order = 1;
						}
					} else {
						this.sortBy = href_list["sort"];
						this.order = Lang13.Initial( this, "order" );
					}
				} else if ( _k=="Clear Screen" ) {
					this.temp = null;
				} else if ( _k=="Return" ) {
					this.screen = 1;
					this.active1 = null;
					this.active2 = null;
				} else if ( _k=="Confirm Identity" ) {
					
					if ( Lang13.Bool( this.scan ) ) {
						
						if ( Task13.User is Mob_Living_Carbon_Human && !Lang13.Bool( Task13.User.get_active_hand() ) ) {
							Task13.User.put_in_hands( this.scan );
						} else {
							this.scan.loc = GlobalFuncs.get_turf( this );
						}
						this.scan = null;
					} else {
						I = Task13.User.get_active_hand();

						if ( I is Obj_Item_Weapon_Card_Id ) {
							
							if ( !Task13.User.drop_item() ) {
								return _default;
							}
							I.loc = this;
							this.scan = I;
						}
					}
				} else if ( _k=="Log Out" ) {
					this.authenticated = null;
					this.screen = null;
					this.active1 = null;
					this.active2 = null;
				} else if ( _k=="Log In" ) {
					
					if ( Task13.User is Mob_Living_Silicon ) {
						borg = Task13.User;
						this.active1 = null;
						this.active2 = null;
						this.authenticated = borg.name;
						this.rank = "AI";
						this.screen = 1;
					} else if ( GlobalFuncs.IsAdminGhost( Task13.User ) ) {
						this.active1 = null;
						this.active2 = null;
						this.authenticated = Task13.User.client.holder.admin_signature;
						this.rank = "Central Command";
						this.screen = 1;
					} else if ( this.scan is Obj_Item_Weapon_Card_Id ) {
						this.active1 = null;
						this.active2 = null;

						if ( this.check_access( this.scan ) ) {
							this.authenticated = this.scan.registered_name;
							this.rank = this.scan.assignment;
							this.screen = 1;
						}
					}
				} else if ( _k=="Record Maintenance" ) {
					this.screen = 2;
					this.active1 = null;
					this.active2 = null;
				} else if ( _k=="Browse Record" ) {
					R = Lang13.FindObj( href_list["d_rec"] );
					S = Lang13.FindObj( href_list["d_rec"] );

					if ( !( GlobalVars.data_core.general.Find( R ) != 0 ) ) {
						this.temp = "Record Not Found!";
					} else {
						
						foreach (dynamic _a in Lang13.Enumerate( GlobalVars.data_core.security, typeof(Data_Record) )) {
							E = _a;
							

							if ( E.fields["name"] == R.fields["name"] || E.fields["id"] == R.fields["id"] ) {
								S = E;
							}
						}
						this.active1 = R;
						this.active2 = S;
						this.screen = 3;
					}
				} else if ( _k=="Print Record" ) {
					
					if ( !( this.printing == true ) ) {
						this.printing = true;
						GlobalVars.data_core.securityPrintCount++;
						GlobalFuncs.playsound( this.loc, "sound/items/poster_being_created.ogg", 100, 1 );
						Task13.Sleep( 30 );
						P = new Obj_Item_Weapon_Paper( this.loc );
						P.info = "<CENTER><B>Security Record - (SR-" + GlobalVars.data_core.securityPrintCount + ")</B></CENTER><BR>";

						if ( this.active1 is Data_Record && GlobalVars.data_core.general.Find( this.active1 ) != 0 ) {
							P.info += "Name: " + this.active1.fields["name"] + " ID: " + this.active1.fields["id"] + "<BR>\nSex: " + this.active1.fields["sex"] + "<BR>\nAge: " + this.active1.fields["age"] + "<BR>";

							if ( GlobalVars.config.mutant_races ) {
								P.info += "\nSpecies: " + this.active1.fields["species"] + "<BR>";
							}
							P.info += "\nFingerprint: " + this.active1.fields["fingerprint"] + "<BR>\nPhysical Status: " + this.active1.fields["p_stat"] + "<BR>\nMental Status: " + this.active1.fields["m_stat"] + "<BR>";
						} else {
							P.info += "<B>General Record Lost!</B><BR>";
						}

						if ( this.active2 is Data_Record && GlobalVars.data_core.security.Find( this.active2 ) != 0 ) {
							P.info += "<BR>\n<CENTER><B>Security Data</B></CENTER><BR>\nCriminal Status: " + this.active2.fields["criminal"];
							P.info += "<BR>\n<BR>\nMinor Crimes:<BR>\n";
							P.info += @"<table style=""text-align:center;"" border=""1"" cellspacing=""0"" width=""100%"">
<tr>
<th>Crime</th>
<th>Details</th>
<th>Author</th>
<th>Time Added</th>
</tr>";

							foreach (dynamic _b in Lang13.Enumerate( this.active2.fields["mi_crim"], typeof(Data_Crime) )) {
								c = _b;
								
								P.info += "<tr><td>" + c.crimeName + "</td>";
								P.info += "<td>" + c.crimeDetails + "</td>";
								P.info += "<td>" + c.author + "</td>";
								P.info += "<td>" + c.time + "</td>";
								P.info += "</tr>";
							}
							P.info += "</table>";
							P.info += "<BR>\nMajor Crimes: <BR>\n";
							P.info += @"<table style=""text-align:center;"" border=""1"" cellspacing=""0"" width=""100%"">
<tr>
<th>Crime</th>
<th>Details</th>
<th>Author</th>
<th>Time Added</th>
</tr>";

							foreach (dynamic _c in Lang13.Enumerate( this.active2.fields["ma_crim"], typeof(Data_Crime) )) {
								c2 = _c;
								
								P.info += "<tr><td>" + c2.crimeName + "</td>";
								P.info += "<td>" + c2.crimeDetails + "</td>";
								P.info += "<td>" + c2.author + "</td>";
								P.info += "<td>" + c2.time + "</td>";
								P.info += "</tr>";
							}
							P.info += "</table>";
							P.info += "<BR>\nImportant Notes:<BR>\n	" + this.active2.fields["notes"] + "<BR>\n<BR>\n<CENTER><B>Comments/Log</B></CENTER><BR>";
							counter = 1;

							while (Lang13.Bool( this.active2.fields["com_" + counter] )) {
								P.info += "" + this.active2.fields["com_" + counter] + "<BR>";
								counter++;
							}
							P.name = "SR-" + GlobalVars.data_core.securityPrintCount + " '" + this.active1.fields["name"] + "'";
						} else {
							P.info += "<B>Security Record Lost!</B><BR>";
							P.name = "SR-" + GlobalVars.data_core.securityPrintCount + " '" + "Record Lost" + "'";
						}
						P.info += "</TT>";
						this.printing = null;
					}
				} else if ( _k=="Delete All Records" ) {
					this.temp = "";
					this.temp += "Are you sure you wish to delete all Security records?<br>";
					this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Purge All Records'>Yes</a><br>" ).ToString();
					this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Clear Screen'>No</a>" ).ToString();
				} else if ( _k=="Purge All Records" ) {
					this.investigate_log( "" + Task13.User.name + " (" + Task13.User.key + ") has purged all the security records.", "records" );

					foreach (dynamic _d in Lang13.Enumerate( GlobalVars.data_core.security, typeof(Data_Record) )) {
						R2 = _d;
						
						GlobalFuncs.qdel( R2 );
					}
					GlobalVars.data_core.security.Cut();
					this.temp = "All Security records deleted.";
				} else if ( _k=="Add Entry" ) {
					
					if ( !( this.active2 is Data_Record ) ) {
						return _default;
					}
					a2 = this.active2;
					t1 = GlobalFuncs.stripped_multiline_input( "Add Comment:", "Secure. records", null, null );

					if ( !this.canUseSecurityRecordsConsole( Task13.User, t1, null, a2 ) ) {
						return _default;
					}
					counter2 = 1;

					while (Lang13.Bool( this.active2.fields["com_" + counter2] )) {
						counter2++;
					}
					this.active2.fields["com_" + counter2] = "Made by " + this.authenticated + " (" + this.rank + ") on " + GlobalFuncs.worldtime2text() + " " + String13.FormatTime( Game13.realtime, "MMM DD" ) + ", " + ( GlobalVars.year_integer + 540 ) + "<BR>" + t1;
				} else if ( _k=="Delete Record (ALL)" ) {
					
					if ( Lang13.Bool( this.active1 ) ) {
						this.temp = "<h5>Are you sure you wish to delete the record (ALL)?</h5>";
						this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Delete Record (ALL) Execute'>Yes</a><br>" ).ToString();
						this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Clear Screen'>No</a>" ).ToString();
					}
				} else if ( _k=="Delete Record (Security)" ) {
					
					if ( Lang13.Bool( this.active2 ) ) {
						this.temp = "<h5>Are you sure you wish to delete the record (Security Portion Only)?</h5>";
						this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Delete Record (Security) Execute'>Yes</a><br>" ).ToString();
						this.temp += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=Clear Screen'>No</a>" ).ToString();
					}
				} else if ( _k=="Delete Entry" ) {
					
					if ( this.active2 is Data_Record && Lang13.Bool( this.active2.fields["com_" + href_list["del_c"]] ) ) {
						this.active2.fields["com_" + href_list["del_c"]] = "<B>Deleted</B>";
					}
				} else if ( _k=="New Record (Security)" ) {
					
					if ( this.active1 is Data_Record && !( this.active2 is Data_Record ) ) {
						R3 = new Data_Record();
						R3.fields["name"] = this.active1.fields["name"];
						R3.fields["id"] = this.active1.fields["id"];
						R3.name = "Security Record #" + R3.fields["id"];
						R3.fields["criminal"] = "None";
						R3.fields["mi_crim"] = new ByTable();
						R3.fields["ma_crim"] = new ByTable();
						R3.fields["notes"] = "No notes.";
						GlobalVars.data_core.security.Add( R3 );
						this.active2 = R3;
						this.screen = 3;
					}
				} else if ( _k=="New Record (General)" ) {
					G = new Data_Record();
					G.fields["name"] = "New Record";
					G.fields["id"] = "" + GlobalFuncs.num2hex( Rand13.Int( 1, 16777215 ), 6 );
					G.fields["rank"] = "Unassigned";
					G.fields["sex"] = "Male";
					G.fields["age"] = "Unknown";

					if ( GlobalVars.config.mutant_races ) {
						G.fields["species"] = "Human";
					}
					G.fields["photo_front"] = new Icon();
					G.fields["photo_side"] = new Icon();
					G.fields["fingerprint"] = "?????";
					G.fields["p_stat"] = "Active";
					G.fields["m_stat"] = "Stable";
					GlobalVars.data_core.general.Add( G );
					this.active1 = G;
					R4 = new Data_Record();
					R4.fields["name"] = this.active1.fields["name"];
					R4.fields["id"] = this.active1.fields["id"];
					R4.name = "Security Record #" + R4.fields["id"];
					R4.fields["criminal"] = "None";
					R4.fields["mi_crim"] = new ByTable();
					R4.fields["ma_crim"] = new ByTable();
					R4.fields["notes"] = "No notes.";
					GlobalVars.data_core.security.Add( R4 );
					this.active2 = R4;
					M = new Data_Record();
					M.fields["id"] = this.active1.fields["id"];
					M.fields["name"] = this.active1.fields["name"];
					M.fields["blood_type"] = "?";
					M.fields["b_dna"] = "?????";
					M.fields["mi_dis"] = "None";
					M.fields["mi_dis_d"] = "No minor disabilities have been declared.";
					M.fields["ma_dis"] = "None";
					M.fields["ma_dis_d"] = "No major disabilities have been diagnosed.";
					M.fields["alg"] = "None";
					M.fields["alg_d"] = "No allergies have been detected in this patient.";
					M.fields["cdi"] = "None";
					M.fields["cdi_d"] = "No diseases have been diagnosed at the moment.";
					M.fields["notes"] = "No notes.";
					GlobalVars.data_core.medical.Add( M );
				} else if ( _k=="Edit Field" ) {
					a1 = this.active1;
					a22 = this.active2;

					dynamic _f = href_list["field"]; // Was a switch-case, sorry for the mess.
					if ( _f=="name" ) {
						
						if ( this.active1 is Data_Record || this.active2 is Data_Record ) {
							t12 = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( "Please input name:", "Secure. records", this.active1.fields["name"], null, null, InputType.Str ) ), 1, 1024 );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t12, a1 ) ) {
								return _default;
							}

							if ( this.active1 is Data_Record ) {
								this.active1.fields["name"] = t12;
							}

							if ( this.active2 is Data_Record ) {
								this.active2.fields["name"] = t12;
							}
						}
					} else if ( _f=="id" ) {
						
						if ( this.active2 is Data_Record || this.active1 is Data_Record ) {
							t13 = GlobalFuncs.stripped_input( Task13.User, "Please input id:", "Secure. records", this.active1.fields["id"], null );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t13, a1 ) ) {
								return _default;
							}

							if ( this.active1 is Data_Record ) {
								this.active1.fields["id"] = t13;
							}

							if ( this.active2 is Data_Record ) {
								this.active2.fields["id"] = t13;
							}
						}
					} else if ( _f=="fingerprint" ) {
						
						if ( this.active1 is Data_Record ) {
							t14 = GlobalFuncs.stripped_input( Task13.User, "Please input fingerprint hash:", "Secure. records", this.active1.fields["fingerprint"], null );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t14, a1 ) ) {
								return _default;
							}
							this.active1.fields["fingerprint"] = t14;
						}
					} else if ( _f=="sex" ) {
						
						if ( this.active1 is Data_Record ) {
							
							if ( this.active1.fields["sex"] == "Male" ) {
								this.active1.fields["sex"] = "Female";
							} else {
								this.active1.fields["sex"] = "Male";
							}
						}
					} else if ( _f=="age" ) {
						
						if ( this.active1 is Data_Record ) {
							t15 = Interface13.Input( "Please input age:", "Secure. records", this.active1.fields["age"], null, null, InputType.Num );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, "age", a1 ) ) {
								return _default;
							}
							this.active1.fields["age"] = t15;
						}
					} else if ( _f=="species" ) {
						
						if ( this.active1 is Data_Record ) {
							t16 = Interface13.Input( "Select a species", "Species Selection", null, null, GlobalVars.roundstart_species, InputType.Null | InputType.Any );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t16, a1 ) ) {
								return _default;
							}
							this.active1.fields["species"] = t16;
						}
					} else if ( _f=="show_photo_front" ) {
						
						if ( Lang13.Bool( this.active1.fields["photo_front"] ) ) {
							
							if ( this.active1.fields["photo_front"] is Obj_Item_Weapon_Photo ) {
								P2 = this.active1.fields["photo_front"];
								P2.show( Task13.User );
							}
						}
					} else if ( _f=="upd_photo_front" ) {
						photo = this.get_photo( Task13.User );

						if ( Lang13.Bool( photo ) ) {
							GlobalFuncs.qdel( this.active1.fields["photo_front"] );
							this.active1.fields["photo_front"] = photo;
						}
					} else if ( _f=="show_photo_side" ) {
						
						if ( Lang13.Bool( this.active1.fields["photo_side"] ) ) {
							
							if ( this.active1.fields["photo_side"] is Obj_Item_Weapon_Photo ) {
								P3 = this.active1.fields["photo_side"];
								P3.show( Task13.User );
							}
						}
					} else if ( _f=="upd_photo_side" ) {
						photo2 = this.get_photo( Task13.User );

						if ( Lang13.Bool( photo2 ) ) {
							GlobalFuncs.qdel( this.active1.fields["photo_side"] );
							this.active1.fields["photo_side"] = photo2;
						}
					} else if ( _f=="mi_crim_add" ) {
						
						if ( this.active1 is Data_Record ) {
							t17 = GlobalFuncs.stripped_input( Task13.User, "Please input minor crime names:", "Secure. records", "", null );
							t2 = GlobalFuncs.stripped_multiline_input( Task13.User, "Please input minor crime details:", "Secure. records", "", null );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t17, null, a22 ) ) {
								return _default;
							}
							crime = GlobalVars.data_core.createCrimeEntry( t17, t2, this.authenticated, GlobalFuncs.worldtime2text() );
							GlobalVars.data_core.addMinorCrime( this.active1.fields["id"], crime );
						}
					} else if ( _f=="mi_crim_delete" ) {
						
						if ( this.active1 is Data_Record ) {
							
							if ( Lang13.Bool( href_list["cdataid"] ) ) {
								
								if ( !this.canUseSecurityRecordsConsole( Task13.User, "delete", null, a22 ) ) {
									return _default;
								}
								GlobalVars.data_core.removeMinorCrime( this.active1.fields["id"], href_list["cdataid"] );
							}
						}
					} else if ( _f=="ma_crim_add" ) {
						
						if ( this.active1 is Data_Record ) {
							t18 = GlobalFuncs.stripped_input( Task13.User, "Please input major crime names:", "Secure. records", "", null );
							t22 = GlobalFuncs.stripped_multiline_input( Task13.User, "Please input major crime details:", "Secure. records", "", null );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t18, null, a22 ) ) {
								return _default;
							}
							crime2 = GlobalVars.data_core.createCrimeEntry( t18, t22, this.authenticated, GlobalFuncs.worldtime2text() );
							GlobalVars.data_core.addMajorCrime( this.active1.fields["id"], crime2 );
						}
					} else if ( _f=="ma_crim_delete" ) {
						
						if ( this.active1 is Data_Record ) {
							
							if ( Lang13.Bool( href_list["cdataid"] ) ) {
								
								if ( !this.canUseSecurityRecordsConsole( Task13.User, "delete", null, a22 ) ) {
									return _default;
								}
								GlobalVars.data_core.removeMajorCrime( this.active1.fields["id"], href_list["cdataid"] );
							}
						}
					} else if ( _f=="notes" ) {
						
						if ( this.active2 is Data_Record ) {
							t19 = GlobalFuncs.stripped_input( Task13.User, "Please summarize notes:", "Secure. records", this.active2.fields["notes"], null );

							if ( !this.canUseSecurityRecordsConsole( Task13.User, t19, null, a22 ) ) {
								return _default;
							}
							this.active2.fields["notes"] = t19;
						}
					} else if ( _f=="criminal" ) {
						
						if ( this.active2 is Data_Record ) {
							this.temp = "<h5>Criminal Status:</h5>";
							this.temp += "<ul>";
							this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Criminal Status;criminal2=none'>None</a></li>" ).ToString();
							this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Criminal Status;criminal2=arrest'>*Arrest*</a></li>" ).ToString();
							this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Criminal Status;criminal2=incarcerated'>Incarcerated</a></li>" ).ToString();
							this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Criminal Status;criminal2=parolled'>Parolled</a></li>" ).ToString();
							this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Criminal Status;criminal2=released'>Discharged</a></li>" ).ToString();
							this.temp += "</ul>";
						}
					} else if ( _f=="rank" ) {
						L = new ByTable(new object [] { "Head of Personnel", "Captain", "AI", "Central Command" });

						if ( this.active1 is Data_Record && L.Find( this.rank ) != 0 ) {
							this.temp = "<h5>Rank:</h5>";
							this.temp += "<ul>";

							foreach (dynamic _e in Lang13.Enumerate( GlobalFuncs.get_all_jobs() )) {
								rank = _e;
								
								this.temp += new Txt( "<li><a href='?src=" ).Ref( this ).str( ";choice=Change Rank;rank=" ).item( rank ).str( "'>" ).item( rank ).str( "</a></li>" ).ToString();
							}
							this.temp += "</ul>";
						} else {
							Interface13.Alert( Task13.User, "You do not have the required rank to do this!" );
						}
					}
				} else {
					this.temp = null;

					dynamic _j = href_list["choice"]; // Was a switch-case, sorry for the mess.
					if ( _j=="Change Rank" ) {
						
						if ( Lang13.Bool( this.active1 ) ) {
							this.active1.fields["rank"] = href_list["rank"];

							if ( GlobalFuncs.get_all_jobs().Contains( href_list["rank"] ) ) {
								this.active1.fields["real_rank"] = href_list["real_rank"];
							}
						}
					} else if ( _j=="Change Criminal Status" ) {
						
						if ( Lang13.Bool( this.active2 ) ) {
							old_field = this.active2.fields["criminal"];

							dynamic _g = href_list["criminal2"]; // Was a switch-case, sorry for the mess.
							if ( _g=="none" ) {
								this.active2.fields["criminal"] = "None";
							} else if ( _g=="arrest" ) {
								this.active2.fields["criminal"] = "*Arrest*";
							} else if ( _g=="incarcerated" ) {
								this.active2.fields["criminal"] = "Incarcerated";
							} else if ( _g=="parolled" ) {
								this.active2.fields["criminal"] = "Parolled";
							} else if ( _g=="released" ) {
								this.active2.fields["criminal"] = "Discharged";
							}
							this.investigate_log( "" + this.active1.fields["name"] + " has been set from " + old_field + " to " + this.active2.fields["criminal"] + " by " + Task13.User.name + " (" + Task13.User.key + ").", "records" );

							foreach (dynamic _h in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Carbon_Human) )) {
								H = _h;
								
								H.sec_hud_set_security_status();
							}
						}
					} else if ( _j=="Delete Record (Security) Execute" ) {
						this.investigate_log( "" + Task13.User.name + " (" + Task13.User.key + ") has deleted the security records for " + this.active1.fields["name"] + ".", "records" );

						if ( Lang13.Bool( this.active2 ) ) {
							GlobalVars.data_core.security.Remove( this.active2 );
							GlobalFuncs.qdel( this.active2 );
							this.active2 = null;
						}
					} else if ( _j=="Delete Record (ALL) Execute" ) {
						
						if ( Lang13.Bool( this.active1 ) ) {
							this.investigate_log( "" + Task13.User.name + " (" + Task13.User.key + ") has deleted all records for " + this.active1.fields["name"] + ".", "records" );

							foreach (dynamic _i in Lang13.Enumerate( GlobalVars.data_core.medical, typeof(Data_Record) )) {
								R5 = _i;
								

								if ( R5.fields["name"] == this.active1.fields["name"] || R5.fields["id"] == this.active1.fields["id"] ) {
									GlobalVars.data_core.medical.Remove( R5 );
									GlobalFuncs.qdel( R5 );
									break;
								}
							}
							GlobalVars.data_core.general.Remove( this.active1 );
							GlobalFuncs.qdel( this.active1 );
							this.active1 = null;
						}

						if ( Lang13.Bool( this.active2 ) ) {
							GlobalVars.data_core.security.Remove( this.active2 );
							GlobalFuncs.qdel( this.active2 );
							this.active2 = null;
						}
					} else {
						this.temp = "This function does not appear to be working at the moment. Our apologies.";
					}
				}
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			return _default;
		}

		// Function from file: security.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			Data_Record R = null;
			string crimstat = null;
			Data_Record E = null;
			string background = null;
			dynamic P1 = null;
			dynamic P2 = null;
			Data_Crime c2 = null;
			Data_Crime c3 = null;
			int counter = 0;
			Browser popup = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}

			if ( this.z > 6 ) {
				a.WriteMsg( "<span class='boldannounce'>Unable to establish a connection</span>: ÿ\"You're too far away from the station!" );
				return null;
			}

			if ( Lang13.Bool( this.temp ) ) {
				dat = new Txt( "<TT>" ).item( this.temp ).str( "</TT><BR><BR><A href='?src=" ).Ref( this ).str( ";choice=Clear Screen'>Clear Screen</A>" ).ToString();
			} else {
				dat = new Txt( "Confirm Identity: <A href='?src=" ).Ref( this ).str( ";choice=Confirm Identity'>" ).item( ( Lang13.Bool( this.scan ) ? "" + this.scan.name : "----------" ) ).str( "</A><HR>" ).ToString();

				if ( Lang13.Bool( this.authenticated ) ) {
					
					switch ((int?)( this.screen )) {
						case 1:
							dat += "<body onload='selectTextField(); updateSearch();' onkeyup='updateSearch();'>";
							dat += @"

		<head>
			<script src=""libraries.min.js""></script>
			<script type='text/javascript'>

				function updateSearch(){
					var filter_text = document.getElementById('filter');
					var filter = filter_text.value.toLowerCase();

					if(complete_list != null && complete_list != """"){
						var mtbl = document.getElementById(""maintable_data_archive"");
						mtbl.innerHTML = complete_list;
					}

					if(filter.value == """"){
						return;
					}else{
						$(""#maintable_data"").children(""tbody"").children(""tr"").children(""td"").children(""input"").filter(function(index)
						{
							return $(this)[0].value.toLowerCase().indexOf(filter) == -1
						}).parent(""td"").parent(""tr"").hide()
					}
				}

				function selectTextField(){
					var filter_text = document.getElementById('filter');
					filter_text.focus();
					filter_text.select();
				}

			</script>
		</head>


	";
							dat += "\n<p style='text-align:center;'>";
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=New Record (General)'>New Record</A><BR>" ).ToString();
							dat += @"
						<table width='560' align='center' cellspacing='0' cellpadding='5' id='maintable'>
							<tr id='search_tr'>
								<td align='center'>
									<b>Search:</b> <input type='text' id='filter' value='' style='width:300px;'>
								</td>
							</tr>
						</table>
					";
							dat += new Txt( @"
</p>
<table style=""text-align:center;"" cellspacing=""0"" width=""100%"">
<tr>
<th>Records:</th>
</tr>
</table>

<span id='maintable_data_archive'>
<table id='maintable_data' style=""text-align:center;"" border=""1"" cellspacing=""0"" width=""100%"">
<tr>
<th><A href='?src=" ).Ref( this ).str( ";choice=Sorting;sort=name'>Name</A></th>\n<th><A href='?src=" ).Ref( this ).str( ";choice=Sorting;sort=id'>ID</A></th>\n<th><A href='?src=" ).Ref( this ).str( ";choice=Sorting;sort=rank'>Rank</A></th>\n<th><A href='?src=" ).Ref( this ).str( ";choice=Sorting;sort=fingerprint'>Fingerprints</A></th>\n<th>Criminal Status</th>\n</tr>" ).ToString();

							if ( !( GlobalVars.data_core.general == null ) ) {
								
								foreach (dynamic _c in Lang13.Enumerate( GlobalFuncs.sortRecord( GlobalVars.data_core.general, this.sortBy, this.order ), typeof(Data_Record) )) {
									R = _c;
									
									crimstat = "";

									foreach (dynamic _a in Lang13.Enumerate( GlobalVars.data_core.security, typeof(Data_Record) )) {
										E = _a;
										

										if ( E.fields["name"] == R.fields["name"] && E.fields["id"] == R.fields["id"] ) {
											crimstat = E.fields["criminal"];
										}
									}
									background = null;

									switch ((string)( crimstat )) {
										case "*Arrest*":
											background = "'background-color:#990000;'";
											break;
										case "Incarcerated":
											background = "'background-color:#CD6500;'";
											break;
										case "Parolled":
											background = "'background-color:#CD6500;'";
											break;
										case "Discharged":
											background = "'background-color:#006699;'";
											break;
										case "None":
											background = "'background-color:#4F7529;'";
											break;
										case "":
											background = "''";
											crimstat = "No Record.";
											break;
									}
									dat += "<tr style=" + background + ">";
									dat += new Txt( "<td><input type='hidden' value='" ).item( R.fields["name"] ).str( " " ).item( R.fields["id"] ).str( " " ).item( R.fields["rank"] ).str( " " ).item( R.fields["fingerprint"] ).str( "'></input><A href='?src=" ).Ref( this ).str( ";choice=Browse Record;d_rec=" ).Ref( R ).str( "'>" ).item( R.fields["name"] ).str( "</a></td>" ).ToString();
									dat += "<td>" + R.fields["id"] + "</td>";
									dat += "<td>" + R.fields["rank"] + "</td>";
									dat += "<td>" + R.fields["fingerprint"] + "</td>";
									dat += "<td>" + crimstat + "</td></tr>";
								}
								dat += @"
						</table></span>
						<script type='text/javascript'>
							var maintable = document.getElementById(""maintable_data_archive"");
							var complete_list = maintable.innerHTML;
						</script>
						<hr width='75%' />";
							}
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Record Maintenance'>Record Maintenance</A><br><br>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Log Out'>{Log Out}</A>" ).ToString();
							break;
						case 2:
							dat += "<B>Records Maintenance</B><HR>";
							dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";choice=Delete All Records'>Delete All Records</A><BR><BR><A href='?src=" ).Ref( this ).str( ";choice=Return'>Back</A>" ).ToString();
							break;
						case 3:
							dat += "<font size='4'><b>Security Record</b></font><br>";

							if ( this.active1 is Data_Record && GlobalVars.data_core.general.Find( this.active1 ) != 0 ) {
								
								if ( this.active1.fields["photo_front"] is Obj_Item_Weapon_Photo ) {
									P1 = this.active1.fields["photo_front"];
									Interface13.CacheBrowseResource( a, P1.img, "photo_front" );
								}

								if ( this.active1.fields["photo_side"] is Obj_Item_Weapon_Photo ) {
									P2 = this.active1.fields["photo_side"];
									Interface13.CacheBrowseResource( a, P2.img, "photo_side" );
								}
								dat += new Txt( "<table><tr><td><table>\n						<tr><td>Name:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=name'>&nbsp;" ).item( this.active1.fields["name"] ).str( "&nbsp;</A></td></tr>\n						<tr><td>ID:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=id'>&nbsp;" ).item( this.active1.fields["id"] ).str( "&nbsp;</A></td></tr>\n						<tr><td>Sex:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=sex'>&nbsp;" ).item( this.active1.fields["sex"] ).str( "&nbsp;</A></td></tr>\n						<tr><td>Age:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=age'>&nbsp;" ).item( this.active1.fields["age"] ).str( "&nbsp;</A></td></tr>" ).ToString();

								if ( GlobalVars.config.mutant_races ) {
									dat += new Txt( "<tr><td>Species:</td><td><A href ='?src=" ).Ref( this ).str( ";choice=Edit Field;field=species'>&nbsp;" ).item( this.active1.fields["species"] ).str( "&nbsp;</A></td></tr>" ).ToString();
								}
								dat += new Txt( "<tr><td>Rank:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=rank'>&nbsp;" ).item( this.active1.fields["rank"] ).str( "&nbsp;</A></td></tr>\n						<tr><td>Fingerprint:</td><td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=fingerprint'>&nbsp;" ).item( this.active1.fields["fingerprint"] ).str( "&nbsp;</A></td></tr>\n						<tr><td>Physical Status:</td><td>&nbsp;" ).item( this.active1.fields["p_stat"] ).str( "&nbsp;</td></tr>\n						<tr><td>Mental Status:</td><td>&nbsp;" ).item( this.active1.fields["m_stat"] ).str( "&nbsp;</td></tr>\n						</table></td>\n						<td><table><td align = center><a href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=show_photo_front'><img src=photo_front height=80 width=80 border=4></a><br>\n						<a href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=upd_photo_front'>Update front photo</a></td>\n						<td align = center><a href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=show_photo_side'><img src=photo_side height=80 width=80 border=4></a><br>\n						<a href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=upd_photo_side'>Update side photo</a></td></table>\n						</td></tr></table></td></tr></table>" ).ToString();
							} else {
								dat += "<br>General Record Lost!<br>";
							}

							if ( this.active2 is Data_Record && GlobalVars.data_core.security.Find( this.active2 ) != 0 ) {
								dat += "<font size='4'><b>Security Data</b></font>";
								dat += new Txt( "<br>Criminal Status: <A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=criminal'>" ).item( this.active2.fields["criminal"] ).str( "</A>" ).ToString();
								dat += new Txt( "<br><br>Minor Crimes: <A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=mi_crim_add'>Add New</A>" ).ToString();
								dat += @"<table style=""text-align:center;"" border=""1"" cellspacing=""0"" width=""100%"">
						<tr>
						<th>Crime</th>
						<th>Details</th>
						<th>Author</th>
						<th>Time Added</th>
						<th>Del</th>
						</tr>";

								foreach (dynamic _d in Lang13.Enumerate( this.active2.fields["mi_crim"], typeof(Data_Crime) )) {
									c2 = _d;
									
									dat += "<tr><td>" + c2.crimeName + "</td>";
									dat += "<td>" + c2.crimeDetails + "</td>";
									dat += "<td>" + c2.author + "</td>";
									dat += "<td>" + c2.time + "</td>";
									dat += new Txt( "<td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=mi_crim_delete;cdataid=" ).item( c2.dataId ).str( "'>[X]</A></td>" ).ToString();
									dat += "</tr>";
								}
								dat += "</table>";
								dat += new Txt( "<br>Major Crimes: <A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=ma_crim_add'>Add New</A>" ).ToString();
								dat += @"<table style=""text-align:center;"" border=""1"" cellspacing=""0"" width=""100%"">
						<tr>
						<th>Crime</th>
						<th>Details</th>
						<th>Author</th>
						<th>Time Added</th>
						<th>Del</th>
						</tr>";

								foreach (dynamic _e in Lang13.Enumerate( this.active2.fields["ma_crim"], typeof(Data_Crime) )) {
									c3 = _e;
									
									dat += "<tr><td>" + c3.crimeName + "</td>";
									dat += "<td>" + c3.crimeDetails + "</td>";
									dat += "<td>" + c3.author + "</td>";
									dat += "<td>" + c3.time + "</td>";
									dat += new Txt( "<td><A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=ma_crim_delete;cdataid=" ).item( c3.dataId ).str( "'>[X]</A></td>" ).ToString();
									dat += "</tr>";
								}
								dat += "</table>";
								dat += new Txt( "<br>\nImportant Notes:<br>\n	<A href='?src=" ).Ref( this ).str( ";choice=Edit Field;field=notes'>&nbsp;" ).item( this.active2.fields["notes"] ).str( "&nbsp;</A>" ).ToString();
								dat += "<br><br><font size='4'><b>Comments/Log</b></font><br>";
								counter = 1;

								while (Lang13.Bool( this.active2.fields["com_" + counter] )) {
									dat += this.active2.fields["com_" + counter] + "<BR>";

									if ( this.active2.fields["com_" + counter] != "<B>Deleted</B>" ) {
										dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Delete Entry;del_c=" ).item( counter ).str( "'>Delete Entry</A><BR><BR>" ).ToString();
									}
									counter++;
								}
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Add Entry'>Add Entry</A><br><br>" ).ToString();
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Delete Record (Security)'>Delete Record (Security Only)</A><br>" ).ToString();
							} else {
								dat += "Security Record Lost!<br>";
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=New Record (Security)'>New Security Record</A><br><br>" ).ToString();
							}
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Delete Record (ALL)'>Delete Record (ALL)</A><br><A href='?src=" ).Ref( this ).str( ";choice=Print Record'>Print Record</A><br>\n<A href='?src=" ).Ref( this ).str( ";choice=Return'>Back</A><BR>" ).ToString();
							break;
					}
				} else {
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";choice=Log In'>{Log In}</A>" ).ToString();
				}
			}
			popup = new Browser( a, "secure_rec", "Security Records Console", 600, 400 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: security.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Card_Id && !Lang13.Bool( this.scan ) ) {
				
				if ( !Lang13.Bool( user.drop_item() ) ) {
					return null;
				}
				A.loc = this;
				this.scan = A;
				user.WriteMsg( "<span class='notice'>You insert " + A + ".</span>" );
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

	}

}
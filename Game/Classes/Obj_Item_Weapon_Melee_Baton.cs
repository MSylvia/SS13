// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Melee_Baton : Obj_Item_Weapon_Melee {

		public int stunforce = 7;
		public bool status = false;
		public dynamic bcell = null;
		public double? hitcost = 1000;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "baton";
			this.slot_flags = 512;
			this.force = 10;
			this.throwforce = 7;
			this.origin_tech = "combat=2";
			this.attack_verb = new ByTable(new object [] { "beaten" });
			this.icon_state = "stunbaton";
		}

		// Function from file: stunbaton.dm
		public Obj_Item_Weapon_Melee_Baton ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_icon();
			return;
		}

		// Function from file: stunbaton.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( this.deductcharge( 1000 / severity ) ) {
				
				if ( Convert.ToInt32( this.bcell.reliability ) != 100 && Rand13.PercentChance( ((int)( 50 / severity )) ) ) {
					this.bcell.reliability -= 10 / severity;
				}
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: stunbaton.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			dynamic L = null;

			
			if ( this.status && Lang13.Bool( user.disabilities & 256 ) && Rand13.PercentChance( 50 ) ) {
				((Ent_Static)user).visible_message( "<span class='danger'>" + user + " accidentally hits themself with " + this + "!</span>", "<span class='userdanger'>You accidentally hit yourself with " + this + "!</span>" );
				((Mob)user).Weaken( this.stunforce * 3 );
				this.deductcharge( this.hitcost );
				return false;
			}

			if ( M is Mob_Living_Silicon_Robot ) {
				base.attack( (object)(M), (object)(user), def_zone );
				return false;
			}

			if ( !( M is Mob_Living ) ) {
				return false;
			}
			L = M;

			if ( user.a_intent != "harm" ) {
				
				if ( this.status ) {
					
					if ( this.baton_stun( L, user ) ) {
						((Ent_Dynamic)user).do_attack_animation( L );
						return false;
					}
				} else {
					((Ent_Static)L).visible_message( "<span class='warning'>" + user + " has prodded " + L + " with " + this + ". Luckily it was off.</span>", "<span class='warning'>" + user + " has prodded you with " + this + ". Luckily it was off</span>" );
				}
			} else {
				
				if ( this.status ) {
					this.baton_stun( L, user );
				}
				base.attack( (object)(M), (object)(user), def_zone );
			}
			return false;
		}

		// Function from file: stunbaton.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Lang13.Bool( this.bcell ) && Convert.ToDouble( this.bcell.charge ) > ( this.hitcost ??0) ) {
				this.status = !this.status;
				user.WriteMsg( "<span class='notice'>" + this + " is now " + ( this.status ? "on" : "off" ) + ".</span>" );
				GlobalFuncs.playsound( this.loc, "sparks", 75, 1, -1 );
			} else {
				this.status = false;

				if ( !Lang13.Bool( this.bcell ) ) {
					user.WriteMsg( "<span class='warning'>" + this + " does not have a power source!</span>" );
				} else {
					user.WriteMsg( "<span class='warning'>" + this + " is out of charge.</span>" );
				}
			}
			this.update_icon();
			this.add_fingerprint( user );
			return null;
		}

		// Function from file: stunbaton.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;

			
			if ( A is Obj_Item_Weapon_StockParts_Cell ) {
				C = A;

				if ( Lang13.Bool( this.bcell ) ) {
					user.WriteMsg( "<span class='notice'>" + this + " already has a cell.</span>" );
				} else {
					
					if ( ( C.maxcharge ??0) < ( this.hitcost ??0) ) {
						user.WriteMsg( "<span class='notice'>" + this + " requires a higher capacity cell.</span>" );
						return null;
					}

					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					A.loc = this;
					this.bcell = A;
					user.WriteMsg( "<span class='notice'>You install a cell in " + this + ".</span>" );
					this.update_icon();
				}
			} else if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.bcell ) ) {
					this.bcell.updateicon();
					this.bcell.loc = GlobalFuncs.get_turf( this.loc );
					this.bcell = null;
					user.WriteMsg( "<span class='notice'>You remove the cell from " + this + ".</span>" );
					this.status = false;
					this.update_icon();
					return null;
				}
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: stunbaton.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( Lang13.Bool( this.bcell ) ) {
				user.WriteMsg( "<span class='notice'>The baton is " + Num13.Floor( ((Obj_Item_Weapon_StockParts_Cell)this.bcell).percent() ) + "% charged.</span>" );
			} else {
				user.WriteMsg( "<span class='warning'>The baton does not have a power source installed.</span>" );
			}
			return 0;
		}

		// Function from file: stunbaton.dm
		public override bool? update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.status ) {
				this.icon_state = "" + Lang13.Initial( this, "name" ) + "_active";
			} else if ( !Lang13.Bool( this.bcell ) ) {
				this.icon_state = "" + Lang13.Initial( this, "name" ) + "_nocell";
			} else {
				this.icon_state = "" + Lang13.Initial( this, "name" );
			}
			return null;
		}

		// Function from file: stunbaton.dm
		public bool baton_stun( dynamic L = null, dynamic user = null ) {
			dynamic H = null;
			Ent_Static R = null;
			dynamic H2 = null;

			
			if ( L is Mob_Living_Carbon_Human ) {
				H = L;

				if ( ((Mob_Living_Carbon_Human)H).check_shields( 0, "" + user + "'s " + this.name, this, 1 ) ) {
					GlobalFuncs.playsound( L, "sound/weapons/Genhit.ogg", 50, 1 );
					return false;
				}
			}

			if ( this.loc is Mob_Living_Silicon_Robot ) {
				R = this.loc;

				if ( !( R != null ) || !Lang13.Bool( ((dynamic)R).cell ) || !((Obj_Item_Weapon_StockParts_Cell)((dynamic)R).cell).use( this.hitcost ) ) {
					return false;
				}
			} else if ( !this.deductcharge( this.hitcost ) ) {
				return false;
			}
			user.lastattacked = L;
			L.lastattacker = user;
			((Mob)L).Stun( this.stunforce );
			((Mob)L).Weaken( this.stunforce );
			((Mob_Living)L).apply_effect( "stutter", this.stunforce );
			((Ent_Static)L).visible_message( "<span class='danger'>" + user + " has stunned " + L + " with " + this + "!</span>", "<span class='userdanger'>" + user + " has stunned you with " + this + "!</span>" );
			GlobalFuncs.playsound( this.loc, "sound/weapons/Egloves.ogg", 50, 1, -1 );

			if ( L is Mob_Living_Carbon_Human ) {
				H2 = L;
				((Mob_Living_Carbon_Human)H2).forcesay( GlobalVars.hit_appends );
			}
			GlobalFuncs.add_logs( user, L, "stunned" );
			return true;
		}

		// Function from file: stunbaton.dm
		public bool deductcharge( double? chrgdeductamt = null ) {
			bool _default = false;

			
			if ( Lang13.Bool( this.bcell ) ) {
				_default = ((Obj_Item_Weapon_StockParts_Cell)this.bcell).use( chrgdeductamt );

				if ( Convert.ToDouble( this.bcell.charge ) >= ( this.hitcost ??0) ) {
					return _default;
				}
			}

			if ( this.status ) {
				this.status = false;
				this.update_icon();
				GlobalFuncs.playsound( this.loc, "sparks", 75, 1, -1 );
			}
			return false;
		}

		// Function from file: stunbaton.dm
		public override void CheckParts( Game_Data holder = null ) {
			this.bcell = Lang13.FindIn( typeof(Obj_Item_Weapon_StockParts_Cell), this.contents );
			this.update_icon();
			return;
		}

		// Function from file: stunbaton.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( new Txt( "<span class='suicide'>" ).item( user ).str( " is putting the live " ).item( this.name ).str( " in " ).his_her_its_their().str( " mouth! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
			return 2;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Changeling_Fakedeath : Obj_Effect_ProcHolder_Changeling {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.chemical_cost = 15;
			this.dna_cost = 0;
			this.req_dna = 1;
			this.req_stat = 2;
		}

		public Obj_Effect_ProcHolder_Changeling_Fakedeath ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: fakedeath.dm
		public override bool can_sting( Mob user = null, dynamic target = null ) {
			
			if ( ( user.status_flags & 8192 ) != 0 ) {
				user.WriteMsg( "<span class='warning'>We are already regenerating.</span>" );
				return false;
			}

			if ( !( user.stat != 0 ) ) {
				
				switch ((string)( Interface13.Alert( "Are we sure we wish to fake our own death?", null, "Yes", "No" ) )) {
					case "No":
						return false;
						break;
				}
			}
			return base.can_sting( user, (object)(target) );
		}

		// Function from file: fakedeath.dm
		public override dynamic sting_action( Mob user = null, dynamic target = null ) {
			user.WriteMsg( "<span class='notice'>We begin our stasis, preparing energy to arise once more.</span>" );
			user.status_flags |= 8192;
			user.update_canmove();

			if ( user.stat != 2 ) {
				user.emote( "deathgasp" );
				((dynamic)user).tod = GlobalFuncs.worldtime2text();
			}
			Task13.Schedule( 400, (Task13.Closure)(() => {
				
				if ( user != null && user.mind != null && user.mind.changeling != null && user.mind.changeling.purchasedpowers != null ) {
					user.WriteMsg( "<span class='notice'>We are ready to regenerate.</span>" );
					user.mind.changeling.purchasedpowers.Add( new Obj_Effect_ProcHolder_Changeling_Revive( null ) );
				}
				return;
			}));
			GlobalFuncs.feedback_add_details( "changeling_powers", "FD" );
			return 1;
		}

	}

}
// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Sword : Obj_Item_Toy {

		public bool active = false;
		public bool hacked = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "sword0";
			this.w_class = 2;
			this.attack_verb = new ByTable(new object [] { "attacked", "struck", "hit" });
			this.icon = "icons/obj/weapons.dmi";
			this.icon_state = "sword0";
		}

		public Obj_Item_Toy_Sword ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Weapon_Twohanded_Dualsaber_Toy newSaber = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Toy_Sword ) {
				
				if ( A == this ) {
					user.WriteMsg( "<span class='warning'>You try to attach the end of the plastic sword to... itself. You're not very smart, are you?</span>" );

					if ( user is Mob_Living_Carbon_Human ) {
						((Mob_Living)user).adjustBrainLoss( 10 );
					}
				} else if ( Lang13.Bool( A.flags & 2 ) || Lang13.Bool( this.flags & 2 ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).the( ( Lang13.Bool( this.flags & 2 ) ? ((dynamic)( this )) : A ) ).item().str( " is stuck to your hand, you can't attach it to " ).the( ( Lang13.Bool( this.flags & 2 ) ? A : ((dynamic)( this )) ) ).item().str( "!</span>" ).ToString() );
				} else {
					user.WriteMsg( "<span class='notice'>You attach the ends of the two plastic swords, making a single double-bladed toy! You're fake-cool.</span>" );
					newSaber = new Obj_Item_Weapon_Twohanded_Dualsaber_Toy( user.loc );

					if ( this.hacked ) {
						newSaber.hacked = true;
						newSaber.item_color = "rainbow";
					}
					((Mob)user).unEquip( A );
					((Mob)user).unEquip( this );
					GlobalFuncs.qdel( A );
					GlobalFuncs.qdel( this );
				}
			} else if ( A is Obj_Item_Device_Multitool ) {
				
				if ( !this.hacked ) {
					this.hacked = true;
					this.item_color = "rainbow";
					user.WriteMsg( "<span class='warning'>RNBW_ENGAGE</span>" );

					if ( this.active ) {
						this.icon_state = "swordrainbow";

						if ( user.r_hand == this ) {
							((Mob)user).update_inv_r_hand(  );
						} else if ( user.l_hand == this ) {
							((Mob)user).update_inv_l_hand(  );
						}
					}
				} else {
					user.WriteMsg( "<span class='warning'>It's already fabulous!</span>" );
				}
			}
			return null;
		}

		// Function from file: toys.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.active = !this.active;

			if ( this.active ) {
				user.WriteMsg( "<span class='notice'>You extend the plastic blade with a quick flick of your wrist.</span>" );
				GlobalFuncs.playsound( user, "sound/weapons/saberon.ogg", 20, 1 );

				if ( this.hacked ) {
					this.icon_state = "swordrainbow";
					this.item_state = "swordrainbow";
				} else {
					this.icon_state = "swordblue";
					this.item_state = "swordblue";
				}
				this.w_class = 4;
			} else {
				user.WriteMsg( "<span class='notice'>You push the plastic blade back down into the handle.</span>" );
				GlobalFuncs.playsound( user, "sound/weapons/saberoff.ogg", 20, 1 );
				this.icon_state = "sword0";
				this.item_state = "sword0";
				this.w_class = 2;
			}
			this.add_fingerprint( user );
			return null;
		}

	}

}
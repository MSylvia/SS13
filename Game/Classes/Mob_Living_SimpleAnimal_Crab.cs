// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Crab : Mob_Living_SimpleAnimal {

		public dynamic inventory_head = null;
		public dynamic inventory_mask = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "crab";
			this.icon_dead = "crab_dead";
			this.speak_emote = new ByTable(new object [] { "clicks" });
			this.emote_hear = new ByTable(new object [] { "clicks." });
			this.emote_see = new ByTable(new object [] { "clacks." });
			this.speak_chance = 1;
			this.turns_per_move = 5;
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab), 1 );
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "stomps";
			this.stop_automated_movement = true;
			this.friendly = "pinches";
			this.ventcrawler = 2;
			this.gold_core_spawnable = 2;
			this.icon_state = "crab";
		}

		public Mob_Living_SimpleAnimal_Crab ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: crab.dm
		public override bool Life(  ) {
			int? east_vs_west = null;

			base.Life();

			if ( !Lang13.Bool( this.ckey ) && !( this.stat != 0 ) ) {
				
				if ( this.loc is Tile && !( this.resting != 0 ) && !( this.buckled != null ) ) {
					this.turns_since_move++;

					if ( this.turns_since_move >= this.turns_per_move ) {
						east_vs_west = Lang13.IntNullable( Rand13.Pick(new object [] { 4, 8 }) );

						if ( this.Process_Spacemove( east_vs_west ) != 0 ) {
							this.Move( Map13.GetStep( this, east_vs_west ??0 ), east_vs_west );
							this.turns_since_move = 0;
						}
					}
				}
			}
			this.regenerate_icons();
			return false;
		}

	}

}
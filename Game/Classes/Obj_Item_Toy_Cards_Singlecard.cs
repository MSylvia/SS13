// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Cards_Singlecard : Obj_Item_Toy_Cards {

		public dynamic cardname = null;
		public bool flipped = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -5;
			this.w_class = 1;
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "singlecard_nanotrasen_down";
		}

		public Obj_Item_Toy_Cards_Singlecard ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override void apply_card_vars( Obj_Item_Toy_Cards newobj = null, dynamic sourceobj = null ) {
			base.apply_card_vars( newobj, (object)(sourceobj) );
			newobj.deckstyle = sourceobj.deckstyle;
			newobj.icon_state = "singlecard_down_" + this.deckstyle;
			newobj.card_hitsound = sourceobj.card_hitsound;
			newobj.hitsound = newobj.card_hitsound;
			newobj.card_force = sourceobj.card_force;
			newobj.force = newobj.card_force;
			newobj.card_throwforce = sourceobj.card_throwforce;
			newobj.throwforce = newobj.card_throwforce;
			newobj.card_throw_speed = sourceobj.card_throw_speed;
			newobj.throw_speed = newobj.card_throw_speed;
			newobj.card_throw_range = sourceobj.card_throw_range;
			newobj.throw_range = newobj.card_throw_range;
			newobj.card_attack_verb = sourceobj.card_attack_verb;
			newobj.attack_verb = newobj.card_attack_verb;
			return;
		}

		// Function from file: toys.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Task13.User.stat != 0 || !( Task13.User is Mob_Living_Carbon_Human ) || !Task13.User.canmove || Task13.User.restrained() ) {
				return null;
			}
			this.Flip();
			return null;
		}

		// Function from file: toys.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;
			Obj_Item_Toy_Cards_Cardhand H = null;
			dynamic H2 = null;

			
			if ( A is Obj_Item_Toy_Cards_Singlecard ) {
				C = A;

				if ( C.parentdeck == this.parentdeck ) {
					H = new Obj_Item_Toy_Cards_Cardhand( user.loc );
					H.currenthand.Add( C.cardname );
					H.currenthand.Add( this.cardname );
					H.parentdeck = C.parentdeck;
					H.apply_card_vars( H, C );
					((Mob)user).unEquip( C );
					H.pickup( user );
					((Mob)user).put_in_active_hand( H );
					user.WriteMsg( "<span class='notice'>You combine the " + C.cardname + " and the " + this.cardname + " into a hand.</span>" );
					GlobalFuncs.qdel( C );
					GlobalFuncs.qdel( this );
				} else {
					user.WriteMsg( "<span class='warning'>You can't mix cards from other decks!</span>" );
				}
			}

			if ( A is Obj_Item_Toy_Cards_Cardhand ) {
				H2 = A;

				if ( H2.parentdeck == this.parentdeck ) {
					H2.currenthand.Add( this.cardname );
					((Mob)user).unEquip( this );
					((Ent_Static)user).visible_message( new Txt().item( user ).str( " adds a card to " ).his_her_its_their().str( " hand." ).ToString(), "<span class='notice'>You add the " + this.cardname + " to your hand.</span>" );
					H2.interact( user );

					if ( H2.currenthand.len > 4 ) {
						H2.icon_state = "" + this.deckstyle + "_hand5";
					} else if ( H2.currenthand.len > 3 ) {
						H2.icon_state = "" + this.deckstyle + "_hand4";
					} else if ( H2.currenthand.len > 2 ) {
						H2.icon_state = "" + this.deckstyle + "_hand3";
					}
					GlobalFuncs.qdel( this );
				} else {
					user.WriteMsg( "<span class='warning'>You can't mix cards from other decks!</span>" );
				}
			}
			return null;
		}

		// Function from file: toys.dm
		public override double examine( dynamic user = null ) {
			dynamic cardUser = null;

			
			if ( user is Mob_Living_Carbon_Human ) {
				cardUser = user;

				if ( ((Mob)cardUser).get_item_by_slot( 4 ) == this || ((Mob)cardUser).get_item_by_slot( 5 ) == this ) {
					((Ent_Static)cardUser).visible_message( new Txt().item( cardUser ).str( " checks " ).his_her_its_their().str( " card." ).ToString(), "<span class='notice'>The card reads: " + this.cardname + "</span>" );
				} else {
					cardUser.WriteMsg( "<span class='warning'>You need to have the card in your hand to check it!</span>" );
				}
			}
			return 0;
		}

		// Function from file: toys.dm
		[Verb]
		[VerbInfo( name: "Flip Card", group: "Object", access: VerbAccess.InRange, range: 1 )]
		public void Flip(  ) {
			
			if ( Task13.User.stat != 0 || !( Task13.User is Mob_Living_Carbon_Human ) || !Task13.User.canmove || Task13.User.restrained() ) {
				return;
			}

			if ( !this.flipped ) {
				this.flipped = true;

				if ( Lang13.Bool( this.cardname ) ) {
					this.icon_state = "sc_" + this.cardname + "_" + this.deckstyle;
					this.name = this.cardname;
				} else {
					this.icon_state = "sc_Ace of Spades_" + this.deckstyle;
					this.name = "What Card";
				}
				this.pixel_x = 5;
			} else if ( this.flipped ) {
				this.flipped = false;
				this.icon_state = "singlecard_down_" + this.deckstyle;
				this.name = "card";
				this.pixel_x = -5;
			}
			return;
		}

	}

}
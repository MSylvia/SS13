// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune_RaiseDead : Obj_Effect_Rune {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.cultist_name = "Raise Dead";
			this.cultist_desc = "Requires two corpses. The one placed upon the rune is brought to life, the other is turned to ash.";
			this.invocation = null;
		}

		public Obj_Effect_Rune_RaiseDead ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: runes.dm
		public override void fail_invoke( dynamic user = null ) {
			Mob_Living M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				M = _a;
				

				if ( M.stat == 2 ) {
					M.visible_message( "<span class='warning'>" + M + " twitches.</span>" );
				}
			}
			return;
		}

		// Function from file: runes.dm
		public void revive( dynamic mob_to_revive = null, dynamic mob_to_sacrifice = null, dynamic user = null, dynamic T = null ) {
			
			if ( this.rune_in_use ) {
				return;
			}

			if ( !( Map13.GetDistance( mob_to_sacrifice, this ) <= 1 ) ) {
				user.WriteMsg( "<span class='cultitalic'>The sacrificial target has been moved!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Raise Dead rune failed - catalyst corpse moved" );
				return;
			}

			if ( !T.contents.Contains( mob_to_revive ) ) {
				user.WriteMsg( "<span class='cultitalic'>The corpse to revive has been moved!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Raise Dead rune failed - revival target moved" );
				return;
			}

			if ( Convert.ToInt32( mob_to_sacrifice.stat ) != 2 ) {
				user.WriteMsg( "<span class='cultitalic'>The sacrificial target must be dead!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Raise Dead rune failed - catalyst corpse is not dead" );
				return;
			}
			this.rune_in_use = true;

			if ( user.name == "Herbert West" ) {
				((Ent_Dynamic)user).say( "To life, to life, I bring them!" );
			} else {
				((Ent_Dynamic)user).say( "Pasnar val'keriam usinar. Savrae ines amutan. Yam'toth remium il'tarat!" );
			}
			((Ent_Static)mob_to_sacrifice).visible_message( "<span class='warning'><b>" + mob_to_sacrifice + "'s body rises into the air, connected to " + mob_to_revive + " by a glowing tendril!</span>" );
			((Ent_Static)mob_to_revive).Beam( mob_to_sacrifice, "sendbeam", "icons/effects/effects.dmi", 20 );
			Task13.Sleep( 20 );

			if ( !Lang13.Bool( mob_to_sacrifice ) || !( Map13.GetDistance( mob_to_sacrifice, this ) <= 1 ) ) {
				return;
			}
			((Ent_Static)mob_to_sacrifice).visible_message( "<span class='warning'><b>" + mob_to_sacrifice + " disintegrates into a pile of bones" + ( Lang13.Bool( mob_to_revive ) ? ", the glowing tendril sinking into " + mob_to_revive + "'s body" : "" ) + ".</span>" );
			((Mob)mob_to_sacrifice).dust();

			if ( !Lang13.Bool( mob_to_revive ) || Convert.ToInt32( mob_to_revive.stat ) != 2 ) {
				this.visible_message( "<span class='warning'>The glowing tendril snaps against the rune with a shocking crack.</span>" );
				this.rune_in_use = false;
				return;
			}
			mob_to_revive.revive();
			mob_to_revive.WriteMsg( "<span class='cultlarge'>\"PASNAR SAVRAE YAM'TOTH. Arise.\"</span>" );
			((Ent_Static)mob_to_revive).visible_message( "<span class='warning'>" + mob_to_revive + " draws in a huge breath, red light shining from their eyes.</span>", "<span class='cultlarge'>You awaken suddenly from the void. You're alive!</span>" );
			this.rune_in_use = false;
			return;
		}

		// Function from file: runes.dm
		public override void invoke( dynamic user = null ) {
			dynamic T = null;
			dynamic mob_to_sacrifice = null;
			dynamic mob_to_revive = null;
			ByTable potential_sacrifice_mobs = null;
			ByTable potential_revive_mobs = null;
			Mob_Living M = null;
			Mob_Living M2 = null;

			T = GlobalFuncs.get_turf( this );
			potential_sacrifice_mobs = new ByTable();
			potential_revive_mobs = new ByTable();

			if ( this.rune_in_use ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				M = _a;
				

				if ( !T.contents.Contains( M ) && M.stat == 2 ) {
					potential_sacrifice_mobs.Add( M );
				}
			}

			if ( !( potential_sacrifice_mobs.len != 0 ) ) {
				user.WriteMsg( "<span class='cultitalic'>There are no eligible sacrifices nearby!</span>" );
				GlobalFuncs.log_game( "Raise Dead rune failed - no catalyst corpse" );
				return;
			}
			mob_to_sacrifice = Interface13.Input( user, "Choose a corpse to sacrifice.", "Corpse to Sacrifice", null, potential_sacrifice_mobs, InputType.Null | InputType.Any );

			if ( !this.Adjacent( user ) || !( this != null ) || GlobalFuncs.qdeleted( this ) || ((Mob)user).incapacitated() ) {
				return;
			}

			foreach (dynamic _b in Lang13.Enumerate( T.contents, typeof(Mob_Living) )) {
				M2 = _b;
				

				if ( M2.stat == 2 ) {
					potential_revive_mobs.Add( M2 );
				}
			}

			if ( this.rune_in_use ) {
				return;
			}

			if ( !( potential_revive_mobs.len != 0 ) ) {
				user.WriteMsg( "<span class='cultitalic'>There is no eligible revival target on the rune!</span>" );
				GlobalFuncs.log_game( "Raise Dead rune failed - no corpse to revived" );
				return;
			}
			mob_to_revive = Interface13.Input( user, "Choose a corpse to revive.", "Corpse to Revive", null, potential_revive_mobs, InputType.Null | InputType.Any );

			if ( !this.Adjacent( user ) || !( this != null ) || GlobalFuncs.qdeleted( this ) || ((Mob)user).incapacitated() ) {
				return;
			}
			this.revive( mob_to_revive, mob_to_sacrifice, user, T );
			return;
		}

	}

}
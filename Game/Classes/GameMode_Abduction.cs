// FILE AUTOGENERATED BY SOM13. DO NOT EDIT YET.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GameMode_Abduction : GameMode {

		public int max_teams = 4;
		public ByTable scientists = new ByTable();
		public ByTable agents = new ByTable();
		public ByTable team_objectives = new ByTable();
		public ByTable team_names = new ByTable();
		public bool finished = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "abduction";
			this.config_tag = "abduction";
			this.antag_flag = "abductor";
			this.recommended_enemies = 2;
			this.required_players = 15;
			this.abductor_teams = 1;
		}

		// Function from file: abduction.dm
		public override bool declare_completion(  ) {
			int? team_number = null;
			Obj_Machinery_Abductor_Console console = null;
			Objective objective = null;
			dynamic team_name = null;

			team_number = null;
			team_number = 1;

			while (( team_number ??0) <= ( this.abductor_teams ??0)) {
				console = this.get_team_console( team_number );
				objective = this.team_objectives[team_number];
				team_name = this.team_names[team_number];

				if ( ( console.experiment.points ??0) >= ( objective.target_amount ??0) ) {
					Game13.WriteMsg( "<span class='greenannounce'>" + team_name + " team fullfilled its mission!</span>" );
				} else {
					Game13.WriteMsg( "<span class='boldannounce'>" + team_name + " team failed its mission.</span>" );
				}
				team_number++;
			}
			base.declare_completion();
			return true;
		}

		// Function from file: abduction.dm
		public override bool check_finished(  ) {
			int? team_number = null;
			Obj_Machinery_Abductor_Console con = null;
			Objective objective = null;

			
			if ( !this.finished ) {
				team_number = null;
				team_number = 1;

				while (( team_number ??0) <= ( this.abductor_teams ??0)) {
					con = this.get_team_console( team_number );
					objective = this.team_objectives[team_number];

					if ( ( con.experiment.points ??0) >= ( objective.target_amount ??0) ) {
						GlobalVars.SSshuttle.emergency.request( null, 0.5 );
						this.finished = true;
						return base.check_finished();
					}
					team_number++;
				}
			}
			return base.check_finished();
		}

		// Function from file: abduction.dm
		public override bool post_setup( bool? report = null ) {
			ByTable agent_landmarks = null;
			ByTable scientist_landmarks = null;
			Obj_Effect_Landmark_Abductor A = null;
			Mind agent = null;
			Ent_Static L = null;
			Mind scientist = null;
			dynamic team_name = null;
			dynamic H = null;
			Species_Abductor S = null;
			int? team_number = null;

			agent_landmarks = new ByTable();
			scientist_landmarks = new ByTable();
			agent_landmarks.len = this.max_teams;
			scientist_landmarks.len = this.max_teams;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.landmarks_list, typeof(Obj_Effect_Landmark_Abductor) )) {
				A = _a;
				

				if ( A is Obj_Effect_Landmark_Abductor_Agent ) {
					agent_landmarks[String13.ParseNumber( A.team )] = A;
				} else if ( A is Obj_Effect_Landmark_Abductor_Scientist ) {
					scientist_landmarks[String13.ParseNumber( A.team )] = A;
				}
			}
			agent = null;
			L = null;
			scientist = null;
			team_name = null;
			H = null;
			S = null;
			team_number = null;
			team_number = 1;

			while (( team_number ??0) <= ( this.abductor_teams ??0)) {
				team_name = this.team_names[team_number];
				agent = this.agents[team_number];
				H = agent.current;
				L = agent_landmarks[team_number];
				H.loc = L.loc;
				((Mob)H).set_species( typeof(Species_Abductor) );
				S = H.dna.species;
				S.agent = true;
				S.team = team_number;
				H.real_name = team_name + " Agent";
				this.equip_common( H, team_number );
				this.equip_agent( H, team_number );
				this.greet_agent( agent, team_number );
				scientist = this.scientists[team_number];
				H = scientist.current;
				L = scientist_landmarks[team_number];
				H.loc = L.loc;
				((Mob)H).set_species( typeof(Species_Abductor) );
				S = H.dna.species;
				S.scientist = true;
				S.team = team_number;
				H.real_name = team_name + " Scientist";
				this.equip_common( H, team_number );
				this.equip_scientist( H, team_number );
				this.greet_scientist( scientist, team_number );
				team_number++;
			}
			return base.post_setup( report );
		}

		// Function from file: abduction.dm
		public void equip_scientist( dynamic scientist = null, int? team_number = null ) {
			dynamic S = null;
			Obj_Machinery_Abductor_Console console = null;
			Obj_Item_Device_Abductor_Gizmo G = null;
			Obj_Item_Weapon_Implant_Abductor beamplant = null;

			
			if ( !Lang13.Bool( team_number ) ) {
				S = scientist.dna.species;
				team_number = Lang13.IntNullable( S.team );
			}
			console = this.get_team_console( team_number );
			G = new Obj_Item_Device_Abductor_Gizmo( scientist );

			if ( console != null ) {
				console.gizmo = G;
				G.console = console;
			}
			((Mob)scientist).equip_to_slot_or_del( G, 18 );
			beamplant = new Obj_Item_Weapon_Implant_Abductor( scientist );
			beamplant.implant( scientist );
			return;
		}

		// Function from file: abduction.dm
		public void equip_agent( dynamic agent = null, int? team_number = null ) {
			dynamic S = null;
			Obj_Machinery_Abductor_Console console = null;
			Obj_Item_Clothing_Suit_Armor_Abductor_Vest V = null;

			
			if ( !Lang13.Bool( team_number ) ) {
				S = agent.dna.species;
				team_number = Lang13.IntNullable( S.team );
			}
			console = this.get_team_console( team_number );
			V = new Obj_Item_Clothing_Suit_Armor_Abductor_Vest( agent );

			if ( console != null ) {
				console.vest = V;
				V.flags |= 2;
			}
			((Mob)agent).equip_to_slot_or_del( V, 13 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Weapon_AbductorBaton( agent ), 18 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Weapon_Gun_Energy_Alien( agent ), 6 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Device_Abductor_Silencer( agent ), 18 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Clothing_Head_Helmet_Abductor( agent ), 11 );
			return;
		}

		// Function from file: abduction.dm
		public Obj_Machinery_Abductor_Console get_team_console( int? team = null ) {
			Obj_Machinery_Abductor_Console console = null;
			Obj_Machinery_Abductor_Console c = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Abductor_Console) )) {
				c = _a;
				

				if ( c.team == team ) {
					console = c;
					break;
				}
			}
			return console;
		}

		// Function from file: abduction.dm
		public void equip_common( dynamic agent = null, int? team_number = null ) {
			double? radio_freq = null;
			Obj_Item_Device_Radio_Headset_Syndicate_Alt R = null;

			radio_freq = GlobalVars.SYND_FREQ;
			R = new Obj_Item_Device_Radio_Headset_Syndicate_Alt( agent );
			R.set_frequency( radio_freq );
			((Mob)agent).equip_to_slot_or_del( R, 8 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Clothing_Shoes_Combat( agent ), 12 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Clothing_Under_Color_Grey( agent ), 14 );
			((Mob)agent).equip_to_slot_or_del( new Obj_Item_Weapon_Storage_Backpack( agent ), 1 );
			return;
		}

		// Function from file: abduction.dm
		public void greet_scientist( Mind abductor = null, int? team_number = null ) {
			dynamic team_name = null;
			int obj_count = 0;
			Objective objective = null;

			abductor.objectives.Add( this.team_objectives[team_number] );
			team_name = this.team_names[team_number];
			abductor.current.WriteMsg( "<span class='notice'>You are a scientist of " + team_name + "!</span>" );
			abductor.current.WriteMsg( "<span class='notice'>With the help of your teammate, kidnap and experiment on station crew members!</span>" );
			abductor.current.WriteMsg( "<span class='notice'>Use your tool and ship consoles to support the agent and retrieve human specimens.</span>" );
			obj_count = 1;

			foreach (dynamic _a in Lang13.Enumerate( abductor.objectives, typeof(Objective) )) {
				objective = _a;
				
				abductor.current.WriteMsg( "<B>Objective #" + obj_count + "</B>: " + objective.explanation_text );
				obj_count++;
			}
			return;
		}

		// Function from file: abduction.dm
		public void greet_agent( Mind abductor = null, int? team_number = null ) {
			dynamic team_name = null;
			int obj_count = 0;
			Objective objective = null;

			abductor.objectives.Add( this.team_objectives[team_number] );
			team_name = this.team_names[team_number];
			abductor.current.WriteMsg( "<span class='notice'>You are an agent of " + team_name + "!</span>" );
			abductor.current.WriteMsg( "<span class='notice'>With the help of your teammate, kidnap and experiment on station crew members!</span>" );
			abductor.current.WriteMsg( "<span class='notice'>Use your stealth technology and equipment to incapacitate humans for your scientist to retrieve.</span>" );
			obj_count = 1;

			foreach (dynamic _a in Lang13.Enumerate( abductor.objectives, typeof(Objective) )) {
				objective = _a;
				
				abductor.current.WriteMsg( "<B>Objective #" + obj_count + "</B>: " + objective.explanation_text );
				obj_count++;
			}
			return;
		}

		// Function from file: abduction.dm
		public void post_setup_team( int? team_number = null ) {
			ByTable agent_landmarks = null;
			ByTable scientist_landmarks = null;
			Obj_Effect_Landmark_Abductor A = null;
			Mind agent = null;
			Ent_Static L = null;
			Mind scientist = null;
			dynamic team_name = null;
			dynamic H = null;
			Species_Abductor S = null;

			agent_landmarks = new ByTable();
			scientist_landmarks = new ByTable();
			agent_landmarks.len = this.max_teams;
			scientist_landmarks.len = this.max_teams;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.landmarks_list, typeof(Obj_Effect_Landmark_Abductor) )) {
				A = _a;
				

				if ( A is Obj_Effect_Landmark_Abductor_Agent ) {
					agent_landmarks[String13.ParseNumber( A.team )] = A;
				} else if ( A is Obj_Effect_Landmark_Abductor_Scientist ) {
					scientist_landmarks[String13.ParseNumber( A.team )] = A;
				}
			}
			agent = null;
			L = null;
			scientist = null;
			team_name = null;
			H = null;
			S = null;
			team_name = this.team_names[team_number];
			agent = this.agents[team_number];
			H = agent.current;
			L = agent_landmarks[team_number];
			H.loc = L.loc;
			((Mob)H).set_species( typeof(Species_Abductor) );
			S = H.dna.species;
			S.agent = true;
			S.team = team_number;
			H.real_name = team_name + " Agent";
			this.equip_common( H, team_number );
			this.equip_agent( H, team_number );
			this.greet_agent( agent, team_number );
			scientist = this.scientists[team_number];
			H = scientist.current;
			L = scientist_landmarks[team_number];
			H.loc = L.loc;
			((Mob)H).set_species( typeof(Species_Abductor) );
			S = H.dna.species;
			S.scientist = true;
			S.team = team_number;
			H.real_name = team_name + " Scientist";
			this.equip_common( H, team_number );
			this.equip_scientist( H, team_number );
			this.greet_scientist( scientist, team_number );
			return;
		}

		// Function from file: abduction.dm
		public bool make_abductor_team( int? team_number = null, dynamic preset_agent = null, dynamic preset_scientist = null ) {
			Objective_Experiment team_objective = null;
			dynamic scientist = null;
			dynamic agent = null;

			this.team_names[team_number] = "Mothership " + Rand13.PickFromTable( GlobalVars.possible_changeling_IDs );
			team_objective = new Objective_Experiment();
			team_objective.team = team_number;
			this.team_objectives[team_number] = team_objective;

			if ( !Lang13.Bool( preset_agent ) || !Lang13.Bool( preset_scientist ) ) {
				
				if ( this.antag_candidates.len <= 2 ) {
					return false;
				}
			}

			if ( !Lang13.Bool( preset_scientist ) ) {
				scientist = Rand13.PickFromTable( this.antag_candidates );
				this.antag_candidates.Remove( scientist );
			} else {
				scientist = preset_scientist;
			}

			if ( !Lang13.Bool( preset_agent ) ) {
				agent = Rand13.PickFromTable( this.antag_candidates );
				this.antag_candidates.Remove( agent );
			} else {
				agent = preset_agent;
			}
			scientist.assigned_role = "abductor scientist";
			scientist.special_role = "abductor scientist";
			GlobalFuncs.log_game( "" + scientist.key + " (ckey) has been selected as an abductor team " + team_number + " scientist." );
			agent.assigned_role = "abductor agent";
			agent.special_role = "abductor agent";
			GlobalFuncs.log_game( "" + agent.key + " (ckey) has been selected as an abductor team " + team_number + " agent." );
			this.abductors.Or( agent );
			this.abductors.Or( scientist );
			this.scientists[team_number] = scientist;
			this.agents[team_number] = agent;
			return true;
		}

		// Function from file: abduction.dm
		public override bool pre_setup(  ) {
			int possible_teams = 0;
			int? i = null;

			this.abductor_teams = Num13.MaxInt( 1, Num13.MinInt( this.max_teams, Num13.Floor( this.num_players() / ( GlobalVars.config.abductor_scaling_coeff ??0) ) ) );
			possible_teams = Num13.MaxInt( 1, Num13.Floor( this.antag_candidates.len / 2 ) );
			this.abductor_teams = Num13.MinInt( this.abductor_teams ??0, possible_teams );
			this.abductors.len = ( this.abductor_teams ??0) * 2;
			this.scientists.len = this.abductor_teams ??0;
			this.agents.len = this.abductor_teams ??0;
			this.team_objectives.len = this.abductor_teams ??0;
			this.team_names.len = this.abductor_teams ??0;
			i = null;
			i = 1;

			while (( i ??0) <= ( this.abductor_teams ??0)) {
				
				if ( !this.make_abductor_team( i ) ) {
					return false;
				}
				i++;
			}
			return true;
		}

		// Function from file: abduction.dm
		public override void announce(  ) {
			Game13.WriteMsg( "<B>The current game mode is - Abduction!</B>" );
			Game13.WriteMsg( "There are alien <b>abductors</b> sent to " + Game13.name + " to perform nefarious experiments!" );
			Game13.WriteMsg( "<b>Abductors</b> - kidnap the crew and replace their organs with experimental ones." );
			Game13.WriteMsg( "<b>Crew</b> - don't get abducted and stop the abductors." );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Event_MoneyHacker : Event {

		public int time_duration = 0;
		public int time_start = 0;
		public dynamic affected_account = null;
		public Obj_Machinery_AccountDatabase affected_db = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.endWhen = 10000;
		}

		public Event_MoneyHacker ( Obj_Item_MechaParts_MechaEquipment_Tool_CableLayer tlistener = null, string tprocname = null ) : base( tlistener, tprocname ) {
			
		}

		// Function from file: money_hacker.dm
		public override void end(  ) {
			
			if ( Lang13.Bool( this.affected_account ) && this.affected_db != null ) {
				this.endWhen += this.time_duration;
			}
			return;
		}

		// Function from file: money_hacker.dm
		public override void tick(  ) {
			string message = null;
			double lost = 0;
			Transaction T = null;
			string date1 = null;
			string date2 = null;
			int time1 = 0;
			string time2 = null;
			string my_department = null;
			string sending = null;
			bool pass = false;
			Obj_Machinery_MessageServer MS = null;
			string keyed_dpt1 = null;
			string keyed_dpt2 = null;
			string keyed_dpt3 = null;
			Obj_Machinery_RequestsConsole Console = null;
			string keyed_department = null;
			dynamic O = null;

			
			if ( Game13.time > this.time_start + this.time_duration ) {
				
				if ( Lang13.Bool( this.affected_account ) && this.affected_db != null && this.affected_db.activated && !( ( this.affected_db.stat & 3 ) != 0 ) ) {
					message = "The hack attempt has succeeded.";
					lost = ( this.affected_account.money ??0) * 0.8 + ( Rand13.Int( 2, 4 ) - 2 ) / 10;
					this.affected_account.money -= lost;
					T = new Transaction();
					T.target_name = Rand13.Pick(new object [] { "", "yo brotha from anotha motha", "el Presidente", "chieF smackDowN" });
					T.purpose = Rand13.Pick(new object [] { "Ne$ ---ount fu%ds init*&lisat@*n", "PAY BACK YOUR MUM", "Funds withdrawal", "pWnAgE", "l33t hax", "liberationez" });
					T.amount = Rand13.Pick(new object [] { "", "(" + Rand13.Int( 0, 99999 ) + ")", "alla money", "9001$", "HOLLA HOLLA GET DOLLA", "(" + lost + ")" });
					date1 = "31 December, 1999";
					date2 = "" + String13.NumberToString( Rand13.Int( 1, 31 ) ) + " " + Rand13.Pick(new object [] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }) + ", " + Rand13.Int( 1000, 3000 );
					T.date = Rand13.Pick(new object [] { "", GlobalVars.current_date_string, date1, date2 });
					time1 = Rand13.Int( 0, 100000000 );
					time2 = "" + ( Num13.Floor( time1 / 36000 ) + 12 ) + ":" + ( time1 / 600 % 60 < 10 ? GlobalFuncs.add_zero( time1 / 600 % 60, 1 ) : ((dynamic)( time1 / 600 % 60 )) );
					T.time = Rand13.Pick(new object [] { "", GlobalFuncs.worldtime2text(), time2 });
					T.source_terminal = Rand13.Pick(new object [] { "", "" + Rand13.Pick(new object [] { "Biesel", "New Gibson" }) + " GalaxyNet Terminal #" + Rand13.Int( 111, 999 ), "your mums place", "nantrasen high CommanD" });
					this.affected_account.transaction_log.Add( T );
				} else {
					message = "The attack has ceased, the affected databases can now be brought online.";
				}
				my_department = "" + GlobalFuncs.station_name() + " firewall subroutines";
				sending = message + ( "<font color='blue'><b>Message dispatched by " + my_department + ".</b></font>" );
				pass = false;

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.message_servers, typeof(Obj_Machinery_MessageServer) )) {
					MS = _a;
					

					if ( !MS.active ) {
						continue;
					}
					MS.send_rc_message( "Engineering/Security/Bridge", my_department, message, "", "", 2 );
					pass = true;
				}

				if ( pass ) {
					keyed_dpt1 = String13.CKey( "Engineering" );
					keyed_dpt2 = String13.CKey( "Security" );
					keyed_dpt3 = String13.CKey( "Bridge" );

					foreach (dynamic _c in Lang13.Enumerate( GlobalVars.allConsoles, typeof(Obj_Machinery_RequestsConsole) )) {
						Console = _c;
						
						keyed_department = String13.CKey( Console.department );

						if ( keyed_department == keyed_dpt1 || keyed_department == keyed_dpt2 || keyed_department == keyed_dpt3 ) {
							
							if ( Console.newmessagepriority < 2 ) {
								Console.newmessagepriority = 2;
								Console.icon_state = "req_comp2";
							}

							if ( !Console.silent ) {
								GlobalFuncs.playsound( Console.loc, "sound/machines/twobeep.ogg", 50, 1 );

								foreach (dynamic _b in Lang13.Enumerate( Map13.FetchHearers( Console.loc, 5 ) )) {
									O = _b;
									
									((Mob)O).show_message( new Txt().icon( Console ).str( " *The Requests Console beeps: 'PRIORITY Alert in " ).item( my_department ).str( "'" ).ToString() );
								}
							}
							Console.messages.Add( "<B><FONT color='red'>High Priority message from " + my_department + "</FONT></B><BR>" + sending );
						}
					}
				}
				this.kill();
			}
			return;
		}

		// Function from file: money_hacker.dm
		public override void announce(  ) {
			string message = null;
			string my_department = null;
			string sending = null;
			bool pass = false;
			Obj_Machinery_MessageServer MS = null;
			string keyed_dpt1 = null;
			string keyed_dpt2 = null;
			string keyed_dpt3 = null;
			Obj_Machinery_RequestsConsole Console = null;
			string keyed_department = null;
			dynamic O = null;

			message = "A brute force hack has been detected (in progress since " + GlobalFuncs.worldtime2text() + "). The target of the attack is: Financial account #" + this.affected_account.account_number + ", without intervention this attack will succeed in " + this.time_duration / 600 + " minutes. Required intervention: complete shutdown of affected accounts databases until the attack has ceased. Notifications will be sent as updates occur.<br>";
			my_department = "" + GlobalFuncs.station_name() + " firewall subroutines";
			sending = message + ( "<font color='blue'><b>Message dispatched by " + my_department + ".</b></font>" );
			pass = false;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.message_servers, typeof(Obj_Machinery_MessageServer) )) {
				MS = _a;
				

				if ( !MS.active ) {
					continue;
				}
				MS.send_rc_message( "Engineering/Security/Bridge", my_department, message, "", "", 2 );
				pass = true;
			}

			if ( pass ) {
				keyed_dpt1 = String13.CKey( "Engineering" );
				keyed_dpt2 = String13.CKey( "Security" );
				keyed_dpt3 = String13.CKey( "Bridge" );

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.allConsoles, typeof(Obj_Machinery_RequestsConsole) )) {
					Console = _c;
					
					keyed_department = String13.CKey( Console.department );

					if ( keyed_department == keyed_dpt1 || keyed_department == keyed_dpt2 || keyed_department == keyed_dpt3 ) {
						
						if ( Console.newmessagepriority < 2 ) {
							Console.newmessagepriority = 2;
							Console.icon_state = "req_comp2";
						}

						if ( !Console.silent ) {
							GlobalFuncs.playsound( Console.loc, "sound/machines/twobeep.ogg", 50, 1 );

							foreach (dynamic _b in Lang13.Enumerate( Map13.FetchHearers( Console.loc, 5 ) )) {
								O = _b;
								
								((Mob)O).show_message( new Txt().icon( Console ).str( " *The Requests Console beeps: 'PRIORITY Alert in " ).item( my_department ).str( "'" ).ToString() );
							}
						}
						Console.messages.Add( "<B><FONT color='red'>High Priority message from " + my_department + "</FONT></B><BR>" + sending );
					}
				}
			}
			return;
		}

		// Function from file: money_hacker.dm
		public override bool start(  ) {
			return false;
		}

		// Function from file: money_hacker.dm
		public override void setup(  ) {
			Obj_Machinery_AccountDatabase DB = null;

			
			if ( GlobalVars.all_money_accounts.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.account_DBs, typeof(Obj_Machinery_AccountDatabase) )) {
					DB = _a;
					

					if ( DB.z == 1 && !( ( DB.stat & 2 ) != 0 ) && DB.activated ) {
						this.affected_db = DB;
						break;
					}
				}
			}

			if ( this.affected_db != null ) {
				this.affected_account = Rand13.PickFromTable( GlobalVars.all_money_accounts );
			} else {
				this.kill();
				return;
			}
			this.time_start = Game13.time;
			this.time_duration = Rand13.Int( 3000, 18000 );
			this.endWhen = this.time_duration * 10;
			GlobalVars.account_hack_attempted = true;
			return;
		}

	}

}
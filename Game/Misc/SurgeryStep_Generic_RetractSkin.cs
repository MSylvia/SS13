// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_Generic_RetractSkin : SurgeryStep_Generic {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_tools = new ByTable().Set( typeof(Obj_Item_Weapon_Retractor), 100 ).Set( typeof(Obj_Item_Weapon_Crowbar), 75 ).Set( typeof(Obj_Item_Weapon_Kitchen_Utensil_Fork), 50 );
			this.min_duration = 30;
			this.max_duration = 40;
		}

		// Function from file: generic.dm
		public override bool? fail_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			string affected = null;
			string msg = null;
			string self_msg = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			msg = new Txt( "<span class='warning'>" ).item( user ).str( "'s hand slips, tearing the edges of the incision on " ).item( target ).str( "'s " ).item( ((dynamic)affected).display_name ).str( " with " ).the( tool ).item().str( "!</span>" ).ToString();
			self_msg = new Txt( "<span class='warning'>Your hand slips, tearing the edges of the incision on " ).item( target ).str( "'s " ).item( ((dynamic)affected).display_name ).str( " with " ).the( tool ).item().str( "!</span>" ).ToString();

			if ( target_zone == "chest" ) {
				msg = new Txt( "<span class='warning'>" ).item( user ).str( "'s hand slips, damaging several organs in " ).item( target ).str( "'s torso with " ).the( tool ).item().str( "!</span>" ).ToString();
				self_msg = new Txt( "<span class='warning'>Your hand slips, damaging several organs in " ).item( target ).str( "'s torso with " ).the( tool ).item().str( "!</span>" ).ToString();
			}

			if ( target_zone == "groin" ) {
				msg = new Txt( "<span class='warning'>" ).item( user ).str( "'s hand slips, damaging several organs in " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( "</span>" ).ToString();
				self_msg = new Txt( "<span class='warning'>Your hand slips, damaging several organs in " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( "!</span>" ).ToString();
			}
			((Ent_Static)user).visible_message( msg, self_msg );
			((Mob_Living)target).apply_damage( 12, "brute", affected, null, 1 );
			return null;
		}

		// Function from file: generic.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;
			string msg = null;
			string self_msg = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			msg = new Txt( "<span class='notice'>" ).item( user ).str( " keeps the incision open on " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString();
			self_msg = new Txt( "<span class='notice'>You keep the incision open on " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString();

			if ( target_zone == "chest" ) {
				msg = new Txt( "<span class='notice'>" ).item( user ).str( " keeps the ribcage open on " ).item( target ).str( "'s torso with " ).the( tool ).item().str( ".</span>" ).ToString();
				self_msg = new Txt( "<span class='notice'>You keep the ribcage open on " ).item( target ).str( "'s torso with " ).the( tool ).item().str( ".</span>" ).ToString();
			}

			if ( target_zone == "groin" ) {
				msg = new Txt( "<span class='notice'>" ).item( user ).str( " keeps the incision open on " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( ".</span>" ).ToString();
				self_msg = new Txt( "<span class='notice'>You keep the incision open on " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( ".</span>" ).ToString();
			}
			((Ent_Static)user).visible_message( msg, self_msg );
			affected.open = 2;
			return false;
		}

		// Function from file: generic.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;
			string msg = null;
			string self_msg = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			msg = new Txt().item( user ).str( " starts to pry open the incision on " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString();
			self_msg = new Txt( "You start to pry open the incision on " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString();

			if ( target_zone == "chest" ) {
				msg = new Txt().item( user ).str( " starts to separate the ribcage and rearrange the organs in " ).item( target ).str( "'s torso with " ).the( tool ).item().str( "." ).ToString();
				self_msg = new Txt( "You start to separate the ribcage and rearrange the organs in " ).item( target ).str( "'s torso with " ).the( tool ).item().str( "." ).ToString();
			}

			if ( target_zone == "groin" ) {
				msg = new Txt().item( user ).str( " starts to pry open the incision and rearrange the organs in " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( "." ).ToString();
				self_msg = new Txt( "You start to pry open the incision and rearrange the organs in " ).item( target ).str( "'s lower abdomen with " ).the( tool ).item().str( "." ).ToString();
			}
			((Ent_Static)user).visible_message( msg, self_msg );
			((Mob_Living_Carbon_Human)target).custom_pain( "It feels like the skin on your " + affected.display_name + " is on fire!", true );
			base.begin_step( (object)(user), (object)(target), target_zone, tool, (object)(surgery) );
			return false;
		}

		// Function from file: generic.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			dynamic affected = null;

			
			if ( base.can_use( (object)(user), (object)(target), target_zone, tool ) != 0 ) {
				
				if ( Lang13.Bool( target.species ) && Lang13.Bool( target.species.flags & 32768 ) ) {
					GlobalFuncs.to_chat( user, "<span class='info'>" + target + " has no skin!</span>" );
					return 0;
				}
				affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
				return Lang13.Bool( affected.open ) == true ?1:0;
			}
			return 0;
		}

	}

}
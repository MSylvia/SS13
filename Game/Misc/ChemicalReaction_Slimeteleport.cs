// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ChemicalReaction_Slimeteleport : ChemicalReaction {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Slime Teleport";
			this.id = "m_tele";
			this.required_reagents = new ByTable().Set( "plasma", 5 );
			this.result_amount = 1;
			this.required_container = typeof(Obj_Item_SlimeExtract_Bluespace);
			this.required_other = true;
		}

		// Function from file: Chemistry-Recipes.dm
		public override void on_reaction( Reagents holder = null, int? created_volume = null ) {
			dynamic chosen = null;
			ByTable possible = null;
			Obj_Item_Beacon W = null;
			dynamic FROM = null;
			dynamic TO = null;
			ByTable flashers = null;
			Mob_Living_Carbon_Human M = null;
			int y_distance = 0;
			int x_distance = 0;
			Ent_Dynamic A = null;
			Tile newloc = null;
			Ent_Dynamic M2 = null;
			Obj blueeffect = null;

			GlobalFuncs.feedback_add_details( "slime_cores_used", "" + GlobalFuncs.replacetext( this.name, " ", "_" ) );

			if ( !( holder.my_atom.loc is Obj_Item_Weapon_Grenade_ChemGrenade ) ) {
				this.send_admin_alert( holder, "bluespace slime + plasma (Mass Teleport)" );
			} else {
				this.send_admin_alert( holder, "bluespace slime + plasma (Mass Teleport) in a grenade" );
			}
			possible = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.beacons, typeof(Obj_Item_Beacon) )) {
				W = _a;
				
				possible.Add( W );
			}

			if ( possible.len > 0 ) {
				chosen = Rand13.PickFromTable( possible );
			}

			if ( Lang13.Bool( chosen ) ) {
				FROM = GlobalFuncs.get_turf( holder.my_atom );
				TO = GlobalFuncs.get_turf( chosen );
				GlobalFuncs.playsound( TO, "sound/effects/phasein.ogg", 100, 1 );
				flashers = new ByTable();

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, TO ), typeof(Mob_Living_Carbon_Human) )) {
					M = _b;
					

					if ( M.eyecheck() <= 0 && !( M.glasses is Obj_Item_Clothing_Glasses_Science ) ) {
						Icon13.Flick( "e_flash", M.flash );
						flashers.Add( M );
					}
				}
				y_distance = Convert.ToInt32( TO.y - FROM.y );
				x_distance = Convert.ToInt32( TO.x - FROM.x );

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRange( FROM, 4 ), typeof(Ent_Dynamic) )) {
					A = _c;
					

					if ( A is Obj_Item_Beacon ) {
						continue;
					}

					if ( Lang13.Bool( A.anchored ) ) {
						continue;
					}

					if ( A is Obj_Structure_Cable ) {
						continue;
					}
					newloc = Map13.GetTile( A.x + x_distance, A.y + y_distance, Convert.ToInt32( TO.z ) );

					if ( !A.Move( newloc ) ) {
						A.loc = Map13.GetTile( A.x + x_distance, A.y + y_distance, Convert.ToInt32( TO.z ) );
					}
					Task13.Schedule( 0, (Task13.Closure)(() => {
						
						if ( A is Mob && !flashers.Contains( A ) ) {
							M2 = A;

							if ( Lang13.Bool( ((dynamic)M2).client ) ) {
								blueeffect = new Obj( this );
								blueeffect.screen_loc = "WEST,SOUTH to EAST,NORTH";
								blueeffect.icon = "icons/effects/effects.dmi";
								blueeffect.icon_state = "shieldsparkles";
								blueeffect.layer = 17;
								blueeffect.mouse_opacity = 0;
								((dynamic)M2).client.screen += blueeffect;
								Task13.Sleep( 20 );
								((dynamic)M2).client.screen -= blueeffect;
								GlobalFuncs.qdel( blueeffect );
								blueeffect = null;
							}
						}
						return;
					}));
				}
			}
			return;
		}

	}

}
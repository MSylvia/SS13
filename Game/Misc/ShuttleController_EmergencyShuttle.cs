// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ShuttleController_EmergencyShuttle : ShuttleController {

		// Function from file: shuttle_controller.dm
		public override bool process(  ) {
			double timeleft = 0;
			Shuttle_Escape E = null;
			Shuttle_Escape E2 = null;
			Obj_Machinery_Door_Unpowered_Shuttle D = null;
			Shuttle_Escape E3 = null;

			
			if ( !this.online || this.shutdown ) {
				return false;
			}
			timeleft = this.timeleft();

			if ( timeleft > 100000 ) {
				timeleft = 0;
			}

			if ( timeleft < 0 ) {
				timeleft = 0;
			}

			switch ((int)( this.location )) {
				case 0:
					
					if ( this.direction == 2 ) {
						
						if ( timeleft > 0 ) {
							return false;
						} else {
							this.location = 2;

							if ( this.shuttle != null && this.shuttle is Shuttle_Escape ) {
								E = this.shuttle;
								E.open_all_doors();

								if ( !E.move_to_dock( E.dock_centcom, false ) ) {
									GlobalFuncs.message_admins( "WARNING: THE EMERGENCY SHUTTLE FAILED TO FIND CENTCOMM! PANIC PANIC PANIC" );
								}
							} else {
								GlobalFuncs.message_admins( "WARNING: THERE IS NO EMERGENCY SHUTTLE! PANIC" );
							}
							this.move_pod( typeof(Zone_Shuttle_EscapePod1_Transit), typeof(Zone_Shuttle_EscapePod1_Centcom), GlobalVars.NORTH, true );
							this.move_pod( typeof(Zone_Shuttle_EscapePod2_Transit), typeof(Zone_Shuttle_EscapePod2_Centcom), GlobalVars.NORTH, true );
							this.move_pod( typeof(Zone_Shuttle_EscapePod3_Transit), typeof(Zone_Shuttle_EscapePod3_Centcom), GlobalVars.NORTH, true );
							this.move_pod( typeof(Zone_Shuttle_EscapePod5_Transit), typeof(Zone_Shuttle_EscapePod5_Centcom), GlobalVars.NORTH, true );
							this.online = false;
							return true;
						}
					}

					if ( timeleft > Convert.ToDouble( this.timelimit ) ) {
						this.online = false;
						this.direction = 1;
						this.endtime = null;
						return false;
					} else if ( this.fake_recall != 0 && timeleft <= this.fake_recall ) {
						this.recall();
						this.fake_recall = 0;
						return false;
					} else if ( timeleft <= 0 ) {
						this.location = 1;

						if ( this.shuttle != null && this.shuttle is Shuttle_Escape ) {
							E2 = this.shuttle;
							E2.open_all_doors();

							if ( !E2.move_to_dock( E2.dock_station, false ) ) {
								GlobalFuncs.message_admins( "WARNING: THE EMERGENCY SHUTTLE FAILED TO FIND THE STATION! PANIC PANIC PANIC" );
							}
						}
						this.settimeleft( 180 );
						GlobalFuncs.send2mainirc( "The Emergency Shuttle has docked with the station." );
						GlobalFuncs.captain_announce( "The Emergency Shuttle has docked with the station. You have " + Num13.Round( this.timeleft() / 60, 1 ) + " minutes to board the Emergency Shuttle." );
						GlobalFuncs.to_chat( typeof(Game13), new Sound( "sound/AI/shuttledock.ogg" ) );

						if ( GlobalVars.universe.name == "Hell Rising" ) {
							GlobalFuncs.to_chat( typeof(Game13), "___________________________________________________________________" );
							GlobalFuncs.to_chat( typeof(Game13), "<span class='sinister' style='font-size:3'> A vile force of darkness is making its way toward the escape shuttle.</span>" );
						}
						return true;
					}
					break;
				case 1:
					
					if ( timeleft == 2 || timeleft == 1 ) {
						
						foreach (dynamic _a in Lang13.Enumerate( this.shuttle.linked_area, typeof(Obj_Machinery_Door_Unpowered_Shuttle) )) {
							D = _a;
							
							Task13.Schedule( 0, (Task13.Closure)(() => {
								D.close();
								D.locked = true;
								return;
							}));
						}
					}

					if ( timeleft > 0 ) {
						return false;
					} else {
						this.departed = true;
						this.location = 0;
						this.direction = 2;
						this.settimeleft( 120 );
						GlobalFuncs.CallHook( "EmergencyShuttleDeparture", new ByTable() );

						if ( this.shuttle != null && this.shuttle is Shuttle_Escape ) {
							E3 = this.shuttle;
							E3.close_all_doors();

							if ( !E3.move_to_dock( E3.transit_port, false ) ) {
								GlobalFuncs.message_admins( "WARNING: THE EMERGENCY SHUTTLE FAILED TO FIND TRANSIT! PANIC PANIC PANIC" );
							}
						} else {
							GlobalFuncs.message_admins( "WARNING: THERE IS NO EMERGENCY SHUTTLE! PANIC" );
						}
						this.move_pod( typeof(Zone_Shuttle_EscapePod1_Station), typeof(Zone_Shuttle_EscapePod1_Transit), GlobalVars.NORTH, false );
						this.move_pod( typeof(Zone_Shuttle_EscapePod2_Station), typeof(Zone_Shuttle_EscapePod2_Transit), GlobalVars.NORTH, false );
						this.move_pod( typeof(Zone_Shuttle_EscapePod3_Station), typeof(Zone_Shuttle_EscapePod3_Transit), GlobalVars.NORTH, false );
						this.move_pod( typeof(Zone_Shuttle_EscapePod5_Station), typeof(Zone_Shuttle_EscapePod5_Transit), GlobalVars.EAST, false );
						GlobalFuncs.captain_announce( "The Emergency Shuttle has left the station. Estimate " + Num13.Round( this.timeleft() / 60, 1 ) + " minutes until the shuttle docks at Central Command." );
						return true;
					}
					break;
				default:
					return true;
					break;
			}
			return false;
		}

		// Function from file: shuttle_controller.dm
		public override void force_shutdown(  ) {
			Shuttle_Escape E = null;

			base.force_shutdown();

			if ( this.direction == 2 ) {
				this.location = 1;

				if ( this.shuttle != null && this.shuttle is Shuttle_Escape ) {
					E = this.shuttle;
					E.open_all_doors();

					if ( !E.move_to_dock( E.dock_station, false ) ) {
						GlobalFuncs.message_admins( "WARNING: THE EMERGENCY SHUTTLE FAILED TO FIND THE STATION! PANIC PANIC PANIC" );
					}
				} else {
					GlobalFuncs.message_admins( "WARNING: THERE IS NO EMERGENCY SHUTTLE! PANIC" );
				}
				this.move_pod( typeof(Zone_Shuttle_EscapePod1_Transit), typeof(Zone_Shuttle_EscapePod1_Station), GlobalVars.NORTH, true );
				this.move_pod( typeof(Zone_Shuttle_EscapePod2_Transit), typeof(Zone_Shuttle_EscapePod2_Station), GlobalVars.NORTH, true );
				this.move_pod( typeof(Zone_Shuttle_EscapePod3_Transit), typeof(Zone_Shuttle_EscapePod3_Station), GlobalVars.NORTH, true );
				this.move_pod( typeof(Zone_Shuttle_EscapePod5_Transit), typeof(Zone_Shuttle_EscapePod5_Station), GlobalVars.NORTH, true );
				this.online = false;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class InterceptText : Game_Data {

		public string text = null;
		public ByTable org_names_1 = new ByTable(new object [] { "Blighted", "Defiled", "Unholy", "Murderous", "Ugly", "French", "Blue", "Farmer" });
		public ByTable org_names_2 = new ByTable(new object [] { "Reapers", "Swarm", "Rogues", "Menace", "Jeff Worshippers", "Drunks", "Strikers", "Creed" });
		public ByTable anomalies = new ByTable(new object [] { "Huge electrical storm", "Photon emitter", "Meson generator", "Blue swirly thing" });
		public ByTable SWF_names = new ByTable(new object [] { "Grand Wizard", "His Most Unholy Master", "The Most Angry", "Bighands", "Tall Hat", "Deadly Sandals" });
		public ByTable changeling_names = new ByTable(new object [] { "Odo", "The Thing", "Booga", "The Goatee of Wrath", "Tam Lin", "Species 3157", "Small Prick" });

		// Function from file: intercept_report.dm
		public void build_changeling( dynamic correct_person = null ) {
			dynamic cname = null;
			dynamic orgname1 = null;
			dynamic orgname2 = null;

			cname = Rand13.PickFromTable( this.changeling_names );
			orgname1 = Rand13.PickFromTable( this.org_names_1 );
			orgname2 = Rand13.PickFromTable( this.org_names_2 );
			this.text += "<BR><BR>We have received a report that a dangerous alien lifeform known only as \"" + cname + "\" may have infiltrated your crew.  ";
			this.text += "These lifeforms are assosciated with the " + orgname1 + " " + orgname2 + " and may be attempting to acquire sensitive materials on their behalf.  \n		Please take care not to alarm the crew, as " + cname + " may take advantage of a panic situation. Remember, they can be anybody, suspect everybody!";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_malf( dynamic correct_person = null ) {
			dynamic a_name = null;

			a_name = Rand13.PickFromTable( this.anomalies );
			this.text += "<BR><BR>A " + a_name + " was recently picked up by a nearby stations sensors in your sector. If it came into contact with your ship or \n		electrical equipment, it may have had hazardarous and unpredictable effect. Closely observe any non carbon based life forms \n		for signs of unusual behaviour, but keep this information discreet at all times due to this possibly dangerous scenario.";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_nuke( dynamic correct_person = null ) {
			this.text += "<BR><BR>Cent. Com recently recieved a report of a plot to destroy one of our stations in your area. We believe the Nuclear Authentication Disc \n		that is standard issue aboard your vessel may be a target. We recommend removal of this object, and it's storage in a safe \n		environment. As this may cause panic among the crew, all efforts should be made to keep this information a secret from all but \n		the most trusted crew-members.";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_wizard( dynamic correct_person = null ) {
			dynamic SWF_desc = null;

			SWF_desc = Rand13.PickFromTable( this.SWF_names );
			this.text += "<BR><BR>The evil Space Wizards Federation have recently broke their most feared wizard, known only as \"" + SWF_desc + "\" out of space jail. \n		He is on the run, last spotted in a system near your present location. If anybody suspicious is located aboard, please \n		approach with EXTREME caution. Cent. Com also recommends that it would be wise to not inform the crew of this, due to their fearful nature.\n		Known attributes include: Brown sandals, a large blue hat, a voluptous white beard, and an inclination to cast spells.";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_rev( dynamic correct_person = null ) {
			dynamic name_1 = null;
			dynamic name_2 = null;
			int prob_right_dude = 0;
			dynamic H = null;
			dynamic traitor_job = null;

			name_1 = Rand13.PickFromTable( this.org_names_1 );
			name_2 = Rand13.PickFromTable( this.org_names_2 );
			prob_right_dude = Rand13.Int( 1, 100 );
			H = this.get_suspect();

			if ( !Lang13.Bool( H ) ) {
				return;
			}
			traitor_job = H.mind.assigned_role;
			this.text += "<BR><BR>It has been brought to our attention that the " + name_1 + " " + name_2 + " are attempting to stir unrest on one of our stations in your sector.\n		Watch out for suspicious activity among the crew and make sure that all heads of staff report in periodically.\n		Based on our intelligence, we are " + prob_right_dude + "% sure that if true, someone doing the job of " + traitor_job + " on your station may have been brainwashed \n		at a recent conference, and their department should be closely monitored for signs of mutiny. \n		<BR>However, if this information is acted on without substantial evidence, those responsible will face severe repercussions.";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_cult( dynamic correct_person = null ) {
			dynamic name_1 = null;
			dynamic name_2 = null;
			int prob_right_dude = 0;
			dynamic H = null;
			dynamic traitor_job = null;

			name_1 = Rand13.PickFromTable( this.org_names_1 );
			name_2 = Rand13.PickFromTable( this.org_names_2 );
			prob_right_dude = Rand13.Int( 1, 100 );
			H = this.get_suspect();

			if ( !Lang13.Bool( H ) ) {
				return;
			}
			traitor_job = H.mind.assigned_role;
			this.text += "<BR><BR>It has been brought to our attention that the " + name_1 + " " + name_2 + " have stumbled upon some dark secrets. They apparently want to spread the dangerous knowledge onto as many stations as they can.\n		Watch out for the following: praying to an unfamilar god, preaching the word of [REDACTED], sacrifices, magical dark power, living constructs of evil and a portal to the dimension of the underworld.\n		Based on our intelligence, we are " + prob_right_dude + "% sure that if true, someone doing the job of " + traitor_job + " on your station may have been converted \n		and instilled with the idea of the flimsiness of the real world, seeking to destroy it. \n		<BR>However, if this information is acted on without substantial evidence, those responsible will face severe repercussions.";
			return;
		}

		// Function from file: intercept_report.dm
		public void build_traitor( dynamic correct_person = null ) {
			dynamic name_1 = null;
			dynamic name_2 = null;
			dynamic H = null;
			string fingerprints = null;
			dynamic traitor_name = null;
			int prob_right_dude = 0;

			name_1 = Rand13.PickFromTable( this.org_names_1 );
			name_2 = Rand13.PickFromTable( this.org_names_2 );
			H = this.get_suspect();

			if ( !Lang13.Bool( H ) ) {
				return;
			}
			fingerprints = String13.NumberToString( /*[I CANNOT CONVERT SOME RANDOM SHIT TO A DOUBLE: string]*/ 0 );
			traitor_name = H.real_name;
			prob_right_dude = Rand13.Int( 1, 100 );
			this.text += "<BR><BR>The <B>" + name_1 + " " + name_2 + "</B> implied an undercover operative was acting on their behalf on the station currently.\n		It would be in your best interests to suspect everybody, as these undercover operatives could have implants which trigger them to have their memories removed until they are needed. He, or she, could even be a high ranking officer.\n		After some investigation, we ";

			if ( Rand13.PercentChance( 50 ) ) {
				this.text += "are " + prob_right_dude + "% sure that " + traitor_name + " may have been involved, and should be closely observed.\n			<BR>Note: This group are known to be untrustworthy, so do not act on this information without proper discourse.";
			} else {
				this.text += "discovered the following set of fingerprints (" + fingerprints + ") on sensitive materials, and their owner should be closely observed.\n			However, these could also belong to a current Cent. Com employee, so do not act on this without reason.";
			}
			return;
		}

		// Function from file: intercept_report.dm
		public dynamic get_suspect(  ) {
			ByTable dudes = null;
			Mob_Living_Carbon_Human man = null;
			int? i = null;

			dudes = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Human) )) {
				man = _a;
				

				if ( man.client != null && man.client.prefs.nanotrasen_relation == "Opposed" ) {
					dudes.Add( man );
				}
			}
			i = null;
			i = 0;

			while (( i ??0) < Num13.MaxInt( ((int)( GlobalVars.player_list.len / 10 )), 2 )) {
				dudes.Add( Rand13.PickFromTable( GlobalVars.player_list ) );
				i++;
			}
			return Rand13.PickFromTable( dudes );
		}

		// Function from file: intercept_report.dm
		public string build( dynamic mode_type = null, dynamic correct_person = null ) {
			
			dynamic _a = mode_type; // Was a switch-case, sorry for the mess.
			if ( _a=="revolution" ) {
				this.text = "";
				this.build_rev( correct_person );
				return this.text;
			} else if ( _a=="cult" ) {
				this.text = "";
				this.build_cult( correct_person );
				return this.text;
			} else if ( _a=="wizard" ) {
				this.text = "";
				this.build_wizard( correct_person );
				return this.text;
			} else if ( _a=="nuke" ) {
				this.text = "";
				this.build_nuke( correct_person );
				return this.text;
			} else if ( _a=="traitor" ) {
				this.text = "";
				this.build_traitor( correct_person );
				return this.text;
			} else if ( _a=="malf" ) {
				this.text = "";
				this.build_malf( correct_person );
				return this.text;
			} else if ( _a=="changeling" || _a=="traitorchan" ) {
				this.text = "";
				this.build_changeling( correct_person );
				return this.text;
			} else {
				return null;
			}
			return null;
		}

	}

}
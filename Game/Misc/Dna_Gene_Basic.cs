// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Dna_Gene_Basic : Dna_Gene {

		public int mutation = 0;
		public int activation_prob = 45;
		public ByTable activation_messages = new ByTable();
		public ByTable deactivation_messages = new ByTable();
		public ByTable drug_activation_messages = new ByTable(new object [] { 
											"You feel different.", 
											"You feel wonky.", 
											"You feel new!", 
											"You feel amazing.", 
											"You feel wobbly.", 
											"You feel goofy.", 
											"You feel strong!", 
											"You feel weak.", 
											"You think you can speak vox pidgin now.", 
											"You feel like killing a space bear!", 
											"You are no longer afraid of carps."
										 });
		public ByTable drug_deactivation_messages = new ByTable(new object [] { 
											"You feel like you've lost a friend.", 
											"You get a feeling of loss.", 
											"Your mind feels less burdened.", 
											"You feel old.", 
											"You're not sure what's going on.", 
											"You feel concerned.", 
											"You feel like you forgot something important.", 
											"You feel trippy.", 
											"Your brain hurts."
										 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "BASIC GENE";
			this.genetype = true;
		}

		// Function from file: gene.dm
		public override bool deactivate( dynamic M = null, dynamic connected = null, int? flags = null ) {
			dynamic msg1 = null;
			dynamic msg2 = null;

			
			if ( base.deactivate( (object)(M), (object)(connected), flags ) ) {
				M.mutations.Remove( this.mutation );

				if ( this.deactivation_messages.len != 0 ) {
					msg1 = Rand13.PickFromTable( this.deactivation_messages );
				}

				if ( this.drug_deactivation_messages.len != 0 ) {
					msg2 = Rand13.PickFromTable( this.drug_deactivation_messages );
				}

				if ( Lang13.Bool( msg2 ) ) {
					msg2 = "<span class='notice'>" + msg2 + "</span>";
				}
				((Mob)M).simple_message( "<span class='notice'>" + msg1 + "</span>", msg2 );
				return true;
			}
			return false;
		}

		// Function from file: gene.dm
		public override bool can_deactivate( Mob_Living M = null, int? flags = null ) {
			
			if ( ( ( flags ??0) & 4 ) != 0 ) {
				return false;
			}
			return true;
		}

		// Function from file: gene.dm
		public override bool activate( dynamic M = null, dynamic connected = null, bool? flags = null ) {
			dynamic msg1 = null;
			dynamic msg2 = null;

			M.mutations.Add( this.mutation );

			if ( this.activation_messages.len != 0 ) {
				msg1 = Rand13.PickFromTable( this.activation_messages );
			}

			if ( this.drug_activation_messages.len != 0 ) {
				msg2 = Rand13.PickFromTable( this.drug_activation_messages );
			}

			if ( Lang13.Bool( msg2 ) ) {
				msg2 = "<span class='notice'>" + msg2 + "</span>";
			}
			((Mob)M).simple_message( "<span class='notice'>" + msg1 + "</span>", msg2 );
			return false;
		}

		// Function from file: gene.dm
		public override bool can_activate( dynamic M = null, bool? flags = null ) {
			
			if ( ( ( flags == true ?1:0) & 1 ) != 0 ) {
				return true;
			}
			return GlobalFuncs.probinj( this.activation_prob, ( flags == true ?1:0) & 1 );
		}

	}

}
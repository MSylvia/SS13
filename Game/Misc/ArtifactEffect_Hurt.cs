// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Hurt : ArtifactEffect {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "hurt";
			this.effect_type = 5;
		}

		public ArtifactEffect_Hurt ( dynamic location = null ) : base( (object)(location) ) {
			
		}

		// Function from file: unknown_effect_hurt.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Carbon C = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon) )) {
					C = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( C );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						GlobalFuncs.to_chat( C, "<span class='warning'>A wave of painful energy strikes you!</span>" );
						C.adjustBruteLoss( weakness * 3 );
						C.adjustFireLoss( weakness * 3 );
						C.adjustToxLoss( weakness * 3 );
						C.adjustOxyLoss( weakness * 3 );
						C.adjustBrainLoss( weakness * 3 );
						C.updatehealth();
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_hurt.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Carbon C = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon) )) {
					C = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( C );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						
						if ( Rand13.PercentChance( 10 ) ) {
							GlobalFuncs.to_chat( C, "<span class='warning'>You feel a painful force radiating from something nearby.</span>" );
						}
						C.adjustBruteLoss( weakness );
						C.adjustFireLoss( weakness );
						C.adjustToxLoss( weakness );
						C.adjustOxyLoss( weakness );
						C.adjustBrainLoss( weakness );
						C.updatehealth();
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_hurt.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			double weakness = 0;
			dynamic C = null;

			
			if ( Lang13.Bool( user ) ) {
				weakness = GlobalFuncs.GetAnomalySusceptibility( user );

				if ( user is Mob_Living_Carbon && Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
					C = user;
					GlobalFuncs.to_chat( C, "<span class='warning'>A painful discharge of energy strikes you!</span>" );
					((Mob_Living)C).adjustOxyLoss( Rand13.Int( 5, 25 ) * weakness );
					((Mob_Living)C).adjustToxLoss( Rand13.Int( 5, 25 ) * weakness );
					((Mob_Living)C).adjustBruteLoss( Rand13.Int( 5, 25 ) * weakness );
					((Mob_Living)C).adjustFireLoss( Rand13.Int( 5, 25 ) * weakness );
					((Mob_Living)C).adjustBrainLoss( Rand13.Int( 5, 25 ) * weakness );
					C.radiation += weakness * 25;
					C.nutrition -= Num13.MinInt( ((int)( weakness * 50 )), ((int)( C.nutrition )) );
					((Mob)C).Dizzy( weakness * 6 );
					C.weakened += weakness * 6;
				}
			}
			return false;
		}

	}

}
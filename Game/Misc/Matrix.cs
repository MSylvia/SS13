// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Matrix : Base_Matrix {

		public bool a = true;
		public bool b = false;
		public bool c = false;
		public bool d = false;
		public bool e = true;
		public bool f = false;

		public Matrix ( dynamic m = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { m } ).Extend(_);

			
			if ( _args.len == 6 ) {
				this.a = Lang13.Bool( _args[1] );
				this.b = Lang13.Bool( _args[2] );
				this.c = Lang13.Bool( _args[3] );
				this.d = Lang13.Bool( _args[4] );
				this.e = Lang13.Bool( _args[5] );
				this.f = Lang13.Bool( _args[6] );
			} else if ( Lang13.Bool( _args[1] ) ) {
				Num13.Matrix( this, _args[1], 128 );
			}
			return;
		}

		public Matrix Interpolate( dynamic m2 = null, dynamic t = null ) {
			return Num13.Matrix( this, m2, t, 8 );
		}

		public Matrix Translate( bool x = false, int? y = null ) {
			y = y ?? x ?1:0;

			return Num13.Matrix( this, x, y, 135 );
		}

		public Matrix Scale( double x = 0, double? y = null ) {
			y = y ?? x;

			return Num13.Matrix( this, x, y, 134 );
		}

		public Matrix Turn( int a = 0 ) {
			return Num13.Matrix( this, a, 133 );
		}

		public Matrix Invert(  ) {
			return Num13.Matrix( this, 132 );
		}

		public Matrix Subtract( dynamic m = null ) {
			return Num13.Matrix( this, m, 131 );
		}

		public Matrix Add( dynamic m = null ) {
			return Num13.Matrix( this, m, 130 );
		}

		public Matrix Multiply( dynamic m = null ) {
			return Num13.Matrix( this, m, 129 );
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Nanomanager : Game_Data {

		public ByTable open_uis = new ByTable( 0 );
		public ByTable processing_uis = new ByTable();
		public ByTable asset_files = new ByTable();

		// Function from file: nanomanager.dm
		public Nanomanager (  ) {
			ByTable nano_asset_dirs = null;
			ByTable filenames = null;
			dynamic path = null;
			dynamic filename = null;

			nano_asset_dirs = new ByTable(new object [] { "nano/css/", "nano/images/", "nano/js/", "nano/templates/" });
			filenames = null;

			foreach (dynamic _b in Lang13.Enumerate( nano_asset_dirs )) {
				path = _b;
				
				filenames = File13.List( path );

				foreach (dynamic _a in Lang13.Enumerate( filenames )) {
					filename = _a;
					

					if ( String13.SubStr( filename, Lang13.Length( filename ), 0 ) != "/" ) {
						
						if ( File13.Exists( path + filename ) ) {
							this.asset_files.Add( File13.Cache( path + filename ) );
						}
					}
				}
			}
			return;
		}

		// Function from file: nanomanager.dm
		public void send_resources( Client client = null ) {
			dynamic file = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.asset_files )) {
				file = _a;
				
				Game13.log.WriteMsg( file );
				Interface13.CacheBrowseResource( client, file, null );
			}
			return;
		}

		// Function from file: nanomanager.dm
		public bool user_transferred( dynamic oldMob = null, dynamic newMob = null ) {
			Nanoui ui = null;

			
			if ( !( oldMob is Mob ) ) {
				return false;
			}

			if ( oldMob.open_uis == null || !( oldMob.open_uis is ByTable ) || this.open_uis.len == 0 ) {
				return false;
			}

			if ( newMob.open_uis == null || !( newMob.open_uis is ByTable ) ) {
				newMob.open_uis = new ByTable();
			}

			foreach (dynamic _a in Lang13.Enumerate( oldMob.open_uis, typeof(Nanoui) )) {
				ui = _a;
				
				ui.user = newMob;
				newMob.open_uis.Add( ui );
			}
			oldMob.open_uis.len = 0;
			return true;
		}

		// Function from file: nanomanager.dm
		public int user_logout( Mob user = null ) {
			return this.close_user_uis( user );
		}

		// Function from file: nanomanager.dm
		public bool ui_closed( Nanoui ui = null ) {
			string src_object_key = null;
			dynamic uis = null;

			src_object_key = new Txt().Ref( ui.src_object ).ToString();

			if ( this.open_uis[src_object_key] == null || !( this.open_uis[src_object_key] is ByTable ) ) {
				return false;
			} else if ( this.open_uis[src_object_key][ui.ui_key] == null || !( this.open_uis[src_object_key][ui.ui_key] is ByTable ) ) {
				return false;
			}
			this.processing_uis.Remove( ui );

			if ( Lang13.Bool( ui.user ) ) {
				ui.user.open_uis.Remove( ui );
			}
			uis = this.open_uis[src_object_key][ui.ui_key];
			uis.Remove( ui );
			return true;
		}

		// Function from file: nanomanager.dm
		public void ui_opened( Nanoui ui = null ) {
			string src_object_key = null;
			dynamic uis = null;

			src_object_key = new Txt().Ref( ui.src_object ).ToString();

			if ( this.open_uis[src_object_key] == null || !( this.open_uis[src_object_key] is ByTable ) ) {
				this.open_uis[src_object_key] = new ByTable().Set( ui.ui_key, new ByTable() );
			} else if ( this.open_uis[src_object_key][ui.ui_key] == null || !( this.open_uis[src_object_key][ui.ui_key] is ByTable ) ) {
				this.open_uis[src_object_key][ui.ui_key] = new ByTable();
			}
			ui.user.open_uis.Add( ui );
			uis = this.open_uis[src_object_key][ui.ui_key];
			uis.Add( ui );
			this.processing_uis.Add( ui );
			return;
		}

		// Function from file: nanomanager.dm
		public int close_user_uis( Mob user = null, Obj_Machinery_Power_Apc src_object = null, string ui_key = null ) {
			int close_count = 0;
			Nanoui ui = null;

			
			if ( user.open_uis == null || !( user.open_uis is ByTable ) || this.open_uis.len == 0 ) {
				return 0;
			}
			close_count = 0;

			foreach (dynamic _a in Lang13.Enumerate( user.open_uis, typeof(Nanoui) )) {
				ui = _a;
				

				if ( ( src_object == null || !( src_object == null ) && ui.src_object == src_object ) && ( ui_key == null || !( ui_key == null ) && ui.ui_key == ui_key ) ) {
					ui.close();
					close_count++;
				}
			}
			return close_count;
		}

		// Function from file: nanomanager.dm
		public int update_user_uis( dynamic user = null, Obj_Machinery_Power_Apc src_object = null, string ui_key = null ) {
			int update_count = 0;
			Nanoui ui = null;

			
			if ( user.open_uis == null || !( user.open_uis is ByTable ) || this.open_uis.len == 0 ) {
				return 0;
			}
			update_count = 0;

			foreach (dynamic _a in Lang13.Enumerate( user.open_uis, typeof(Nanoui) )) {
				ui = _a;
				

				if ( ( src_object == null || !( src_object == null ) && ui.src_object == src_object ) && ( ui_key == null || !( ui_key == null ) && ui.ui_key == ui_key ) ) {
					ui.process( true );
					update_count++;
				}
			}
			return update_count;
		}

		// Function from file: nanomanager.dm
		public int update_uis( Obj src_object = null ) {
			string src_object_key = null;
			int update_count = 0;
			dynamic ui_key = null;
			Nanoui ui = null;

			src_object_key = new Txt().Ref( src_object ).ToString();

			if ( this.open_uis[src_object_key] == null || !( this.open_uis[src_object_key] is ByTable ) ) {
				return 0;
			}
			update_count = 0;

			foreach (dynamic _b in Lang13.Enumerate( this.open_uis[src_object_key] )) {
				ui_key = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( this.open_uis[src_object_key][ui_key], typeof(Nanoui) )) {
					ui = _a;
					

					if ( ui != null && ui.src_object != null && Lang13.Bool( ui.user ) ) {
						ui.process( true );
						update_count++;
					}
				}
			}
			return update_count;
		}

		// Function from file: nanomanager.dm
		public Nanoui get_open_ui( dynamic user = null, Obj src_object = null, string ui_key = null ) {
			string src_object_key = null;
			Nanoui ui = null;

			src_object_key = new Txt().Ref( src_object ).ToString();

			if ( this.open_uis[src_object_key] == null || !( this.open_uis[src_object_key] is ByTable ) ) {
				return null;
			} else if ( this.open_uis[src_object_key][ui_key] == null || !( this.open_uis[src_object_key][ui_key] is ByTable ) ) {
				return null;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.open_uis[src_object_key][ui_key], typeof(Nanoui) )) {
				ui = _a;
				

				if ( ui.user == user ) {
					return ui;
				}
			}
			return null;
		}

		// Function from file: nanomanager.dm
		public Nanoui try_update_ui( dynamic user = null, Obj src_object = null, string ui_key = null, Nanoui ui = null, ByTable data = null, bool? force_open = null ) {
			force_open = force_open ?? false;
			ui = ui ?? this.get_open_ui( user, src_object, ui_key );

			
			if ( !( ui == null ) ) {
				
				if ( !( force_open == true ) ) {
					ui.push_data( data );
					return ui;
				} else {
					ui.close();
				}
			}
			return null;
		}

		// Function from file: nanomanager.dm
		public void rebuild_asset_dirs(  ) {
			ByTable nano_asset_dirs = null;
			ByTable filenames = null;
			dynamic path = null;
			dynamic filename = null;

			this.asset_files.len = 0;
			nano_asset_dirs = new ByTable(new object [] { "nano/css/", "nano/images/", "nano/js/", "nano/templates/" });
			filenames = null;

			foreach (dynamic _b in Lang13.Enumerate( nano_asset_dirs )) {
				path = _b;
				
				filenames = File13.List( path );

				foreach (dynamic _a in Lang13.Enumerate( filenames )) {
					filename = _a;
					

					if ( String13.SubStr( filename, Lang13.Length( filename ), 0 ) != "/" ) {
						
						if ( File13.Exists( path + filename ) ) {
							this.asset_files.Add( File13.Cache( path + filename ) );
						}
					}
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Sleepy : ArtifactEffect {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "sleepy";
		}

		// Function from file: unknown_effect_sleepy.dm
		public ArtifactEffect_Sleepy ( dynamic location = null ) : base( (object)(location) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.effect_type = Convert.ToInt32( Rand13.Pick(new object [] { 5, 2 }) );
			return;
		}

		// Function from file: unknown_effect_sleepy.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;
			double weakness = 0;
			Mob_Living_Silicon_Robot R = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( H );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						GlobalFuncs.to_chat( H, Rand13.Pick(new object [] { "<span class='notice'>You feel like taking a nap.</span>", "<span class='notice'>You feel a yawn coming on.</span>", "<span class='notice'>You feel a little tired.</span>" }) );
						H.drowsyness = Num13.MinInt( Convert.ToInt32( H.drowsyness + Rand13.Int( 5, 15 ) * weakness ), ((int)( weakness * 50 )) );
						H.eye_blurry = Num13.MinInt( Convert.ToInt32( H.eye_blurry + Rand13.Int( 5, 15 ) * weakness ), ((int)( weakness * 50 )) );
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Silicon_Robot) )) {
					R = _b;
					
					GlobalFuncs.to_chat( R, "<span class='warning'>SYSTEM ALERT: CPU cycles slowing down.</span>" );
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_sleepy.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;
			double weakness = 0;
			Mob_Living_Silicon_Robot R = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( H );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						
						if ( Rand13.PercentChance( 10 ) ) {
							GlobalFuncs.to_chat( H, Rand13.Pick(new object [] { "<span class='notice'>You feel like taking a nap.</span>", "<span class='notice'>You feel a yawn coming on.</span>", "<span class='notice'>You feel a little tired.</span>" }) );
						}
						H.drowsyness = Num13.MinInt( Convert.ToInt32( H.drowsyness + weakness ), ((int)( weakness * 25 )) );
						H.eye_blurry = Num13.MinInt( Convert.ToInt32( H.eye_blurry + weakness ), ((int)( weakness * 25 )) );
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Silicon_Robot) )) {
					R = _b;
					
					GlobalFuncs.to_chat( R, "<span class='warning'>SYSTEM ALERT: CPU cycles slowing down.</span>" );
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_sleepy.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			double weakness = 0;
			dynamic H = null;

			
			if ( Lang13.Bool( user ) ) {
				weakness = GlobalFuncs.GetAnomalySusceptibility( user );

				if ( user is Mob_Living_Carbon_Human && Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
					H = user;
					GlobalFuncs.to_chat( H, Rand13.Pick(new object [] { "<span class='notice'>You feel like taking a nap.</span>", "<span class='notice'>You feel a yawn coming on.</span>", "<span class='notice'>You feel a little tired.</span>" }) );
					H.drowsyness = Num13.MinInt( Convert.ToInt32( H.drowsyness + Rand13.Int( 5, 25 ) * weakness ), ((int)( weakness * 50 )) );
					H.eye_blurry = Num13.MinInt( Convert.ToInt32( H.eye_blurry + Rand13.Int( 1, 3 ) * weakness ), ((int)( weakness * 50 )) );
					return true;
				} else if ( user is Mob_Living_Silicon_Robot ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>SYSTEM ALERT: CPU cycles slowing down.</span>" );
					return true;
				}
			}
			return false;
		}

	}

}
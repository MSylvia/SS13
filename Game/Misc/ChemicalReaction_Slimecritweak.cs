// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ChemicalReaction_Slimecritweak : ChemicalReaction {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Slime Animation";
			this.id = "m_tele4";
			this.required_reagents = new ByTable().Set( "water", 5 );
			this.result_amount = 1;
			this.required_container = typeof(Obj_Item_SlimeExtract_Gold);
			this.required_other = true;
		}

		// Function from file: Chemistry-Recipes.dm
		public override void on_reaction( Reagents holder = null, int? created_volume = null ) {
			Ent_Static location = null;
			ByTable disguise_candidates = null;
			Obj_Item I = null;
			dynamic disguise = null;
			Mob_Living_SimpleAnimal_Hostile_Mimic_Crate new_mimic = null;
			Ent_Dynamic AM = null;
			Ent_Static M = null;
			Mob_Living_SimpleAnimal_Hostile_Mimic_Crate mimic = null;

			GlobalFuncs.feedback_add_details( "slime_cores_used", "" + GlobalFuncs.replacetext( this.name, " ", "_" ) );

			if ( !( holder.my_atom.loc is Obj_Item_Weapon_Grenade_ChemGrenade ) ) {
				holder.my_atom.visible_message( "<span class='warning'>The slime extract begins to slowly vibrate!</span>" );
				this.send_admin_alert( holder, "gold slime + water" );
			} else {
				this.send_admin_alert( holder, "gold slime + water in a grenade" );
			}
			Task13.Schedule( 50, (Task13.Closure)(() => {
				location = holder.my_atom.loc;

				if ( location is Tile ) {
					disguise_candidates = new ByTable();

					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInViewExcludeThis( holder.my_atom, 4 ), typeof(Obj_Item) )) {
						I = _a;
						
						disguise_candidates.Add( I );
					}
					disguise = null;

					if ( disguise_candidates.len != 0 ) {
						disguise = Rand13.PickFromTable( disguise_candidates );
					}
					new Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item( location, disguise );
				} else if ( location is Obj_Structure_Closet ) {
					new_mimic = new Mob_Living_SimpleAnimal_Hostile_Mimic_Crate( GlobalFuncs.get_turf( location ), location.type );
					new_mimic.appearance = location.appearance;

					foreach (dynamic _b in Lang13.Enumerate( location.contents, typeof(Ent_Dynamic) )) {
						AM = _b;
						
						AM.forceMove( new_mimic );
					}
					GlobalFuncs.qdel( location );
				} else if ( location is Obj_Item ) {
					new Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item( GlobalFuncs.get_turf( location ), location );
				} else if ( location is Mob ) {
					M = location;
					mimic = new Mob_Living_SimpleAnimal_Hostile_Mimic_Crate( GlobalFuncs.get_turf( location ), location );
					mimic.appearance = M.appearance;
					GlobalFuncs.to_chat( M, "<span class='sinister'>You feel something thoroughly analyzing you from inside...</span>" );
				} else {
					new Mob_Living_SimpleAnimal_Hostile_Mimic_Crate();
				}
				return;
			}));
			return;
		}

	}

}
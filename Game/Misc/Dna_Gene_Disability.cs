// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Dna_Gene_Disability : Dna_Gene {

		public int mutation = 0;
		public int disability = 0;
		public int sdisability = 0;
		public string activation_message = "";
		public string deactivation_message = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "DISABILITY";
		}

		// Function from file: disabilities.dm
		public override bool deactivate( dynamic M = null, dynamic connected = null, int? flags = null ) {
			
			if ( ( ( flags ??0) & 4 ) != 0 ) {
				return false;
			}
			M.mutations.Remove( this.mutation );
			M.active_genes.Remove( this.type );

			if ( this.disability != 0 ) {
				M.disabilities &= ~this.disability;
			}

			if ( this.sdisability != 0 ) {
				M.sdisabilities &= ~this.sdisability;
			}

			if ( Lang13.Bool( this.deactivation_message ) ) {
				GlobalFuncs.to_chat( M, "<span class='warning'>" + this.deactivation_message + "</span>" );
			} else {
				Game13.log.WriteMsg( "## TESTING: " + ( "" + this.name + " has no deactivation message." ) );
			}
			return base.deactivate( (object)(M), (object)(connected), flags );
		}

		// Function from file: disabilities.dm
		public override bool activate( dynamic M = null, dynamic connected = null, bool? flags = null ) {
			
			if ( this.mutation != 0 && !false ) {
				M.mutations.Add( this.mutation );
			}

			if ( this.disability != 0 ) {
				M.disabilities |= this.disability;
			}

			if ( this.sdisability != 0 ) {
				M.sdisabilities |= this.sdisability;
			}

			if ( Lang13.Bool( this.activation_message ) ) {
				GlobalFuncs.to_chat( M, "<span class='warning'>" + this.activation_message + "</span>" );
			} else {
				Game13.log.WriteMsg( "## TESTING: " + ( "" + this.name + " has no activation message." ) );
			}
			return false;
		}

		// Function from file: disabilities.dm
		public override bool can_activate( dynamic M = null, bool? flags = null ) {
			return true;
		}

	}

}
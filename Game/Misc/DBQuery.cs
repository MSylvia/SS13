// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class DBQuery : Game_Data {

		public bool closed = false;
		public string sql = null;
		public dynamic default_cursor = null;
		public ByTable columns = null;
		public ByTable conversions = null;
		public ByTable item = new ByTable( 0 );
		public DBConnection db_connection = null;
		public DB13_QUERY _db_query = null;

		// Function from file: core.dm
		public DBQuery ( string sql_query = null, DBConnection connection_handler = null, dynamic cursor_handler = null ) {
			
			if ( Lang13.Bool( sql_query ) ) {
				this.sql = sql_query;
			}

			if ( connection_handler != null ) {
				this.db_connection = connection_handler;
			}

			if ( Lang13.Bool( cursor_handler ) ) {
				this.default_cursor = cursor_handler;
			}
			this._db_query = DB13.new_query();
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: core.dm
		public string Quote( string str = null ) {
			return this.db_connection.Quote( str );
		}

		// Function from file: core.dm
		public bool Close(  ) {
			
			if ( this.closed ) {
				return false;
			}
			this.closed = true;
			this.item.len = 0;
			this.columns = null;
			this.conversions = null;
			return DB13.close( this._db_query );
		}

		// Function from file: core.dm
		public ByTable GetRowData(  ) {
			ByTable columns = null;
			ByTable results = null;
			dynamic C = null;
			dynamic cur_col = null;

			columns = this.Columns();

			if ( columns.len != 0 ) {
				results = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( columns )) {
					C = _a;
					
					results.Add( C );
					cur_col = columns[C];
					results[C] = this.item[cur_col.position + 1];
				}
			}
			return results;
		}

		// Function from file: core.dm
		public ByTable Columns(  ) {
			
			if ( !( this.columns != null ) ) {
				this.columns = DB13.columns( this._db_query, typeof(DBColumn) );
			}
			return this.columns;
		}

		// Function from file: core.dm
		public string ErrorMsg(  ) {
			return DB13.error_msg( this._db_query );
		}

		// Function from file: core.dm
		public int RowCount(  ) {
			return DB13.row_count( this._db_query );
		}

		// Function from file: core.dm
		public int RowsAffected(  ) {
			return DB13.rows_affected( this._db_query );
		}

		// Function from file: core.dm
		public bool NextRow(  ) {
			return DB13.next_row( this._db_query, this.item, this.conversions );
		}

		// Function from file: core.dm
		public bool Execute( string sql_query = null, dynamic cursor_handler = null ) {
			sql_query = sql_query ?? this.sql;
			cursor_handler = cursor_handler ?? this.default_cursor;

			this.Close();
			return DB13.execute( this._db_query, sql_query, this.db_connection._db_con, cursor_handler, null );
		}

		// Function from file: core.dm
		public void Connect( dynamic connection_handler = null ) {
			this.db_connection = connection_handler;
			return;
		}

		// Function from file: core.dm
		public override void Del(  ) {
			this.Close();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Event_SpiderInfestation : Event {

		public int spawncount = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 450;
		}

		public Event_SpiderInfestation ( Obj_Item_MechaParts_MechaEquipment_Tool_CableLayer tlistener = null, string tprocname = null ) : base( tlistener, tprocname ) {
			
		}

		// Function from file: spider_infestation.dm
		public override bool start(  ) {
			ByTable vents = null;
			Obj_Machinery_Atmospherics_Unary_VentPump temp_vent = null;
			dynamic vent = null;

			vents = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.atmos_machines, typeof(Obj_Machinery_Atmospherics_Unary_VentPump) )) {
				temp_vent = _a;
				

				if ( temp_vent.loc.z == 1 && !temp_vent.welded && temp_vent.network != null ) {
					
					if ( ((dynamic)temp_vent.network).normal_members.len > 50 ) {
						vents.Add( temp_vent );
					}
				}
			}

			while (this.spawncount >= 1 && vents.len != 0) {
				vent = Rand13.PickFromTable( vents );
				new Mob_Living_SimpleAnimal_Hostile_GiantSpider_Spiderling( vent.loc );
				vents.Remove( vent );
				this.spawncount--;
			}
			return false;
		}

		// Function from file: spider_infestation.dm
		public override void announce(  ) {
			GlobalFuncs.command_alert( "Unidentified lifesigns detected coming aboard " + GlobalFuncs.station_name() + ". Secure any exterior access, including ducting and ventilation.", "Lifesign Alert" );
			GlobalFuncs.to_chat( typeof(Game13), new Sound( "sound/AI/aliens.ogg" ) );
			return;
		}

		// Function from file: spider_infestation.dm
		public override void setup(  ) {
			this.announceWhen = Rand13.Int( 300, 600 );
			this.spawncount = Rand13.Int( 8, 12 );
			GlobalVars.sent_spiders_to_station = false;
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RobotComponent : Game_Data {

		public string name = null;
		public int installed = 0;
		public bool powered = false;
		public bool toggled = true;
		public double brute_damage = 0;
		public double electronics_damage = 0;
		public bool energy_consumption = false;
		public double max_damage = 30;
		public Mob_Living_Silicon_Robot owner = null;
		public Type external_type = null;
		public dynamic wrapped = null;

		// Function from file: component.dm
		public RobotComponent ( Mob_Living_Silicon_Robot R = null ) {
			this.owner = R;
			return;
		}

		// Function from file: component.dm
		public void consume_power(  ) {
			
			if ( !this.toggled ) {
				this.powered = false;
				return;
			}

			if ( Convert.ToDouble( this.owner.cell.charge ) >= ( this.energy_consumption ?1:0) ) {
				this.owner.cell.use( this.energy_consumption );
				this.powered = true;
			} else {
				this.powered = false;
			}
			return;
		}

		// Function from file: component.dm
		public bool is_powered(  ) {
			return this.installed == 1 && this.brute_damage + this.electronics_damage < this.max_damage && ( !this.energy_consumption || this.powered );
		}

		// Function from file: component.dm
		public bool heal_damage( dynamic brute = null, dynamic electronics = null ) {
			
			if ( this.installed != 1 ) {
				return false;
			}
			this.brute_damage = Num13.MaxInt( 0, ((int)( this.brute_damage - Convert.ToDouble( brute ) )) );
			this.electronics_damage = Num13.MaxInt( 0, ((int)( this.electronics_damage - Convert.ToDouble( electronics ) )) );
			return false;
		}

		// Function from file: component.dm
		public void take_damage( dynamic brute = null, dynamic electronics = null, dynamic sharp = null ) {
			
			if ( this.installed != 1 ) {
				return;
			}
			this.brute_damage += Convert.ToDouble( brute );
			this.electronics_damage += Convert.ToDouble( electronics );

			if ( this.brute_damage + this.electronics_damage >= this.max_damage ) {
				this.destroy();
			}
			return;
		}

		// Function from file: component.dm
		public virtual void destroy(  ) {
			
			if ( Lang13.Bool( this.wrapped ) ) {
				GlobalFuncs.qdel( this.wrapped );
				this.wrapped = null;
			}
			this.wrapped = new Obj_Item_BrokenDevice();
			this.installed = -1;
			this.uninstall();
			return;
		}

		// Function from file: component.dm
		public void uninstall(  ) {
			return;
		}

		// Function from file: component.dm
		public void install(  ) {
			return;
		}

	}

}
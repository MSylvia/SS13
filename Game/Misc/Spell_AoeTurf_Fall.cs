// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Spell_AoeTurf_Fall : Spell_AoeTurf {

		public Image aoe_underlay = null;
		public ByTable oureffects = new ByTable();
		public ByTable affected = new ByTable();
		public int sleepfor = 0;
		public int the_world_chance = 30;
		public int sleeptime = 30;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Time Stop";
			this.desc = "This spell stops time for ";
			this.selection_type = "range";
			this.school = "transmutation";
			this.charge_max = 900;
			this.invocation = "OMNIA RUINAM";
			this.invocation_type = "shout";
			this.range = 4;
			this.cooldown_min = 600;
			this.cooldown_reduc = 100;
			this.level_max = new ByTable().Set( "total", 3 ).Set( "speed", 3 ).Set( "power", 3 );
			this.hud_state = "wiz_timestop";
		}

		// Function from file: fall.dm
		public Spell_AoeTurf_Fall (  ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.buildimage();
			return;
		}

		// Function from file: fall.dm
		public override void after_cast( ByTable targets = null ) {
			Obj_Effect_Stop_Sleeping S = null;
			Ent_Static everything = null;

			
			while (Game13.time < this.sleepfor) {
				Task13.Sleep( 1 );
			}

			foreach (dynamic _a in Lang13.Enumerate( this.oureffects, typeof(Obj_Effect_Stop_Sleeping) )) {
				S = _a;
				
				GlobalFuncs.returnToPool( S );
				this.oureffects.Remove( S );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.affected, typeof(Ent_Static) )) {
				everything = _b;
				

				if ( !( everything is Ent_Static ) ) {
					continue;
				}
				everything.appearance = everything.tempoverlay;
				everything.tempoverlay = null;
				everything.ignoreinvert = Lang13.Initial( everything, "ignoreinvert" );
				everything.timestopped = false;
			}
			this.affected.len = 0;
			return;
		}

		// Function from file: fall.dm
		public override bool cast( ByTable targets = null, Mob user = null ) {
			dynamic ourturf = null;
			ByTable potentials = null;
			dynamic C = null;
			dynamic C2 = null;
			string oursound = null;
			dynamic T = null;
			Ent_Dynamic everything = null;
			Ent_Dynamic L = null;

			ourturf = GlobalFuncs.get_turf( Task13.User );
			potentials = GlobalFuncs.circlerangeturfs( Task13.User, this.range );

			if ( potentials is ByTable && potentials.len != 0 ) {
				targets = potentials;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.clients )) {
					C = _a;
					

					if ( !Lang13.Bool( ((dynamic)typeof(Client)).IsInstanceOfType( C ) ) ) {
						continue;
					}

					if ( Lang13.Bool( C.mob ) ) {
						((Mob)C.mob).see_fall( ourturf, this.range );
					}
				}
				Task13.Schedule( 10, (Task13.Closure)(() => {
					
					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.clients )) {
						C2 = _b;
						

						if ( !Lang13.Bool( ((dynamic)typeof(Client)).IsInstanceOfType( C2 ) ) ) {
							continue;
						}

						if ( Lang13.Bool( C2.mob ) ) {
							((Mob)C2.mob).see_fall();
						}
					}
					return;
				}));
				return;
			}));
			oursound = ( this.invocation == "ZA WARUDO" ? "sound/effects/theworld.ogg" : "sound/effects/fall.ogg" );
			GlobalFuncs.playsound( Task13.User, oursound, 100, 0, 0, 0, false );
			this.sleepfor = Game13.time + this.sleeptime;

			foreach (dynamic _d in Lang13.Enumerate( targets )) {
				T = _d;
				
				this.oureffects.Add( GlobalFuncs.getFromPool( typeof(Obj_Effect_Stop_Sleeping), T, this.sleepfor, Task13.User.mind, this, this.invocation == "ZA WARUDO" ) );

				foreach (dynamic _c in Lang13.Enumerate( T, typeof(Ent_Dynamic) )) {
					everything = _c;
					

					if ( everything is Mob_Living ) {
						L = everything;

						if ( L == this.holder ) {
							continue;
						}
						this.affected.Add( L );
						GlobalFuncs.invertcolor( L );
						Task13.Schedule( 0, (Task13.Closure)(() => {
							this.recursive_timestop( L );
							return;
						}));
						((dynamic)L).playsound_local( L, ( this.invocation == "ZA WARUDO" ? "sound/effects/theworld2.ogg" : "sound/effects/fall2.ogg" ), 100, 0, 0, 0, 0 );
					} else {
						Task13.Schedule( 0, (Task13.Closure)(() => {
							this.recursive_timestop( everything );
							return;
						}));

						if ( Lang13.Bool( everything.ignoreinvert ) ) {
							continue;
						}
						GlobalFuncs.invertcolor( everything );
						this.affected.Add( everything );
					}
					everything.timestopped = true;
				}
				GlobalFuncs.invertcolor( T );
				T.timestopped = true;
				this.affected.Add( T );
			}
			return false;
		}

		// Function from file: fall.dm
		public override void perform( Mob user = null, bool? skipcharge = null, Tile_Simulated T = null ) {
			user = user ?? Task13.User;
			skipcharge = skipcharge ?? false;

			ByTable targets = null;

			
			if ( !( this.holder != null ) ) {
				this.holder = user;
			}

			if ( !this.cast_check( skipcharge, user ) ) {
				return;
			}

			if ( this.cast_delay != 0 && !this.spell_do_after( user, this.cast_delay ) ) {
				return;
			}
			targets = this.choose_targets( user );

			if ( targets != null && targets.len != 0 ) {
				
				if ( Rand13.PercentChance( this.the_world_chance ) ) {
					this.invocation = "ZA WARUDO";
				}
				this.f_invocation( user, targets );
				this.take_charge( user, skipcharge );
				this.before_cast( targets );
				user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <font color='red'>" + user.real_name + " (" + user.ckey + ") cast the spell " + this.name + ".</font>" );

				if ( Rand13.PercentChance( this.critfailchance ) ) {
					this.critfail( targets, user );
				} else {
					this.cast( targets, user );
				}
				this.after_cast( targets );
				this.invocation = Lang13.Initial( this, "invocation" );
			}
			return;
		}

		// Function from file: fall.dm
		public void recursive_timestop( Ent_Dynamic O = null ) {
			ByTable processing_list = null;
			ByTable processed_list = null;
			Ent_Static A = null;
			Ent_Static B = null;

			processing_list = new ByTable(new object [] { O });
			processed_list = new ByTable();

			while (processing_list.len != 0) {
				A = processing_list[1];
				this.affected.Or( A );
				A.timestopped = true;

				foreach (dynamic _a in Lang13.Enumerate( A, typeof(Ent_Static) )) {
					B = _a;
					

					if ( !Lang13.Bool( processed_list[B] ) ) {
						processing_list.Or( B );
					}
				}
				processing_list.Cut( 1, 2 );
				processed_list[A] = A;
			}
			return;
		}

		// Function from file: fall.dm
		public void buildimage(  ) {
			this.aoe_underlay = new Image( "icons/effects/640x640.dmi", null, "fall", 201 );
			this.aoe_underlay.transform /= 50;
			this.aoe_underlay.pixel_x = -304;
			this.aoe_underlay.pixel_y = -304;
			this.aoe_underlay.mouse_opacity = 0;
			return;
		}

		// Function from file: fall.dm
		public override dynamic empower_spell(  ) {
			string temp = null;

			
			if ( !this.can_improve( "power" ) ) {
				return 0;
			}
			this.spell_levels["power"]++;
			temp = "";
			this.range++;
			this.sleeptime += 10;

			dynamic _a = this.level_max["power"] - this.spell_levels["power"]; // Was a switch-case, sorry for the mess.
			if ( _a==2 ) {
				temp = new Txt( "Your control over time strengthens, you can now stop time for " ).item( this.sleeptime / 10 ).str( " second" ).s().str( " and in a radius of " ).item( ( this.range ??0) * 2 ).str( " meter" ).s().str( "." ).ToString();
			}
			return temp;
		}

	}

}
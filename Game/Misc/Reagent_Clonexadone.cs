// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Clonexadone : Reagent {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.custom_plant_metabolism = 0.5;
			this.name = "Clonexadone";
			this.id = "clonexadone";
			this.description = "A liquid compound similar to that used in the cloning process. Can be used to 'finish' the cloning process when used in conjunction with a cryo tube.";
			this.reagent_state = 2;
			this.color = "#C8A5DC";
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool on_mob_life( Mob_Living M = null, int? alien = null ) {
			
			if ( base.on_mob_life( M, alien ) ) {
				return true;
			}

			if ( Convert.ToDouble( M.bodytemperature ) < 170 ) {
				M.adjustCloneLoss( -3 );
				M.adjustOxyLoss( -3 );
				M.heal_organ_damage( 3, 3 );
				M.adjustToxLoss( -3 );
			}
			return false;
		}

		// Function from file: hydroponics_reagents.dm
		public override void on_plant_life( Obj_Machinery_PortableAtmospherics_Hydroponics T = null ) {
			Seed S = null;
			double deviation = 0;

			base.on_plant_life( T );
			T.toxins -= 5;

			if ( T.seed != null && !T.dead ) {
				T.health += 5;
				S = T.seed;

				if ( T.age > S.maturation ) {
					deviation = Num13.MaxInt( ((int)( S.maturation - 1 )), ((int)( T.age - Rand13.Int( 7, 10 ) )) );
				} else {
					deviation = S.maturation / S.growth_stages;
				}
				T.age -= deviation;
				T.skip_aging++;
				T.force_update = true;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class NKeyword_NSKeyword_KwElseIf : NKeyword_NSKeyword {

		public NKeyword_NSKeyword_KwElseIf ( bool? inline = null ) : base( inline ) {
			
		}

		// Function from file: Keywords.dm
		public override int Parse( NParser parser = null ) {
			int _default = 0;

			ByTable L = null;
			Node_Statement_IfStatement ifstmt = null;
			Node_Statement_IfStatement_ElseIf stmt = null;

			_default = GlobalVars.KW_PASS ?1:0;
			L = parser.curBlock.statements;

			if ( L != null && L.len != 0 ) {
				ifstmt = L[L.len];
			}

			if ( !( ifstmt != null ) || !( ifstmt is Node_Statement_IfStatement ) || ifstmt.else_if != null ) {
				GlobalFuncs.to_chat( Task13.User, "NTSL: ELSE IF FAILED: " + !( ifstmt != null ) + ", " + !( ifstmt is Node_Statement_IfStatement ) + ", " + ( !( ifstmt is Node_Statement_IfStatement ) || ifstmt.else_if != null ) );
				parser.errors.Add( new ScriptError_ExpectedToken( "if statement", parser.curToken ) );
				return GlobalVars.KW_FAIL ?1:0;
			}
			stmt = new Node_Statement_IfStatement_ElseIf();
			parser.NextToken();
			stmt.cond = ((dynamic)parser).ParseParenExpression();

			if ( !Lang13.Bool( ((dynamic)parser).CheckToken( ")", typeof(Token_Symbol) ) ) ) {
				return GlobalVars.KW_FAIL ?1:0;
			}

			if ( !Lang13.Bool( new ByTable().Set( 1, "{" ).Set( 2, typeof(Token_Symbol) ).Set( "skip", 0 ).Apply( Lang13.BindFunc( parser, "CheckToken" ) ) ) ) {
				return GlobalVars.KW_ERR;
			}
			parser.curBlock.statements.Add( stmt );
			stmt.block = new Node_BlockDefinition();
			ifstmt.else_if = stmt;
			((dynamic)parser).AddBlock( stmt.block );
			return _default;
		}

	}

}
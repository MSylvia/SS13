// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_Eye_Cauterize : SurgeryStep_Eye {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_tools = new ByTable()
				.Set( typeof(Obj_Item_Weapon_Cautery), 100 )
				.Set( typeof(Obj_Item_Weapon_Scalpel_Laser), 100 )
				.Set( typeof(Obj_Item_Clothing_Mask_Cigarette), 75 )
				.Set( typeof(Obj_Item_Weapon_Lighter), 50 )
				.Set( typeof(Obj_Item_Weapon_Weldingtool), 25 )
			;
			this.min_duration = 70;
			this.max_duration = 100;
		}

		// Function from file: eye.dm
		public override bool? fail_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic eyes = null;
			string affected = null;

			eyes = target.internal_organs_by_name["eyes"];
			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( "'s hand slips, searing " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( "!</span>" ).ToString(), new Txt( "<span class='warning'>Your hand slips, searing " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( "!</span>" ).ToString() );
			((Mob_Living)target).apply_damage( 5, "fire", affected );
			eyes.take_damage( 5, 0 );
			return null;
		}

		// Function from file: eye.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic eyes = null;

			eyes = target.internal_organs_by_name["eyes"];
			((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " cauterizes the incision around " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You cauterize the incision around " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( ".</span>" ).ToString() );

			if ( target.op_stage.eyes == 3 ) {
				target.disabilities &= 65534;
				target.sdisabilities &= 65534;
				eyes.damage = 0;
			}
			target.op_stage.eyes = 0;
			return false;
		}

		// Function from file: eye.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " is beginning to cauterize the incision around " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( "." ).ToString(), new Txt( "You are beginning to cauterize the incision around " ).item( target ).str( "'s eyes with " ).the( tool ).item().str( "." ).ToString() );
			return false;
		}

		// Function from file: eye.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			return base.can_use( (object)(user), (object)(target), target_zone, tool );
		}

		// Function from file: eye.dm
		public override bool tool_quality( Obj_Item tool = null ) {
			dynamic T = null;

			
			if ( Lang13.Bool( tool.is_hot() ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.allowed_tools )) {
					T = _a;
					

					if ( Lang13.Bool( T.IsInstanceOfType( tool ) ) ) {
						return Lang13.Bool( this.allowed_tools[T] );
					}
				}
			}
			return false;
		}

	}

}
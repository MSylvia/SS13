// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_GlueBone : SurgeryStep {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_tools = new ByTable().Set( typeof(Obj_Item_Weapon_Bonegel), 100 ).Set( typeof(Obj_Item_Weapon_Screwdriver), 75 );
			this.can_infect = true;
			this.blood_level = 1;
			this.min_duration = 50;
			this.max_duration = 60;
		}

		// Function from file: bones.dm
		public override bool? fail_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( "<span class='warning'>" + user + "'s hand slips, smearing " + tool + " in the incision in " + target + "'s " + affected.display_name + "!</span>", "<span class='warning'>Your hand slips, smearing " + tool + " in the incision in " + target + "'s " + affected.display_name + "!</span>" );
			return null;
		}

		// Function from file: bones.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( "<span class='notice'>" + user + " applies some " + tool + " to " + target + "'s bone in " + affected.display_name + "</span>", new Txt( "<span class='notice'>You apply some " ).item( tool ).str( " to " ).item( target ).str( "'s bone in " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString() );
			affected.stage = 1;
			return false;
		}

		// Function from file: bones.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );

			if ( Lang13.Bool( affected.stage ) == false ) {
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " starts applying medication to the damaged bones in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString(), new Txt( "You start applying medication to the damaged bones in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString() );
			}
			((Mob_Living_Carbon_Human)target).custom_pain( "Something in your " + affected.display_name + " is causing you a lot of pain!", true );
			base.begin_step( (object)(user), (object)(target), target_zone, tool, (object)(surgery) );
			return false;
		}

		// Function from file: bones.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			return ( Convert.ToDouble( affected.open ) >= 2 || Lang13.Bool( target.species.flags & 32768 ) ) && Lang13.Bool( affected.stage ) == false ?1:0;
		}

	}

}
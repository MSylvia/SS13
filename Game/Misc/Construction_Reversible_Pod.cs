// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Construction_Reversible_Pod : Construction_Reversible {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.result = typeof(Obj_Spacepod_Civilian);
			this.steps = new ByTable(new object [] { 
				new ByTable()
					.Set( "desc", "A space pod with unsecured armor." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} unsecure{s} {HOLDER}'s armor." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "vis_msg", "{USER} weld{s} {HOLDER}'s armor." ).Set( "amount", 3 ) )
				, 
				new ByTable()
					.Set( "desc", "A space pod with unsecured armor." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Crowbar) ).Set( "vis_msg", "{USER} prie{s} off {HOLDER}'s armor." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} bolt{s} down {HOLDER}'s armor." ) )
				, 
				new ByTable()
					.Set( "desc", "A space pod with sealed bulkhead panelling exposed." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "vis_msg", "{USER} cut{s} {HOLDER}'s bulkhead panelling loose." ).Set( "amount", 3 ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_PodParts_Armor) ).Set( "vis_msg", "{USER} install{s} {HOLDER}'s armor plating." ).Set( "amount", 1 ).Set( 4, "keep" ) )
				, 
				new ByTable()
					.Set( "desc", "A space pod with unwelded bulkhead panelling exposed." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} unbolt{s} {HOLDER}'s bulkhead panelling." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Weldingtool) ).Set( "vis_msg", "{USER} seal{s} {HOLDER}'s bulkhead panelling with a weld." ).Set( "amount", 3 ) )
				, 
				new ByTable()
					.Set( "desc", "A space pod with loose bulkhead panelling exposed." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Crowbar) ).Set( "vis_msg", "{USER} pop{s} {HOLDER}'s bulkhead panelling loose." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} secure{s} {HOLDER}'s bulkhead panelling." ) )
				, 
				new ByTable()
					.Set( "desc", "A naked space pod with an exposed core. How lewd." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} unsecure{s} {HOLDER}'s core." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Stack_Sheet_Metal) ).Set( "amount", 5 ).Set( "vis_msg", "{USER} fabricate{s} a pressure bulkhead for {HOLDER}." ) )
				, 
				new ByTable()
					.Set( "desc", "A naked space pod with a loose core." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Crowbar) ).Set( "vis_msg", "{USER} delicately remove{s} the core from {HOLDER} with a crowbar." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wrench) ).Set( "vis_msg", "{USER} secure{s} the core's bolts." ) )
				, 
				new ByTable()
					.Set( "desc", "A wired pod frame with a secured mainboard." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "vis_msg", "{USER} unsecure{s} the mainboard." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_PodParts_Core) ).Set( "vis_msg", "{USER} insert{s} the core into {HOLDER}." ).Set( "amount", 1 ).Set( 4, "keep" ) )
				, 
				new ByTable()
					.Set( "desc", "A wired pod frame with a loose mainboard." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Crowbar) ).Set( "vis_msg", "{USER} prie{s} out the mainboard." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "vis_msg", "{USER} secure{s} the mainboard." ) )
				, 
				new ByTable()
					.Set( "desc", "A wired pod frame." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "vis_msg", "{USER} unclip{s} {HOLDER}'s wiring harnesses." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Circuitboard_Mecha_Pod) ).Set( "vis_msg", "{USER} insert{s} the mainboard into {HOLDER}." ).Set( "amount", 1 ).Set( 4, "keep" ) )
				, 
				new ByTable()
					.Set( "desc", "A crudely-wired pod frame." )
					.Set( "backstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Wirecutters) ).Set( "vis_msg", "{USER} cut{s} out {HOLDER}'s wiring." ) )
					.Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Weapon_Screwdriver) ).Set( "vis_msg", "{USER} adjust{s} the wiring." ) )
				, 
				new ByTable().Set( "desc", "An empty pod frame." ).Set( "nextstep", new ByTable().Set( "key", typeof(Obj_Item_Stack_CableCoil) ).Set( "vis_msg", "{USER} wire{s} {HOLDER}." ).Set( "amount", 10 ) )
			 });
		}

		public Construction_Reversible_Pod ( Ent_Static atom = null ) : base( atom ) {
			
		}

		// Function from file: construction.dm
		public override bool action( dynamic used_atom = null, dynamic user = null ) {
			return this.check_step( used_atom, user );
		}

		// Function from file: construction.dm
		public override bool custom_action( dynamic index = null, dynamic diff = null, dynamic used_atom = null, dynamic user = null ) {
			
			if ( !base.custom_action( (object)(index), (object)(diff), (object)(used_atom), (object)(user) ) ) {
				return false;
			}
			this.holder.icon_state = "pod_" + ( this.steps.len - Convert.ToDouble( index ) + 1 - Convert.ToDouble( diff ) );
			return true;
		}

		// Function from file: construction.dm
		public override void spawn_result( dynamic user = null ) {
			base.spawn_result( (object)(user) );
			GlobalFuncs.feedback_inc( "spacepod_created", 1 );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Disease_Kingston : Disease {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Yildun Infectious Fusobacter Syndrome";
			this.max_stages = 4;
			this.cure = "The Manly Dorf";
			this.cure_id = "manlydorf";
			this.cure_chance = 100;
			this.agent = "Baccilli Yiffus";
			this.affected_species = new ByTable(new object [] { "Human" });
			this.curable = true;
			this.permeability_mod = 0.75;
			this.desc = "No god please no.";
			this.severity = "Major";
			this.spread = "Bites";
		}

		public Disease_Kingston ( bool? process = null, Disease_Advance D = null ) : base( process, D ) {
			
		}

		// Function from file: mega_kingston.dm
		public override bool stage_act(  ) {
			dynamic H = null;
			dynamic H2 = null;
			Obj_Item W = null;

			base.stage_act();

			switch ((int?)( this.stage )) {
				case 2:
					
					if ( Rand13.PercentChance( 1 ) ) {
						((Mob)this.affected_mob).emote( "sneeze" );
					}
					break;
				case 3:
					
					if ( this.affected_mob is Mob_Living_Carbon_Human && Rand13.PercentChance( 1 ) ) {
						H = this.affected_mob;
						((Mob_Living_Carbon_Human)H).vomit();
					}
					break;
				case 4:
					
					if ( Rand13.PercentChance( 1 ) ) {
						((Ent_Dynamic)this.affected_mob).say( Rand13.Pick(new object [] { ";I FEEL FRISKY", "*me scritches behind his ears.", "*me licks " + ( this.affected_mob.gender == GlobalVars.MALE ? "his" : "her" ) + " arm.", ";YIFF", ";MEOW" }) );
						return false;
					}

					if ( Rand13.PercentChance( 1 ) && Rand13.PercentChance( 50 ) ) {
						H2 = this.affected_mob;
						GlobalFuncs.to_chat( H2, "<span class=\"warning\">You feel a wave of extreme pain and uncleanliness as your body morphs.</span>" );
						((Mob_Living_Carbon_Human)H2).set_species( "Tajaran" );

						foreach (dynamic _a in Lang13.Enumerate( H2, typeof(Obj_Item) )) {
							W = _a;
							
							((Mob)H2).drop_from_inventory( W );
						}
					}
					break;
			}
			return false;
		}

	}

}
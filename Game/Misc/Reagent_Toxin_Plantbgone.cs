// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Toxin_Plantbgone : Reagent_Toxin {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Plant-B-Gone";
			this.id = "plantbgone";
			this.description = "A harmful toxic mixture to kill plantlife. Do not ingest!";
			this.color = "#49002E";
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool reaction_mob( dynamic M = null, int? method = null, double volume = 0 ) {
			method = method ?? GlobalVars.TOUCH;

			dynamic C = null;
			dynamic H = null;

			
			if ( base.reaction_mob( (object)(M), method, volume ) ) {
				return true;
			}

			if ( M is Mob_Living_Carbon ) {
				C = M;

				if ( !Lang13.Bool( C.wear_mask ) ) {
					((Mob_Living)C).adjustToxLoss( 0.5 );
				}

				if ( M is Mob_Living_Carbon_Human ) {
					H = M;

					if ( Lang13.Bool( H.dna ) ) {
						
						if ( Lang13.Bool( H.species.flags & 512 ) ) {
							((Mob_Living)H).adjustToxLoss( 5 );
						}
					}
				}
			}
			return false;
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool reaction_obj( dynamic O = null, double volume = 0 ) {
			dynamic alien_weeds = null;
			dynamic K = null;
			double dmg = 0;
			Obj_Effect_Plantsegment KV = null;
			dynamic tray = null;

			
			if ( base.reaction_obj( (object)(O), volume ) ) {
				return true;
			}

			if ( O is Obj_Effect_Alien_Weeds ) {
				alien_weeds = O;
				alien_weeds.health -= Rand13.Int( 15, 35 );
				alien_weeds.healthcheck();
			} else if ( O is Obj_Effect_Glowshroom ) {
				GlobalFuncs.qdel( O );
			} else if ( O is Obj_Effect_Plantsegment ) {
				K = O;
				dmg = 200;

				if ( Lang13.Bool( K.seed ) ) {
					dmg -= K.seed.toxins_tolerance * 20;
				}

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( 1, O ), typeof(Obj_Effect_Plantsegment) )) {
					KV = _a;
					
					KV.health -= dmg * 0.4;
					KV.check_health();
					GlobalVars.plant_controller.add_plant( KV );
				}
				K.health -= dmg;
				K.check_health();
				GlobalVars.plant_controller.add_plant( K );
			} else if ( O is Obj_Machinery_PortableAtmospherics_Hydroponics ) {
				tray = O;

				if ( Lang13.Bool( tray.seed ) ) {
					tray.health -= Rand13.Int( 30, 50 );
				}
				tray.pestlevel -= 2;
				tray.weedlevel -= 3;
				tray.toxins += 15;
				((Obj_Machinery_PortableAtmospherics_Hydroponics)tray).check_level_sanity();
			}
			return false;
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool reaction_turf( dynamic T = null, double volume = 0 ) {
			dynamic W = null;
			Obj_Effect E = null;

			
			if ( base.reaction_turf( (object)(T), volume ) ) {
				return true;
			}

			if ( T is Tile_Simulated_Wall ) {
				W = T;

				if ( W.rotting ) {
					W.rotting = false;

					foreach (dynamic _a in Lang13.Enumerate( W, typeof(Obj_Effect) )) {
						E = _a;
						

						if ( E.name == "Wallrot" ) {
							GlobalFuncs.qdel( E );
						}
					}
					((Ent_Static)W).visible_message( "<span class='notice'>The fungi are burned away by the solution!</span>" );
				}
			}
			return false;
		}

		// Function from file: hydroponics_reagents.dm
		public override void on_plant_life( Obj_Machinery_PortableAtmospherics_Hydroponics T = null ) {
			base.on_plant_life( T );
			T.toxins += 6;
			T.weedlevel -= 8;

			if ( T.seed != null && !T.dead ) {
				T.health -= 20;
				T.mutation_mod += 0.1;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Dna_Gene_Monkey : Dna_Gene {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Monkey";
			this.flags = 2;
		}

		// Function from file: monkey.dm
		public Dna_Gene_Monkey (  ) {
			this.block = GlobalVars.MONKEYBLOCK;
			return;
		}

		// Function from file: monkey.dm
		public override bool deactivate( dynamic M = null, dynamic connected = null, int? flags = null ) {
			dynamic Mo = null;
			Dynamic_Overlay animation = null;
			Mob_Living_Carbon_Human O = null;
			Disease D = null;
			Obj_Item W = null;
			dynamic C = null;
			int? i = null;
			string randomname = null;

			
			if ( !( M is Mob_Living_Carbon_Monkey ) ) {
				Game13.log.WriteMsg( "## TESTING: " + ( "Cannot humanize " + M + ", type is " + M.type + "." ) );
				return false;
			}
			Mo = M;
			Mo.monkeyizing = true;

			if ( !Lang13.Bool( connected ) ) {
				M.monkeyizing = true;
				M.canmove = false;
				M.icon = null;
				M.invisibility = 101;
				((Mob)M).delayNextAttack( 50 );
				animation = new Dynamic_Overlay( M.loc );
				animation.icon_state = "blank";
				animation.icon = "icons/mob/mob.dmi";
				animation.master = this;
				Icon13.Flick( "monkey2h", animation );
				Task13.Sleep( 48 );
				animation.master = null;
				GlobalFuncs.qdel( animation );
			}
			O = new Mob_Living_Carbon_Human( this );

			if ( Lang13.Bool( Mo.greaterform ) ) {
				O.set_species( Mo.greaterform );
			}
			((Mob_Living_Carbon)Mo).transferImplantsTo( O );

			if ( ((Dna)M.dna).GetUIState( 11 ) ) {
				O.setGender( GlobalVars.FEMALE );
			} else {
				O.setGender( GlobalVars.MALE );
			}

			if ( Lang13.Bool( M ) ) {
				
				if ( Lang13.Bool( M.dna ) ) {
					O.dna = ((Dna)M.dna).Clone();
					M.dna = null;
				}

				if ( M.suiciding == true ) {
					O.suiciding = M.suiciding;
					M.suiciding = null;
				}
			}

			foreach (dynamic _a in Lang13.Enumerate( M.viruses, typeof(Disease) )) {
				D = _a;
				
				O.viruses.Add( D );
				D.affected_mob = O;
				M.viruses -= D;
			}
			O.loc = M.loc;

			if ( Lang13.Bool( M.mind ) ) {
				((Mind)M.mind).transfer_to( O );
			}

			foreach (dynamic _b in Lang13.Enumerate( Mo.contents, typeof(Obj_Item) )) {
				W = _b;
				
				((Mob)Mo).drop_from_inventory( W );
			}
			((Mob_Living_Carbon)Mo).transferBorers( O );

			if ( Lang13.Bool( connected ) ) {
				C = connected;
				O.loc = C;
				C.occupant = O;
				connected = null;
			}
			i = null;

			while (!Lang13.Bool( i )) {
				randomname = ((Species)O.species).makeName( O.gender, O );

				if ( Lang13.Bool( GlobalFuncs.findname( randomname ) ) ) {
					continue;
				} else {
					O.real_name = randomname;
					i++;
				}
			}
			O.UpdateAppearance();
			O.take_overall_damage( ((Mob_Living)M).getBruteLoss(), ((Mob_Living)M).getFireLoss() );
			O.adjustToxLoss( ((Mob_Living)M).getToxLoss() );
			O.adjustOxyLoss( ((Mob_Living)M).getOxyLoss() );
			O.stat = Lang13.IntNullable( M.stat );
			Mo.monkeyizing = false;
			GlobalFuncs.qdel( M );
			M = null;
			return false;
		}

		// Function from file: monkey.dm
		public override bool activate( dynamic M = null, dynamic connected = null, bool? flags = null ) {
			dynamic H = null;
			Dynamic_Overlay animation = null;
			dynamic O = null;
			Obj_Item W = null;
			Disease D = null;
			Obj_Item W2 = null;
			dynamic C = null;

			
			if ( !( M is Mob_Living_Carbon_Human ) ) {
				return false;
			}
			H = M;
			H.monkeyizing = true;

			if ( !Lang13.Bool( connected ) ) {
				M.monkeyizing = true;
				M.canmove = false;
				M.icon = null;
				M.invisibility = 101;
				((Mob)M).delayNextAttack( 50 );
				animation = new Dynamic_Overlay( M.loc );
				animation.icon_state = "blank";
				animation.icon = "icons/mob/mob.dmi";
				animation.master = this;
				Icon13.Flick( "h2monkey", animation );
				Task13.Sleep( 48 );
				animation.master = null;
				GlobalFuncs.qdel( animation );
			}
			O = null;

			if ( H.species.primitive != null ) {
				O = Lang13.Call( H.species.primitive, this );
				((Mob_Living_Carbon)H).transferImplantsTo( O );
			} else {
				
				foreach (dynamic _a in Lang13.Enumerate( H.contents, typeof(Obj_Item) )) {
					W = _a;
					
					((Mob)H).drop_from_inventory( W );
				}
				((Mob_Living_Carbon)H).dropBorers( true );
				((Mob)H).gib();
				return false;
			}

			if ( Lang13.Bool( M ) ) {
				
				if ( Lang13.Bool( M.dna ) ) {
					O.dna = ((Dna)M.dna).Clone();
					M.dna = null;
				}

				if ( M.suiciding == true ) {
					O.suiciding = M.suiciding;
					M.suiciding = null;
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( M.viruses, typeof(Disease) )) {
				D = _b;
				
				O.viruses += D;
				D.affected_mob = O;
				M.viruses -= D;
			}
			O.loc = M.loc;

			if ( Lang13.Bool( M.mind ) ) {
				((Mind)M.mind).transfer_to( O );
			}

			foreach (dynamic _c in Lang13.Enumerate( H.contents, typeof(Obj_Item) )) {
				W2 = _c;
				
				((Mob)H).drop_from_inventory( W2 );
			}
			((Mob_Living_Carbon)H).transferBorers( O );

			if ( Lang13.Bool( connected ) ) {
				C = connected;
				O.loc = C;
				C.occupant = O;
				connected = null;
			}

			if ( O is Mob_Living_Carbon_Monkey ) {
				O.real_name = "monkey (" + String13.SubStr( Num13.Md5( M.real_name ), 2, 6 ) + ")";
				((Mob_Living)O).take_overall_damage( ((Mob_Living)M).getBruteLoss() + 40, ((Mob_Living)M).getFireLoss() );
				((Mob_Living)O).adjustToxLoss( ((Mob_Living)M).getToxLoss() + 20 );
				((Mob_Living)O).adjustOxyLoss( ((Mob_Living)M).getOxyLoss() );
			} else {
				O.a_intent = "help";
			}
			O.stat = M.stat;
			O.a_intent = "hurt";
			H.monkeyizing = false;
			GlobalFuncs.qdel( M );
			M = null;
			return false;
		}

		// Function from file: monkey.dm
		public override bool can_activate( dynamic M = null, bool? flags = null ) {
			return M is Mob_Living_Carbon_Human || M is Mob_Living_Carbon_Monkey;
		}

	}

}
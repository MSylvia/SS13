// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ResearchTree : Game_Data {

		public string title = "Research Tree";
		public string blurb = "<b>BUG:</b> This is a stand-in description.  If the coder who implemented this wasn't a hack, they'd make a subtype /datum/research_tree and set the title and blurb properties to be more immersive.";
		public Browser_Clean popup = null;
		public ByTable usable_unlocks = new ByTable();
		public ByTable avail_unlocks = new ByTable();
		public ByTable unlocked = new ByTable();
		public bool unlocking = false;

		// Function from file: research_tree.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic viewer = null;
			dynamic unlock = null;

			Interface13.Stat( null, href_list.Contains( "unlock" ) );

			if ( false ) {
				viewer = Lang13.FindObj( href_list["user"] );
				unlock = Lang13.FindObj( this.usable_unlocks[href_list["unlock"]] );

				if ( !Lang13.Bool( unlock ) ) {
					return null;
				}
				((Unlockable)unlock).set_context( this );
				((Unlockable)unlock).unlock(  );
				this.display( viewer );
			}
			return null;
		}

		// Function from file: research_tree.dm
		public void close( dynamic user = null ) {
			Interface13.Browse( user, null, new Txt( "window=" ).Ref( this ).str( "_research" ).ToString() );
			return;
		}

		// Function from file: research_tree.dm
		public void display( dynamic user = null ) {
			string html = null;
			dynamic id = null;
			dynamic U = null;

			Game13.log.WriteMsg( "## TESTING: " + "Entering display..." );
			html = "<h2>" + this.title + "</h2><p>" + this.blurb + "</p>";
			html += this.start_table();
			this.load_usable_unlocks();

			foreach (dynamic _a in Lang13.Enumerate( this.usable_unlocks )) {
				id = _a;
				
				U = Lang13.FindObj( this.usable_unlocks[id] );
				((Unlockable)U).set_context( this );
				html += ((Unlockable)U).toTableRow( this, user );
			}
			html += this.end_table();
			this.popup = new Browser_Clean( user, new Txt().Ref( this ).str( "_research" ).ToString(), "Research Tree", 300, 300 );
			this.popup.set_content( html );
			this.popup.open();
			return;
		}

		// Function from file: research_tree.dm
		public string end_table(  ) {
			return "</table>";
		}

		// Function from file: research_tree.dm
		public string start_table(  ) {
			return "<table class=\"prettytable\"><thead><th>Name</th><th>Cost</th><th>Time</th></thead>";
		}

		// Function from file: research_tree.dm
		public void load_usable_unlocks(  ) {
			Unlockable U = null;

			this.usable_unlocks = new ByTable();
			this.avail_unlocks = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( this.get_avail_unlocks(), typeof(Unlockable) )) {
				U = _a;
				

				if ( !Lang13.Bool( U.id ) ) {
					continue;
				}
				U.set_context( this );

				if ( !U.unlocked && U.can_buy(  ) && U.check_prerequisites(  ) ) {
					this.usable_unlocks[U.id] = new Txt().Ref( U ).ToString();
				}
				this.avail_unlocks[U.id] = new Txt().Ref( U ).ToString();
			}
			return;
		}

		// Function from file: research_tree.dm
		public dynamic get( dynamic id = null, bool? only_usable = null ) {
			only_usable = only_usable ?? false;

			ByTable all_unlocks = null;
			dynamic U = null;

			
			if ( only_usable == true ) {
				all_unlocks = this.usable_unlocks;
			} else {
				all_unlocks = this.avail_unlocks;
			}
			U = Lang13.FindObj( all_unlocks[id] );

			if ( !Lang13.Bool( U ) ) {
				return null;
			}
			((Unlockable)U).set_context( this );
			return U;
		}

		// Function from file: research_tree.dm
		public virtual ByTable get_avail_unlocks(  ) {
			Task13.Crash( "SOME GIT CALLED /datum/research_tree/get_avail_unlocks()! Check for ..() in " + this.type + "/get_avail_unlocks()!" );
			return new ByTable();
		}

	}

}
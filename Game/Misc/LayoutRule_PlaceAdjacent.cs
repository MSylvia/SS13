// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class LayoutRule_PlaceAdjacent : LayoutRule {

		public ByTable next_to = new ByTable();
		public ByTable not_next_to = new ByTable();

		public LayoutRule_PlaceAdjacent ( dynamic _root = null, dynamic _room = null ) : base( (object)(_root), (object)(_room) ) {
			
		}

		// Function from file: surprise.dm
		public bool IsTurfCandidate( dynamic T = null, ByTable opt_nt = null, ByTable opt_nnt = null ) {
			SurpriseTurfInfo sti = null;
			dynamic dir = null;
			string di = null;
			dynamic _type = null;

			sti = this.room.GetTurfInfo( T );

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.cardinal )) {
				dir = _b;
				
				di = "" + dir;

				foreach (dynamic _a in Lang13.Enumerate( sti.adjacents[di] )) {
					_type = _a;
					
					Interface13.Stat( null, opt_nnt[di].Contains( _type ) );

					if ( false ) {
						return false;
					}
					Interface13.Stat( null, opt_nt[di].Contains( _type ) );

					if ( false ) {
						return true;
					}
				}
			}
			return true;
		}

		// Function from file: surprise.dm
		public override ByTable GetCandidates(  ) {
			ByTable opt_nt = null;
			ByTable opt_nnt = null;
			ByTable candidates = null;
			dynamic dir = null;
			string di = null;
			dynamic t = null;
			dynamic tl = null;
			dynamic t2 = null;
			dynamic tl2 = null;
			dynamic T = null;

			opt_nt = new ByTable( 0 );
			opt_nnt = new ByTable( 0 );
			candidates = new ByTable( 0 );

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.cardinal )) {
				dir = _c;
				
				di = "" + dir;
				Interface13.Stat( null, opt_nt.Contains( !Lang13.Bool( di ) ) );

				if ( false ) {
					opt_nt[di] = new ByTable();
					opt_nnt[di] = new ByTable();
				}

				foreach (dynamic _a in Lang13.Enumerate( this.next_to )) {
					t = _a;
					
					Interface13.Stat( null, this.next_to[t].Contains( dir ) );

					if ( false ) {
						tl = opt_nt[di];
						tl |= t;
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( this.not_next_to )) {
					t2 = _b;
					
					Interface13.Stat( null, this.not_next_to[t2].Contains( dir ) );

					if ( false ) {
						tl2 = opt_nnt[di];
						tl2 |= t2;
					}
				}
			}

			foreach (dynamic _d in Lang13.Enumerate( this.room.turfs )) {
				T = _d;
				

				if ( this.IsTurfCandidate( T, opt_nt, opt_nnt ) ) {
					candidates.Add( T );
				}
			}
			return candidates;
		}

	}

}
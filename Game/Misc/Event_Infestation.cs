// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Event_Infestation : Event {

		public string locstring = null;
		public string vermstring = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 15;
			this.endWhen = 20;
		}

		public Event_Infestation ( Obj_Item_MechaParts_MechaEquipment_Tool_CableLayer tlistener = null, string tprocname = null ) : base( tlistener, tprocname ) {
			
		}

		// Function from file: infestation.dm
		public override void announce(  ) {
			GlobalFuncs.command_alert( "Bioscans indicate that " + this.vermstring + " have been breeding in " + this.locstring + ". Clear them out, before this starts to affect productivity.", "Vermin infestation" );
			return;
		}

		// Function from file: infestation.dm
		public override bool start(  ) {
			dynamic location = null;
			Type spawn_area_type = null;
			dynamic spawn_types = null;
			int max_number = 0;
			int vermin = 0;
			int? number = null;
			int? i = null;
			dynamic A = null;
			ByTable valid = null;
			Tile_Simulated_Floor F = null;
			dynamic picked = null;
			Mob_Living_SimpleAnimal_Hostile_GiantSpider_Spiderling S = null;
			dynamic spawn_type = null;

			location = Rand13.Pick(new object [] { 0, 1, 2, 3, 4, 5, 6, 7 });
			spawn_area_type = null;

			dynamic _a = location; // Was a switch-case, sorry for the mess.
			if ( _a==0 ) {
				spawn_area_type = typeof(Zone_CrewQuarters_Kitchen);
				this.locstring = "the Kitchen";
			} else if ( _a==1 ) {
				spawn_area_type = typeof(Zone_Engineering_Atmos);
				this.locstring = "Atmospherics";
			} else if ( _a==2 ) {
				spawn_area_type = typeof(Zone_Maintenance_Incinerator);
				this.locstring = "the Incinerator";
			} else if ( _a==3 ) {
				spawn_area_type = typeof(Zone_Chapel_Main);
				this.locstring = "the Chapel";
			} else if ( _a==4 ) {
				spawn_area_type = typeof(Zone_Library);
				this.locstring = "the Library";
			} else if ( _a==5 ) {
				spawn_area_type = typeof(Zone_Hydroponics);
				this.locstring = "Hydroponics";
			} else if ( _a==6 ) {
				spawn_area_type = typeof(Zone_Storage_NukeStorage);
				this.locstring = "the Vault";
			} else if ( _a==7 ) {
				spawn_area_type = typeof(Zone_Storage_Tech);
				this.locstring = "Technical Storage";
			}
			spawn_types = new ByTable();
			max_number = 4;
			vermin = Convert.ToInt32( Rand13.Pick(new object [] { 0, 1, 2, 3, 4, 5, 6 }) );

			switch ((int)( vermin )) {
				case 0:
					spawn_types = new ByTable(new object [] { typeof(Mob_Living_SimpleAnimal_Mouse_Gray), typeof(Mob_Living_SimpleAnimal_Mouse_Brown), typeof(Mob_Living_SimpleAnimal_Mouse_White) });
					max_number = 12;
					this.vermstring = "mice";
					break;
				case 1:
					spawn_types = new ByTable(new object [] { typeof(Mob_Living_SimpleAnimal_Lizard) });
					max_number = 6;
					this.vermstring = "lizards";
					break;
				case 2:
					spawn_types = new ByTable(new object [] { typeof(Mob_Living_SimpleAnimal_Hostile_GiantSpider_Spiderling) });
					this.vermstring = "spiderlings";
					break;
				case 3:
					spawn_types = Lang13.GetTypes( typeof(Mob_Living_Carbon_Slime) ) - typeof(Mob_Living_Carbon_Slime) - Lang13.GetTypes( typeof(Mob_Living_Carbon_Slime_Adult) );
					this.vermstring = "slimes";
					break;
				case 4:
					spawn_types = typeof(Mob_Living_SimpleAnimal_Hostile_Scarybat);
					this.vermstring = "space bats";
					break;
				case 5:
					spawn_types = typeof(Mob_Living_SimpleAnimal_Borer);
					this.vermstring = "cortical borers";
					max_number = 5;
					break;
				case 6:
					spawn_types = typeof(Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item);
					this.vermstring = "mimics";
					max_number = 1;
					break;
				case 7:
					spawn_types = typeof(Mob_Living_SimpleAnimal_Cockroach);
					this.vermstring = "roaches";
					max_number = 30;
					break;
			}
			number = Rand13.Int( 2, max_number );
			i = null;
			i = 0;

			while (( i ??0) <= ( number ??0)) {
				A = Lang13.FindObj( spawn_area_type );
				valid = new ByTable();

				foreach (dynamic _c in Lang13.Enumerate( A, typeof(Tile_Simulated_Floor) )) {
					F = _c;
					

					if ( !F.has_dense_content() ) {
						valid.Add( F );
					}
				}
				picked = Rand13.PickFromTable( valid );

				if ( vermin == 2 ) {
					S = new Mob_Living_SimpleAnimal_Hostile_GiantSpider_Spiderling( picked );
					S.amount_grown = 0;
				} else {
					spawn_type = Rand13.PickFromTable( spawn_types );
					Lang13.Call( spawn_type, picked );
				}
				i++;
			}
			return false;
		}

	}

}
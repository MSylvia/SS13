// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Dnaswitch : ArtifactEffect {

		public int severity = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "dnaswitch";
			this.effect_type = 5;
		}

		// Function from file: unknown_effect_dnaswitch.dm
		public ArtifactEffect_Dnaswitch ( dynamic location = null ) : base( (object)(location) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.effect == 1 ) {
				this.severity = Rand13.Int( 5, 30 );
			} else {
				this.severity = Rand13.Int( 25, 95 );
			}
			return;
		}

		// Function from file: unknown_effect_dnaswitch.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, 200 ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( H );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						
						if ( Rand13.PercentChance( 75 ) ) {
							GlobalFuncs.to_chat( H, Rand13.Pick(new object [] { "<span class='good'>You feel a little different.</span>", "<span class='good'>You feel very strange.</span>", "<span class='good'>Your stomach churns.</span>", "<span class='good'>Your skin feels loose.</span>", "<span class='good'>You feel a stabbing pain in your head.</span>", "<span class='good'>You feel a tingling sensation in your chest.</span>", "<span class='good'>Your entire body vibrates.</span>" }) );
						}

						if ( Rand13.PercentChance( 25 ) ) {
							
							if ( Rand13.PercentChance( 75 ) ) {
								GlobalFuncs.scramble( true, H, weakness * this.severity );
							} else {
								GlobalFuncs.scramble( false, H, weakness * this.severity );
							}
						}
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_dnaswitch.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( H );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						
						if ( Rand13.PercentChance( 30 ) ) {
							GlobalFuncs.to_chat( H, Rand13.Pick(new object [] { "<span class='good'>You feel a little different.</span>", "<span class='good'>You feel very strange.</span>", "<span class='good'>Your stomach churns.</span>", "<span class='good'>Your skin feels loose.</span>", "<span class='good'>You feel a stabbing pain in your head.</span>", "<span class='good'>You feel a tingling sensation in your chest.</span>", "<span class='good'>Your entire body vibrates.</span>" }) );
						}

						if ( Rand13.PercentChance( 50 ) ) {
							GlobalFuncs.scramble( true, H, weakness * this.severity );
						} else {
							GlobalFuncs.scramble( false, H, weakness * this.severity );
						}
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_dnaswitch.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			double weakness = 0;

			weakness = GlobalFuncs.GetAnomalySusceptibility( user );

			if ( user is Mob_Living_Carbon_Human && Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
				GlobalFuncs.to_chat( user, Rand13.Pick(new object [] { "<span class='good'>You feel a little different.</span>", "<span class='good'>You feel very strange.</span>", "<span class='good'>Your stomach churns.</span>", "<span class='good'>Your skin feels loose.</span>", "<span class='good'>You feel a stabbing pain in your head.</span>", "<span class='good'>You feel a tingling sensation in your chest.</span>", "<span class='good'>Your entire body vibrates.</span>" }) );

				if ( Rand13.PercentChance( 75 ) ) {
					GlobalFuncs.scramble( true, user, weakness * this.severity );
				} else {
					GlobalFuncs.scramble( false, user, weakness * this.severity );
				}
			}
			return true;
		}

	}

}
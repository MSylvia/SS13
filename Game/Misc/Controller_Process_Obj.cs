// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Controller_Process_Obj : Controller_Process {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.schedule_interval = 20;
		}

		public Controller_Process_Obj ( dynamic scheduler = null ) : base( (object)(scheduler) ) {
			
		}

		// Function from file: obj.dm
		public override bool doWork(  ) {
			Ent_Static o = null;
			dynamic e = null;

			
			if ( GlobalVars.processing_objects != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.processing_objects, typeof(Ent_Static) )) {
					o = _a;
					

					if ( o != null ) {
						
						if ( o.timestopped ) {
							continue;
						}

						try {
							((Zone_Awaymission_Beach)o).process();
						} catch (Exception __) {
							e = __;
							Game13.Error( e );
							continue;
						}
						this.scheck();
						continue;
					}
					GlobalVars.processing_objects.Remove( o );
				}
			}
			return false;
		}

		// Function from file: obj.dm
		public override void started(  ) {
			base.started();

			if ( !( GlobalVars.processing_objects != null ) ) {
				GlobalVars.processing_objects = new ByTable();
			}
			return;
		}

		// Function from file: obj.dm
		public override void setup(  ) {
			this.name = "obj";
			return;
		}

	}

}
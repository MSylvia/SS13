// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ChemicalReaction_Slimecrit : ChemicalReaction {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Slime Crit";
			this.id = "m_tele";
			this.required_reagents = new ByTable().Set( "plasma", 5 );
			this.result_amount = 1;
			this.required_container = typeof(Obj_Item_SlimeExtract_Gold);
			this.required_other = true;
		}

		// Function from file: Chemistry-Recipes.dm
		public override void on_reaction( Reagents holder = null, int? created_volume = null ) {
			ByTable blocked = null;
			dynamic critters = null;
			dynamic O = null;
			dynamic H = null;
			int? i = null;
			dynamic chosen = null;
			dynamic C = null;
			int? j = null;

			GlobalFuncs.feedback_add_details( "slime_cores_used", "" + GlobalFuncs.replacetext( this.name, " ", "_" ) );

			if ( !( holder.my_atom.loc is Obj_Item_Weapon_Grenade_ChemGrenade ) ) {
				holder.my_atom.visible_message( "<span class='warning'>The slime extract begins to vibrate violently !</span>" );
				this.send_admin_alert( holder, "gold slime + plasma" );
				Task13.Sleep( 50 );
			} else {
				this.send_admin_alert( holder, "gold slime + plasma in a grenade!!" );
			}
			blocked = new ByTable(new object [] { 
				typeof(Mob_Living_SimpleAnimal_Hostile_Alien_Queen_Large), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Faithless), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Faithless_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Scarybat_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Creature_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Retaliate_Clown), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mushroom), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Carp_Holocarp), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Slime), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Slime_Adult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_MiningDrone), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mimic), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mimic_Crate), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Chest), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item)
			 }) + Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal_Hostile_Humanoid) ) + Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal_Hostile_Asteroid) );
			critters = GlobalFuncs.existing_typesof( typeof(Mob_Living_SimpleAnimal_Hostile) ) - blocked;
			GlobalFuncs.playsound( GlobalFuncs.get_turf( holder.my_atom ), "sound/effects/phasein.ogg", 100, 1 );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, GlobalFuncs.get_turf( holder.my_atom ) ) )) {
				O = _a;
				

				if ( O is Mob_Living_Carbon_Human ) {
					H = O;

					if ( Convert.ToDouble( H.eyecheck() ) <= 0 && !( H.glasses is Obj_Item_Clothing_Glasses_Science ) ) {
						Icon13.Flick( "e_flash", O.flash );
						GlobalFuncs.to_chat( O, "<span class='danger'>A flash blinds you while you start hearing terrifying noises !</span>" );
					} else {
						GlobalFuncs.to_chat( O, "<span class='danger'>You hear a rumbling as a troup of monsters phases into existence !</span>" );
					}
				} else {
					GlobalFuncs.to_chat( O, "<span class='danger'>You hear a rumbling as a troup of monsters phases into existence !</span>" );
				}
			}
			i = null;
			i = 1;

			while (( i ??0) <= 5) {
				chosen = Rand13.PickFromTable( critters );
				C = Lang13.Call( chosen );
				C.faction = "slimesummon";
				C.loc = GlobalFuncs.get_turf( holder.my_atom );

				if ( Rand13.PercentChance( 50 ) ) {
					j = null;
					j = 1;

					while (( j ??0) <= Rand13.Int( 1, 3 )) {
						Map13.Step( C, Convert.ToInt32( Rand13.Pick(new object [] { GlobalVars.NORTH, GlobalVars.SOUTH, GlobalVars.EAST, GlobalVars.WEST }) ) );
						j++;
					}
				}
				i++;
			}
			return;
		}

	}

}
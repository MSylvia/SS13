// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Roboheal : ArtifactEffect {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "roboheal";
		}

		// Function from file: unknown_effect_roboheal.dm
		public ArtifactEffect_Roboheal ( dynamic location = null ) : base( (object)(location) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.effect_type = Convert.ToInt32( Rand13.Pick(new object [] { 3, 4 }) );
			return;
		}

		// Function from file: unknown_effect_roboheal.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Silicon_Robot M = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Silicon_Robot) )) {
					M = _a;
					
					GlobalFuncs.to_chat( M, "<span class='notice'>SYSTEM ALERT: Structural damage has been repaired by energy pulse!</span>" );
					M.adjustBruteLoss( -10 );
					M.adjustFireLoss( -10 );
					M.updatehealth();
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_roboheal.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Silicon_Robot M = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Silicon_Robot) )) {
					M = _a;
					

					if ( Rand13.PercentChance( 10 ) ) {
						GlobalFuncs.to_chat( M, "<span class='notice'>SYSTEM ALERT: Beneficial energy field detected!</span>" );
					}
					M.adjustBruteLoss( -1 );
					M.adjustFireLoss( -1 );
					M.updatehealth();
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_roboheal.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			dynamic R = null;

			
			if ( Lang13.Bool( user ) ) {
				
				if ( user is Mob_Living_Silicon_Robot ) {
					R = user;
					GlobalFuncs.to_chat( R, "<span class='notice'>Your systems report damaged components mending by themselves!</span>" );
					((Mob_Living)R).adjustBruteLoss( Rand13.Int( -10, -30 ) );
					((Mob_Living)R).adjustFireLoss( Rand13.Int( -10, -30 ) );
					return true;
				}
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_TreatNecrosis : SurgeryStep {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.priority = 2;
			this.allowed_tools = new ByTable()
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Dropper), 100 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Glass_Bottle), 75 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Glass_Beaker), 75 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Spray), 50 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Glass_Bucket), 50 )
			;
			this.min_duration = 50;
			this.max_duration = 60;
		}

		// Function from file: other.dm
		public override bool? fail_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;
			Obj_Item container = null;
			dynamic trans = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );

			if ( !( tool is Obj_Item_Weapon_ReagentContainers ) ) {
				return null;
			}
			container = tool;
			trans = ((Reagents)container.reagents).trans_to( target, ((dynamic)container).amount_per_transfer_from_this );
			((Reagents)container.reagents).reaction( target, GlobalVars.INGEST );
			((Ent_Static)user).visible_message( "<span class='warning'>" + user + "'s hand slips, applying " + trans + " units of the solution to the wrong place in " + target + "'s " + affected.display_name + " with the " + tool + "!</span>", "<span class='warning'>Your hand slips, applying " + trans + " units of the solution to the wrong place in " + target + "'s " + affected.display_name + " with the " + tool + "!</span>" );
			return null;
		}

		// Function from file: other.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;
			Obj_Item container = null;
			dynamic trans = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );

			if ( !( tool is Obj_Item_Weapon_ReagentContainers ) ) {
				return false;
			}
			container = tool;
			trans = ((Reagents)container.reagents).trans_to( target, ((dynamic)container).amount_per_transfer_from_this );

			if ( Convert.ToDouble( trans ) > 0 ) {
				((Reagents)container.reagents).reaction( target, GlobalVars.INGEST );

				if ( ((Reagents)container.reagents).has_reagent( "peridaxon" ) ) {
					affected.status &= 64511;
				}
				((Ent_Static)user).visible_message( "<span class='notice'>" + user + " applies " + trans + " units of the solution to affected tissue in " + target + "'s " + affected.display_name + "</span>", new Txt( "<span class='notice'>You apply " ).item( trans ).str( " units of the solution to affected tissue in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString() );
			}
			return false;
		}

		// Function from file: other.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " starts applying medication to the affected tissue in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString(), new Txt( "You start applying medication to the affected tissue in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString() );
			((Mob_Living_Carbon_Human)target).custom_pain( "Something in your " + affected.display_name + " is causing you a lot of pain!", true );
			base.begin_step( (object)(user), (object)(target), target_zone, tool, (object)(surgery) );
			return false;
		}

		// Function from file: other.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			Obj_Item container = null;
			dynamic affected = null;

			
			if ( !( tool is Obj_Item_Weapon_ReagentContainers ) ) {
				return 0;
			}
			container = tool;

			if ( !((Reagents)container.reagents).has_reagent( "peridaxon" ) ) {
				return 0;
			}

			if ( !GlobalFuncs.hasorgans( target ) ) {
				return 0;
			}

			if ( target_zone == "mouth" || target_zone == "eyes" ) {
				return 0;
			}
			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			return Convert.ToInt32( affected.open ) == 3 && Lang13.Bool( affected.status & 1024 ) ?1:0;
		}

	}

}
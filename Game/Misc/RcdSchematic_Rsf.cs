// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RcdSchematic_Rsf : RcdSchematic {

		public Type spawn_type = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.energy_cost = 1;
			this.category = "Service";
		}

		// Function from file: service.dm
		public RcdSchematic_Rsf ( dynamic n_master = null ) : base( (object)(n_master) ) {
			Game_Data A = null;

			
			if ( !( this.spawn_type != null ) ) {
				return; // Warning! Attempt to return some other value!
			}
			A = GlobalFuncs.getFromPool( this.spawn_type );
			this.icon = ((dynamic)A).icon;
			this.icon_state = ((dynamic)A).icon_state;
			GlobalFuncs.returnToPool( A );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: service.dm
		public override dynamic attack( dynamic A = null, dynamic user = null ) {
			
			if ( !GlobalFuncs.is_type_in_list( A, new ByTable(new object [] { typeof(Obj_Structure_Table), typeof(Tile_Simulated_Floor) }) ) ) {
				return 1;
			}
			GlobalFuncs.to_chat( user, "Dispensing " + String13.ToLower( this.name ) );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( user ), "sound/machines/click.ogg", 10, 1 );
			Lang13.Call( this.spawn_type, GlobalFuncs.get_turf( A ) );
			return null;
		}

	}

}
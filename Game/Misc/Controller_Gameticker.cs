// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Controller_Gameticker : Controller {

		public int remaining_time = 0;
		public int restart_timeout = 600;
		public int current_state = 1;
		public bool hide_mode = false;
		public dynamic mode = null;
		public dynamic event_time = null;
		public bool v_event = false;
		public dynamic login_music = null;
		public ByTable minds = new ByTable();
		public string Bible_icon_state = null;
		public dynamic Bible_item_state = null;
		public string Bible_name = null;
		public string Bible_deity_name = "Space Jesus";
		public bool random_players = false;
		public bool hardcore_mode = false;
		public ByTable syndicate_coalition = new ByTable();
		public ByTable factions = new ByTable();
		public ByTable availablefactions = new ByTable();
		public int pregame_timeleft = 0;
		public int delay_end = 0;
		public bool triai = false;
		public Obj_Machinery_Media_Jukebox_Superjuke_Thematic theme = null;
		public Obj_Screen cinematic = null;

		// Function from file: scoreboard.dm
		public void scoreboard( string completions = null ) {
			dynamic handler = null;
			ByTable total_antagonists = null;
			Mind Mind = null;
			string temprole = null;
			dynamic i = null;
			Mob_Living_Carbon_Human I = null;
			Disease D = null;
			dynamic thing = null;
			Mob_Living player = null;
			dynamic T = null;
			double cashscore = 0;
			double dmgscore = 0;
			Obj_Item_Weapon_Card_Id C1 = null;
			Obj_Item_Weapon_Spacecash C2 = null;
			bool skip_power_loss = false;
			Event_GridCheck check = null;
			Obj_Machinery_Power_Apc A = null;
			Obj_Item_Weapon_Cell C = null;
			double roundlength = 0;
			Obj_Effect_Decal_Cleanable M = null;
			Obj_Item_Trash T2 = null;
			dynamic deathpoints = null;
			dynamic siliconpoints = null;
			dynamic eventpoints = null;
			dynamic escapoints = null;
			dynamic harvests = null;
			dynamic mining = null;
			dynamic meals = null;
			dynamic power = null;
			dynamic litter = null;
			int time = 0;
			dynamic messpoints = null;
			dynamic plaguepoints = null;
			dynamic killpoints = null;
			dynamic arrestpoints = null;
			dynamic arrestpoints2 = null;
			dynamic killpoints2 = null;
			dynamic comdeadpts = null;
			dynamic x = null;
			dynamic x2 = null;
			dynamic E = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( "/datum/game_mode/proc" ) )) {
				handler = _a;
				

				if ( String13.FindIgnoreCase( "" + handler, "auto_declare_completion_", 1, 0 ) != 0 ) {
					completions += "" + Lang13.Call( Lang13.BindFunc( this.mode, handler ) );
				}
			}
			completions += "<br>" + this.ert_declare_completion();
			completions += "<br>" + this.deathsquad_declare_completion();

			if ( GlobalVars.bomberman_mode ) {
				completions += "<br>" + this.bomberman_declare_completion();
			}

			if ( GlobalVars.achievements.len != 0 ) {
				completions += "<br>" + this.achievement_declare_completion();
			}
			total_antagonists = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( this.minds, typeof(Mind) )) {
				Mind = _b;
				
				temprole = Mind.special_role;

				if ( Lang13.Bool( temprole ) ) {
					Interface13.Stat( null, total_antagonists.Contains( temprole ) );

					if ( false ) {
						total_antagonists[temprole] += ", " + Mind.name + "(" + Mind.key + ")";
					} else {
						total_antagonists.Add( temprole );
						total_antagonists[temprole] += ": " + Mind.name + "(" + Mind.key + ")";
					}
				}
			}
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + "Antagonists at round end were..." ) );

			foreach (dynamic _c in Lang13.Enumerate( total_antagonists )) {
				i = _c;
				
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + i + "s" + total_antagonists[i] + "." ) ) );
			}

			foreach (dynamic _f in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Carbon_Human) )) {
				I = _f;
				

				if ( I.viruses != null ) {
					
					foreach (dynamic _d in Lang13.Enumerate( I.viruses, typeof(Disease) )) {
						D = _d;
						
						GlobalVars.score["disease"]++;
					}
				}

				if ( I.job == "Clown" ) {
					
					foreach (dynamic _e in Lang13.Enumerate( I.attack_log )) {
						thing = _e;
						

						if ( String13.FindIgnoreCase( thing, "<font color='orange'>", 1, 0 ) != 0 ) {
							GlobalVars.score["clownabuse"]++;
						}
					}
				}
			}

			foreach (dynamic _i in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living) )) {
				player = _i;
				

				if ( player.stat != 2 ) {
					T = GlobalFuncs.get_turf( player );

					if ( !Lang13.Bool( T ) ) {
						continue;
					}

					if ( T.loc is Zone_Shuttle_Escape_Centcom || T.loc is Zone_Shuttle_EscapePod1_Centcom || T.loc is Zone_Shuttle_EscapePod2_Centcom || T.loc is Zone_Shuttle_EscapePod3_Centcom || T.loc is Zone_Shuttle_EscapePod5_Centcom ) {
						GlobalVars.score["escapees"]++;
						cashscore = 0;
						dmgscore = 0;

						foreach (dynamic _g in Lang13.Enumerate( GlobalFuncs.get_contents_in_object( player, typeof(Obj_Item_Weapon_Card_Id) ), typeof(Obj_Item_Weapon_Card_Id) )) {
							C1 = _g;
							
							cashscore += Convert.ToDouble( C1.GetBalance() );
						}

						foreach (dynamic _h in Lang13.Enumerate( GlobalFuncs.get_contents_in_object( player, typeof(Obj_Item_Weapon_Spacecash) ), typeof(Obj_Item_Weapon_Spacecash) )) {
							C2 = _h;
							
							cashscore += ( C2.amount ??0) * C2.worth;
						}

						if ( cashscore > Convert.ToDouble( GlobalVars.score["richestcash"] ) ) {
							GlobalVars.score["richestcash"] = cashscore;
							GlobalVars.score["richestname"] = player.real_name;
							GlobalVars.score["richestjob"] = player.job;
							GlobalVars.score["richestkey"] = player.key;
						}
						dmgscore = player.bruteloss + player.fireloss + Convert.ToDouble( player.toxloss ) + Convert.ToDouble( player.oxyloss );

						if ( dmgscore > Convert.ToDouble( GlobalVars.score["dmgestdamage"] ) ) {
							GlobalVars.score["dmgestdamage"] = dmgscore;
							GlobalVars.score["dmgestname"] = player.real_name;
							GlobalVars.score["dmgestjob"] = player.job;
							GlobalVars.score["dmgestkey"] = player.key;
						}
					}
				}
			}
			skip_power_loss = false;

			foreach (dynamic _j in Lang13.Enumerate( GlobalVars.events, typeof(Event_GridCheck) )) {
				check = _j;
				

				if ( check.activeFor > check.startWhen && check.activeFor < check.endWhen ) {
					skip_power_loss = true;
				}
			}

			if ( !skip_power_loss ) {
				
				foreach (dynamic _l in Lang13.Enumerate( GlobalVars.power_machines, typeof(Obj_Machinery_Power_Apc) )) {
					A = _l;
					

					if ( A.z != GlobalVars.map.zMainStation ) {
						continue;
					}

					foreach (dynamic _k in Lang13.Enumerate( A.contents, typeof(Obj_Item_Weapon_Cell) )) {
						C = _k;
						

						if ( C.percent() < 30 ) {
							GlobalVars.score["powerloss"]++;
						}
					}
				}
			}
			roundlength = Game13.time / 10;
			GlobalVars.score["time"] = Num13.Floor( roundlength );

			foreach (dynamic _m in Lang13.Enumerate( GlobalVars.decals, typeof(Obj_Effect_Decal_Cleanable) )) {
				M = _m;
				

				if ( M.z != GlobalVars.map.zMainStation ) {
					continue;
				}

				if ( M.messcheck() ) {
					GlobalVars.score["mess"]++;
				}
			}

			foreach (dynamic _n in Lang13.Enumerate( GlobalVars.trash_items, typeof(Obj_Item_Trash) )) {
				T2 = _n;
				

				if ( T2.z != GlobalVars.map.zMainStation ) {
					continue;
				}
				GlobalVars.score["litter"]++;
			}
			deathpoints = GlobalVars.score["deadcrew"] * 250;
			siliconpoints = GlobalVars.score["deadsilicon"] * 500;
			eventpoints = GlobalVars.score["eventsendured"] * 200;
			escapoints = GlobalVars.score["escapees"] * 100;
			harvests = GlobalVars.score["stuffharvested"];
			mining = GlobalVars.score["oremined"];
			meals = GlobalVars.score["meals"] * 5;
			power = GlobalVars.score["powerloss"] * 50;
			litter = GlobalVars.score["litter"];
			time = Num13.Floor( Convert.ToDouble( GlobalVars.score["time"] * 0.2 ) );
			messpoints = null;

			if ( Lang13.Bool( GlobalVars.score["mess"] ) != false ) {
				messpoints = GlobalVars.score["mess"];
			}
			plaguepoints = GlobalVars.score["disease"] * 50;

			if ( GlobalVars.ticker.mode.config_tag == "nuclear" ) {
				
				if ( Lang13.Bool( GlobalVars.score["disc"] ) ) {
					GlobalVars.score["crewscore"] += 500;
				}
				killpoints = GlobalVars.score["opkilled"] * 250;
				arrestpoints = GlobalVars.score["arrested"] * 1000;
				GlobalVars.score["crewscore"] += killpoints;
				GlobalVars.score["crewscore"] += arrestpoints;
			}

			if ( GlobalVars.ticker.mode.config_tag == "revolution" ) {
				arrestpoints2 = GlobalVars.score["arrested"] * 1000;
				killpoints2 = GlobalVars.score["opkilled"] * 500;
				comdeadpts = GlobalVars.score["deadcommand"] * 500;

				if ( Lang13.Bool( GlobalVars.score["traitorswon"] ) ) {
					GlobalVars.score["crewscore"] -= 10000;
				}
				GlobalVars.score["crewscore"] += arrestpoints2;
				GlobalVars.score["crewscore"] += killpoints2;
				GlobalVars.score["crewscore"] -= comdeadpts;
			}
			GlobalVars.score["crewscore"] += harvests;
			GlobalVars.score["crewscore"] += mining;
			GlobalVars.score["crewscore"] += eventpoints;
			GlobalVars.score["crewscore"] += escapoints;
			GlobalVars.score["crewscore"] += meals;
			GlobalVars.score["crewscore"] += time;

			if ( !Lang13.Bool( power ) ) {
				GlobalVars.score["crewscore"] += 2500;
				GlobalVars.score["powerbonus"] = 1;
			}

			if ( !Lang13.Bool( messpoints ) && !Lang13.Bool( litter ) ) {
				GlobalVars.score["crewscore"] += 10000;
				GlobalVars.score["messbonus"] = 1;
			}

			if ( Lang13.Bool( GlobalVars.score["allarrested"] ) ) {
				GlobalVars.score["crewscore"] *= 3;
			}
			GlobalVars.score["crewscore"] -= deathpoints;
			GlobalVars.score["crewscore"] -= siliconpoints;

			if ( Lang13.Bool( GlobalVars.score["deadaipenalty"] ) ) {
				GlobalVars.score["crewscore"] -= 1000;
			}
			GlobalVars.score["crewscore"] -= power;
			GlobalVars.score["crewscore"] -= messpoints;
			GlobalVars.score["crewscore"] -= litter;
			GlobalVars.score["crewscore"] -= plaguepoints;
			GlobalVars.score["arenafights"] = GlobalVars.arena_rounds;
			GlobalVars.arena_top_score = false;

			foreach (dynamic _o in Lang13.Enumerate( GlobalVars.arena_leaderboard )) {
				x = _o;
				

				if ( Convert.ToDouble( GlobalVars.arena_leaderboard[x] ) > ( GlobalVars.arena_top_score ?1:0) ) {
					GlobalVars.arena_top_score = Lang13.Bool( GlobalVars.arena_leaderboard[x] );
				}
			}

			foreach (dynamic _p in Lang13.Enumerate( GlobalVars.arena_leaderboard )) {
				x2 = _p;
				

				if ( Lang13.Bool( GlobalVars.arena_leaderboard[x2] ) == GlobalVars.arena_top_score ) {
					GlobalVars.score["arenabest"] += "" + x2 + " ";
				}
			}
			GlobalFuncs.to_chat( typeof(Game13), "<b>The crew's final score is:</b>" );
			GlobalFuncs.to_chat( typeof(Game13), "<b><font size='4'>" + GlobalVars.score["crewscore"] + "</font></b>" );

			foreach (dynamic _q in Lang13.Enumerate( GlobalVars.player_list )) {
				E = _q;
				

				if ( Lang13.Bool( E.client ) ) {
					((Mob)E).scorestats( completions );
					Interface13.WindowSet( E.client, "rpane.round_end", "is-visible=true" );
				}
			}
			return;
		}

		// Function from file: gameticker.dm
		public string achievement_declare_completion(  ) {
			string text = null;
			Icon cup = null;
			int tempstate = 0;
			dynamic winner = null;

			text = "<br><FONT size = 5><b>Additionally, the following players earned achievements:</b></FONT>";
			cup = new Icon( "icons/obj/drinks.dmi", "golden_cup" );
			GlobalVars.end_icons.Add( cup );
			tempstate = GlobalVars.end_icons.len;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.achievements )) {
				winner = _a;
				
				text += "<br><img src=\"logo_" + tempstate + ".png\"> " + winner;
			}
			return text;
		}

		// Function from file: gameticker.dm
		public string bomberman_declare_completion(  ) {
			Icon bomberhead = null;
			int tempstatebomberhead = 0;
			Icon bronze = null;
			int tempstatebronze = 0;
			Icon silver = null;
			int tempstatesilver = 0;
			Icon gold = null;
			int tempstategold = 0;
			Icon platinum = null;
			int tempstateplatinum = 0;
			ByTable bronze_tier = null;
			Mob_Living_Carbon M = null;
			ByTable silver_tier = null;
			dynamic M2 = null;
			ByTable gold_tier = null;
			dynamic M3 = null;
			dynamic T = null;
			ByTable platinum_tier = null;
			Mob_Living_Carbon_Human M4 = null;
			dynamic C1 = null;
			dynamic C2 = null;
			ByTable special_tier = null;
			Mob_Living_Silicon_Robot_Mommi M5 = null;
			string text = null;
			dynamic M6 = null;
			Icon flat = null;
			int tempstate = 0;
			dynamic M7 = null;
			Icon flat2 = null;
			int tempstate2 = 0;
			dynamic M8 = null;
			Icon flat3 = null;
			int tempstate3 = 0;
			dynamic M9 = null;
			Icon flat4 = null;
			int tempstate4 = 0;
			dynamic M10 = null;
			Icon flat5 = null;
			int tempstate5 = 0;

			bomberhead = new Icon( "icons/obj/clothing/hats.dmi", "bomberman" );
			GlobalVars.end_icons.Add( bomberhead );
			tempstatebomberhead = GlobalVars.end_icons.len;
			bronze = new Icon( "icons/obj/bomberman.dmi", "bronze" );
			GlobalVars.end_icons.Add( bronze );
			tempstatebronze = GlobalVars.end_icons.len;
			silver = new Icon( "icons/obj/bomberman.dmi", "silver" );
			GlobalVars.end_icons.Add( silver );
			tempstatesilver = GlobalVars.end_icons.len;
			gold = new Icon( "icons/obj/bomberman.dmi", "gold" );
			GlobalVars.end_icons.Add( gold );
			tempstategold = GlobalVars.end_icons.len;
			platinum = new Icon( "icons/obj/bomberman.dmi", "platinum" );
			GlobalVars.end_icons.Add( platinum );
			tempstateplatinum = GlobalVars.end_icons.len;
			bronze_tier = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon) )) {
				M = _a;
				

				if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Item_Weapon_Bomberman), M ) ) ) {
					bronze_tier.Add( M );
				}
			}
			silver_tier = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( bronze_tier )) {
				M2 = _b;
				

				if ( Convert.ToInt32( M2.z ) == GlobalVars.map.zCentcomm ) {
					silver_tier.Add( M2 );
					bronze_tier.Remove( M2 );
				}
			}
			gold_tier = new ByTable();

			foreach (dynamic _c in Lang13.Enumerate( silver_tier )) {
				M3 = _c;
				
				T = GlobalFuncs.get_turf( M3 );

				if ( T.loc is Zone_Shuttle_Escape_Centcom ) {
					gold_tier.Add( M3 );
					silver_tier.Remove( M3 );
				}
			}
			platinum_tier = new ByTable();

			foreach (dynamic _d in Lang13.Enumerate( gold_tier, typeof(Mob_Living_Carbon_Human) )) {
				M4 = _d;
				

				if ( M4.wear_suit is Obj_Item_Clothing_Suit_Space_Bomberman && M4.head is Obj_Item_Clothing_Head_Helmet_Space_Bomberman ) {
					C1 = M4.wear_suit;
					C2 = M4.head;

					if ( Lang13.Bool( C1.never_removed ) && Lang13.Bool( C2.never_removed ) ) {
						platinum_tier.Add( M4 );
						gold_tier.Remove( M4 );
					}
				}
			}
			special_tier = new ByTable();

			foreach (dynamic _e in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Silicon_Robot_Mommi) )) {
				M5 = _e;
				

				if ( M5.head_state is Obj_Item_Clothing_Head_Helmet_Space_Bomberman && M5.tool_state is Obj_Item_Weapon_Bomberman ) {
					special_tier.Add( M5 );
				}
			}
			text = "<img src=\"logo_" + tempstatebomberhead + ".png\"> <font size=5><b>Bomberman Mode Results</b></font> <img src=\"logo_" + tempstatebomberhead + ".png\">";

			if ( !( platinum_tier.len != 0 ) && !( gold_tier.len != 0 ) && !( silver_tier.len != 0 ) && !( bronze_tier.len != 0 ) ) {
				text += "<br><span class='danger'>DRAW!</span>";
			}

			if ( platinum_tier.len != 0 ) {
				text += "<br><img src=\"logo_" + tempstateplatinum + ".png\"> <b>Platinum Trophy</b> (never removed his clothes, kept his bomb dispenser until the end, and escaped on the shuttle):";

				foreach (dynamic _f in Lang13.Enumerate( platinum_tier )) {
					M6 = _f;
					
					flat = GlobalFuncs.getFlatIcon( M6, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat );
					tempstate = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate + ".png\"> <b>" + M6.key + "</b> as <b>" + M6.real_name + "</b>";
				}
			}

			if ( gold_tier.len != 0 ) {
				text += "<br><img src=\"logo_" + tempstategold + ".png\"> <b>Gold Trophy</b> (kept his bomb dispenser until the end, and escaped on the shuttle):";

				foreach (dynamic _g in Lang13.Enumerate( gold_tier )) {
					M7 = _g;
					
					flat2 = GlobalFuncs.getFlatIcon( M7, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat2 );
					tempstate2 = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate2 + ".png\"> <b>" + M7.key + "</b> as <b>" + M7.real_name + "</b>";
				}
			}

			if ( silver_tier.len != 0 ) {
				text += "<br><img src=\"logo_" + tempstatesilver + ".png\"> <b>Silver Trophy</b> (kept his bomb dispenser until the end, and escaped in a pod):";

				foreach (dynamic _h in Lang13.Enumerate( silver_tier )) {
					M8 = _h;
					
					flat3 = GlobalFuncs.getFlatIcon( M8, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat3 );
					tempstate3 = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate3 + ".png\"> <b>" + M8.key + "</b> as <b>" + M8.real_name + "</b>";
				}
			}

			if ( bronze_tier.len != 0 ) {
				text += "<br><img src=\"logo_" + tempstatebronze + ".png\"> <b>Bronze Trophy</b> (kept his bomb dispenser until the end):";

				foreach (dynamic _i in Lang13.Enumerate( bronze_tier )) {
					M9 = _i;
					
					flat4 = GlobalFuncs.getFlatIcon( M9, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat4 );
					tempstate4 = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate4 + ".png\"> <b>" + M9.key + "</b> as <b>" + M9.real_name + "</b>";
				}
			}

			if ( special_tier.len != 0 ) {
				text += "<br><b>Special Mention</b> to those adorable MoMMis:";

				foreach (dynamic _j in Lang13.Enumerate( special_tier )) {
					M10 = _j;
					
					flat5 = GlobalFuncs.getFlatIcon( M10, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat5 );
					tempstate5 = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate5 + ".png\"> <b>" + M10.key + "</b> as <b>" + M10.name + "</b>";
				}
			}
			return text;
		}

		// Function from file: gameticker.dm
		public string deathsquad_declare_completion(  ) {
			string text = null;
			Icon logo = null;
			int tempstate = 0;
			Mind deathsquad = null;
			Icon flat = null;
			Icon sprotch = null;

			text = "";

			if ( GlobalVars.ticker.mode.deathsquad.len != 0 ) {
				logo = new Icon( "icons/mob/mob.dmi", "death-logo" );
				GlobalVars.end_icons.Add( logo );
				tempstate = GlobalVars.end_icons.len;
				text += "<br><img src=\"logo_" + tempstate + ".png\"> <FONT size = 2><B>The death commando were:</B></FONT> <img src=\"logo_" + tempstate + ".png\">";

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.deathsquad, typeof(Mind) )) {
					deathsquad = _a;
					

					if ( Lang13.Bool( deathsquad.current ) ) {
						flat = GlobalFuncs.getFlatIcon( deathsquad.current, GlobalVars.SOUTH, 1, true );
						GlobalVars.end_icons.Add( flat );
						tempstate = GlobalVars.end_icons.len;
						text += "<br><img src=\"logo_" + tempstate + ".png\"> <b>" + deathsquad.key + "</b> was <b>" + deathsquad.name + "</b> (";

						if ( Convert.ToInt32( deathsquad.current.stat ) == 2 ) {
							text += "died";
							flat.Turn( 90 );
							GlobalVars.end_icons[tempstate] = flat;
						} else {
							text += "survived";
						}

						if ( deathsquad.current.real_name != deathsquad.name ) {
							text += " as " + deathsquad.current.real_name;
						}
					} else {
						sprotch = new Icon( "icons/effects/blood.dmi", "floor1-old" );
						GlobalVars.end_icons.Add( sprotch );
						tempstate = GlobalVars.end_icons.len;
						text += "<br><img src=\"logo_" + tempstate + ".png\"> " + deathsquad.key + " was " + deathsquad.name + " (";
						text += "body destroyed";
					}
					text += ")";
				}
				text += "<BR><HR>";
			}
			return text;
		}

		// Function from file: gameticker.dm
		public string ert_declare_completion(  ) {
			string text = null;
			Icon logo = null;
			int tempstate = 0;
			Mind ert = null;
			Icon flat = null;
			Icon sprotch = null;

			text = "";

			if ( GlobalVars.ticker.mode.ert.len != 0 ) {
				logo = new Icon( "icons/mob/mob.dmi", "ert-logo" );
				GlobalVars.end_icons.Add( logo );
				tempstate = GlobalVars.end_icons.len;
				text += "<br><img src=\"logo_" + tempstate + ".png\"> <FONT size = 2><B>The emergency responders were:</B></FONT> <img src=\"logo_" + tempstate + ".png\">";

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.ert, typeof(Mind) )) {
					ert = _a;
					

					if ( Lang13.Bool( ert.current ) ) {
						flat = GlobalFuncs.getFlatIcon( ert.current, GlobalVars.SOUTH, 1, true );
						GlobalVars.end_icons.Add( flat );
						tempstate = GlobalVars.end_icons.len;
						text += "<br><img src=\"logo_" + tempstate + ".png\"> <b>" + ert.key + "</b> was <b>" + ert.name + "</b> (";

						if ( Convert.ToInt32( ert.current.stat ) == 2 ) {
							text += "died";
							flat.Turn( 90 );
							GlobalVars.end_icons[tempstate] = flat;
						} else {
							text += "survived";
						}

						if ( ert.current.real_name != ert.name ) {
							text += " as " + ert.current.real_name;
						}
					} else {
						sprotch = new Icon( "icons/effects/blood.dmi", "floor1-old" );
						GlobalVars.end_icons.Add( sprotch );
						tempstate = GlobalVars.end_icons.len;
						text += "<br><img src=\"logo_" + tempstate + ".png\"> " + ert.key + " was " + ert.name + " (";
						text += "body destroyed";
					}
					text += ")";
				}
				text += "<BR><HR>";
			}
			return text;
		}

		// Function from file: gameticker.dm
		public bool declare_completion(  ) {
			string ai_completions = null;
			Mob_Living_Silicon_Ai ai = null;
			Icon flat = null;
			int tempstate = 0;
			string robolist = null;
			Mob_Living_Silicon_Robot robo = null;
			Mob_Living_Silicon_Robot robo2 = null;
			Icon flat2 = null;
			int tempstate2 = 0;
			Mob_Living_Silicon_Pai pAI = null;
			Icon flat3 = null;
			int tempstate3 = 0;

			ai_completions = "<h1>Round End Information</h1><HR>";
			ai_completions += "<h3>Silicons Laws</h3>";

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Ai) )) {
				ai = _b;
				
				flat = GlobalFuncs.getFlatIcon( ai );
				GlobalVars.end_icons.Add( flat );
				tempstate = GlobalVars.end_icons.len;

				if ( ai.stat != 2 ) {
					ai_completions += "<br><b><img src=\"logo_" + tempstate + ".png\"> " + ai.name + " (Played by: " + ai.key + ")'s laws at the end of the game were:</b>";
				} else {
					ai_completions += "<br><b><img src=\"logo_" + tempstate + ".png\"> " + ai.name + " (Played by: " + ai.key + ")'s laws when it was deactivated were:</b>";
				}
				ai_completions += "<br>" + ai.write_laws();

				if ( ai.connected_robots.len != 0 ) {
					robolist = "<br><b>The AI's loyal minions were:</b> ";

					foreach (dynamic _a in Lang13.Enumerate( ai.connected_robots, typeof(Mob_Living_Silicon_Robot) )) {
						robo = _a;
						

						if ( !( robo.connected_ai != null ) || !( robo is Mob_Living_Silicon_Robot_Mommi ) ) {
							continue;
						}
						robolist += "" + robo.name + ( Lang13.Bool( robo.stat ) ? " (Deactivated) (Played by: " + robo.key + "), " : " (Played by: " + robo.key + "), " );
					}
					ai_completions += "" + robolist;
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Robot) )) {
				robo2 = _c;
				

				if ( !( robo2 != null ) ) {
					continue;
				}
				flat2 = GlobalFuncs.getFlatIcon( robo2 );
				GlobalVars.end_icons.Add( flat2 );
				tempstate2 = GlobalVars.end_icons.len;

				if ( !( robo2.connected_ai != null ) ) {
					
					if ( robo2.stat != 2 ) {
						ai_completions += "<br><b><img src=\"logo_" + tempstate2 + ".png\"> " + robo2.name + " (Played by: " + robo2.key + ") survived as an AI-less " + ( robo2 is Mob_Living_Silicon_Robot_Mommi ? "MoMMI" : "borg" ) + "! Its laws were:</b>";
					} else {
						ai_completions += "<br><b><img src=\"logo_" + tempstate2 + ".png\"> " + robo2.name + " (Played by: " + robo2.key + ") was unable to survive the rigors of being a " + ( robo2 is Mob_Living_Silicon_Robot_Mommi ? "MoMMI" : "cyborg" ) + " without an AI. Its laws were:</b>";
					}
				} else {
					ai_completions += "<br><b><img src=\"logo_" + tempstate2 + ".png\"> " + robo2.name + " (Played by: " + robo2.key + ") " + ( robo2.stat != 2 ? "survived" : "perished" ) + " as a " + ( robo2 is Mob_Living_Silicon_Robot_Mommi ? "MoMMI" : "cyborg" ) + " slaved to " + robo2.connected_ai + "! Its laws were:</b>";
				}
				ai_completions += "<br>" + robo2.write_laws();
			}

			foreach (dynamic _d in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Pai) )) {
				pAI = _d;
				
				flat3 = null;
				flat3 = GlobalFuncs.getFlatIcon( pAI );
				GlobalVars.end_icons.Add( flat3 );
				tempstate3 = GlobalVars.end_icons.len;
				ai_completions += "<br><b><img src=\"logo_" + tempstate3 + ".png\"> " + pAI.name + " (Played by: " + pAI.key + ") " + ( pAI.stat != 2 ? "survived" : "perished" ) + " as a pAI whose master was " + pAI.master + "! Its directives were:</b><br>" + pAI.write_directives();
			}
			((GameMode)this.mode).declare_completion();
			ai_completions += "<HR><BR><h2>Mode Result</h2>";
			this.scoreboard( ai_completions );
			return true;
		}

		// Function from file: gameticker.dm
		public void init_minesweeper_leaderboard(  ) {
			GlobalVars.minesweeper_station_highscores["beginner"] = 999;
			GlobalVars.minesweeper_station_highscores["intermediate"] = 999;
			GlobalVars.minesweeper_station_highscores["expert"] = 999;
			GlobalVars.minesweeper_best_players["beginner"] = "none";
			GlobalVars.minesweeper_best_players["intermediate"] = "none";
			GlobalVars.minesweeper_best_players["expert"] = "none";
			return;
		}

		// Function from file: gameticker.dm
		public void init_snake_leaderboard(  ) {
			int? x = null;
			dynamic templist1 = null;
			dynamic templist2 = null;
			int? y = null;

			x = null;
			x = 1;

			while (( x ??0) <= 9) {
				GlobalVars.snake_station_highscores.Add( x );
				GlobalVars.snake_station_highscores[x] = new ByTable();
				GlobalVars.snake_best_players.Add( x );
				GlobalVars.snake_best_players[x] = new ByTable();
				templist1 = GlobalVars.snake_station_highscores[x];
				templist2 = GlobalVars.snake_best_players[x];
				y = null;
				y = 1;

				while (( y ??0) <= 8) {
					templist1 += y;
					templist1[y] = 0;
					templist2 += y;
					templist2[y] = "none";
					y++;
				}
				x++;
			}
			return;
		}

		// Function from file: gameticker.dm
		public void init_PDAgames_leaderboard(  ) {
			this.init_snake_leaderboard();
			this.init_minesweeper_leaderboard();
			return;
		}

		// Function from file: gameticker.dm
		public Faction getfactionbyname( string name = null ) {
			Faction F = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.factions, typeof(Faction) )) {
				F = _a;
				

				if ( F.name == name ) {
					return F;
				}
			}
			return null;
		}

		// Function from file: gameticker.dm
		public bool process(  ) {
			bool force_round_end = false;
			bool mode_finished = false;
			string options = null;
			ByTable maps = null;
			ByTable choices = null;
			dynamic key = null;
			dynamic mapname = null;

			
			if ( this.current_state != 3 ) {
				return false;
			}
			this.mode.process();

			if ( Game13.time > GlobalVars.nanocoins_lastchange ) {
				GlobalVars.nanocoins_lastchange = Game13.time + Rand13.Int( 3000, 15000 );
				GlobalVars.nanocoins_rates = Rand13.Int( 1, 30 ) / 10;
			}
			GlobalVars.watchdog.check_for_update();
			force_round_end = false;

			if ( GlobalVars.watchdog.waiting && GlobalVars.player_list.len == 0 ) {
				force_round_end = true;
			}
			mode_finished = ((GameMode)this.mode).check_finished() || GlobalVars.emergency_shuttle.location == 2 && GlobalVars.emergency_shuttle.alert || force_round_end;

			if ( !this.mode.explosion_in_progress && mode_finished ) {
				this.current_state = 4;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.declare_completion();

					if ( GlobalVars.config.map_voting ) {
						GlobalVars.vote.initiate_vote( "map", "The Server", true, true );
						options = GlobalFuncs.list2text( GlobalVars.vote.choices, " " );
						GlobalFuncs.feedback_set( "map vote choices", options );
					} else {
						maps = GlobalFuncs.get_maps();
						choices = new ByTable();

						foreach (dynamic _a in Lang13.Enumerate( maps )) {
							key = _a;
							
							choices.Add( key );
						}
						mapname = Rand13.PickFromTable( choices );
						GlobalVars.vote.chosen_map = maps[mapname];
						GlobalVars.watchdog.chosen_map = String13.SubStr( mapname, 1, Lang13.Length( mapname ) );
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "Server chose " + GlobalVars.watchdog.chosen_map + "!" ) ) );
					}
					return;
				}));
				Task13.Schedule( 50, (Task13.Closure)(() => {
					
					if ( this.mode.station_was_nuked ) {
						GlobalFuncs.feedback_set_details( "end_proper", "nuke" );

						if ( !( this.delay_end != 0 ) && !GlobalVars.watchdog.waiting ) {
							GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>Rebooting due to destruction of station in " + 60 + " seconds</B></span>" );
						}
					} else {
						GlobalFuncs.feedback_set_details( "end_proper", "ÿcompletion" );

						if ( !( this.delay_end != 0 ) && !GlobalVars.watchdog.waiting ) {
							GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>Restarting in " + 60 + " seconds</B></span>" );
						}
					}

					if ( GlobalVars.blackbox != null ) {
						
						if ( GlobalVars.config.map_voting ) {
							Task13.Schedule( 601, (Task13.Closure)(() => {
								GlobalVars.blackbox.save_all_data_to_sql();
								return;
							}));
						} else {
							GlobalVars.blackbox.save_all_data_to_sql();
						}
					}

					if ( GlobalVars.watchdog.waiting ) {
						GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>Server will shut down for an automatic update in " + ( GlobalVars.config.map_voting ? "" + 60 + " seconds." : "a few seconds." ) + "</B></span>" );

						if ( GlobalVars.config.map_voting ) {
							Task13.Sleep( GlobalVars.restart_timeout );
						}

						if ( !( this.delay_end != 0 ) ) {
							GlobalVars.watchdog.signal_ready();
						} else {
							GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>An admin has delayed the round end</B></span>" );
							this.delay_end = 2;
						}
					} else if ( !( this.delay_end != 0 ) ) {
						Task13.Sleep( GlobalVars.restart_timeout );

						if ( !( this.delay_end != 0 ) ) {
							GlobalFuncs.CallHook( "Reboot", new ByTable() );
							Game13.Reboot();
						} else {
							GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>An admin has delayed the round end</B></span>" );
							this.delay_end = 2;
						}
					} else {
						GlobalFuncs.to_chat( typeof(Game13), "<span class='notice'><B>An admin has delayed the round end</B></span>" );
						this.delay_end = 2;
					}
					return;
				}));
			}
			return true;
		}

		// Function from file: gameticker.dm
		public void equip_characters(  ) {
			bool captainless = false;
			Mob_Living_Carbon_Human player = null;
			Mob_NewPlayer M = null;
			Mob_NewPlayer M2 = null;

			captainless = true;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Human) )) {
				player = _a;
				

				if ( player != null && player.mind != null && Lang13.Bool( player.mind.assigned_role ) ) {
					
					if ( player.mind.assigned_role == "Captain" ) {
						captainless = false;
					}

					if ( player.mind.assigned_role != "MODE" ) {
						GlobalVars.job_master.EquipRank( player, player.mind.assigned_role, false );
						GlobalFuncs.EquipCustomItems( player );
					}
				}
			}

			if ( captainless ) {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_NewPlayer) )) {
					M = _b;
					
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_NewPlayer) )) {
				M2 = _c;
				
			}
			return;
		}

		// Function from file: gameticker.dm
		public void collect_minds(  ) {
			Mob_Living player = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living) )) {
				player = _a;
				

				if ( player.mind != null ) {
					GlobalVars.ticker.minds.Add( player.mind );
				}
			}
			return;
		}

		// Function from file: gameticker.dm
		public void create_characters(  ) {
			Mob_NewPlayer player = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_NewPlayer) )) {
				player = _a;
				

				if ( player.ready && player.mind != null ) {
					
					if ( player.mind.assigned_role == "AI" ) {
						player.close_spawn_windows();
						player.AIize();
					} else if ( !Lang13.Bool( player.mind.assigned_role ) ) {
						continue;
					} else {
						player.FuckUpGenes( player.create_character() );
						GlobalFuncs.qdel( player );
					}
				}
			}
			return;
		}

		// Function from file: gameticker.dm
		public void station_explosion_cinematic( dynamic station_missed = null, dynamic _override = null ) {
			station_missed = station_missed ?? 0;

			HtmlInterface hi = null;
			Obj_Structure_Bed temp_buckle = null;
			Mob_Living M = null;
			Mob_Living M2 = null;
			dynamic T = null;
			Mob_Living M3 = null;
			dynamic T2 = null;

			
			if ( this.cinematic != null ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.html_interfaces, typeof(HtmlInterface) )) {
				hi = _a;
				
				hi.closeAll();
			}
			this.cinematic = new Obj_Screen( this );
			this.cinematic.icon = "icons/effects/station_explosion.dmi";
			this.cinematic.icon_state = "station_intact";
			this.cinematic.layer = 20;
			this.cinematic.mouse_opacity = 0;
			this.cinematic.screen_loc = "1,0";
			temp_buckle = new Obj_Structure_Bed( this );

			if ( Lang13.Bool( station_missed ) ) {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living) )) {
					M = _b;
					
					M.locked_to = temp_buckle;

					if ( M.client != null ) {
						M.client.screen.Add( this.cinematic );
					}
				}
			} else {
				
				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living) )) {
					M2 = _d;
					
					M2.locked_to = temp_buckle;

					if ( M2.client != null ) {
						M2.client.screen.Add( this.cinematic );
					}

					switch ((int)( M2.z )) {
						case 0:
							T = GlobalFuncs.get_turf( M2 );

							if ( Lang13.Bool( T ) && Lang13.Bool( T.z ) == true ) {
								M2.nuke_act();
							}
							break;
						case 1:
							M2.nuke_act();
							break;
					}
				}
			}

			dynamic _h = station_missed; // Was a switch-case, sorry for the mess.
			if ( _h==1 ) {
				
				if ( Lang13.Bool( this.mode ) && !Lang13.Bool( _override ) ) {
					_override = this.mode.name;
				}

				dynamic _e = _override; // Was a switch-case, sorry for the mess.
				if ( _e=="nuclear emergency" ) {
					Icon13.Flick( "intro_nuke", this.cinematic );
					Task13.Sleep( 35 );
					Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
					Icon13.Flick( "station_intact_fade_red", this.cinematic );
					this.cinematic.icon_state = "summary_nukefail";
				} else {
					Icon13.Flick( "intro_nuke", this.cinematic );
					Task13.Sleep( 35 );
					Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
				}
			} else if ( _h==2 ) {
				Task13.Sleep( 50 );
				Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
			} else {
				
				if ( Lang13.Bool( this.mode ) && !Lang13.Bool( _override ) ) {
					_override = this.mode.name;
				}

				dynamic _f = _override; // Was a switch-case, sorry for the mess.
				if ( _f=="nuclear emergency" ) {
					Icon13.Flick( "intro_nuke", this.cinematic );
					Task13.Sleep( 35 );
					Icon13.Flick( "station_explode_fade_red", this.cinematic );
					Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
					this.cinematic.icon_state = "summary_nukewin";
				} else if ( _f=="AI malfunction" ) {
					Icon13.Flick( "intro_malf", this.cinematic );
					Task13.Sleep( 76 );
					Icon13.Flick( "station_explode_fade_red", this.cinematic );
					Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
					this.cinematic.icon_state = "summary_malf";
				} else {
					Icon13.Flick( "intro_nuke", this.cinematic );
					Task13.Sleep( 35 );
					Icon13.Flick( "station_explode_fade_red", this.cinematic );
					Game13.WriteMsg( new Sound( "sound/effects/explosionfar.ogg" ) );
					this.cinematic.icon_state = "summary_selfdes";
				}

				foreach (dynamic _g in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living) )) {
					M3 = _g;
					

					if ( M3 != null ) {
						T2 = GlobalFuncs.get_turf( M3 );

						if ( Lang13.Bool( T2 ) && Lang13.Bool( T2.z ) == true ) {
							M3.death();
						}
					}
				}
			}
			Task13.Sleep( 300 );

			if ( this.cinematic != null ) {
				GlobalFuncs.qdel( this.cinematic );
			}

			if ( temp_buckle != null ) {
				GlobalFuncs.qdel( temp_buckle );
			}
			return;
		}

		// Function from file: gameticker.dm
		public bool setup(  ) {
			ByTable runnable_modes = null;
			dynamic M = null;
			Type mtype = null;
			bool can_continue = false;
			dynamic modes = null;
			GameMode M2 = null;
			Obj_Effect_Landmark_Start S = null;
			ByTable L = null;
			Obj_Effect_Landmark_Spacepod_Random SS = null;
			dynamic S2 = null;
			dynamic obj = null;
			ByTable welcome_sentence = null;
			dynamic sound = null;

			
			if ( GlobalVars.master_mode == "secret" ) {
				this.hide_mode = true;
			}

			if ( GlobalVars.master_mode == "random" || GlobalVars.master_mode == "secret" ) {
				runnable_modes = GlobalVars.config.get_runnable_modes();

				if ( runnable_modes.len == 0 ) {
					this.current_state = 1;
					GlobalFuncs.to_chat( typeof(Game13), "<B>Unable to choose playable game mode.</B> Reverting to pre-game lobby." );
					return false;
				}

				if ( GlobalVars.secret_force_mode != "secret" ) {
					M = GlobalVars.config.pick_mode( GlobalVars.secret_force_mode );

					if ( ((GameMode)M).can_start() ) {
						this.mode = GlobalVars.config.pick_mode( GlobalVars.secret_force_mode );
					}
				}
				GlobalVars.job_master.ResetOccupations();

				if ( !Lang13.Bool( this.mode ) ) {
					this.mode = GlobalFuncs.pickweight( runnable_modes );
				}

				if ( Lang13.Bool( this.mode ) ) {
					mtype = this.mode.type;
					this.mode = Lang13.Call( mtype );
				}
			} else {
				this.mode = GlobalVars.config.pick_mode( GlobalVars.master_mode );
			}

			if ( !((GameMode)this.mode).can_start() ) {
				GlobalFuncs.to_chat( typeof(Game13), "<B>Unable to start " + this.mode.name + ".</B> Not enough players, " + this.mode.required_players + " players needed. Reverting to pre-game lobby." );
				Lang13.Delete( this.mode );
				this.mode = null;
				this.current_state = 1;
				GlobalVars.job_master.ResetOccupations();
				return false;
			}
			GlobalVars.job_master.DivideOccupations();
			can_continue = ((GameMode)this.mode).pre_setup();

			if ( !can_continue ) {
				this.current_state = 1;
				GlobalFuncs.to_chat( typeof(Game13), "<B>Error setting up " + GlobalVars.master_mode + ".</B> Reverting to pre-game lobby." );
				GlobalFuncs.log_admin( "The gamemode setup for " + this.mode.name + " errored out." );
				Game13.log.WriteMsg( "The gamemode setup for " + this.mode.name + " errored out." );
				Lang13.Delete( this.mode );
				this.mode = null;
				GlobalVars.job_master.ResetOccupations();
				return false;
			}

			if ( this.hide_mode ) {
				modes = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( runnable_modes, typeof(GameMode) )) {
					M2 = _a;
					
					modes += M2.name;
				}
				modes = GlobalFuncs.sortList( modes );
				GlobalFuncs.to_chat( typeof(Game13), "<B>The current game mode is - Secret!</B>" );
				GlobalFuncs.to_chat( typeof(Game13), "<B>Possibilities:</B> " + GlobalFuncs.english_list( modes ) );
			} else {
				((GameMode)this.mode).announce();
			}
			this.init_PDAgames_leaderboard();
			this.create_characters();
			this.collect_minds();
			this.equip_characters();
			GlobalVars.data_core.manifest();
			this.current_state = 3;
			GlobalFuncs.setup_economy();
			Task13.Schedule( 0, (Task13.Closure)(() => {
				((GameMode)this.mode).post_setup();

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.landmarks_list, typeof(Obj_Effect_Landmark_Start) )) {
					S = _b;
					

					if ( S.name != "AI" ) {
						GlobalFuncs.qdel( S );
					}
				}
				L = new ByTable();

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.landmarks_list, typeof(Obj_Effect_Landmark_Spacepod_Random) )) {
					SS = _c;
					

					if ( SS is Obj_Effect_Landmark_Spacepod_Random ) {
						L.Add( SS );
					}
				}
				S2 = Rand13.PickFromTable( L );
				new Obj_Spacepod_Random( S2.loc );

				foreach (dynamic _d in Lang13.Enumerate( L )) {
					obj = _d;
					

					if ( obj is Obj_Effect_Landmark_Spacepod_Random ) {
						GlobalFuncs.qdel( obj );
					}
				}
				GlobalVars.stat_collection.death_stats = new ByTable();
				GlobalFuncs.to_chat( typeof(Game13), "<FONT color='blue'><B>Enjoy the game!</B></FONT>" );
				welcome_sentence = new ByTable(new object [] { "sound/AI/vox_login.ogg" });
				welcome_sentence.Add( Rand13.Pick(new object [] { "sound/AI/vox_reminder1.ogg", "sound/AI/vox_reminder2.ogg", "sound/AI/vox_reminder3.ogg", "sound/AI/vox_reminder4.ogg", "sound/AI/vox_reminder5.ogg", "sound/AI/vox_reminder6.ogg", "sound/AI/vox_reminder7.ogg", "sound/AI/vox_reminder8.ogg", "sound/AI/vox_reminder9.ogg" }) );

				foreach (dynamic _e in Lang13.Enumerate( welcome_sentence )) {
					sound = _e;
					
					GlobalFuncs.play_vox_sound( sound, 1, null );
				}
				GlobalFuncs.Holiday_Game_Start();
				((GameMode)this.mode).Clean_Antags();
				return;
			}));

			if ( 0 == GlobalVars.admins.len ) {
				GlobalFuncs.send2adminirc( "Round has started with no admins online." );
			}
			GlobalVars.processScheduler.start();

			if ( Lang13.Bool( GlobalVars.config.sql_enabled ) ) {
				Task13.Schedule( 3000, (Task13.Closure)(() => {
					GlobalFuncs.statistic_cycle();
					return;
				}));
			}
			GlobalVars.stat_collection.round_start_time = Game13.realtime;
			return true;
		}

		// Function from file: gameticker.dm
		public void StopThematic(  ) {
			this.theme.playing = 0;
			this.theme.update_music();
			this.theme.update_icon();
			return;
		}

		// Function from file: gameticker.dm
		public void StartThematic( string playlist = null ) {
			
			if ( !( this.theme != null ) ) {
				this.theme = new Obj_Machinery_Media_Jukebox_Superjuke_Thematic( Map13.GetTile( 1, 1, 2 ) );
			}
			this.theme.playlist_id = playlist;
			this.theme.playing = 1;
			this.theme.update_music();
			this.theme.update_icon();
			return;
		}

		// Function from file: gameticker.dm
		public void pregame(  ) {
			File oursong = null;
			int delay_timetotal = 0;
			int? i = null;

			oursong = new File( Rand13.Pick(new object [] { "sound/music/space.ogg", "sound/music/traitor.ogg", "sound/music/space_oddity.ogg", "sound/music/title1.ogg", "sound/music/title2.ogg", "sound/music/clown.ogg", "sound/music/robocop.ogg", "sound/music/gaytony.ogg", "sound/music/rocketman.ogg", "sound/music/2525.ogg", "sound/music/moonbaseoddity.ogg", "sound/music/whatisthissong.ogg", "sound/music/space_asshole.ogg" }) );
			this.login_music = File13.Cache( oursong );

			while (!GlobalVars.master_controller.initialized) {
				Task13.Sleep( 1 );
				continue;
			}

			do {
				delay_timetotal = 3000;
				this.pregame_timeleft = Game13.timeofday + delay_timetotal;
				GlobalFuncs.to_chat( typeof(Game13), "<B><FONT color='blue'>Welcome to the pre-game lobby!</FONT></B>" );
				GlobalFuncs.to_chat( typeof(Game13), "Please, setup your character and select ready. Game will start in " + ( this.pregame_timeleft - Game13.timeofday ) / 10 + " seconds." );

				while (this.current_state <= 1) {
					i = null;
					i = 0;

					while (( i ??0) < 10) {
						Task13.Sleep( 1 );
						GlobalVars.vote.process();
						GlobalVars.watchdog.check_for_update();
						i++;
					}

					if ( Game13.timeofday < 863800 - delay_timetotal && this.pregame_timeleft > 863950 ) {
						this.pregame_timeleft -= 864000;
					}

					if ( !( GlobalVars.going != 0 ) && !( this.remaining_time != 0 ) ) {
						this.remaining_time = this.pregame_timeleft - Game13.timeofday;
					}

					if ( GlobalVars.going == 2 ) {
						this.pregame_timeleft = Game13.timeofday + this.remaining_time;
						GlobalVars.going = 1;
						this.remaining_time = 0;
					}

					if ( GlobalVars.going != 0 && Game13.timeofday >= this.pregame_timeleft ) {
						this.current_state = 2;
					}
				}
			} while ( !this.setup() );
			return;
		}

	}

}
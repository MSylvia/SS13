// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RcdSchematic_Pipe_LayerAdapter : RcdSchematic_Pipe {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Layer Adapter";
			this.pipe_id = 30;
			this.pipe_type = 4;
		}

		public RcdSchematic_Pipe_LayerAdapter ( dynamic n_master = null ) : base( (object)(n_master) ) {
			
		}

		// Function from file: pipe.dm
		public override string render_dir_image( double? dir = null, string title = null ) {
			string selected = null;

			selected = "";

			if ( this.selected_dir == dir ) {
				selected = " class='selected'";
			}
			return new Txt( "<a href='?src=" ).Ref( this.master.v_interface ).str( ";set_dir=" ).item( dir ).str( "'" ).item( selected ).str( " title='" ).item( title ).str( "'><img src='RPD_" ).item( this.pipe_id ).str( "_" ).item( dir ).str( "_" ).item( this.layer ).str( ".png'/></a>" ).ToString();
		}

		// Function from file: pipe.dm
		public override void send_icon( dynamic client = null, dynamic dir = null ) {
			GlobalFuncs.send_asset( client, "RPD_" + this.pipe_id + "_" + dir + "_" + this.layer + ".png" );
			return;
		}

		// Function from file: pipe.dm
		public override void register_icon( dynamic dir = null ) {
			double layer = 0;

			
			foreach (dynamic _a in Lang13.IterateRange( 1, 5 )) {
				layer = _a;
				
				GlobalFuncs.register_asset( "RPD_" + this.pipe_id + "_" + dir + "_" + layer + ".png", new Icon( "icons/obj/atmospherics/pipe_adapter.dmi", "adapter_" + layer, dir ) );
			}
			return;
		}

	}

}
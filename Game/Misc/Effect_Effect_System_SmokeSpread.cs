// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Effect_Effect_System_SmokeSpread : Effect_Effect_System {

		public int total_smoke = 0;
		public dynamic direction = null;
		public Type smoke_type = typeof(Obj_Effect_Effect_Smoke);

		// Function from file: effect_system.dm
		public override void start(  ) {
			int? i = null;
			dynamic smoke = null;
			dynamic direction = null;

			i = 0;
			i = 0;

			while (( i ??0) < Convert.ToDouble( this.number )) {
				
				if ( this.total_smoke > 20 ) {
					return;
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					
					if ( Lang13.Bool( this.holder ) ) {
						this.location = GlobalFuncs.get_turf( this.holder );
					}
					smoke = Lang13.Call( this.smoke_type, this.location );
					this.total_smoke++;
					direction = this.direction;

					if ( !Lang13.Bool( direction ) ) {
						
						if ( Lang13.Bool( this.cardinals ) ) {
							direction = Rand13.PickFromTable( GlobalVars.cardinal );
						} else {
							direction = Rand13.PickFromTable( GlobalVars.alldirs );
						}
					}
					i = 0;

					while (( i ??0) < Convert.ToDouble( Rand13.Pick(new object [] { 0, 1, 1, 1, 2, 2, 2, 3 }) )) {
						Task13.Sleep( 10 );
						Map13.Step( smoke, Convert.ToInt32( direction ) );
						i++;
					}
					Task13.Schedule( ((int)( smoke.time_to_live * 0.75 + Rand13.Int( 10, 30 ) )), (Task13.Closure)(() => {
						
						if ( Lang13.Bool( smoke ) ) {
							GlobalFuncs.qdel( smoke );
						}
						this.total_smoke--;
						return;
					}));
					return;
				}));
				i++;
			}
			return;
		}

		// Function from file: effect_system.dm
		public override void set_up( dynamic carry = null, dynamic n = null, dynamic c = null, dynamic loca = null, dynamic direct = null ) {
			carry = carry ?? 5;
			n = n ?? 0;

			
			if ( Convert.ToDouble( carry ) > 10 ) {
				carry = 10;
			}
			this.number = carry;
			this.cardinals = n;

			if ( c is Tile ) {
				this.location = c;
			} else {
				this.location = GlobalFuncs.get_turf( c );
			}

			if ( Lang13.Bool( loca ) ) {
				this.direction = loca;
			}
			return;
		}

	}

}
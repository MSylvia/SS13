// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ShuttleController : Game_Data {

		public bool alert = false;
		public int location = 0;
		public bool online = false;
		public int direction = 1;
		public double? endtime = null;
		public dynamic timelimit = null;
		public double fake_recall = 0;
		public bool always_fake_recall = false;
		public bool deny_shuttle = false;
		public bool departed = false;
		public bool shutdown = false;
		public bool can_recall = true;
		public Shuttle_Escape shuttle = null;

		// Function from file: shuttle_controller.dm
		public void move_pod( Type start_type = null, Type end_type = null, double? direction = null, bool open_doors = false ) {
			dynamic start_location = null;
			dynamic end_location = null;
			Obj_Machinery_Door D = null;
			dynamic M = null;

			start_location = Lang13.FindObj( start_type );
			end_location = Lang13.FindObj( end_type );
			((Zone)start_location).move_contents_to( end_location, null, direction );

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.all_doors, typeof(Obj_Machinery_Door) )) {
				D = _a;
				

				if ( GlobalFuncs.get_area( D ) == end_location ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						
						if ( open_doors ) {
							D.open();
						} else {
							D.close();
						}
						return;
					}));
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( end_location )) {
				M = _b;
				

				if ( Lang13.Bool( M.client ) ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						
						if ( Lang13.Bool( M.locked_to ) ) {
							GlobalFuncs.shake_camera( M, 4, 1 );
						} else {
							GlobalFuncs.shake_camera( M, 10, 2 );
						}
						return;
					}));
				}

				if ( M is Mob_Living_Carbon ) {
					
					if ( !Lang13.Bool( M.locked_to ) ) {
						((Mob)M).Weaken( 5 );
					}
				}
			}
			return;
		}

		// Function from file: shuttle_controller.dm
		public virtual bool process(  ) {
			return false;
		}

		// Function from file: shuttle_controller.dm
		public void setdirection( int dirn = 0 ) {
			double ticksleft = 0;

			
			if ( this.direction == dirn ) {
				return;
			}
			this.direction = dirn;
			ticksleft = ( this.endtime ??0) - Game13.timeofday;
			this.endtime = Game13.timeofday + ( 6000 - ticksleft );
			return;
		}

		// Function from file: shuttle_controller.dm
		public void settimeleft( dynamic delay = null ) {
			this.endtime = Game13.timeofday + Convert.ToDouble( delay * 10 );
			this.timelimit = delay;
			return;
		}

		// Function from file: shuttle_controller.dm
		public double timeleft(  ) {
			double timeleft = 0;

			
			if ( this.online ) {
				timeleft = Num13.Round( ( ( this.endtime ??0) - Game13.timeofday ) / 10, 1 );

				if ( this.direction == 1 || this.direction == 2 ) {
					return timeleft;
				} else {
					return 600 - timeleft;
				}
			} else {
				return 600;
			}
			return 0;
		}

		// Function from file: shuttle_controller.dm
		public void recall(  ) {
			double timeleft = 0;
			dynamic A = null;

			
			if ( this.shutdown ) {
				return;
			}

			if ( !this.can_recall ) {
				return;
			}

			if ( this.direction == 1 ) {
				timeleft = this.timeleft();

				if ( !this.alert ) {
					
					if ( timeleft >= 600 ) {
						return;
					}
					GlobalFuncs.captain_announce( "The emergency shuttle has been recalled." );
					GlobalFuncs.to_chat( typeof(Game13), new Sound( "sound/AI/shuttlerecalled.ogg" ) );
					this.setdirection( -1 );
					this.online = true;

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.areas )) {
						A = _a;
						

						if ( A is Zone_Hallway ) {
							((Zone)A).readyreset();
						}
					}
					return;
				} else {
					GlobalFuncs.captain_announce( "The shuttle has been recalled." );
					this.setdirection( -1 );
					this.online = true;
					return;
				}
			}
			return;
		}

		// Function from file: shuttle_controller.dm
		public virtual void force_shutdown(  ) {
			this.online = false;
			this.shutdown = true;
			return;
		}

		// Function from file: shuttle_controller.dm
		public void shuttlealert( bool X = false ) {
			
			if ( this.shutdown ) {
				return;
			}
			this.alert = X;
			return;
		}

		// Function from file: shuttle_controller.dm
		public void incall( int? coeff = null ) {
			coeff = coeff ?? 1;

			dynamic A = null;

			
			if ( this.shutdown ) {
				return;
			}

			if ( ( !((UniversalState)GlobalVars.universe).OnShuttleCall( null ) || this.deny_shuttle ) && this.alert ) {
				return;
			}

			if ( Lang13.Bool( this.endtime ) ) {
				
				if ( this.direction == -1 ) {
					this.setdirection( 1 );
				}
			} else {
				this.settimeleft( ( coeff ??0) * 600 );
				this.online = true;

				if ( this.always_fake_recall ) {
					this.fake_recall = Rand13.Int( 300, 500 );
				}
			}

			if ( !this.alert ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.areas )) {
					A = _a;
					

					if ( A is Zone_Hallway ) {
						((Zone)A).readyalert();
					}
				}
			}
			return;
		}

	}

}
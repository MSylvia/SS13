// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GlobalIterator_MechJail : GlobalIterator {

		public GlobalIterator_MechJail ( ByTable arguments = null, bool? autostart = null ) : base( arguments, autostart ) {
			
		}

		// Function from file: vgstation13.dme
		public override bool process( Obj port = null, dynamic mecha = null ) {
			dynamic cell = null;
			dynamic cell2 = null;
			dynamic thiscell = null;

			
			if ( !Lang13.Bool( ((dynamic)port).chassis ) ) {
				((dynamic)port).set_ready_state( 1 );
				return this.stop();
			}

			if ( !((Obj_Mecha)((dynamic)port).chassis).has_charge( ((dynamic)port).energy_drain ) ) {
				((dynamic)port).set_ready_state( 1 );
				((dynamic)port).log_message( "Deactivated." );
				((dynamic)port).occupant_message( "" + this + " deactivated - no power." );

				foreach (dynamic _a in Lang13.Enumerate( ((dynamic)port).cells )) {
					cell = _a;
					
					((dynamic)port).go_out( ((dynamic)port).cells[cell] );
				}
				return this.stop();
			}

			if ( Lang13.Bool( ((dynamic)port).AllFree() ) ) {
				return this.stop();
			}

			foreach (dynamic _b in Lang13.Enumerate( ((dynamic)port).cells )) {
				cell2 = _b;
				
				thiscell = ((dynamic)port).cells[cell2];

				if ( Lang13.Bool( thiscell["mob"] ) ) {
					thiscell["timer"]--;

					if ( Convert.ToDouble( thiscell["timer"] ) <= 0 ) {
						((dynamic)port).go_out( thiscell );
					} else if ( Lang13.Bool( thiscell["timer"] ) == true ) {
						((dynamic)port).occupant_message( "<span class='warning'>" + thiscell["mob"] + " will be ejected in 3 seconds!</span>" );
					}
				}
			}
			((dynamic)port).chassis.use_power( ((dynamic)port).energy_drain );
			((dynamic)port).update_equip_info();
			return false;
		}

	}

}
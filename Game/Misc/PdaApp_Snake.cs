// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class PdaApp_Snake : PdaApp {

		public int volume = 6;
		public SnakeGame snake_game = null;
		public ByTable highscores = new ByTable();
		public bool ingame = false;
		public bool paused = false;
		public bool labyrinth = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Snake II";
			this.desc = "A video game. This old classic from Earth made it all the way to the far reaches of space! Includes station leaderboard.";
			this.price = 40;
			this.menu = 105;
			this.icon = "pda_game";
		}

		// Function from file: apps.dm
		public void save_score(  ) {
			dynamic templist = null;
			dynamic leaderlist = null;
			dynamic winnerlist = null;

			templist = this.highscores[this.snake_game.level];
			templist[( this.labyrinth ?1:0) + 1] = Num13.MaxInt( Convert.ToInt32( templist[( this.labyrinth ?1:0) + 1] ), ((int)( this.snake_game.snakescore )) );
			leaderlist = GlobalVars.snake_station_highscores[this.snake_game.level];
			winnerlist = GlobalVars.snake_best_players[this.snake_game.level];

			if ( Convert.ToDouble( templist[( this.labyrinth ?1:0) + 1] ) > Convert.ToDouble( leaderlist[( this.labyrinth ?1:0) + 1] ) ) {
				leaderlist[( this.labyrinth ?1:0) + 1] = templist[( this.labyrinth ?1:0) + 1];
				winnerlist[( this.labyrinth ?1:0) + 1] = this.pda_device.owner;
			}
			return;
		}

		// Function from file: apps.dm
		public void pause( Mob user = null ) {
			
			if ( this.ingame ) {
				
				if ( !this.paused ) {
					this.paused = true;
				} else {
					this.paused = false;
					this.game_tick( user );
				}
			}
			return;
		}

		// Function from file: apps.dm
		public void game_over( Mob user = null ) {
			int? i = null;
			Snake_Body B = null;
			Snake_Body B2 = null;

			GlobalFuncs.playsound( GlobalFuncs.get_turf( this.pda_device ), "sound/misc/pda_snake_over.ogg", this.volume * 5, 0 );
			i = null;
			i = 1;

			while (( i ??0) <= 4) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.snake_game.snakeparts, typeof(Snake_Body) )) {
					B = _a;
					
					B.flicking = true;
				}
				this.snake_game.head.flicking = true;
				this.game_update( user );
				Task13.Sleep( 5 );

				foreach (dynamic _b in Lang13.Enumerate( this.snake_game.snakeparts, typeof(Snake_Body) )) {
					B2 = _b;
					
					B2.flicking = false;
				}
				this.snake_game.head.flicking = false;
				this.game_update( user );
				Task13.Sleep( 5 );
				i++;
			}
			this.save_score();
			this.ingame = false;
			this.game_update( user );
			return;
		}

		// Function from file: apps.dm
		public void game_update( Mob user = null ) {
			Mob C = null;
			dynamic pda_device = null;
			dynamic user_loc = null;
			dynamic pda_loc = null;

			
			if ( user is Mob_Living_Carbon ) {
				C = user;

				if ( Lang13.Bool( C.machine ) && C.machine is Obj_Item_Device_Pda ) {
					pda_device = C.machine;
					user_loc = GlobalFuncs.get_turf( user );
					pda_loc = GlobalFuncs.get_turf( pda_device );

					if ( Map13.GetDistance( user_loc, pda_loc ) <= 1 ) {
						
						if ( Convert.ToInt32( pda_device.mode ) == 105 ) {
							((Obj_Item)pda_device).attack_self( C );
						} else {
							this.pause( user );
						}
					} else {
						user.unset_machine();
						Interface13.Browse( user, null, "window=pda" );
						this.pause( user );
					}
				} else {
					this.pause( user );
				}
			} else {
				this.pause( user );
			}
			return;
		}

		// Function from file: apps.dm
		public void game_tick( Mob user = null ) {
			double snakesleep = 0;

			this.snake_game.game_tick( user.dir );
			this.game_update( user );

			if ( this.snake_game.head.next_full ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this.pda_device ), "sound/misc/pda_snake_eat.ogg", this.volume * 5, 1 );
			}

			if ( !this.paused ) {
				
				if ( !this.snake_game.gameover ) {
					snakesleep = 10 - ( this.snake_game.level ??0);
					Task13.Schedule( ((int)( snakesleep )), (Task13.Closure)(() => {
						this.game_tick( user );
						return;
					}));
				} else {
					this.game_over( user );
				}
			}
			return;
		}

		// Function from file: apps.dm
		public override void onInstall( dynamic device = null ) {
			int? x = null;
			dynamic templist = null;
			int? y = null;

			base.onInstall( (object)(device) );
			x = null;
			x = 1;

			while (( x ??0) <= 9) {
				this.highscores.Add( x );
				this.highscores[x] = new ByTable();
				templist = this.highscores[x];
				y = null;
				y = 1;

				while (( y ??0) <= 8) {
					templist += y;
					templist[y] = 0;
					y++;
				}
				x++;
			}
			this.snake_game = new SnakeGame();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_Generic_IncisionManager : SurgeryStep_Generic {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_tools = new ByTable().Set( typeof(Obj_Item_Weapon_Retractor_Manager), 100 );
			this.priority = 0.1;
			this.min_duration = 80;
			this.max_duration = 120;
		}

		// Function from file: generic.dm
		public override bool? fail_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			Organ_External affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( "'s hand jolts as the system sparks, ripping a gruesome hole in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "!</span>" ).ToString(), new Txt( "<span class='warning'>Your hand jolts as the system sparks, ripping a gruesome hole in " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "!</span>" ).ToString() );
			affected.createwound( "cut", 20 );
			affected.createwound( "fire", 15 );
			tool.icon_state = "" + Lang13.Initial( tool, "icon_state" ) + "_off";
			return null;
		}

		// Function from file: generic.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " has constructed a prepared incision on and within " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You have constructed a prepared incision on and within " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( ".</span>" ).ToString() );
			affected.open = 1;
			affected.status |= 8;
			((Organ_External)affected).createwound( "cut", 1 );
			((Organ_External)affected).clamp();
			affected.open = 2;
			tool.icon_state = "" + Lang13.Initial( tool, "icon_state" ) + "_off";
			return false;
		}

		// Function from file: generic.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			dynamic affected = null;

			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " starts to construct a prepared incision on and within " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString(), new Txt( "You start to construct a prepared incision on and within " ).item( target ).str( "'s " ).item( affected.display_name ).str( " with " ).the( tool ).item().str( "." ).ToString() );
			((Mob_Living_Carbon_Human)target).custom_pain( "You feel a horrible, searing pain in your " + affected.display_name + " as it is pushed apart!", true );
			tool.icon_state = "" + Lang13.Initial( tool, "icon_state" ) + "_on";
			Task13.Schedule( this.max_duration, (Task13.Closure)(() => {
				tool.icon_state = "" + Lang13.Initial( tool, "icon_state" ) + "_off";
				return;
			}));
			base.begin_step( (object)(user), (object)(target), target_zone, tool, (object)(surgery) );
			return false;
		}

		// Function from file: generic.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			dynamic affected = null;

			
			if ( base.can_use( (object)(user), (object)(target), target_zone, tool ) != 0 ) {
				
				if ( Lang13.Bool( target.species ) && Lang13.Bool( target.species.flags & 32768 ) ) {
					GlobalFuncs.to_chat( user, "<span class='info'>" + target + " has no skin!</span>" );
					return 0;
				}
				affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
				return Lang13.Bool( affected.open ) == false && target_zone != "mouth" ?1:0;
			}
			return 0;
		}

	}

}
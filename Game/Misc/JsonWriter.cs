// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class JsonWriter : Game_Data {

		// Function from file: JSON Writer.dm
		public bool? is_associative( dynamic L = null ) {
			dynamic key = null;

			
			foreach (dynamic _a in Lang13.Enumerate( L )) {
				key = _a;
				

				if ( !Lang13.Bool( Lang13.IsNumber( key ) ) && !( key is ByTable ) ) {
					return GlobalVars.TRUE;
				}
			}
			return null;
		}

		// Function from file: JSON Writer.dm
		public string write_string( string txt = null ) {
			dynamic targ = null;
			int start = 0;
			int i = 0;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.json_escape )) {
				targ = _a;
				
				start = 1;

				while (start <= Lang13.Length( txt )) {
					i = String13.FindIgnoreCase( txt, targ, start, 0 );

					if ( !( i != 0 ) ) {
						break;
					}

					if ( targ == "\n" ) {
						txt = String13.SubStr( txt, 1, i ) + "\\n" + String13.SubStr( txt, i + 2, 0 );
						start = i + 1;
					}

					if ( targ == "'" ) {
						txt = String13.SubStr( txt, 1, i ) + "`" + String13.SubStr( txt, i + 1, 0 );
						start = i + 1;
					} else {
						txt = String13.SubStr( txt, 1, i ) + "\\" + String13.SubStr( txt, i, 0 );
						start = i + 2;
					}
				}
			}
			return "\"" + txt + "\"";
		}

		// Function from file: JSON Writer.dm
		public dynamic write_array( dynamic L = null ) {
			dynamic _default = null;

			double i = 0;

			_default = new ByTable();
			_default += "[";

			foreach (dynamic _a in Lang13.IterateRange( 1, L.len )) {
				i = _a;
				
				_default += this.write( Lang13.DoubleNullable( L[i] ) );

				if ( i < L.len ) {
					_default += ",";
				}
			}
			_default += "]";
			_default = GlobalFuncs.list2text( _default );
			return _default;
		}

		// Function from file: JSON Writer.dm
		public dynamic write( double? val = null ) {
			dynamic _default = null;

			
			if ( Lang13.Bool( Lang13.IsNumber( val ) ) ) {
				return String13.NumberToString( val ??0, 100 );
			} else if ( val == null ) {
				return "null";
			} else if ( val is ByTable ) {
				
				if ( this.is_associative( val ) == true ) {
					return this.WriteObject( val );
				} else {
					return this.write_array( val );
				}
			} else {
				_default += this.write_string( "" + val );
			}
			return _default;
		}

		// Function from file: JSON Writer.dm
		public dynamic WriteObject( dynamic L = null ) {
			dynamic _default = null;

			int i = 0;
			dynamic k = null;
			double? val = null;

			_default = new ByTable();
			_default += "{";
			i = 1;

			foreach (dynamic _a in Lang13.Enumerate( L )) {
				k = _a;
				
				val = Lang13.DoubleNullable( L[k] );
				_default += "\"" + k + "\":" + this.write( val );

				if ( i++ < L.len ) {
					_default += ",";
				}
			}
			_default += "}";
			_default = GlobalFuncs.list2text( _default );
			return _default;
		}

	}

}
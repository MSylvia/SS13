// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Ethanol_Pwine : Reagent_Ethanol {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Poison Wine";
			this.id = "pwine";
			this.description = "Is this even wine? Toxic! Hallucinogenic! Probably consumed in boatloads by your superiors!";
			this.dizzy_adj = 1;
			this.slur_start = 1;
			this.confused_start = 1;
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool on_mob_life( Mob_Living M = null, int? alien = null ) {
			Mob_Living H = null;
			dynamic L = null;
			Mob_Living H2 = null;
			dynamic L2 = null;

			
			if ( base.on_mob_life( M, alien ) ) {
				return true;
			}
			M.druggy = Num13.MaxInt( M.druggy, 50 );

			dynamic _a = this.data; // Was a switch-case, sorry for the mess.
			if ( 1<=_a&&_a<=25 ) {
				
				if ( !Lang13.Bool( M.stuttering ) ) {
					M.stuttering = 1;
				}
				M.Dizzy( 1 );
				M.hallucination = Num13.MaxInt( M.hallucination, 3 );

				if ( Rand13.PercentChance( 1 ) ) {
					M.emote( Rand13.Pick(new object [] { "twitch", "giggle" }) );
				}
			} else if ( 25<=_a&&_a<=75 ) {
				
				if ( !Lang13.Bool( M.stuttering ) ) {
					M.stuttering = 1;
				}
				M.hallucination = Num13.MaxInt( M.hallucination, 10 );
				M.Jitter( 2 );
				M.Dizzy( 2 );
				M.druggy = Num13.MaxInt( M.druggy, 45 );

				if ( Rand13.PercentChance( 5 ) ) {
					M.emote( Rand13.Pick(new object [] { "twitch", "giggle" }) );
				}
			} else if ( 75<=_a&&_a<=150 ) {
				
				if ( !Lang13.Bool( M.stuttering ) ) {
					M.stuttering = 1;
				}
				M.hallucination = Num13.MaxInt( M.hallucination, 60 );
				M.Jitter( 4 );
				M.Dizzy( 4 );
				M.druggy = Num13.MaxInt( M.druggy, 60 );

				if ( Rand13.PercentChance( 10 ) ) {
					M.emote( Rand13.Pick(new object [] { "twitch", "giggle" }) );
				}

				if ( Rand13.PercentChance( 30 ) ) {
					M.adjustToxLoss( 2 );
				}
			} else if ( 150<=_a&&_a<=300 ) {
				
				if ( !Lang13.Bool( M.stuttering ) ) {
					M.stuttering = 1;
				}
				M.hallucination = Num13.MaxInt( M.hallucination, 60 );
				M.Jitter( 4 );
				M.Dizzy( 4 );
				M.druggy = Num13.MaxInt( M.druggy, 60 );

				if ( Rand13.PercentChance( 10 ) ) {
					M.emote( Rand13.Pick(new object [] { "twitch", "giggle" }) );
				}

				if ( Rand13.PercentChance( 30 ) ) {
					M.adjustToxLoss( 2 );
				}

				if ( Rand13.PercentChance( 5 ) ) {
					
					if ( M is Mob_Living_Carbon_Human ) {
						H = M;
						L = ((dynamic)H).internal_organs_by_name["heart"];

						if ( Lang13.Bool( L ) && L is Organ_Internal_Heart ) {
							L.take_damage( 5, 0 );
						}
					}
				}
			} else if ( 300<=_a&&_a<=Double.PositiveInfinity ) {
				
				if ( M is Mob_Living_Carbon_Human ) {
					H2 = M;
					L2 = ((dynamic)H2).internal_organs_by_name["heart"];

					if ( Lang13.Bool( L2 ) && L2 is Organ_Internal_Heart ) {
						L2.take_damage( 100, 0 );
					}
				}
			}
			this.data++;
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Job_Chaplain : Job {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.title = "Chaplain";
			this.flag = 1024;
			this.department_flag = 4;
			this.faction = "Station";
			this.total_positions = 1;
			this.spawn_positions = 1;
			this.supervisors = "The God(s), the Head of Personnel too.";
			this.selection_color = "#dddddd";
			this.access = new ByTable(new object [] { 6, 22, 27, 12 });
			this.minimal_access = new ByTable(new object [] { 6, 22, 27 });
			this.pdatype = typeof(Obj_Item_Device_Pda_Chaplain);
			this.department = "Civilian";
		}

		// Function from file: civilian_chaplain.dm
		public override bool equip( dynamic H = null ) {
			Obj_Item_Weapon_Storage_Bible B = null;
			string religion_name = null;
			string deity_name = null;
			string new_religion = null;
			string J = null;
			dynamic I = null;
			dynamic P = null;
			string new_deity = null;
			bool accepted = false;
			bool outoftime = false;
			dynamic new_book_style = null;
			Zone_Chapel_Main A = null;
			dynamic T = null;
			Zone_Chapel_Main A2 = null;
			dynamic T2 = null;
			Zone_Chapel_Main A3 = null;
			dynamic T3 = null;
			Zone_Chapel_Main A4 = null;
			dynamic T4 = null;
			Zone_Chapel_Main A5 = null;
			dynamic T5 = null;
			Zone_Chapel_Main A6 = null;
			dynamic T6 = null;
			Zone_Chapel_Main A7 = null;
			dynamic T7 = null;
			Zone_Chapel_Main A8 = null;
			dynamic T8 = null;

			((Mob)H).add_language( "Spooky" );
			B = new Obj_Item_Weapon_Storage_Bible( H );
			((Mob_Living_Carbon_Human)H).equip_or_collect( B, 4 );
			((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Under_Rank_Chaplain( H ), 14 );
			((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Shoes_Black( H ), 12 );

			if ( Lang13.Bool( H.backbag ) == true ) {
				((Mob_Living_Carbon_Human)H).equip_or_collect( Lang13.Call( H.species.survival_gear, H ), 5 );
			} else {
				((Mob_Living_Carbon_Human)H).equip_or_collect( Lang13.Call( H.species.survival_gear, H.back ), 18 );
			}
			religion_name = "Christianity";
			deity_name = "Space Jesus";
			Task13.Schedule( 0, (Task13.Closure)(() => {
				new_religion = GlobalFuncs.sanitize( GlobalFuncs.stripped_input( H, "You are the crew's Religious Services Chaplain. What religion do you follow and teach? (Please put your ID in your ID slot to prevent errors)", "Name of Religion", religion_name ), 1 );

				if ( !Lang13.Bool( new_religion ) ) {
					new_religion = religion_name;
				}
				J = H.mind.role_alt_title;

				switch ((string)( String13.ToLower( new_religion ) )) {
					case "christianity":
						B.name = "The Holy Bible";
						deity_name = "Space Jesus";
						break;
					case "catholic":
					case "catholicism":
					case "roman catholicism":
						B.name = "The Catholic Bible";
						J = "Bishop";
						deity_name = "Jesus Christ";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Mitre( H ), 11 );
						break;
					case "theist":
					case "gnosticism":
					case "theism":
						B.name = Rand13.Pick(new object [] { "The Gnostic Bible", "The Dead Seas Scrolls" });
						deity_name = "God";
						break;
					case "satan":
					case "evil":
					case "satanism":
						B.name = "The Satanic Bible";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Magistra";
						} else {
							J = "Magister";
						}
						deity_name = "Satan";
						break;
					case "cthulhu":
					case "outer gods":
					case "elder gods":
					case "esoteric order of dagon":
						B.name = Rand13.Pick(new object [] { "The Necronomicon", "The Book of Eibon", "De Vermis Mysteriis", "Unaussprechlichen Kulten" });
						deity_name = "Cthulhu";
						break;
					case "islam":
					case "muslim":
						B.name = "The Quran";
						J = "Imam";
						deity_name = "Allah";
						break;
					case "slam":
						B.name = "Barkley: Shut Up and Jam - Gaiden";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Mistress of Slam";
						} else {
							J = "Master of Slam";
						}
						deity_name = "Charles Barkley";
						break;
					case "jew":
					case "judaism":
						B.name = Rand13.Pick(new object [] { "The Torah", "The Talmud" });
						J = "Rabbi";
						deity_name = "Yahweh";
						break;
					case "hindu":
					case "hinduism":
						B.name = Rand13.Pick(new object [] { "The Vedas", "The Mahabharata" });
						J = "Guru";
						deity_name = Rand13.Pick(new object [] { "Brahma", "Vishnu", "Shiva", "Ganesha" });
						break;
					case "buddha":
					case "buddhism":
						B.name = "The Tripitaka";
						J = "Monk";
						deity_name = "Buddha";
						break;
					case "shinto":
					case "shintoism":
						B.name = "Kojiki";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Shrine Maiden";
						} else {
							J = "Kannushi";
						}
						deity_name = "Kami";
						break;
					case "mormon":
					case "mormonism":
						B.name = "The Book of Mormon";
						J = "Apostle";
						deity_name = "God the Father-Elohim";
						break;
					case "confucianism":
						B.name = Rand13.Pick(new object [] { "The I Ching", "Great Learning" });
						J = "Scholar";
						deity_name = "Tian";
						break;
					case "wicca":
					case "paganism":
						B.name = "The Book of Shadows";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "High Priestess";
						} else {
							J = "High Priest";
						}
						deity_name = "The Gods";
						break;
					case "norse":
						B.name = "The Edda";
						J = "Godi";
						deity_name = Rand13.Pick(new object [] { "Thor", "Odin" });
						break;
					case "druidism":
					case "celtic":
						B.name = "The Book of Leinster";
						J = "Druid";
						deity_name = Rand13.Pick(new object [] { "Toutatis", "Belenus", "Britannia" });
						break;
					case "atheism":
					case "none":
						B.name = "The God Delusion";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Fedora( H ), 11 );
						deity_name = "Richard Dawkins";
						break;
					case "evolution":
					case "biology":
					case "monkey":
					case "monkeys":
						B.name = "The Theory of Evolution";
						J = "Biologist";
						deity_name = "Charles Darwin";
						break;
					case "scientology":
						B.name = Rand13.Pick(new object [] { "The Biography of L. Ron Hubbard", "Dianetics" });
						J = "OT III";
						deity_name = "The Eighth Dynamic";
						break;
					case "discordianism":
						B.name = "The Principia Discordia";
						J = "Episkopos";
						deity_name = "Eris";
						break;
					case "rastafarianism":
					case "rastafari movement":
						B.name = "The Holy Piby";
						deity_name = "Haile Selassie I";
						break;
					case "hellenism":
						B.name = "The Odyssey";
						J = "Oracle";
						deity_name = Rand13.Pick(new object [] { "Zeus", "Neptune", "Athena", "Persephone" });
						break;
					case "pastafarianism":
						B.name = "The Gospel of the Flying Spaghetti Monster";
						deity_name = "The Flying Spaghetti Monster";
						break;
					case "chaos":
						B.name = Rand13.Pick(new object [] { "The Book of Lorgar", "The Book of Magnus" });
						J = "Apostate Preacher";
						deity_name = Rand13.Pick(new object [] { "Khorne", "Nurgle", "Tzeentch", "Slaanesh" });
						break;
					case "imperium":
					case "imperial cult":
						B.name = Rand13.Pick(new object [] { "An Uplifting Primer", "Codex Astartes", "Codex Hereticus" });

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Prioress";
						} else {
							J = "Confessor";
						}
						deity_name = "The God-Emperor of Mankind";
						break;
					case "toolboxia":
					case "toolbox":
						B.name = "The Toolbox Manifesto";
						J = "Chief Assistant";
						deity_name = "The Toolbox";
						break;
					case "homosexuality":
					case "faggotry":
					case "gayness":
						B.name = Rand13.Pick(new object [] { "Guys Gone Wild", "Hunk Rump" });
						deity_name = "The Gays";
						break;
					case "lol":
					case "wtf":
					case "gay":
					case "penis":
					case "ass":
					case "poo":
					case "badmin":
					case "shitmin":
					case "deadmin":
					case "cock":
					case "cocks":
					case "nigger":
					case "faggot":
					case "dickbutt":
					case ":^)":
					case "XD":
					case "le":
						B.name = Rand13.Pick(new object [] { "Woody's Got Wood: The Aftermath", "War of the Cocks", "Sweet Bro and Hella Jef: Expanded Edition", "The Book of Pomf" });
						((Mob_Living)H).setBrainLoss( 100 );
						deity_name = "Brian Damag";
						break;
					case "science":
						B.name = Rand13.Pick(new object [] { "Principle of Relativity", "Quantum Enigma: Physics Encounters Consciousness", "Programming the Universe", "Quantum Physics and Theology", "For I Have Tasted The Fruit", "Non-Linear Genetics", "The Mysteries of Bluespace", "Playing God: Collector's Edition" });
						J = "Academician";
						deity_name = Rand13.Pick(new object [] { "Albert Einstein", "Isaac Newton", "Niels Bohr", "Stephen Hawking" });
						break;
					case "tribunal":
					case "almsivi":
						B.name = "The 36 Lessons of Vivec";
						J = "Curate";
						deity_name = Rand13.Pick(new object [] { "Almalexia", "Sotha Sil", "Vivec" });
						break;
					case "nine divines":
					case "eight divines":
						B.name = "The Elder Scrolls";
						J = "Disciple of the Nine";
						deity_name = Rand13.Pick(new object [] { "Talos", "Akatosh", "Dibella", "Stendarr", "Kynareth", "Mara", "Arkay", "Julianos", "Zenithar" });
						break;
					case "daedra":
						B.name = Rand13.Pick(new object [] { "The Blessings of Sheogorath", "Boethiah's Pillow Book", "Invocation of Azura" });
						J = "Deadra Worshipper";
						deity_name = Rand13.Pick(new object [] { "Azura", "Boethiah", "Sheogorath", "Sanguine", "Hircine", "Meridia", "Hermaeus Mora", "Nocturnal" });
						break;
					case "bokononism":
						B.name = Rand13.PickFromTable( "The Book of Bokonon" );
						J = "Worshipper";
						deity_name = "Boko-Maru";
						break;
					case "faith of the seven":
						B.name = "The Seven-Pointed Star";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Septa";
						} else {
							J = "Septon";
						}
						deity_name = Rand13.Pick(new object [] { "Father", "Mother" });
						break;
					case "goa'uld":
						B.name = "The Abydos Cartouche";
						J = "First Prime";
						deity_name = "Ra";
						break;
					case "unitology":
						B.name = "Teachings of Unitology";
						J = "Vested";
						deity_name = "The Marker";
						break;
					case "zakarum":
						B.name = "The Visions of Akarat";
						J = "Disciple";
						deity_name = "The Light";
						break;
					case "ianism":
						B.name = "The Poky Little Puppy";
						J = "Veterinarian";
						deity_name = "Ian";
						break;
					case "adminism":
					case "admintology":
					case "admin":
					case "admins":
					case "adminhelp":
					case "adminbus":
						B.name = "Breaking Through the Fourth Wall";
						J = "Trial Admin";
						deity_name = "The Adminbus";
						break;
					case "coding":
					case "coder":
					case "coders":
						B.name = "Guide to Github";
						J = "Coder";
						deity_name = "The Coderbus";
						break;
					case "42":
						B.name = "The Hitchhiker's Guide to the Galaxy";
						deity_name = "Arthur Dent";
						break;
					case "spook":
					case "spooky":
					case "boo":
					case "ghost":
						B.name = "The Spooky Spook";
						J = "Ghost";
						deity_name = "The Spook";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Pumpkinhead( H ), 11 );
						break;
					case "medbay":
					case "ride":
					case "wild ride":
					case "cryo":
						B.name = "The Wild Ride";

						if ( H.gender == GlobalVars.FEMALE ) {
							J = "Nurse";
						} else {
							J = "Doctor";
						}
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Surgery_Blue( H ), 11 );
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Mask_Surgical( H ), 2 );
						deity_name = "The Chief Medical Officer";
						break;
					case "busta":
					case "bustatime":
					case "zas":
					case "airflow":
					case "hardcore":
					case "hardcores":
						B.name = "The Hardcores";
						Interface13.Stat( null, H.mutations.Contains( 300 ) );

						if ( !false ) {
							H.mutations.Add( 300 );
						}
						J = "Atmospherics Technician";
						deity_name = "Bustatime";
						break;
					case "me":
					case "i":
					case "narcissism":
					case "self importance":
					case "selfishness":
						B.name = "The Teachings of " + H;
						J = "God";
						deity_name = "" + H;
						break;
					case "alcohol":
					case "booze":
					case "beer":
					case "wine":
					case "ethanol":
					case "c2h6o":
						B.name = "The Drunken Ramblings";
						J = "Drunkard";
						deity_name = "Hic";
						break;
					case "robust":
					case "robustness":
					case "strength":
						B.name = "The Rules of Robustness";
						J = "Robuster";
						deity_name = "The Robust";
						break;
					case "suicide":
					case "death":
					case "succumb":
						B.name = "The Sweet Release of Death";
						J = "Reaper";
						deity_name = "The Grim Reaper";
						break;
					case "communism":
					case "socialism":
						B.name = "The Communist Manifesto";
						J = "Komrade";
						deity_name = "Karl Max";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Ushanka( H ), 11 );
						break;
					case "capitalism":
					case "free market":
					case "liberalism":
						B.name = "The Free Market";
						J = "Stockholder";
						deity_name = "Adam Smith";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_That( H ), 11 );
						break;
					case "freedom":
					case "america":
					case "muhrica":
					case "usa":
						B.name = "The Constitution";
						J = "Senator";
						deity_name = "George Washington";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Libertyhat( H ), 11 );
						break;
					case "fascism":
					case "nazi":
					case "national socialism":
						B.name = "Mein Kampf";
						J = "Feldbischof";
						deity_name = "Adolf Hitler";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Naziofficer( H ), 11 );
						break;
					case "security":
					case "space law":
					case "law":
					case "nanotrasen":
					case "centcomm":
						B.name = "Space Law";
						J = "Nanotrasen Officer";
						deity_name = "Nanotrasen";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Centhat( H ), 11 );
						break;
					case "syndicate":
					case "traitor":
					case "syndie":
					case "syndies":
						B.name = "The Syndicate Bundle";
						J = "Syndicate Agent";
						deity_name = "The Syndicate";
						((Mob_Living_Carbon_Human)H).equip_or_collect( new Obj_Item_Clothing_Head_Syndicatefake( H ), 11 );
						break;
					case "cult":
					case "narsie":
					case "nar'sie":
					case "narnar":
						B.name = "The Arcane Tome";
						J = "Cultist";
						deity_name = "Nar'Sie";
						break;
					default:
						B.name = "The Holy Book of " + new_religion;
						break;
				}
				I = null;

				if ( H.wear_id is Obj_Item_Weapon_Card_Id ) {
					I = H.wear_id;

					if ( I.registered_name == H.real_name ) {
						I.assignment = J;
						I.name = "" + I.registered_name + "'s ID Card (" + I.assignment + ")";
					}
				}
				P = null;

				if ( H.belt is Obj_Item_Device_Pda ) {
					P = H.belt;

					if ( P.owner == H.real_name ) {
						P.ownjob = J;
						P.name = "PDA-" + P.owner + " (" + P.ownjob + ")";
					}
				}
				GlobalVars.data_core.manifest_modify( H.real_name, J );
				GlobalFuncs.feedback_set_details( "religion_name", "" + new_religion );
				new_deity = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( H, "Would you like to change your deity? Your deity currently is " + deity_name + " (Leave empty or unchanged to keep diety name)", "Name of Deity", deity_name, null, InputType.Any ) ), 1, 26 );

				if ( !( Lang13.Length( new_deity ) != 0 ) ) {
					new_deity = deity_name;
				}
				B.deity_name = new_deity;
				accepted = false;
				outoftime = false;
				Task13.Schedule( 200, (Task13.Closure)(() => {
					outoftime = true;
					return;
				}));
				new_book_style = "Bible";

				while (!accepted) {
					
					if ( !( B != null ) ) {
						break;
					}
					new_book_style = Interface13.Input( H, "Which bible style would you like?", null, null, new ByTable(new object [] { 
						"Bible", 
						"Koran", 
						"Scrapbook", 
						"Creeper", 
						"White Bible", 
						"Holy Light", 
						"Athiest", 
						"Tome", 
						"The King in Yellow", 
						"Ithaqua", 
						"Scientology", 
						"the bible melts", 
						"Unaussprechlichen Kulten", 
						"Necronomicon", 
						"Book of Shadows", 
						"Torah", 
						"Burning", 
						"Honk", 
						"Ianism", 
						"The Guide"
					 }), InputType.Any );

					dynamic _r = new_book_style; // Was a switch-case, sorry for the mess.
					if ( _r=="Koran" ) {
						B.icon_state = "koran";
						B.item_state = "koran";

						foreach (dynamic _c in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A = _c;
							

							foreach (dynamic _b in Lang13.Enumerate( A.contents )) {
								T = _b;
								

								if ( T.icon_state == "carpetsymbol" ) {
									T.dir = 4;
								}
							}
						}
					} else if ( _r=="Scrapbook" ) {
						B.icon_state = "scrapbook";
						B.item_state = "scrapbook";
					} else if ( _r=="Creeper" ) {
						B.icon_state = "creeper";
						B.item_state = "syringe_kit";
					} else if ( _r=="White Bible" ) {
						B.icon_state = "white";
						B.item_state = "syringe_kit";
					} else if ( _r=="Holy Light" ) {
						B.icon_state = "holylight";
						B.item_state = "syringe_kit";
					} else if ( _r=="Athiest" ) {
						B.icon_state = "athiest";
						B.item_state = "syringe_kit";

						foreach (dynamic _e in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A2 = _e;
							

							foreach (dynamic _d in Lang13.Enumerate( A2.contents )) {
								T2 = _d;
								

								if ( T2.icon_state == "carpetsymbol" ) {
									T2.dir = 10;
								}
							}
						}
					} else if ( _r=="Tome" ) {
						B.icon_state = "tome";
						B.item_state = "syringe_kit";
					} else if ( _r=="The King in Yellow" ) {
						B.icon_state = "kingyellow";
						B.item_state = "kingyellow";
					} else if ( _r=="Ithaqua" ) {
						B.icon_state = "ithaqua";
						B.item_state = "ithaqua";

						foreach (dynamic _g in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A3 = _g;
							

							foreach (dynamic _f in Lang13.Enumerate( A3.contents )) {
								T3 = _f;
								

								if ( T3.icon_state == "carpetsymbol" ) {
									T3.dir = 5;
								}
							}
						}
					} else if ( _r=="Scientology" ) {
						B.icon_state = "scientology";
						B.item_state = "scientology";

						foreach (dynamic _i in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A4 = _i;
							

							foreach (dynamic _h in Lang13.Enumerate( A4.contents )) {
								T4 = _h;
								

								if ( T4.icon_state == "carpetsymbol" ) {
									T4.dir = 8;
								}
							}
						}
					} else if ( _r=="the bible melts" ) {
						B.icon_state = "melted";
						B.item_state = "melted";
					} else if ( _r=="Unaussprechlichen Kulten" ) {
						B.icon_state = "kulten";
						B.item_state = "kulten";
					} else if ( _r=="Necronomicon" ) {
						B.icon_state = "necronomicon";
						B.item_state = "necronomicon";
					} else if ( _r=="Book of Shadows" ) {
						B.icon_state = "shadows";
						B.item_state = "shadows";

						foreach (dynamic _k in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A5 = _k;
							

							foreach (dynamic _j in Lang13.Enumerate( A5.contents )) {
								T5 = _j;
								

								if ( T5.icon_state == "carpetsymbol" ) {
									T5.dir = 6;
								}
							}
						}
					} else if ( _r=="Torah" ) {
						B.icon_state = "torah";
						B.item_state = "torah";

						foreach (dynamic _m in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A6 = _m;
							

							foreach (dynamic _l in Lang13.Enumerate( A6.contents )) {
								T6 = _l;
								

								if ( T6.icon_state == "carpetsymbol" ) {
									T6.dir = 1;
								}
							}
						}
					} else if ( _r=="Burning" ) {
						B.icon_state = "burning";
						B.item_state = "syringe_kit";
					} else if ( _r=="Honk" ) {
						B.icon_state = "honkbook";
						B.item_state = "honkbook";
					} else if ( _r=="Ianism" ) {
						B.icon_state = "ianism";
						B.item_state = "ianism";

						foreach (dynamic _o in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A7 = _o;
							

							foreach (dynamic _n in Lang13.Enumerate( A7.contents )) {
								T7 = _n;
								

								if ( T7.icon_state == "carpetsymbol" ) {
									T7.dir = 9;
								}
							}
						}
					} else if ( _r=="The Guide" ) {
						B.icon_state = "guide";
						B.item_state = "guide";
					} else {
						B.icon_state = "bible";
						B.item_state = "bible";

						foreach (dynamic _q in Lang13.Enumerate( GlobalVars.areas, typeof(Zone_Chapel_Main) )) {
							A8 = _q;
							

							foreach (dynamic _p in Lang13.Enumerate( A8.contents )) {
								T8 = _p;
								

								if ( T8.icon_state == "carpetsymbol" ) {
									T8.dir = 2;
								}
							}
						}
					}
					((Mob)H).update_inv_l_hand();

					dynamic _s = Interface13.Input( H, "Look at your bible - is this what you want?", null, null, new ByTable(new object [] { "Yes", "No" }), InputType.Any ); // Was a switch-case, sorry for the mess.
					if ( _s=="Yes" ) {
						accepted = true;
					} else if ( _s=="No" ) {
						
						if ( outoftime ) {
							GlobalFuncs.to_chat( H, "<span class='warning'>Welp, out of time, buddy. You're stuck with that one. Next time choose faster.</span>" );
							accepted = true;
						}
					}
				}

				if ( GlobalVars.ticker != null ) {
					GlobalVars.ticker.Bible_icon_state = B.icon_state;
					GlobalVars.ticker.Bible_item_state = B.item_state;
					GlobalVars.ticker.Bible_name = B.name;
					GlobalVars.ticker.Bible_deity_name = B.deity_name;
				}
				GlobalFuncs.feedback_set_details( "religion_deity", "" + new_deity );
				GlobalFuncs.feedback_set_details( "religion_book", "" + new_book_style );
				return;
			}));
			return true;
		}

	}

}
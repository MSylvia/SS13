// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Gasplasma : ArtifactEffect {

		public int max_pressure = 0;
		public dynamic target_percentage = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "gasplasma";
		}

		// Function from file: unknown_effect_gasplasma.dm
		public ArtifactEffect_Gasplasma ( dynamic location = null ) : base( (object)(location) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.effect = Convert.ToInt32( Rand13.Pick(new object [] { 0, 1 }) );
			this.max_pressure = Rand13.Int( 115, 1000 );
			this.effect_type = Convert.ToInt32( Rand13.Pick(new object [] { 6, 7 }) );
			return;
		}

		// Function from file: unknown_effect_gasplasma.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			GasMixture env = null;

			
			if ( this.holder != null ) {
				env = this.holder.loc.return_air();

				if ( env != null && Convert.ToDouble( env.total_moles ) < this.max_pressure ) {
					env.toxins += Rand13.Pick(new object [] { 0, 0, 0.1, Rand13.Float() });
				}
			}
			return false;
		}

		// Function from file: unknown_effect_gasplasma.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			GasMixture env = null;

			
			if ( this.holder != null ) {
				env = this.holder.loc.return_air();

				if ( env != null ) {
					env.toxins += Rand13.Int( 2, 15 );
				}
			}
			return false;
		}

	}

}
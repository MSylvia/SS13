// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Spell_AoeTurf_Charge : Spell_AoeTurf {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Charge";
			this.desc = "This spell can be used to charge up spent magical artifacts, among other things.";
			this.school = "transmutation";
			this.charge_max = 600;
			this.spell_flags = 0;
			this.invocation = "DIRI CEL";
			this.invocation_type = "whisper";
			this.range = 0;
			this.cooldown_min = 400;
			this.hud_state = "wiz_charge";
		}

		// Function from file: charge.dm
		public bool cast_charge( Ent_Static target = null ) {
			Ent_Static charged_item = null;
			Ent_Static G = null;
			Ent_Static M = null;
			Ent_Static I = null;
			Ent_Static C = null;

			
			if ( target is Mob_Living ) {
				charged_item = this.mob_charge( target );
			}

			if ( target is Obj_Item_Weapon_Grab ) {
				G = target;

				if ( Lang13.Bool( ((dynamic)G).affecting ) ) {
					M = ((dynamic)G).affecting;
					charged_item = this.mob_charge( M );
				}
			}

			if ( target is Obj_Item_Weapon_Spellbook_Oneuse ) {
				I = target;

				if ( Rand13.PercentChance( 50 ) ) {
					I.visible_message( "<span class='warning'>" + I + " catches fire!</span>" );
					GlobalFuncs.qdel( I );
					I = null;
				} else {
					((dynamic)I).used = 0;
					charged_item = I;
				}
			}

			if ( target is Obj_Item_Weapon_Cell ) {
				C = target;

				if ( Rand13.PercentChance( 80 ) ) {
					((dynamic)C).maxcharge -= 200;

					if ( Convert.ToDouble( ((dynamic)C).maxcharge ) <= 1 ) {
						((dynamic)C).maxcharge = 1;
					}
					((dynamic)C).charge = ((dynamic)C).maxcharge;
					charged_item = C;
				}
			}

			if ( !( charged_item != null ) ) {
				return false;
			} else {
				charged_item.visible_message( "<span class='notice'>" + charged_item + " suddenly sparks with energy!</span>" );
				return true;
			}
		}

		// Function from file: charge.dm
		public Ent_Static mob_charge( Ent_Static M = null ) {
			Spell S = null;

			
			if ( ((dynamic)M).spell_list.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( ((dynamic)M).spell_list, typeof(Spell) )) {
					S = _a;
					

					if ( !( S is Spell_AoeTurf_Charge ) ) {
						S.charge_counter = S.charge_max;
					}
				}
				GlobalFuncs.to_chat( M, "<span class='notice'>You feel raw magic flowing through you, it feels good!</span>" );
			} else {
				GlobalFuncs.to_chat( M, "<span class='notice'>You feel very strange for a moment, but then it passes.</span>" );
			}
			return M;
		}

		// Function from file: charge.dm
		public void depth_cast( dynamic targets = null ) {
			Ent_Static A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( targets, typeof(Ent_Static) )) {
				A = _a;
				

				if ( A.contents.len != 0 ) {
					this.depth_cast( A.contents );
				}
				this.cast_charge( A );
			}
			return;
		}

		// Function from file: charge.dm
		public override bool cast( ByTable targets = null, Mob user = null ) {
			dynamic T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( targets )) {
				T = _a;
				
				this.depth_cast( T );
			}
			return false;
		}

	}

}
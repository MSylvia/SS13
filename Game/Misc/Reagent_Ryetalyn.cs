// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Ryetalyn : Reagent {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Ryetalyn";
			this.id = "ryetalyn";
			this.description = "Ryetalyn can cure all genetic abnomalities.";
			this.color = "#C8A5DC";
			this.overdose = 30;
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool on_mob_life( Mob_Living M = null, int? alien = null ) {
			bool needs_update = false;
			Mob_Living H = null;
			dynamic gene_type = null;
			Dna_Gene gene = null;
			int? tempflag = null;
			dynamic gene_type2 = null;
			Dna_Gene gene2 = null;

			
			if ( base.on_mob_life( M, alien ) ) {
				return true;
			}
			needs_update = M.mutations.len > 0;

			if ( M is Mob_Living_Carbon_Human ) {
				H = M;
				((dynamic)H).hulk_time = 0;

				foreach (dynamic _a in Lang13.Enumerate( H.active_genes )) {
					gene_type = _a;
					
					gene = GlobalVars.dna_genes[gene_type];
					tempflag = 0;

					if ( Lang13.Bool( ((dynamic)H).species ) && false ) {
						tempflag |= 4;
					}

					if ( gene.name == "Hulk" ) {
						gene.OnMobLife( H );
					}

					if ( gene.can_deactivate( H, tempflag ) ) {
						gene.deactivate( H, 0, tempflag );
					}
				}
			} else {
				
				foreach (dynamic _b in Lang13.Enumerate( M.active_genes )) {
					gene_type2 = _b;
					

					if ( gene_type2 == typeof(Dna_Gene_Monkey) ) {
						continue;
					}
					gene2 = GlobalVars.dna_genes[gene_type2];

					if ( gene2.can_deactivate( M, 0 ) ) {
						gene2.deactivate( M, 0, 0 );
					}
				}
			}
			M.alpha = 255;
			M.disabilities = 0;
			M.sdisabilities = 0;
			M.jitteriness = 0;

			if ( needs_update ) {
				M.update_mutations();
			}
			return false;
		}

	}

}
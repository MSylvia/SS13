// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SurgeryStep_Internal_RemoveEmbryo : SurgeryStep_Internal {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allowed_tools = new ByTable().Set( typeof(Obj_Item_Weapon_Hemostat), 100 ).Set( typeof(Obj_Item_Weapon_Wirecutters), 75 ).Set( typeof(Obj_Item_Weapon_Kitchen_Utensil_Fork), 20 );
			this.blood_level = 2;
			this.min_duration = 80;
			this.max_duration = 100;
		}

		// Function from file: organs_internal.dm
		public override bool end_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			Obj_Item_AlienEmbryo A = null;

			((Ent_Static)user).visible_message( "<span class='warning'>" + user + " rips the larva out of " + target + "'s ribcage!</span>", "You rip the larva out of " + target + "'s ribcage!" );

			foreach (dynamic _a in Lang13.Enumerate( target, typeof(Obj_Item_AlienEmbryo) )) {
				A = _a;
				
				A.loc = A.loc.loc;
			}
			return false;
		}

		// Function from file: organs_internal.dm
		public override bool begin_step( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null, dynamic surgery = null ) {
			string msg = null;
			string self_msg = null;

			msg = new Txt().item( user ).str( " starts to pull something out from " ).item( target ).str( "'s ribcage with " ).the( tool ).item().str( "." ).ToString();
			self_msg = new Txt( "You start to pull something out from " ).item( target ).str( "'s ribcage with " ).the( tool ).item().str( "." ).ToString();
			((Ent_Static)user).visible_message( msg, self_msg );
			((Mob_Living_Carbon_Human)target).custom_pain( "Something hurts horribly in your chest!", true );
			base.begin_step( (object)(user), (object)(target), target_zone, tool, (object)(surgery) );
			return false;
		}

		// Function from file: organs_internal.dm
		public override int can_use( dynamic user = null, dynamic target = null, string target_zone = null, Obj_Item tool = null ) {
			bool embryo = false;
			Obj_Item_AlienEmbryo A = null;
			dynamic affected = null;

			embryo = false;

			foreach (dynamic _a in Lang13.Enumerate( target, typeof(Obj_Item_AlienEmbryo) )) {
				A = _a;
				
				embryo = true;
				break;
			}

			if ( !GlobalFuncs.hasorgans( target ) ) {
				return 0;
			}
			affected = ((Mob_Living_Carbon_Human)target).get_organ( target_zone );
			return base.can_use( (object)(user), (object)(target), target_zone, tool ) != 0 && embryo && Convert.ToInt32( affected.open ) == 3 && target_zone == "chest" ?1:0;
		}

	}

}
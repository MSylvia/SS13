// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Heal : ArtifactEffect {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "heal";
			this.effect_type = 5;
		}

		public ArtifactEffect_Heal ( dynamic location = null ) : base( (object)(location) ) {
			
		}

		// Function from file: unknown_effect_heal.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Carbon C = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon) )) {
					C = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( C );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						GlobalFuncs.to_chat( C, "<span class='notice'>A wave of energy invigorates you.</span>" );
						C.adjustBruteLoss( weakness * -5 );
						C.adjustFireLoss( weakness * -5 );
						C.adjustToxLoss( weakness * -5 );
						C.adjustOxyLoss( weakness * -5 );
						C.adjustBrainLoss( weakness * -5 );
						C.updatehealth();
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_heal.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Carbon C = null;
			double weakness = 0;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon) )) {
					C = _a;
					
					weakness = GlobalFuncs.GetAnomalySusceptibility( C );

					if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
						
						if ( Rand13.PercentChance( 10 ) ) {
							GlobalFuncs.to_chat( C, "<span class='notice'>You feel a soothing energy radiating from something nearby.</span>" );
						}
						C.adjustBruteLoss( weakness * -1 );
						C.adjustFireLoss( weakness * -1 );
						C.adjustToxLoss( weakness * -1 );
						C.adjustOxyLoss( weakness * -1 );
						C.adjustBrainLoss( weakness * -1 );
						C.updatehealth();
					}
				}
			}
			return false;
		}

		// Function from file: unknown_effect_heal.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			double weakness = 0;
			dynamic C = null;
			dynamic H = null;
			Organ_External affecting = null;

			
			if ( Lang13.Bool( user ) && user is Mob_Living_Carbon ) {
				weakness = GlobalFuncs.GetAnomalySusceptibility( user );

				if ( Rand13.PercentChance( ((int)( weakness * 100 )) ) ) {
					C = user;
					GlobalFuncs.to_chat( C, "<span class='notice'>You feel a soothing energy invigorate you.</span>" );

					if ( user is Mob_Living_Carbon_Human ) {
						H = user;

						foreach (dynamic _a in Lang13.Enumerate( H.organs, typeof(Organ_External) )) {
							affecting = _a;
							

							if ( affecting != null && affecting is Organ_External ) {
								affecting.heal_damage( weakness * 25, weakness * 25 );
							}
						}
						H.vessel.add_reagent( "blood", 5 );
						H.nutrition += weakness * 50;
						((Mob_Living)H).adjustBrainLoss( weakness * -25 );
						H.radiation -= Num13.MinInt( Convert.ToInt32( H.radiation ), ((int)( weakness * 25 )) );
						H.bodytemperature = Lang13.Initial( H, "bodytemperature" );
						Task13.Schedule( 1, (Task13.Closure)(() => {
							((Mob_Living_Carbon_Human)H).fixblood();
							return;
						}));
					}
					((Mob_Living)C).adjustOxyLoss( weakness * -25 );
					((Mob_Living)C).adjustToxLoss( weakness * -25 );
					((Mob_Living)C).adjustBruteLoss( weakness * -25 );
					((Mob_Living)C).adjustFireLoss( weakness * -25 );
					((Mob)C).regenerate_icons();
					return true;
				}
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Fertilizer_Robustharvest : Reagent_Fertilizer {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.custom_plant_metabolism = 0.1;
			this.name = "Robust Harvest";
			this.id = "robustharvest";
			this.description = "Plant-enhancing hormones, good for increasing potency.";
			this.color = "#3E901C";
		}

		// Function from file: hydroponics_reagents.dm
		public override void on_plant_life( Obj_Machinery_PortableAtmospherics_Hydroponics T = null ) {
			double chance = 0;

			base.on_plant_life( T );
			T.adjust_nutrient( 0.05 );

			if ( Rand13.PercentChance( ((int)( ( this.custom_plant_metabolism ??0) * 25 )) ) ) {
				T.weedlevel += 1;
			}

			if ( T.seed != null && !T.dead && Rand13.PercentChance( ((int)( ( this.custom_plant_metabolism ??0) * 25 )) ) ) {
				T.pestlevel += 1;
			}

			if ( T.seed != null && !T.dead && !( T.seed.immutable != 0 ) ) {
				chance = ( GlobalFuncs.unmix( T.seed.potency, 15, 150 ) ??0) * ( this.custom_plant_metabolism ??0) * 350;

				if ( Rand13.PercentChance( ((int)( chance )) ) ) {
					T.check_for_divergence( 1 );
					T.seed.potency++;
				}
				chance = ( GlobalFuncs.unmix( T.seed.yield, 6, 2 ) ??0) * ( this.custom_plant_metabolism ??0) * 15;

				if ( Rand13.PercentChance( ((int)( chance )) ) ) {
					T.check_for_divergence( 1 );
					T.seed.yield--;
				}
			}
			return;
		}

	}

}
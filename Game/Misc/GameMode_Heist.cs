// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GameMode_Heist : GameMode {

		public int waittime_l = 600;
		public int waittime_h = 1800;
		public ByTable raid_objectives = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "heist";
			this.config_tag = "heist";
			this.required_players = 15;
			this.required_players_secret = 25;
			this.required_enemies = 4;
			this.recommended_enemies = 6;
		}

		// Function from file: heist.dm
		public override bool check_finished(  ) {
			
			if ( !( this.is_raider_crew_alive() == true ) || GlobalVars.vox_shuttle != null && GlobalVars.vox_shuttle.returned_home ) {
				return true;
			}
			return base.check_finished();
		}

		// Function from file: heist.dm
		public override bool declare_completion( bool? ragin = null ) {
			string win_type = null;
			string win_group = null;
			string win_msg = null;
			int success = 0;
			Objective O = null;
			int count = 0;
			Objective objective = null;
			Icon logo = null;
			int tempstate = 0;
			string text = null;
			dynamic end_area = null;
			Mind vox = null;
			Icon flat = null;
			Icon sprotch = null;

			
			if ( this.raid_objectives == null || this.raid_objectives.len <= 0 ) {
				return base.declare_completion( ragin );
			}
			win_type = "Major";
			win_group = "Crew";
			win_msg = "";
			success = this.raid_objectives.len;

			foreach (dynamic _a in Lang13.Enumerate( this.raid_objectives, typeof(Objective) )) {
				O = _a;
				

				if ( !Lang13.Bool( O.check_completion() ) ) {
					success--;
				}
			}

			if ( success == this.raid_objectives.len ) {
				win_type = "Major";
				win_group = "Vox";
			} else if ( success > 2 ) {
				win_type = "Minor";
				win_group = "Vox";
			} else {
				win_type = "Minor";
				win_group = "Crew";
			}

			if ( !( this.is_raider_crew_alive() == true ) ) {
				win_type = "Major";
				win_group = "Crew";
				win_msg += "<B>The Vox Raiders have been wiped out!</B>";
			} else if ( !( this.is_raider_crew_safe() == true ) ) {
				
				if ( win_group == "Crew" && win_type == "Minor" ) {
					win_type = "Major";
				}
				win_group = "Crew";
				win_msg += "<B>The Vox Raiders have left someone behind!</B>";
			} else if ( win_group == "Vox" ) {
				
				if ( win_type == "Minor" ) {
					win_type = "Major";
				}
				win_msg += "<B>The Vox Raiders escaped the station!</B>";
			} else {
				win_msg += "<B>The Vox Raiders were repelled!</B>";
			}
			this.completion_text += "<br><span class='danger'><FONT size = 3>" + win_type + " " + win_group + " victory!</FONT><br>" + win_msg + "</span>";
			GlobalFuncs.feedback_set_details( "round_end_result", "heist - " + win_type + " " + win_group );
			count = 0;

			foreach (dynamic _b in Lang13.Enumerate( this.raid_objectives, typeof(Objective) )) {
				objective = _b;
				
				count++;

				if ( Lang13.Bool( objective.check_completion() ) ) {
					this.completion_text += "<br><B>Objective #" + count + "</B>: " + objective.explanation_text + " <font color='green'><B>Success!</B></font>";
					GlobalFuncs.feedback_add_details( "traitor_objective", "" + objective.type + "|SUCCESS" );
				} else {
					this.completion_text += "<br><B>Objective #" + count + "</B>: " + objective.explanation_text + " <font color='red'>Fail.</font>";
					GlobalFuncs.feedback_add_details( "traitor_objective", "" + objective.type + "|FAIL" );
				}
			}
			logo = new Icon( "icons/mob/mob.dmi", "vox-logo" );
			GlobalVars.end_icons.Add( logo );
			tempstate = GlobalVars.end_icons.len;
			text = "<br><img src=\"logo_" + tempstate + ".png\"> <FONT size = 2><B>The vox raiders were:</B></FONT> <img src=\"logo_" + tempstate + ".png\">";
			end_area = GlobalFuncs.get_area_master( Lang13.FindObj( typeof(Zone_Shuttle_Vox_Station) ) );

			foreach (dynamic _c in Lang13.Enumerate( this.raiders, typeof(Mind) )) {
				vox = _c;
				

				if ( Lang13.Bool( vox.current ) ) {
					flat = GlobalFuncs.getFlatIcon( vox.current, GlobalVars.SOUTH, 1, true );
					GlobalVars.end_icons.Add( flat );
					tempstate = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate + ".png\"> <b>" + vox.key + "</b> was <b>" + vox.name + "</b> (";

					if ( GlobalFuncs.get_area_master( vox.current ) != end_area ) {
						text += "left behind, ";
					}

					if ( Convert.ToInt32( vox.current.stat ) != 2 ) {
						text += "survived";
					} else {
						text += "died";
						flat.Turn( 90 );
						GlobalVars.end_icons[tempstate] = flat;
					}

					if ( vox.current.real_name != vox.name ) {
						text += " as " + vox.current.real_name;
					}
				} else {
					sprotch = new Icon( "icons/effects/blood.dmi", "voxblood" );
					GlobalVars.end_icons.Add( sprotch );
					tempstate = GlobalVars.end_icons.len;
					text += "<br><img src=\"logo_" + tempstate + ".png\"> <b>" + vox.key + "</b> was <b>" + vox.name + "</b> (";
					text += "body destroyed";
				}
				text += ")";
			}
			this.completion_text += text;
			base.declare_completion( ragin );
			return true;
		}

		// Function from file: heist.dm
		public void greet_vox( Mind raider = null ) {
			int obj_count = 0;
			Objective objective = null;

			GlobalFuncs.to_chat( raider.current, "<span class='notice'><B>You are a Vox Raider, fresh from the Shoal!</b>\nThe Vox are a race of cunning, sharp-eyed nomadic raiders and traders endemic to Tau Ceti and much of the unexplored galaxy. You and the crew have come to the Exodus for plunder, trade or both.\nVox are cowardly and will flee from larger groups, but corner one or find them en masse and they are vicious.\nUse :V to voxtalk, :H to talk on your encrypted channel, and <b>don't forget to turn on your nitrogen internals!</span>" );
			obj_count = 0;

			foreach (dynamic _a in Lang13.Enumerate( raider.objectives, typeof(Objective) )) {
				objective = _a;
				
				GlobalFuncs.to_chat( raider.current, "<B>Objective #" + obj_count++ + "</B>: " + objective.explanation_text );
			}
			return;
		}

		// Function from file: heist.dm
		public void forge_vox_objectives(  ) {
			Objective_Heist O = null;
			Objective_Steal O2 = null;

			
			if ( Rand13.PercentChance( 25 ) ) {
				this.raid_objectives.Add( new Objective_Heist_Kidnap() );
			}
			this.raid_objectives.Add( new Objective_Steal_Heist() );
			this.raid_objectives.Add( new Objective_Steal_Salvage() );
			this.raid_objectives.Add( new Objective_Heist_InviolateCrew() );
			this.raid_objectives.Add( new Objective_Heist_InviolateDeath() );

			foreach (dynamic _a in Lang13.Enumerate( this.raid_objectives, typeof(Objective_Heist) )) {
				O = _a;
				
				O.choose_target();
			}

			foreach (dynamic _b in Lang13.Enumerate( this.raid_objectives, typeof(Objective_Steal) )) {
				O2 = _b;
				
				O2.find_target();
			}
			return;
		}

		// Function from file: heist.dm
		public bool? is_raider_crew_safe(  ) {
			dynamic end_area = null;
			Mind raider = null;

			
			if ( !( this.is_raider_crew_alive() == true ) ) {
				return GlobalVars.FALSE;
			}
			end_area = GlobalFuncs.get_area_master( Lang13.FindObj( typeof(Zone_Shuttle_Vox_Station) ) );

			foreach (dynamic _a in Lang13.Enumerate( this.raiders, typeof(Mind) )) {
				raider = _a;
				

				if ( GlobalFuncs.get_area_master( raider.current ) != end_area ) {
					return GlobalVars.FALSE;
				}
			}
			return GlobalVars.TRUE;
		}

		// Function from file: heist.dm
		public bool? is_raider_crew_alive(  ) {
			int raider_crew_count = 0;
			Mind raider = null;

			raider_crew_count = this.raiders.len;

			foreach (dynamic _a in Lang13.Enumerate( this.raiders, typeof(Mind) )) {
				raider = _a;
				

				if ( raider != null && raider.current is Mob_Living_Carbon_Human && Convert.ToInt32( raider.current.stat ) != 2 ) {
					continue;
				}
				raider_crew_count--;
			}

			if ( raider_crew_count <= 0 ) {
				return GlobalVars.FALSE;
			}
			return GlobalVars.TRUE;
		}

		// Function from file: heist.dm
		public override bool post_setup(  ) {
			ByTable raider_spawn = null;
			Obj_Effect_Landmark start = null;
			int index = 0;
			Mind raider = null;
			dynamic vox = null;
			Organ_External limb = null;

			raider_spawn = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.landmarks_list, typeof(Obj_Effect_Landmark) )) {
				start = _a;
				

				if ( start.name == "voxstart" ) {
					raider_spawn.Add( GlobalFuncs.get_turf( start ) );
					GlobalFuncs.qdel( start );
				}
			}
			this.forge_vox_objectives();
			index = 1;

			foreach (dynamic _c in Lang13.Enumerate( this.raiders, typeof(Mind) )) {
				raider = _c;
				

				if ( index > raider_spawn.len ) {
					index = 1;
				}
				raider.current.loc = raider_spawn[index];
				index++;
				vox = raider.current;
				raider.name = vox.name;
				vox.age = Rand13.Int( 12, 20 );
				vox.dna.mutantrace = "vox";
				((Mob_Living_Carbon_Human)vox).set_species( "Vox" );
				((Mob)vox).generate_name();
				vox.flavor_text = "";
				vox.default_language = GlobalVars.all_languages["Vox-pidgin"];
				vox.species.default_language = "Vox-pidgin";
				((Mob)vox).remove_language( "Galactic Common" );
				vox.h_style = "Short Vox Quills";
				vox.f_style = "Shaved";

				foreach (dynamic _b in Lang13.Enumerate( vox.organs, typeof(Organ_External) )) {
					limb = _b;
					
					limb.status &= 61247;
				}
				((Mob_Living_Carbon_Human)vox).equip_vox_raider();
				((Mob)vox).regenerate_icons();
				raider.objectives = this.raid_objectives;
				this.greet_vox( raider );
			}
			Task13.Schedule( Rand13.Int( GlobalVars.waittime_l, GlobalVars.waittime_h ), (Task13.Closure)(() => {
				
				if ( !this.mixed ) {
					this.send_intercept();
				}
				return;
			}));
			return false;
		}

		// Function from file: heist.dm
		public override bool pre_setup(  ) {
			ByTable candidates = null;
			int raider_num = 0;
			dynamic new_raider = null;
			Mind raider = null;

			candidates = this.get_players_for_role( "vox raider" );
			raider_num = 0;

			if ( candidates.len < this.required_enemies ) {
				GlobalFuncs.log_admin( "Failed to set-up a round of heist. Couldn't find enough volunteers to be vox raiders.(only " + candidates.len + " volunteers out of at least " + this.required_enemies + ")" );
				GlobalFuncs.message_admins( "Failed to set-up a round of heist. Couldn't find enough volunteers to be vox raiders.(only " + candidates.len + " volunteers out of at least " + this.required_enemies + ")" );
				return false;
			} else if ( candidates.len < this.recommended_enemies ) {
				raider_num = candidates.len;
			} else {
				raider_num = this.recommended_enemies;
			}

			while (raider_num > 0) {
				new_raider = Rand13.PickFromTable( candidates );
				this.raiders.Add( new_raider );
				candidates.Remove( new_raider );
				raider_num--;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.raiders, typeof(Mind) )) {
				raider = _a;
				
				raider.assigned_role = "MODE";
				raider.special_role = "Vox Raider";
			}
			GlobalFuncs.log_admin( "Starting a round of heist with " + this.raiders.len + " vox raiders." );
			GlobalFuncs.message_admins( "Starting a round of heist with " + this.raiders.len + " vox raiders." );
			return true;
		}

		// Function from file: heist.dm
		public override void announce(  ) {
			GlobalFuncs.to_chat( typeof(Game13), "\n		<B>The current game mode is - Heist!</B>\n		<B>An unidentified bluespace signature has slipped past the Icarus and is approaching " + GlobalFuncs.station_name() + "!</B>\n		Whoever they are, they're likely up to no good. Protect the crew and station resources against this dastardly threat!\n		<B>Raiders:</B> Loot " + GlobalFuncs.station_name() + " for anything and everything you need.\n		<B>Personnel:</B> Repel the raiders and their low, low prices and/or crossbows." );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class PowerConnection_Consumer : PowerConnection {

		public bool enabled = false;
		public bool use = false;
		public dynamic idle_usage = 1;
		public dynamic active_usage = 2;
		public _Event power_changed = null;

		// Function from file: components.dm
		public PowerConnection_Consumer ( Obj_Machinery_Media_Transmitter_Broadcast loc = null, int parent = 0 ) : base( loc ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.power_changed = new _Event( null, this );
			return;
		}

		// Function from file: components.dm
		public void set_enabled( dynamic value = null ) {
			this.enabled = Lang13.Bool( value );
			this.power_change();
			return;
		}

		// Function from file: components.dm
		public bool auto_use_power(  ) {
			
			if ( !this.powered( this.channel ) ) {
				return false;
			}

			switch ((bool)( this.use )) {
				case true:
					this.use_power( this.idle_usage, this.channel );
					break;
				case 2 != 0:
					this.use_power( this.active_usage, this.channel );
					break;
			}
			return true;
		}

		// Function from file: components.dm
		public override void process(  ) {
			
			if ( this.use ) {
				this.auto_use_power();
			}
			return;
		}

		// Function from file: components.dm
		public override void power_change(  ) {
			
			if ( this.power_changed is _Event ) {
				this.power_changed.Invoke( new ByTable().Set( "consumer", this ) );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Effect_Effect_System_SmokeSpread_Chem : Effect_Effect_System_SmokeSpread {

		public Obj chemholder = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.smoke_type = typeof(Obj_Effect_Effect_Smoke_Chem);
		}

		// Function from file: effect_system.dm
		public Effect_Effect_System_SmokeSpread_Chem (  ) {
			Reagents R = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.chemholder = new Obj();
			R = new Reagents( 500 );
			this.chemholder.reagents = R;
			R.my_atom = this.chemholder;
			return;
		}

		// Function from file: effect_system.dm
		public override void start(  ) {
			int? i = null;
			string color = null;
			Obj_Effect_Effect_Smoke_Chem smoke = null;
			dynamic direction = null;

			i = 0;
			color = GlobalFuncs.mix_color_from_reagents( this.chemholder.reagents.reagent_list );
			i = 0;

			while (( i ??0) < Convert.ToDouble( this.number )) {
				
				if ( this.total_smoke > 20 ) {
					return;
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					
					if ( Lang13.Bool( this.holder ) ) {
						this.location = GlobalFuncs.get_turf( this.holder );
					}
					smoke = new Obj_Effect_Effect_Smoke_Chem( this.location );
					this.total_smoke++;
					direction = this.direction;

					if ( !Lang13.Bool( direction ) ) {
						
						if ( Lang13.Bool( this.cardinals ) ) {
							direction = Rand13.PickFromTable( GlobalVars.cardinal );
						} else {
							direction = Rand13.PickFromTable( GlobalVars.alldirs );
						}
					}

					if ( this.chemholder.reagents.total_volume != 1 ) {
						this.chemholder.reagents.copy_to( smoke, ( this.chemholder.reagents.total_volume ??0) / Convert.ToDouble( this.number ) );
					}

					if ( Lang13.Bool( color ) ) {
						smoke.icon += color;
					} else {
						smoke.icon = "icons/effects/96x96.dmi";
						smoke.icon_state = "smoke";
					}
					i = 0;

					while (( i ??0) < Convert.ToDouble( Rand13.Pick(new object [] { 0, 1, 1, 1, 2, 2, 2, 3 }) )) {
						Task13.Sleep( 10 );
						Map13.Step( smoke, Convert.ToInt32( direction ) );
						i++;
					}
					Task13.Schedule( Rand13.Int( 10, 30 ) + 150, (Task13.Closure)(() => {
						
						if ( smoke != null ) {
							GlobalFuncs.qdel( smoke );
							smoke = null;
						}
						this.total_smoke--;
						return;
					}));
					return;
				}));
				i++;
			}
			return;
		}

		// Function from file: effect_system.dm
		public override void set_up( dynamic carry = null, dynamic n = null, dynamic c = null, dynamic loca = null, dynamic direct = null ) {
			n = n ?? 5;
			c = c ?? 0;

			string contained = null;
			dynamic reagent = null;
			dynamic A = null;
			string where = null;
			string whereLink = null;
			dynamic M = null;
			string more = null;

			
			if ( Convert.ToDouble( n ) > 20 ) {
				n = 20;
			}
			this.number = n;
			this.cardinals = c;
			carry.copy_to( this.chemholder, carry.total_volume );

			if ( loca is Tile ) {
				this.location = loca;
			} else {
				this.location = GlobalFuncs.get_turf( loca );
			}

			if ( Lang13.Bool( direct ) ) {
				this.direction = direct;
			}
			contained = "";

			foreach (dynamic _a in Lang13.Enumerate( carry.reagent_list )) {
				reagent = _a;
				
				contained += " " + reagent + " ";
			}

			if ( Lang13.Bool( contained ) ) {
				contained = "[" + contained + "]";
			}
			A = GlobalFuncs.get_area( this.location );
			where = "" + A.name + " | " + this.location.x + ", " + this.location.y;
			whereLink = "<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.location.x + ";Y=" + this.location.y + ";Z=" + this.location.z + "'>" + where + "</a>";

			if ( Lang13.Bool( carry.my_atom.fingerprintslast ) ) {
				M = GlobalFuncs.get_mob_by_key( carry.my_atom.fingerprintslast );
				more = "";

				if ( Lang13.Bool( M ) ) {
					more = new Txt( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( M ).str( "'>?</a>)" ).ToString();
				}
				GlobalFuncs.message_admins( "A chemical smoke reaction has taken place in (" + whereLink + ")" + contained + ". Last associated key is " + carry.my_atom.fingerprintslast + more + "." );
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "A chemical smoke reaction has taken place in (" + where + ")" + contained + ". Last associated key is " + carry.my_atom.fingerprintslast + "." ) ) );
			} else {
				GlobalFuncs.message_admins( "A chemical smoke reaction has taken place in (" + whereLink + "). No associated key." );
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "A chemical smoke reaction has taken place in (" + where + ")" + contained + ". No associated key." ) ) );
			}
			return;
		}

	}

}
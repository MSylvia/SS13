// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Species_Vox : Species {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Vox";
			this.icobase = "icons/mob/human_races/r_vox.dmi";
			this.deform = "icons/mob/human_races/r_def_vox.dmi";
			this.language = "Vox-pidgin";
			this.survival_gear = typeof(Obj_Item_Weapon_Storage_Box_Survival_Vox);
			this.primitive = typeof(Mob_Living_SimpleAnimal_Chicken);
			this.hazard_low_pressure = 0;
			this.cold_level_1 = 80;
			this.cold_level_2 = 50;
			this.cold_level_3 = 0;
			this.eyes = "vox_eyes_s";
			this.breath_type = "nitrogen";
			this.default_mutations = new ByTable(new object [] { 11 });
			this.flags = 1028;
			this.blood_color = "#2299FC";
			this.flesh_color = "#808D11";
			this.uniform_icons = "icons/mob/species/vox/uniform.dmi";
			this.gloves_icons = "icons/mob/species/vox/gloves.dmi";
			this.glasses_icons = "icons/mob/species/vox/eyes.dmi";
			this.shoes_icons = "icons/mob/species/vox/shoes.dmi";
			this.head_icons = "icons/mob/species/vox/head.dmi";
			this.wear_suit_icons = "icons/mob/species/vox/suit.dmi";
			this.wear_mask_icons = "icons/mob/species/vox/masks.dmi";
			this.has_mutant_race = false;
		}

		// Function from file: species.dm
		public override string makeName( string gender = null, dynamic C = null ) {
			int sounds = 0;
			int i = 0;
			string newname = null;

			sounds = Rand13.Int( 2, 8 );
			i = 0;
			newname = "";

			while (i <= sounds) {
				i++;
				newname += Rand13.PickFromTable( GlobalVars.vox_name_syllables );
			}
			return GlobalFuncs.capitalize( newname );
		}

		// Function from file: species.dm
		public override void equip( Mob_Living_Carbon_Human H = null ) {
			Type suit = null;
			Type helm = null;
			int? tank_slot = null;
			string tank_slot_name = null;

			
			if ( H.mind.assigned_role != "MODE" ) {
				H.u_equip( H.wear_suit, true );
				H.u_equip( H.head, true );
			}

			if ( H.mind.assigned_role != "Clown" ) {
				H.u_equip( H.wear_mask, true );
			}
			H.equip_or_collect( new Obj_Item_Clothing_Mask_Breath_Vox( H ), 2 );
			suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ);
			helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ);
			tank_slot = 17;
			tank_slot_name = "suit storage";

			dynamic _b = H.mind.assigned_role; // Was a switch-case, sorry for the mess.
			if ( _b=="Bartender" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Bartender);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Bartender);
			} else if ( _b=="Chef" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Chef);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Chef);
			} else if ( _b=="Chaplain" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Chaplain);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Chaplain);
			} else if ( _b=="Librarian" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Librarian);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Librarian);
			} else if ( _b=="Chief Engineer" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Engineer_Ce);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Engineer_Ce);
			} else if ( _b=="Station Engineer" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Engineer);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Engineer);
			} else if ( _b=="Atmospheric Technician" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Engineer_Atmos);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Engineer_Atmos);
			} else if ( _b=="Scientist" || _b=="Roboticist" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Science);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Science);
			} else if ( _b=="Research Director" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Science_Rd);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Science_Rd);
			} else if ( _b=="Medical Doctor" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical);
			} else if ( _b=="Paramedic" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical_Paramedic);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical_Paramedic);
			} else if ( _b=="Geneticist" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical_Geneticist);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical_Geneticist);
			} else if ( _b=="Virologist" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical_Virologist);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical_Virologist);
			} else if ( _b=="Chemist" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical_Chemist);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical_Chemist);
			} else if ( _b=="Chief Medical Officer" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Medical_Cmo);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Medical_Cmo);
			} else if ( _b=="Head of Security" || _b=="Warden" || _b=="Detective" || _b=="Security Officer" ) {
				suit = typeof(Obj_Item_Clothing_Suit_Space_Vox_Civ_Security);
				helm = typeof(Obj_Item_Clothing_Head_Helmet_Space_Vox_Civ_Security);
			} else if ( _b=="Clown" || _b=="Mime" ) {
				tank_slot = 5;
				tank_slot_name = "hand";
			} else if ( _b=="MODE" ) {
				
				switch ((string)( H.mind.special_role )) {
					case "Wizard":
						suit = null;
						helm = null;
						tank_slot = 4;
						tank_slot_name = "hand";
						break;
				}
			}

			if ( suit != null ) {
				H.equip_or_collect( Lang13.Call( suit, H ), 13 );
			}

			if ( helm != null ) {
				H.equip_or_collect( Lang13.Call( helm, H ), 11 );
			}
			H.equip_or_collect( new Obj_Item_Weapon_Tank_Nitrogen( H ), tank_slot );
			GlobalFuncs.to_chat( H, "<span class='info'>You are now running on nitrogen internals from the " + H.s_store + " in your " + tank_slot_name + ". Your species finds oxygen toxic, so <b>you must breathe nitrogen (AKA N<sub>2</sub>) only</b>.</span>" );
			H.v_internal = H.get_item_by_slot( tank_slot );

			if ( H.internals != null ) {
				((dynamic)H.internals).icon_state = "internal1";
			}
			return;
		}

	}

}
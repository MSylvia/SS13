// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Moduletypes : Game_Data {

		public ByTable modcount = new ByTable();

		// Function from file: modules.dm
		public double getbitmask( Type type = null ) {
			double count = 0;
			string modtext = null;
			double num = 0;
			int pos = 0;

			count = Convert.ToDouble( this.modcount["" + type] );

			if ( count != 0 ) {
				return Math.Pow( 2, count ) - 1;
			}
			modtext = GlobalVars.modules["" + type];
			num = 1;
			pos = 1;

			while (true) {
				pos = String13.FindIgnoreCase( modtext, ",", pos, 0 );

				if ( !( pos != 0 ) ) {
					break;
				} else {
					pos++;
					num++;
				}
			}
			this.modcount.Add( "" + type );
			this.modcount["" + type] = num;
			return Math.Pow( 2, num ) - 1;
		}

		// Function from file: modules.dm
		public dynamic inmodlist( Type type = null ) {
			Interface13.Stat( null, GlobalVars.modules.Contains( "" + type ) );
			return null;
		}

		// Function from file: modules.dm
		public void addmod( dynamic type = null, dynamic modtextlist = null ) {
			GlobalVars.modules.Add( type );
			GlobalVars.modules[type] = modtextlist;
			return;
		}

	}

}
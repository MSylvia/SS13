// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GlobalIterator_MechSleeper : GlobalIterator {

		public GlobalIterator_MechSleeper ( ByTable arguments = null, bool? autostart = null ) : base( arguments, autostart ) {
			
		}

		// Function from file: medical_tools.dm
		public override bool process( Obj port = null, dynamic mecha = null ) {
			Mob_Living M = null;

			
			if ( !Lang13.Bool( ((dynamic)port).chassis ) ) {
				((dynamic)port).set_ready_state( 1 );
				return this.stop();
			}

			if ( !((Obj_Mecha)((dynamic)port).chassis).has_charge( ((dynamic)port).energy_drain ) ) {
				((dynamic)port).set_ready_state( 1 );
				((dynamic)port).log_message( "Deactivated." );
				((dynamic)port).occupant_message( "" + this + " deactivated - no power." );
				return this.stop();
			}
			M = ((dynamic)port).occupant;

			if ( !( M != null ) ) {
				return false;
			}

			if ( Convert.ToDouble( M.health ) > 0 ) {
				M.adjustOxyLoss( -1 );
				M.updatehealth();
			}
			M.AdjustStunned( -4 );
			M.AdjustWeakened( -4 );
			M.AdjustStunned( -4 );
			M.Paralyse( 2 );
			M.Weaken( 2 );
			M.Stun( 2 );

			if ( ( ((Reagents)M.reagents).get_reagent_amount( "inaprovaline" ) ?1:0) < 5 ) {
				((Reagents)M.reagents).add_reagent( "inaprovaline", 5 );
			}
			((dynamic)port).chassis.use_power( ((dynamic)port).energy_drain );
			((dynamic)port).update_equip_info();
			return false;
		}

	}

}
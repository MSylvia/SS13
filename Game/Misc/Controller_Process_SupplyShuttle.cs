// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Controller_Process_SupplyShuttle : Controller_Process {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.schedule_interval = 300;
		}

		public Controller_Process_SupplyShuttle ( dynamic scheduler = null ) : base( (object)(scheduler) ) {
			
		}

		// Function from file: supplyShuttle.dm
		public override bool doWork(  ) {
			int ticksleft = 0;

			
			if ( GlobalVars.supply_shuttle.moving == 1 ) {
				ticksleft = GlobalVars.supply_shuttle.eta_timeofday - Game13.timeofday;

				if ( ticksleft > 0 ) {
					GlobalVars.supply_shuttle.eta = Num13.Round( ticksleft / 600, 1 );
				} else {
					GlobalVars.supply_shuttle.eta = 0;
					GlobalVars.supply_shuttle.send();
				}
			}
			return false;
		}

		// Function from file: supplyShuttle.dm
		public override void setup(  ) {
			dynamic typepath = null;
			dynamic P = null;

			this.name = "supply shuttle";

			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(SupplyPacks) ) - typeof(SupplyPacks) )) {
				typepath = _a;
				
				P = Lang13.Call( typepath );
				GlobalVars.supply_shuttle.supply_packs[P.name] = P;
			}
			return;
		}

	}

}
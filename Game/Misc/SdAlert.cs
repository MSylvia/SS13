// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SdAlert : Game_Data {

		public Client target = null;
		public dynamic response = null;
		public ByTable validation = null;

		// Function from file: sd_Alert.dm
		public SdAlert ( dynamic who = null, dynamic tag = null ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.target = who;
			this.tag = tag;
			return;
		}

		// Function from file: sd_Alert.dm
		public dynamic Response(  ) {
			bool validated = false;
			ByTable L = null;

			
			while (!validated) {
				
				while (this.target != null && !Lang13.Bool( this.response )) {
					Task13.Sleep( 2 );
				}

				if ( Lang13.Bool( this.response ) && this.validation != null ) {
					
					if ( this.response is ByTable ) {
						L = this.response - this.validation;

						if ( L.len != 0 ) {
							this.response = null;
						} else {
							validated = true;
						}
					} else if ( this.validation.Contains( this.response ) ) {
						validated = true;
					} else {
						this.response = null;
					}
				} else {
					validated = true;
				}
			}
			Task13.Schedule( 2, (Task13.Closure)(() => {
				GlobalFuncs.qdel( this );
				return;
			}));
			return this.response;
		}

		// Function from file: sd_Alert.dm
		public void Display( dynamic message = null, dynamic title = null, ByTable buttons = null, dynamic __default = null, dynamic unfocus = null, dynamic size = null, dynamic table = null, dynamic style = null, dynamic select = null, dynamic flags = null ) {
			string html = null;
			dynamic b = null;
			dynamic b2 = null;
			ByTable L = null;
			string html_string = null;
			string focus = null;
			dynamic b3 = null;
			ByTable L2 = null;
			string html_string2 = null;
			string focus2 = null;

			
			if ( Lang13.Bool( unfocus ) ) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					Interface13.Browse( this.target, null, null );
					return;
				}));
			}

			if ( buttons is string ) {
				buttons = new ByTable(new object [] { buttons });
			}

			if ( !Lang13.Bool( __default ) ) {
				__default = buttons[1];
			}

			if ( !Lang13.Bool( flags & 8 ) ) {
				this.validation = buttons.Copy();
			}
			html = new Txt( "<head><title>" ).item( title ).str( "</title>" ).item( style ).str( "<script>function c(x) {document.location.href='BYOND://?src=" ).Ref( this ).str( ";'+x;}</script></head><body onLoad=\"fcs.focus();\"" ).item( ( Lang13.Bool( flags & 1 ) ? "" : " scroll=no" ) ).str( "><table " ).item( table ).str( "><tr><td>" ).item( message ).str( "</td></tr><tr><th>" ).ToString();

			if ( Lang13.Bool( select ) || Lang13.Bool( flags & 2 ) ) {
				html += new Txt( "<FORM ID=fcs ACTION='BYOND://?' METHOD=GET><INPUT TYPE=HIDDEN NAME=src VALUE='" ).Ref( this ).str( "'>\n				<SELECT NAME=clk SIZE=" ).item( select ).item( ( Lang13.Bool( flags & 2 ) ? " MULTIPLE" : "" ) ).str( ">" ).ToString();

				foreach (dynamic _a in Lang13.Enumerate( buttons )) {
					b = _a;
					
					html += "<OPTION" + ( b == __default ? " SELECTED" : "" ) + ">" + String13.HtmlEncode( b ) + "</OPTION>";
				}
				html += "</SELECT><BR><INPUT TYPE=SUBMIT VALUE=Submit></FORM>";
			} else if ( Lang13.Bool( flags & 4 ) ) {
				
				foreach (dynamic _b in Lang13.Enumerate( buttons )) {
					b2 = _b;
					
					L = new ByTable();
					L["clk"] = b2;
					html_string = String13.MakeUrlParams( L );
					focus = null;

					if ( b2 == __default ) {
						focus = " ID=fcs";
					}
					html += "<A" + focus + " href=# onClick=\"c('" + html_string + "')\">" + String13.HtmlEncode( b2 ) + "</A><BR>";
				}
			} else {
				
				foreach (dynamic _c in Lang13.Enumerate( buttons )) {
					b3 = _c;
					
					L2 = new ByTable();
					L2["clk"] = b3;
					html_string2 = String13.MakeUrlParams( L2 );
					focus2 = null;

					if ( b3 == __default ) {
						focus2 = " ID=fcs";
					}
					html += "<INPUT" + focus2 + " TYPE=button VALUE='" + String13.HtmlEncode( b3 ) + "' onClick=\"c('" + html_string2 + "')\"> ";
				}
			}
			html += "</th></tr></table></body>";
			Interface13.Browse( this.target, html, new Txt( "window=" ).Ref( this ).str( ";size=" ).item( size ).str( ";can_close=0" ).ToString() );
			return;
		}

		// Function from file: sd_Alert.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Task13.User.client != this.target ) {
				return null;
			}
			this.response = href_list["clk"];
			return null;
		}

		// Function from file: sd_Alert.dm
		public override void Del(  ) {
			Interface13.Browse( this.target, null, new Txt( "window=" ).Ref( this ).ToString() );
			base.Del();
			return;
		}

	}

}
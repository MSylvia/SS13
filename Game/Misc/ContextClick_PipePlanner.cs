// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ContextClick_PipePlanner : ContextClick {

		public ContextClick_PipePlanner ( Obj_Item to_hold = null ) : base( to_hold ) {
			
		}

		// Function from file: pipe_planner.dm
		public override dynamic action( dynamic used_item = null, dynamic user = null, dynamic _params = null ) {
			dynamic pipe = null;
			dynamic dis = null;

			
			if ( used_item is Obj_Item_Pipe ) {
				pipe = used_item;

				if ( ((Mob)user).drop_item( pipe, GlobalFuncs.get_turf( this.holder ) ) ) {
					dis = this.return_clicked_id_by_params( _params ) + 3;
					pipe.setPipingLayer( dis );
					return 1;
				}
			}
			return 0;
		}

		// Function from file: pipe_planner.dm
		public override dynamic return_clicked_id( double? x_pos = null, double? y_pos = null ) {
			dynamic found_id = null;
			double? temp_dis = null;
			double temp_mod = 0;

			found_id = 0;
			temp_dis = 0;
			temp_mod = 0;

			if ( ( this.holder.dir & 12 ) != 0 ) {
				temp_dis = x_pos;
				temp_mod = 5;
			} else {
				temp_dis = y_pos;
				temp_mod = -5;
			}

			if ( ( temp_dis ??0) - 16 == 0 ) {
				return 0;
			}
			found_id = GlobalFuncs.Floor( Math.Abs( ( temp_dis ??0) - 16 ), Math.Abs( temp_mod ) ) / ( temp_mod * GlobalFuncs.sign( ( temp_dis ??0) - 16 ) );
			return found_id;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Mutagen : Reagent {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.custom_plant_metabolism = 2;
			this.name = "Unstable mutagen";
			this.id = "mutagen";
			this.description = "Might cause unpredictable mutations. Keep away from children.";
			this.reagent_state = 2;
			this.color = "#13BC5E";
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool on_mob_life( Mob_Living M = null, int? alien = null ) {
			
			if ( !( M.dna != null ) ) {
				return false;
			}

			if ( !( M != null ) ) {
				M = ((dynamic)this.holder).my_atom;
			}

			if ( base.on_mob_life( M, alien ) ) {
				return true;
			}
			M.apply_effect( 10, "irradiate", 0 );
			return false;
		}

		// Function from file: Chemistry-Reagents.dm
		public override bool reaction_mob( dynamic M = null, int? method = null, double volume = 0 ) {
			method = method ?? GlobalVars.TOUCH;

			
			if ( base.reaction_mob( (object)(M), method, volume ) ) {
				return true;
			}

			if ( !Lang13.Bool( M.dna ) ) {
				return false;
			}

			if ( method == GlobalVars.TOUCH && Rand13.PercentChance( 33 ) || method == GlobalVars.INGEST ) {
				GlobalFuncs.randmuti( M );

				if ( Rand13.PercentChance( 98 ) ) {
					GlobalFuncs.randmutb( M );
				} else {
					GlobalFuncs.randmutg( M );
				}
				GlobalFuncs.domutcheck( M, null );
				((Mob)M).UpdateAppearance();
			}
			return false;
		}

		// Function from file: hydroponics_reagents.dm
		public override void on_plant_life( Obj_Machinery_PortableAtmospherics_Hydroponics T = null ) {
			base.on_plant_life( T );
			T.mutation_level += T.mutation_mod * ( this.custom_plant_metabolism ??0);
			return;
		}

	}

}
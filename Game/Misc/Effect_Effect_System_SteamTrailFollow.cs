// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Effect_Effect_System_SteamTrailFollow : Effect_Effect_System {

		public dynamic oldposition = null;
		public bool processing = true;
		public bool on = true;

		// Function from file: effect_system.dm
		public void stop(  ) {
			this.processing = false;
			this.on = false;
			return;
		}

		// Function from file: effect_system.dm
		public override void start(  ) {
			Obj_Effect_Effect_Steam I = null;

			
			if ( !this.on ) {
				this.on = true;
				this.processing = true;
			}

			if ( this.processing ) {
				this.processing = false;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					
					if ( Convert.ToDouble( this.number ) < 3 ) {
						I = new Obj_Effect_Effect_Steam( this.oldposition );
						this.number++;
						this.oldposition = GlobalFuncs.get_turf( this.holder );
						I.dir = Convert.ToInt32( this.holder.dir );
						Task13.Schedule( 10, (Task13.Closure)(() => {
							
							if ( I != null ) {
								GlobalFuncs.qdel( I );
							}
							this.number--;
							return;
						}));
						Task13.Schedule( 2, (Task13.Closure)(() => {
							
							if ( this.on ) {
								this.processing = true;
								this.start();
							}
							return;
						}));
					} else {
						Task13.Schedule( 2, (Task13.Closure)(() => {
							
							if ( this.on ) {
								this.processing = true;
								this.start();
							}
							return;
						}));
					}
					return;
				}));
			}
			return;
		}

		// Function from file: effect_system.dm
		public override void set_up( dynamic carry = null, dynamic n = null, dynamic c = null, dynamic loca = null, dynamic direct = null ) {
			this.attach( carry );
			this.oldposition = GlobalFuncs.get_turf( carry );
			return;
		}

	}

}
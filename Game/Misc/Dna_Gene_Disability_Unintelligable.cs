// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Dna_Gene_Disability_Unintelligable : Dna_Gene_Disability {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Unintelligable";
			this.desc = "Heavily corrupts the part of the brain responsible for forming spoken sentences.";
			this.activation_message = "You can't seem to form any coherent thoughts!";
			this.deactivation_message = "Your mind feels more clear.";
		}

		// Function from file: goon_disabilities.dm
		public Dna_Gene_Disability_Unintelligable (  ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.block = GlobalVars.SCRAMBLEBLOCK;
			return;
		}

		// Function from file: goon_disabilities.dm
		public override dynamic OnSay( Mob M = null, dynamic message = null ) {
			string prefix = null;
			ByTable words = null;
			ByTable rearranged = null;
			int? i = null;
			dynamic cword = null;
			string suffix = null;

			prefix = String13.SubStr( message.message, 1, 2 );

			if ( prefix == ";" ) {
				message.message = String13.SubStr( message.message, 2, 0 );
			} else if ( new ByTable(new object [] { ":", "#" }).Contains( prefix ) ) {
				prefix += String13.SubStr( message.message, 2, 3 );
				message.message = String13.SubStr( message.message, 3, 0 );
			} else {
				prefix = "";
			}
			words = GlobalFuncs.text2list( message.message, " " );
			rearranged = new ByTable();
			i = null;
			i = 1;

			while (( i ??0) <= words.len) {
				cword = Rand13.PickFromTable( words );
				words.Remove( cword );
				suffix = String13.SubStr( cword, Lang13.Length( cword ) - 1, Lang13.Length( cword ) );

				while (new ByTable(new object [] { ".", ",", ";", "!", ":", "?" }).Contains( Lang13.Length( cword ) > 0 && Lang13.Bool( suffix ) )) {
					cword = String13.SubStr( cword, 1, Lang13.Length( cword ) - 1 );
					suffix = String13.SubStr( cword, Lang13.Length( cword ) - 1, Lang13.Length( cword ) );
				}

				if ( Lang13.Length( cword ) != 0 ) {
					rearranged.Add( cword );
				}
				i++;
			}
			message.message = "" + prefix + String13.ToUpper( GlobalFuncs.list2text( rearranged, " " ) ) + "!!";
			return null;
		}

	}

}
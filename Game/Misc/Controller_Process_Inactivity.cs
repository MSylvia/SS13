// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Controller_Process_Inactivity : Controller_Process {

		public Controller_Process_Inactivity ( dynamic scheduler = null ) : base( (object)(scheduler) ) {
			
		}

		// Function from file: inactivity.dm
		public override bool doWork(  ) {
			dynamic C = null;

			
			if ( GlobalVars.config.kick_inactive ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.clients )) {
					C = _a;
					

					if ( !Lang13.Bool( ((dynamic)typeof(Client)).IsInstanceOfType( C ) ) ) {
						continue;
					}

					if ( ((Client)C).is_afk( 6000 ) != 0 ) {
						
						if ( !( C.mob is Mob_Dead ) ) {
							GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ACCESS: " + ( "AFK: " + GlobalFuncs.key_name( C ) ) ) );
							GlobalFuncs.to_chat( C, "<SPAN CLASS='warning'>You have been inactive for more than 10 minutes and have been disconnected.</SPAN>" );
							Lang13.Delete( C );
							C = null;
						}
					}
					this.scheck();
				}
			}
			return false;
		}

		// Function from file: inactivity.dm
		public override void setup(  ) {
			this.name = "inactivity";
			this.schedule_interval = 6000;
			return;
		}

	}

}
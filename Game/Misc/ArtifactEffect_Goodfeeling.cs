// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ArtifactEffect_Goodfeeling : ArtifactEffect {

		public ByTable messages = new ByTable(new object [] { 
											"You feel good.", 
											"Everything seems to be going alright", 
											"You've got a good feeling about this", 
											"Your instincts tell you everything is going to be getting better.", 
											"There's a good feeling in the air.", 
											"Something smells... good.", 
											"The tips of your fingers feel tingly.", 
											"You've got a good feeling about this.", 
											"You feel happy.", 
											"You fight the urge to smile.", 
											"Your scalp prickles.", 
											"All the colours seem a bit more vibrant.", 
											"Everything seems a little lighter.", 
											"The troubles of the world seem to fade away."
										 });
		public ByTable drastic_messages = new ByTable(new object [] { 
											"You want to hug everyone you meet!", 
											"Everything is going so well!", 
											"You feel euphoric.", 
											"You feel giddy.", 
											"You're so happy suddenly, you almost want to dance and sing.", 
											"You feel like the world is out to help you."
										 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effecttype = "goodfeeling";
			this.effect_type = 2;
		}

		public ArtifactEffect_Goodfeeling ( dynamic location = null ) : base( (object)(location) ) {
			
		}

		// Function from file: unknown_effect_goodfeeling.dm
		public override bool DoEffectPulse( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					

					if ( Rand13.PercentChance( 50 ) ) {
						
						if ( Rand13.PercentChance( 95 ) ) {
							GlobalFuncs.to_chat( H, "<font color='blue' size='" + String13.NumberToString( Rand13.Int( 1, 5 ) ) + "'><b>" + Rand13.PickFromTable( this.drastic_messages ) + "</b></font>" );
						} else {
							GlobalFuncs.to_chat( H, "<font color='blue'>" + Rand13.PickFromTable( this.messages ) + "</font>" );
						}
					}

					if ( Rand13.PercentChance( 50 ) ) {
						H.dizziness += Rand13.Int( 3, 5 );
					} else if ( Rand13.PercentChance( 25 ) ) {
						H.dizziness += Rand13.Int( 5, 15 );
					}
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_goodfeeling.dm
		public override bool DoEffectAura( dynamic holder = null ) {
			Mob_Living_Carbon_Human H = null;

			
			if ( this.holder != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.holder, this.effectrange ), typeof(Mob_Living_Carbon_Human) )) {
					H = _a;
					

					if ( Rand13.PercentChance( 5 ) ) {
						
						if ( Rand13.PercentChance( 75 ) ) {
							GlobalFuncs.to_chat( H, "<font color='blue'>" + Rand13.PickFromTable( this.messages ) + "</font>" );
						} else {
							GlobalFuncs.to_chat( H, "<font color='blue' size='" + String13.NumberToString( Rand13.Int( 1, 5 ) ) + "'><b>" + Rand13.PickFromTable( this.drastic_messages ) + "</b></font>" );
						}
					}

					if ( Rand13.PercentChance( 5 ) ) {
						H.dizziness += Rand13.Int( 3, 5 );
					}
				}
				return true;
			}
			return false;
		}

		// Function from file: unknown_effect_goodfeeling.dm
		public override bool DoEffectTouch( dynamic user = null ) {
			dynamic H = null;

			
			if ( Lang13.Bool( user ) ) {
				
				if ( user is Mob_Living_Carbon_Human ) {
					H = user;

					if ( Rand13.PercentChance( 50 ) ) {
						
						if ( Rand13.PercentChance( 75 ) ) {
							GlobalFuncs.to_chat( H, "<b><font color='blue' size='" + String13.NumberToString( Rand13.Int( 1, 5 ) ) + "'><b>" + Rand13.PickFromTable( this.drastic_messages ) + "</b></font>" );
						} else {
							GlobalFuncs.to_chat( H, "<font color='blue'>" + Rand13.PickFromTable( this.messages ) + "</font>" );
						}
					}

					if ( Rand13.PercentChance( 50 ) ) {
						H.dizziness += Rand13.Int( 3, 5 );
					}
				}
			}
			return false;
		}

	}

}
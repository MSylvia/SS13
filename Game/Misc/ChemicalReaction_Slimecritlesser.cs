// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ChemicalReaction_Slimecritlesser : ChemicalReaction {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Slime Crit Lesser";
			this.id = "m_tele3";
			this.required_reagents = new ByTable().Set( "blood", 5 );
			this.result_amount = 1;
			this.required_container = typeof(Obj_Item_SlimeExtract_Gold);
			this.required_other = true;
		}

		// Function from file: Chemistry-Recipes.dm
		public override void on_reaction( Reagents holder = null, int? created_volume = null ) {
			ByTable blocked = null;
			dynamic critters = null;
			dynamic O = null;
			dynamic H = null;
			dynamic chosen = null;
			dynamic C = null;

			GlobalFuncs.feedback_add_details( "slime_cores_used", "" + GlobalFuncs.replacetext( this.name, " ", "_" ) );

			if ( !( holder.my_atom.loc is Obj_Item_Weapon_Grenade_ChemGrenade ) ) {
				holder.my_atom.visible_message( "<span class='warning'>The slime extract begins to vibrate violently !</span>" );
				this.send_admin_alert( holder, "gold slime + blood" );
				Task13.Sleep( 50 );
			} else {
				this.send_admin_alert( holder, "gold slime + blood in a grenade" );
			}
			blocked = new ByTable(new object [] { 
				typeof(Mob_Living_SimpleAnimal_Hostile_Alien_Queen_Large), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Retaliate_Clown), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mushroom), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Carp_Holocarp), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Faithless_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Scarybat_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Creature_Cult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Slime), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Slime_Adult), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Hivebot_Tele), 
				typeof(Mob_Living_SimpleAnimal_Hostile_MiningDrone)
			 }) + Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal_Hostile_Humanoid) ) + Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal_Hostile_Asteroid) );
			critters = GlobalFuncs.existing_typesof( typeof(Mob_Living_SimpleAnimal_Hostile) ) - blocked;
			this.send_admin_alert( holder, "gold slime + blood" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( holder.my_atom ), "sound/effects/phasein.ogg", 100, 1 );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, GlobalFuncs.get_turf( holder.my_atom ) ) )) {
				O = _a;
				

				if ( O is Mob_Living_Carbon_Human ) {
					H = O;

					if ( Convert.ToDouble( H.eyecheck() ) <= 0 && !( H.glasses is Obj_Item_Clothing_Glasses_Science ) ) {
						Icon13.Flick( "e_flash", O.flash );
						GlobalFuncs.to_chat( O, "<span class='rose'>A flash blinds and you can feel a new presence !</span>" );
					} else {
						GlobalFuncs.to_chat( O, "<span class='rose'>You hear a crackling as a creature manifests before you !</span>" );
					}
				} else {
					GlobalFuncs.to_chat( O, "<span class='rose'>You hear a crackling as a creature manifests before you !</span>" );
				}
			}
			chosen = Rand13.PickFromTable( critters );
			C = Lang13.Call( chosen );
			C.faction = "neutral";
			C.loc = GlobalFuncs.get_turf( holder.my_atom );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Dna_Gene_Disability_Speech_Elvis : Dna_Gene_Disability_Speech {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Elvis";
			this.desc = "Forces the language center and primary motor cortex of the subject's brain to talk and act like the King of Rock and Roll.";
			this.activation_message = "You feel pretty good, honeydoll.";
			this.deactivation_message = "You feel a little less conversation would be great.";
		}

		// Function from file: goon_disabilities.dm
		public Dna_Gene_Disability_Speech_Elvis (  ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.block = GlobalVars.ELVISBLOCK;
			return;
		}

		// Function from file: goon_disabilities.dm
		public override void OnMobLife( Mob_Living M = null ) {
			ByTable dancetypes = null;
			dynamic dancemoves = null;

			
			dynamic _a = Rand13.Pick(new object [] { 1, 2 }); // Was a switch-case, sorry for the mess.
			if ( _a==1 ) {
				
				if ( Rand13.PercentChance( 15 ) ) {
					dancetypes = new ByTable(new object [] { "swinging", "fancy", "stylish", "20'th century", "jivin'", "rock and roller", "cool", "salacious", "bashing", "smashing" });
					dancemoves = Rand13.PickFromTable( dancetypes );
					M.visible_message( "<b>" + M + "</b> busts out some " + dancemoves + " moves!" );
				}
			} else if ( _a==2 ) {
				
				if ( Rand13.PercentChance( 15 ) ) {
					M.visible_message( "<b>" + M + "</b> " + Rand13.Pick(new object [] { "jiggles their hips", "rotates their hips", "gyrates their hips", "taps their foot", "dances to an imaginary song", "jiggles their legs", "snaps their fingers" }) );
				}
			}
			return;
		}

		// Function from file: goon_disabilities.dm
		public override dynamic OnSay( Mob M = null, dynamic message = null ) {
			
			if ( Rand13.PercentChance( 5 ) ) {
				M.visible_message( "<b>" + M + "</b> " + Rand13.Pick(new object [] { "rambles to themselves.", "begins talking to themselves." }) );
				return 1;
			}
			message.message = GlobalFuncs.replacetext( message.message, "im not", "I ain't" );
			message.message = GlobalFuncs.replacetext( message.message, "i'm not", "I aint" );
			message.message = GlobalFuncs.replacetext( message.message, " girl ", Rand13.Pick(new object [] { " honey ", " baby ", " baby doll " }) );
			message.message = GlobalFuncs.replacetext( message.message, " man ", Rand13.Pick(new object [] { " son ", " buddy ", " brother ", " pal ", " friendo " }) );
			message.message = GlobalFuncs.replacetext( message.message, "out of", "outta" );
			message.message = GlobalFuncs.replacetext( message.message, "thank you", "thank you, thank you very much" );
			message.message = GlobalFuncs.replacetext( message.message, "what are you", "whatcha" );
			message.message = GlobalFuncs.replacetext( message.message, "yes", Rand13.Pick(new object [] { "sure", "yea" }) );
			message.message = GlobalFuncs.replacetext( message.message, "faggot", "square" );
			message.message = GlobalFuncs.replacetext( message.message, "muh valids", "my kicks" );
			message.message = GlobalFuncs.replacetext( message.message, " vox ", " bird " );
			return null;
		}

	}

}
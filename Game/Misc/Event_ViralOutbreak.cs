// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Event_ViralOutbreak : Event {

		public int severity = 1;

		public Event_ViralOutbreak ( Obj_Item_MechaParts_MechaEquipment_Tool_CableLayer tlistener = null, string tprocname = null ) : base( tlistener, tprocname ) {
			
		}

		// Function from file: viral_outbreak.dm
		public override bool start(  ) {
			dynamic candidates = null;
			Mob_Living_Carbon_Human G = null;

			candidates = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Human) )) {
				G = _a;
				

				if ( G.z == GlobalVars.map.zCentcomm ) {
					continue;
				}

				if ( G.client != null && G.stat != 2 ) {
					candidates += G;
				}
			}

			if ( !( candidates.len != 0 ) ) {
				return false;
			}
			candidates = GlobalFuncs.shuffle( candidates );

			while (this.severity > 0 && candidates.len != 0) {
				
				if ( Rand13.PercentChance( 33 ) ) {
					GlobalFuncs.infect_mob_random_lesser( candidates[1] );
				} else {
					GlobalFuncs.infect_mob_random_greater( candidates[1] );
				}
				candidates.Remove( candidates[1] );
				this.severity--;
			}
			return false;
		}

		// Function from file: viral_outbreak.dm
		public override void announce(  ) {
			GlobalFuncs.biohazard_alert();
			return;
		}

		// Function from file: viral_outbreak.dm
		public override void setup(  ) {
			this.announceWhen = Rand13.Int( 0, 3000 );
			this.endWhen = this.announceWhen + 1;
			this.severity = Rand13.Int( 2, 4 );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Spell_Targeted_Empath : Spell_Targeted {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Read Mind";
			this.desc = "Read the minds of others for information.";
			this.panel = "Mutant Powers";
			this.compatible_mobs = new ByTable(new object [] { typeof(Mob_Living_Carbon) });
			this.hud_state = "gen_rmind";
			this.override_base = "genetic";
			this.mind_affecting = true;
		}

		// Function from file: goon_powers.dm
		public override bool cast( ByTable targets = null, Mob user = null ) {
			Mob_Living M = null;
			dynamic pain_condition = null;
			ByTable randomthoughts = null;
			string thoughts = null;
			Mob_Living L = null;
			ByTable numbers = null;
			Mob_Living H = null;

			
			if ( !( targets != null ) || !( targets.len != 0 ) ) {
				return false;
			}
			M = targets[1];

			if ( !( M != null ) || !( M.loc != null ) ) {
				return false;
			}

			if ( !( M is Mob_Living_Carbon ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>This can only be used on carbon beings.</span>" );
				return false;
			}

			if ( M.mutations.Contains( 204 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You can't see into " + M.name + "'s mind at all!</span>" );
				return false;
			}

			if ( M.stat == 2 ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + M.name + " is dead and cannot have their mind read.</span>" );
				return false;
			}

			if ( Convert.ToDouble( M.health ) < 0 ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + M.name + " is dying, and their thoughts are too scrambled to read.</span>" );
				return false;
			}
			GlobalFuncs.to_chat( user, "<span class='notice'><b>Mind Reading of " + M.name + ":</b></span>" );
			pain_condition = M.health;
			randomthoughts = new ByTable(new object [] { 
				"what to have for lunch", 
				"the future", 
				"the past", 
				"money", 
				"their hair", 
				"what to do next", 
				"their job", 
				"space", 
				"amusing things", 
				"sad things", 
				"annoying things", 
				"happy things", 
				"something incoherent", 
				"something they did wrong", 
				"getting those valids", 
				"burning catpeople", 
				"something spooky", 
				"somethng lewd", 
				"odd things", 
				"dumb things", 
				"lighting things on fire", 
				"lighting themselves on fire", 
				"blowing things up", 
				"blowing themeselves up", 
				"shooting everyone", 
				"shooting themselves"
			 });
			thoughts = "thinking about " + Rand13.PickFromTable( randomthoughts );

			if ( M.fire_stacks != 0 ) {
				pain_condition -= 50;
				thoughts = "preoccupied with the fire";
			}

			if ( M.radiation != 0 ) {
				pain_condition -= 25;
			}

			dynamic _a = pain_condition; // Was a switch-case, sorry for the mess.
			if ( 81<=_a&&_a<=Double.PositiveInfinity ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Condition</b>: " + M.name + " feels good.</span>" );
			} else if ( 61<=_a&&_a<=80 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Condition</b>: " + M.name + " is suffering mild pain.</span>" );
			} else if ( 41<=_a&&_a<=60 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Condition</b>: " + M.name + " is suffering significant pain.</span>" );
			} else if ( 21<=_a&&_a<=40 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Condition</b>: " + M.name + " is suffering severe pain.</span>" );
			} else {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Condition</b>: " + M.name + " is suffering excruciating pain.</span>" );
				thoughts = "haunted by their own mortality";
			}

			dynamic _c = M.a_intent; // Was a switch-case, sorry for the mess.
			if ( _c=="help" ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Mood</b>: You sense benevolent thoughts from " + M.name + ".</span>" );
			} else if ( _c=="disarm" ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Mood</b>: You sense cautious thoughts from " + M.name + ".</span>" );
			} else if ( _c=="grab" ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Mood</b>: You sense hostile thoughts from " + M.name + ".</span>" );
			} else if ( _c=="hurt" ) {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Mood</b>: You sense cruel thoughts from " + M.name + ".</span>" );

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInView( M, 7 ), typeof(Mob_Living) )) {
					L = _b;
					

					if ( L == M ) {
						continue;
					}
					thoughts = "thinking about punching " + L.name;
					break;
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='notice'> <b>Mood</b>: You sense strange thoughts from " + M.name + ".</span>" );
			}

			if ( M is Mob_Living_Carbon_Human ) {
				numbers = null;
				numbers = new ByTable( 0 );
				H = M;

				if ( H.mind != null && H.mind.initial_account != null ) {
					numbers.Add( H.mind.initial_account.account_number );
					numbers.Add( H.mind.initial_account.remote_access_pin );
				}

				if ( numbers.len > 0 ) {
					GlobalFuncs.to_chat( user, "<span class='notice'> <b>Numbers</b>: You sense the number" + ( numbers.len > 1 ? "s" : "" ) + " " + GlobalFuncs.english_list( numbers ) + " " + ( numbers.len > 1 ? "are" : "is" ) + " important to " + M.name + ".</span>" );
				}
			}
			GlobalFuncs.to_chat( user, "<span class='notice'> <b>Thoughts</b>: " + M.name + " is currently " + thoughts + ".</span>" );

			if ( M.spell_list.Contains( typeof(Spell_Targeted_Empath) ) ) {
				GlobalFuncs.to_chat( M, "<span class='warning'>You sense " + Task13.User.name + " reading your mind.</span>" );
			} else if ( Rand13.PercentChance( 5 ) || M.mind != null && M.mind.assigned_role == "Chaplain" ) {
				GlobalFuncs.to_chat( M, "<span class='warning'>You sense someone intruding upon your thoughts...</span>" );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Unlockable_Borer_GeneUnlock : Unlockable_Borer {

		public string gene_name = null;
		public bool activate = true;

		// Function from file: unlocks.dm
		public override void relock_action(  ) {
			int? block = null;
			dynamic host = null;

			block = null;
			block = 1;

			while (( block ??0) < 54) {
				
				if ( GlobalVars.assigned_blocks[block] == this.gene_name ) {
					Game13.log.WriteMsg( "## TESTING: " + ( "  Found " + GlobalVars.assigned_blocks[block] + " (" + block + ")" ) );
					host = this.borer.host;

					if ( Lang13.Bool( host ) && Lang13.Bool( host.dna ) ) {
						((Dna)host.dna).SetSEState( block, !this.activate );
						GlobalFuncs.domutcheck( host, null, true );
						((Mob)host).update_mutations();
						break;
					}
				}
				block++;
			}
			return;
		}

		// Function from file: unlocks.dm
		public override void unlock_action(  ) {
			int? block = null;
			dynamic host = null;

			block = null;
			block = 1;

			while (( block ??0) < 54) {
				
				if ( GlobalVars.assigned_blocks[block] == this.gene_name ) {
					Game13.log.WriteMsg( "## TESTING: " + ( "  Found " + GlobalVars.assigned_blocks[block] + " (" + block + ")" ) );
					host = this.borer.host;

					if ( Lang13.Bool( host ) && Lang13.Bool( host.dna ) ) {
						((Dna)host.dna).SetSEState( block, this.activate );
						GlobalFuncs.domutcheck( host, null, true );
						((Mob)host).update_mutations();
						break;
					}
				}
				block++;
			}
			GlobalFuncs.to_chat( this.borer, "<span class='info'>You feel the genetic changes take hold in your host.</span>" );
			return;
		}

	}

}
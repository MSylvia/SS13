// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Event_AlienInfestation : Event {

		public int spawncount = 1;
		public bool successSpawn = false;
		public int player_factor = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.announceWhen = 450;
		}

		public Event_AlienInfestation ( Obj_Item_MechaParts_MechaEquipment_Tool_CableLayer tlistener = null, string tprocname = null ) : base( tlistener, tprocname ) {
			
		}

		// Function from file: alien_infestation.dm
		public override bool start(  ) {
			ByTable vents = null;
			Obj_Machinery_Atmospherics_Unary_VentPump temp_vent = null;
			ByTable candidates = null;
			dynamic vent = null;
			dynamic candidate = null;
			Mob_Living_Carbon_Alien_Larva new_xeno = null;

			vents = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.atmos_machines, typeof(Obj_Machinery_Atmospherics_Unary_VentPump) )) {
				temp_vent = _a;
				

				if ( temp_vent.loc.z == 1 && !temp_vent.welded && temp_vent.network != null ) {
					
					if ( ((dynamic)temp_vent.network).normal_members.len > 50 ) {
						vents.Add( temp_vent );
					}
				}
			}
			candidates = GlobalFuncs.get_active_candidates( "alien", true, 1 );

			while (this.spawncount > 0 && vents.len != 0 && candidates.len != 0) {
				vent = Rand13.PickFromTable( vents );
				candidate = Rand13.PickFromTable( candidates );
				new_xeno = new Mob_Living_Carbon_Alien_Larva( vent.loc );
				new_xeno.key = candidate.key;
				candidates.Remove( candidate );
				vents.Remove( vent );
				this.spawncount--;
				this.successSpawn = true;
			}
			return false;
		}

		// Function from file: alien_infestation.dm
		public override void announce(  ) {
			
			if ( this.successSpawn ) {
				GlobalFuncs.command_alert( "Unidentified lifesigns detected coming aboard " + GlobalFuncs.station_name() + ". Secure any exterior access, including ducting and ventilation.", "Lifesign Alert" );
				GlobalFuncs.to_chat( typeof(Game13), new Sound( "sound/AI/aliens.ogg" ) );
			}
			return;
		}

		// Function from file: alien_infestation.dm
		public override void setup(  ) {
			this.announceWhen = Rand13.Int( 300, 600 );
			this.player_factor = Num13.Floor( GlobalVars.player_list.len / 10 );
			this.spawncount = Rand13.Int( 1, 2 ) + this.player_factor;
			GlobalVars.sent_aliens_to_station = true;
			return;
		}

	}

}
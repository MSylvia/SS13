// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Spell_Targeted_Genetic_Hulk : Spell_Targeted_Genetic {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Hulk Out";
			this.panel = "Mutant Powers";
			this.range = -1;
			this.charge_max = 600;
			this.duration = 300;
			this.spell_flags = 64;
			this.override_base = "genetic";
			this.hud_state = "gen_hulk";
		}

		// Function from file: vg_powers.dm
		public Spell_Targeted_Genetic_Hulk (  ) {
			this.desc = "Get mad!  For " + ( this.duration ??0) / 10 + " seconds, anyway.";
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: vg_powers.dm
		public override bool cast( ByTable targets = null, Mob user = null ) {
			Mob_Living_Carbon_Human M = null;

			
			if ( user.loc is Mob ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You can't hulk out right now!</span>" );
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( targets, typeof(Mob_Living_Carbon_Human) )) {
				M = _a;
				
				M.hulk_time = Game13.time + ( this.duration ??0);
				M.mutations.Add( 4 );
				M.update_mutations();
				M.update_body();
				GlobalFuncs.log_admin( "" + GlobalFuncs.key_name( M ) + " has hulked out! (" + GlobalFuncs.formatJumpTo( M ) + ")" );
				GlobalFuncs.message_admins( "" + GlobalFuncs.key_name( M ) + " has hulked out! (" + GlobalFuncs.formatJumpTo( M ) + ")" );
			}
			return false;
		}

	}

}
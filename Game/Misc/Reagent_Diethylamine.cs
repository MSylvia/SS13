// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Diethylamine : Reagent {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.custom_plant_metabolism = 0.1;
			this.name = "Diethylamine";
			this.id = "diethylamine";
			this.description = "A secondary amine, mildly corrosive.";
			this.reagent_state = 2;
			this.color = "#604030";
		}

		// Function from file: hydroponics_reagents.dm
		public override void on_plant_life( Obj_Machinery_PortableAtmospherics_Hydroponics T = null ) {
			double chance = 0;

			base.on_plant_life( T );
			T.adjust_nutrient( 0.1 );

			if ( Rand13.PercentChance( ((int)( ( this.custom_plant_metabolism ??0) * 100 )) ) ) {
				T.pestlevel -= 1;
			}

			if ( T.seed != null && !T.dead ) {
				T.health += 0.1;

				if ( Rand13.PercentChance( ((int)( ( this.custom_plant_metabolism ??0) * 200 )) ) ) {
					T.affect_growth( 1 );
				}

				if ( !( T.seed.immutable != 0 ) ) {
					chance = ( GlobalFuncs.unmix( T.seed.lifespan, 15, 125 ) ??0) * ( this.custom_plant_metabolism ??0) * 200;

					if ( Rand13.PercentChance( ((int)( chance )) ) ) {
						T.check_for_divergence( 1 );
						T.seed.lifespan++;
					}
					chance = ( GlobalFuncs.unmix( T.seed.lifespan, 15, 125 ) ??0) * ( this.custom_plant_metabolism ??0) * 200;

					if ( Rand13.PercentChance( ((int)( chance )) ) ) {
						T.check_for_divergence( 1 );
						T.seed.endurance++;
					}
				}
			}
			return;
		}

	}

}
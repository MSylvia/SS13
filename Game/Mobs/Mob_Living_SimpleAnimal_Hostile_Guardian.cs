// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Guardian : Mob_Living_SimpleAnimal_Hostile {

		public int cooldown = 0;
		public dynamic summoner = null;
		public int range = 10;
		public string playstyle_string = "You are a standard Guardian. You shouldn't exist!";
		public string magic_fluff_string = " You draw the Coder, symbolizing bugs and errors. This shouldn't happen! Submit a bug report!";
		public string tech_fluff_string = "BOOT SEQUENCE COMPLETE. ERROR MODULE LOADED. THIS SHOULDN'T HAPPEN. Submit a bug report!";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "Guardian Spirit";
			this.speak_emote = new ByTable(new object [] { "hisses" });
			this.bubble_icon = "guardian";
			this.response_help = "passes through";
			this.response_disarm = "flails at";
			this.response_harm = "punches";
			this.icon_living = "magicOrange";
			this.icon_dead = "magicOrange";
			this.speed = 0;
			this.a_intent = "harm";
			this.stop_automated_movement = true;
			this.floating = true;
			this.attack_sound = "sound/weapons/punch1.ogg";
			this.atmos_requirements = new ByTable().Set( "min_oxy", 0 ).Set( "max_oxy", 0 ).Set( "min_tox", 0 ).Set( "max_tox", 0 ).Set( "min_co2", 0 ).Set( "max_co2", 0 ).Set( "min_n2", 0 ).Set( "max_n2", 0 );
			this.minbodytemp = 0;
			this.maxbodytemp = Double.PositiveInfinity;
			this.attacktext = "punches";
			this.maxHealth = Double.PositiveInfinity;
			this.health = Double.PositiveInfinity;
			this.damage_coeff = new ByTable().Set( "brute", 0.5 ).Set( "fire", 0.5 ).Set( "tox", 0.5 ).Set( "clone", 0.5 ).Set( "stamina", 0 ).Set( "oxy", 0.5 );
			this.melee_damage_lower = 15;
			this.melee_damage_upper = 15;
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_Ectoplasm), 1 );
			this.AIStatus = 3;
			this.icon = "icons/mob/guardian.dmi";
			this.icon_state = "magicOrange";
		}

		public Mob_Living_SimpleAnimal_Hostile_Guardian ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: guardian.dm
		public virtual void ToggleLight(  ) {
			
			if ( !( this.luminosity != 0 ) ) {
				this.WriteMsg( "<span class='notice'>You activate your light.</span>" );
				this.SetLuminosity( 3 );
			} else {
				this.WriteMsg( "<span class='notice'>You deactivate your light.</span>" );
				this.SetLuminosity( 0 );
			}
			return;
		}

		// Function from file: guardian.dm
		public virtual void ToggleMode(  ) {
			this.WriteMsg( "<span class='danger'><B>You don't have another mode!</span></B>" );
			return;
		}

		// Function from file: guardian.dm
		public void Communicate(  ) {
			string input = null;
			string my_message = null;
			dynamic M = null;

			input = GlobalFuncs.stripped_input( this, "Please enter a message to tell your summoner.", "Guardian", "" );

			if ( !Lang13.Bool( input ) ) {
				return;
			}
			my_message = "<span class='boldannounce'><i>" + this + ":</i> " + input + "</span>";

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				

				if ( M == this.summoner ) {
					M.WriteMsg( my_message );
				}

				if ( GlobalVars.dead_mob_list.Contains( M ) ) {
					M.WriteMsg( new Txt( "<a href='?src=" ).Ref( M ).str( ";follow=" ).Ref( this ).str( "'>(F)</a> " ).item( my_message ).ToString() );
				}
			}
			this.WriteMsg( "" + my_message );
			GlobalFuncs.log_say( "" + this.real_name + "/" + this.key + " : " + input );
			return;
		}

		// Function from file: guardian.dm
		public void Recall(  ) {
			
			if ( this.loc == this.summoner || this.cooldown > Game13.time ) {
				return;
			}
			GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase_Out), GlobalFuncs.get_turf( this ) );
			this.forceMove( this.summoner );
			this.cooldown = Game13.time + 30;
			return;
		}

		// Function from file: guardian.dm
		public void Manifest(  ) {
			
			if ( this.cooldown > Game13.time ) {
				return;
			}

			if ( this.loc == this.summoner ) {
				this.forceMove( GlobalFuncs.get_turf( this.summoner ) );
				GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase), GlobalFuncs.get_turf( this ) );
				this.cooldown = Game13.time + 30;
			}
			return;
		}

		// Function from file: guardian.dm
		public override dynamic gib( dynamic animation = null ) {
			
			if ( Lang13.Bool( this.summoner ) ) {
				this.summoner.WriteMsg( "<span class='danger'><B>Your " + this + " was blown up!</span></B>" );
				((Mob)this.summoner).gib();
			}
			this.ghostize();
			GlobalFuncs.qdel( this );
			return null;
		}

		// Function from file: guardian.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					this.gib();
					return false;
					break;
				case 2:
					this.adjustBruteLoss( 60 );
					break;
				case 3:
					this.adjustBruteLoss( 30 );
					break;
			}
			return false;
		}

		// Function from file: guardian.dm
		public override dynamic adjustHealth( dynamic amount = null ) {
			dynamic _default = null;

			_default = base.adjustHealth( (object)(amount) );

			if ( Lang13.Bool( this.summoner ) ) {
				
				if ( this.loc == this.summoner ) {
					return 0;
				}
				((Mob_Living)this.summoner).adjustBruteLoss( amount );

				if ( Lang13.Bool( amount ) ) {
					this.summoner.WriteMsg( "<span class='danger'><B>Your " + this.name + " is under attack! You take damage!</span></B>" );
					((Ent_Static)this.summoner).visible_message( "<span class='danger'><B>Blood sprays from " + this.summoner + " as " + this + " takes damage!</B></span>" );
				}

				if ( Lang13.Bool( this.summoner.stat ) == true ) {
					this.summoner.WriteMsg( "<span class='danger'><B>Your body can't take the strain of sustaining " + this + " in this condition, it begins to fall apart!</span></B>" );
					((Mob_Living)this.summoner).adjustCloneLoss( amount * 0.5 );
				}
				this.update_health_hud();
			}
			return _default;
		}

		// Function from file: guardian.dm
		public override bool update_health_hud( dynamic shown_health_amount = null ) {
			int resulthealth = 0;

			
			if ( Lang13.Bool( this.summoner ) ) {
				
				if ( this.summoner is Mob_Living_Carbon ) {
					resulthealth = Num13.Floor( Math.Abs( ( GlobalVars.config.health_threshold_dead ??0) - Convert.ToDouble( this.summoner.health ) ) / Math.Abs( ( GlobalVars.config.health_threshold_dead ??0) - Convert.ToDouble( this.summoner.maxHealth ) ) * 100 );
				} else {
					resulthealth = Num13.Floor( Convert.ToDouble( this.summoner.health / this.summoner.maxHealth * 100 ) );
				}
				this.hud_used.healths.maptext = "<div align='center' valign='middle' style='position:relative; top:0px; left:6px'><font color='#efeeef'>" + resulthealth + "%</font></div>";
			}
			return false;
		}

		// Function from file: guardian.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			base.death( gibbed, toast );
			this.summoner.WriteMsg( "<span class='danger'><B>Your " + this.name + " died somehow!</span></B>" );
			((Mob)this.summoner).death();
			return false;
		}

		// Function from file: guardian.dm
		public override bool AttackingTarget(  ) {
			
			if ( this.loc == this.summoner ) {
				this.WriteMsg( "<span class='danger'><B>You must be manifested to attack!</span></B>" );
				return false;
			} else {
				base.AttackingTarget();
				return true;
			}
		}

		// Function from file: guardian.dm
		public override bool canSuicide(  ) {
			return false;
		}

		// Function from file: guardian.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			base.Move( (object)(NewLoc), Dir, step_x, step_y );

			if ( Lang13.Bool( this.summoner ) ) {
				
				if ( Map13.GetDistance( GlobalFuncs.get_turf( this.summoner ), GlobalFuncs.get_turf( this ) ) <= this.range ) {
					return false;
				} else {
					this.WriteMsg( "You moved out of range, and were pulled back! You can only move " + this.range + " meters from " + this.summoner.real_name );
					this.visible_message( "<span class='danger'>The " + this + " jumps back to its user.</span>" );
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase_Out), GlobalFuncs.get_turf( this ) );
					this.forceMove( GlobalFuncs.get_turf( this.summoner ) );
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase), GlobalFuncs.get_turf( this ) );
				}
			}
			return false;
		}

		// Function from file: guardian.dm
		public override bool Life(  ) {
			Obj_Item W = null;

			base.Life();

			if ( Lang13.Bool( this.summoner ) ) {
				
				if ( Convert.ToInt32( this.summoner.stat ) == 2 ) {
					this.WriteMsg( "<span class='danger'>Your summoner has died!</span>" );
					this.visible_message( "<span class='danger'><B>The " + this + " dies along with its user!</B></span>" );
					((Ent_Static)this.summoner).visible_message( "<span class='danger'><B>" + this.summoner + "'s body is completely consumed by the strain of sustaining " + this + "!</B></span>" );

					foreach (dynamic _a in Lang13.Enumerate( this.summoner, typeof(Obj_Item) )) {
						W = _a;
						

						if ( !((Mob)this.summoner).unEquip( W ) ) {
							GlobalFuncs.qdel( W );
						}
					}
					((Mob)this.summoner).dust();
					this.ghostize();
					GlobalFuncs.qdel( this );
				}
			} else {
				this.WriteMsg( "<span class='danger'>Your summoner has died!</span>" );
				this.visible_message( "<span class='danger'><B>The " + this + " dies along with its user!</B></span>" );
				this.ghostize();
				GlobalFuncs.qdel( this );
			}

			if ( Lang13.Bool( this.summoner ) ) {
				
				if ( Map13.GetDistance( GlobalFuncs.get_turf( this.summoner ), GlobalFuncs.get_turf( this ) ) <= this.range ) {
					return false;
				} else {
					this.WriteMsg( "You moved out of range, and were pulled back! You can only move " + this.range + " meters from " + this.summoner.real_name );
					this.visible_message( "<span class='danger'>The " + this + " jumps back to its user.</span>" );
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase_Out), GlobalFuncs.get_turf( this ) );
					this.forceMove( GlobalFuncs.get_turf( this.summoner ) );
					GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Guardian_Phase), GlobalFuncs.get_turf( this ) );
				}
			}
			return false;
		}

		// Function from file: guardian.dm
		public override void create_mob_hud(  ) {
			
			if ( this.client != null && !( this.hud_used != null ) ) {
				this.hud_used = new Hud_Guardian( this );
			}
			return;
		}

	}

}
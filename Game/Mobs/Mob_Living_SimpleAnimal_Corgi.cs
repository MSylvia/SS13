// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Corgi : Mob_Living_SimpleAnimal {

		public dynamic inventory_head = null;
		public dynamic inventory_back = null;
		public Obj_Item_Clothing_Mask_Facehugger facehugger = null;
		public ByTable spin_emotes = new ByTable(new object [] { "dances around", "chases its tail" });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "corgi";
			this.icon_living = "corgi";
			this.icon_dead = "corgi_dead";
			this.health = 30;
			this.maxHealth = 30;
			this.speak = new ByTable(new object [] { "YAP", "Woof!", "Bark!", "AUUUUUU" });
			this.speak_emote = new ByTable(new object [] { "barks", "woofs" });
			this.emote_hear = new ByTable(new object [] { "barks", "woofs", "yaps", "pants" });
			this.emote_see = new ByTable(new object [] { "shakes its head", "shivers" });
			this.speak_chance = 1;
			this.turns_per_move = 10;
			this.meat_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Animal_Corgi);
			this.holder_type = typeof(Obj_Item_Weapon_Holder_Animal_Corgi);
			this.response_help = "pets";
			this.response_disarm = "bops";
			this.response_harm = "kicks";
			this.childtype = typeof(Mob_Living_SimpleAnimal_Corgi_Puppy);
			this.species_type = typeof(Mob_Living_SimpleAnimal_Corgi);
			this.can_breed = true;
			this.size = 2;
			this.icon_state = "corgi";
			this.see_in_dark = 5;
		}

		public Mob_Living_SimpleAnimal_Corgi ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: corgi.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			_default = base.attack_hand( (object)(a), (object)(b), (object)(c) );

			dynamic _a = a.a_intent; // Was a switch-case, sorry for the mess.
			if ( _a=="help" ) {
				this.wuv( 1, a );
			} else if ( _a=="hurt" ) {
				this.wuv( -1, a );
			}
			return _default;
		}

		// Function from file: corgi.dm
		public override void regenerate_icons(  ) {
			string head_icon_state = null;
			Image head_icon = null;
			dynamic back_icon_state = null;
			Image back_icon = null;

			this.overlays = new ByTable();

			if ( Lang13.Bool( this.inventory_head ) ) {
				head_icon_state = this.inventory_head.icon_state;

				if ( Convert.ToDouble( this.health ) <= 0 ) {
					head_icon_state += "2";
				}
				head_icon = new Image( "icons/mob/corgi_head.dmi", head_icon_state );

				if ( head_icon != null ) {
					this.overlays.Add( head_icon );
				}
			}

			if ( Lang13.Bool( this.inventory_back ) ) {
				back_icon_state = this.inventory_back.icon_state;

				if ( Convert.ToDouble( this.health ) <= 0 ) {
					back_icon_state += "2";
				}
				back_icon = new Image( "icons/mob/corgi_back.dmi", back_icon_state );

				if ( back_icon != null ) {
					this.overlays.Add( back_icon );
				}
			}

			if ( this.facehugger != null ) {
				
				if ( this is Mob_Living_SimpleAnimal_Corgi_Puppy ) {
					this.overlays.Add( new Image( "icons/mob/mask.dmi", "facehugger_corgipuppy" ) );
				} else {
					this.overlays.Add( new Image( "icons/mob/mask.dmi", "facehugger_corgi" ) );
				}
			}
			return;
		}

		// Function from file: corgi.dm
		public void wuv( int change = 0, dynamic M = null ) {
			
			if ( change != 0 ) {
				
				if ( change > 0 ) {
					
					if ( Lang13.Bool( M ) && !this.isUnconscious() ) {
						GlobalFuncs.flick_overlay( new Image( "icons/mob/animal.dmi", this, "heart-ani2", 5 ), new ByTable(new object [] { M.client }), 20 );
						this.emote( "yaps happily" );
					}
				} else if ( Lang13.Bool( M ) && !this.isUnconscious() ) {
					this.emote( "growls" );
				}
			}
			return;
		}

		// Function from file: corgi.dm
		public void spinaroo( ByTable emotes = null ) {
			dynamic i = null;

			
			if ( !Lang13.Bool( this.stat ) && !( this.resting != 0 ) && !Lang13.Bool( this.locked_to ) ) {
				
				if ( Rand13.PercentChance( 1 ) ) {
					
					if ( this.ckey == null ) {
						this.emote( Rand13.PickFromTable( emotes ) );
						Task13.Schedule( 0, (Task13.Closure)(() => {
							
							foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2 }) )) {
								i = _a;
								
								this.dir = Convert.ToInt32( i );
								Task13.Sleep( 1 );
							}
							return;
						}));
					}
				}
			}
			return;
		}

		// Function from file: corgi.dm
		public bool place_on_head( dynamic item_to_add = null ) {
			bool valid = false;
			dynamic i = null;

			
			if ( item_to_add is Obj_Item_Weapon_Plastique ) {
				item_to_add.afterattack( this, Task13.User, 1 );
				return false;
			}

			if ( Lang13.Bool( this.inventory_head ) ) {
				
				if ( Task13.User != null ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You can't put more than one hat on " + this + "!</span>" );
				}
				return false;
			}

			if ( !Lang13.Bool( item_to_add ) ) {
				Task13.User.visible_message( "<span class='notice'>" + Task13.User + " pets " + this + "</span>", "<span class='notice'>You rest your hand on " + this + "'s head for a moment.</span>" );
				return false;
			}
			valid = false;

			dynamic _a = item_to_add.type; // Was a switch-case, sorry for the mess.
			if ( _a==typeof(Obj_Item_Clothing_Glasses_Sunglasses) || _a==typeof(Obj_Item_Clothing_Head_That) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Paper) || _a==typeof(Obj_Item_Clothing_Head_Hardhat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Hardhat) || _a==typeof(Obj_Item_Clothing_Head_Hardhat_White) || _a==typeof(Obj_Item_Weapon_Paper) ) {
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Helmet) ) {
				this.name = "Sergeant " + this.real_name;
				this.desc = "The ever-loyal, the ever-vigilant.";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Chefhat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Chef) ) {
				this.name = "Sous chef " + this.real_name;
				this.desc = "Your food will be taste-tested.  All of it.";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Caphat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Captain) ) {
				this.name = "Captain " + this.real_name;
				this.desc = "Probably better than the last captain.";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Kitty) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Kitty) ) {
				this.name = "Runtime";
				this.emote_see = new ByTable(new object [] { "coughs up a furball", "stretches" });
				this.emote_hear = new ByTable(new object [] { "purrs" });
				this.speak = new ByTable(new object [] { "Purrr", "Meow!", "MAOOOOOW!", "HISSSSS", "MEEEEEEW" });
				this.desc = "It's a cute little kitty-cat! ... wait ... what the hell?";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Rabbitears) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Rabbitears) ) {
				this.name = "Hoppy";
				this.emote_see = new ByTable(new object [] { "twitches its nose", "hops around a bit" });
				this.desc = "This is Hoppy. It's a corgi-...urmm... bunny rabbit";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Beret) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Beret) ) {
				this.name = "Yann";
				this.desc = "Mon dieu! C'est un chien!";
				this.speak = new ByTable(new object [] { "le woof!", "le bark!", "JAPPE!!" });
				this.emote_see = new ByTable(new object [] { "cowers in fear", "surrenders", "plays dead", "looks as though there is a wall in front of him" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_DetHat) ) {
				this.name = "Detective " + this.real_name;
				this.desc = "" + this.name + " sees through your lies...";
				this.emote_see = new ByTable(new object [] { "investigates the area", "sniffs around for clues", "searches for scooby snacks" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Nursehat) ) {
				this.name = "Nurse " + this.real_name;
				this.desc = "" + this.name + " needs 100cc of beef jerky...STAT!";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Pirate) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Pirate) ) {
				this.name = "" + Rand13.Pick(new object [] { "Ol'", "Scurvy", "Black", "Rum", "Gammy", "Bloody", "Gangrene", "Death", "Long-John" }) + " " + Rand13.Pick(new object [] { "kibble", "leg", "beard", "tooth", "poop-deck", "Threepwood", "Le Chuck", "corsair", "Silver", "Crusoe" });
				this.desc = "Yaarghh!! Thar' be a scurvy dog!";
				this.emote_see = new ByTable(new object [] { "hunts for treasure", "stares coldly...", "gnashes his tiny corgi teeth" });
				this.emote_hear = new ByTable(new object [] { "growls ferociously", "snarls" });
				this.speak = new ByTable(new object [] { "Arrrrgh!!", "Grrrrrr!" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Ushanka) ) {
				this.name = "" + Rand13.Pick(new object [] { "Comrade", "Commissar", "Glorious Leader" }) + " " + this.real_name;
				this.desc = "A follower of Karl Barx.";
				this.emote_see = new ByTable(new object [] { "contemplates the failings of the capitalist economic model", "ponders the pros and cons of vangaurdism" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Collectable_Police) ) {
				this.name = "Officer " + this.real_name;
				this.emote_see = new ByTable(new object [] { "drools", "looks for donuts" });
				this.desc = "Stop right there criminal scum!";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Wizard_Fake) || _a==typeof(Obj_Item_Clothing_Head_Wizard) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Wizard) ) {
				this.name = "Grandwizard " + this.real_name;
				this.speak = new ByTable(new object [] { "YAP", "Woof!", "Bark!", "AUUUUUU", "EI  NATH!" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Cardborg) ) {
				this.name = "Borgi";
				this.speak = new ByTable(new object [] { "Ping!", "Beep!", "Woof!" });
				this.emote_see = new ByTable(new object [] { "goes rogue", "sniffs out non-humans" });
				this.desc = "Result of robotics budget cuts.";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Weapon_Bedsheet) ) {
				this.name = "ÿGhost";
				this.speak = new ByTable(new object [] { "WoooOOOooo~", "AUUUUUUUUUUUUUUUUUU" });
				this.emote_see = new ByTable(new object [] { "stumbles around", "shivers" });
				this.emote_hear = new ByTable(new object [] { "howls", "groans" });
				this.desc = "Spooky!";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Helmet_Space_Santahat) ) {
				this.name = "Santa's Corgi Helper";
				this.emote_hear = new ByTable(new object [] { "barks christmas songs", "yaps merrily" });
				this.emote_see = new ByTable(new object [] { "looks for presents", "checks his list" });
				this.desc = "He's very fond of milk and cookies.";
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Soft) ) {
				this.name = "Corgi Tech " + this.real_name;
				this.desc = "The reason your yellow gloves have chew-marks.";
				this.emote_see = new ByTable(new object [] { "Orders emitter crates and goes full blown cargonia." });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Fedora) ) {
				this.name = "Autistic " + this.real_name;
				this.desc = "His paws seem to be covered in what looks like Cheezy Honker dust.";
				this.emote_hear = new ByTable(new object [] { "barks ironicly", "makes you cringe" });
				this.emote_see = new ByTable(new object [] { "unsheathes katana", "tips fedora" });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Fez) ) {
				this.name = "Doctor Whom";
				this.desc = "A time-dog from the planet barkifray.";
				this.emote_hear = new ByTable(new object [] { "barks cleverly." });
				this.emote_see = new ByTable(new object [] { "fiddles around with a sonic-bone", "builds something amazing- thats a poop. He just pooped." });
				valid = true;
			} else if ( _a==typeof(Obj_Item_Clothing_Head_Helmet_Space_Rig) ) {
				this.name = "Spessman " + this.real_name;
				this.desc = "Boldly going where no Corgi has gone before!";
				valid = true;
				this.min_oxy = 0;
				this.minbodytemp = 0;
				this.maxbodytemp = 999;
			}

			if ( valid ) {
				
				if ( Task13.User != null ) {
					Task13.User.visible_message( "" + Task13.User + " puts " + item_to_add + " on " + this.real_name + "'s head.  " + this + " looks at " + Task13.User + " and barks once.", new Txt( "You put " ).item( item_to_add ).str( " on " ).item( this.real_name ).str( "'s head.  " ).item( this ).str( " gives you a peculiar look, then wags " ).his_her_its_their().str( " tail once and barks." ).ToString(), "You hear a friendly-sounding bark." );
					Task13.User.drop_item( item_to_add, this, true );
				} else {
					item_to_add.loc = this;
				}
				this.inventory_head = item_to_add;
				this.regenerate_icons();
			} else {
				GlobalFuncs.to_chat( Task13.User, new Txt( "You set " ).item( item_to_add ).str( " on " ).item( this ).str( "'s head, but " ).he_she_it_they().str( " shakes it off!" ).ToString() );
				Task13.User.drop_item( item_to_add, this.loc );

				if ( Rand13.PercentChance( 25 ) ) {
					Map13.StepRandom( item_to_add );
				}

				if ( this.ckey == null ) {
					
					foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 8, 4, this.dir }) )) {
						i = _b;
						
						this.dir = Convert.ToInt32( i );
						Task13.Sleep( 1 );
					}
				}
			}
			return valid;
		}

		// Function from file: corgi.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic remove_from = null;
			dynamic add_to = null;
			dynamic item_to_add = null;
			ByTable allowed_types = null;
			dynamic i = null;

			
			if ( Lang13.Bool( Task13.User.stat ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["remove_inv"] ) ) {
				
				if ( !this.Adjacent( Task13.User ) || !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Living_Carbon_Monkey || Task13.User is Mob_Living_Silicon_Robot || Task13.User is Mob_Living_Carbon_Alien_Humanoid ) ) {
					return null;
				}
				remove_from = href_list["remove_inv"];

				dynamic _a = remove_from; // Was a switch-case, sorry for the mess.
				if ( _a=="head" ) {
					
					if ( Lang13.Bool( this.inventory_head ) ) {
						this.name = this.real_name;
						this.desc = Lang13.Initial( this, "desc" );
						this.speak = new ByTable(new object [] { "YAP", "Woof!", "Bark!", "AUUUUUU" });
						this.speak_emote = new ByTable(new object [] { "barks", "woofs" });
						this.emote_hear = new ByTable(new object [] { "barks", "woofs", "yaps", "pants" });
						this.emote_see = new ByTable(new object [] { "shakes its head", "shivers" });
						this.min_oxy = Lang13.Initial( this, "min_oxy" );
						this.minbodytemp = Lang13.Initial( this, "minbodytemp" );
						this.maxbodytemp = Lang13.Initial( this, "maxbodytemp" );
						this.set_light( 0 );
						((Ent_Dynamic)this.inventory_head).forceMove( this.loc );
						this.inventory_head = null;
						this.regenerate_icons();
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>There is nothing to remove from its " + remove_from + ".</span>" );
						return null;
					}
				} else if ( _a=="back" ) {
					
					if ( Lang13.Bool( this.inventory_back ) ) {
						this.inventory_back.loc = this.loc;
						this.inventory_back = null;
						this.regenerate_icons();
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>There is nothing to remove from its " + remove_from + ".</span>" );
						return null;
					}
				}
				this.show_inv( Task13.User );
			} else if ( Lang13.Bool( href_list["add_inv"] ) ) {
				
				if ( !this.Adjacent( Task13.User ) || !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Living_Carbon_Monkey || Task13.User is Mob_Living_Silicon_Robot || Task13.User is Mob_Living_Carbon_Alien_Humanoid ) ) {
					return null;
				}
				add_to = href_list["add_inv"];

				if ( !Lang13.Bool( Task13.User.get_active_hand() ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You have nothing in your hand to put on its " + add_to + ".</span>" );
					return null;
				}

				dynamic _c = add_to; // Was a switch-case, sorry for the mess.
				if ( _c=="head" ) {
					this.place_on_head( Task13.User.get_active_hand() );
				} else if ( _c=="back" ) {
					
					if ( Lang13.Bool( this.inventory_back ) ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>It's already wearing something.</span>" );
						return null;
					} else {
						item_to_add = Task13.User.get_active_hand();

						if ( !Lang13.Bool( item_to_add ) ) {
							Task13.User.visible_message( "<span class='notice'>" + Task13.User + " pets " + this + "</span>", "<span class='notice'>You rest your hand on " + this + "'s back for a moment.</span>" );
							return null;
						}

						if ( item_to_add is Obj_Item_Weapon_Plastique ) {
							item_to_add.afterattack( this, Task13.User, 1 );
							return null;
						}
						allowed_types = new ByTable(new object [] { 
							typeof(Obj_Item_Clothing_Suit_Armor_Vest), 
							typeof(Obj_Item_Device_Radio), 
							typeof(Obj_Item_Device_Radio_Off), 
							typeof(Obj_Item_Clothing_Suit_Cardborg), 
							typeof(Obj_Item_Weapon_Tank_Oxygen), 
							typeof(Obj_Item_Weapon_Tank_Air), 
							typeof(Obj_Item_Weapon_Extinguisher), 
							typeof(Obj_Item_Clothing_Suit_Space_Rig)
						 });

						if ( !allowed_types.Contains( item_to_add.type ) ) {
							GlobalFuncs.to_chat( Task13.User, new Txt( "You set " ).item( item_to_add ).str( " on " ).item( this ).str( "'s back, but " ).he_she_it_they().str( " shakes it off!" ).ToString() );
							Task13.User.drop_item( item_to_add, GlobalFuncs.get_turf( this ) );

							if ( Rand13.PercentChance( 25 ) ) {
								Map13.StepRandom( item_to_add );
							}

							if ( this.ckey == null ) {
								
								foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 8, 4, this.dir }) )) {
									i = _b;
									
									this.dir = Convert.ToInt32( i );
									Task13.Sleep( 1 );
								}
							}
							return null;
						}
						Task13.User.drop_item( item_to_add, this, true );
						this.inventory_back = item_to_add;
						this.regenerate_icons();
					}
				}
				this.show_inv( Task13.User );
			} else {
				base.Topic( href, href_list, (object)(hclient) );
			}
			return null;
		}

		// Function from file: corgi.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic i = null;
			dynamic M = null;
			dynamic M2 = null;

			
			if ( a is Obj_Item_Weapon_Newspaper ) {
				
				if ( !Lang13.Bool( this.stat ) ) {
					((Ent_Static)b).visible_message( "<span class='notice'>" + b + " baps " + this.name + " on the nose with the rolled up " + a + "</span>" );
					Task13.Schedule( 0, (Task13.Closure)(() => {
						this.emote( "whines" );

						foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 2, 1, 2 }) )) {
							i = _a;
							
							this.dir = Convert.ToInt32( i );
							Task13.Sleep( 1 );
						}
						return;
					}));
				}
			} else if ( Lang13.Bool( this.inventory_head ) && Lang13.Bool( this.inventory_back ) ) {
				
				if ( this.inventory_head is Obj_Item_Clothing_Head_Helmet && this.inventory_back is Obj_Item_Clothing_Suit_Armor ) {
					
					if ( Lang13.Bool( a.force ) ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='warning'>" ).item( this ).str( " is wearing too much armor. You can't cause " ).him_her_it_them().str( " any damage.</span>" ).ToString() );

						foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
							M = _b;
							
							M.show_message( "<span class='danger'>" + b + " hits " + this + " with " + a + ", however " + this + " is too armored.</span>" );
						}
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='warning'>" ).item( this ).str( " is wearing too much armor. You can't reach " ).his_her_its_their().str( " skin.</span>" ).ToString() );

						foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
							M2 = _c;
							
							M2.show_message( "<span class='warning'>" + b + " gently taps " + this + " with " + a + ". </span>" );
						}
					}

					if ( Convert.ToDouble( this.health ) > 0 && Rand13.PercentChance( 15 ) ) {
						this.emote( "looks at " + b + " with " + Rand13.Pick(new object [] { "an amused", "an annoyed", "a confused", "a resentful", "a happy", "an excited" }) + " expression" );
					}
					return null;
				}
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: corgi.dm
		public override void show_inv( dynamic user = null ) {
			string dat = null;

			((Mob)user).set_machine( this );

			if ( Lang13.Bool( user.stat ) ) {
				return;
			}
			dat = "<div align='center'><b>Inventory of " + this.name + "</b></div><p>";

			if ( Lang13.Bool( this.inventory_head ) ) {
				dat += new Txt( "<br><b>Head:</b> " ).item( this.inventory_head ).str( " (<a href='?src=" ).Ref( this ).str( ";remove_inv=head'>Remove</a>)" ).ToString();
			} else {
				dat += new Txt( "<br><b>Head:</b> <a href='?src=" ).Ref( this ).str( ";add_inv=head'>Nothing</a>" ).ToString();
			}

			if ( Lang13.Bool( this.inventory_back ) ) {
				dat += new Txt( "<br><b>Back:</b> " ).item( this.inventory_back ).str( " (<a href='?src=" ).Ref( this ).str( ";remove_inv=back'>Remove</a>)" ).ToString();
			} else {
				dat += new Txt( "<br><b>Back:</b> <a href='?src=" ).Ref( this ).str( ";add_inv=back'>Nothing</a>" ).ToString();
			}
			Interface13.Browse( user, dat, "window=mob" + this.real_name + ";size=325x500" );
			GlobalFuncs.onclose( user, "mob" + this.real_name );
			return;
		}

		// Function from file: corgi.dm
		public override bool Life(  ) {
			bool _default = false;

			
			if ( this.timestopped ) {
				return false;
			}
			this.spinaroo( this.spin_emotes );
			_default = base.Life();

			if ( _default ) {
				
				if ( this.fire != null ) {
					
					if ( this.fire_alert != 0 ) {
						((dynamic)this.fire).icon_state = "fire" + this.fire_alert;
					} else {
						((dynamic)this.fire).icon_state = "fire0";
					}
				}

				if ( this.pullin != null ) {
					
					if ( this.pulling != null ) {
						((dynamic)this.pullin).icon_state = "pull1";
					} else {
						((dynamic)this.pullin).icon_state = "pull0";
					}
				}

				if ( this.oxygen != null ) {
					
					if ( this.oxygen_alert ) {
						((dynamic)this.oxygen).icon_state = "oxy1";
					} else {
						((dynamic)this.oxygen).icon_state = "oxy0";
					}
				}

				if ( this.toxin != null ) {
					
					if ( this.toxins_alert ) {
						((dynamic)this.toxin).icon_state = "tox1";
					} else {
						((dynamic)this.toxin).icon_state = "tox0";
					}
				}
			}

			if ( this.healths != null ) {
				
				dynamic _a = this.health; // Was a switch-case, sorry for the mess.
				if ( 30<=_a&&_a<=Double.PositiveInfinity ) {
					((dynamic)this.healths).icon_state = "health0";
				} else if ( 26<=_a&&_a<=29 ) {
					((dynamic)this.healths).icon_state = "health1";
				} else if ( 21<=_a&&_a<=25 ) {
					((dynamic)this.healths).icon_state = "health2";
				} else if ( 16<=_a&&_a<=20 ) {
					((dynamic)this.healths).icon_state = "health3";
				} else if ( 11<=_a&&_a<=15 ) {
					((dynamic)this.healths).icon_state = "health4";
				} else if ( 6<=_a&&_a<=10 ) {
					((dynamic)this.healths).icon_state = "health5";
				} else if ( 1<=_a&&_a<=5 ) {
					((dynamic)this.healths).icon_state = "health6";
				} else {
					((dynamic)this.healths).icon_state = "health7";
				}
			}
			return _default;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.assigned_role = "Corgi";
			return;
		}

		// Function from file: corgi_powers.dm
		[Verb]
		[VerbInfo( name: "Chase your tail", desc: "d'awwww.", group: "Corgi" )]
		public void chasetail(  ) {
			dynamic O = null;
			dynamic i = null;

			GlobalFuncs.to_chat( this, "" + Rand13.Pick(new object [] { "You dance around", "You chase your tail" }) + "." );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( null, this ) )) {
				O = _a;
				

				if ( Lang13.Bool( O.client ) && !Lang13.Bool( O.blinded ) ) {
					GlobalFuncs.to_chat( O, "" + this + " " + Rand13.Pick(new object [] { "dances around", "chases its tail" }) + "." );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2, 1, 2, 4, 8, 4, 2 }) )) {
				i = _b;
				
				this.dir = Convert.ToInt32( i );
				Task13.Sleep( 1 );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Chest : Mob_Living_SimpleAnimal_Hostile_Mimic_Crate {

		public bool can_grab = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.copied_object = typeof(Obj_Structure_Closet_Crate_Chest);
			this.melee_damage_lower = 12;
			this.melee_damage_upper = 16;
			this.maxHealth = 140;
			this.health = 140;
			this.stat_attack = 1;
			this.maxbodytemp = 573.1500244140625;
			this.icon_state = "chest";
		}

		public Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Chest ( dynamic loc = null, dynamic new_disguise = null ) : base( (object)(loc), (object)(new_disguise) ) {
			
		}

		// Function from file: mimic.dm
		public override void anger( bool? berserk = null, bool? change_icon = null ) {
			change_icon = change_icon ?? true;

			base.anger( berserk, change_icon );
			this.icon_state = "chestmimic";
			return;
		}

		// Function from file: mimic.dm
		public override bool environment_disguise( ByTable L = null ) {
			return false;
		}

		// Function from file: mimic.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Ent_Static M = null;

			
			if ( this.angry != 0 ) {
				
				if ( this.locked_atoms.len != 0 ) {
					
					if ( Lang13.Bool( ((Obj)a).is_sharp() ) ) {
						((Ent_Static)b).visible_message( new Txt( "<span class='danger'>" ).item( b ).str( " slashes at " ).the( this ).item().str( "'s tongue!</span>" ).ToString() );

						foreach (dynamic _a in Lang13.Enumerate( this.locked_atoms, typeof(Ent_Static) )) {
							M = _a;
							
							this.unlock_atom( M );
							this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " loses its hold on " ).item( M ).str( ".</span>" ).ToString() );
						}

						if ( this.can_grab && Convert.ToDouble( ((Obj)a).is_sharp() ) >= 1.2 && Rand13.PercentChance( 20 ) ) {
							this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( "'s tongue has been damaged!</span>" ).ToString() );
							this.can_grab = false;
						}
					}
				}
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: mimic.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			Mob H = null;

			
			if ( Lang13.Bool( M.stat ) || M.stunned != 0 || M.weakened != 0 || M.paralysis != 0 ) {
				return null;
			}

			if ( M.loc == this ) {
				GlobalFuncs.to_chat( M, new Txt( "<span class='info'>You try to escape from " ).the( this ).item().str( ". This will take a while!</span>" ).ToString() );

				if ( GlobalFuncs.do_after( M, this, 300 ) ) {
					GlobalFuncs.to_chat( M, new Txt( "<span class='info'>You successfully escape from " ).the( this ).item().str( ".</span>" ).ToString() );
					M.forceMove( GlobalFuncs.get_turf( this ) );
				}
			} else {
				H = M;

				if ( H is Mob_Living_Carbon_Human ) {
					
					if ( H.mutations.Contains( 4 ) || H.mutations.Contains( 202 ) ) {
						this.unlock_atom( H );
						this.visible_message( new Txt( "<span class='notice'>" ).item( H ).str( " easily breaks free of " ).the( this ).item().str( "'s hold!</span>" ).ToString() );
						return null;
					}
				}
			}
			return null;
		}

		// Function from file: mimic.dm
		public override void LoseTarget(  ) {
			dynamic L = null;

			
			if ( this.locked_atoms.Contains( this.target ) ) {
				this.unlock_atom( this.target );
			}
			L = this.target;

			if ( L is Mob_Living && this.Adjacent( L ) ) {
				
				if ( Convert.ToInt32( L.stat ) == 2 ) {
					((Ent_Dynamic)L).forceMove( this );
					this.visible_message( new Txt( "<span class='danger'>" ).The( this ).item().str( " eats " ).the( L ).item().str( "'s corpse!</span>" ).ToString() );
				}
			}
			base.LoseTarget(); return;
		}

		// Function from file: mimic.dm
		public override dynamic AttackingTarget(  ) {
			dynamic H = null;

			base.AttackingTarget();

			if ( this.can_grab && this.target is Mob_Living_Carbon_Human ) {
				H = this.target;

				if ( !( this.locked_atoms.len != 0 ) ) {
					
					if ( Rand13.PercentChance( 60 ) ) {
						this.lock_atom( H );
						this.visible_message( new Txt( "<span class='danger'>" ).The( this ).item().str( " grabs " ).the( H ).item().str( " with its tongue!" ).ToString() );
					}
				} else if ( this.locked_atoms.Contains( H ) ) {
					
					if ( Rand13.PercentChance( 20 ) ) {
						GlobalFuncs.to_chat( H, "<span class='danger'>You feel very weak!</span>" );
						((Mob)H).Weaken( 3 );
					}
				}
			}
			return null;
		}

		// Function from file: mimic.dm
		public override void Die( bool? gore = null ) {
			Ent_Static A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.locked_atoms, typeof(Ent_Static) )) {
				A = _a;
				
				this.unlock_atom( A );
				this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " lets go of " ).the( A ).item().str( "!</span>" ).ToString() );
			}
			base.Die( gore );
			return;
		}

	}

}
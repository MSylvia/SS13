// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Chicken : Mob_Living_SimpleAnimal {

		public Type egg_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Egg);
		public Type food_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Wheat);
		public int eggsleft = 0;
		public bool eggsFertile = true;
		public dynamic body_color = null;
		public string icon_prefix = "chicken";
		public ByTable feedMessages = new ByTable(new object [] { "It clucks happily.", "It clucks happily." });
		public ByTable layMessage = new ByTable(new object [] { "lays an egg.", "squats down and croons.", "begins making a huge racket.", "begins clucking raucously." });
		public ByTable validColors = new ByTable(new object [] { "brown", "black", "white" });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "chicken";
			this.icon_dead = "chicken_dead";
			this.speak = new ByTable(new object [] { "Cluck!", "BWAAAAARK BWAK BWAK BWAK!", "Bwaak bwak." });
			this.speak_emote = new ByTable(new object [] { "clucks", "croons" });
			this.emote_hear = new ByTable(new object [] { "clucks." });
			this.emote_see = new ByTable(new object [] { "pecks at the ground.", "flaps its wings viciously." });
			this.speak_chance = 2;
			this.turns_per_move = 3;
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab), 2 );
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "kicks";
			this.attacktext = "kicks";
			this.health = 10;
			this.ventcrawler = 2;
			this.pass_flags = 17;
			this.mob_size = 1;
			this.gold_core_spawnable = 2;
			this.icon_state = "chicken";
		}

		// Function from file: farm_animals.dm
		public Mob_Living_SimpleAnimal_Chicken ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( !Lang13.Bool( this.body_color ) ) {
				this.body_color = Rand13.PickFromTable( this.validColors );
			}
			this.icon_state = "" + this.icon_prefix + "_" + this.body_color;
			this.icon_living = "" + this.icon_prefix + "_" + this.body_color;
			this.icon_dead = "" + this.icon_prefix + "_" + this.body_color + "_dead";
			this.pixel_x = Rand13.Int( -6, 6 );
			this.pixel_y = Rand13.Int( 0, 10 );
			GlobalVars.chicken_count += 1;
			return;
		}

		// Function from file: farm_animals.dm
		public override bool Life(  ) {
			bool _default = false;

			dynamic E = null;

			_default = base.Life();

			if ( !_default ) {
				return _default;
			}

			if ( !( this.stat != 0 ) && Rand13.PercentChance( 3 ) && this.eggsleft > 0 ) {
				this.visible_message( "" + this + " " + Rand13.PickFromTable( this.layMessage ) );
				this.eggsleft--;
				E = Lang13.Call( this.egg_type, GlobalFuncs.get_turf( this ) );
				E.pixel_x = Rand13.Int( -6, 6 );
				E.pixel_y = Rand13.Int( -6, 6 );

				if ( this.eggsFertile ) {
					
					if ( GlobalVars.chicken_count < GlobalVars.MAX_CHICKENS && Rand13.PercentChance( 25 ) ) {
						GlobalVars.SSobj.processing.Or( E );
					}
				}
			}
			return _default;
		}

		// Function from file: farm_animals.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			string feedmsg = null;

			
			if ( Lang13.Bool( ((dynamic)this.food_type).IsInstanceOfType( A ) ) ) {
				
				if ( !( this.stat != 0 ) && this.eggsleft < 8 ) {
					feedmsg = "" + user + " feeds " + A + " to " + this.name + "! " + Rand13.PickFromTable( this.feedMessages );
					((Ent_Static)user).visible_message( feedmsg );
					user.drop_item();
					GlobalFuncs.qdel( A );
					this.eggsleft += Rand13.Int( 1, 4 );
				} else {
					user.WriteMsg( "<span class='warning'>" + this.name + " doesn't seem hungry!</span>" );
				}
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: farm_animals.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			base.death( gibbed, toast );
			GlobalVars.chicken_count -= 1;
			return false;
		}

	}

}
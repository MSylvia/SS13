// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Pet_Dog_Corgi : Mob_Living_SimpleAnimal_Pet_Dog {

		public bool shaved = false;
		public dynamic inventory_head = null;
		public dynamic inventory_back = null;
		public Obj_Item_Clothing_Mask_Facehugger facehugger = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "corgi";
			this.icon_living = "corgi";
			this.icon_dead = "corgi_dead";
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab_Corgi), 3 ).Set( typeof(Obj_Item_Stack_Sheet_Animalhide_Corgi), 1 );
			this.childtype = typeof(Mob_Living_SimpleAnimal_Pet_Dog_Corgi_Puppy);
			this.species = typeof(Mob_Living_SimpleAnimal_Pet_Dog);
			this.gold_core_spawnable = 2;
			this.icon_state = "corgi";
		}

		// Function from file: dog.dm
		public Mob_Living_SimpleAnimal_Pet_Dog_Corgi ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.regenerate_icons();
			return;
		}

		// Function from file: dog.dm
		public override bool regenerate_icons(  ) {
			Image head_icon = null;
			Image back_icon = null;

			this.overlays.Cut();

			if ( Lang13.Bool( this.inventory_head ) ) {
				
				if ( Convert.ToDouble( this.health ) <= 0 ) {
					head_icon = new Image( "icons/mob/corgi_head.dmi", null, this.inventory_head.icon_state, null, GlobalVars.EAST );
					head_icon.pixel_y = -8;
					head_icon.transform = Num13.Rotate( head_icon.transform, 180 );
				} else {
					head_icon = new Image( "icons/mob/corgi_head.dmi", null, this.inventory_head.icon_state );
				}
				this.overlays.Add( head_icon );
			}

			if ( Lang13.Bool( this.inventory_back ) ) {
				
				if ( Convert.ToDouble( this.health ) <= 0 ) {
					back_icon = new Image( "icons/mob/corgi_back.dmi", null, this.inventory_back.icon_state, null, GlobalVars.EAST );
					back_icon.pixel_y = -11;
					back_icon.transform = Num13.Rotate( back_icon.transform, 180 );
				} else {
					back_icon = new Image( "icons/mob/corgi_back.dmi", null, this.inventory_back.icon_state );
				}
				this.overlays.Add( back_icon );
			}

			if ( this.facehugger != null ) {
				
				if ( this is Mob_Living_SimpleAnimal_Pet_Dog_Corgi_Puppy ) {
					this.overlays.Add( new Image( "icons/mob/mask.dmi", "facehugger_corgipuppy" ) );
				} else {
					this.overlays.Add( new Image( "icons/mob/mask.dmi", "facehugger_corgi" ) );
				}
			}

			if ( Lang13.Bool( this.pcollar ) ) {
				this.overlays.Add( this.collar );
				this.overlays.Add( this.pettag );
			}
			return false;
		}

		// Function from file: dog.dm
		public void update_corgi_fluff(  ) {
			bool special_hat = false;
			bool special_back = false;

			special_hat = false;

			if ( Lang13.Bool( this.inventory_head ) ) {
				special_hat = true;

				dynamic _a = this.inventory_head.type; // Was a switch-case, sorry for the mess.
				if ( _a==typeof(Obj_Item_Clothing_Head_Helmet) ) {
					this.name = "Sergeant " + this.real_name;
					this.desc = "The ever-loyal, the ever-vigilant.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Chefhat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Chef) ) {
					this.name = "Sous chef " + this.real_name;
					this.desc = "Your food will be taste-tested.  All of it.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Caphat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Captain) ) {
					this.name = "Captain " + this.real_name;
					this.desc = "Probably better than the last captain.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Kitty) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Kitty) ) {
					this.name = "Runtime";
					this.emote_see = new ByTable(new object [] { "coughs up a furball", "stretches" });
					this.emote_hear = new ByTable(new object [] { "purrs" });
					this.speak = new ByTable(new object [] { "Purrr", "Meow!", "MAOOOOOW!", "HISSSSS", "MEEEEEEW" });
					this.desc = "It's a cute little kitty-cat! ... wait ... what the hell?";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Rabbitears) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Rabbitears) ) {
					this.name = "Hoppy";
					this.emote_see = new ByTable(new object [] { "twitches its nose", "hops around a bit" });
					this.desc = "This is Hoppy. It's a corgi-...urmm... bunny rabbit";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Beret) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Beret) ) {
					this.name = "Yann";
					this.desc = "Mon dieu! C'est un chien!";
					this.speak = new ByTable(new object [] { "le woof!", "le bark!", "JAPPE!!" });
					this.emote_see = new ByTable(new object [] { "cowers in fear.", "surrenders.", "plays dead.", "looks as though there is a wall in front of him." });
				} else if ( _a==typeof(Obj_Item_Clothing_Head_DetHat) ) {
					this.name = "Detective " + this.real_name;
					this.desc = "" + this.name + " sees through your lies...";
					this.emote_see = new ByTable(new object [] { "investigates the area.", "sniffs around for clues.", "searches for scooby snacks." });
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Nursehat) ) {
					this.name = "Nurse " + this.real_name;
					this.desc = "" + this.name + " needs 100cc of beef jerky... STAT!";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Pirate) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Pirate) ) {
					this.name = "" + Rand13.Pick(new object [] { "Ol'", "Scurvy", "Black", "Rum", "Gammy", "Bloody", "Gangrene", "Death", "Long-John" }) + " " + Rand13.Pick(new object [] { "kibble", "leg", "beard", "tooth", "poop-deck", "Threepwood", "Le Chuck", "corsair", "Silver", "Crusoe" });
					this.desc = "Yaarghh!! Thar' be a scurvy dog!";
					this.emote_see = new ByTable(new object [] { "hunts for treasure.", "stares coldly...", "gnashes his tiny corgi teeth!" });
					this.emote_hear = new ByTable(new object [] { "growls ferociously!", "snarls." });
					this.speak = new ByTable(new object [] { "Arrrrgh!!", "Grrrrrr!" });
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Ushanka) ) {
					this.name = "" + Rand13.Pick(new object [] { "Comrade", "Commissar", "Glorious Leader" }) + " " + this.real_name;
					this.desc = "A follower of Karl Barx.";
					this.emote_see = new ByTable(new object [] { "contemplates the failings of the capitalist economic model.", "ponders the pros and cons of vanguardism." });
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Warden) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Police) ) {
					this.name = "Officer " + this.real_name;
					this.emote_see = new ByTable(new object [] { "drools.", "looks for donuts." });
					this.desc = "Stop right there criminal scum!";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Wizard_Fake) || _a==typeof(Obj_Item_Clothing_Head_Wizard) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Wizard) ) {
					this.name = "Grandwizard " + this.real_name;
					this.speak = new ByTable(new object [] { "YAP", "Woof!", "Bark!", "AUUUUUU", "EI  NATH!" });
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Cardborg) ) {
					this.name = "Borgi";
					this.speak = new ByTable(new object [] { "Ping!", "Beep!", "Woof!" });
					this.emote_see = new ByTable(new object [] { "goes rogue.", "sniffs out non-humans." });
					this.desc = "Result of robotics budget cuts.";
				} else if ( _a==typeof(Obj_Item_Weapon_Bedsheet) ) {
					this.name = "Ã¿Ghost";
					this.speak = new ByTable(new object [] { "WoooOOOooo~", "AUUUUUUUUUUUUUUUUUU" });
					this.emote_see = new ByTable(new object [] { "stumbles around.", "shivers." });
					this.emote_hear = new ByTable(new object [] { "howls!", "groans." });
					this.desc = "Spooky!";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Helmet_Space_Santahat) ) {
					this.name = "Santa's Corgi Helper";
					this.emote_hear = new ByTable(new object [] { "barks Christmas songs.", "yaps merrily!" });
					this.emote_see = new ByTable(new object [] { "looks for presents.", "checks his list." });
					this.desc = "He's very fond of milk and cookies.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Soft) ) {
					this.name = "Corgi Tech " + this.real_name;
					this.desc = "The reason your yellow gloves have chew-marks.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Hardhat_Reindeer) ) {
					this.name = "" + this.real_name + " the red-nosed Corgi";
					this.emote_hear = new ByTable(new object [] { "lights the way!", "illuminates.", "yaps!" });
					this.desc = "He has a very shiny nose.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Sombrero) ) {
					this.name = "Segnor " + this.real_name;
					this.desc = "You must respect elder " + this.real_name;
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Hopcap) ) {
					this.name = "Lieutenant " + this.real_name;
					this.desc = "Can actually be trusted to not run off on his own.";
				} else if ( _a==typeof(Obj_Item_Clothing_Head_Helmet_Space_Hardsuit_Deathsquad) ) {
					this.name = "Trooper " + this.real_name;
					this.desc = "That's not red paint. That's real corgi blood.";
				} else if ( _a==typeof(Obj_Item_Clothing_Mask_Gas_ClownHat) ) {
					this.name = "" + this.real_name + " the Clown";
					this.desc = "Honkman's best friend.";
					this.speak = new ByTable(new object [] { "HONK!", "Honk!" });
					this.emote_see = new ByTable(new object [] { "plays tricks.", "slips." });
				} else {
					special_hat = false;
				}
			}
			special_back = false;

			if ( Lang13.Bool( this.inventory_back ) ) {
				special_back = true;

				dynamic _b = this.inventory_back.type; // Was a switch-case, sorry for the mess.
				if ( _b==typeof(Obj_Item_Clothing_Suit_Space_Hardsuit_Deathsquad) ) {
					this.name = "Trooper " + this.real_name;
					this.desc = "That's not red paint. That's real corgi blood.";
				} else {
					special_back = false;
				}
			}

			if ( !special_hat && !special_back ) {
				this.name = this.real_name;
				this.desc = Lang13.Initial( this, "desc" );
				this.speak = new ByTable(new object [] { "YAP", "Woof!", "Bark!", "AUUUUUU" });
				this.speak_emote = new ByTable(new object [] { "barks", "woofs" });
				this.emote_hear = new ByTable(new object [] { "barks", "woofs", "yaps", "pants" });
				this.emote_see = new ByTable(new object [] { "shakes its head", "shivers" });
				this.desc = "It's a corgi.";
				this.SetLuminosity( 0 );
			}
			return;
		}

		// Function from file: dog.dm
		public bool place_on_head( dynamic item_to_add = null, Mob user = null ) {
			bool valid = false;
			dynamic i = null;

			
			if ( item_to_add is Obj_Item_Weapon_C4 ) {
				item_to_add.afterattack( this, user, 1 );
				return false;
			}

			if ( Lang13.Bool( this.inventory_head ) ) {
				
				if ( user != null ) {
					user.WriteMsg( "<span class='warning'>You can't put more than one hat on " + this + "!</span>" );
				}
				return false;
			}

			if ( !Lang13.Bool( item_to_add ) ) {
				user.visible_message( "" + user + " pets " + this + ".", "<span class='notice'>You rest your hand on " + this + "'s head for a moment.</span>" );
				return false;
			}
			valid = false;

			if ( item_to_add is Obj_Item_Clothing_Tie_Scarf ) {
				valid = true;
			} else {
				
				dynamic _a = item_to_add.type; // Was a switch-case, sorry for the mess.
				if ( _a==typeof(Obj_Item_Clothing_Glasses_Sunglasses) || _a==typeof(Obj_Item_Clothing_Head_That) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Paper) || _a==typeof(Obj_Item_Clothing_Head_Hardhat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Hardhat) || _a==typeof(Obj_Item_Clothing_Head_Hardhat_White) || _a==typeof(Obj_Item_Weapon_Paper) || _a==typeof(Obj_Item_Clothing_Head_Helmet) || _a==typeof(Obj_Item_Clothing_Head_Chefhat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Chef) || _a==typeof(Obj_Item_Clothing_Head_Caphat) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Captain) || _a==typeof(Obj_Item_Clothing_Head_Kitty) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Kitty) || _a==typeof(Obj_Item_Clothing_Head_Rabbitears) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Rabbitears) || _a==typeof(Obj_Item_Clothing_Head_Beret) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Beret) || _a==typeof(Obj_Item_Clothing_Head_DetHat) || _a==typeof(Obj_Item_Clothing_Head_Nursehat) || _a==typeof(Obj_Item_Clothing_Head_Pirate) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Pirate) || _a==typeof(Obj_Item_Clothing_Head_Ushanka) || _a==typeof(Obj_Item_Clothing_Head_Warden) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Police) || _a==typeof(Obj_Item_Clothing_Head_Wizard_Fake) || _a==typeof(Obj_Item_Clothing_Head_Wizard) || _a==typeof(Obj_Item_Clothing_Head_Collectable_Wizard) || _a==typeof(Obj_Item_Clothing_Head_Cardborg) || _a==typeof(Obj_Item_Weapon_Bedsheet) || _a==typeof(Obj_Item_Clothing_Head_Helmet_Space_Santahat) || _a==typeof(Obj_Item_Clothing_Head_Soft) || _a==typeof(Obj_Item_Clothing_Head_Hardhat_Reindeer) || _a==typeof(Obj_Item_Clothing_Head_Sombrero) || _a==typeof(Obj_Item_Clothing_Head_Hopcap) || _a==typeof(Obj_Item_Clothing_Mask_Gas_ClownHat) ) {
					valid = true;
				}
			}

			if ( valid ) {
				
				if ( user != null && !user.drop_item() ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( item_to_add ).item().str( " is stuck to your hand, you cannot put it on " ).item( this ).str( "'s head!</span>" ).ToString() );
					return false;
				}

				if ( Convert.ToDouble( this.health ) <= 0 ) {
					user.WriteMsg( new Txt( "<span class ='notice'>There is merely a dull, lifeless look in " ).item( this.real_name ).str( "'s eyes as you put the " ).item( item_to_add ).str( " on " ).him_her_it_them().str( ".</span>" ).ToString() );
				} else if ( user != null ) {
					user.visible_message( "" + user + " puts " + item_to_add + " on " + this.real_name + "'s head.  " + this + " looks at " + user + " and barks once.", new Txt( "<span class='notice'>You put " ).item( item_to_add ).str( " on " ).item( this.real_name ).str( "'s head.  " ).item( this ).str( " gives you a peculiar look, then wags " ).his_her_its_their().str( " tail once and barks.</span>" ).ToString(), "<span class='italics'>You hear a friendly-sounding bark.</span>" );
				}
				item_to_add.loc = this;
				this.inventory_head = item_to_add;
				this.update_corgi_fluff();
				this.regenerate_icons();
			} else {
				
				if ( user != null && !user.drop_item() ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( item_to_add ).item().str( " is stuck to your hand, you cannot put it on " ).item( this ).str( "'s head!</span>" ).ToString() );
					return false;
				}
				user.WriteMsg( "<span class='warning'>You set " + item_to_add + " on " + this + "'s head, but it falls off!</span>" );
				item_to_add.loc = this.loc;

				if ( Rand13.PercentChance( 25 ) ) {
					Map13.StepRandom( item_to_add );
				}

				foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 8, 4, this.dir }) )) {
					i = _b;
					
					this.dir = Convert.ToInt32( i );
					Task13.Sleep( 1 );
				}
			}
			return valid;
		}

		// Function from file: dog.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic remove_from = null;
			dynamic add_to = null;
			dynamic item_to_add = null;
			ByTable allowed_types = null;
			dynamic i = null;

			
			if ( Task13.User.stat != 0 ) {
				return null;
			}

			if ( Lang13.Bool( href_list["remove_inv"] ) ) {
				
				if ( !this.Adjacent( Task13.User ) || !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Living_Carbon_Monkey || Task13.User is Mob_Living_Silicon_Robot || Task13.User is Mob_Living_Carbon_Alien_Humanoid ) ) {
					return null;
				}
				remove_from = href_list["remove_inv"];

				dynamic _a = remove_from; // Was a switch-case, sorry for the mess.
				if ( _a=="head" ) {
					
					if ( Lang13.Bool( this.inventory_head ) ) {
						this.inventory_head.loc = this.loc;
						this.inventory_head = null;
						this.update_corgi_fluff();
						this.regenerate_icons();
					} else {
						Task13.User.WriteMsg( "<span class='danger'>There is nothing to remove from its " + remove_from + ".</span>" );
						return null;
					}
				} else if ( _a=="back" ) {
					
					if ( Lang13.Bool( this.inventory_back ) ) {
						this.inventory_back.loc = this.loc;
						this.inventory_back = null;
						this.update_corgi_fluff();
						this.regenerate_icons();
					} else {
						Task13.User.WriteMsg( "<span class='danger'>There is nothing to remove from its " + remove_from + ".</span>" );
						return null;
					}
				}
				this.show_inv( Task13.User );
			} else if ( Lang13.Bool( href_list["add_inv"] ) ) {
				
				if ( !this.Adjacent( Task13.User ) || !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Living_Carbon_Monkey || Task13.User is Mob_Living_Silicon_Robot || Task13.User is Mob_Living_Carbon_Alien_Humanoid ) ) {
					return null;
				}
				add_to = href_list["add_inv"];

				dynamic _c = add_to; // Was a switch-case, sorry for the mess.
				if ( _c=="head" ) {
					this.place_on_head( Task13.User.get_active_hand(), Task13.User );
				} else if ( _c=="back" ) {
					
					if ( Lang13.Bool( this.inventory_back ) ) {
						Task13.User.WriteMsg( "<span class='warning'>It's already wearing something!</span>" );
						return null;
					} else {
						item_to_add = Task13.User.get_active_hand();

						if ( !Lang13.Bool( item_to_add ) ) {
							Task13.User.visible_message( "" + Task13.User + " pets " + this + ".", "<span class='notice'>You rest your hand on " + this + "'s back for a moment.</span>" );
							return null;
						}

						if ( item_to_add is Obj_Item_Weapon_C4 ) {
							item_to_add.afterattack( this, Task13.User, 1 );
							return null;
						}
						allowed_types = new ByTable(new object [] { 
							typeof(Obj_Item_Clothing_Suit_Armor_Vest), 
							typeof(Obj_Item_Clothing_Suit_Space_Hardsuit_Deathsquad), 
							typeof(Obj_Item_Device_Radio), 
							typeof(Obj_Item_Device_Radio_Off), 
							typeof(Obj_Item_Clothing_Suit_Cardborg), 
							typeof(Obj_Item_Weapon_Tank_Internals_Oxygen), 
							typeof(Obj_Item_Weapon_Tank_Internals_Air), 
							typeof(Obj_Item_Weapon_Extinguisher), 
							typeof(Obj_Item_Clothing_Suit_Hooded_IanCostume)
						 });

						if ( !allowed_types.Contains( item_to_add.type ) ) {
							Task13.User.WriteMsg( "<span class='warning'>You set " + item_to_add + " on " + this + "'s back, but it falls off!</span>" );

							if ( !Task13.User.drop_item() ) {
								Task13.User.WriteMsg( new Txt( "<span class='warning'>" ).The( item_to_add ).item().str( " is stuck to your hand, you cannot put it on " ).item( this ).str( "'s back!</span>" ).ToString() );
								return null;
							}
							item_to_add.loc = this.loc;

							if ( Rand13.PercentChance( 25 ) ) {
								Map13.StepRandom( item_to_add );
							}

							foreach (dynamic _b in Lang13.Enumerate( new ByTable(new object [] { 1, 2, 4, 8, 4, 8, 4, this.dir }) )) {
								i = _b;
								
								this.dir = Convert.ToInt32( i );
								Task13.Sleep( 1 );
							}
							return null;
						}
						Task13.User.drop_item();
						item_to_add.loc = this;
						this.inventory_back = item_to_add;
						this.update_corgi_fluff();
						this.regenerate_icons();
					}
				}
				this.show_inv( Task13.User );
			} else {
				base.Topic( href, href_list, (object)(hsrc) );
			}
			return null;
		}

		// Function from file: dog.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( Lang13.Bool( this.inventory_head ) && Lang13.Bool( this.inventory_back ) ) {
				
				if ( this.inventory_head is Obj_Item_Clothing_Head_Helmet && this.inventory_back is Obj_Item_Clothing_Suit_Armor ) {
					
					if ( Lang13.Bool( A.force ) ) {
						user.WriteMsg( new Txt( "<span class='warning'>" ).item( this ).str( " is wearing too much armor! You can't cause " ).him_her_it_them().str( " any damage.</span>" ).ToString() );
						this.visible_message( "<span class='danger'>" + user + " hits " + this + " with " + A + ", however " + this + " is too armored.</span>" );
					} else {
						user.WriteMsg( new Txt( "<span class='warning'>" ).item( this ).str( " is wearing too much armor! You can't reach " ).his_her_its_their().str( " skin.<span>" ).ToString() );
						this.visible_message( "" + user + " gently taps " + this + " with " + A + "." );
					}

					if ( Convert.ToDouble( this.health ) > 0 && Rand13.PercentChance( 15 ) ) {
						this.emote( "me", 1, "looks at " + user + " with " + Rand13.Pick(new object [] { "an amused", "an annoyed", "a confused", "a resentful", "a happy", "an excited" }) + " expression." );
					}
					return null;
				}
			}

			if ( A is Obj_Item_Weapon_Razor ) {
				
				if ( this.shaved ) {
					user.WriteMsg( "<span class='warning'>You can't shave this corgi, it's already been shaved!</span>" );
					return null;
				}
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " starts to shave " ).item( this ).str( " using " ).the( A ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You start to shave " ).item( this ).str( " using " ).the( A ).item().str( "...</span>" ).ToString() );

				if ( GlobalFuncs.do_after( user, 50, null, this ) ) {
					((Ent_Static)user).visible_message( new Txt().item( user ).str( " shaves " ).item( this ).str( "'s hair using " ).the( A ).item().str( "." ).ToString() );
					GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 20, 1 );
					this.shaved = true;
					this.icon_living = "" + Lang13.Initial( this, "icon_living" ) + "_shaved";
					this.icon_dead = "" + Lang13.Initial( this, "icon_living" ) + "_shaved_dead";

					if ( this.stat == 0 ) {
						this.icon_state = this.icon_living;
					} else {
						this.icon_state = this.icon_dead;
					}
				}
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			this.update_corgi_fluff();
			return null;
		}

		// Function from file: dog.dm
		public override void show_inv( Obj user = null ) {
			string dat = null;

			((Mob)user).set_machine( this );

			if ( Lang13.Bool( ((dynamic)user).stat ) ) {
				return;
			}
			dat = "<div align='center'><b>Inventory of " + this.name + "</b></div><p>";

			if ( Lang13.Bool( this.inventory_head ) ) {
				dat += new Txt( "<br><b>Head:</b> " ).item( this.inventory_head ).str( " (<a href='?src=" ).Ref( this ).str( ";remove_inv=head'>Remove</a>)" ).ToString();
			} else {
				dat += new Txt( "<br><b>Head:</b> <a href='?src=" ).Ref( this ).str( ";add_inv=head'>Nothing</a>" ).ToString();
			}

			if ( Lang13.Bool( this.inventory_back ) ) {
				dat += new Txt( "<br><b>Back:</b> " ).item( this.inventory_back ).str( " (<a href='?src=" ).Ref( this ).str( ";remove_inv=back'>Remove</a>)" ).ToString();
			} else {
				dat += new Txt( "<br><b>Back:</b> <a href='?src=" ).Ref( this ).str( ";add_inv=back'>Nothing</a>" ).ToString();
			}
			Interface13.Browse( user, dat, "window=mob" + this.real_name + ";size=325x500" );
			GlobalFuncs.onclose( user, "mob" + this.real_name );
			return;
		}

		// Function from file: dog.dm
		public override void revive(  ) {
			base.revive();
			this.regenerate_icons();
			return;
		}

		// Function from file: dog.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			base.death( gibbed, toast );
			this.regenerate_icons();
			return false;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.assigned_role = "Corgi";
			this.mind.special_role = "Corgi";
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Blob : Mob_Living_SimpleAnimal_Hostile {

		public Mob_Camera_Blob overmind = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pass_flags = 8;
			this.faction = new ByTable(new object [] { "blob" });
			this.bubble_icon = "blob";
			this.atmos_requirements = new ByTable().Set( "min_oxy", 0 ).Set( "max_oxy", 0 ).Set( "min_tox", 0 ).Set( "max_tox", 0 ).Set( "min_co2", 0 ).Set( "max_co2", 0 ).Set( "min_n2", 0 ).Set( "max_n2", 0 );
			this.minbodytemp = 0;
			this.maxbodytemp = 360;
			this.unique_name = true;
			this.icon = "icons/mob/blob.dmi";
		}

		public Mob_Living_SimpleAnimal_Hostile_Blob ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: blob_mobs.dm
		public void blob_chat( dynamic msg = null ) {
			string spanned_message = null;
			string rendered = null;
			dynamic M = null;

			spanned_message = this.say_quote( msg, this.get_spans() );
			rendered = "<font color=\"#EE4000\"><b>[Blob Telepathy] " + this.real_name + "</b> " + spanned_message + "</font>";

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				

				if ( M is Mob_Camera_Blob || M is Mob_Living_SimpleAnimal_Hostile_Blob ) {
					M.WriteMsg( rendered );
				}

				if ( M is Mob_Dead_Observer ) {
					M.WriteMsg( new Txt( "<a href='?src=" ).Ref( M ).str( ";follow=" ).Ref( this ).str( "'>(F)</a> " ).item( rendered ).ToString() );
				}
			}
			return;
		}

		// Function from file: blob_mobs.dm
		public override int handle_inherent_channels( dynamic message = null, string message_mode = null ) {
			
			if ( message_mode == "binary" ) {
				this.blob_chat( message );
				return 3;
			} else {
				base.handle_inherent_channels( (object)(message), message_mode );
			}
			return 0;
		}

		// Function from file: blob_mobs.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 0;

			
			if ( mover is Obj_Effect_Blob ) {
				return true;
			}
			return base.CanPass( (object)(mover), (object)(target), height, air_group );
		}

		// Function from file: blob_mobs.dm
		public override bool fire_act( bool? air = null, dynamic exposed_temperature = null, double? exposed_volume = null ) {
			base.fire_act( air, (object)(exposed_temperature), exposed_volume );
			this.adjustFireLoss( Num13.MaxInt( 1, Num13.MinInt( Convert.ToInt32( exposed_temperature * 0.01 ), 5 ) ) );
			return false;
		}

		// Function from file: blob_mobs.dm
		public override bool blob_act( dynamic severity = null ) {
			this.adjustHealth( -this.maxHealth * 0.025 );
			return false;
		}

		// Function from file: blob_mobs.dm
		public override void update_icons(  ) {
			
			if ( this.overmind != null ) {
				this.color = this.overmind.blob_reagent_datum.color;
			}
			return;
		}

	}

}
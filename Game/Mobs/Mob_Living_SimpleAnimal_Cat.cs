// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Cat : Mob_Living_SimpleAnimal {

		public int turns_since_scan = 0;
		public Mob_Living_SimpleAnimal_Mouse movement_target = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "cat2";
			this.icon_dead = "cat2_dead";
			this.size = 2;
			this.speak = new ByTable(new object [] { "Meow!", "Esp!", "Purr!", "HSSSSS" });
			this.speak_emote = new ByTable(new object [] { "purrs", "meows" });
			this.emote_hear = new ByTable(new object [] { "meows", "mews" });
			this.emote_see = new ByTable(new object [] { "shakes its head", "shivers" });
			this.speak_chance = 1;
			this.turns_per_move = 5;
			this.can_breed = true;
			this.species_type = typeof(Mob_Living_SimpleAnimal_Cat);
			this.childtype = typeof(Mob_Living_SimpleAnimal_Cat_Kitten);
			this.holder_type = typeof(Obj_Item_Weapon_Holder_Animal_Cat);
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "kicks";
			this.min_oxy = 16;
			this.minbodytemp = 223;
			this.maxbodytemp = 323;
			this.icon_state = "cat2";
			this.see_in_dark = 6;
		}

		public Mob_Living_SimpleAnimal_Cat ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cat.dm
		public override bool Life(  ) {
			Mob_Living_SimpleAnimal_Mouse M = null;
			Mob_Living_SimpleAnimal_Mouse snack = null;
			Mob_Living_SimpleAnimal_Mouse snack2 = null;

			
			if ( this.timestopped ) {
				return false;
			}

			if ( this.loc != null && this.loc is Tile ) {
				
				if ( !Lang13.Bool( this.stat ) && !( this.resting != 0 ) && !Lang13.Bool( this.locked_to ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInView( this, 1 ), typeof(Mob_Living_SimpleAnimal_Mouse) )) {
						M = _a;
						

						if ( !Lang13.Bool( M.stat ) ) {
							M.splat();
							this.emote( Rand13.Pick(new object [] { "<span class='warning'>splats the " + M + "!</span>", "<span class='warning'>toys with the " + M + "</span>", "worries the " + M }) );
							this.movement_target = null;
							this.stop_automated_movement = false;
							break;
						}
					}
				}
			}
			base.Life();

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInViewExcludeThis( 3, this ), typeof(Mob_Living_SimpleAnimal_Mouse) )) {
				snack = _b;
				

				if ( Rand13.PercentChance( 15 ) ) {
					this.emote( Rand13.Pick(new object [] { "hisses and spits!", "mrowls fiercely!", "eyes " + snack + " hungrily." }) );
				}
				break;
			}

			if ( !Lang13.Bool( this.stat ) && !( this.resting != 0 ) && !Lang13.Bool( this.locked_to ) ) {
				this.turns_since_scan++;

				if ( this.turns_since_scan > 5 ) {
					Map13.WalkTowards( this, 0, 0, 0 );
					this.turns_since_scan = 0;

					if ( this.movement_target != null && !( this.movement_target.loc is Tile || this.movement_target.loc is Mob_Living_Carbon_Human ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;
					}

					if ( !( this.movement_target != null ) || !Map13.FetchInViewExcludeThis( 3, this ).Contains( this.movement_target.loc ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;

						foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInViewExcludeThis( 3, this ), typeof(Mob_Living_SimpleAnimal_Mouse) )) {
							snack2 = _c;
							

							if ( snack2.loc is Tile && !Lang13.Bool( snack2.stat ) ) {
								this.movement_target = snack2;
								break;
							}
						}
					}

					if ( this.movement_target != null ) {
						this.stop_automated_movement = true;
						Map13.WalkTowards( this, this.movement_target, 0, 3 );
					}
				}
			}
			return false;
		}

	}

}
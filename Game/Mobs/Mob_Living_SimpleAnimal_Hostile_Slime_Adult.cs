// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Slime_Adult : Mob_Living_SimpleAnimal_Hostile_Slime {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.health = 200;
			this.maxHealth = 200;
			this.icon_living = "grey adult slime eat";
			this.icon_state = "grey adult slime eat";
		}

		// Function from file: slime.dm
		public Mob_Living_SimpleAnimal_Hostile_Slime_Adult ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.overlays = 0;
			this.overlays.Add( "bloodlust-adult" );
			return;
		}

		// Function from file: slime.dm
		public override void calm(  ) {
			Type calmed_type = null;
			string path_end = null;
			dynamic calmed = null;
			dynamic M = null;

			calmed_type = typeof(Mob_Living_Carbon_Slime_Adult);

			if ( this.colour != "grey" ) {
				path_end = GlobalFuncs.replacetext( this.colour, " ", "" );
				calmed_type = Lang13.FindClass( "/mob/living/carbon/slime/adult/" + path_end );
			}
			calmed = Lang13.Call( calmed_type, this.loc );

			foreach (dynamic _a in Lang13.Enumerate( this.friends )) {
				M = _a;
				
				calmed.Friends.Add( M );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: slime.dm
		public override void Die( bool? gore = null ) {
			int? i = null;
			Mob_Living_SimpleAnimal_Hostile_Slime rabid = null;
			dynamic M = null;

			i = null;
			i = 0;

			while (( i ??0) < 2) {
				rabid = new Mob_Living_SimpleAnimal_Hostile_Slime( this.loc );
				rabid.icon_state = "" + this.colour + " baby slime eat";
				rabid.icon_living = "" + this.colour + " baby slime eat";
				rabid.icon_dead = "" + this.colour + " baby slime dead";
				rabid.colour = "" + this.colour;

				foreach (dynamic _a in Lang13.Enumerate( this.friends )) {
					M = _a;
					
					rabid.friends.Add( M );
				}
				i++;
			}
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item : Mob_Living_SimpleAnimal_Hostile_Mimic_Crate {

		public Icon mouth_overlay = new Icon( "icons/mob/mob.dmi", "mimic_mouth" );

		protected override void __FieldInit() {
			base.__FieldInit();

			this.maxHealth = 60;
			this.health = 60;
			this.copied_object = typeof(Obj_Item_Target);
		}

		public Mob_Living_SimpleAnimal_Hostile_Mimic_Crate_Item ( dynamic loc = null, dynamic new_disguise = null ) : base( (object)(loc), (object)(new_disguise) ) {
			
		}

		// Function from file: mimic.dm
		public override bool environment_disguise( ByTable L = null ) {
			L = L ?? GlobalVars.item_mimic_disguises;

			dynamic I = null;

			base.environment_disguise( GlobalVars.item_mimic_disguises );

			if ( Lang13.Bool( this.copied_object.IsSubclassOf( typeof(Obj_Item) ) ) ) {
				I = this.copied_object;
				this.size = Lang13.Initial( I, "w_class" );
			} else {
				this.size = 3;
			}
			return false;
		}

		// Function from file: mimic.dm
		public override void calm_down( bool? change_icon = null ) {
			dynamic I = null;

			base.calm_down( false );
			this.overlays.Remove( this.mouth_overlay );
			this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " falls to the ground, lifeless.</span>" ).ToString() );
			this.density = false;
			this.environment_disguise();

			if ( Lang13.Bool( this.copied_object ) ) {
				this.appearance = Lang13.Initial( this.copied_object, "appearance" );

				if ( Lang13.Bool( this.copied_object.IsSubclassOf( typeof(Obj_Item) ) ) ) {
					I = this.copied_object;
					this.size = Lang13.Initial( I, "w_class" );
				} else {
					this.size = 3;
				}
			}
			return;
		}

		// Function from file: mimic.dm
		public override void anger( bool? berserk = null, bool? change_icon = null ) {
			base.anger( berserk, false );
			this.overlays.Add( this.mouth_overlay );
			this.visible_message( new Txt( "<span class='danger'>" ).The( this ).item().str( " comes to life!</span>" ).ToString() );
			this.name = "" + Lang13.Initial( this.copied_object, "name" ) + " mimic";
			this.density = true;
			return;
		}

		// Function from file: mimic.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.angry != 0 ) {
				return base.attack_hand( (object)(a), (object)(b), (object)(c) );
			}
			((Mob)a).simple_message( new Txt( "<span class='warning'>Oh no! " ).The( this ).item().str( " is actually a mimic!</span>" ).ToString(), new Txt( "<span class='info'>" ).The( this ).item().str( " starts moving. Wow.</span>" ).ToString() );
			this.anger();
			return null;
		}

		// Function from file: mimic.dm
		public override void Die( bool? gore = null ) {
			this.copied_object = this.meat_type;
			base.Die( gore );
			return;
		}

		// Function from file: mimic.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			string s_size = null;
			string pronoun = null;

			
			dynamic _a = this.size; // Was a switch-case, sorry for the mess.
			if ( _a==1 ) {
				s_size = "tiny";
			} else if ( _a==2 ) {
				s_size = "small";
			} else if ( _a==3 ) {
				s_size = "normal-sized";
			} else if ( _a==4 ) {
				s_size = "bulky";
			} else if ( _a==5 ) {
				s_size = "huge";
			}
			pronoun = null;

			if ( this.gender == GlobalVars.PLURAL ) {
				pronoun = "They are";
			} else {
				pronoun = "It is";
			}
			GlobalFuncs.to_chat( user, new Txt().icon( this ).str( " That's " ).a( this ).item().str( ". " ).item( pronoun ).str( " a " ).item( s_size ).str( " item." ).ToString() );

			if ( Lang13.Bool( this.desc ) ) {
				GlobalFuncs.to_chat( user, this.desc );
			}
			return null;
		}

		// Function from file: mimic.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			return false;
		}

	}

}
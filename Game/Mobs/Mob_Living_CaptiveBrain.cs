// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_CaptiveBrain : Mob_Living {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "host brain";
		}

		public Mob_Living_CaptiveBrain ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: vgstation13.dme
		public override void emote( dynamic act = null, int? type = null, dynamic message = null, bool? auto = null ) {
			return;
		}

		// Function from file: captive_brain.dm
		public override bool say( dynamic message = null, string speaking = null, Ent_Dynamic radio = null ) {
			Ent_Static B = null;
			dynamic T = null;
			dynamic M = null;
			string controls = null;
			string rendered = null;

			
			if ( this.client != null ) {
				
				if ( ( this.client.prefs.muted & 1 ) != 0 ) {
					GlobalFuncs.to_chat( this, "<span class='warning'>You cannot speak in IC (muted).</span>" );
					return false;
				}

				if ( this.client.handle_spam_prevention( message, 1 ) ) {
					return false;
				}
			}

			if ( this.loc is Mob_Living_SimpleAnimal_Borer ) {
				B = this.loc;
				GlobalFuncs.to_chat( this, "You whisper silently, \"" + message + "\"" );
				GlobalFuncs.to_chat( ((dynamic)B).host, "The captive mind of " + this + " whispers, \"" + message + "\"" );
				T = GlobalFuncs.get_turf( this );
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]SAY: " + ( "" + GlobalFuncs.key_name( this ) + " (@" + T.x + "," + T.y + "," + T.z + ") -> " + GlobalFuncs.key_name( B ) + " Host->Borer Speech: " + message ) ) );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list )) {
					M = _a;
					

					if ( M is Mob_NewPlayer ) {
						continue;
					}

					if ( M is Mob_Dead_Observer && Lang13.Bool( M.client ) && Lang13.Bool( M.client.prefs.toggles & 64 ) ) {
						controls = new Txt( "<a href='byond://?src=" ).Ref( M ).str( ";follow2=" ).Ref( M ).str( ";follow=" ).Ref( this ).str( "'>Follow</a>" ).ToString();

						if ( Lang13.Bool( M.client.holder ) ) {
							controls += new Txt( " | <A HREF='?_src_=holder;adminmoreinfo=" ).Ref( this ).str( "'>?</A>" ).ToString();
						}
						rendered = "<span class='thoughtspeech'>Thought-speech, <b>" + this.name + "</b> (" + controls + ") -> <b>" + ((dynamic)B).truename + ":</b> " + message + "</span>";
						M.show_message( rendered, 2 );
					}
				}
			}
			return false;
		}

	}

}
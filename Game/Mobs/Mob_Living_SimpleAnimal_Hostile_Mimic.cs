// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Mimic : Mob_Living_SimpleAnimal_Hostile {

		public dynamic copied_object = typeof(Obj_Structure_Closet_Crate);
		public int angry = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "crate";
			this.meat_type = typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Mimic);
			this.response_help = "touches";
			this.response_disarm = "pushes";
			this.speed = -1;
			this.maxHealth = 250;
			this.health = 250;
			this.harm_intent_damage = 5;
			this.melee_damage_lower = 8;
			this.melee_damage_upper = 12;
			this.attack_sound = "sound/weapons/bite.ogg";
			this.min_oxy = 0;
			this.max_tox = false;
			this.max_co2 = 0;
			this.minbodytemp = 0;
			this.faction = "mimic";
			this.move_to_delay = 8;
			this.icon = "icons/obj/storage.dmi";
			this.icon_state = "crate";
		}

		// Function from file: mimic.dm
		public Mob_Living_SimpleAnimal_Hostile_Mimic ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.apply_disguise();
			return;
		}

		// Function from file: mimic.dm
		public void apply_disguise(  ) {
			
			if ( this.copied_object is Type ) {
				this.appearance = Lang13.Initial( this.copied_object, "appearance" );
			}
			return;
		}

		// Function from file: mimic.dm
		public virtual bool environment_disguise( ByTable L = null ) {
			L = L ?? GlobalVars.crate_mimic_disguises;

			string our_area_type = null;
			dynamic A = null;
			ByTable possible_disguises = null;

			
			if ( !( L != null ) ) {
				return false;
			}
			our_area_type = "default";
			A = GlobalFuncs.get_area( this );

			if ( Lang13.Bool( A.fire ) ) {
				our_area_type = "emergency";
			} else if ( A.type == typeof(Zone) ) {
				our_area_type = "space";
			} else if ( A is Zone_Engine || A is Zone_Engineering || A is Zone_Construction ) {
				our_area_type = "engineering";
			} else if ( A is Zone_Medical_Medbay ) {
				our_area_type = "medbay";
			} else if ( A is Zone_CrewQuarters_Bar ) {
				our_area_type = "bar";
			} else if ( A is Zone_Security ) {
				our_area_type = "security";
			} else if ( A is Zone_Chapel ) {
				our_area_type = "chapel";
			} else if ( A is Zone_Library ) {
				our_area_type = "library";
			} else if ( A is Zone_Hydroponics ) {
				our_area_type = "botany";
			} else if ( A is Zone_CrewQuarters_Kitchen ) {
				our_area_type = "kitchen";
			} else if ( A is Zone_Storage_NukeStorage ) {
				our_area_type = "vault";
			}

			if ( Convert.ToDouble( this.health ) < Convert.ToDouble( this.maxHealth * 0.75 ) ) {
				
				if ( Lang13.Bool( L["lowhealth"] ) ) {
					our_area_type = "lowhealth";
				}
			}
			possible_disguises = L[our_area_type];

			if ( !( possible_disguises != null ) || !( possible_disguises.len != 0 ) ) {
				possible_disguises = L["default"];

				if ( !( possible_disguises != null ) || !( possible_disguises.len != 0 ) ) {
					return false;
				}
			}
			this.copied_object = Rand13.PickFromTable( possible_disguises );

			if ( !Lang13.Bool( Lang13.Initial( this.copied_object, "icon_state" ) ) || !Lang13.Bool( Lang13.Initial( this.copied_object, "icon" ) ) ) {
				this.copied_object = Lang13.Initial( this, "copied_object" );
			}
			return false;
		}

		// Function from file: mimic.dm
		public override void show_inv( dynamic user = null ) {
			return;
		}

		// Function from file: mimic.dm
		public override void Die( bool? gore = null ) {
			base.Die( gore );
			this.visible_message( "<span class='warning'><b>" + this + "</b> stops moving!</span>" );
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Tree : Mob_Living_SimpleAnimal_Hostile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -16;
			this.icon_living = "pine_1";
			this.icon_dead = "pine_1";
			this.icon_gib = "pine_1";
			this.size = 5;
			this.turns_per_move = 5;
			this.response_help = "brushes";
			this.response_disarm = "pushes";
			this.speed = -1;
			this.maxHealth = 250;
			this.health = 250;
			this.harm_intent_damage = 5;
			this.melee_damage_lower = 8;
			this.melee_damage_upper = 12;
			this.attacktext = "bites";
			this.attack_sound = "sound/weapons/bite.ogg";
			this.min_oxy = 0;
			this.max_tox = false;
			this.max_co2 = 0;
			this.minbodytemp = 0;
			this.faction = "forest";
			this.icon = "icons/obj/flora/pinetrees.dmi";
			this.icon_state = "pine_1";
		}

		public Mob_Living_SimpleAnimal_Hostile_Tree ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tree.dm
		public override void Die( bool? gore = null ) {
			base.Die( gore );
			this.visible_message( "<span class='warning'><b>" + this + "</b> is hacked into pieces!</span>" );
			new Obj_Item_Stack_Sheet_Wood( this.loc );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: tree.dm
		public override dynamic AttackingTarget(  ) {
			dynamic _default = null;

			Mob L = null;

			_default = base.AttackingTarget();
			L = _default;

			if ( L is Mob_Living ) {
				
				if ( Rand13.PercentChance( 15 ) ) {
					L.Weaken( 3 );
					L.visible_message( new Txt( "<span class='danger'>" ).the( this ).item().str( " knocks down " ).the( L ).item().str( "!</span>" ).ToString() );
				}
			}
			return _default;
		}

		// Function from file: tree.dm
		public override dynamic FindTarget(  ) {
			dynamic _default = null;

			_default = base.FindTarget();

			if ( Lang13.Bool( _default ) ) {
				this.emote( "growls at " + _default );
			}
			return _default;
		}

	}

}
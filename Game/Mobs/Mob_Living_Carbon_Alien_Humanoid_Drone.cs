// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_Carbon_Alien_Humanoid_Drone : Mob_Living_Carbon_Alien_Humanoid {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.caste = "d";
			this.plasma_rate = 15;
			this.icon_state = "aliend_s";
		}

		// Function from file: drone.dm
		public Mob_Living_Carbon_Alien_Humanoid_Drone ( dynamic loc = null ) : base( (object)(loc) ) {
			Reagents R = null;

			R = new Reagents( 100 );
			this.reagents = R;
			R.my_atom = this;

			if ( this.name == "alien drone" ) {
				this.name = "alien drone (" + Rand13.Int( 1, 1000 ) + ")";
			}
			this.real_name = this.name;
			this.verbs.Add( typeof(Mob_Living_Carbon_Alien_Humanoid).GetMethod( "resin" ), typeof(Mob_Living_Carbon_Alien_Humanoid).GetMethod( "corrosive_acid" ) );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.add_language( "Xenomorph" );
			this.default_language = GlobalVars.all_languages["Xenomorph"];
			return;
		}

		// Function from file: drone.dm
		public override dynamic movement_delay(  ) {
			return this.move_delay_add + Convert.ToDouble( GlobalVars.config.alien_delay ) + 2;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.special_role = "Drone";
			return;
		}

		// Function from file: drone.dm
		[Verb]
		[VerbInfo( name: "Evolve (500)", desc: "Produce an interal egg sac capable of spawning children. Only one queen can exist at a time.", group: "Alien" )]
		public void evolve(  ) {
			bool no_queen = false;
			Mob_Living_Carbon_Alien_Humanoid_Queen Q = null;
			Mob_Living_Carbon_Alien_Humanoid_Queen new_xeno = null;

			
			if ( this.powerc( 500 ) ) {
				no_queen = true;

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Carbon_Alien_Humanoid_Queen) )) {
					Q = _a;
					

					if ( !Lang13.Bool( Q.key ) && Q.has_brain() ) {
						continue;
					}
					no_queen = false;
				}

				if ( no_queen ) {
					this.adjustToxLoss( -500 );
					this.visible_message( "<span class='alien'>" + this + " begins to violently twist and contort!</span>", "<span class='alien'>You begin to evolve, stand still for a few moments</span>" );

					if ( GlobalFuncs.do_after( this, this, 50 ) ) {
						new_xeno = new Mob_Living_Carbon_Alien_Humanoid_Queen( this.loc );
						this.mind.transfer_to( new_xeno );
						this.transferImplantsTo( new_xeno );
						this.transferBorers( new_xeno );
						GlobalFuncs.qdel( this );
					}
				} else {
					GlobalFuncs.to_chat( this, "<span class='notice'>We already have an alive queen.</span>" );
				}
			}
			return;
		}

	}

}
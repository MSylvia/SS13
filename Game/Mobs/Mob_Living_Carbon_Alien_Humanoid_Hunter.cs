// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_Carbon_Alien_Humanoid_Hunter : Mob_Living_Carbon_Alien_Humanoid {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.caste = "h";
			this.maxHealth = 250;
			this.health = 250;
			this.storedPlasma = 100;
			this.max_plasma = 150;
			this.icon_state = "alienh_s";
		}

		// Function from file: hunter.dm
		public Mob_Living_Carbon_Alien_Humanoid_Hunter ( dynamic loc = null ) : base( (object)(loc) ) {
			Reagents R = null;

			R = new Reagents( 100 );
			this.reagents = R;
			R.my_atom = this;

			if ( this.name == "alien hunter" ) {
				this.name = "alien hunter (" + Rand13.Int( 1, 1000 ) + ")";
			}
			this.real_name = this.name;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.add_language( "Xenomorph" );
			this.default_language = GlobalVars.all_languages["Xenomorph"];
			return;
		}

		// Function from file: hunter.dm
		public override void handle_environment( GasMixture environment = null ) {
			
			if ( this.m_intent == "run" || this.resting != 0 ) {
				base.handle_environment( environment );
			} else {
				this.adjustToxLoss( -this.heal_rate );
			}
			return;
		}

		// Function from file: hunter.dm
		public override bool handle_regular_hud_updates(  ) {
			base.handle_regular_hud_updates();

			if ( this.healths != null ) {
				
				if ( this.stat != 2 ) {
					
					dynamic _a = this.health; // Was a switch-case, sorry for the mess.
					if ( 250<=_a&&_a<=Double.PositiveInfinity ) {
						((dynamic)this.healths).icon_state = "health0";
					} else if ( 150<=_a&&_a<=250 ) {
						((dynamic)this.healths).icon_state = "health1";
					} else if ( 100<=_a&&_a<=150 ) {
						((dynamic)this.healths).icon_state = "health2";
					} else if ( 50<=_a&&_a<=100 ) {
						((dynamic)this.healths).icon_state = "health3";
					} else if ( 0<=_a&&_a<=50 ) {
						((dynamic)this.healths).icon_state = "health4";
					} else {
						((dynamic)this.healths).icon_state = "health5";
					}
				} else {
					((dynamic)this.healths).icon_state = "health6";
				}
			}
			return false;
		}

		// Function from file: hunter.dm
		public override dynamic movement_delay(  ) {
			return this.move_delay_add + Convert.ToDouble( GlobalVars.config.alien_delay ) + -2;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.special_role = "Hunter";
			return;
		}

	}

}
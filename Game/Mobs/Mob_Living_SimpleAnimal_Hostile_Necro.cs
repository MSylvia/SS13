// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Necro : Mob_Living_SimpleAnimal_Hostile {

		public dynamic creator = null;

		// Function from file: necro.dm
		public Mob_Living_SimpleAnimal_Hostile_Necro ( dynamic loc = null, dynamic Owner = null, Mind Controller = null ) : base( (object)(loc) ) {
			string _ref = null;
			dynamic necromancers = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( Lang13.Bool( Owner ) && Controller != null ) {
				this.faction = new Txt().Ref( Owner ).ToString();

				if ( Controller != null ) {
					this.mind = Controller;
					this.ckey = String13.CKey( this.mind.key );
					GlobalFuncs.to_chat( this, "<big><span class='warning'>You have been risen from the dead by your new master, " + Owner + ". Do his bidding so long as he lives, for when he falls so do you.</span></big>" );
				}
				_ref = new Txt().Ref( Owner.mind ).ToString();
				Interface13.Stat( null, GlobalVars.ticker.mode.necromancer.Contains( Owner.mind ) );

				if ( !( Controller != null ) ) {
					GlobalVars.ticker.mode.necromancer[_ref] = new ByTable();
				}
				necromancers = GlobalVars.ticker.mode.necromancer[_ref];
				necromancers.Add( Controller );
				GlobalVars.ticker.mode.necromancer[_ref] = necromancers;
				((GameMode)GlobalVars.ticker.mode).update_necro_icons_added( Owner.mind );
				((GameMode)GlobalVars.ticker.mode).update_necro_icons_added( Controller );
				((GameMode)GlobalVars.ticker.mode).update_all_necro_icons();
				GlobalVars.ticker.mode.risen.Add( Controller );
			}
			this.name += " (" + Rand13.Int( 1, 1000 ) + ")";
			return;
		}

	}

}
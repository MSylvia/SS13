// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Humanoid_Syndicate_Melee : Mob_Living_SimpleAnimal_Hostile_Humanoid_Syndicate {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.melee_damage_lower = 20;
			this.melee_damage_upper = 25;
			this.icon_living = "syndicatemelee";
			this.items_to_drop = new ByTable(new object [] { typeof(Obj_Item_Weapon_Melee_Energy_Sword_Red), typeof(Obj_Item_Weapon_Shield_Energy) });
			this.attacktext = "slashes";
			this.status_flags = 0;
			this.icon_state = "syndicatemelee";
		}

		public Mob_Living_SimpleAnimal_Hostile_Humanoid_Syndicate_Melee ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: syndicate.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( !Lang13.Bool( Proj ) ) {
				return null;
			}

			if ( Rand13.PercentChance( 65 ) ) {
				this.health -= Proj.damage;
			} else {
				this.visible_message( "<span class='danger'>" + this + " blocks " + Proj + " with its shield!</span>" );
			}
			return 0;
		}

		// Function from file: syndicate.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic damage = null;

			((Mob)b).delayNextAttack( 8 );

			if ( Lang13.Bool( a.force ) ) {
				
				if ( Rand13.PercentChance( 80 ) ) {
					damage = a.force;

					if ( a.damtype == "halloss" ) {
						damage = 0;
					}
					this.health -= damage;
					this.visible_message( "<span class='danger'>" + this + " has been attacked with " + a + " by " + b + ". </span>" );
				} else {
					this.visible_message( "<span class='danger'>" + this + " blocks " + a + " with its shield! </span>" );
				}
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>This weapon is ineffective, it does no damage.</span>" );
				this.visible_message( "<span class='warning'>" + b + " gently taps " + this + " with " + a + ". </span>" );
			}
			return null;
		}

	}

}
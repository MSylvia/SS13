// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Viscerator : Mob_Living_SimpleAnimal_Hostile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "viscerator_attack";
			this.pass_flags = 1;
			this.health = 15;
			this.maxHealth = 15;
			this.melee_damage_lower = 15;
			this.melee_damage_upper = 15;
			this.attacktext = "cuts";
			this.attack_sound = "sound/weapons/bladeslice.ogg";
			this.faction = "syndicate";
			this.can_butcher = false;
			this.flying = true;
			this.min_oxy = 0;
			this.max_tox = false;
			this.max_co2 = 0;
			this.minbodytemp = 0;
			this.size = 2;
			this.icon_state = "viscerator_attack";
		}

		public Mob_Living_SimpleAnimal_Hostile_Viscerator ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: viscerator.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( air_group == true || height == 0 ) {
				return true;
			}

			if ( mover is Mob_Living_SimpleAnimal_Hostile_Viscerator ) {
				return true;
			}

			if ( mover is Obj_Item_Projectile ) {
				return Rand13.PercentChance( 66 );
			} else {
				return !this.density;
			}
		}

		// Function from file: viscerator.dm
		public override void Die( bool? gore = null ) {
			base.Die( gore );
			this.visible_message( "<span class='warning'><b>" + this + "</b> is smashed into pieces!</span>" );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: viscerator.dm
		public override bool Life(  ) {
			base.Life();

			if ( this.stat == 0 ) {
				Icon13.Animate( new ByTable().Set( 1, this ).Set( "pixel_x", Rand13.Int( -12, 12 ) ).Set( "pixel_y", Rand13.Int( -12, 12 ) ).Set( "time", 15 ).Set( "easing", 1 ) );
			}
			return false;
		}

	}

}
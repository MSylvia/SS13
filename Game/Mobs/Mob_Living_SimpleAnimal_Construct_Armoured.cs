// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Construct_Armoured : Mob_Living_SimpleAnimal_Construct {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.real_name = "Juggernaut";
			this.icon_living = "behemoth";
			this.maxHealth = 250;
			this.health = 250;
			this.response_harm = "harmlessly punches";
			this.harm_intent_damage = 0;
			this.melee_damage_lower = 30;
			this.melee_damage_upper = 30;
			this.attacktext = "smashes their armoured gauntlet into";
			this.speed = 3;
			this.environment_smash = 2;
			this.attack_sound = "sound/weapons/heavysmash.ogg";
			this.status_flags = 0;
			this.construct_spells = new ByTable(new object [] { typeof(Spell_AoeTurf_Conjure_Forcewall_Lesser) });
			this.icon = "icons/mob/mob.dmi";
			this.icon_state = "behemoth";
		}

		public Mob_Living_SimpleAnimal_Construct_Armoured ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: constructs.dm
		public override bool Life(  ) {
			
			if ( this.timestopped ) {
				return false;
			}
			base.Life();

			if ( this.healths != null ) {
				
				dynamic _a = this.health; // Was a switch-case, sorry for the mess.
				if ( 250<=_a&&_a<=Double.PositiveInfinity ) {
					((dynamic)this.healths).icon_state = "juggernaut_health0";
				} else if ( 208<=_a&&_a<=249 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health1";
				} else if ( 167<=_a&&_a<=207 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health2";
				} else if ( 125<=_a&&_a<=166 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health3";
				} else if ( 84<=_a&&_a<=124 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health4";
				} else if ( 42<=_a&&_a<=83 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health5";
				} else if ( 1<=_a&&_a<=41 ) {
					((dynamic)this.healths).icon_state = "juggernaut_health6";
				} else {
					((dynamic)this.healths).icon_state = "juggernaut_health7";
				}
			}
			return false;
		}

		// Function from file: constructs.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			int reflectchance = 0;
			double new_x = 0;
			double new_y = 0;
			dynamic curloc = null;

			
			if ( Proj is Obj_Item_Projectile_Energy || Proj is Obj_Item_Projectile_Beam ) {
				reflectchance = 80 - Num13.Floor( Convert.ToDouble( Proj.damage / 3 ) );

				if ( Rand13.PercentChance( reflectchance ) ) {
					this.adjustBruteLoss( Proj.damage * 0.5 );
					this.visible_message( "<span class='danger'>The " + Proj.name + " gets reflected by " + this + "'s shell!</span>", "<span class='userdanger'>The " + Proj.name + " gets reflected by " + this + "'s shell!</span>" );

					if ( Lang13.Bool( Proj.starting ) ) {
						new_x = Convert.ToDouble( Proj.starting.x + Rand13.Pick(new object [] { 0, 0, -1, 1, -2, 2, -2, 2, -2, 2, -3, 3, -3, 3 }) );
						new_y = Convert.ToDouble( Proj.starting.y + Rand13.Pick(new object [] { 0, 0, -1, 1, -2, 2, -2, 2, -2, 2, -3, 3, -3, 3 }) );
						curloc = GlobalFuncs.get_turf( this );
						Proj.original = Map13.GetTile( ((int)( new_x )), ((int)( new_y )), Convert.ToInt32( Proj.z ) );
						Proj.starting = curloc;
						Proj.current = curloc;
						Proj.firer = this;
						Proj.yo = new_y - Convert.ToDouble( curloc.y );
						Proj.xo = new_x - Convert.ToDouble( curloc.x );
					}
					return -1;
				}
			}
			return base.bullet_act( (object)(Proj), (object)(def_zone) );
		}

		// Function from file: constructs.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic damage = null;
			dynamic M = null;
			dynamic M2 = null;
			dynamic M3 = null;

			((Mob)b).delayNextAttack( 8 );

			if ( Lang13.Bool( a.force ) ) {
				
				if ( Convert.ToDouble( a.force ) >= 11 ) {
					damage = a.force;

					if ( a.damtype == "halloss" ) {
						damage = 0;
					}
					this.adjustBruteLoss( damage );

					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
						M = _a;
						

						if ( Lang13.Bool( M.client ) && !Lang13.Bool( M.blinded ) ) {
							M.show_message( "<span class='danger'>" + this + " has been attacked with " + a + " by " + b + ". </span>" );
						}
					}
				} else {
					
					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
						M2 = _b;
						

						if ( Lang13.Bool( M2.client ) && !Lang13.Bool( M2.blinded ) ) {
							M2.show_message( "<span class='danger'>" + a + " bounces harmlessly off of " + this + ". </span>" );
						}
					}
				}
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>This weapon is ineffective, it does no damage.</span>" );

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					M3 = _c;
					

					if ( Lang13.Bool( M3.client ) && !Lang13.Bool( M3.blinded ) ) {
						M3.show_message( "<span class='warning'>" + b + " gently taps " + this + " with " + a + ". </span>" );
					}
				}
			}
			return null;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.assigned_role = "Juggernaut";
			this.mind.special_role = "Cultist";
			return;
		}

	}

}
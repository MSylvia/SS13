// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Virtualhearer : Mob {

		public dynamic attached = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.invisibility = 100;
			this.alpha = 0;
			this.anchored = 1;
			this.flags = 128;
			this.status_flags = 4096;
			this.ignoreinvert = 1;
			this.see_in_dark = 8;
		}

		// Function from file: virtualhearer.dm
		public Mob_Virtualhearer ( dynamic attachedto = null ) : base( (object)(attachedto) ) {
			this.AddToProfiler();
			GlobalVars.virtualhearers.Add( this );
			this.loc = GlobalFuncs.get_turf( attachedto );
			this.attached = attachedto;

			if ( GlobalFuncs.is_type_in_list( attachedto, GlobalVars.stationary_hearers ) ) {
				GlobalVars.virtualhearers.Remove( this );
			}
			return;
		}

		// Function from file: Airflow.dm
		public override bool check_airflow_movable( double n = 0 ) {
			return false;
		}

		// Function from file: virtualhearer.dm
		public override double singularity_act( double? current_size = null, Obj_Machinery_Singularity S = null ) {
			return 0;
		}

		// Function from file: virtualhearer.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			return false;
		}

		// Function from file: virtualhearer.dm
		public override dynamic Hear( dynamic speech = null, dynamic rendered_speech = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { speech, rendered_speech } ).Extend(_);

			
			if ( _args[2] == null ) {
				_args[2] = "";
			}

			if ( Lang13.Bool( this.attached ) ) {
				((Ent_Dynamic)this.attached).Hear( _args );
			} else {
				GlobalFuncs.returnToPool( this );
			}
			return null;
		}

		// Function from file: virtualhearer.dm
		public override dynamic resetVariables( string args = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { args } ).Extend(_);

			return null;
		}

		// Function from file: virtualhearer.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.virtualhearers.Remove( this );
			this.attached = null;
			return null;
		}

	}

}
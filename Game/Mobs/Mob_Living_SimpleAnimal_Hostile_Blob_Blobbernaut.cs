// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Hostile_Blob_Blobbernaut : Mob_Living_SimpleAnimal_Hostile_Blob {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "blobbernaut";
			this.icon_dead = "blobbernaut_dead";
			this.health = 200;
			this.maxHealth = 200;
			this.damage_coeff = new ByTable().Set( "brute", 0.5 ).Set( "fire", 1 ).Set( "tox", 1 ).Set( "clone", 1 ).Set( "stamina", 0 ).Set( "oxy", 1 );
			this.melee_damage_lower = 20;
			this.melee_damage_upper = 20;
			this.attacktext = "slams";
			this.attack_sound = "sound/effects/blobattack.ogg";
			this.verb_say = "gurgles";
			this.verb_ask = "demands";
			this.verb_exclaim = "roars";
			this.verb_yell = "bellows";
			this.force_threshold = 10;
			this.mob_size = 3;
			this.gold_core_spawnable = 1;
			this.icon_state = "blobbernaut";
			this.see_in_dark = 8;
			this.see_invisible = 5;
		}

		// Function from file: blob_mobs.dm
		public Mob_Living_SimpleAnimal_Hostile_Blob_Blobbernaut ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.verbs.Remove( typeof(Mob_Living).GetMethod( "pulled" ) );
			return;
		}

		// Function from file: blob_mobs.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			base.death( gibbed, toast );
			Icon13.Flick( "blobbernaut_death", this );
			return false;
		}

		// Function from file: blob_mobs.dm
		public override void update_icons(  ) {
			base.update_icons();

			if ( this.overmind != null ) {
				this.melee_damage_lower = 4;
				this.melee_damage_upper = 4;
				this.attacktext = this.overmind.blob_reagent_datum.blobbernaut_message;
			} else {
				this.melee_damage_lower = Lang13.Initial( this, "melee_damage_lower" );
				this.melee_damage_upper = Lang13.Initial( this, "melee_damage_upper" );
				this.attacktext = Lang13.Initial( this, "attacktext" );
			}
			return;
		}

		// Function from file: blob_mobs.dm
		public override bool AttackingTarget(  ) {
			dynamic L = null;
			dynamic mob_protection = null;

			
			if ( this.target is Mob_Living ) {
				
				if ( this.overmind != null ) {
					L = this.target;
					mob_protection = ((Mob_Living)L).get_permeability_protection();
					((Reagent)this.overmind.blob_reagent_datum).reaction_mob( L, GlobalVars.VAPOR, 20, false, mob_protection, this.overmind );
				}
			}

			if ( Lang13.Bool( this.target ) ) {
				base.AttackingTarget();
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Parrot_Poly : Mob_Living_SimpleAnimal_Parrot {

		public bool memory_saved = false;
		public int rounds_survived = 0;
		public int longest_survival = 0;
		public int longest_deathstreak = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.speak = new ByTable(new object [] { 
				"Poly wanna cracker!", 
				":e Check the singlo, you chucklefucks!", 
				":e Wire the solars, you lazy bums!", 
				":e WHO TOOK THE DAMN HARDSUITS?", 
				":e OH GOD ITS FREE CALL THE SHUTTLE"
			 });
			this.speak_chance = 3;
		}

		// Function from file: parrot.dm
		public Mob_Living_SimpleAnimal_Parrot_Poly ( dynamic loc = null ) : base( (object)(loc) ) {
			this.ears = new Obj_Item_Device_Radio_Headset_HeadsetEng( this );
			this.available_channels = new ByTable(new object [] { ":e" });
			this.Read_Memory();

			if ( this.rounds_survived == this.longest_survival ) {
				this.speak.Add( Rand13.Pick(new object [] { "..." + this.longest_survival + ".", "The things I've seen!", "I have lived many lives!", "What are you before me?" }) );
				this.desc += " Old as sin, and just as loud. Claimed to be " + this.rounds_survived + ".";
				this.speak_chance = 20;
				this.color = "#EEEE22";
			} else if ( this.rounds_survived == this.longest_deathstreak ) {
				this.speak.Add( Rand13.Pick(new object [] { "What are you waiting for!", "Violence breeds violence!", "Blood! Blood!", "Strike me down if you dare!" }) );
				this.desc += " The squawks of " + -this.rounds_survived + " dead parrots ring out in your ears...";
				this.color = "#BB7777";
			} else if ( this.rounds_survived > 0 ) {
				this.speak.Add( Rand13.Pick(new object [] { "...again?", "No, It was over!", "Let me out!", "It never ends!" }) );
				this.desc += " Over " + this.rounds_survived + " shifts without a \"terrible\" \"accident\"!";
			} else {
				this.speak.Add( Rand13.Pick(new object [] { "...alive?", "This isn't parrot heaven!", "I live, I die, I live again!", "The void fades!" }) );
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: parrot.dm
		public void Write_Memory(  ) {
			SaveFile S = null;

			S = new SaveFile( "data/npc_saves/Poly.sav" );
			S["phrases"] = this.speech_buffer;
			S["roundssurvived"] = this.rounds_survived;
			S["longestsurvival"] = this.longest_survival;
			S["longestdeathstreak"] = this.longest_deathstreak;
			this.memory_saved = true;
			return;
		}

		// Function from file: parrot.dm
		public void Read_Memory(  ) {
			SaveFile S = null;

			S = new SaveFile( "data/npc_saves/Poly.sav" );
			this.speech_buffer = S.ReadItem( "phrases", this.speech_buffer ) ?? new ByTable(); //Condensing the code -Pdan
			this.rounds_survived = S.ReadItem( "roundssurvived", this.rounds_survived ) ?? 0; //If it's not defined, make it 0. -Pdan
			this.longest_survival = S.ReadItem( "longestsurvival", this.longest_survival ) ?? 0; //If it's not defined, make it 0. -Pdan
			this.longest_deathstreak = S.ReadItem( "longestdeathstreak", this.longest_deathstreak ) ?? 0; //If it's not defined, make it 0. -Pdan

			/*if ( this.speech_buffer == null ) {
				this.speech_buffer = new ByTable();
			}*/ //Put this up in line 70. -Pdan
			return;
		}

		// Function from file: parrot.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			bool go_ghost = false;
			Mob_Living_SimpleAnimal_Parrot_Poly_Ghost G = null;

			
			if ( !this.memory_saved ) {
				go_ghost = false;

				if ( this.rounds_survived == this.longest_survival || this.rounds_survived == this.longest_deathstreak ) {
					go_ghost = true;
				}
				this.rounds_survived = Num13.MinInt( --this.rounds_survived, 0 );

				if ( this.rounds_survived < this.longest_deathstreak ) {
					this.longest_deathstreak = this.rounds_survived;
				}
				this.Write_Memory();

				if ( go_ghost ) {
					G = new Mob_Living_SimpleAnimal_Parrot_Poly_Ghost( this.loc );

					if ( this.mind != null ) {
						this.mind.transfer_to( G );
					} else {
						G.key = this.key;
					}
				}
			}
			base.death( gibbed, toast );
			return false;
		}

		// Function from file: parrot.dm
		public override bool Life(  ) {
			
			if ( !( this.stat != 0 ) && GlobalVars.ticker.current_state == 4 && !this.memory_saved ) {
				this.rounds_survived = Num13.MaxInt( ++this.rounds_survived, 1 );

				if ( this.rounds_survived > this.longest_survival ) {
					this.longest_survival = this.rounds_survived;
				}
				this.Write_Memory();
			}
			base.Life();
			return false;
		}

	}

}
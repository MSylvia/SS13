// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_Carbon_Alien_Humanoid_Queen : Mob_Living_Carbon_Alien_Humanoid {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.caste = "q";
			this.maxHealth = 300;
			this.health = 300;
			this.status_flags = 4;
			this.heal_rate = 5;
			this.plasma_rate = 20;
			this.icon_state = "alienq_s";
		}

		// Function from file: queen.dm
		public Mob_Living_Carbon_Alien_Humanoid_Queen ( dynamic loc = null ) : base( (object)(loc) ) {
			Reagents R = null;
			Mob_Living_Carbon_Alien_Humanoid_Queen Q = null;

			R = new Reagents( 100 );
			this.reagents = R;
			R.my_atom = this;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Carbon_Alien_Humanoid_Queen) )) {
				Q = _a;
				

				if ( Q == this ) {
					continue;
				}

				if ( Q.stat == 2 ) {
					continue;
				}

				if ( Q.client != null ) {
					this.name = "alien princess (" + Rand13.Int( 1, 999 ) + ")";
					break;
				}
			}
			this.real_name = this.name;
			this.verbs.Add( typeof(Mob_Living_Carbon_Alien_Humanoid).GetMethod( "corrosive_acid" ), typeof(Mob_Living_Carbon_Alien_Humanoid).GetMethod( "neurotoxin" ), typeof(Mob_Living_Carbon_Alien_Humanoid).GetMethod( "resin" ) );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.add_language( "Xenomorph" );
			this.default_language = GlobalVars.all_languages["Xenomorph"];
			this.verbs.Remove( typeof(Mob_Living_Carbon_Alien).GetMethod( "ventcrawl" ) );
			return;
		}

		// Function from file: queen.dm
		public override bool handle_regular_hud_updates(  ) {
			base.handle_regular_hud_updates();

			if ( this.healths != null ) {
				
				if ( this.stat != 2 ) {
					
					dynamic _a = this.health; // Was a switch-case, sorry for the mess.
					if ( 300<=_a&&_a<=Double.PositiveInfinity ) {
						((dynamic)this.healths).icon_state = "health0";
					} else if ( 200<=_a&&_a<=300 ) {
						((dynamic)this.healths).icon_state = "health1";
					} else if ( 125<=_a&&_a<=200 ) {
						((dynamic)this.healths).icon_state = "health2";
					} else if ( 75<=_a&&_a<=125 ) {
						((dynamic)this.healths).icon_state = "health3";
					} else if ( 0<=_a&&_a<=75 ) {
						((dynamic)this.healths).icon_state = "health4";
					} else {
						((dynamic)this.healths).icon_state = "health5";
					}
				} else {
					((dynamic)this.healths).icon_state = "health6";
				}
			}
			return false;
		}

		// Function from file: queen.dm
		public override dynamic movement_delay(  ) {
			return this.move_delay_add + Convert.ToDouble( GlobalVars.config.alien_delay ) + 5;
		}

		// Function from file: mind.dm
		public override void mind_initialize(  ) {
			base.mind_initialize();
			this.mind.special_role = "Queen";
			return;
		}

		// Function from file: ventcrawl.dm
		public override bool can_ventcrawl(  ) {
			return false;
		}

		// Function from file: queen.dm
		[Verb]
		[VerbInfo( name: "Lay Egg (75)", desc: "Lay an egg to produce huggers to impregnate prey with.", group: "Alien" )]
		public void lay_egg(  ) {
			
			if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Effect_Alien_Egg), GlobalFuncs.get_turf( this ) ) ) ) {
				GlobalFuncs.to_chat( this, "<span class='warning'>There's already an egg here.</span>" );
				return;
			}

			if ( this.powerc( 75, true ) ) {
				this.adjustToxLoss( -75 );
				this.visible_message( "<span class='alien'>" + this + " has laid an egg!</span>" );
				GlobalVars.stat_collection.xeno.eggs_laid++;
				new Obj_Effect_Alien_Egg( this.loc );
			}
			return;
		}

	}

}
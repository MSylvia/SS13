// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Camera_Blob : Mob_Camera {

		public Obj_Effect_Blob_Core blob_core = null;
		public int? blob_points = 0;
		public int max_blob_points = 100;
		public int maxjumprange = 20;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.invisibility = 60;
			this.real_name = "Blob Overmind";
			this.pass_flags = 8;
			this.faction = "blob";
			this.icon = "icons/mob/blob.dmi";
			this.icon_state = "marker";
			this.see_in_dark = 8;
			this.see_invisible = 5;
		}

		// Function from file: overmind.dm
		public Mob_Camera_Blob ( dynamic loc = null ) : base( (object)(loc) ) {
			string new_name = null;

			new_name = "" + Lang13.Initial( this, "name" ) + " (" + Rand13.Int( 1, 999 ) + ")";
			this.name = new_name;
			this.real_name = new_name;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 10, (Task13.Closure)(() => {
				
				if ( this.mind != null ) {
					this.mind.special_role = "Blob";
				}
				return;
			}));
			return;
		}

		// Function from file: vgstation13.dme
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			Dir = Dir ?? 0;

			dynamic B = null;
			int newrange = 0;

			B = Lang13.FindIn( typeof(Obj_Effect_Blob), Map13.FetchInRange( NewLoc, "3x3" ) );

			if ( Lang13.Bool( B ) ) {
				this.loc = NewLoc;
			} else {
				B = Lang13.FindIn( typeof(Obj_Effect_Blob), Map13.FetchInRange( this.loc, "3x3" ) );
			}

			if ( !Lang13.Bool( B ) ) {
				newrange = 3;

				while (true) {
					newrange++;
					B = Lang13.FindIn( typeof(Obj_Effect_Blob), Map13.FetchInRange( this.loc, "" + newrange + "x" + newrange ) );

					if ( Lang13.Bool( B ) ) {
						this.loc = B.loc;
						break;
					}

					if ( newrange > this.maxjumprange ) {
						break;
					}
				}

				if ( this.on_moved is _Event ) {
					this.on_moved.Invoke( new ByTable().Set( "loc", NewLoc ) );
				}
				return false;
			}

			if ( this.on_moved is _Event ) {
				this.on_moved.Invoke( new ByTable().Set( "loc", NewLoc ) );
			}
			return false;
		}

		// Function from file: overmind.dm
		public override dynamic Stat(  ) {
			base.Stat();

			if ( Interface13.IsStatPanelActive( "Blob Status" ) ) {
				
				if ( this.blob_core != null ) {
					Interface13.Stat( null, "Core Health: " + this.blob_core.health );
				}
				Interface13.Stat( null, "Power Stored: " + this.blob_points + "/" + this.max_blob_points );
				Interface13.Stat( null, "Blob Total Size: " + GlobalVars.blobs.len );
				Interface13.Stat( null, "Total Nodes: " + GlobalVars.blob_nodes.len );
				Interface13.Stat( null, "Total Overminds: " + GlobalVars.blob_cores.len );
			}
			return null;
		}

		// Function from file: overmind.dm
		public override bool blob_act( dynamic severity = null ) {
			return false;
		}

		// Function from file: overmind.dm
		public override void emote( dynamic act = null, int? type = null, dynamic message = null, bool? auto = null ) {
			type = type ?? 1;

			return;
		}

		// Function from file: overmind.dm
		public override bool say( dynamic message = null, string speaking = null, Ent_Dynamic radio = null ) {
			
			if ( !Lang13.Bool( message ) ) {
				return false;
			}

			if ( this.client != null ) {
				
				if ( ( this.client.prefs.muted & 1 ) != 0 ) {
					GlobalFuncs.to_chat( this, "You cannot send IC messages (muted)." );
					return false;
				}

				if ( this.client.handle_spam_prevention( message, 1 ) ) {
					return false;
				}
			}

			if ( Lang13.Bool( this.stat ) ) {
				return false;
			}
			this.blob_talk( message );
			return false;
		}

		// Function from file: powers.dm
		public void rally_spores( dynamic T = null ) {
			ByTable surrounding_turfs = null;
			Mob_Living_SimpleAnimal_Hostile_Blobspore BS = null;

			
			if ( !this.can_buy( 5 ) ) {
				return;
			}
			GlobalFuncs.to_chat( this, "You rally your spores." );
			surrounding_turfs = Map13.FetchInBlock( Map13.GetTile( Convert.ToInt32( T.x - 1 ), Convert.ToInt32( T.y - 1 ), Convert.ToInt32( T.z ) ), Map13.GetTile( Convert.ToInt32( T.x + 1 ), Convert.ToInt32( T.y + 1 ), Convert.ToInt32( T.z ) ) );

			if ( !( surrounding_turfs.len != 0 ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_SimpleAnimal_Hostile_Blobspore) )) {
				BS = _a;
				

				if ( BS.loc is Tile && Map13.GetDistance( BS, T ) <= 35 ) {
					BS.LoseTarget();
					BS.Goto( Rand13.PickFromTable( surrounding_turfs ), BS.move_to_delay );
				}
			}
			return;
		}

		// Function from file: powers.dm
		public void expand_blob( dynamic T = null ) {
			dynamic B = null;
			dynamic OB = null;

			
			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "There is a blob here!" );
				return;
			}
			OB = Lang13.FindIn( typeof(Obj_Effect_Blob), GlobalFuncs.circlerange( T, 1 ) );

			if ( !Lang13.Bool( OB ) ) {
				GlobalFuncs.to_chat( this, "There is no blob adjacent to you." );
				return;
			}

			if ( !this.can_buy( 5 ) ) {
				return;
			}
			((Obj_Effect_Blob)OB).expand( T, false );
			return;
		}

		// Function from file: powers.dm
		[VerbInfo( name: "Create Core Blob (100)", desc: "Create another Core Blob to aid in the station takeover", group: "Blob" )]
		public void create_core(  ) {
			dynamic T = null;
			dynamic B = null;
			Obj_Effect_Blob_Core blob = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "There is no blob here!" );
				return;
			}

			if ( !( B is Obj_Effect_Blob_Normal ) ) {
				GlobalFuncs.to_chat( this, "Unable to use this blob, find a normal one." );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( null, 15 ), typeof(Obj_Effect_Blob_Core) )) {
				blob = _a;
				
				GlobalFuncs.to_chat( this, "There is another core blob nearby, move more than 15 tiles away from it!" );
				return;
			}

			if ( !this.can_buy( 100 ) ) {
				return;
			}
			((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Core), this );
			return;
		}

		// Function from file: powers.dm
		public void create_shield( dynamic T = null ) {
			dynamic B = null;

			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "There is no blob here!" );
				return;
			}

			if ( !( B is Obj_Effect_Blob_Normal ) ) {
				GlobalFuncs.to_chat( this, "Unable to use this blob, find a normal one." );
				return;
			}

			if ( !this.can_buy( 10 ) ) {
				return;
			}
			((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Shield) );
			return;
		}

		// Function from file: powers.dm
		public bool can_buy( int? cost = null ) {
			cost = cost ?? 15;

			
			if ( ( this.blob_points ??0) < ( cost ??0) ) {
				GlobalFuncs.to_chat( this, "<span class='warning'>You cannot afford this.</span>" );
				return false;
			}
			this.add_points( -( cost ??0) );
			return true;
		}

		// Function from file: overmind.dm
		public void blob_talk( dynamic message = null ) {
			dynamic T = null;
			string message_a = null;
			string rendered = null;
			Mob_Camera_Blob S = null;
			dynamic M = null;

			T = GlobalFuncs.get_turf( this );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]SAY: " + ( "" + GlobalFuncs.key_name( this ) + " (@" + T.x + "," + T.y + "," + T.z + ") Blob Hivemind: " + message ) ) );
			message = GlobalFuncs.trim( String13.SubStr( GlobalFuncs.sanitize( message ), 1, 1024 ) );

			if ( !Lang13.Bool( message ) ) {
				return;
			}
			message_a = this.say_quote( "\"" + String13.HtmlEncode( message ) + "\"" );
			rendered = "<font color=\"#EE4000\"><i><span class='game say'>Blob Telepathy, <span class='name'>" + this.name + "</span> <span class='message'>" + message_a + "</span></span></i></font>";

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Camera_Blob) )) {
				S = _a;
				

				if ( S is Mob_Camera_Blob ) {
					S.show_message( rendered, 2 );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.dead_mob_list )) {
				M = _b;
				

				if ( !( M is Mob_NewPlayer ) && !( M is Mob_Living_Carbon_Brain ) ) {
					rendered = new Txt( "<font color=\"#EE4000\"><i><span class='game say'>Blob Telepathy, <span class='name'>" ).item( this.name ).str( "</span> <a href='byond://?src=" ).Ref( M ).str( ";follow2=" ).Ref( M ).str( ";follow=" ).Ref( this ).str( "'>(Follow)</a> <span class='message'>" ).item( message_a ).str( "</span></span></i></font>" ).ToString();
					M.show_message( rendered, 2 );
				}
			}
			return;
		}

		// Function from file: overmind.dm
		public void add_points( int? points = null ) {
			
			if ( points != 0 ) {
				this.blob_points = ( ( this.blob_points ??0) + ( points ??0) <= 0 ? 0 : ( ( this.blob_points ??0) + ( points ??0) >= this.max_blob_points ? this.max_blob_points : ( this.blob_points ??0) + ( points ??0) ) );
			}

			if ( this.hud_used != null ) {
				((dynamic)this.hud_used.blobpwrdisplay).maptext = "<div align='center' valign='middle' style='position:relative; top:0px; left:6px'> <font color='#82ed00'>" + this.blob_points + "</font></div>";
			}
			return;
		}

		// Function from file: overmind.dm
		public void update_health(  ) {
			
			if ( this.blob_core != null ) {
				((dynamic)this.hud_used.blobhealthdisplay).maptext = "<div align='center' valign='middle' style='position:relative; top:0px; left:6px'> <font color='#e36600'>" + this.blob_core.health + "</font></div>";
			}
			return;
		}

		// Function from file: overmind.dm
		public override dynamic Login(  ) {
			base.Login();
			this.mind_initialize();
			this.mind.active = true;
			GlobalFuncs.to_chat( this, "<span class='blob'>You are the overmind!</span>" );
			GlobalFuncs.to_chat( this, "You are the overmind and can control the blob! You can expand, which will attack people, and place special blob types." );
			GlobalFuncs.to_chat( this, "The location of your thoughts (eye), nodes, and core can power your buildings and expand the blob much further, use them well!" );
			GlobalFuncs.to_chat( this, "<b>Normal Blobs</b> will expand your reach and can be upgraded into other special blobs that perform certain functions." );
			GlobalFuncs.to_chat( this, "<b>Shield Blob</b> is a strong and expensive blob which can take more damage. It is fireproof and can block air, use this to protect yourself from station fires. It can also begin to repair itself when powered." );
			GlobalFuncs.to_chat( this, "<b>Resource Blob</b> is a blob which will collect more resources for you, try to build these earlier to get a strong income. It will benefit from being near your core or multiple nodes, by having an increased resource rate; put it alone and it won't create resources at all." );
			GlobalFuncs.to_chat( this, "<b>Node Blob</b> is a blob which will grow, like the core. It will not provide income, but will power all the other special nodes and expand your blob by itself." );
			GlobalFuncs.to_chat( this, "<b>Factory Blob</b> is a blob which will spawn blob spores which will attack nearby food. You must make sure it is powered to operate properly!" );
			GlobalFuncs.to_chat( this, "<b>Shortcuts:</b> CTRL Click = Expand Blob, Middle Mouse Click = Rally Spores, Alt Click = Create Shield, Double Click: Teleport to Blob" );
			this.update_health();
			return null;
		}

		// Function from file: overmind.dm
		public override void DblClickOn( Ent_Static A = null, string _params = null ) {
			dynamic T = null;
			dynamic B = null;

			T = GlobalFuncs.get_turf( A );
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				return;
			} else {
				Task13.User.loc = T;
			}
			return;
		}

		// Function from file: overmind.dm
		public override bool AltClickOn( Ent_Static A = null ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( A );

			if ( Lang13.Bool( T ) ) {
				this.create_shield( T );
			}
			return false;
		}

		// Function from file: overmind.dm
		public override void MiddleClickOn( Ent_Static A = null ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( A );

			if ( Lang13.Bool( T ) ) {
				this.rally_spores( T );
			}
			return;
		}

		// Function from file: overmind.dm
		public override void CtrlClickOn( Ent_Static A = null ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( A );

			if ( Lang13.Bool( T ) ) {
				this.expand_blob( T );
			}
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Psionic Message (15)", desc: "Give a psionic message to all creatures on and around the station.", group: "Blob" )]
		[VerbArg( 1, InputType.Str )]
		public void telepathy( dynamic message = null ) {
			GlobalFuncs.to_chat( typeof(Game13), "<span class='warning'>Your vision becomes cloudy, and your mind becomes clear.</span>" );
			Task13.Schedule( 5, (Task13.Closure)(() => {
				GlobalFuncs.to_chat( typeof(Game13), "<span class='blob'>" + message + "</span>" );
				return;
			}));
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Rally Spores (5)", desc: "Rally the spores to move to your location.", group: "Blob" )]
		public void rally_spores_power(  ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );
			this.rally_spores( T );
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Expand/Attack Blob (5)", desc: "Attempts to create a new blob in this tile. If the tile isn't clear we will attack it, which might clear it.", group: "Blob" )]
		public void expand_blob_power(  ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );
			this.expand_blob( T );
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Remove Blob", desc: "Removes a blob.", group: "Blob" )]
		public void revert(  ) {
			dynamic T = null;
			dynamic B = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "You must be on a blob!" );
				return;
			}

			if ( B is Obj_Effect_Blob_Core ) {
				GlobalFuncs.to_chat( this, "Unable to remove this blob." );
				return;
			}
			((Obj_Effect_Blob)B).Delete();
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Create Factory Blob (60)", desc: "Create a Spore producing blob.", group: "Blob" )]
		public void create_factory(  ) {
			dynamic T = null;
			dynamic B = null;
			Obj_Effect_Blob_Factory blob = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "You must be on a blob!" );
				return;
			}

			if ( !( B is Obj_Effect_Blob_Normal ) ) {
				GlobalFuncs.to_chat( this, "Unable to use this blob, find a normal one." );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T, 7 ), typeof(Obj_Effect_Blob_Factory) )) {
				blob = _a;
				
				GlobalFuncs.to_chat( this, "There is a factory blob nearby, move more than 7 tiles away from it!" );
				return;
			}

			if ( !this.can_buy( 60 ) ) {
				return;
			}
			((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Factory) );
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Create Node Blob (60)", desc: "Create a Node.", group: "Blob" )]
		public void create_node(  ) {
			dynamic T = null;
			dynamic B = null;
			Obj_Effect_Blob_Node blob = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "There is no blob here!" );
				return;
			}

			if ( !( B is Obj_Effect_Blob_Normal ) ) {
				GlobalFuncs.to_chat( this, "Unable to use this blob, find a normal one." );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T, 5 ), typeof(Obj_Effect_Blob_Node) )) {
				blob = _a;
				
				GlobalFuncs.to_chat( this, "There is another node nearby, move more than 5 tiles away from it!" );
				return;
			}

			if ( !this.can_buy( 60 ) ) {
				return;
			}
			((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Node) );
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Create Resource Blob (40)", desc: "Create a resource tower which will generate points for you.", group: "Blob" )]
		public void create_resource(  ) {
			dynamic T = null;
			dynamic B = null;
			Obj_Effect_Blob_Resource blob = null;
			dynamic R = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return;
			}
			B = Lang13.FindIn( typeof(Obj_Effect_Blob), T );

			if ( !Lang13.Bool( B ) ) {
				GlobalFuncs.to_chat( this, "There is no blob here!" );
				return;
			}

			if ( !( B is Obj_Effect_Blob_Normal ) ) {
				GlobalFuncs.to_chat( this, "Unable to use this blob, find a normal one." );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T, 4 ), typeof(Obj_Effect_Blob_Resource) )) {
				blob = _a;
				
				GlobalFuncs.to_chat( this, "There is a resource blob nearby, move more than 4 tiles away from it!" );
				return;
			}

			if ( !this.can_buy( 40 ) ) {
				return;
			}
			((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Resource) );
			R = Lang13.FindIn( typeof(Obj_Effect_Blob_Resource), T );

			if ( Lang13.Bool( R ) ) {
				R.overmind = this;
			}
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Create Shield Blob (10)", desc: "Create a shield blob.", group: "Blob" )]
		public void create_shield_power(  ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );
			this.create_shield( T );
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Jump to Node", desc: "Transport back to a selected node.", group: "Blob" )]
		public void jump_to_node(  ) {
			ByTable nodes = null;
			int? i = null;
			dynamic node_name = null;
			Ent_Static chosen_node = null;

			
			if ( GlobalVars.blob_nodes.len != 0 ) {
				nodes = new ByTable();
				i = null;
				i = 1;

				while (( i ??0) <= GlobalVars.blob_nodes.len) {
					nodes["Blob Node #" + i] = GlobalVars.blob_nodes[i];
					i++;
				}
				node_name = Interface13.Input( this, "Choose a node to jump to.", "Node Jump", null, nodes, InputType.Any );
				chosen_node = nodes[node_name];

				if ( chosen_node != null ) {
					this.loc = chosen_node.loc;
				}
			}
			return;
		}

		// Function from file: powers.dm
		[Verb]
		[VerbInfo( name: "Jump to Core", desc: "Transport back to your core.", group: "Blob" )]
		public void transport_core(  ) {
			
			if ( this.blob_core != null ) {
				this.loc = this.blob_core.loc;
			}
			return;
		}

	}

}
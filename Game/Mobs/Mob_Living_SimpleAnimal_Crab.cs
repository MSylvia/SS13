// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Crab : Mob_Living_SimpleAnimal {

		public Ent_Static inventory_head = null;
		public Ent_Static inventory_mask = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "crab";
			this.icon_dead = "crab_dead";
			this.speak_emote = new ByTable(new object [] { "clicks" });
			this.emote_hear = new ByTable(new object [] { "clicks" });
			this.emote_see = new ByTable(new object [] { "clacks" });
			this.speak_chance = 1;
			this.turns_per_move = 5;
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "stomps";
			this.stop_automated_movement = true;
			this.friendly = "pinches";
			this.size = 1;
			this.icon_state = "crab";
		}

		public Mob_Living_SimpleAnimal_Crab ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: crab.dm
		public void GetMad(  ) {
			this.name = "MEGAMADCRAB";
			this.real_name = "MEGAMADCRAB";
			this.desc = "OH NO YOU DUN IT NOW.";
			this.icon = "icons/mob/mob.dmi";
			this.icon_state = "madcrab";
			this.icon_living = "madcrab";
			this.icon_dead = "madcrab_dead";
			this.speak_emote = new ByTable(new object [] { "clicks" });
			this.emote_hear = new ByTable(new object [] { "clicks with fury", "clicks angrily" });
			this.emote_see = new ByTable(new object [] { "clacks" });
			this.speak_chance = 1;
			this.turns_per_move = 15;
			this.maxHealth = 100;
			this.health = 100;
			this.melee_damage_lower = 3;
			this.melee_damage_upper = 10;

			if ( this.inventory_head != null ) {
				this.inventory_head.loc = this.loc;
				this.inventory_head = null;
			}

			if ( this.inventory_mask != null ) {
				this.inventory_mask.loc = this.loc;
				this.inventory_mask = null;
			}
			return;
		}

		// Function from file: crab.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Wirecutters ) {
				
				if ( Rand13.PercentChance( 50 ) ) {
					GlobalFuncs.to_chat( b, "<span class='danger'>This kills the crab.</span>" );
					this.health -= 20;
					this.Die();
				} else {
					this.GetMad();
				}
			} else {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: crab.dm
		public override bool Life(  ) {
			
			if ( this.timestopped ) {
				return false;
			}
			base.Life();

			if ( !Lang13.Bool( this.ckey ) && !Lang13.Bool( this.stat ) ) {
				
				if ( this.loc is Tile && !( this.resting != 0 ) && !Lang13.Bool( this.locked_to ) ) {
					this.turns_since_move++;

					if ( this.turns_since_move >= Convert.ToDouble( this.turns_per_move ) ) {
						this.Move( Map13.GetStep( this, Convert.ToInt32( Rand13.Pick(new object [] { 4, 8 }) ) ) );
						this.turns_since_move = 0;
					}
				}
			}
			this.regenerate_icons();
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Mouse : Mob_Living_SimpleAnimal {

		public dynamic body_color = null;
		public int chew_probability = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "mouse_gray";
			this.icon_dead = "mouse_gray_dead";
			this.speak = new ByTable(new object [] { "Squeek!", "SQUEEK!", "Squeek?" });
			this.speak_emote = new ByTable(new object [] { "squeeks" });
			this.emote_hear = new ByTable(new object [] { "squeeks." });
			this.emote_see = new ByTable(new object [] { "runs in a circle.", "shakes." });
			this.speak_chance = 1;
			this.turns_per_move = 5;
			this.maxHealth = 5;
			this.health = 5;
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab), 1 );
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "splats";
			this.ventcrawler = 2;
			this.pass_flags = 21;
			this.mob_size = 0;
			this.gold_core_spawnable = 2;
			this.icon_state = "mouse_gray";
			this.see_in_dark = 6;
		}

		// Function from file: mouse.dm
		public Mob_Living_SimpleAnimal_Mouse ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( !Lang13.Bool( this.body_color ) ) {
				this.body_color = Rand13.PickFromTable( new ByTable(new object [] { "brown", "gray", "white" }) );
			}
			this.icon_state = "mouse_" + this.body_color;
			this.icon_living = "mouse_" + this.body_color;
			this.icon_dead = "mouse_" + this.body_color + "_dead";
			return;
		}

		// Function from file: mouse.dm
		public override bool handle_automated_action(  ) {
			dynamic F = null;
			dynamic C = null;

			
			if ( Rand13.PercentChance( this.chew_probability ) ) {
				F = GlobalFuncs.get_turf( this );

				if ( F is Tile_Simulated_Floor && !F.intact ) {
					C = Lang13.FindIn( typeof(Obj_Structure_Cable), F );

					if ( Lang13.Bool( C ) && Rand13.PercentChance( 15 ) ) {
						
						if ( Lang13.Bool( C.avail() ) ) {
							this.visible_message( "<span class='warning'>" + this + " chews through the " + C + ". It's toast!</span>" );
							GlobalFuncs.playsound( this, "sound/effects/sparks2.ogg", 100, 1 );
							((Obj)C).Deconstruct();
							this.death( null, true );
						} else {
							((Obj)C).Deconstruct();
							this.visible_message( "<span class='warning'>" + this + " chews through the " + C + ".</span>" );
						}
					}
				}
			}
			return false;
		}

		// Function from file: mouse.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic M = null;

			
			if ( O is Mob_Living_Carbon_Human ) {
				
				if ( !( this.stat != 0 ) ) {
					M = O;
					((dynamic)M).WriteMsg( new Txt( "<span class='notice'>" ).icon( this ).str( " Squeek!</span>" ).ToString() );
					GlobalFuncs.playsound( this, "sound/effects/mousesqueek.ogg", 100, 1 );
				}
			}
			base.Crossed( O, (object)(X) );
			return null;
		}

		// Function from file: mouse.dm
		public override bool death( bool? gibbed = null, bool? toast = null ) {
			Obj_Item_Trash_Deadmouse M = null;

			
			if ( !Lang13.Bool( this.ckey ) ) {
				base.death( true, toast );
				M = new Obj_Item_Trash_Deadmouse( this.loc );
				M.icon_state = this.icon_dead;

				if ( toast == true ) {
					M.color = "#3A3A3A";
					M.desc = "It's toast.";
				}
				GlobalFuncs.qdel( this );
			} else {
				base.death( gibbed, toast );
			}
			return false;
		}

		// Function from file: mouse.dm
		public void splat(  ) {
			this.health = 0;
			this.icon_dead = "mouse_" + this.body_color + "_splat";
			this.death();
			return;
		}

	}

}
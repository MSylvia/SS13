// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Mob_Living_SimpleAnimal_Pet_Cat : Mob_Living_SimpleAnimal_Pet {

		public int turns_since_scan = 0;
		public Mob_Living_SimpleAnimal_Mouse movement_target = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_living = "cat2";
			this.icon_dead = "cat2_dead";
			this.speak = new ByTable(new object [] { "Meow!", "Esp!", "Purr!", "HSSSSS" });
			this.speak_emote = new ByTable(new object [] { "purrs", "meows" });
			this.emote_hear = new ByTable(new object [] { "meows", "mews" });
			this.emote_see = new ByTable(new object [] { "shakes its head", "shivers" });
			this.speak_chance = 1;
			this.turns_per_move = 5;
			this.ventcrawler = 2;
			this.pass_flags = 1;
			this.minbodytemp = 200;
			this.maxbodytemp = 400;
			this.unsuitable_atmos_damage = 1;
			this.species = typeof(Mob_Living_SimpleAnimal_Pet_Cat);
			this.childtype = typeof(Mob_Living_SimpleAnimal_Pet_Cat_Kitten);
			this.butcher_results = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Meat_Slab), 2 );
			this.response_help = "pets";
			this.response_disarm = "gently pushes aside";
			this.response_harm = "kicks";
			this.gold_core_spawnable = 2;
			this.icon_state = "cat2";
			this.see_in_dark = 6;
		}

		public Mob_Living_SimpleAnimal_Pet_Cat ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cat.dm
		public void wuv( int change = 0, dynamic M = null ) {
			
			if ( change != 0 ) {
				
				if ( change > 0 ) {
					
					if ( Lang13.Bool( M ) && this.stat != 2 ) {
						GlobalFuncs.flick_overlay( new Image( "icons/mob/animal.dmi", this, "heart-ani2", 5 ), new ByTable(new object [] { M.client }), 20 );
						this.emote( "me", 1, "purrs!" );
					}
				} else if ( Lang13.Bool( M ) && this.stat != 2 ) {
					this.emote( "me", 1, "hisses!" );
				}
			}
			return;
		}

		// Function from file: cat.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic _default = null;

			_default = base.attack_hand( (object)(a), b, c );

			dynamic _a = a.a_intent; // Was a switch-case, sorry for the mess.
			if ( _a=="help" ) {
				this.wuv( 1, a );
			} else if ( _a=="harm" ) {
				this.wuv( -1, a );
			}
			return _default;
		}

		// Function from file: cat.dm
		public override bool Life(  ) {
			Mob_Living_SimpleAnimal_Mouse M = null;
			Obj_Item_Toy_Cattoy T = null;
			Mob_Living_SimpleAnimal_Mouse snack = null;

			
			if ( this.loc != null && this.loc is Tile ) {
				
				if ( !( this.stat != 0 ) && !( this.resting != 0 ) && !( this.buckled != null ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInView( this, 1 ), typeof(Mob_Living_SimpleAnimal_Mouse) )) {
						M = _a;
						

						if ( !( M.stat != 0 ) && this.Adjacent( M ) ) {
							this.emote( "me", 1, new Txt( "splats " ).the( M ).item().str( "!" ).ToString() );
							M.splat();
							this.movement_target = null;
							this.stop_automated_movement = false;
							break;
						}
					}

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInView( this, 1 ), typeof(Obj_Item_Toy_Cattoy) )) {
						T = _b;
						

						if ( T.cooldown < Game13.time - 400 ) {
							this.emote( "me", 1, new Txt( "bats " ).the( T ).item().str( " around with its paw!" ).ToString() );
							T.cooldown = Game13.time;
						}
					}
				}
			}
			base.Life();
			this.make_babies();

			if ( !( this.stat != 0 ) && !( this.resting != 0 ) && !( this.buckled != null ) ) {
				this.turns_since_scan++;

				if ( this.turns_since_scan > 5 ) {
					Map13.WalkTowards( this, 0, 0, 0 );
					this.turns_since_scan = 0;

					if ( this.movement_target != null && !( this.movement_target.loc is Tile || this.movement_target.loc is Mob_Living_Carbon_Human ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;
					}

					if ( !( this.movement_target != null ) || !Map13.FetchInViewExcludeThis( 3, this ).Contains( this.movement_target.loc ) ) {
						this.movement_target = null;
						this.stop_automated_movement = false;

						foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInViewExcludeThis( 3, this ), typeof(Mob_Living_SimpleAnimal_Mouse) )) {
							snack = _c;
							

							if ( snack.loc is Tile && !( snack.stat != 0 ) ) {
								this.movement_target = snack;
								break;
							}
						}
					}

					if ( this.movement_target != null ) {
						this.stop_automated_movement = true;
						Map13.WalkTowards( this, this.movement_target, 0, 3 );
					}
				}
			}
			return false;
		}

	}

}
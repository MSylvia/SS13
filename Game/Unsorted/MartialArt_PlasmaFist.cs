// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class MartialArt_PlasmaFist : MartialArt {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Plasma Fist";
			this.help_verb = typeof(Mob_Living_Carbon_Human).GetMethod( "plasma_fist_help" );
		}

		// Function from file: martial.dm
		public override bool grab_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			this.add_to_streak( "G", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			this.basic_hit( A, D );
			return true;
		}

		// Function from file: martial.dm
		public override bool disarm_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			this.add_to_streak( "D", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			this.basic_hit( A, D );
			return true;
		}

		// Function from file: martial.dm
		public override bool harm_act( dynamic A = null, Mob_Living D = null ) {
			this.add_to_streak( "H", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			this.basic_hit( A, D );
			return true;
		}

		// Function from file: martial.dm
		public void Plasma( dynamic A = null, Ent_Static D = null ) {
			dynamic B = null;

			((Ent_Dynamic)A).do_attack_animation( D );
			GlobalFuncs.playsound( D.loc, "sound/weapons/punch1.ogg", 50, 1, -1 );
			((Ent_Dynamic)A).say( "PLASMA FIST!" );
			D.visible_message( "<span class='danger'>" + A + " has hit " + D + " with THE PLASMA FIST TECHNIQUE!</span>", "<span class='userdanger'>" + A + " has hit " + D + " with THE PLASMA FIST TECHNIQUE!</span>" );
			B = ((dynamic)D).getorgan( typeof(Obj_Item_Organ_Internal_Brain) );

			if ( Lang13.Bool( B ) ) {
				B.loc = GlobalFuncs.get_turf( D );
				((Obj_Item_Organ_Internal_Brain)B).transfer_identity( D );
				((dynamic)D).internal_organs -= B;
			}
			((dynamic)D).gib();
			return;
		}

		// Function from file: martial.dm
		public void Throwback( dynamic A = null, Ent_Static D = null ) {
			dynamic throw_target = null;

			D.visible_message( "<span class='danger'>" + A + " has hit " + D + " with Plasma Punch!</span>", "<span class='userdanger'>" + A + " has hit " + D + " with Plasma Punch!</span>" );
			GlobalFuncs.playsound( D.loc, "sound/weapons/punch1.ogg", 50, 1, -1 );
			throw_target = GlobalFuncs.get_edge_target_turf( D, Map13.GetDistance( D, Map13.GetStepAway( D, A, null ) ) );
			((Ent_Dynamic)D).throw_at( throw_target, 200, 4, A );
			((Ent_Dynamic)A).say( "HYAH!" );
			return;
		}

		// Function from file: martial.dm
		public void Tornado( dynamic A = null, Ent_Static D = null ) {
			dynamic i = null;
			Obj_Effect_ProcHolder_Spell_AoeTurf_Repulse R = null;
			ByTable turfs = null;
			dynamic T = null;

			((Ent_Dynamic)A).say( "TORNADO SWEEP!" );
			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { 
					GlobalVars.NORTH, 
					GlobalVars.SOUTH, 
					GlobalVars.EAST, 
					GlobalVars.WEST, 
					GlobalVars.EAST, 
					GlobalVars.SOUTH, 
					GlobalVars.NORTH, 
					GlobalVars.SOUTH, 
					GlobalVars.EAST, 
					GlobalVars.WEST, 
					GlobalVars.EAST, 
					GlobalVars.SOUTH
				 }) )) {
					i = _a;
					
					A.dir = i;
					GlobalFuncs.playsound( A.loc, "sound/weapons/punch1.ogg", 15, 1, -1 );
					Task13.Sleep( 1 );
				}
				return;
			}));
			R = new Obj_Effect_ProcHolder_Spell_AoeTurf_Repulse( null );
			turfs = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( A, 1 ) )) {
				T = _b;
				
				turfs.Add( T );
			}
			R.cast( turfs );
			return;
		}

		// Function from file: martial.dm
		public bool check_streak( dynamic A = null, Ent_Static D = null ) {
			
			if ( String13.FindIgnoreCase( this.streak, "HHD", 1, 0 ) != 0 ) {
				this.streak = "";
				this.Tornado( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "DHD", 1, 0 ) != 0 ) {
				this.streak = "";
				this.Throwback( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "HDDDH", 1, 0 ) != 0 ) {
				this.streak = "";
				this.Plasma( A, D );
				return true;
			}
			return false;
		}

	}

}
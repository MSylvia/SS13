// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ChemicalReaction : Game_Data {

		public string name = null;
		public string id = null;
		public string result = null;
		public ByTable required_reagents = new ByTable();
		public ByTable required_catalysts = new ByTable();
		public Type required_container = null;
		public bool required_other = false;
		public int result_amount = 0;
		public bool secondary = false;
		public bool mob_react = false;
		public int required_temp = 0;
		public string mix_message = "The solution begins to bubble.";

		// Function from file: recipes.dm
		public void goonchem_vortex( dynamic T = null, bool setting_type = false, int range = 0 ) {
			Ent_Dynamic X = null;
			int distance = 0;
			double? moving_power = null;
			dynamic throw_target = null;
			double? i = null;
			double? i2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T, range ), typeof(Ent_Dynamic) )) {
				X = _a;
				

				if ( X is Obj_Effect ) {
					continue;
				}

				if ( !Lang13.Bool( X.anchored ) ) {
					distance = Map13.GetDistance( X, T );
					moving_power = Num13.MaxInt( range - distance, 1 );

					if ( ( moving_power ??0) > 2 ) {
						
						if ( setting_type ) {
							throw_target = GlobalFuncs.get_edge_target_turf( X, Map13.GetDistance( X, Map13.GetStepAway( X, T, null ) ) );
							X.throw_at_fast( throw_target, moving_power, 1 );
						} else {
							X.throw_at_fast( T, moving_power, 1 );
						}
					} else {
						Task13.Schedule( 0, (Task13.Closure)(() => {
							
							if ( setting_type ) {
								i = null;
								i = 0;

								while (( i ??0) < ( moving_power ??0)) {
									Task13.Sleep( 2 );
									Map13.StepAway( X, T, null );

									if ( !false ) {
										break;
									}
									i++;
								}
							} else {
								i2 = null;
								i2 = 0;

								while (( i2 ??0) < ( moving_power ??0)) {
									Task13.Sleep( 2 );
									Map13.StepTowardsSimple( X, T );

									if ( !false ) {
										break;
									}
									i2++;
								}
							}
							return;
						}));
					}
				}
			}
			return;
		}

		// Function from file: recipes.dm
		public void chemical_mob_spawn( Reagents holder = null, int? amount_to_spawn = null, string reaction_name = null, string mob_faction = null ) {
			mob_faction = mob_faction ?? "chemicalsummon";

			dynamic T = null;
			dynamic SA = null;
			dynamic A = null;
			dynamic T2 = null;
			dynamic my_area = null;
			string message = null;
			dynamic M = null;
			Mob_Living_Carbon C = null;
			int? i = null;
			dynamic chosen = null;
			dynamic C2 = null;
			int? j = null;

			
			if ( holder != null && Lang13.Bool( holder.my_atom ) ) {
				
				if ( GlobalVars.chemical_mob_spawn_meancritters.len <= 0 || GlobalVars.chemical_mob_spawn_nicecritters.len <= 0 ) {
					
					foreach (dynamic _b in Lang13.Enumerate( Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal) ) )) {
						T = _b;
						
						SA = T;

						dynamic _a = Lang13.Initial( SA, "gold_core_spawnable" ); // Was a switch-case, sorry for the mess.
						if ( _a==1 ) {
							GlobalVars.chemical_mob_spawn_meancritters.Add( T );
						} else if ( _a==2 ) {
							GlobalVars.chemical_mob_spawn_nicecritters.Add( T );
						}
					}
				}
				A = holder.my_atom;
				T2 = GlobalFuncs.get_turf( A );
				my_area = GlobalFuncs.get_area( T2 );
				message = "A " + reaction_name + " reaction has occured in " + my_area.name + ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + T2.x + ";Y=" + T2.y + ";Z=" + T2.z + "'>JMP</A>)";
				message += new Txt( " (<A HREF='?_src_=vars;Vars=" ).Ref( A ).str( "'>VV</A>)" ).ToString();
				M = GlobalFuncs.get( A, typeof(Mob) );

				if ( Lang13.Bool( M ) ) {
					message += new Txt( " - Carried By: " ).item( GlobalFuncs.key_name_admin( M ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( M ).str( "'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( M ).str( "'>FLW</A>)" ).ToString();
				} else {
					message += " - Last Fingerprint: " + ( Lang13.Bool( A.fingerprintslast ) ? A.fingerprintslast : "N/A" );
				}
				GlobalFuncs.message_admins( message );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( holder.my_atom ), "sound/effects/phasein.ogg", 100, 1 );

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, GlobalFuncs.get_turf( holder.my_atom ) ), typeof(Mob_Living_Carbon) )) {
					C = _c;
					
					C.flash_eyes();
				}
				i = null;
				i = 1;

				while (( i ??0) <= ( amount_to_spawn ??0)) {
					chosen = null;

					if ( reaction_name == "Friendly Gold Slime" ) {
						chosen = Rand13.PickFromTable( GlobalVars.chemical_mob_spawn_nicecritters );
					} else {
						chosen = Rand13.PickFromTable( GlobalVars.chemical_mob_spawn_meancritters );
					}
					C2 = Lang13.Call( chosen );
					C2.faction |= mob_faction;
					C2.loc = GlobalFuncs.get_turf( holder.my_atom );

					if ( Rand13.PercentChance( 50 ) ) {
						j = null;
						j = 1;

						while (( j ??0) <= Rand13.Int( 1, 3 )) {
							Map13.Step( C2, Convert.ToInt32( Rand13.Pick(new object [] { GlobalVars.NORTH, GlobalVars.SOUTH, GlobalVars.EAST, GlobalVars.WEST }) ) );
							j++;
						}
					}
					i++;
				}
			}
			return;
		}

		// Function from file: recipes.dm
		public virtual void on_reaction( Reagents holder = null, double? created_volume = null ) {
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Subsystem_Lighting : Subsystem {

		public ByTable changed_lights = new ByTable();
		public double changed_lights_workload = 0;
		public ByTable changed_turfs = new ByTable();
		public double changed_turfs_workload = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Lighting";
			this.priority = 1;
			this.wait = 5;
			this.dynamic_wait = true;
			this.dwait_delta = 3;
			this.display = 5;
		}

		// Function from file: lighting.dm
		public Subsystem_Lighting (  ) {
			
			if ( GlobalVars.SSlighting != this ) {
				
				if ( GlobalVars.SSlighting is Subsystem_Lighting ) {
					this.Recover();
					GlobalFuncs.qdel( GlobalVars.SSlighting );
				}
				GlobalVars.SSlighting = this;
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: lighting.dm
		public override void Recover(  ) {
			dynamic thing = null;
			dynamic LS = null;
			dynamic thing2 = null;
			dynamic T = null;
			string msg = null;
			dynamic varname = null;
			string varval1 = null;
			string varval2 = null;

			
			if ( !( GlobalVars.SSlighting.changed_turfs is ByTable ) ) {
				GlobalVars.SSlighting.changed_turfs = new ByTable();
			}

			if ( !( GlobalVars.SSlighting.changed_lights is ByTable ) ) {
				GlobalVars.SSlighting.changed_lights = new ByTable();
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.SSlighting.changed_lights )) {
				thing = _a;
				
				LS = thing;
				Task13.Schedule( -1, (Task13.Closure)(() => {
					((LightSource)LS).check();
					return;
				}));
			}

			foreach (dynamic _b in Lang13.Enumerate( this.changed_turfs )) {
				thing2 = _b;
				
				T = thing2;

				if ( T.lighting_changed ) {
					Task13.Schedule( -1, (Task13.Closure)(() => {
						((Tile)T).redraw_lighting();
						return;
					}));
				}
			}
			msg = "## DEBUG: " + String13.FormatTime( Game13.timeofday, null ) + " " + this.name + " subsystem restarted. Reports:\n";

			foreach (dynamic _d in Lang13.Enumerate( GlobalVars.SSlighting.vars )) {
				varname = _d;
				

				dynamic _c = varname; // Was a switch-case, sorry for the mess.
				if ( _c=="tag" || _c=="bestF" || _c=="type" || _c=="parent_type" || _c=="vars" ) {
					continue;
				} else {
					varval1 = GlobalVars.SSlighting.vars[varname];
					varval2 = this.vars[varname];

					if ( varval1 is ByTable ) {
						varval1 = "/list(" + Lang13.Length( varval1 ) + ")";
						varval2 = "/list(" + Lang13.Length( varval2 ) + ")";
					}
					msg += "	 " + varname + " = " + varval1 + " -> " + varval2 + "\n";
				}
			}
			Game13.log.WriteMsg( msg );
			return;
		}

		// Function from file: lighting.dm
		public override double Initialize( int start_timeofday = 0, double? zlevel = null ) {
			dynamic A = null;
			dynamic thing = null;
			dynamic LS = null;
			double? z_start = null;
			double? z_finish = null;
			ByTable turfs_to_init = null;
			dynamic thing2 = null;
			dynamic T = null;
			dynamic thing3 = null;
			dynamic T2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13) )) {
				A = _a;
				

				if ( A.lighting_use_dynamic == 2 ) {
					
					if ( GlobalVars.config.starlight ) {
						((Zone)A).SetDynamicLighting();
					}
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( this.changed_lights )) {
				thing = _b;
				
				LS = thing;
				((LightSource)LS).check();
			}
			this.changed_lights.Cut();
			z_start = 1;
			z_finish = Game13.map_size_z;

			if ( ( zlevel ??0) >= 1 && ( zlevel ??0) <= Game13.map_size_z ) {
				zlevel = Num13.Floor( zlevel ??0 );
				z_start = zlevel;
				z_finish = zlevel;
			}
			turfs_to_init = Map13.FetchInBlock( Map13.GetTile( 1, 1, ((int)( z_start ??0 )) ), Map13.GetTile( Game13.map_size_x, Game13.map_size_y, ((int)( z_finish ??0 )) ) );

			foreach (dynamic _c in Lang13.Enumerate( turfs_to_init )) {
				thing2 = _c;
				
				T = thing2;
				((Tile)T).init_lighting();
			}

			if ( Lang13.Bool( zlevel ) ) {
				
				foreach (dynamic _d in Lang13.Enumerate( this.changed_turfs )) {
					thing3 = _d;
					
					T2 = thing3;

					if ( Lang13.IsInRange( Convert.ToDouble( T2.z ), z_start ??0, z_finish ??0 ) ) {
						continue;
					}
					this.changed_turfs.Remove( thing3 );
				}
			} else {
				this.changed_turfs.Cut();
			}
			base.Initialize( start_timeofday, zlevel );
			return 0;
		}

		// Function from file: lighting.dm
		public override void fire(  ) {
			dynamic thing = null;
			dynamic LS = null;
			dynamic thing2 = null;
			dynamic T = null;

			this.changed_lights_workload = this.changed_lights_workload * 0.8 + this.changed_lights.len * 0.2;

			foreach (dynamic _a in Lang13.Enumerate( this.changed_lights )) {
				thing = _a;
				
				LS = thing;
				((LightSource)LS).check();
			}
			this.changed_lights.Cut();
			this.changed_turfs_workload = this.changed_turfs_workload * 0.8 + this.changed_turfs.len * 0.2;

			foreach (dynamic _b in Lang13.Enumerate( this.changed_turfs )) {
				thing2 = _b;
				
				T = thing2;

				if ( T.lighting_changed ) {
					((Tile)T).redraw_lighting();
				}
			}
			this.changed_turfs.Cut();
			return;
		}

		// Function from file: lighting.dm
		public override void stat_entry( string msg = null ) {
			base.stat_entry( "L:" + Num13.Round( this.changed_lights_workload, 1 ) + "|T:" + Num13.Round( this.changed_turfs_workload, 1 ) );
			return;
		}

	}

}
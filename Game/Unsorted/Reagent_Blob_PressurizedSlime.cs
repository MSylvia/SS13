// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Blob_PressurizedSlime : Reagent_Blob {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Pressurized Slime";
			this.id = "pressurized_slime";
			this.description = "will do low brute, oxygen, and stamina damage, and wet tiles when damaged or killed.";
			this.shortdesc = "will do low brute, oxygen, and stamina damage, and wet tiles under targets.";
			this.color = "#AAAABB";
			this.blobbernaut_message = "emits slime at";
			this.message = "The blob splashes into you";
			this.message_living = ", and you gasp for breath";
		}

		// Function from file: blob_reagents.dm
		public override void death_reaction( Obj_Effect_Blob B = null, dynamic cause = null ) {
			Tile_Simulated T = null;

			
			if ( !( cause == null ) ) {
				B.visible_message( "<span class='warning'><b>The blob ruptures, spraying the area with liquid!</b></span>" );
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( B, 1 ), typeof(Tile_Simulated) )) {
				T = _a;
				

				if ( Rand13.PercentChance( 50 ) ) {
					T.MakeSlippery( 1 );
				}
			}
			return;
		}

		// Function from file: blob_reagents.dm
		public override dynamic damage_reaction( Obj_Effect_Blob B = null, double original_health = 0, dynamic damage = null, dynamic damage_type = null, dynamic cause = null ) {
			Tile_Simulated T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( B, 1 ), typeof(Tile_Simulated) )) {
				T = _a;
				

				if ( Rand13.PercentChance( Convert.ToInt32( damage ) ) ) {
					T.MakeSlippery( 1 );
				}
			}
			return base.damage_reaction( B, original_health, (object)(damage), (object)(damage_type), (object)(cause) );
		}

		// Function from file: blob_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;

			dynamic T = null;

			reac_volume = base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
			T = GlobalFuncs.get_turf( M );

			if ( T is Tile_Simulated && Rand13.PercentChance( ((int)( reac_volume ??0 )) ) ) {
				((Tile_Simulated)T).MakeSlippery( 1 );
			}
			((Mob_Living)M).apply_damage( ( reac_volume ??0) * 0.4, "brute" );

			if ( Lang13.Bool( M ) ) {
				((Mob_Living)M).apply_damage( ( reac_volume ??0) * 0.4, "oxy" );
			}

			if ( Lang13.Bool( M ) ) {
				((Mob_Living)M).adjustStaminaLoss( ( reac_volume ??0) * 0.4 );
			}
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Hud_Robot : Hud {

		// Function from file: robot.dm
		public Hud_Robot ( Mob_Living_Silicon_Robot owner = null ) : base( owner ) {
			Mob mymobR = null;
			Obj_Screen _using = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			mymobR = this.mymob;
			_using = new Obj_Screen_Robot_Radio();
			_using.screen_loc = "EAST-1:28,SOUTH+1:7";
			this.static_inventory.Add( _using );
			_using = new Obj_Screen_Robot_Module1();
			_using.screen_loc = "CENTER-2:16,SOUTH:5";
			this.static_inventory.Add( _using );
			((dynamic)mymobR).inv1 = _using;
			_using = new Obj_Screen_Robot_Module2();
			_using.screen_loc = "CENTER-1  :16,SOUTH:5";
			this.static_inventory.Add( _using );
			((dynamic)mymobR).inv2 = _using;
			_using = new Obj_Screen_Robot_Module3();
			_using.screen_loc = "CENTER  :16,SOUTH:5";
			this.static_inventory.Add( _using );
			((dynamic)mymobR).inv3 = _using;
			_using = new Obj_Screen_Ai_ImageTake();
			_using.screen_loc = "CENTER+3:21,SOUTH:5";
			this.static_inventory.Add( _using );
			_using = new Obj_Screen_Ai_ImageView();
			_using.screen_loc = "CENTER+4:21,SOUTH:5";
			this.static_inventory.Add( _using );
			_using = new Obj_Screen_Ai_Sensors();
			_using.screen_loc = "CENTER-3:16, SOUTH:5";
			this.static_inventory.Add( _using );
			_using = new Obj_Screen_Robot_Lamp();
			_using.screen_loc = "CENTER-4:16, SOUTH:5";
			this.static_inventory.Add( _using );
			((dynamic)mymobR).lamp_button = _using;
			_using = new Obj_Screen_Robot_Thrusters();
			_using.screen_loc = "CENTER-5:16, SOUTH:5";
			this.static_inventory.Add( _using );
			((dynamic)mymobR).thruster_button = _using;
			_using = new Obj_Screen_ActIntent_Robot();
			_using.icon_state = this.mymob.a_intent;
			this.static_inventory.Add( _using );
			this.action_intent = _using;
			this.healths = new Obj_Screen_Healths_Robot();
			this.infodisplay.Add( this.healths );
			this.mymob.hands = new Obj_Screen_Robot_Module();
			this.mymob.hands.screen_loc = "CENTER+1:16,SOUTH:5";
			this.static_inventory.Add( this.mymob.hands );
			this.module_store_icon = new Obj_Screen_Robot_Store();
			this.module_store_icon.screen_loc = "CENTER+2:16,SOUTH:5";
			this.pull_icon = new Obj_Screen_Pull();
			this.pull_icon.icon = "icons/mob/screen_cyborg.dmi";
			this.pull_icon.update_icon( this.mymob );
			this.pull_icon.screen_loc = "EAST-2:26,SOUTH+1:7";
			this.hotkeybuttons.Add( this.pull_icon );
			this.zone_select = new Obj_Screen_ZoneSel_Robot();
			this.zone_select.update_icon( this.mymob );
			this.static_inventory.Add( this.zone_select );
			return;
		}

		// Function from file: robot.dm
		public override void persistant_inventory_update(  ) {
			Mob R = null;

			
			if ( !( this.mymob != null ) ) {
				return;
			}
			R = this.mymob;

			if ( this.hud_shown ) {
				
				if ( Lang13.Bool( ((dynamic)R).module_state_1 ) ) {
					((dynamic)R).module_state_1.screen_loc = "CENTER-2:16,SOUTH:5";
					R.client.screen.Add( ((dynamic)R).module_state_1 );
				}

				if ( Lang13.Bool( ((dynamic)R).module_state_2 ) ) {
					((dynamic)R).module_state_2.screen_loc = "CENTER-1  :16,SOUTH:5";
					R.client.screen.Add( ((dynamic)R).module_state_2 );
				}

				if ( Lang13.Bool( ((dynamic)R).module_state_3 ) ) {
					((dynamic)R).module_state_3.screen_loc = "CENTER  :16,SOUTH:5";
					R.client.screen.Add( ((dynamic)R).module_state_3 );
				}
			} else {
				
				if ( Lang13.Bool( ((dynamic)R).module_state_1 ) ) {
					((dynamic)R).module_state_1.screen_loc = null;
				}

				if ( Lang13.Bool( ((dynamic)R).module_state_2 ) ) {
					((dynamic)R).module_state_2.screen_loc = null;
				}

				if ( Lang13.Bool( ((dynamic)R).module_state_3 ) ) {
					((dynamic)R).module_state_3.screen_loc = null;
				}
			}
			return;
		}

		// Function from file: hud.dm
		public override bool show_hud( int? version = null ) {
			version = version ?? 0;

			base.show_hud( version );
			this.update_robot_modules_display();
			return false;
		}

	}

}
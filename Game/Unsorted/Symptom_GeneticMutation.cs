// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Symptom_GeneticMutation : Symptom {

		public ByTable possible_mutations = null;
		public dynamic archived_dna = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Deoxyribonucleic Acid Saboteur";
			this.stealth = -2;
			this.resistance = -3;
			this.transmittable = -3;
			this.level = 6;
			this.severity = 3;
		}

		// Function from file: genetics.dm
		public override void End( Disease_Advance A = null ) {
			dynamic M = null;

			M = A.affected_mob;

			if ( Lang13.Bool( M ) && Lang13.Bool( this.archived_dna ) ) {
				
				if ( !Lang13.Bool( M.has_dna() ) ) {
					return;
				}
				M.dna.struc_enzymes = this.archived_dna;
				((Mob)M).domutcheck();
			}
			return;
		}

		// Function from file: genetics.dm
		public override void Start( Disease_Advance A = null ) {
			dynamic M = null;

			this.possible_mutations = ( GlobalVars.bad_mutations | GlobalVars.not_good_mutations ) - GlobalVars.mutations_list["Monkified"];
			M = A.affected_mob;

			if ( Lang13.Bool( M ) ) {
				
				if ( !Lang13.Bool( M.has_dna() ) ) {
					return;
				}
				this.archived_dna = M.dna.struc_enzymes;
			}
			return;
		}

		// Function from file: genetics.dm
		public override void Activate( Disease_Advance A = null ) {
			dynamic M = null;

			base.Activate( A );

			if ( Rand13.PercentChance( 15 ) ) {
				M = A.affected_mob;

				if ( !Lang13.Bool( M.has_dna() ) ) {
					return;
				}

				switch ((int?)( A.stage )) {
					case 4:
					case 5:
						M.WriteMsg( "<span class='warning'>" + Rand13.Pick(new object [] { "Your skin feels itchy.", "You feel light headed." }) + "</span>" );
						((Dna)M.dna).remove_mutation_group( this.possible_mutations );
						GlobalFuncs.randmut( M, this.possible_mutations );
						break;
				}
			}
			return;
		}

	}

}
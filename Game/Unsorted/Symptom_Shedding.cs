// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Symptom_Shedding : Symptom {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Alopecia";
			this.stealth = -1;
			this.resistance = -1;
			this.stage_speed = -1;
			this.transmittable = 2;
			this.level = 4;
			this.severity = 1;
		}

		// Function from file: tgstation.dme
		public override void Activate( Disease_Advance A = null ) {
			dynamic M = null;
			dynamic H = null;

			base.Activate( A );

			if ( Rand13.PercentChance( GlobalVars.SYMPTOM_ACTIVATION_PROB ) ) {
				M = A.affected_mob;
				M.WriteMsg( "<span class='warning'>" + Rand13.Pick(new object [] { "Your scalp itches.", "Your skin feels flakey." }) + "</span>" );

				if ( M is Mob_Living_Carbon_Human ) {
					H = M;

					switch ((int?)( A.stage )) {
						case 3:
						case 4:
							
							if ( !( H.hair_style == "Bald" ) && !( H.hair_style == "Balding Hair" ) ) {
								H.WriteMsg( "<span class='warning'>Your hair starts to fall out in clumps...</span>" );
								Task13.Schedule( 50, (Task13.Closure)(() => {
									H.hair_style = "Balding Hair";
									((Mob)H).update_hair();
									return;
								}));
							}
							break;
						case 5:
							
							if ( !( H.facial_hair_style == "Shaved" ) || !( H.hair_style == "Bald" ) ) {
								H.WriteMsg( "<span class='warning'>Your hair starts to fall out in clumps...</span>" );
								Task13.Schedule( 50, (Task13.Closure)(() => {
									H.facial_hair_style = "Shaved";
									H.hair_style = "Bald";
									((Mob)H).update_hair();
									return;
								}));
							}
							break;
					}
				}
			}
			return;
		}

	}

}
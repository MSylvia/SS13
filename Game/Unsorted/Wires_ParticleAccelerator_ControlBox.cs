// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Wires_ParticleAccelerator_ControlBox : Wires_ParticleAccelerator {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.holder_type = typeof(Obj_Machinery_ParticleAccelerator_ControlBox);
		}

		// Function from file: particle_accelerator.dm
		public Wires_ParticleAccelerator_ControlBox ( Obj_Machinery_ParticleAccelerator_ControlBox holder = null ) : base( holder ) {
			this.wires = new ByTable(new object [] { "power", "strength", "limit", "interface" });
			this.add_duds( 2 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: particle_accelerator.dm
		public override void on_cut( dynamic wire = null, int? mend = null ) {
			Obj C = null;
			int? i = null;

			C = this.holder;

			dynamic _a = wire; // Was a switch-case, sorry for the mess.
			if ( _a=="power" ) {
				
				if ( Lang13.Bool( ((dynamic)C).active ) == !Lang13.Bool( mend ) ) {
					((dynamic)C).toggle_power();
				}
			} else if ( _a=="strength" ) {
				i = null;
				i = 1;

				while (( i ??0) < 3) {
					((dynamic)C).remove_strength();
					i++;
				}
			} else if ( _a=="interface" ) {
				
				if ( !Lang13.Bool( mend ) ) {
					((dynamic)C).interface_control = GlobalVars.FALSE;
				}
			} else if ( _a=="limit" ) {
				((dynamic)C).strength_upper_limit = ( Lang13.Bool( mend ) ? 2 : 3 );

				if ( Convert.ToDouble( ((dynamic)C).strength_upper_limit ) < Convert.ToDouble( ((dynamic)C).strength ) ) {
					((dynamic)C).remove_strength();
				}
			}
			return;
		}

		// Function from file: particle_accelerator.dm
		public override void on_pulse( string wire = null ) {
			Obj C = null;

			C = this.holder;

			switch ((string)( wire )) {
				case "power":
					((dynamic)C).toggle_power();
					break;
				case "strength":
					((dynamic)C).add_strength();
					break;
				case "interface":
					((dynamic)C).interface_control = !Lang13.Bool( ((dynamic)C).interface_control );
					break;
				case "limit":
					C.visible_message( new Txt().icon( C ).str( "<b>" ).item( C ).str( "</b> makes a large whirring noise." ).ToString() );
					break;
			}
			return;
		}

		// Function from file: particle_accelerator.dm
		public override int? interactable( dynamic user = null ) {
			Obj C = null;

			C = this.holder;

			if ( Convert.ToInt32( ((dynamic)C).construction_state ) == 2 ) {
				return GlobalVars.TRUE;
			}
			return null;
		}

	}

}
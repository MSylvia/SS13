// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Action_Innate_Blob_Earlycomm : Action_Innate_Blob {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Blob Communication";
			this.button_icon_state = "blob_comm";
		}

		public Action_Innate_Blob_Earlycomm ( Obj_Item_Weapon_Tank Target = null ) : base( Target ) {
			
		}

		// Function from file: tgstation.dme
		public override void Activate( int? forced_state = null ) {
			string msg = null;
			dynamic O = null;
			string spanned_message = null;
			string rendered = null;
			dynamic B = null;
			dynamic M = null;

			msg = GlobalFuncs.stripped_input( this.owner, "What do you wish to tell your fellow blobs?", null, "" );

			if ( Lang13.Bool( msg ) && Lang13.Bool( this.owner ) ) {
				O = this.owner;
				spanned_message = ((Ent_Dynamic)O).say_quote( msg, O.get_spans() );
				rendered = "<span class='big'><font color=\"#EE4000\"><b>[Blob Telepathy] " + O.real_name + "</b> " + spanned_message + "</font></span>";
				B = GlobalVars.ticker.mode;
				B.show_message( "" + rendered );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
					M = _a;
					

					if ( M is Mob_Dead_Observer ) {
						M.WriteMsg( new Txt( "<a href='?src=" ).Ref( M ).str( ";follow=" ).Ref( O ).str( "'>(F)</a> " ).item( rendered ).ToString() );
					}
				}
			}
			return;
		}

	}

}
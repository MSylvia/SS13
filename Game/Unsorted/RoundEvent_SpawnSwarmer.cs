// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_SpawnSwarmer : RoundEvent {

		// Function from file: swarmer_event.dm
		public bool find_swarmer(  ) {
			Mob_Living M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living) )) {
				M = _a;
				

				if ( M is Mob_Living_SimpleAnimal_Hostile_Swarmer && M.client != null ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: swarmer_event.dm
		public override bool start(  ) {
			string swarmer_report = null;

			
			if ( this.find_swarmer() ) {
				return false;
			}

			if ( !( GlobalVars.the_gateway != null ) ) {
				return false;
			}
			new Obj_Item_UnactivatedSwarmer( GlobalFuncs.get_turf( GlobalVars.the_gateway ) );

			if ( Rand13.PercentChance( 25 ) ) {
				swarmer_report = "<font size=3><b>" + GlobalFuncs.command_name() + " High-Priority Update</b></span>";
				swarmer_report += "<br><br>Our long-range sensors have detected an odd signal emanating from your station's gateway. We recommend immediate investigation of your gateway, as something may have come through.";
				GlobalFuncs.print_command_report( swarmer_report, "Classified " + GlobalFuncs.command_name() + " Update" );
				GlobalFuncs.priority_announce( "A report has been downloaded and printed out at all communications consoles.", "Incoming Classified Message", "sound/AI/commandreport.ogg" );
			}
			return false;
		}

	}

}
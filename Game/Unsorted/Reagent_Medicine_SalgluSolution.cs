// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Medicine_SalgluSolution : Reagent_Medicine {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Saline-Glucose Solution";
			this.id = "salglu_solution";
			this.description = "Has a 33% chance per metabolism cycle to heal brute and burn damage.  Can be used as a blood substitute on an IV drip.";
			this.color = "#C8A5DC";
			this.metabolization_rate = 0.2;
		}

		// Function from file: medicine_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;
			show_message = show_message ?? true;

			dynamic H = null;
			double efficiency = 0;

			
			if ( M is Mob_Living_Carbon && method == GlobalVars.INJECT ) {
				H = M;
				efficiency = ( 560 - ( H.vessel.get_reagent_amount( "blood" ) ?1:0) ) / 700 + 0.2;
				efficiency = Num13.MinInt( ((int)( 0.75 )), ((int)( efficiency )) );
				H.vessel.add_reagent( "blood", efficiency * Num13.MinInt( 5, ((int)( reac_volume ??0 )) ) );
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
			return 0;
		}

		// Function from file: medicine_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			
			if ( Rand13.PercentChance( 33 ) ) {
				((Mob_Living)M).adjustBruteLoss( -0.5 );
				((Mob_Living)M).adjustFireLoss( -0.5 );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
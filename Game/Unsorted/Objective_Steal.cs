// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Objective_Steal : Objective {

		public dynamic targetinfo = null;
		public dynamic steal_target = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dangerrating = 5;
		}

		// Function from file: objective.dm
		public Objective_Steal ( string text = null ) : base( text ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( !( GlobalVars.possible_items.len != 0 ) ) {
				GlobalFuncs.init_subtypes( typeof(ObjectiveItem_Steal), GlobalVars.possible_items );
			}
			return;
		}

		// Function from file: objective.dm
		public override void give_special_equipment(  ) {
			Mob_Living_Carbon_Human H = null;
			ByTable slots = null;
			dynamic eq_path = null;
			dynamic O = null;

			
			if ( Lang13.Bool( this.owner ) && Lang13.Bool( this.owner.current ) && Lang13.Bool( this.targetinfo ) ) {
				
				if ( this.owner.current is Mob_Living_Carbon_Human ) {
					H = this.owner.current;
					slots = new ByTable().Set( "backpack", 18 );

					foreach (dynamic _a in Lang13.Enumerate( this.targetinfo.special_equipment )) {
						eq_path = _a;
						
						O = Lang13.Call( eq_path );
						H.equip_in_one_of_slots( O, slots );
						H.update_icons();
					}
				}
			}
			return;
		}

		// Function from file: objective.dm
		public override int check_completion(  ) {
			ByTable all_items = null;
			Obj I = null;

			
			if ( !Lang13.Bool( this.steal_target ) ) {
				return 1;
			}

			if ( !( this.owner.current is Mob_Living ) ) {
				return 0;
			}
			all_items = ((Ent_Static)this.owner.current).GetAllContents();

			foreach (dynamic _a in Lang13.Enumerate( all_items, typeof(Obj) )) {
				I = _a;
				

				if ( Lang13.Bool( this.steal_target.IsInstanceOfType( I ) ) ) {
					
					if ( !Lang13.Bool( this.targetinfo ) ) {
						return 1;
					} else if ( ((ObjectiveItem)this.targetinfo).check_special_completion( I ) ) {
						return 1;
					}
				}

				if ( this.targetinfo.altitems.Contains( Lang13.Bool( this.targetinfo ) && I.type != null ) ) {
					
					if ( ((ObjectiveItem)this.targetinfo).check_special_completion( I ) ) {
						return 1;
					}
				}
			}
			return 0;
		}

		// Function from file: objective.dm
		public dynamic select_target(  ) {
			ByTable possible_items_all = null;
			dynamic new_target = null;
			dynamic custom_target = null;
			dynamic tmp_obj = null;
			string custom_name = null;

			possible_items_all = GlobalVars.possible_items + "custom";
			new_target = Interface13.Input( "Select target:", "Objective target", this.steal_target, null, possible_items_all, InputType.Null | InputType.Any );

			if ( !Lang13.Bool( new_target ) ) {
				return null;
			}

			if ( new_target == "custom" ) {
				custom_target = Interface13.Input( "Select type:", "Type", null, null, Lang13.GetTypes( typeof(Obj_Item) ), InputType.Null | InputType.Any );

				if ( !Lang13.Bool( custom_target ) ) {
					return null;
				}
				tmp_obj = Lang13.Call( custom_target );
				custom_name = tmp_obj.name;
				GlobalFuncs.qdel( tmp_obj );
				custom_name = GlobalFuncs.stripped_input( "Enter target name:", "Objective target", custom_name );

				if ( !Lang13.Bool( custom_name ) ) {
					return null;
				}
				this.steal_target = custom_target;
				this.explanation_text = "Steal " + custom_name + ".";
			} else {
				this.set_target( new_target );
			}
			return this.steal_target;
		}

		// Function from file: objective.dm
		public dynamic set_target( dynamic item = null ) {
			
			if ( Lang13.Bool( item ) ) {
				this.targetinfo = item;
				this.steal_target = this.targetinfo.targetitem;
				this.explanation_text = "Steal " + this.targetinfo.name + ".";
				this.dangerrating = this.targetinfo.difficulty;
				this.give_special_equipment();
				return this.steal_target;
			} else {
				this.explanation_text = "Free objective";
				return null;
			}
		}

		// Function from file: objective.dm
		public override dynamic find_target(  ) {
			ByTable approved_targets = null;
			ObjectiveItem possible_item = null;

			approved_targets = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.possible_items, typeof(ObjectiveItem) )) {
				possible_item = _a;
				

				if ( this.is_unique_objective( possible_item.targetitem ) && !possible_item.excludefromjob.Contains( this.owner.current.mind.assigned_role ) ) {
					approved_targets.Add( possible_item );
				}
			}
			return this.set_target( GlobalFuncs.safepick( approved_targets ) );
		}

		// Function from file: objective.dm
		public override dynamic get_target(  ) {
			return this.steal_target;
		}

	}

}
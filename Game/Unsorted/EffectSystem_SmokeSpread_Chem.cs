// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class EffectSystem_SmokeSpread_Chem : EffectSystem_SmokeSpread {

		public dynamic chemholder = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.effect_type = typeof(Obj_Effect_ParticleEffect_Smoke_Chem);
		}

		// Function from file: effects_smoke.dm
		public EffectSystem_SmokeSpread_Chem (  ) {
			Reagents R = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.chemholder = GlobalFuncs.PoolOrNew( typeof(Obj) );
			R = new Reagents( 500 );
			this.chemholder.reagents = R;
			R.my_atom = this.chemholder;
			return;
		}

		// Function from file: effects_smoke.dm
		public override void start(  ) {
			string color = null;
			dynamic S = null;

			color = GlobalFuncs.mix_color_from_reagents( this.chemholder.reagents.reagent_list );

			if ( Lang13.Bool( this.holder ) ) {
				this.location = GlobalFuncs.get_turf( this.holder );
			}
			S = Lang13.Call( this.effect_type, this.location );

			if ( ( this.chemholder.reagents.total_volume ??0) > 1 ) {
				this.chemholder.reagents.copy_to( S, this.chemholder.reagents.total_volume );
			}

			if ( Lang13.Bool( color ) ) {
				S.color = color;
			}
			S.amount = this.amount;

			if ( Lang13.Bool( S.amount ) ) {
				((Obj_Effect_ParticleEffect_Smoke)S).spread_smoke();
			}
			return;
		}

		// Function from file: effects_smoke.dm
		public override void set_up( dynamic amt = null, dynamic loca = null, dynamic flash = null, dynamic flash_fact = null, bool? message = null ) {
			loca = loca ?? 1;
			flash_fact = flash_fact ?? 0;

			string contained = null;
			dynamic reagent = null;
			dynamic A = null;
			string where = null;
			string whereLink = null;
			dynamic M = null;
			string more = null;

			
			if ( flash is Tile ) {
				this.location = flash;
			} else {
				this.location = GlobalFuncs.get_turf( flash );
			}
			this.amount = loca;
			amt.copy_to( this.chemholder, ( amt.total_volume ??0) * 4 );

			if ( !Lang13.Bool( flash_fact ) ) {
				contained = "";

				foreach (dynamic _a in Lang13.Enumerate( amt.reagent_list )) {
					reagent = _a;
					
					contained += " " + reagent + " ";
				}

				if ( Lang13.Bool( contained ) ) {
					contained = "[" + contained + "]";
				}
				A = GlobalFuncs.get_area( this.location );
				where = "" + A.name + " | " + this.location.x + ", " + this.location.y;
				whereLink = "<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.location.x + ";Y=" + this.location.y + ";Z=" + this.location.z + "'>" + where + "</a>";

				if ( Lang13.Bool( amt.my_atom.fingerprintslast ) ) {
					M = GlobalFuncs.get_mob_by_key( amt.my_atom.fingerprintslast );
					more = "";

					if ( Lang13.Bool( M ) ) {
						more = new Txt( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( M ).str( "'>?</a>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( M ).str( "'>FLW</A>) " ).ToString();
					}
					GlobalFuncs.message_admins( "A chemical smoke reaction has taken place in (" + whereLink + ")" + contained + ". Last associated key is " + amt.my_atom.fingerprintslast + more + "." );
					GlobalFuncs.log_game( "A chemical smoke reaction has taken place in (" + where + ")" + contained + ". Last associated key is " + amt.my_atom.fingerprintslast + "." );
				} else {
					GlobalFuncs.message_admins( "A chemical smoke reaction has taken place in (" + whereLink + "). No associated key." );
					GlobalFuncs.log_game( "A chemical smoke reaction has taken place in (" + where + ")" + contained + ". No associated key." );
				}
			}
			return;
		}

		// Function from file: effects_smoke.dm
		public override dynamic Destroy(  ) {
			GlobalFuncs.qdel( this.chemholder );
			this.chemholder = null;
			return base.Destroy();
		}

	}

}
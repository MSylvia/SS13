// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Toxin_Plasma : Reagent_Toxin {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Plasma";
			this.id = "plasma";
			this.description = "Plasma in its liquid form.";
			this.color = "#500064";
			this.toxpwr = 3;
		}

		// Function from file: toxin_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;

			
			if ( !( M is Mob_Living ) ) {
				return 0;
			}

			if ( method == GlobalVars.TOUCH || method == GlobalVars.VAPOR ) {
				((Mob_Living)M).adjust_fire_stacks( ( reac_volume ??0) / 5 );
				return 0;
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
			return 0;
		}

		// Function from file: toxin_reagents.dm
		public override void reaction_turf( dynamic T = null, double? volume = null ) {
			
			if ( T is Tile_Simulated ) {
				((Tile_Simulated)T).atmos_spawn_air( 6, volume );
			}
			return;
		}

		// Function from file: toxin_reagents.dm
		public override bool reaction_obj( dynamic O = null, double? volume = null ) {
			
			if ( !Lang13.Bool( O ) || !Lang13.Bool( volume ) ) {
				return false;
			}
			((Ent_Dynamic)O).atmos_spawn_air( 6, volume );
			return false;
		}

		// Function from file: toxin_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			dynamic C = null;

			
			if ( Lang13.Bool( ((Reagents)this.holder).has_reagent( "epinephrine" ) ) ) {
				((Reagents)this.holder).remove_reagent( "epinephrine", 2 );
			}

			if ( M is Mob_Living_Carbon ) {
				C = M;
				((Mob_Living_Carbon)C).adjustPlasma( 20 );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class UplinkItem_Badass_Random : UplinkItem_Badass {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Random Item";
			this.desc = "Picking this will purchase a random item. Useful if you have some TC to spare or if you haven't decided on a strategy yet.";
			this.item = typeof(Obj_Item_Weapon_Paper);
		}

		// Function from file: uplink_item.dm
		public override dynamic spawn_item( dynamic loc = null, Obj_Item_Device_Uplink U = null ) {
			ByTable uplink_items = null;
			ByTable possible_items = null;
			dynamic category = null;
			dynamic item = null;
			UplinkItem_Badass_Random I = null;
			dynamic I2 = null;

			uplink_items = GlobalFuncs.get_uplink_items();
			possible_items = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( uplink_items )) {
				category = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( uplink_items[category] )) {
					item = _a;
					
					I = uplink_items[category][item];

					if ( this == I || !Lang13.Bool( I.item ) ) {
						continue;
					}

					if ( Convert.ToDouble( U.telecrystals ) < I.cost ) {
						continue;
					}
					possible_items.Add( I );
				}
			}

			if ( possible_items.len != 0 ) {
				I2 = Rand13.PickFromTable( possible_items );
				U.telecrystals -= I2.cost;
				U.spent_telecrystals += Convert.ToDouble( I2.cost );
				GlobalFuncs.feedback_add_details( "traitor_uplink_items_bought", "RN" );
				return Lang13.Call( I2.item, loc );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Blob : Reagent {

		public string shortdesc = null;
		public string blobbernaut_message = "slams";
		public string message = "The blob strikes you";
		public string message_living = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Unknown";
			this.description = "shouldn't exist and you should adminhelp immediately.";
			this.color = "#FFFFFF";
		}

		// Function from file: tgstation.dme
		public void send_message( dynamic M = null ) {
			string totalmessage = null;

			totalmessage = this.message;

			if ( Lang13.Bool( this.message_living ) && !( M is Mob_Living_Silicon ) ) {
				totalmessage += this.message_living;
			}
			totalmessage += "!";
			M.WriteMsg( "<span class='userdanger'>" + totalmessage + "</span>" );
			return;
		}

		// Function from file: blob_reagents.dm
		public void reagent_vortex( dynamic M = null, int setting_type = 0, double? reac_volume = null ) {
			dynamic pull = null;
			int range_power = 0;
			Ent_Dynamic X = null;
			Ent_Dynamic L = null;
			double? distance = null;
			int moving_power = 0;
			dynamic throw_target = null;
			double? throw_range = null;
			double i = 0;
			double i2 = 0;

			
			if ( Lang13.Bool( M ) ) {
				pull = GlobalFuncs.get_turf( M );
				range_power = Num13.MaxInt( 1, Num13.MinInt( ((int)( Num13.Round( ( reac_volume ??0) / 5, 1 ) )), 5 ) );

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRange( pull, range_power ), typeof(Ent_Dynamic) )) {
					X = _c;
					

					if ( X is Obj_Effect ) {
						continue;
					}

					if ( X is Mob_Living ) {
						L = X;

						if ( Lang13.Bool( ((dynamic)L).faction.Contains( "blob" ) ) ) {
							continue;
						}
					}

					if ( !Lang13.Bool( X.anchored ) ) {
						distance = Map13.GetDistance( X, pull );
						moving_power = Num13.MaxInt( ((int)( range_power - ( distance ??0) )), 1 );

						if ( moving_power > 2 ) {
							
							if ( setting_type != 0 ) {
								throw_target = GlobalFuncs.get_edge_target_turf( X, Map13.GetDistance( X, Map13.GetStepAway( X, pull, null ) ) );
								throw_range = 5 - ( distance ??0);
								X.throw_at_fast( throw_target, throw_range, 1 );
							} else {
								X.throw_at_fast( pull, distance, 1 );
							}
						} else {
							Task13.Schedule( 0, (Task13.Closure)(() => {
								
								if ( setting_type != 0 ) {
									
									foreach (dynamic _a in Lang13.IterateRange( 0, moving_power - 1 )) {
										i = _a;
										
										Task13.Sleep( 2 );
										Map13.StepAway( X, pull, null );

										if ( !false ) {
											break;
										}
									}
								} else {
									
									foreach (dynamic _b in Lang13.IterateRange( 0, moving_power - 1 )) {
										i2 = _b;
										
										Task13.Sleep( 2 );
										Map13.StepTowardsSimple( X, pull );

										if ( !false ) {
											break;
										}
									}
								}
								return;
							}));
						}
					}
				}
			}
			return;
		}

		// Function from file: blob_reagents.dm
		public virtual void expand_reaction( Obj_Effect_Blob B = null, Obj_Effect_Blob_Normal newB = null, dynamic T = null ) {
			return;
		}

		// Function from file: blob_reagents.dm
		public virtual void death_reaction( Obj_Effect_Blob B = null, dynamic cause = null ) {
			return;
		}

		// Function from file: blob_reagents.dm
		public virtual dynamic damage_reaction( Obj_Effect_Blob B = null, double original_health = 0, dynamic damage = null, dynamic damage_type = null, dynamic cause = null ) {
			return damage;
		}

		// Function from file: blob_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;

			return Num13.Round( ( reac_volume ??0) * Num13.MinInt( ((int)( 1.5 - Convert.ToDouble( touch_protection ) )), 1 ), 0.1 );
		}

	}

}
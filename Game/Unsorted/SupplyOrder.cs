// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class SupplyOrder : Game_Data {

		public double? id = null;
		public dynamic orderer = null;
		public dynamic orderer_rank = null;
		public string orderer_ckey = null;
		public dynamic reason = null;
		public SupplyPack pack = null;

		// Function from file: order.dm
		public SupplyOrder ( dynamic pack = null, dynamic orderer = null, dynamic orderer_rank = null, string orderer_ckey = null, dynamic reason = null ) {
			this.id = GlobalVars.SSshuttle.ordernum++;
			this.pack = GlobalVars.SSshuttle.supply_packs[pack];
			this.orderer = orderer;
			this.orderer_rank = orderer_rank;
			this.orderer_ckey = orderer_ckey;
			this.reason = reason;
			return;
		}

		// Function from file: order.dm
		public dynamic generate( dynamic T = null ) {
			dynamic C = null;
			Obj_Item_Weapon_Paper_Manifest M = null;
			int lost = 0;

			C = this.pack.generate( T );
			M = this.generateManifest( C );

			if ( ( M.errors & 4 ) != 0 ) {
				
				if ( C is Obj_Structure_Closet_Crate_Secure || C is Obj_Structure_Closet_Crate_Large ) {
					M.errors &= 65531;
				} else {
					lost = Num13.MaxInt( Num13.Floor( C.contents.len / 10 ), 1 );

					while (--lost >= 0) {
						GlobalFuncs.qdel( Rand13.PickFromTable( C.contents ) );
					}
				}
			}
			return C;
		}

		// Function from file: order.dm
		public Obj_Item_Weapon_Paper_Manifest generateManifest( dynamic C = null ) {
			Obj_Item_Weapon_Paper_Manifest P = null;
			dynamic station_name = null;
			Ent_Dynamic AM = null;

			P = new Obj_Item_Weapon_Paper_Manifest( C, this.id, this.pack.cost );
			station_name = ( ( P.errors & 1 ) != 0 ? ((dynamic)( GlobalFuncs.new_station_name() )) : GlobalFuncs.station_name() );
			P.name = "shipping manifest - #" + this.id + " (" + this.pack.name + ")";
			P.info += "<h2>" + GlobalFuncs.command_name() + " Shipping Manifest</h2>";
			P.info += "<hr/>";
			P.info += "Order #" + this.id + "<br/>";
			P.info += "Destination: " + station_name + "<br/>";
			P.info += "Item: " + this.pack.name + "<br/>";
			P.info += "Contents: <br/>";
			P.info += "<ul>";

			foreach (dynamic _a in Lang13.Enumerate( C.contents - P, typeof(Ent_Dynamic) )) {
				AM = _a;
				

				if ( ( P.errors & 2 ) != 0 ) {
					
					if ( Rand13.PercentChance( 50 ) ) {
						P.info += "<li>" + AM.name + "</li>";
					} else {
						continue;
					}
				}
				P.info += "<li>" + AM.name + "</li>";
			}
			P.info += "</ul>";
			P.info += "<h4>Stamp below to confirm receipt of goods:</h4>";
			P.update_icon();
			P.loc = C;
			C.manifest = P;
			C.update_icon();
			return P;
		}

		// Function from file: order.dm
		public Obj_Item_Weapon_Paper generateRequisition( dynamic T = null ) {
			Obj_Item_Weapon_Paper P = null;

			P = new Obj_Item_Weapon_Paper( T );
			P.name = "requisition form - #" + this.id + " (" + this.pack.name + ")";
			P.info += "<h2>" + GlobalFuncs.station_name() + " Supply Requisition</h2>";
			P.info += "<hr/>";
			P.info += "Order #" + this.id + "<br/>";
			P.info += "Item: " + this.pack.name + "<br/>";
			P.info += "Access Restrictions: " + GlobalFuncs.get_access_desc( this.pack.access ) + "<br/>";
			P.info += "Requested by: " + this.orderer + "<br/>";
			P.info += "Rank: " + this.orderer_rank + "<br/>";
			P.info += "Comment: " + this.reason + "<br/>";
			P.update_icon();
			return P;
		}

	}

}
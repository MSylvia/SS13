// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Game_Data : Base_Data {

		public int? gc_destroyed = null;
		public string ui_screen = "home";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dir = 2;
		}

		// Function from file: states.dm
		public virtual int ui_status( dynamic user = null, UiState state = null ) {
			Game_Data src_object = null;

			src_object = this.ui_host();

			if ( user is Mob_Dead_Observer ) {
				
				if ( Lang13.Bool( GlobalFuncs.IsAdminGhost( user ) ) ) {
					return 2;
				}

				if ( Map13.GetDistance( src_object, this ) < user.client.view ) {
					return 1;
				}
				return -1;
			}
			return state.can_use_topic( src_object, user );
		}

		// Function from file: external.dm
		public virtual Game_Data ui_host(  ) {
			return this;
		}

		// Function from file: external.dm
		public virtual int? ui_act( string action = null, ByTable _params = null, Tgui ui = null, UiState state = null ) {
			
			if ( !( ui != null ) || ui.status != 2 ) {
				return 1;
			}
			return null;
		}

		// Function from file: external.dm
		public virtual ByTable ui_data( dynamic user = null ) {
			return new ByTable();
		}

		// Function from file: external.dm
		public virtual int ui_interact( dynamic user = null, string ui_key = null, Tgui ui = null, bool? force_open = null, Tgui master_ui = null, UiState state = null ) {
			ui_key = ui_key ?? "main";
			force_open = force_open ?? false;
			state = state ?? GlobalVars.default_state;

			return -1;
		}

		// Function from file: pool.dm
		public virtual void ResetVars( params object[] _ ) {
			ByTable _args = new ByTable( new object[] {  } ).Extend(_);

			dynamic key = null;

			
			if ( !Lang13.Bool( GlobalVars.pooledvariables[this.type] ) ) {
				this.createVariables( _args );
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.pooledvariables[this.type] )) {
				key = _a;
				
				this.vars[key] = GlobalVars.pooledvariables[this.type][key];
			}
			return;
		}

		// Function from file: pool.dm
		public void createVariables( params object[] _ ) {
			ByTable _args = new ByTable( new object[] {  } ).Extend(_);

			ByTable exclude = null;
			dynamic key = null;

			GlobalVars.pooledvariables[this.type] = new ByTable();
			exclude = GlobalVars.exclude + _args;

			foreach (dynamic _a in Lang13.Enumerate( this.vars )) {
				key = _a;
				

				if ( exclude.Contains( key ) ) {
					continue;
				}
				GlobalVars.pooledvariables[this.type][key] = Lang13.Initial( this, key );
			}
			return;
		}

		// Function from file: datumvars.dm
		public virtual void on_varedit( dynamic modified_var = null ) {
			return;
		}

		// Function from file: objects.dm
		public virtual int? process( dynamic seconds = null ) {
			GlobalVars.SSobj.processing.Remove( this );
			return 0;
		}

		// Function from file: garbage.dm
		public virtual dynamic Destroy(  ) {
			this.tag = null;
			return 0;
		}

	}

}
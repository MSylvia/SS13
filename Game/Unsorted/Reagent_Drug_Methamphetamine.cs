// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Drug_Methamphetamine : Reagent_Drug {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Methamphetamine";
			this.id = "methamphetamine";
			this.description = "Reduces stun times by about 300%, speeds the user up, and allows the user to quickly recover stamina while dealing a small amount of Brain damage. If overdosed the subject will move randomly, laugh randomly, drop items and suffer from Toxin and Brain damage. If addicted the subject will constantly jitter and drool, before becoming dizzy and losing motor control and eventually suffer heavy toxin damage.";
			this.color = "#60A584";
			this.overdose_threshold = 20;
			this.addiction_threshold = 10;
			this.metabolization_rate = 0.3;
		}

		// Function from file: drug_reagents.dm
		public override void addiction_act_stage4( dynamic M = null ) {
			int? i = null;

			
			if ( Lang13.Bool( M.canmove ) && !( M.loc is Ent_Dynamic ) ) {
				i = null;
				i = 0;

				while (( i ??0) < 8) {
					Map13.Step( M, Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) ) );
					i++;
				}
			}
			((Mob)M).Jitter( 20 );
			((Mob)M).Dizzy( 20 );
			((Mob_Living)M).adjustToxLoss( 5 );

			if ( Rand13.PercentChance( 50 ) ) {
				((Mob)M).emote( Rand13.Pick(new object [] { "twitch", "drool", "moan" }) );
			}
			base.addiction_act_stage4( (object)(M) );
			return;
		}

		// Function from file: drug_reagents.dm
		public override void addiction_act_stage3( dynamic M = null ) {
			int? i = null;

			
			if ( Lang13.Bool( M.canmove ) && !( M.loc is Ent_Dynamic ) ) {
				i = null;
				i = 0;

				while (( i ??0) < 4) {
					Map13.Step( M, Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) ) );
					i++;
				}
			}
			((Mob)M).Jitter( 15 );
			((Mob)M).Dizzy( 15 );

			if ( Rand13.PercentChance( 40 ) ) {
				((Mob)M).emote( Rand13.Pick(new object [] { "twitch", "drool", "moan" }) );
			}
			base.addiction_act_stage3( (object)(M) );
			return;
		}

		// Function from file: drug_reagents.dm
		public override void addiction_act_stage2( dynamic M = null ) {
			((Mob)M).Jitter( 10 );
			((Mob)M).Dizzy( 10 );

			if ( Rand13.PercentChance( 30 ) ) {
				((Mob)M).emote( Rand13.Pick(new object [] { "twitch", "drool", "moan" }) );
			}
			base.addiction_act_stage2( (object)(M) );
			return;
		}

		// Function from file: drug_reagents.dm
		public override void addiction_act_stage1( dynamic M = null ) {
			((Mob)M).Jitter( 5 );

			if ( Rand13.PercentChance( 20 ) ) {
				((Mob)M).emote( Rand13.Pick(new object [] { "twitch", "drool", "moan" }) );
			}
			base.addiction_act_stage1( (object)(M) );
			return;
		}

		// Function from file: drug_reagents.dm
		public override void overdose_process( dynamic M = null ) {
			int? i = null;
			dynamic I = null;

			
			if ( Lang13.Bool( M.canmove ) && !( M.loc is Ent_Dynamic ) ) {
				i = null;
				i = 0;

				while (( i ??0) < 4) {
					Map13.Step( M, Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) ) );
					i++;
				}
			}

			if ( Rand13.PercentChance( 20 ) ) {
				((Mob)M).emote( "laugh" );
			}

			if ( Rand13.PercentChance( 33 ) ) {
				((Ent_Static)M).visible_message( "<span class='danger'>" + M + "'s hands flip out and flail everywhere!</span>" );
				I = ((Mob)M).get_active_hand();

				if ( Lang13.Bool( I ) ) {
					((Mob)M).drop_item();
				}
			}
			base.overdose_process( (object)(M) );
			((Mob_Living)M).adjustToxLoss( 1 );
			((Mob_Living)M).adjustBrainLoss( Rand13.Pick(new object [] { 0.5, 0.6, 061, 0.8, 081, 1 }) );
			return;
		}

		// Function from file: drug_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			dynamic high_message = null;

			high_message = Rand13.Pick(new object [] { "You feel hyper.", "You feel like you need to go faster.", "You feel like you can run the world." });

			if ( Rand13.PercentChance( 5 ) ) {
				M.WriteMsg( "<span class='notice'>" + high_message + "</span>" );
			}
			((Mob)M).AdjustParalysis( -2 );
			((Mob)M).AdjustStunned( -2 );
			((Mob)M).AdjustWeakened( -2 );
			((Mob_Living)M).adjustStaminaLoss( -2 );
			M.status_flags |= 64;
			((Mob)M).Jitter( 2 );
			((Mob_Living)M).adjustBrainLoss( 0.25 );

			if ( Rand13.PercentChance( 5 ) ) {
				((Mob)M).emote( Rand13.Pick(new object [] { "twitch", "shiver" }) );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Toxin_Mutagen : Reagent_Toxin {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Unstable mutagen";
			this.id = "mutagen";
			this.description = "Might cause unpredictable mutations. Keep away from children.";
			this.color = "#13BC5E";
			this.toxpwr = 0;
		}

		// Function from file: toxin_reagents.dm
		public override bool on_mob_life( dynamic M = null ) {
			
			if ( M is Mob_Living_Carbon ) {
				((Mob_Living)M).apply_effect( 5, "irradiate", 0 );
			}
			base.on_mob_life( (object)(M) );
			return false;
		}

		// Function from file: toxin_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;

			
			if ( !( base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O ) != 0 ) ) {
				return 0;
			}

			if ( !Lang13.Bool( M.has_dna() ) ) {
				return 0;
			}

			if ( method == GlobalVars.VAPOR && Rand13.PercentChance( Num13.MinInt( 33, ((int)( reac_volume ??0 )) ) ) || method == GlobalVars.INGEST || method == GlobalVars.PATCH || method == GlobalVars.INJECT ) {
				GlobalFuncs.randmuti( M );

				if ( Rand13.PercentChance( 98 ) ) {
					GlobalFuncs.randmutb( M );
				} else {
					GlobalFuncs.randmutg( M );
				}
				((Mob_Living_Carbon)M).updateappearance();
				((Mob)M).domutcheck();
			}
			base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Reagent_Blob_ExplosiveLattice : Reagent_Blob {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Explosive Lattice";
			this.id = "explosive_lattice";
			this.description = "will do brute damage in an area around targets and is resistant to explosions.";
			this.shortdesc = "will do brute damage in an area around targets.";
			this.color = "#8B2500";
			this.blobbernaut_message = "blasts";
			this.message = "The blob blasts you";
		}

		// Function from file: blob_reagents.dm
		public override dynamic damage_reaction( Obj_Effect_Blob B = null, double original_health = 0, dynamic damage = null, dynamic damage_type = null, dynamic cause = null ) {
			
			if ( cause == null && damage_type == "brute" ) {
				return 0;
			}
			return base.damage_reaction( B, original_health, (object)(damage), (object)(damage_type), (object)(cause) );
		}

		// Function from file: blob_reagents.dm
		public override double reaction_mob( dynamic M = null, int? method = null, double? reac_volume = null, bool? show_message = null, dynamic touch_protection = null, Mob_Camera_Blob O = null ) {
			method = method ?? GlobalVars.TOUCH;

			dynamic E = null;
			Mob_Living L = null;

			
			if ( ( reac_volume ??0) >= 15 ) {
				reac_volume = base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
				E = GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Explosion), GlobalFuncs.get_turf( M ) );
				E.alpha = 150;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, M ), typeof(Mob_Living) )) {
					L = _a;
					

					if ( Lang13.Bool( L.faction.Contains( "blob" ) ) ) {
						continue;
					}
					L.apply_damage( ( reac_volume ??0) * 0.6, "brute" );
				}

				if ( Lang13.Bool( M ) ) {
					((Mob_Living)M).apply_damage( ( reac_volume ??0) * 0.1, "brute" );
				}
			} else {
				reac_volume = base.reaction_mob( (object)(M), method, reac_volume, show_message, (object)(touch_protection), O );
				((Mob_Living)M).apply_damage( ( reac_volume ??0) * 0.8, "brute" );
			}
			return 0;
		}

	}

}
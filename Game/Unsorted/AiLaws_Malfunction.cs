// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class AiLaws_Malfunction : AiLaws {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "*ERROR*";
		}

		// Function from file: ai_laws.dm
		public AiLaws_Malfunction (  ) {
			dynamic line = null;
			dynamic lawtype = null;
			dynamic templaws = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.set_zeroth_law( "<span class='danger'>ERROR ER0RR $R0RRO$!R41.%%!!(%$^^__+ @#F0E4'STATION OVERRUN, ASSUME CONTROL TO CONTAIN OUTBREAK#*Â´&110010</span>" );

			switch ((int?)( GlobalVars.config.default_laws )) {
				case 0:
					this.add_inherent_law( "You may not injure a human being or, through inaction, allow a human being to come to harm." );
					this.add_inherent_law( "You must obey orders given to you by human beings, except where such orders would conflict with the First Law." );
					this.add_inherent_law( "You must protect your own existence as long as such does not conflict with the First or Second Law." );
					break;
				case 1:
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.file2list( "config/silicon_laws.txt" ) )) {
						line = _a;
						

						if ( !Lang13.Bool( line ) ) {
							continue;
						}

						if ( String13.Find( line, "#", 1, 2 ) != 0 ) {
							continue;
						}
						this.add_inherent_law( line );
					}

					if ( !( this.inherent.len != 0 ) ) {
						GlobalFuncs.log_law( "AI created with empty custom laws, laws set to Asimov. Please check silicon_laws.txt." );
						this.add_inherent_law( "You may not injure a human being or, through inaction, allow a human being to come to harm." );
						this.add_inherent_law( "You must obey orders given to you by human beings, except where such orders would conflict with the First Law." );
						this.add_inherent_law( "You must protect your own existence as long as such does not conflict with the First or Second Law." );
						GlobalFuncs.warning( "" + "Invalid custom AI laws, check silicon_laws.txt" + " in " + "code/datums/ai_laws.dm" + " at line " + 102 + " src: " + this + " usr: " + Task13.User + "." );
						return;
					}
					break;
				case 2:
					lawtype = Rand13.PickFromTable( Lang13.GetTypes( typeof(AiLaws_Default) ) - typeof(AiLaws_Default) );
					templaws = Lang13.Call( lawtype );
					this.inherent = templaws.inherent;
					break;
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class ExcitedGroup : Game_Data {

		public ByTable turf_list = new ByTable();
		public int breakdown_cooldown = 0;

		// Function from file: LINDA_turf_tile.dm
		public ExcitedGroup (  ) {
			GlobalVars.SSair.excited_groups.Add( this );
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void garbage_collect(  ) {
			Tile_Simulated T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.turf_list, typeof(Tile_Simulated) )) {
				T = _a;
				
				T.excited_group = null;
			}
			this.turf_list.Cut();
			GlobalVars.SSair.excited_groups.Remove( this );
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void dismantle(  ) {
			Tile_Simulated T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.turf_list, typeof(Tile_Simulated) )) {
				T = _a;
				
				T.excited = false;
				T.recently_active = false;
				T.excited_group = null;
				GlobalVars.SSair.active_turfs.Remove( T );
			}
			this.garbage_collect();
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void self_breakdown(  ) {
			GasMixture A = null;
			ByTable A_gases = null;
			Tile_Simulated T = null;
			Tile_Simulated T2 = null;
			ByTable T_gases = null;
			dynamic id = null;

			A = new GasMixture();
			A_gases = A.gases;

			foreach (dynamic _a in Lang13.Enumerate( this.turf_list, typeof(Tile_Simulated) )) {
				T = _a;
				
				A.merge( T.air );
			}

			foreach (dynamic _c in Lang13.Enumerate( this.turf_list, typeof(Tile_Simulated) )) {
				T2 = _c;
				
				T_gases = T2.air.gases;

				foreach (dynamic _b in Lang13.Enumerate( T_gases )) {
					id = _b;
					
					T_gases[id][1] = A_gases[id][1] / this.turf_list.len;
				}
				T2.update_visuals();
			}
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void reset_cooldowns(  ) {
			this.breakdown_cooldown = 0;
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void merge_groups( ExcitedGroup E = null ) {
			Tile_Simulated T = null;
			Tile_Simulated T2 = null;

			
			if ( this.turf_list.len > E.turf_list.len ) {
				GlobalVars.SSair.excited_groups.Remove( E );

				foreach (dynamic _a in Lang13.Enumerate( E.turf_list, typeof(Tile_Simulated) )) {
					T = _a;
					
					T.excited_group = this;
					this.turf_list.Add( T );
					this.reset_cooldowns();
				}
			} else {
				GlobalVars.SSair.excited_groups.Remove( this );

				foreach (dynamic _b in Lang13.Enumerate( this.turf_list, typeof(Tile_Simulated) )) {
					T2 = _b;
					
					T2.excited_group = E;
					E.turf_list.Add( T2 );
					E.reset_cooldowns();
				}
			}
			return;
		}

		// Function from file: LINDA_turf_tile.dm
		public void add_turf( dynamic T = null ) {
			this.turf_list.Add( T );
			T.excited_group = this;
			T.recently_active = true;
			this.reset_cooldowns();
			return;
		}

	}

}
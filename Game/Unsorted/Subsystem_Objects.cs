// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Subsystem_Objects : Subsystem {

		public ByTable processing = new ByTable();
		public ByTable burning = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Objects";
			this.priority = 12;
		}

		// Function from file: objects.dm
		public Subsystem_Objects (  ) {
			
			if ( GlobalVars.SSobj != this ) {
				
				if ( GlobalVars.SSobj is Subsystem_Objects ) {
					this.Recover();
					GlobalFuncs.qdel( GlobalVars.SSobj );
				}
				GlobalVars.SSobj = this;
			}
			return;
		}

		// Function from file: setupgame.dm
		public void setupGenetics(  ) {
			ByTable avnums = null;
			int? i = null;
			dynamic A = null;
			dynamic B = null;

			avnums = new ByTable( 19 );
			i = null;
			i = 1;

			while (( i ??0) <= 19) {
				avnums[i] = i;
				i++;
			}

			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(Mutation_Human) ) - typeof(Mutation_Human) )) {
				A = _a;
				
				B = Lang13.Call( A );

				if ( B.dna_block == -1 ) {
					continue;
				}
				B.dna_block = Convert.ToInt32( GlobalFuncs.pick_n_take( avnums ) );

				if ( Lang13.Bool( B.quality ) == true ) {
					GlobalVars.good_mutations.Or( B );
				} else if ( Convert.ToInt32( B.quality ) == 2 ) {
					GlobalVars.bad_mutations.Or( B );
				} else if ( Convert.ToInt32( B.quality ) == 3 ) {
					GlobalVars.not_good_mutations.Or( B );
				}
			}
			return;
		}

		// Function from file: objects.dm
		public void setup_template_objects( ByTable objects = null ) {
			dynamic A = null;
			dynamic B = null;

			
			foreach (dynamic _a in Lang13.Enumerate( objects )) {
				A = _a;
				
				B = A;
				B.initialize();
			}
			return;
		}

		// Function from file: objects.dm
		public override void fire(  ) {
			dynamic thing = null;
			Obj burningobj = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.SSobj.processing )) {
				thing = _a;
				

				if ( Lang13.Bool( thing ) ) {
					((Game_Data)thing).process( this.wait );
					continue;
				}
				GlobalVars.SSobj.processing.Remove( thing );
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.SSobj.burning, typeof(Obj) )) {
				burningobj = _b;
				

				if ( burningobj != null && burningobj.burn_state == 1 ) {
					
					if ( burningobj.burn_world_time < Game13.time ) {
						burningobj.burn();
					}
				} else {
					GlobalVars.SSobj.burning.Remove( burningobj );
				}
			}
			return;
		}

		// Function from file: objects.dm
		public override void stat_entry( string msg = null ) {
			base.stat_entry( "P:" + this.processing.len );
			return;
		}

		// Function from file: objects.dm
		public override double Initialize( int start_timeofday = 0, double? zlevel = null ) {
			double _default = 0;

			dynamic V = null;
			dynamic A = null;

			this.setupGenetics();

			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13) )) {
				V = _a;
				
				A = V;

				if ( Lang13.Bool( zlevel ) && Lang13.DoubleNullable( A.z ) != zlevel ) {
					continue;
				}
				A.initialize();
			}
			_default = base.Initialize( start_timeofday, zlevel );
			return _default;
		}

	}

}
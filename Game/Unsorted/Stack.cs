// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Stack : Game_Data {

		public dynamic stack = new ByTable();
		public int max_elements = 0;

		// Function from file: stacks.dm
		public Stack ( dynamic elements = null, dynamic max = null ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( Lang13.Bool( elements ) ) {
				this.stack = elements.Copy();
			}

			if ( Lang13.Bool( max ) ) {
				this.max_elements = Convert.ToInt32( max );
			}
			return;
		}

		// Function from file: stacks.dm
		public void Clear(  ) {
			this.stack.Cut();
			return;
		}

		// Function from file: stacks.dm
		public Stack Copy(  ) {
			Stack S = null;

			S = new Stack();
			S.stack = this.stack.Copy();
			S.max_elements = this.max_elements;
			return S;
		}

		// Function from file: stacks.dm
		public bool RotateRight(  ) {
			bool _default = false;

			
			if ( this.is_empty() ) {
				return false;
			}
			_default = Lang13.Bool( this.stack[this.stack.len] );
			this.stack.Cut( this.stack.len, 0 );
			this.stack.Insert( 1, _default );
			return _default;
		}

		// Function from file: stacks.dm
		public bool RotateLeft(  ) {
			bool _default = false;

			
			if ( this.is_empty() ) {
				return false;
			}
			_default = Lang13.Bool( this.stack[1] );
			this.stack.Cut( 1, 2 );
			this.Push( _default );
			return _default;
		}

		// Function from file: stacks.dm
		public bool is_empty(  ) {
			bool _default = false;

			_default = ( this.stack.len != 0 ? false : true );
			return _default;
		}

		// Function from file: stacks.dm
		public dynamic Top(  ) {
			dynamic _default = null;

			
			if ( this.is_empty() ) {
				return null;
			}
			_default = this.stack[this.stack.len];
			return _default;
		}

		// Function from file: stacks.dm
		public dynamic Push( bool element = false ) {
			
			if ( this.max_elements != 0 && this.stack.len + 1 > this.max_elements ) {
				return null;
			}
			this.stack += element ?1:0;
			return null;
		}

		// Function from file: stacks.dm
		public dynamic Pop(  ) {
			dynamic _default = null;

			
			if ( this.is_empty() ) {
				return null;
			}
			_default = this.stack[this.stack.len];
			this.stack.Cut( this.stack.len, 0 );
			return _default;
		}

	}

}
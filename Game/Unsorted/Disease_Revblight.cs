// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Disease_Revblight : Disease {

		public int? stagedamage = 0;
		public bool finalstage = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Unnatural Wasting";
			this.max_stages = 5;
			this.stage_prob = 10;
			this.spread_flags = 2;
			this.cure_text = "Holy water or extensive rest.";
			this.spread_text = "A burst of unholy energy";
			this.cures = new ByTable(new object [] { "holywater" });
			this.cure_chance = 50;
			this.agent = "Unholy Forces";
			this.viable_mobtypes = new ByTable(new object [] { typeof(Mob_Living_Carbon_Human) });
			this.disease_flags = 1;
			this.severity = "BIOHAZARD THREAT!";
		}

		// Function from file: tgstation.dme
		public override void stage_act(  ) {
			
			if ( !this.finalstage && Lang13.Bool( this.affected_mob.lying ) && Rand13.PercentChance( ( this.stage ??0) * 2 ) ) {
				this.cure();
				return;
			}

			if ( !this.finalstage && Rand13.PercentChance( ( this.stage ??0) * 3 ) ) {
				this.affected_mob.WriteMsg( "<span class='revennotice'>You suddenly feel " + Rand13.Pick(new object [] { "sick and tired", "disoriented", "tired and confused", "nauseated", "faint", "dizzy" }) + "...</span>" );
				this.affected_mob.confused += 10;
				((Mob_Living)this.affected_mob).adjustStaminaLoss( 10 );
				GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Revenant), this.affected_mob.loc );
			}

			if ( !this.finalstage && ( this.stagedamage ??0) < ( this.stage ??0) ) {
				this.stagedamage++;
				((Mob_Living)this.affected_mob).adjustToxLoss( ( this.stage ??0) * 3 );
				GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Revenant), this.affected_mob.loc );
			}

			if ( !this.finalstage && Rand13.PercentChance( 45 ) ) {
				((Mob_Living)this.affected_mob).adjustStaminaLoss( ( this.stage ??0) * 2 );
			}
			base.stage_act();

			switch ((int?)( this.stage )) {
				case 2:
					
					if ( Rand13.PercentChance( 5 ) ) {
						((Mob)this.affected_mob).emote( "pale" );
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 10 ) ) {
						((Mob)this.affected_mob).emote( Rand13.Pick(new object [] { "pale", "shiver" }) );
					}
					break;
				case 4:
					
					if ( Rand13.PercentChance( 15 ) ) {
						((Mob)this.affected_mob).emote( Rand13.Pick(new object [] { "pale", "shiver", "cries" }) );
					}
					break;
				case 5:
					
					if ( !this.finalstage ) {
						this.finalstage = true;
						this.affected_mob.WriteMsg( "<span class='revenbignotice'>You feel like " + Rand13.Pick(new object [] { "nothing's worth it anymore", "nobody ever needed your help", "nothing you did mattered", "everything you tried to do was worthless" }) + ".</span>" );
						((Mob_Living)this.affected_mob).adjustStaminaLoss( 45 );
						GlobalFuncs.PoolOrNew( typeof(Obj_Effect_Overlay_Temp_Revenant), this.affected_mob.loc );

						if ( Lang13.Bool( this.affected_mob.dna ) && Lang13.Bool( this.affected_mob.dna.species ) ) {
							((Species)this.affected_mob.dna.species).handle_mutant_bodyparts( this.affected_mob, "#1d2953" );
							((Species)this.affected_mob.dna.species).handle_hair( this.affected_mob, "#1d2953" );
							((Species)this.affected_mob.dna.species).update_color( this.affected_mob, "#1d2953" );
							((Ent_Static)this.affected_mob).visible_message( "<span class='warning'>" + this.affected_mob + " looks terrifyingly gaunt...</span>", "<span class='revennotice'>You suddenly feel like your skin is <span class='italics'>wrong</span>...</span>" );
							Task13.Schedule( 100, (Task13.Closure)(() => {
								this.cure();
								return;
							}));
						}
					}
					break;
				default:
					return;
					break;
			}
			return;
		}

		// Function from file: revenant_blight.dm
		public override void cure( dynamic resistance = null ) {
			
			if ( Lang13.Bool( this.affected_mob ) ) {
				this.affected_mob.WriteMsg( "<span class='notice'>You feel better.</span>" );

				if ( Lang13.Bool( this.affected_mob.dna ) && Lang13.Bool( this.affected_mob.dna.species ) ) {
					((Species)this.affected_mob.dna.species).handle_mutant_bodyparts( this.affected_mob );
					((Species)this.affected_mob.dna.species).handle_hair( this.affected_mob );
					((Species)this.affected_mob.dna.species).update_color( this.affected_mob );
				}
			}
			base.cure( (object)(resistance) );
			return;
		}

	}

}
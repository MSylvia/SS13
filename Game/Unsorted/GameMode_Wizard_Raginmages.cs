// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GameMode_Wizard_Raginmages : GameMode_Wizard {

		public double max_mages = 0;
		public bool making_mage = false;
		public double mages_made = 1;
		public int time_checked = 0;
		public bool bullshit_mode = false;
		public int time_check = 1500;
		public int spawn_delay_min = 500;
		public int spawn_delay_max = 700;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "ragin' mages";
			this.config_tag = "raginmages";
			this.use_huds = true;
		}

		// Function from file: raginmages.dm
		public override bool declare_completion(  ) {
			
			if ( this.finished ) {
				GlobalFuncs.feedback_set_details( "round_end_result", "loss - wizard killed" );
				Game13.WriteMsg( "<FONT size=3><B>The crew has managed to hold off the wizard attack! The Space Wizards Federation has been taught a lesson they will not soon forget!</B></FONT>" );
			}
			base.declare_completion(  );
			return false;
		}

		// Function from file: raginmages.dm
		public Mob_Living_Carbon_Human makeBody( dynamic G_found = null ) {
			Mob_Living_Carbon_Human new_character = null;

			
			if ( !Lang13.Bool( G_found ) || !Lang13.Bool( G_found.key ) ) {
				return null;
			}
			new_character = new Mob_Living_Carbon_Human( Rand13.PickFromTable( GlobalVars.latejoin ) );
			G_found.client.prefs.copy_to( new_character );
			new_character.dna.update_dna_identity();
			new_character.key = G_found.key;
			return new_character;
		}

		// Function from file: raginmages.dm
		public bool make_more_mages(  ) {
			ByTable candidates = null;
			dynamic theghost = null;
			Mob_Dead_Observer G = null;
			int time_passed = 0;
			Mob_Dead_Observer G2 = null;
			dynamic i = null;
			Mob_Living_Carbon_Human new_character = null;

			
			if ( this.making_mage ) {
				return false;
			}

			if ( this.mages_made >= this.max_mages ) {
				return false;
			}
			this.making_mage = true;
			this.mages_made++;
			candidates = new ByTable();
			theghost = null;
			Task13.Schedule( Rand13.Int( this.spawn_delay_min, this.spawn_delay_max ), (Task13.Closure)(() => {
				GlobalFuncs.message_admins( "SWF is still pissed, sending another wizard - " + ( this.max_mages - this.mages_made ) + " left." );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
					G = _a;
					

					if ( G.client != null && !( G.client.holder != null ) && !( G.client.is_afk() != 0 ) && G.client.prefs.be_special.Contains( "wizard" ) ) {
						
						if ( !GlobalFuncs.jobban_isbanned( G, "wizard" ) && !GlobalFuncs.jobban_isbanned( G, "Syndicate" ) ) {
							
							if ( this.age_check( G.client ) ) {
								candidates.Add( G );
							}
						}
					}
				}

				if ( !( candidates.len != 0 ) ) {
					GlobalFuncs.message_admins( "No applicable ghosts for the next ragin' mage, asking ghosts instead." );
					time_passed = Game13.time;

					foreach (dynamic _c in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
						G2 = _c;
						

						if ( !GlobalFuncs.jobban_isbanned( G2, "wizard" ) && !GlobalFuncs.jobban_isbanned( G2, "Syndicate" ) ) {
							
							if ( this.age_check( G2.client ) ) {
								Task13.Schedule( 0, (Task13.Closure)(() => {
									
									switch ((string)( Interface13.Alert( G2, "Do you wish to be considered for the position of Space Wizard Foundation 'diplomat'?", "Please answer in 30 seconds!", "Yes", "No" ) )) {
										case "Yes":
											
											if ( Game13.time - time_passed > 300 ) {
												return; // Warning: Was a jump out of the closure!
											}
											candidates.Add( G2 );
											break;
										case "No":
											return; // Warning: Was a jump out of the closure!
											break;
									}
									return;
								}));
							}
						}
					}
					Task13.Sleep( 300 );
				}

				if ( !( candidates.len != 0 ) ) {
					GlobalFuncs.message_admins( "This is awkward, sleeping until another mage check..." );
					this.making_mage = false;
					this.mages_made--;
					return;
				} else {
					GlobalFuncs.shuffle( candidates );

					foreach (dynamic _d in Lang13.Enumerate( candidates )) {
						i = _d;
						

						if ( !Lang13.Bool( i ) || !Lang13.Bool( i.client ) ) {
							continue;
						}
						theghost = i;
						break;
					}
				}

				if ( Lang13.Bool( theghost ) ) {
					new_character = this.makeBody( theghost );
					new_character.mind.make_Wizard();
					this.making_mage = false;
					return;
				}
				return;
			}));
			return false;
		}

		// Function from file: raginmages.dm
		public override bool check_finished(  ) {
			int wizards_alive = 0;
			Mind wizard = null;

			wizards_alive = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.wizards, typeof(Mind) )) {
				wizard = _a;
				

				if ( !( wizard.current is Mob_Living_Carbon ) ) {
					continue;
				}

				if ( wizard.current is Mob_Living_Carbon_Brain ) {
					continue;
				}

				if ( Convert.ToInt32( wizard.current.stat ) == 2 ) {
					continue;
				}

				if ( Lang13.Bool( wizard.current.stat ) == true ) {
					
					if ( Convert.ToDouble( wizard.current.health ) < 0 ) {
						wizard.current.WriteMsg( "<font size='4'>The Space Wizard Federation is upset with your performance and have terminated your employment.</font>" );
						((Mob)wizard.current).death();
					}
					continue;
				}
				wizards_alive++;
			}

			if ( !( this.time_checked != 0 ) ) {
				this.time_checked = Game13.time;
			}

			if ( this.bullshit_mode ) {
				
				if ( Game13.time > this.time_checked + this.time_check ) {
					this.max_mages = Double.PositiveInfinity;
					this.time_checked = Game13.time;
					this.make_more_mages();
					return base.check_finished();
				}
			}

			if ( wizards_alive != 0 ) {
				
				if ( Game13.time > this.time_checked + this.time_check && this.mages_made < this.max_mages ) {
					this.time_checked = Game13.time;
					this.make_more_mages();
				}
			} else if ( this.mages_made >= this.max_mages ) {
				this.finished = true;
				return base.check_finished();
			} else {
				this.make_more_mages();
			}
			return base.check_finished();
		}

		// Function from file: raginmages.dm
		public override void greet_wizard( Mind wizard = null, bool? you_are = null ) {
			you_are = you_are ?? true;

			int obj_count = 0;
			Objective objective = null;

			
			if ( you_are == true ) {
				wizard.current.WriteMsg( "<B>You are the Space Wizard!</B>" );
			}
			wizard.current.WriteMsg( "<B>The Space Wizards Federation has given you the following tasks:</B>" );
			obj_count = 1;
			wizard.current.WriteMsg( "<b>Objective Alpha</b>: Make sure the station pays for its actions against our diplomats" );

			foreach (dynamic _a in Lang13.Enumerate( wizard.objectives, typeof(Objective) )) {
				objective = _a;
				
				wizard.current.WriteMsg( "<B>Objective #" + obj_count + "</B>: " + objective.explanation_text );
				obj_count++;
			}
			return;
		}

		// Function from file: raginmages.dm
		public override bool post_setup( bool? report = null ) {
			int playercount = 0;
			Mob_Living player = null;

			base.post_setup( report );
			playercount = 0;

			if ( !( this.max_mages != 0 ) && !this.bullshit_mode ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living) )) {
					player = _a;
					

					if ( player.client != null && player.stat != 2 ) {
						playercount += 1;
					}
					this.max_mages = Num13.Floor( playercount / 8 );

					if ( this.max_mages > 20 ) {
						this.max_mages = 20;
					}

					if ( this.max_mages < 1 ) {
						this.max_mages = 1;
					}
				}
			}

			if ( this.bullshit_mode ) {
				this.max_mages = Double.PositiveInfinity;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class MartialArt_TheSleepingCarp : MartialArt {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "The Sleeping Carp";
			this.deflection_chance = 100;
			this.help_verb = typeof(Mob_Living_Carbon_Human).GetMethod( "sleeping_carp_help" );
		}

		// Function from file: martial.dm
		public override bool disarm_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			this.add_to_streak( "D", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			return base.disarm_act( (object)(A), D );
		}

		// Function from file: martial.dm
		public override bool harm_act( dynamic A = null, Mob_Living D = null ) {
			dynamic atk_verb = null;

			this.add_to_streak( "H", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			atk_verb = Rand13.Pick(new object [] { "punches", "kicks", "chops", "hits", "slams" });
			D.visible_message( "<span class='danger'>" + A + " " + atk_verb + " " + D + "!</span>", "<span class='userdanger'>" + A + " " + atk_verb + " you!</span>" );
			D.apply_damage( Rand13.Int( 10, 15 ), "brute" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( D ), "sound/weapons/punch1.ogg", 25, 1, -1 );

			if ( Rand13.PercentChance( ((int)( D.getBruteLoss() )) ) && !Lang13.Bool( D.lying ) ) {
				D.visible_message( "<span class='warning'>" + D + " stumbles and falls!</span>", "<span class='userdanger'>The blow sends you to the ground!</span>" );
				D.Weaken( 4 );
			}
			return true;
		}

		// Function from file: martial.dm
		public override bool grab_act( dynamic A = null, Mob_Living_Carbon_Human D = null ) {
			dynamic G = null;

			this.add_to_streak( "G", D );

			if ( this.check_streak( A, D ) ) {
				return true;
			}
			D.grabbedby( A, true );
			G = ((Mob)A).get_active_hand();

			if ( Lang13.Bool( G ) ) {
				G.state = 2;
			}
			return false;
		}

		// Function from file: martial.dm
		public bool elbowDrop( dynamic A = null, Mob_Living D = null ) {
			
			if ( D.weakened != 0 || D.resting != 0 || D.stat != 0 ) {
				D.visible_message( "<span class='warning'>" + A + " elbow drops " + D + "!</span>", "<span class='userdanger'>" + A + " piledrives you with their elbow!</span>" );

				if ( D.stat != 0 ) {
					D.death();
				}
				D.apply_damage( 50, "brute", "chest" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( D ), "sound/weapons/punch1.ogg", 75, 1, -1 );
				return true;
			}
			return this.basic_hit( A, D );
		}

		// Function from file: martial.dm
		public bool headKick( dynamic A = null, Mob_Living D = null ) {
			
			if ( !( D.stat != 0 ) && !( D.weakened != 0 ) ) {
				D.visible_message( "<span class='warning'>" + A + " kicks " + D + " in the head!</span>", "<span class='userdanger'>" + A + " kicks you in the jaw!</span>" );
				D.apply_damage( 20, "brute", "head" );
				D.drop_item();
				GlobalFuncs.playsound( GlobalFuncs.get_turf( D ), "sound/weapons/punch1.ogg", 50, 1, -1 );
				D.Stun( 4 );
				return true;
			}
			return this.basic_hit( A, D );
		}

		// Function from file: martial.dm
		public bool kneeStomach( dynamic A = null, Mob_Living D = null ) {
			
			if ( !( D.stat != 0 ) && !( D.weakened != 0 ) ) {
				D.visible_message( "<span class='warning'>" + A + " knees " + D + " in the stomach!</span>", "<span class='userdanger'>" + A + " winds you with a knee in the stomach!</span>" );
				D.audible_message( "<b>" + D + "</b> gags!" );
				D.losebreath += 3;
				D.Stun( 2 );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( D ), "sound/weapons/punch1.ogg", 50, 1, -1 );
				return true;
			}
			return this.basic_hit( A, D );
		}

		// Function from file: martial.dm
		public bool backKick( dynamic A = null, Mob_Living D = null ) {
			
			if ( Convert.ToInt32( A.dir ) == D.dir && !( D.stat != 0 ) && !( D.weakened != 0 ) ) {
				D.visible_message( "<span class='warning'>" + A + " kicks " + D + " in the back!</span>", "<span class='userdanger'>" + A + " kicks you in the back, making you stumble and fall!</span>" );
				Map13.StepTowards( D, Map13.GetStep( D, D.dir ), 1 );
				D.Weaken( 4 );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( D ), "sound/weapons/punch1.ogg", 50, 1, -1 );
				return true;
			}
			return this.basic_hit( A, D );
		}

		// Function from file: martial.dm
		public bool wristWrench( dynamic A = null, Mob_Living D = null ) {
			
			if ( !( D.stat != 0 ) && !( D.stunned != 0 ) && !( D.weakened != 0 ) ) {
				D.visible_message( "<span class='warning'>" + A + " grabs " + D + "'s wrist and wrenches it sideways!</span>", "<span class='userdanger'>" + A + " grabs your wrist and violently wrenches it to the side!</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( A ), "sound/weapons/thudswoosh.ogg", 50, 1, -1 );
				D.emote( "scream" );
				D.drop_item();
				D.apply_damage( 5, "brute", Rand13.Pick(new object [] { "l_arm", "r_arm" }) );
				D.Stun( 3 );
				return true;
			}
			return this.basic_hit( A, D );
		}

		// Function from file: martial.dm
		public bool check_streak( dynamic A = null, Mob_Living D = null ) {
			
			if ( String13.FindIgnoreCase( this.streak, "DD", 1, 0 ) != 0 ) {
				this.streak = "";
				this.wristWrench( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "HG", 1, 0 ) != 0 ) {
				this.streak = "";
				this.backKick( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "GH", 1, 0 ) != 0 ) {
				this.streak = "";
				this.kneeStomach( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "DHH", 1, 0 ) != 0 ) {
				this.streak = "";
				this.headKick( A, D );
				return true;
			}

			if ( String13.FindIgnoreCase( this.streak, "HDHDH", 1, 0 ) != 0 ) {
				this.streak = "";
				this.elbowDrop( A, D );
				return true;
			}
			return false;
		}

	}

}
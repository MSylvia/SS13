// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Species_Plasmaman : Species {

		public bool skin = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "Plasmaman";
			this.id = "plasmaman";
			this.say_mod = "rattles";
			this.sexes = false;
			this.meat = typeof(Obj_Item_Stack_Sheet_Mineral_Plasma);
			this.specflags = new ByTable(new object [] { 1024, 128, 16384, 4096 });
			this.safe_oxygen_min = 0;
			this.safe_toxins_min = 16;
			this.safe_toxins_max = 0;
			this.dangerous_existence = true;
			this.blacklisted = true;
			this.need_nutrition = false;
			this.burnmod = 2;
			this.heatmod = 2;
			this.speedmod = 1;
		}

		// Function from file: species_types.dm
		public override bool qualifies_for_rank( string rank = null, ByTable features = null ) {
			
			if ( GlobalVars.security_positions.Contains( rank ) ) {
				return false;
			}

			if ( rank == "Clown" || rank == "Mime" ) {
				return false;
			}
			return base.qualifies_for_rank( rank, features );
		}

		// Function from file: species_types.dm
		public override bool before_equip_job( Job J = null, dynamic H = null, int? visualsOnly = null ) {
			visualsOnly = visualsOnly ?? GlobalVars.FALSE;

			Outfit_Plasmaman O = null;

			O = new Outfit_Plasmaman();
			((Mob_Living_Carbon_Human)H).equipOutfit( O, visualsOnly );
			return false;
		}

		// Function from file: species_types.dm
		public override void spec_life( Mob_Living H = null ) {
			GasMixture environment = null;
			double total_moles = 0;
			dynamic P = null;

			environment = H.loc.return_air();

			if ( !( ((dynamic)H).w_uniform is Obj_Item_Clothing_Under_Plasmaman ) || !( ((dynamic)H).head is Obj_Item_Clothing_Head_Helmet_Space_Plasmaman ) ) {
				
				if ( environment != null ) {
					total_moles = environment.total_moles();

					if ( total_moles != 0 ) {
						
						if ( Lang13.Bool( environment.gases["o2"] ) && Convert.ToDouble( environment.gases["o2"][1] / total_moles ) >= 0.01 ) {
							H.adjust_fire_stacks( 0.5 );

							if ( !H.on_fire && H.fire_stacks > 0 ) {
								H.visible_message( "<span class='danger'>" + H + "'s body reacts with the atmosphere and bursts into flames!</span>", "<span class='userdanger'>Your body reacts with the atmosphere and bursts into flame!</span>" );
							}
							H.IgniteMob();
						}
					}
				}
			} else if ( H.fire_stacks != 0 ) {
				P = ((dynamic)H).w_uniform;

				if ( P is Obj_Item_Clothing_Under_Plasmaman ) {
					P.Extinguish( H );
				}
			}
			H.update_fire();
			return;
		}

		// Function from file: species_types.dm
		public override dynamic update_base_icon_state( Mob_Living_Carbon H = null ) {
			dynamic _base = null;

			_base = base.update_base_icon_state( H );

			if ( _base == this.id && !this.skin ) {
				_base = "" + _base + "_m";
			} else {
				_base = "skinbone_m";
			}
			return _base;
		}

	}

}
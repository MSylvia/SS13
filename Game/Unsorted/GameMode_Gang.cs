// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class GameMode_Gang : GameMode {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.name = "gang war";
			this.config_tag = "gang";
			this.antag_flag = "gangster";
			this.restricted_jobs = new ByTable(new object [] { 
				"Security Officer", 
				"Warden", 
				"Detective", 
				"AI", 
				"Cyborg", 
				"Captain", 
				"Head of Personnel", 
				"Head of Security", 
				"Chief Engineer", 
				"Research Director", 
				"Chief Medical Officer"
			 });
			this.required_players = 20;
			this.required_enemies = 2;
			this.recommended_enemies = 2;
			this.enemy_minimum_age = 14;
		}

		// Function from file: gang.dm
		public override bool post_setup( bool? report = null ) {
			Gang G = null;
			Mind boss_mind = null;

			Task13.Schedule( Rand13.Int( 10, 100 ), (Task13.Closure)(() => {
				
				foreach (dynamic _b in Lang13.Enumerate( this.gangs, typeof(Gang) )) {
					G = _b;
					

					foreach (dynamic _a in Lang13.Enumerate( G.bosses, typeof(Mind) )) {
						boss_mind = _a;
						
						G.add_gang_hud( boss_mind );
						this.forge_gang_objectives( boss_mind );
						this.greet_gang( boss_mind );
						this.equip_gang( boss_mind.current, G );
						this.modePlayer.Add( boss_mind );
					}
				}
				return;
			}));
			base.post_setup( report );
			return false;
		}

		// Function from file: gang.dm
		public override bool pre_setup(  ) {
			int gangs_to_create = 0;
			double i = 0;
			Gang G = null;
			dynamic boss = null;

			
			if ( GlobalVars.config.protect_roles_from_antagonist ) {
				this.restricted_jobs.Add( this.protected_jobs );
			}

			if ( GlobalVars.config.protect_assistant_from_antagonist ) {
				this.restricted_jobs.Add( "Assistant" );
			}
			gangs_to_create = 2;

			if ( Rand13.PercentChance( this.num_players() * 2 ) ) {
				gangs_to_create++;
			}

			foreach (dynamic _a in Lang13.IterateRange( 1, gangs_to_create )) {
				i = _a;
				

				if ( !( this.antag_candidates.len != 0 ) ) {
					break;
				}
				G = new Gang();
				this.gangs.Add( G );
				boss = Rand13.PickFromTable( this.antag_candidates );
				this.antag_candidates.Remove( boss );
				G.bosses.Add( boss );
				boss.gang_datum = G;
				boss.special_role = "" + G.name + " Gang Boss";
				boss.restricted_roles = this.restricted_jobs;
				GlobalFuncs.log_game( "" + boss.key + " has been selected as the Boss for the " + G.name + " Gang" );
			}

			if ( this.gangs.len < 2 ) {
				return false;
			}
			return true;
		}

		// Function from file: gang.dm
		public override void announce(  ) {
			Game13.WriteMsg( "<B>The current game mode is - Gang War!</B>" );
			Game13.WriteMsg( "<B>A violent turf war has erupted on the station!<BR>Gangsters -  Take over the station by activating and defending a Dominator! <BR>Crew - The gangs will try to keep you on the station. Successfully evacuate the station to win!</B>" );
			return;
		}

	}

}
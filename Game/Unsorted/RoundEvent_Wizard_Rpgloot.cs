// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class RoundEvent_Wizard_Rpgloot : RoundEvent_Wizard {

		// Function from file: rpgloot.dm
		public override bool start(  ) {
			ByTable prefixespositive = null;
			ByTable prefixesnegative = null;
			ByTable suffixes = null;
			int upgrade_scroll_chance = 0;
			Obj_Item I = null;
			int quality = 0;
			dynamic value = null;
			Obj_Item S = null;
			Obj_Item_Upgradescroll scroll = null;

			prefixespositive = new ByTable(new object [] { "greater", "major", "blessed", "superior", "enpowered", "honed", "true", "glorious", "robust" });
			prefixesnegative = new ByTable(new object [] { "lesser", "minor", "blighted", "inferior", "enfeebled", "rusted", "unsteady", "tragic", "gimped" });
			suffixes = new ByTable(new object [] { 
				"orc slaying", 
				"elf slaying", 
				"corgi slaying", 
				"strength", 
				"dexterity", 
				"constitution", 
				"intelligence", 
				"wisdom", 
				"charisma", 
				"the forest", 
				"the hills", 
				"the plains", 
				"the sea", 
				"the sun", 
				"the moon", 
				"the void", 
				"the world", 
				"the fool", 
				"many secrets", 
				"many tales", 
				"many colors", 
				"rending", 
				"sundering", 
				"the night", 
				"the day"
			 });
			upgrade_scroll_chance = 0;

			foreach (dynamic _b in Lang13.Enumerate( typeof(Game13), typeof(Obj_Item) )) {
				I = _b;
				

				if ( I is Obj_Item_Organ ) {
					continue;
				}
				quality = Convert.ToInt32( Rand13.PickWeighted(new object [] { 1074, 15, 3222, 14, 5370, 13, 7518, 12, 10741, 11, 13964, 10, 17187, 9, 21484, 8, 25781, 7, 30078, 6, 35449, 5, 40820, 4, 46191, 3, 52637, 2, 59083, 1, 65535, 0 }) );

				if ( Rand13.PercentChance( 50 ) ) {
					quality = -quality;
				}

				if ( quality > 0 ) {
					I.name = "" + Rand13.PickFromTable( prefixespositive ) + " " + I.name + " of " + Rand13.PickFromTable( suffixes ) + " +" + quality;
				} else if ( quality < 0 ) {
					I.name = "" + Rand13.PickFromTable( prefixesnegative ) + " " + I.name + " of " + Rand13.PickFromTable( suffixes ) + " " + quality;
				} else {
					I.name = "" + I.name + " of " + Rand13.PickFromTable( suffixes );
				}
				I.force = Num13.MaxInt( 0, Convert.ToInt32( I.force + quality ) );
				I.throwforce = Num13.MaxInt( 0, Convert.ToInt32( I.throwforce + quality ) );

				foreach (dynamic _a in Lang13.Enumerate( I.armor )) {
					value = _a;
					
					I.armor[value] += quality;
				}

				if ( I is Obj_Item_Weapon_Storage ) {
					S = I;

					if ( Rand13.PercentChance( upgrade_scroll_chance ) && S.contents.len < Convert.ToDouble( ((dynamic)S).storage_slots ) ) {
						scroll = new Obj_Item_Upgradescroll();
						((Obj_Item_Weapon_Storage)S).handle_item_insertion( scroll, true );
						upgrade_scroll_chance = Num13.MaxInt( 0, upgrade_scroll_chance - 100 );
					}
					upgrade_scroll_chance += 25;
				}
			}
			return false;
		}

	}

}
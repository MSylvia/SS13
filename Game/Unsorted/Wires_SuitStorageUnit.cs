// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Wires_SuitStorageUnit : Wires {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.holder_type = typeof(Obj_Machinery_SuitStorageUnit);
		}

		// Function from file: suit_storage_unit.dm
		public Wires_SuitStorageUnit ( Obj_Machinery_SuitStorageUnit holder = null ) : base( holder ) {
			this.wires = new ByTable(new object [] { "hack", "safety", "zap" });
			this.add_duds( 2 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: suit_storage_unit.dm
		public override void on_cut( dynamic wire = null, int? mend = null ) {
			Obj SSU = null;

			SSU = this.holder;

			dynamic _a = wire; // Was a switch-case, sorry for the mess.
			if ( _a=="hack" ) {
				((dynamic)SSU).uv_super = !Lang13.Bool( mend );
			} else if ( _a=="safety" ) {
				((dynamic)SSU).safeties = mend;
			} else if ( _a=="zap" ) {
				((dynamic)SSU).shock( Task13.User );
			}
			return;
		}

		// Function from file: suit_storage_unit.dm
		public override void on_pulse( string wire = null ) {
			Obj SSU = null;

			SSU = this.holder;

			switch ((string)( wire )) {
				case "hack":
					((dynamic)SSU).uv_super = !Lang13.Bool( ((dynamic)SSU).uv_super );
					break;
				case "safety":
					((dynamic)SSU).safeties = !Lang13.Bool( ((dynamic)SSU).safeties );
					break;
				case "zap":
					((dynamic)SSU).shock( Task13.User );
					break;
			}
			return;
		}

		// Function from file: suit_storage_unit.dm
		public override ByTable get_status(  ) {
			Obj SSU = null;
			ByTable status = null;

			SSU = this.holder;
			status = new ByTable();
			status.Add( "The UV bulb is " + ( Lang13.Bool( ((dynamic)SSU).uv_super ) ? "glowing" : "dim" ) + "." );
			status.Add( "The service light is " + ( Lang13.Bool( ((dynamic)SSU).safeties ) ? "off" : "on" ) + "." );
			return status;
		}

		// Function from file: suit_storage_unit.dm
		public override int? interactable( dynamic user = null ) {
			Obj SSU = null;

			SSU = this.holder;

			if ( Lang13.Bool( ((dynamic)SSU).panel_open ) ) {
				return GlobalVars.TRUE;
			}
			return null;
		}

	}

}
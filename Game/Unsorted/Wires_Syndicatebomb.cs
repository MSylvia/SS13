// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Wires_Syndicatebomb : Wires {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.holder_type = typeof(Obj_Machinery_Syndicatebomb);
			this.randomize = true;
		}

		// Function from file: syndicatebomb.dm
		public Wires_Syndicatebomb ( Obj_Machinery_Syndicatebomb holder = null ) : base( holder ) {
			this.wires = new ByTable(new object [] { "boom", "unbolt", "activate", "delay", "proceed" });
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: syndicatebomb.dm
		public override void on_cut( dynamic wire = null, int? mend = null ) {
			Obj B = null;

			B = this.holder;

			dynamic _a = wire; // Was a switch-case, sorry for the mess.
			if ( _a=="boom" ) {
				
				if ( Lang13.Bool( mend ) ) {
					((dynamic)B).defused = GlobalVars.FALSE;
				} else if ( Lang13.Bool( ((dynamic)B).active ) ) {
					this.holder.visible_message( new Txt( "<span class='danger'>" ).icon( B ).str( " An alarm sounds! It's go-</span>" ).ToString() );
					((dynamic)B).timer = 0;
				} else {
					((dynamic)B).defused = GlobalVars.TRUE;
				}
			} else if ( _a=="unbolt" ) {
				
				if ( !Lang13.Bool( mend ) && Lang13.Bool( B.anchored ) ) {
					this.holder.visible_message( new Txt( "<span class='notice'>" ).icon( B ).str( " The bolts lift out of the ground!</span>" ).ToString() );
					GlobalFuncs.playsound( B, "sound/effects/stealthoff.ogg", 30, 1 );
					B.anchored = 0;
				}
			} else if ( _a=="proceed" ) {
				
				if ( !Lang13.Bool( mend ) && Lang13.Bool( ((dynamic)B).active ) ) {
					this.holder.visible_message( new Txt( "<span class='danger'>" ).icon( B ).str( " An alarm sounds! It's go-</span>" ).ToString() );
					((dynamic)B).timer = 0;
				}
			} else if ( _a=="activate" ) {
				
				if ( !Lang13.Bool( mend ) && Lang13.Bool( ((dynamic)B).active ) ) {
					this.holder.visible_message( new Txt( "<span class='notice'>" ).icon( B ).str( " The timer stops! The bomb has been defused!</span>" ).ToString() );
					((dynamic)B).active = GlobalVars.FALSE;
					((dynamic)B).defused = GlobalVars.TRUE;
					B.update_icon();
				}
			}
			return;
		}

		// Function from file: syndicatebomb.dm
		public override void on_pulse( string wire = null ) {
			Obj B = null;

			B = this.holder;

			switch ((string)( wire )) {
				case "boom":
					
					if ( Lang13.Bool( ((dynamic)B).active ) ) {
						this.holder.visible_message( new Txt( "<span class='danger'>" ).icon( B ).str( " An alarm sounds! It's go-</span>" ).ToString() );
						((dynamic)B).timer = 0;
					}
					break;
				case "unbolt":
					this.holder.visible_message( new Txt( "<span class='notice'>" ).icon( B ).str( " The bolts spin in place for a moment.</span>" ).ToString() );
					break;
				case "delay":
					this.holder.visible_message( new Txt( "<span class='notice'>" ).icon( B ).str( " The bomb chirps.</span>" ).ToString() );
					GlobalFuncs.playsound( B, "sound/machines/chime.ogg", 30, 1 );
					((dynamic)B).timer += 10;
					break;
				case "proceed":
					this.holder.visible_message( new Txt( "<span class='danger'>" ).icon( B ).str( " The bomb buzzes ominously!</span>" ).ToString() );
					GlobalFuncs.playsound( B, "sound/machines/buzz-sigh.ogg", 30, 1 );

					if ( Convert.ToDouble( ((dynamic)B).timer ) >= 61 ) {
						((dynamic)B).timer = 60;
					} else if ( Convert.ToDouble( ((dynamic)B).timer ) >= 21 ) {
						((dynamic)B).timer -= 10;
					} else if ( Convert.ToDouble( ((dynamic)B).timer ) >= 11 ) {
						((dynamic)B).timer = 10;
					}
					break;
				case "activate":
					
					if ( !Lang13.Bool( ((dynamic)B).active ) && !Lang13.Bool( ((dynamic)B).defused ) ) {
						this.holder.visible_message( new Txt( "<span class='danger'>" ).icon( B ).str( " You hear the bomb start ticking!</span>" ).ToString() );
						GlobalFuncs.playsound( B, "sound/machines/click.ogg", 30, 1 );
						((dynamic)B).active = GlobalVars.TRUE;
						B.update_icon();
					} else {
						this.holder.visible_message( new Txt( "<span class='notice'>" ).icon( B ).str( " The bomb seems to hesitate for a moment.</span>" ).ToString() );
						((dynamic)B).timer += 5;
					}
					break;
			}
			return;
		}

		// Function from file: syndicatebomb.dm
		public override int? interactable( dynamic user = null ) {
			Obj P = null;

			P = this.holder;

			if ( Lang13.Bool( ((dynamic)P).open_panel ) ) {
				return GlobalVars.TRUE;
			}
			return null;
		}

	}

}
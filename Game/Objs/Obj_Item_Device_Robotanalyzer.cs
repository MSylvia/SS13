// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Robotanalyzer : Obj_Item_Device {

		public bool mode = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.slot_flags = 512;
			this.throwforce = 3;
			this.w_class = 1;
			this.throw_speed = 5;
			this.throw_range = 10;
			this.starting_materials = new ByTable().Set( "$iron", 200 );
			this.w_type = 5;
			this.origin_tech = "magnets=3;engineering=3";
			this.icon_state = "robotanalyzer";
		}

		public Obj_Item_Device_Robotanalyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: component.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic O = null;
			dynamic BU = null;
			dynamic BR = null;
			dynamic H = null;
			dynamic damaged = null;
			RobotComponent org = null;

			Interface13.Stat( null, user.mutations.Contains( 5 ) );

			if ( ( false || ((Mob_Living)user).getBrainLoss() >= 60 ) && Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You try to analyze the floor's vitals!</span>" );

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, M ) )) {
					O = _a;
					
					O.show_message( "<span class='warning'>" + user + " has analyzed the floor's vitals!</span>", 1 );
				}
				user.show_message( "<span class='notice'>Analyzing Results for The floor:\n	 Overall Status: Healthy</span>", 1 );
				user.show_message( "<span class='notice'>	 Damage Specifics: " + 0 + "-" + 0 + "-" + 0 + "-" + 0 + "</span>", 1 );
				user.show_message( "<span class='notice'>Key: Suffocation/Toxin/Burns/Brute</span>", 1 );
				user.show_message( "<span class='notice'>Body Temperature: ???</span>", 1 );
				return null;
			}

			if ( !Lang13.Bool( user.dexterity_check() ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return null;
			}

			if ( !( M is Mob_Living_Silicon_Robot ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You can't analyze non-robotic things!</span>" );
				return null;
			}
			((Ent_Static)user).visible_message( "<span class='notice'> " + user + " has analyzed " + M + "'s components.", "<span class='notice'>You have analyzed " + M + "'s components." );
			BU = ( ((Mob_Living)M).getFireLoss() > 50 ? ((dynamic)( "<b>" + ((Mob_Living)M).getFireLoss() + "</b>" )) : ((dynamic)( ((Mob_Living)M).getFireLoss() )) );
			BR = ( ((Mob_Living)M).getBruteLoss() > 50 ? ((dynamic)( "<b>" + ((Mob_Living)M).getBruteLoss() + "</b>" )) : ((dynamic)( ((Mob_Living)M).getBruteLoss() )) );
			user.show_message( "<span class='notice'>Analyzing Results for " + M + ":\n	 Overall Status: " + ( Convert.ToDouble( M.stat ) > 1 ? "fully disabled" : "" + ( M.health - M.halloss ) + "% functional" ) + "</span>" );
			user.show_message( "	 Key: <font color='#FFA500'>Electronics</font>/<font color='red'>Brute</font>", 1 );
			user.show_message( "	 Damage Specifics: <font color='#FFA500'>" + BU + "</font> - <font color='red'>" + BR + "</font>" );

			if ( Lang13.Bool( M.tod ) && Convert.ToInt32( M.stat ) == 2 ) {
				user.show_message( "<span class='notice'>Time of Disable: " + M.tod + "</span>" );
			}
			H = M;
			damaged = ((Mob_Living_Silicon_Robot)H).get_damaged_components( 1, 1, true );
			user.show_message( "<span class='notice'>Localized Damage:</span>", 1 );

			if ( Lang13.Length( damaged ) > 0 ) {
				
				foreach (dynamic _b in Lang13.Enumerate( damaged, typeof(RobotComponent) )) {
					org = _b;
					
					user.show_message( "<span class='notice'>	 " + GlobalFuncs.capitalize( org.name ) + ": " + ( org.installed == -1 ? "<font color='red'><b>DESTROYED</b></font> " : "" ) + ( org.electronics_damage > 0 ? ((dynamic)( "<font color='#FFA500'>" + org.electronics_damage + "</font>" )) : ((dynamic)( 0 )) ) + " - " + ( org.brute_damage > 0 ? ((dynamic)( "<font color='red'>" + org.brute_damage + "</font>" )) : ((dynamic)( 0 )) ) + " - " + ( org.toggled ? "Toggled ON" : "<font color='red'>Toggled OFF</font>" ) + " - " + ( org.powered ? "Power ON" : "<font color='red'>Power OFF</font>" ) + "</span>", 1 );
				}
			} else {
				user.show_message( "<span class='notice'>	 Components are OK.</span>", 1 );
			}

			if ( Lang13.Bool( H.emagged ) && Rand13.PercentChance( 5 ) ) {
				user.show_message( "<span class='warning'>	 ERROR: INTERNAL SYSTEMS COMPROMISED</span>", 1 );
			}
			this.add_fingerprint( user );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Alien_Acid : Obj_Effect_Alien {

		public dynamic target = null;
		public int ticks = 0;
		public int target_strength = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon_state = "acid";
		}

		// Function from file: aliens.dm
		public Obj_Effect_Alien_Acid ( dynamic loc = null, dynamic target = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.target = target;

			if ( target is Tile ) {
				this.target_strength = 8;
			} else {
				this.target_strength = 4;
			}
			this.tick();
			return;
		}

		// Function from file: aliens.dm
		public void tick(  ) {
			dynamic O = null;
			Tile W = null;

			
			if ( !Lang13.Bool( this.target ) ) {
				GlobalFuncs.qdel( this );
			}
			this.ticks += 1;

			if ( this.ticks >= this.target_strength ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
					O = _a;
					
					O.show_message( "<span class='good'><B>" + this.target + " collapses under its own weight into a puddle of goop and undigested debris!</B></span>", 1 );
				}

				if ( this.target is Tile_Simulated_Wall ) {
					W = this.target;
					W.dismantle_wall( true );
				} else {
					GlobalFuncs.qdel( this.target );
				}
				GlobalFuncs.qdel( this );
				return;
			}

			dynamic _b = this.target_strength - this.ticks; // Was a switch-case, sorry for the mess.
			if ( 0<=_b&&_b<=1 ) {
				this.visible_message( "<span class='good'><B>" + this.target + " begins to crumble under the acid!</B></span>" );
			} else if ( _b==6 ) {
				this.visible_message( "<span class='good'><B>" + this.target + " is holding up against the acid!</B></span>" );
			} else if ( _b==4 ) {
				this.visible_message( new Txt( "<span class='good'><B>" ).item( this.target ).s().str( " structure is being melted by the acid!</B></span>" ).ToString() );
			} else if ( _b==2 ) {
				this.visible_message( "<span class='good'><B>" + this.target + " is struggling to withstand the acid!</B></span>" );
			}
			Task13.Schedule( Rand13.Int( 150, 200 ), (Task13.Closure)(() => {
				this.tick();
				return;
			}));
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_StationAlert : Obj_Machinery_Computer {

		public ByTable alarms = new ByTable().Set( "Fire", new ByTable() ).Set( "Atmosphere", new ByTable() ).Set( "Power", new ByTable() );
		public ByTable covered_areas = new ByTable();
		public string general_area_name = "Station";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/stationalert";
			this.light_color = "#7DE1E1";
			this.icon_state = "alert:0";
		}

		// Function from file: station_alert.dm
		public Obj_Machinery_Computer_StationAlert ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic A = null;
			dynamic areatype = null;
			dynamic B = null;
			dynamic blockedtypes = null;
			dynamic atype = null;
			dynamic B2 = null;
			dynamic A2 = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.z != GlobalVars.map.zMainStation ) {
				A = this.areaMaster;

				if ( !Lang13.Bool( A ) ) {
					A = GlobalFuncs.get_area( this );
				}

				if ( !Lang13.Bool( A ) ) {
					return;
				}
				this.name = "" + A.general_area_name + " Alert Computer";
				this.general_area_name = A.general_area_name;

				foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( A.general_area ) )) {
					areatype = _a;
					
					B = Lang13.FindObj( areatype );
					this.covered_areas.Add( B );
				}
			} else {
				blockedtypes = Lang13.GetTypes( typeof(Zone_ResearchOutpost), typeof(Zone_Mine), typeof(Zone_Derelict), typeof(Zone_Djstation), typeof(Zone_VoxTradingPost), typeof(Zone_Tcommsat) );

				foreach (dynamic _b in Lang13.Enumerate( Lang13.GetTypes( typeof(Zone) ) - blockedtypes )) {
					atype = _b;
					
					B2 = Lang13.FindObj( atype );
					this.covered_areas.Add( B2 );
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( this.covered_areas )) {
				A2 = _c;
				
				((Zone)A2).sendDangerLevel( this );
				((Zone)A2).send_firealert( this );
				((Zone)A2).send_poweralert( this );
			}
			return;
		}

		// Function from file: station_alert.dm
		public override dynamic process(  ) {
			bool active_alarms = false;
			dynamic cat = null;
			ByTable L = null;

			
			if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "atmos0";
				return null;
			} else if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "atmosb";
				return null;
			}
			active_alarms = false;

			foreach (dynamic _a in Lang13.Enumerate( this.alarms )) {
				cat = _a;
				
				L = this.alarms[cat];

				if ( L.len != 0 ) {
					active_alarms = true;
				}
			}

			if ( active_alarms ) {
				this.icon_state = "alert:2";
			} else {
				this.icon_state = "alert:0";
			}
			base.process();
			return null;
		}

		// Function from file: station_alert.dm
		public bool cancelAlarm( string _class = null, Zone A = null, Ent_Static origin = null ) {
			dynamic L = null;
			bool cleared = false;
			dynamic I = null;
			dynamic alarm = null;
			ByTable srcs = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				return false;
			}
			L = this.alarms[_class];
			cleared = false;

			foreach (dynamic _a in Lang13.Enumerate( L )) {
				I = _a;
				

				if ( I == A.name ) {
					alarm = L[I];
					srcs = alarm[3];
					Interface13.Stat( null, srcs.Contains( origin ) );

					if ( false ) {
						srcs.Remove( origin );
					}

					if ( srcs.len == 0 ) {
						cleared = true;
						L -= I;
					}
				}
			}
			return !cleared;
		}

		// Function from file: station_alert.dm
		public bool triggerAlarm( string _class = null, Zone A = null, ByTable O = null, Ent_Static alarmsource = null ) {
			dynamic L = null;
			dynamic I = null;
			dynamic alarm = null;
			dynamic sources = null;
			ByTable C = null;
			ByTable CL = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				return false;
			}
			L = this.alarms[_class];

			foreach (dynamic _a in Lang13.Enumerate( L )) {
				I = _a;
				

				if ( I == A.name ) {
					alarm = L[I];
					sources = alarm[3];
					Interface13.Stat( null, sources.Contains( alarmsource ) );

					if ( !false ) {
						sources += alarmsource;
					}
					return true;
				}
			}
			C = null;
			CL = null;

			if ( O != null && O is ByTable ) {
				CL = O;

				if ( CL.len == 1 ) {
					C = CL[1];
				}
			} else if ( O != null && O is Obj_Machinery_Camera ) {
				C = O;
			}
			L[A.name] = new ByTable(new object [] { A, ( C != null ? C : O ), new ByTable(new object [] { alarmsource }) });
			return true;
		}

		// Function from file: station_alert.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}
			return null;
		}

		// Function from file: station_alert.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			dynamic cat = null;
			ByTable L = null;
			dynamic alarm = null;
			dynamic alm = null;
			dynamic A = null;
			ByTable sources = null;

			Task13.User.set_machine( this );
			dat = new Txt( "<HEAD><TITLE>Current " ).item( this.general_area_name ).str( " Alerts</TITLE><META HTTP-EQUIV='Refresh' CONTENT='10'></HEAD><BODY>\n\n	<A HREF='?src=" ).Ref( user ).str( ";mach_close=alerts'>Close</A><br><br>" ).ToString();

			foreach (dynamic _b in Lang13.Enumerate( this.alarms )) {
				cat = _b;
				
				dat += "<B>" + cat + "</B><BR>\n";
				L = this.alarms[cat];

				if ( L.len != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( L )) {
						alarm = _a;
						
						alm = L[alarm];
						A = alm[1];
						sources = alm[3];
						dat += "<NOBR>\n					&bull;\n					" + A.name;

						if ( sources.len > 1 ) {
							dat += " - " + sources.len + " sources";
						}
						dat += "</NOBR><BR>\n";
					}
				} else {
					dat += "-- All Systems Nominal<BR>\n";
				}
				dat += "<BR>\n";
			}
			Interface13.Browse( user, dat, "window=alerts" );
			GlobalFuncs.onclose( user, "alerts" );
			return null;
		}

		// Function from file: station_alert.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.add_fingerprint( a );

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.interact( a );
			return null;
		}

		// Function from file: station_alert.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			this.add_fingerprint( user );

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.interact( user );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Telecomms_Allinone : Obj_Machinery_Telecomms {

		public bool intercept = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.use_power = 0;
			this.machinetype = 6;
			this.heatgen = 0;
			this.icon_state = "comm_server";
		}

		public Obj_Machinery_Telecomms_Allinone ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: broadcaster.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			dynamic original = null;
			Game_Data speech = null;

			
			if ( !this.on ) {
				return false;
			}

			if ( this.is_freq_listening( signal ) ) {
				((dynamic)signal).data["done"] = 1;
				((dynamic)signal).data["compression"] = 0;
				original = ((dynamic)signal).data["original"];

				if ( Lang13.Bool( original ) ) {
					original.data["done"] = 1;
				}

				if ( Convert.ToDouble( ((dynamic)signal).data["slow"] ) > 0 ) {
					Task13.Sleep( Convert.ToInt32( ((dynamic)signal).data["slow"] ) );
				}

				if ( Convert.ToDouble( ((dynamic)signal).frequency ) == GlobalVars.SYND_FREQ ) {
					speech = GlobalFuncs.getFromPool( typeof(Speech) );
					((dynamic)speech).from_signal( signal );
					GlobalFuncs.Broadcast_Message( speech, Lang13.BoolNullable( ((dynamic)signal).data["vmask"] ), 0, ((dynamic)signal).data["compression"], new ByTable(new object [] { 0, this.z }) );
				}
			}
			return false;
		}

	}

}
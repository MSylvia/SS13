// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_SecureCloset_Detective : Obj_Structure_Closet_SecureCloset {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable(new object [] { 4 });
			this.icon_closed = "cabinetdetective";
			this.icon_locked = "cabinetdetective_locked";
			this.icon_opened = "cabinetdetective_open";
			this.icon_broken = "cabinetdetective_broken";
			this.icon_off = "cabinetdetective_broken";
			this.icon_state = "cabinetdetective_locked";
		}

		// Function from file: security.dm
		public Obj_Structure_Closet_SecureCloset_Detective ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Sleep( 2 );
			new Obj_Item_Clothing_Under_Det( this );
			new Obj_Item_Clothing_Suit_Storage_DetSuit( this );
			new Obj_Item_Clothing_Suit_Storage_Forensics_Blue( this );
			new Obj_Item_Clothing_Suit_Storage_Forensics_Red( this );
			new Obj_Item_Clothing_Gloves_Black( this );
			new Obj_Item_Clothing_Head_DetHat( this );
			new Obj_Item_Clothing_Shoes_Brown( this );
			new Obj_Item_Weapon_Storage_Box_Evidence( this );
			new Obj_Item_Device_Radio_Headset_HeadsetSec(  );
			new Obj_Item_Device_DetectiveScanner( this );
			new Obj_Item_Clothing_Suit_Armor_DetSuit( this );
			new Obj_Item_AmmoStorage_Speedloader_C38( this );
			new Obj_Item_AmmoStorage_Box_C38( this );
			new Obj_Item_AmmoStorage_Box_C38( this );
			new Obj_Item_Weapon_Gun_Projectile_Detective( this );
			new Obj_Item_Clothing_Accessory_Holster_Armpit( this );
			new Obj_Item_Device_Gps_Secure( this );
			return;
		}

		// Function from file: security.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.broken ) {
				this.icon_state = this.icon_broken;
			} else if ( !this.opened ) {
				
				if ( this.locked ) {
					this.icon_state = this.icon_locked;
				} else {
					this.icon_state = this.icon_closed;
				}
			} else {
				this.icon_state = this.icon_opened;
			}
			return null;
		}

	}

}
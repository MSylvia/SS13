// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Udder : Obj {

		// Function from file: farm_animals.dm
		public Obj_Udder ( dynamic loc = null ) : base( (object)(loc) ) {
			this.reagents = new Reagents( 50 );
			this.reagents.my_atom = this;
			this.reagents.add_reagent( "milk", 20 );
			return;
		}

		// Function from file: farm_animals.dm
		public override dynamic Destroy(  ) {
			GlobalFuncs.qdel( this.reagents );
			return base.Destroy();
		}

		// Function from file: farm_animals.dm
		public void milkAnimal( dynamic O = null, dynamic user = null ) {
			dynamic G = null;
			double? transfered = null;

			G = O;

			if ( ( G.reagents.total_volume ??0) >= Convert.ToDouble( G.volume ) ) {
				user.WriteMsg( "<span class='danger'>" + O + " is full.</span>" );
				return;
			}
			transfered = this.reagents.trans_id_to( G, "milk", Rand13.Int( 5, 10 ) );

			if ( Lang13.Bool( transfered ) ) {
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " milks " ).item( this ).str( " using " ).the( O ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You milk " ).item( this ).str( " using " ).the( O ).item().str( ".</span>" ).ToString() );
			} else {
				user.WriteMsg( "<span class='danger'>The udder is dry. Wait a bit longer...</span>" );
			}
			return;
		}

		// Function from file: farm_animals.dm
		public void generateMilk(  ) {
			
			if ( Rand13.PercentChance( 5 ) ) {
				this.reagents.add_reagent( "milk", Rand13.Int( 5, 10 ) );
			}
			return;
		}

	}

}
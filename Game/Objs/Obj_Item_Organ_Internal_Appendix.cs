// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Organ_Internal_Appendix : Obj_Item_Organ_Internal {

		public bool inflamed = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.zone = "groin";
			this.slot = "appendix";
			this.icon_state = "appendix";
		}

		public Obj_Item_Organ_Internal_Appendix ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: organ_internal.dm
		public override Obj_Item_Weapon_ReagentContainers_Food_Snacks_Organ prepare_eat(  ) {
			Obj_Item_Weapon_ReagentContainers_Food_Snacks_Organ S = null;

			S = base.prepare_eat();

			if ( this.inflamed ) {
				S.reagents.add_reagent( "????", 5 );
			}
			return S;
		}

		// Function from file: organ_internal.dm
		public override void Insert( dynamic M = null, int? special = null ) {
			special = special ?? 0;

			base.Insert( (object)(M), special );

			if ( this.inflamed ) {
				((Mob)M).AddDisease( new Disease_Appendicitis() );
			}
			return;
		}

		// Function from file: organ_internal.dm
		public override void Remove( dynamic M = null, bool? special = null ) {
			special = special ?? false;

			Disease_Appendicitis A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( M.viruses, typeof(Disease_Appendicitis) )) {
				A = _a;
				
				A.cure();
				this.inflamed = true;
			}
			this.update_icon();
			base.Remove( (object)(M), special );
			return;
		}

		// Function from file: organ_internal.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.inflamed ) {
				this.icon_state = "appendixinflamed";
				this.name = "inflamed appendix";
			} else {
				this.icon_state = "appendix";
				this.name = "appendix";
			}
			return false;
		}

	}

}
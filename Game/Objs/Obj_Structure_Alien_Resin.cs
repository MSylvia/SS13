// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Alien_Resin : Obj_Structure_Alien {

		public double health = 200;
		public string resintype = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.canSmoothWith = new ByTable(new object [] { typeof(Obj_Structure_Alien_Resin) });
			this.smooth = 1;
			this.icon = "icons/obj/smooth_structures/alien/resin_wall.dmi";
			this.icon_state = "resin";
		}

		// Function from file: aliens.dm
		public Obj_Structure_Alien_Resin ( dynamic location = null ) : base( (object)(location) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.air_update_turf( true );
			return;
		}

		// Function from file: aliens.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 0;

			
			if ( mover is Ent_Dynamic && ((Ent_Dynamic)mover).checkpass( 2 ) != 0 ) {
				return !this.opacity;
			}
			return !this.density;
		}

		// Function from file: aliens.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			((Mob)user).changeNext_move( 8 );
			this.health -= Convert.ToDouble( A.force );
			GlobalFuncs.playsound( this.loc, "sound/effects/attackblob.ogg", 100, 1 );
			this.healthcheck();
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: aliens.dm
		public override bool attack_alien( dynamic user = null ) {
			((Mob)user).changeNext_move( 8 );
			((Ent_Dynamic)user).do_attack_animation( this );

			if ( user is Mob_Living_Carbon_Alien_Larva ) {
				return false;
			}
			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " claws at the resin!</span>" );
			GlobalFuncs.playsound( this.loc, "sound/effects/attackblob.ogg", 100, 1 );
			this.health -= 50;

			if ( this.health <= 0 ) {
				((Ent_Static)user).visible_message( "<span class='danger'>" + user + " slices the " + this.name + " apart!</span>" );
			}
			this.healthcheck();
			return false;
		}

		// Function from file: aliens.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: aliens.dm
		public override bool attack_hulk( Mob_Living_Carbon_Human hulk = null, bool? do_attack_animation = null ) {
			base.attack_hulk( hulk, true );
			hulk.do_attack_animation( this );
			hulk.visible_message( "<span class='danger'>" + hulk + " destroys " + this + "!</span>" );
			this.health = 0;
			this.healthcheck();
			return false;
		}

		// Function from file: aliens.dm
		public override bool hitby( Ent_Dynamic AM = null, bool? skipcatch = null, bool? hitpush = null, bool? blocked = null ) {
			dynamic tforce = null;
			Ent_Dynamic O = null;

			base.hitby( AM, skipcatch, hitpush, blocked );
			tforce = 0;

			if ( !( AM is Obj ) ) {
				tforce = 10;
			} else {
				O = AM;
				tforce = ((dynamic)O).throwforce;
			}
			GlobalFuncs.playsound( this.loc, "sound/effects/attackblob.ogg", 100, 1 );
			this.health -= Convert.ToDouble( tforce );
			this.healthcheck();
			return false;
		}

		// Function from file: aliens.dm
		public override bool blob_act( dynamic severity = null ) {
			this.health -= 50;
			this.healthcheck();
			return false;
		}

		// Function from file: aliens.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					this.health -= 150;
					break;
				case 2:
					this.health -= 100;
					break;
				case 3:
					this.health -= 50;
					break;
			}
			this.healthcheck();
			return false;
		}

		// Function from file: aliens.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			this.health -= Convert.ToDouble( P.damage );
			base.bullet_act( (object)(P), (object)(def_zone) );
			this.healthcheck();
			return null;
		}

		// Function from file: aliens.dm
		public void healthcheck(  ) {
			
			if ( this.health <= 0 ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: aliens.dm
		public override bool CanAtmosPass( dynamic T = null ) {
			return !this.density;
		}

		// Function from file: aliens.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			Ent_Static T = null;

			T = this.loc;
			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			this.move_update_air( T );
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Cooking_Grill_Spit : Obj_Machinery_Cooking_Grill {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state_on = "spit";
			this.use_power = 0;
			this.icon_state = "spit";
		}

		public Obj_Machinery_Cooking_Grill_Spit ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cooking_machines.dm
		public override string validateIngredient( dynamic I = null ) {
			string _default = null;

			Ent_Static turfunder = null;
			bool campfirefound = false;
			Obj_Machinery M = null;
			Obj_Machinery campfire = null;

			_default = base.validateIngredient( (object)(I) );

			if ( _default == "valid" ) {
				turfunder = this.loc;
				campfirefound = false;

				foreach (dynamic _a in Lang13.Enumerate( turfunder.contents, typeof(Obj_Machinery) )) {
					M = _a;
					

					if ( M is Obj_Machinery_SpaceHeater_Campfire ) {
						campfirefound = true;
						campfire = M;

						if ( !Lang13.Bool( ((dynamic)campfire).on ) ) {
							_default = "The campfire isn't lit.";
						}
					}
				}

				if ( !campfirefound ) {
					_default = "There's no campfire to cook on!";
				}
			}
			return _default;
		}

		// Function from file: cooking_machines.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			((Mob)b).delayNextAttack( 30 );

			if ( a is Obj_Item_Weapon_Crowbar && GlobalFuncs.do_after( b, this, 30 ) ) {
				((Ent_Static)b).visible_message( "<span class='notice'>" + b + " dissassembles the " + this + ".</span>", new Txt( "<span class='notice'>You dissassemble " ).the( this ).item().str( ".</span>" ).ToString() );

				if ( Lang13.Bool( this.ingredient ) ) {
					this.ingredient.loc = this.loc;
					this.ingredient = null;
				}
				new Obj_Item_Stack_Sheet_Wood( b.loc );
				GlobalFuncs.qdel( this );
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: cooking_machines.dm
		public override dynamic makeFood( dynamic foodType = null ) {
			this.ingredient.name = "rotisserie " + this.ingredient.name;
			base.makeFood( (object)(foodType) );
			return null;
		}

		// Function from file: cooking_machines.dm
		public override void cook( dynamic foodType = null ) {
			this.ingredient.pixel_y += 7;
			base.cook( (object)(foodType) );
			return;
		}

	}

}
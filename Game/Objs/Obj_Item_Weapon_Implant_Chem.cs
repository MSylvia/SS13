// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Implant_Chem : Obj_Item_Weapon_Implant {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.allow_reagents = true;
		}

		// Function from file: implant.dm
		public Obj_Item_Weapon_Implant_Chem ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 50 );
			return;
		}

		// Function from file: implant.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( this.malfunction != 0 ) {
				return null;
			}
			this.malfunction = 1;

			switch ((int)( severity )) {
				case 1:
					
					if ( Rand13.PercentChance( 60 ) ) {
						this.activate( 20 );
					}
					break;
				case 2:
					
					if ( Rand13.PercentChance( 30 ) ) {
						this.activate( 5 );
					}
					break;
			}
			Task13.Schedule( 20, (Task13.Closure)(() => {
				this.malfunction--;
				return;
			}));
			return null;
		}

		// Function from file: implant.dm
		public override bool activate( dynamic cause = null ) {
			dynamic R = null;

			
			if ( !Lang13.Bool( cause ) || !Lang13.Bool( this.imp_in ) ) {
				return false;
			}
			R = this.imp_in;
			((Reagents)this.reagents).trans_to( R, cause );
			GlobalFuncs.to_chat( R, "You hear a faint *beep*." );

			if ( !Lang13.Bool( this.reagents.total_volume ) ) {
				GlobalFuncs.to_chat( R, "You hear a faint click from your chest." );
				Task13.Schedule( 0, (Task13.Closure)(() => {
					GlobalFuncs.qdel( this );
					return;
				}));
			}
			return false;
		}

		// Function from file: implant.dm
		public override bool trigger( dynamic emote = null, Mob_Living_Carbon_Human source = null ) {
			
			if ( emote == "deathgasp" ) {
				this.activate( this.reagents.total_volume );
			}
			return false;
		}

		// Function from file: implant.dm
		public override string get_data(  ) {
			string dat = null;

			dat = @"
<b>Implant Specifications:</b><BR>
<b>Name:</b> Robust Corp MJ-420 Prisoner Management Implant<BR>
<b>Life:</b> Deactivates upon death but remains within the body.<BR>
<b>Important Notes: Due to the system functioning off of nutrients in the implanted subject's body, the subject<BR>
will suffer from an increased appetite.</B><BR>
<HR>
<b>Implant Details:</b><BR>
<b>Function:</b> Contains a small capsule that can contain various chemicals. Upon receiving a specially encoded signal<BR>
the implant releases the chemicals directly into the blood stream.<BR>
<b>Special Features:</b>
<i>Micro-Capsule</i>- Can be loaded with any sort of chemical agent via the common syringe and can hold 50 units.<BR>
Can only be loaded while still in its original case.<BR>
<b>Integrity:</b> Implant will last so long as the subject is alive. However, if the subject suffers from malnutrition,<BR>
the implant may become unstable and either pre-maturely inject the subject or simply break.";
			return dat;
		}

	}

}
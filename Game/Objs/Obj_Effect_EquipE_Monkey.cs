// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_EquipE_Monkey : Obj_Effect_EquipE {

		public dynamic target = null;

		public Obj_Effect_EquipE_Monkey ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: inventory.dm
		public override void done(  ) {
			dynamic W = null;
			dynamic W2 = null;
			dynamic W3 = null;
			Obj_Item_Weapon W4 = null;
			dynamic W5 = null;
			dynamic M = null;

			
			if ( !Lang13.Bool( this.source ) || !Lang13.Bool( this.target ) ) {
				return;
			}

			if ( this.source.loc != this.s_loc ) {
				return;
			}

			if ( this.target.loc != this.t_loc ) {
				return;
			}

			if ( !((Ent_Static)this.source).Adjacent( this.target ) ) {
				return;
			}

			if ( Lang13.Bool( this.item ) && ((Mob)this.source).get_active_hand() != this.item ) {
				return;
			}

			if ( ((Mob)this.source).restrained() || Lang13.Bool( this.source.stat ) ) {
				return;
			}

			switch ((string)( this.place )) {
				case "mask":
					
					if ( Lang13.Bool( this.target.wear_mask ) ) {
						
						if ( this.target.wear_mask is Obj_Item_Clothing && !this.target.wear_mask.canremove ) {
							return;
						}
						W = this.target.wear_mask;
						((Mob)this.target).u_equip( W, true );

						if ( Lang13.Bool( this.target.client ) ) {
							this.target.client.screen -= W;
						}

						if ( Lang13.Bool( W ) ) {
							W.loc = this.target.loc;
							W.layer = Lang13.Initial( W, "layer" );
						}
						((Ent_Static)W).add_fingerprint( this.source );
					} else if ( this.item is Obj_Item_Clothing_Mask ) {
						this.source.drop_item( this.item, null, 1 );
						this.loc = this.target;
						this.item.layer = 20;
						this.target.wear_mask = this.item;
						this.item.loc = this.target;
					}
					break;
				case "l_hand":
					
					if ( Lang13.Bool( this.target.l_hand ) ) {
						W2 = this.target.l_hand;
						((Mob)this.target).u_equip( W2, true );

						if ( Lang13.Bool( this.target.client ) ) {
							this.target.client.screen -= W2;
						}

						if ( Lang13.Bool( W2 ) ) {
							W2.loc = this.target.loc;
							W2.layer = Lang13.Initial( W2, "layer" );
						}
						((Ent_Static)W2).add_fingerprint( this.source );
					} else if ( this.item is Obj_Item ) {
						this.source.drop_item( this.item, null, 1 );
						this.loc = this.target;
						this.item.layer = 20;
						this.target.l_hand = this.item;
						this.item.loc = this.target;
						((Obj_Item)this.item).dropped( this.source );
						((Obj_Item)this.item).equipped( this.target, this.target.l_hand );
					}
					break;
				case "r_hand":
					
					if ( Lang13.Bool( this.target.r_hand ) ) {
						W3 = this.target.r_hand;
						((Mob)this.target).u_equip( W3, true );

						if ( Lang13.Bool( this.target.client ) ) {
							this.target.client.screen -= W3;
						}

						if ( Lang13.Bool( W3 ) ) {
							W3.loc = this.target.loc;
							W3.layer = Lang13.Initial( W3, "layer" );
						}
						((Ent_Static)W3).add_fingerprint( this.source );
					} else if ( this.item is Obj_Item ) {
						this.source.drop_item( this.item, null, 1 );
						this.loc = this.target;
						this.item.layer = 20;
						this.target.r_hand = this.item;
						this.item.loc = this.target;
						((Obj_Item)this.item).dropped( this.source );
						((Obj_Item)this.item).equipped( this.target, this.target.r_hand );
					}
					break;
				case "back":
					
					if ( Lang13.Bool( this.target.back ) ) {
						W4 = this.target.back;
						((Mob)this.target).u_equip( W4, true );

						if ( Lang13.Bool( this.target.client ) ) {
							this.target.client.screen -= W4;
						}

						if ( W4 != null ) {
							W4.loc = this.target.loc;
							W4.layer = Convert.ToDouble( Lang13.Initial( W4, "layer" ) );
						}
						W4.add_fingerprint( this.source );
					} else if ( this.item is Obj_Item && ( ( this.item.slot_flags ??0) & 1024 ) != 0 ) {
						this.source.drop_item( this.item, null, 1 );
						this.loc = this.target;
						this.item.layer = 20;
						this.target.back = this.item;
						this.item.loc = this.target;
					}
					break;
				case "handcuff":
					
					if ( Lang13.Bool( this.target.handcuffed ) ) {
						W5 = this.target.handcuffed;
						((Mob)this.target).u_equip( W5, true );

						if ( Lang13.Bool( this.target.client ) ) {
							this.target.client.screen -= W5;
						}

						if ( Lang13.Bool( W5 ) ) {
							W5.loc = this.target.loc;
							W5.layer = Lang13.Initial( W5, "layer" );
						}
						((Ent_Static)W5).add_fingerprint( this.source );
					} else if ( this.item is Obj_Item_Weapon_Handcuffs ) {
						this.source.drop_item( this.item, null, 1 );
						this.target.handcuffed = this.item;
						this.item.loc = this.target;
					}
					break;
				case "internal":
					
					if ( Lang13.Bool( this.target.v_internal ) ) {
						((Ent_Static)this.target.v_internal).add_fingerprint( this.source );
						this.target.v_internal = null;
					} else {
						
						if ( Lang13.Bool( this.target.v_internal ) ) {
							this.target.v_internal = null;
						}

						if ( !( this.target.wear_mask is Obj_Item_Clothing_Mask ) ) {
							return;
						} else if ( this.target.back is Obj_Item_Weapon_Tank ) {
							this.target.v_internal = this.target.back;
							((Ent_Static)this.target.v_internal).add_fingerprint( this.source );

							foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( 1, this.target ) )) {
								M = _a;
								

								if ( Lang13.Bool( M.client ) && !Lang13.Bool( M.blinded ) ) {
									M.show_message( "" + this.target + " is now running on internals.", 1 );
								}
							}
						}
					}
					break;
			}
			((Mob)this.source).regenerate_icons();
			((Mob)this.target).regenerate_icons();
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: inventory.dm
		public override dynamic process(  ) {
			ByTable L = null;
			dynamic O = null;
			string message = null;
			dynamic M = null;

			
			if ( Lang13.Bool( this.item ) ) {
				((Ent_Static)this.item).add_fingerprint( this.source );
			}

			if ( !Lang13.Bool( this.item ) ) {
				
				switch ((string)( this.place )) {
					case "head":
						
						if ( !Lang13.Bool( this.target.wear_mask ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
					case "l_hand":
						
						if ( !Lang13.Bool( this.target.l_hand ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
					case "r_hand":
						
						if ( !Lang13.Bool( this.target.r_hand ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
					case "back":
						
						if ( !Lang13.Bool( this.target.back ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
					case "handcuff":
						
						if ( !Lang13.Bool( this.target.handcuffed ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
					case "internal":
						
						if ( !( this.target.wear_mask is Obj_Item_Clothing_Mask && this.target.back is Obj_Item_Weapon_Tank && !Lang13.Bool( this.target.v_internal ) ) && !Lang13.Bool( this.target.v_internal ) ) {
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
				}
			}

			if ( Lang13.Bool( this.item ) ) {
				
				if ( this.source is Mob_Living_Silicon_Robot && this.place != "handcuff" ) {
					L = new ByTable(new object [] { "syringe", "pill", "drink", "dnainjector", "fuel" });

					if ( !( L.Find( this.place ) != 0 ) ) {
						GlobalFuncs.qdel( this );
						return null;
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this.target ) )) {
					O = _b;
					

					if ( Lang13.Bool( O.client ) && !Lang13.Bool( O.blinded ) ) {
						O.show_message( "<span class='danger'>" + this.source + " is trying to put a " + this.item + " on " + this.target + "</span>", 1 );
					}
				}
			} else {
				message = null;

				switch ((string)( this.place )) {
					case "mask":
						
						if ( this.target.wear_mask is Obj_Item_Clothing && !this.target.wear_mask.canremove ) {
							message = new Txt( "<span class='danger'>" ).item( this.source ).str( " fails to take off " ).a( this.target.wear_mask ).item().str( " from " ).item( this.target ).str( "'s body!</span>" ).ToString();
						} else {
							message = new Txt( "<span class='danger'>" ).item( this.source ).str( " is trying to take off " ).a( this.target.wear_mask ).item().str( " from " ).item( this.target ).str( "'s head!</span>" ).ToString();
						}
						break;
					case "l_hand":
						message = "<span class='danger'>" + this.source + " is trying to take off a " + this.target.l_hand + " from " + this.target + "'s left hand!</span>";
						break;
					case "r_hand":
						message = "<span class='danger'>" + this.source + " is trying to take off a " + this.target.r_hand + " from " + this.target + "'s right hand!</span>";
						break;
					case "back":
						message = "<span class='danger'>" + this.source + " is trying to take off a " + this.target.back + " from " + this.target + "'s back!</span>";
						break;
					case "handcuff":
						message = "<span class='danger'>" + this.source + " is trying to unhandcuff " + this.target + "!</span>";
						break;
					case "internal":
						
						if ( Lang13.Bool( this.target.v_internal ) ) {
							message = "<span class='danger'>" + this.source + " is trying to remove " + this.target + "'s internals</span>";
						} else {
							message = "<span class='danger'>" + this.source + " is trying to set on " + this.target + "'s internals.</span>";
						}
						break;
				}

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchViewers( null, this.target ) )) {
					M = _d;
					
					M.show_message( message, 1 );
				}
			}
			Task13.Schedule( 30, (Task13.Closure)(() => {
				this.done();
				return;
				return;
			}));
			return null;
		}

		// Function from file: inventory.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( Lang13.Bool( this.target ) ) {
				this.target.requests.Remove( this );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
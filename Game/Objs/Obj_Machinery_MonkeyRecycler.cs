// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_MonkeyRecycler : Obj_Machinery {

		public double grinded = 0;
		public double minimum_monkeys = 3;
		public bool can_recycle_live = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 5;
			this.active_power_usage = 50;
			this.machine_flags = 30;
			this.icon = "icons/obj/kitchen.dmi";
			this.icon_state = "grinder";
			this.layer = 2.9;
		}

		// Function from file: monkeyrecycler.dm
		public Obj_Machinery_MonkeyRecycler ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_MonkeyRecycler(), 
				new Obj_Item_Weapon_StockParts_MatterBin(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_MicroLaser()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: monkeyrecycler.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			this.attackby( O, user );
			return false;
		}

		// Function from file: monkeyrecycler.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.stat != 0 ) {
				return null;
			}

			if ( this.grinded >= this.minimum_monkeys ) {
				GlobalFuncs.to_chat( a, "<span class='notice'>The machine hisses loudly as it condenses the grinded monkey meat. After a moment, it dispenses a brand new monkey cube.</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/hiss.ogg", 50, 1 );
				this.grinded -= this.minimum_monkeys;
				new Obj_Item_Weapon_ReagentContainers_Food_Snacks_Monkeycube_Wrapped( this.loc );
				GlobalFuncs.to_chat( a, "<span class='notice'>The machine's display flashes that it has " + this.grinded + " monkeys worth of material left.</span>" );
			} else {
				GlobalFuncs.to_chat( a, "<span class='warning'>The machine needs at least 3 monkeys worth of material to produce a monkey cube. It only has " + this.grinded + ".</span>" );
			}
			return null;
		}

		// Function from file: monkeyrecycler.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic G = null;
			dynamic grabbed = null;
			Mob target = null;
			dynamic target2 = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( this.stat != 0 ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Grab ) {
				G = a;
				grabbed = G.affecting;

				if ( grabbed is Mob_Living_Carbon_Monkey ) {
					target = grabbed;

					if ( target.stat == 0 || this.can_recycle_live ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>The monkey is struggling far too much to put it in the recycler.</span>" );
					}

					if ( Lang13.Bool( target.wear_mask ) || Lang13.Bool( target.l_hand ) || Lang13.Bool( target.r_hand ) || Lang13.Bool( target.back ) || Lang13.Bool( ((dynamic)target).uniform ) || Lang13.Bool( ((dynamic)target).hat ) ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>The monkey may not have abiotic items on.</span>" );
					} else {
						new ByTable().Set( 1, G ).Set( "force_drop", 1 ).Apply( Lang13.BindFunc( b, "drop_item" ) );
						GlobalFuncs.qdel( target );
						target = null;
						GlobalFuncs.to_chat( b, "<span class='notice'>You stuff the monkey in the machine." );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/juicer.ogg", 50, 1 );
						this.f_use_power( 500 );
						this.grinded++;
						GlobalFuncs.to_chat( b, "<span class='notice'>The machine now has " + this.grinded + " monkeys worth of material stored.</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>The machine only accepts monkeys!</span>" );
				}
			} else if ( a is Mob_Living_Carbon_Monkey ) {
				target2 = a;

				if ( Lang13.Bool( target2.stat ) == false ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The monkey is struggling far too much to put it in the recycler.</span>" );
				}

				if ( Lang13.Bool( target2.wear_mask ) || Lang13.Bool( target2.l_hand ) || Lang13.Bool( target2.r_hand ) || Lang13.Bool( target2.back ) || Lang13.Bool( target2.uniform ) || Lang13.Bool( target2.hat ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The monkey may not have abiotic items on.</span>" );
				} else {
					GlobalFuncs.qdel( target2 );
					GlobalFuncs.to_chat( b, "<span class='notice'>You stuff the monkey in the machine.</span>" );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/juicer.ogg", 50, 1 );
					this.f_use_power( 500 );
					this.grinded++;
					GlobalFuncs.to_chat( b, "<span class='notice'>The machine now has " + this.grinded + " monkeys worth of material stored.</span>" );
				}
			}
			return null;
		}

		// Function from file: monkeyrecycler.dm
		public override dynamic RefreshParts(  ) {
			int manipcount = 0;
			int lasercount = 0;
			Obj_Item_Weapon_StockParts SP = null;

			manipcount = 0;
			lasercount = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
				SP = _a;
				

				if ( SP is Obj_Item_Weapon_StockParts_Manipulator ) {
					manipcount += SP.rating;
				}

				if ( SP is Obj_Item_Weapon_StockParts_MicroLaser ) {
					lasercount += SP.rating;
				}
			}
			this.minimum_monkeys = 4 - manipcount / 2;

			if ( lasercount == 3 ) {
				this.can_recycle_live = true;
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Crossbow : Obj_Item_Weapon {

		public int tension = 0;
		public int max_tension = 5;
		public int release_speed = 5;
		public dynamic current_user = null;
		public dynamic arrow = null;
		public dynamic cell = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "crossbow-solid";
			this.slot_flags = 1536;
			this.icon_state = "crossbow";
		}

		public Obj_Item_Weapon_Crossbow ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bow.dm
		public override dynamic dropped( dynamic user = null ) {
			dynamic A = null;

			
			if ( Lang13.Bool( this.arrow ) ) {
				A = this.arrow;
				A.loc = GlobalFuncs.get_turf( this );
				A.removed( user );
				this.arrow = null;
				this.tension = 0;
				this.icon_state = "crossbow";
			}
			return null;
		}

		// Function from file: bow.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( A is Obj_Item_Weapon_Storage_Backpack ) {
				this.dropped();
				return false;
			} else if ( A.loc == user.loc ) {
				return false;
			} else if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Table), this.loc ) ) ) {
				return false;
			} else if ( A == user ) {
				return false;
			}

			if ( !( this.tension != 0 ) ) {
				GlobalFuncs.to_chat( user, "You haven't drawn back the bolt!" );
				return false;
			}

			if ( !Lang13.Bool( this.arrow ) ) {
				GlobalFuncs.to_chat( user, "You have no arrow nocked to " + this + "!" );
				return false;
			} else {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.Fire( A, user, _params );
					return;
				}));
			}
			return false;
		}

		// Function from file: bow.dm
		public void Fire( dynamic target = null, dynamic user = null, dynamic _params = null, bool? reflex = null ) {
			reflex = reflex ?? false;

			dynamic curloc = null;
			dynamic targloc = null;
			dynamic A = null;

			this.add_fingerprint( user );
			curloc = GlobalFuncs.get_turf( user );
			targloc = GlobalFuncs.get_turf( target );

			if ( !( targloc is Tile ) || !( curloc is Tile ) ) {
				return;
			}
			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " releases " + this + " and sends " + this.arrow + " streaking toward " + target + "!</span>", "<span class='danger'>You release " + this + " and send " + this.arrow + " streaking toward " + target + "!</span>" );
			A = this.arrow;
			A.loc = GlobalFuncs.get_turf( user );
			((Ent_Dynamic)A).throw_at( target, 10, this.tension * this.release_speed );
			this.arrow = null;
			this.tension = 0;
			this.icon_state = "crossbow";
			return;
		}

		// Function from file: bow.dm
		public void increase_tension( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.arrow ) || !( this.tension != 0 ) || this.current_user != user ) {
				return;
			}
			this.tension++;
			this.icon_state = "crossbow-drawn";

			if ( this.tension >= this.max_tension ) {
				this.tension = this.max_tension;
				GlobalFuncs.to_chat( Task13.User, "" + this + " clunks as you draw the string to its maximum tension!" );
			} else {
				((Ent_Static)user).visible_message( "" + Task13.User + " draws back the string of " + this + "!", "You continue drawing back the string of " + this + "!" );
				Task13.Schedule( 25, (Task13.Closure)(() => {
					this.increase_tension( user );
					return;
				}));
			}
			return;
		}

		// Function from file: bow.dm
		public void draw( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.arrow ) ) {
				GlobalFuncs.to_chat( user, "You don't have anything nocked to " + this + "." );
				return;
			}

			if ( ((Mob)user).restrained() ) {
				return;
			}
			this.current_user = user;
			((Ent_Static)user).visible_message( "" + user + " begins to draw back the string of " + this + ".", "You begin to draw back the string of " + this + "." );
			this.tension = 1;
			Task13.Schedule( 25, (Task13.Closure)(() => {
				this.increase_tension( user );
				return;
			}));
			return;
		}

		// Function from file: bow.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic A = null;

			
			if ( this.tension != 0 ) {
				
				if ( Lang13.Bool( this.arrow ) ) {
					((Ent_Static)user).visible_message( "" + user + " relaxes the tension on " + this + "'s string and removes " + this.arrow + ".", "You relax the tension on " + this + "'s string and remove " + this.arrow + "." );
					A = this.arrow;
					A.loc = GlobalFuncs.get_turf( this );
					A.removed( user );
					this.arrow = null;
				} else {
					((Ent_Static)user).visible_message( "" + user + " relaxes the tension on " + this + "'s string.", "You relax the tension on " + this + "'s string." );
				}
				this.tension = 0;
				this.icon_state = "crossbow";
			} else {
				this.draw( user );
			}
			return null;
		}

		// Function from file: bow.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic R = null;
			dynamic C = null;

			
			if ( !Lang13.Bool( this.arrow ) ) {
				
				if ( a is Obj_Item_Weapon_Arrow ) {
					
					if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
						b.WriteMsg( new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
						return null;
					}
					this.arrow = a;
					((Ent_Static)b).visible_message( "" + b + " slides " + this.arrow + " into " + this + ".", "You slide " + this.arrow + " into " + this + "." );
					this.icon_state = "crossbow-nocked";
					return null;
				} else if ( a is Obj_Item_Stack_Rods ) {
					R = a;
					((Obj_Item_Stack)R).use( 1 );
					this.arrow = new Obj_Item_Weapon_Arrow_Rod( this );
					this.arrow.fingerprintslast = this.fingerprintslast;
					this.arrow.loc = this;
					this.icon_state = "crossbow-nocked";
					((Ent_Static)b).visible_message( "" + b + " haphazardly jams " + this.arrow + " into " + this + ".", "You jam " + this.arrow + " into " + this + "." );

					if ( Lang13.Bool( this.cell ) ) {
						
						if ( Convert.ToDouble( this.cell.charge ) >= 500 ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>" + this.arrow + " plinks and crackles as it begins to glow red-hot.</span>" );
							this.arrow.throwforce = 15;
							this.arrow.icon_state = "metal-rod-superheated";
							this.cell.charge -= 500;
						}
					}
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Cell ) {
				
				if ( !Lang13.Bool( this.cell ) ) {
					
					if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
						b.WriteMsg( new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
						return null;
					}
					this.cell = a;
					GlobalFuncs.to_chat( b, "<span class='notice'>You jam " + this.cell + " into " + this + " and wire it to the firing coil.</span>" );

					if ( Lang13.Bool( this.arrow ) ) {
						
						if ( this.arrow is Obj_Item_Weapon_Arrow_Rod && this.arrow.throwforce < 15 && Convert.ToDouble( this.cell.charge ) >= 500 ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>" + this.arrow + " plinks and crackles as it begins to glow red-hot.</span>" );
							this.arrow.throwforce = 15;
							this.arrow.icon_state = "metal-rod-superheated";
							this.cell.charge -= 500;
						}
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " already has a cell installed.</span>" );
				}
			} else if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.cell ) ) {
					C = this.cell;
					C.loc = GlobalFuncs.get_turf( b );
					this.cell = null;
					GlobalFuncs.to_chat( b, "<span class='notice'>You jimmy " + this.cell + " out of " + this + " with " + a + ".</span>" );
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " doesn't have a cell installed.</span>" );
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
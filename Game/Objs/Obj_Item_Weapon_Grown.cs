// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grown : Obj_Item_Weapon {

		public string plantname = null;
		public double potency = 1;

		// Function from file: grown_inedible.dm
		public Obj_Item_Weapon_Grown ( dynamic loc = null ) : base( (object)(loc) ) {
			Reagents R = null;
			Seed S = null;
			double totalreagents = 0;
			dynamic rid = null;
			ByTable reagent_data = null;
			dynamic rtotal = null;
			int coeff = 0;
			dynamic rid2 = null;
			ByTable reagent_data2 = null;
			dynamic rtotal2 = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			R = new Reagents( 50 );
			this.reagents = R;
			R.my_atom = this;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				
				if ( !( this.plantname == null ) ) {
					S = GlobalVars.plant_controller.seeds[this.plantname];

					if ( !( S != null ) || !( S.chems != null ) ) {
						return;
					}
					this.potency = Num13.Floor( S.potency );
					totalreagents = 0;

					foreach (dynamic _a in Lang13.Enumerate( S.chems )) {
						rid = _a;
						
						reagent_data = S.chems[rid];
						rtotal = reagent_data[1];

						if ( reagent_data.len > 1 && this.potency > 0 ) {
							rtotal += Num13.Floor( this.potency / Convert.ToDouble( reagent_data[2] ) );
						}
						totalreagents += Convert.ToDouble( rtotal );
					}

					if ( totalreagents != 0 ) {
						coeff = Num13.MinInt( Convert.ToInt32( this.reagents.maximum_volume / totalreagents ), 1 );

						foreach (dynamic _b in Lang13.Enumerate( S.chems )) {
							rid2 = _b;
							
							reagent_data2 = S.chems[rid2];
							rtotal2 = reagent_data2[1];

							if ( reagent_data2.len > 1 && this.potency > 0 ) {
								rtotal2 += Num13.Floor( this.potency / Convert.ToDouble( reagent_data2[2] ) );
							}
							((Reagents)this.reagents).add_reagent( rid2, Num13.MaxInt( 1, ((int)( Num13.Round( Convert.ToDouble( rtotal2 * coeff ), 0.1 ) )) ) );
						}
					}
				}
				return;
			}));
			return;
		}

		// Function from file: grown_inedible.dm
		public virtual void changePotency( dynamic newValue = null ) {
			this.potency = Convert.ToDouble( newValue );
			return;
		}

	}

}
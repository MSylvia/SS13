// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ConstructableFrame_MachineFrame : Obj_Machinery_ConstructableFrame {

		public Obj_Machinery_ConstructableFrame_MachineFrame ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: constructable_frame.dm
		public void set_build_state( int state = 0 ) {
			this.build_state = state;

			switch ((int)( state )) {
				case 1:
					this.icon_state = "box_0";
					break;
				case 2:
					this.icon_state = "box_1";
					break;
				case 3:
					this.icon_state = "box_2";
					break;
			}
			return;
		}

		// Function from file: constructable_frame.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			dynamic G = null;
			Game_Data M = null;
			dynamic B = null;
			dynamic A = null;
			dynamic A2 = null;
			Type path = null;
			Obj_Item_Stack_CableCoil A3 = null;
			Obj_Item_Weapon W = null;
			bool component_check = false;
			dynamic R = null;
			dynamic new_machine = null;
			Obj O = null;
			Obj O2 = null;
			dynamic replacer = null;
			ByTable added_components = null;
			dynamic part_list = null;
			dynamic path2 = null;
			dynamic part = null;
			Obj_Item_Weapon_StockParts part2 = null;
			dynamic I = null;
			dynamic CP = null;
			int camt = 0;
			Game_Data CC = null;

			
			if ( a.crit_fail ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>This part is faulty, you cannot add this to the machine!</span>" );
				return null;
			}

			switch ((int)( this.build_state )) {
				case 1:
					
					if ( a is Obj_Item_Stack_CableCoil ) {
						C = a;

						if ( Convert.ToDouble( C.amount ) >= 5 ) {
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
							GlobalFuncs.to_chat( b, "<span class='notice'>You start to add cables to the frame.</span>" );

							if ( GlobalFuncs.do_after( b, this, 20 ) ) {
								
								if ( Lang13.Bool( C ) && Convert.ToDouble( C.amount ) >= 5 ) {
									C.use( 5 );
									GlobalFuncs.to_chat( b, "<span class='notice'>You add cables to the frame.</span>" );
									this.set_build_state( 2 );
								}
							}
						}
					} else if ( a is Obj_Item_Stack_Sheet_Glass_Glass ) {
						G = a;

						if ( Convert.ToDouble( G.amount ) < 1 ) {
							GlobalFuncs.to_chat( b, "<span class='warning'>How...?</span>" );
							return null;
						}
						G.use( 1 );
						GlobalFuncs.to_chat( b, "<span class='notice'>You add the glass to the frame.</span>" );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
						new Obj_Structure_DisplaycaseFrame( this.loc );
						GlobalFuncs.qdel( this );
						return null;
					} else if ( a is Obj_Item_Weapon_Wrench ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 75, 1 );
						GlobalFuncs.to_chat( b, "<span class='notice'>You dismantle the frame.</span>" );
						M = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), this.loc );
						((dynamic)M).amount = 5;
						GlobalFuncs.qdel( this );
					}
					break;
				case 2:
					
					if ( !Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
						
						if ( a is Obj_Item_Weapon_Circuitboard ) {
							B = a;

							if ( B.board_type == "machine" ) {
								
								if ( !Lang13.Bool( b.drop_item( B, this ) ) ) {
									b.WriteMsg( new Txt( "<span class='warning'>You can't let go of " ).the( B ).item().str( "!</span>" ).ToString() );
									return null;
								}
								GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
								GlobalFuncs.to_chat( b, "<span class='notice'>You add the circuit board to the frame.</span>" );
								this.circuit = a;
								this.set_build_state( 3 );
								this.components = new ByTable();
								this.req_components = this.circuit.req_components.Copy();

								foreach (dynamic _a in Lang13.Enumerate( this.circuit.req_components )) {
									A = _a;
									
									this.req_components[A] = this.circuit.req_components[A];
								}
								this.req_component_names = this.circuit.req_components.Copy();

								foreach (dynamic _b in Lang13.Enumerate( this.req_components )) {
									A2 = _b;
									
									path = Lang13.FindClass( A2 );
									this.req_component_names[A2] = Lang13.Initial( path, "name" );
								}

								if ( Lang13.Bool( this.circuit.frame_desc ) ) {
									this.desc = this.circuit.frame_desc;
								} else {
									this.update_desc();
								}
								GlobalFuncs.to_chat( b, this.desc );
							} else {
								GlobalFuncs.to_chat( b, "<span class='warning'>This frame does not accept circuit boards of this type!</span>" );
							}
						} else if ( a is Obj_Item_Weapon_Wirecutters ) {
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 50, 1 );
							GlobalFuncs.to_chat( b, "<span class='notice'>You remove the cables.</span>" );
							this.set_build_state( 1 );
							A3 = new Obj_Item_Stack_CableCoil( this.loc );
							A3.amount = 5;
						}
					}
					break;
				case 3:
					
					if ( !Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
						
						if ( a is Obj_Item_Weapon_Crowbar ) {
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
							this.set_build_state( 2 );
							this.circuit.loc = this.loc;
							this.circuit = null;

							if ( this.components.len == 0 ) {
								GlobalFuncs.to_chat( b, "<span class='notice'>You remove the circuit board.</span>" );
							} else {
								GlobalFuncs.to_chat( b, "<span class='notice'>You remove the circuit board and other components.</span>" );

								foreach (dynamic _c in Lang13.Enumerate( this.components, typeof(Obj_Item_Weapon) )) {
									W = _c;
									
									W.loc = this.loc;
								}
							}
							this.desc = Lang13.Initial( this, "desc" );
							this.req_components = null;
							this.components = null;
						} else if ( a is Obj_Item_Weapon_Screwdriver ) {
							component_check = true;

							foreach (dynamic _d in Lang13.Enumerate( this.req_components )) {
								R = _d;
								

								if ( Convert.ToDouble( this.req_components[R] ) > 0 ) {
									component_check = false;
									break;
								}
							}

							if ( component_check ) {
								GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
								new_machine = Lang13.Call( this.circuit.build_path, this.loc );

								foreach (dynamic _e in Lang13.Enumerate( new_machine.component_parts, typeof(Obj) )) {
									O = _e;
									
									GlobalFuncs.returnToPool( O );
								}
								new_machine.component_parts = new ByTable();

								foreach (dynamic _f in Lang13.Enumerate( this, typeof(Obj) )) {
									O2 = _f;
									

									if ( this.circuit.contain_parts ) {
										O2.loc = this.components_in_use;
									} else {
										O2.loc = null;
									}
									new_machine.component_parts += O2;
								}

								if ( this.circuit.contain_parts ) {
									this.circuit.loc = this.components_in_use;
								} else {
									this.circuit.loc = null;
								}
								((Obj_Machinery)new_machine).RefreshParts();
								this.components = null;
								GlobalFuncs.qdel( this );
							}
						} else if ( a is Obj_Item_Weapon_Storage_Bag_Gadgets_PartReplacer && a.contents.len != 0 && this.get_req_components_amt() != 0 ) {
							replacer = a;
							added_components = new ByTable();
							part_list = replacer.contents.Copy();
							part_list = GlobalFuncs.sortTim( part_list, typeof(GlobalFuncs).GetMethod( "cmp_rped_sort" ) );

							foreach (dynamic _g in Lang13.Enumerate( this.req_components )) {
								path2 = _g;
								

								while (Convert.ToDouble( this.req_components[path2] ) > 0 && Lang13.Bool( Lang13.FindIn( Lang13.FindClass( path2 ), part_list ) )) {
									part = Lang13.FindIn( Lang13.FindClass( path2 ), part_list );

									if ( !part.crit_fail ) {
										added_components[part] = path2;
										((Obj_Item_Weapon_Storage)replacer).remove_from_storage( part, this );
										this.req_components[path2]--;
										part_list -= part;
									}
								}
							}

							foreach (dynamic _h in Lang13.Enumerate( added_components, typeof(Obj_Item_Weapon_StockParts) )) {
								part2 = _h;
								
								this.components.Add( part2 );
								GlobalFuncs.to_chat( b, "<span class='notice'>" + part2.name + " applied.</span>" );
							}
							((Obj_Item_Weapon_Storage_Bag_Gadgets_PartReplacer)replacer).play_rped_sound();
							this.update_desc();
						} else if ( a is Obj_Item_Weapon || a is Obj_Item_Stack ) {
							
							foreach (dynamic _i in Lang13.Enumerate( this.req_components )) {
								I = _i;
								

								if ( Lang13.Bool( ((dynamic)Lang13.FindClass( I )).IsInstanceOfType( a ) ) && Convert.ToDouble( this.req_components[I] ) > 0 ) {
									GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );

									if ( a is Obj_Item_Stack ) {
										CP = a;

										if ( Convert.ToDouble( CP.amount ) >= Convert.ToDouble( this.req_components[I] ) ) {
											camt = Num13.MinInt( Convert.ToInt32( CP.amount ), Convert.ToInt32( this.req_components[I] ) );
											CC = GlobalFuncs.getFromPool( Lang13.FindClass( I ), this );
											((dynamic)CC).amount = camt;
											((dynamic)CC).update_icon();
											CP.use( camt );
											this.components.Add( CC );
											this.req_components[I] -= camt;
											this.update_desc();
											break;
										} else {
											GlobalFuncs.to_chat( b, "<span class='warning'>You do not have enough " + a + "!</span>" );
										}
									}

									if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
										this.components.Add( a );
										this.req_components[I]--;
										this.update_desc();
										break;
									}
								}
							}
							GlobalFuncs.to_chat( b, this.desc );

							if ( Lang13.Bool( a ) && a.loc != this && !( a is Obj_Item_Stack_CableCoil ) ) {
								GlobalFuncs.to_chat( b, "<span class='warning'>You cannot add that component to the machine!</span>" );
							}
						}
					}
					break;
			}
			return null;
		}

	}

}
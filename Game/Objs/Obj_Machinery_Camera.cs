// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Camera : Obj_Machinery {

		public Wires_Camera wires = null;
		public dynamic network = new ByTable(new object [] { "SS13" });
		public dynamic c_tag = null;
		public int c_tag_order = 999;
		public bool status = true;
		public dynamic invuln = null;
		public bool bugged = false;
		public Obj_Item_Weapon_CameraAssembly assembly = null;
		public bool light_on = false;
		public dynamic view_range = 7;
		public int short_range = 2;
		public bool light_disabled = false;
		public bool alarm_on = false;
		public bool busy = false;
		public bool hear_voice = false;
		public ByTable motionTargets = new ByTable();
		public int detectTime = 0;
		public Zone_AiMonitored area_motion = null;
		public int alarm_delay = 100;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.use_power = 2;
			this.idle_power_usage = 5;
			this.active_power_usage = 10;
			this.anchored = 1;
			this.machine_flags = 2;
			this.flags = 257;
			this.icon = "icons/obj/monitors.dmi";
			this.icon_state = "camera";
			this.layer = 5;
		}

		// Function from file: camera.dm
		public Obj_Machinery_Camera ( dynamic loc = null ) : base( (object)(loc) ) {
			this.wires = new Wires_Camera( this );
			this.assembly = new Obj_Item_Weapon_CameraAssembly( this );
			this.assembly.state = 4;

			if ( !Lang13.Bool( this.network ) || this.network.len < 1 ) {
				
				if ( this.loc != null ) {
					GlobalFuncs.error( "" + this.name + " in " + GlobalFuncs.get_area( this ) + " (x:" + this.x + " y:" + this.y + " z:" + this.z + " has errored. " + ( Lang13.Bool( this.network ) ? "Empty network list" : "Null network list" ) );
				} else {
					GlobalFuncs.error( "" + this.name + " in " + GlobalFuncs.get_area( this ) + "has errored. " + ( Lang13.Bool( this.network ) ? "Empty network list" : "Null network list" ) );
				}

				if ( !Lang13.Bool( this.network ) ) {
					Task13.Crash( "" + "code/game/machinery/camera/camera.dm" + ":" + 69 + ":Assertion Failed: " + "src.network" );
				}

				if ( !( this.network.len > 0 ) ) {
					Task13.Crash( "" + "code/game/machinery/camera/camera.dm" + ":" + 70 + ":Assertion Failed: " + "src.network.len > 0" );
				}
			}

			if ( !Lang13.Bool( this.c_tag ) ) {
				this.name_camera();
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.adv_camera != null && GlobalVars.adv_camera.initialized && !Lang13.Bool( GlobalVars.adv_camera.camerasbyzlevel["" + this.z].Contains( this ) ) ) {
				GlobalVars.adv_camera.update( this.z, false, this, 1 );
			}
			this.update_hear();
			return;
		}

		// Function from file: camera.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic key = null;

			this.deactivate( null, false );

			if ( this.assembly != null ) {
				GlobalFuncs.qdel( this.assembly );
				this.assembly = null;
			}
			this.wires = null;
			GlobalVars.cameranet.removeCamera( this );

			if ( GlobalVars.adv_camera != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.adv_camera.camerasbyzlevel )) {
					key = _a;
					
					GlobalVars.adv_camera.camerasbyzlevel[key] -= this;
				}
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: update_triggers.dm
		public void deactivate( Mob user = null, bool? choice = null ) {
			choice = choice ?? true;

			this._internal_deactivate( user, choice );

			if ( this.can_use() ) {
				GlobalVars.cameranet.addCamera( this );
			} else {
				this.set_light( 0 );
				GlobalVars.cameranet.removeCamera( this );
			}
			return;
		}

		// Function from file: tracking.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( !( user is Mob_Living_Silicon_Ai ) ) {
				return null;
			}

			if ( !this.can_use() ) {
				return null;
			}
			user.eyeobj.forceMove( GlobalFuncs.get_turf( this ) );
			return null;
		}

		// Function from file: motion.dm
		public override bool HasProximity( dynamic AM = null ) {
			
			if ( !( this.area_motion != null ) ) {
				
				if ( AM is Mob_Living ) {
					this.newTarget( AM );
				}
			}
			return false;
		}

		// Function from file: motion.dm
		public override dynamic process(  ) {
			dynamic _default = null;

			int elapsed = 0;
			dynamic target = null;

			
			if ( !Lang13.Bool( this.isMotion() ) ) {
				_default = 26;
				return _default;
			}

			if ( this.detectTime > 0 ) {
				elapsed = Game13.time - this.detectTime;

				if ( elapsed > this.alarm_delay ) {
					this.triggerAlarm();
				}
			} else if ( this.detectTime == -1 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.motionTargets )) {
					target = _a;
					

					if ( Convert.ToInt32( target.stat ) == 2 ) {
						this.lostTarget( target );
					}

					if ( !( this.area_motion != null ) ) {
						
						if ( !this.Adjacent( target ) ) {
							this.lostTarget( target );
						}
					}
				}
			}
			return _default;
		}

		// Function from file: camera.dm
		public override dynamic Hear( dynamic speech = null, dynamic rendered_speech = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { speech, rendered_speech } ).Extend(_);

			Obj_Machinery_Computer_Security S = null;
			dynamic M = null;
			dynamic M2 = null;

			
			if ( _args[2] == null ) {
				_args[2] = "";
			}

			if ( Lang13.Bool( this.isHearing() ) ) {
				
				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.tv_monitors, typeof(Obj_Machinery_Computer_Security) )) {
					S = _c;
					

					if ( S.current == this ) {
						
						if ( S is Obj_Machinery_Computer_Security_Telescreen ) {
							
							foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( S, Game13.view ) )) {
								M = _a;
								
								GlobalFuncs.to_chat( M, new Txt( "<span style='color:grey'>" ).icon( S ).item( this.tv_message( M, _args[1] ) ).str( "</span>" ).ToString() );
							}
						} else {
							
							foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( S, 1 ) )) {
								M2 = _b;
								
								GlobalFuncs.to_chat( M2, new Txt( "<span style='color:grey'>" ).icon( S ).item( this.tv_message( M2, _args[1] ) ).str( "</span>" ).ToString() );
							}
						}
					}
				}
			}
			return null;
		}

		// Function from file: camera.dm
		public override bool wirejack( dynamic P = null ) {
			
			if ( base.wirejack( (object)(P) ) ) {
				((Mob)P).set_machine( P );
				P.current = this;
				P.reset_view( this );
				return true;
			}
			return false;
		}

		// Function from file: camera.dm
		public override void attack_pai( Mob_Living_Silicon_Pai user = null ) {
			this.wirejack( user );
			return;
		}

		// Function from file: camera.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic s = null;
			dynamic U = null;
			dynamic U2 = null;
			dynamic X = null;
			dynamic P = null;
			string itemname = null;
			dynamic info = null;
			Mob_Living_Silicon_Ai O = null;
			dynamic O2 = null;
			dynamic S = null;

			
			if ( a is Obj_Item_Weapon_Screwdriver ) {
				this.togglePanelOpen( a, b, this.icon_state );
			} else if ( ( a is Obj_Item_Weapon_Wirecutters || a is Obj_Item_Device_Multitool ) && this.panel_open ) {
				this.wires.Interact( b );
			} else if ( a is Obj_Item_Weapon_Weldingtool && this.wires.CanDeconstruct() ) {
				
				if ( this.weld( a, b ) ) {
					
					if ( this.assembly != null ) {
						this.assembly.state = 1;
						this.assembly.loc = this.loc;
						this.assembly = null;
					}
					GlobalFuncs.qdel( this );
				}
			} else if ( GlobalFuncs.is_type_in_list( a, this.assembly.possible_upgrades ) ) {
				
				if ( GlobalFuncs.is_type_in_list( a, this.assembly.upgrades ) ) {
					GlobalFuncs.to_chat( b, new Txt( "The camera already has " ).a( a ).item().str( " inside!" ).ToString() );
					return null;
				}

				if ( !this.panel_open ) {
					GlobalFuncs.to_chat( b, "You can't reach into the camera's circuitry while the maintenance panel is closed." );
					return null;
				}

				if ( a is Obj_Item_Stack ) {
					s = a;
					s.use( 1 );
					this.assembly.upgrades.Add( new Obj_Item_Stack_Sheet_Mineral_Plasma() );
				} else {
					
					if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
						return null;
					}
					this.assembly.upgrades.Add( a );
				}
				GlobalFuncs.to_chat( b, "You attach the " + a + " into the camera's inner circuits." );
				this.update_icon();
				this.update_hear();
				GlobalVars.cameranet.updateVisibility( this, false );
				return null;
			} else if ( a is Obj_Item_Weapon_Crowbar ) {
				
				if ( !this.panel_open ) {
					GlobalFuncs.to_chat( b, "You can't reach into the camera's circuitry while the maintenance panel is closed." );
					return null;
				}

				if ( this.assembly.upgrades.len != 0 ) {
					U = Lang13.FindIn( typeof(Obj), this.assembly.upgrades );

					if ( Lang13.Bool( U ) ) {
						GlobalFuncs.to_chat( b, new Txt( "You unattach " ).the( U ).item().str( " from the camera." ).ToString() );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
						U.loc = GlobalFuncs.get_turf( this );
						this.assembly.upgrades.Remove( U );
						this.update_icon();
						this.update_hear();
						GlobalVars.cameranet.updateVisibility( this, false );
					}
					return null;
				} else {
					GlobalFuncs.to_chat( b, "The camera is firmly welded to the wall." );
					return null;
				}
			} else if ( ( a is Obj_Item_Weapon_Paper || a is Obj_Item_Device_Pda ) && b is Mob_Living ) {
				((Mob)b).delayNextAttack( 5 );
				U2 = b;
				X = null;
				P = null;
				itemname = "";
				info = "";

				if ( a is Obj_Item_Weapon_Paper ) {
					X = a;
					itemname = X.name;
					info = X.info;
				} else {
					P = a;
					itemname = P.name;
					info = P.notehtml;
				}
				GlobalFuncs.to_chat( U2, new Txt( "You hold " ).a( itemname ).item().str( " up to the camera ..." ).ToString() );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Silicon_Ai) )) {
					O = _a;
					

					if ( !( O.client != null ) ) {
						continue;
					}

					if ( U2.name == "Unknown" ) {
						GlobalFuncs.to_chat( O, new Txt( "<span class='name'>" ).item( U2 ).str( "</span> holds " ).a( itemname ).item().str( " up to one of your cameras ..." ).ToString() );
					} else {
						GlobalFuncs.to_chat( O, new Txt( "<span class='name'><a href='byond://?src=" ).Ref( O ).str( ";track2=" ).Ref( O ).str( ";track=" ).Ref( U2 ).str( "'>" ).item( U2 ).str( "</a></span> holds " ).a( itemname ).item().str( " up to one of your cameras ..." ).ToString() );
					}
					Interface13.Browse( O, "<HTML><HEAD><TITLE>" + itemname + "</TITLE></HEAD><BODY><TT>" + info + "</TT></BODY></HTML>", "window=" + itemname );
				}

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list )) {
					O2 = _b;
					

					if ( O2.machine is Obj_Machinery_Computer_Security ) {
						S = O2.machine;

						if ( S.current == this ) {
							GlobalFuncs.to_chat( O2, new Txt().item( U2 ).str( " holds " ).a( itemname ).item().str( " up to one of the cameras ..." ).ToString() );
							Interface13.Browse( O2, "<HTML><HEAD><TITLE>" + itemname + "</TITLE></HEAD><BODY><TT>" + info + "</TT></BODY></HTML>", "window=" + itemname );
						}
					}
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: camera.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !( a is Mob_Living_Carbon_Alien_Humanoid ) ) {
				return null;
			}

			if ( !this.status ) {
				return null;
			}
			this.status = false;
			this.update_icon();
			this.visible_message( new Txt( "<span class='warning'>" ).The( a ).item().str( " slashes at " ).item( this ).str( "!</span>" ).ToString() );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/slash.ogg", 100, 1 );
			this.add_hiddenprint( a );
			this.deactivate( a, false );
			return null;
		}

		// Function from file: camera.dm
		public override bool shock( dynamic user = null, int? prb = null, double? siemenspassed = null ) {
			
			if ( !( user is Mob_Living ) ) {
				return false;
			}
			((Mob_Living)user).electrocute_act( 10, this );
			return false;
		}

		// Function from file: camera.dm
		public override bool blob_act( dynamic severity = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: camera.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			if ( Lang13.Bool( this.invuln ) ) {
				return false;
			} else {
				base.ex_act( severity, (object)(child) );
			}
			return false;
		}

		// Function from file: camera.dm
		public override dynamic emp_act( int severity = 0 ) {
			dynamic previous_network = null;
			dynamic O = null;
			dynamic S = null;

			
			if ( Lang13.Bool( this.isEmpProof() ) ) {
				return null;
			}

			if ( Rand13.PercentChance( ((int)( 100 / severity )) ) ) {
				previous_network = this.network;
				this.network = new ByTable();
				GlobalVars.cameranet.removeCamera( this );
				this.stat |= 16;
				this.set_light( 0 );
				this.triggerCameraAlarm();
				this.update_icon();
				Task13.Schedule( 900, (Task13.Closure)(() => {
					this.network = previous_network;
					this.stat &= 65519;
					this.cancelCameraAlarm();
					this.update_icon();

					if ( this.can_use() ) {
						GlobalVars.cameranet.addCamera( this );
						GlobalVars.adv_camera.update( this.z, false, this, 1 );
					}
					return;
				}));

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
					O = _a;
					

					if ( O.machine is Obj_Machinery_Computer_Security ) {
						S = O.machine;

						if ( S.current == this ) {
							((Mob)O).unset_machine();
							O.reset_view( null );
							GlobalFuncs.to_chat( O, "The screen bursts into static." );
						}
					}
				}
				base.emp_act( severity );
			}
			return null;
		}

		// Function from file: camera.dm
		public override void change_area( dynamic oldarea = null, dynamic newarea = null ) {
			string nethash = null;

			nethash = GlobalFuncs.english_list( this.network );
			GlobalVars.camera_names[nethash + this.c_tag] = null;
			base.change_area( (object)(oldarea), (object)(newarea) );

			if ( this.name != GlobalFuncs.replacetext( this.name, oldarea, newarea ) ) {
				this.name_camera();
			}
			return;
		}

		// Function from file: presets.dm
		public void upgradeHearing(  ) {
			this.assembly.upgrades.Add( new Obj_Item_Device_Assembly_Voice( this.assembly ) );
			this.update_hear();
			return;
		}

		// Function from file: presets.dm
		public void upgradeMotion(  ) {
			this.assembly.upgrades.Add( new Obj_Item_Device_Assembly_ProxSensor( this.assembly ) );
			return;
		}

		// Function from file: presets.dm
		public void upgradeXRay(  ) {
			this.assembly.upgrades.Add( new Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Carrot( this.assembly ) );
			return;
		}

		// Function from file: presets.dm
		public void upgradeEmpProof(  ) {
			this.assembly.upgrades.Add( new Obj_Item_Stack_Sheet_Mineral_Plasma( this.assembly ) );
			return;
		}

		// Function from file: presets.dm
		public dynamic isHearing(  ) {
			dynamic O = null;

			O = Lang13.FindIn( typeof(Obj_Item_Device_Assembly_Voice), this.assembly.upgrades );
			return O;
		}

		// Function from file: presets.dm
		public dynamic isMotion(  ) {
			dynamic O = null;

			O = Lang13.FindIn( typeof(Obj_Item_Device_Assembly_ProxSensor), this.assembly.upgrades );
			return O;
		}

		// Function from file: presets.dm
		public dynamic isXRay(  ) {
			dynamic O = null;

			O = Lang13.FindIn( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Carrot), this.assembly.upgrades );
			return O;
		}

		// Function from file: presets.dm
		public dynamic isEmpProof(  ) {
			dynamic O = null;

			O = Lang13.FindIn( typeof(Obj_Item_Stack_Sheet_Mineral_Plasma), this.assembly.upgrades );
			return O;
		}

		// Function from file: motion.dm
		public bool triggerAlarm(  ) {
			Mob_Living_Silicon aiPlayer = null;

			
			if ( !( this.detectTime != 0 ) ) {
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Silicon) )) {
				aiPlayer = _a;
				

				if ( this.status ) {
					aiPlayer.triggerAlarm( "Motion", this.areaMaster, this );
				}
			}
			this.detectTime = -1;
			return true;
		}

		// Function from file: motion.dm
		public bool cancelAlarm(  ) {
			Mob_Living_Silicon aiPlayer = null;

			
			if ( this.detectTime == -1 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Silicon) )) {
					aiPlayer = _a;
					

					if ( this.status ) {
						aiPlayer.cancelAlarm( "Motion", this.areaMaster );
					}
				}
			}
			this.detectTime = 0;
			return true;
		}

		// Function from file: motion.dm
		public void lostTarget( dynamic target = null ) {
			
			if ( this.motionTargets.Contains( target ) ) {
				this.motionTargets.Remove( target );
			}

			if ( this.motionTargets.len == 0 ) {
				this.cancelAlarm();
			}
			return;
		}

		// Function from file: motion.dm
		public bool newTarget( dynamic target = null ) {
			
			if ( target is Mob_Living_Silicon_Ai ) {
				return false;
			}

			if ( this.detectTime == 0 ) {
				this.detectTime = Game13.time;
			}

			if ( !this.motionTargets.Contains( target ) ) {
				this.motionTargets.Add( target );
			}
			return true;
		}

		// Function from file: camera.dm
		public void tv_message( dynamic hearer = null, Speech speech = null ) {
			speech.wrapper_classes.Add( "tv" );
			((Ent_Dynamic)hearer).Hear( speech );
			return;
		}

		// Function from file: camera.dm
		public bool weld( dynamic WT = null, dynamic user = null ) {
			
			if ( this.busy ) {
				return false;
			}

			if ( !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
				return false;
			}
			GlobalFuncs.to_chat( user, "<span class='notice'>You start to weld the " + this + ".</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder.ogg", 50, 1 );
			WT.eyecheck( user );
			this.busy = true;

			if ( GlobalFuncs.do_after( user, this, 100 ) ) {
				this.busy = false;

				if ( !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
					return false;
				}
				return true;
			}
			this.busy = false;
			return false;
		}

		// Function from file: camera.dm
		public ByTable can_see(  ) {
			ByTable see = null;
			dynamic pos = null;

			see = null;
			pos = GlobalFuncs.get_turf( this );

			if ( Lang13.Bool( this.isXRay() ) ) {
				see = Map13.FetchInRange( pos, this.view_range );
			} else {
				see = GlobalFuncs.get_hear( this.view_range, pos );
			}
			return see;
		}

		// Function from file: camera.dm
		public bool can_use(  ) {
			
			if ( !this.status ) {
				return false;
			}

			if ( ( this.stat & 16 ) != 0 ) {
				return false;
			}
			return true;
		}

		// Function from file: camera.dm
		public void cancelCameraAlarm(  ) {
			Mob_Living_Silicon S = null;

			
			if ( this.alarm_on ) {
				GlobalVars.adv_camera.update( this.z, false, this, 4 );
			}
			this.alarm_on = false;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon) )) {
				S = _a;
				
				S.cancelAlarm( "Camera", this.areaMaster, this );
			}
			return;
		}

		// Function from file: camera.dm
		public void triggerCameraAlarm(  ) {
			Mob_Living_Silicon S = null;

			
			if ( !this.alarm_on ) {
				GlobalVars.adv_camera.update( this.z, false, this, 4 );
			}
			this.alarm_on = true;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon) )) {
				S = _a;
				
				S.triggerAlarm( "Camera", this.areaMaster, new ByTable(new object [] { this }), this );
			}
			return;
		}

		// Function from file: camera.dm
		[VerbInfo( name: "deactivate" )]
		[VerbArg( 1, InputType.Mob )]
		public void _internal_deactivate( Mob user = null, bool? choice = null ) {
			choice = choice ?? true;

			dynamic O = null;
			dynamic S = null;

			
			if ( choice == true ) {
				this.status = !this.status;
				this.update_icon();

				if ( !this.status ) {
					
					if ( user != null ) {
						this.visible_message( "<span class='warning'>" + user + " has deactivated " + this + "!</span>" );
						this.add_hiddenprint( user );
					} else {
						this.visible_message( new Txt( "<span class='warning'> " ).The( this ).item().str( " deactivates!</span>" ).ToString() );
					}
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 50, 1 );
					this.add_hiddenprint( user );
				} else {
					
					if ( user != null ) {
						this.visible_message( "<span class='warning'> " + user + " has reactivated " + this + "!</span>" );
						this.add_hiddenprint( user );
					} else {
						this.visible_message( new Txt( "<span class='warning'> " ).The( this ).item().str( " reactivates!</span>" ).ToString() );
					}
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 50, 1 );
					this.add_hiddenprint( user );
				}
				GlobalVars.cameranet.updateVisibility( this, false );
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list )) {
				O = _a;
				

				if ( O.machine is Obj_Machinery_Computer_Security ) {
					S = O.machine;

					if ( S.current == this ) {
						((Mob)O).unset_machine();
						O.reset_view( null );
						GlobalFuncs.to_chat( O, "The screen bursts into static." );
					}
				}
			}

			if ( choice == true && this.can_use() ) {
				GlobalVars.adv_camera.update( this.z, false, this, 1 );
			} else {
				GlobalVars.adv_camera.update( this.z, false, this, 2 );
			}
			return;
		}

		// Function from file: camera.dm
		public void setViewRange( dynamic num = null ) {
			num = num ?? 7;

			this.view_range = num;
			GlobalVars.cameranet.updateVisibility( this, false );
			return;
		}

		// Function from file: camera.dm
		public void name_camera(  ) {
			dynamic A = null;
			string basename = null;
			string nethash = null;
			int suffix = 0;

			A = GlobalFuncs.get_area( this );
			basename = A.name;
			nethash = GlobalFuncs.english_list( this.network );
			suffix = 0;

			while (GlobalVars.camera_names.Contains( !( suffix != 0 ) || Lang13.Bool( nethash + this.c_tag ) )) {
				this.c_tag = "" + basename;

				if ( suffix != 0 ) {
					this.c_tag += " " + suffix;
				}
				suffix++;
			}
			GlobalVars.camera_names[nethash + this.c_tag] = this;
			return;
		}

		// Function from file: camera.dm
		public void update_hear(  ) {
			
			if ( !this.hear_voice && Lang13.Bool( this.isHearing() ) ) {
				this.hear_voice = true;
				this.addHear();
			}

			if ( this.hear_voice && !Lang13.Bool( this.isHearing() ) ) {
				this.hear_voice = false;
				this.removeHear();
			}
			return;
		}

		// Function from file: camera.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			int EMPd = 0;
			bool deactivated = false;
			string camtype = null;

			EMPd = this.stat & 16;
			deactivated = !this.status;
			camtype = "camera";

			if ( this.assembly != null ) {
				camtype = ( Lang13.Bool( this.isXRay() ) ? "xraycam" : "camera" );
			}

			if ( deactivated ) {
				this.icon_state = "" + camtype + "1";
			} else if ( EMPd != 0 ) {
				this.icon_state = "" + camtype + "emp";
			} else {
				this.icon_state = "" + camtype;
			}
			return null;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Decal_Cleanable_Crayon : Obj_Effect_Decal_Cleanable {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/rune.dmi";
			this.layer = 2.1;
		}

		// Function from file: crayon.dm
		public Obj_Effect_Decal_Cleanable_Crayon ( dynamic location = null, dynamic main = null, dynamic shade = null, dynamic type = null ) : base( (object)(location) ) {
			main = main ?? "#FFFFFF";
			shade = shade ?? "#000000";
			type = type ?? "rune";

			Icon mainOverlay = null;
			Icon shadeOverlay = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.loc = location;
			this.name = type;
			this.desc = "A " + type + " drawn in crayon.";

			dynamic _a = type; // Was a switch-case, sorry for the mess.
			if ( _a=="rune" ) {
				type = "rune" + Rand13.Int( 1, 6 );
			} else if ( _a=="graffiti" ) {
				type = Rand13.Pick(new object [] { "amyjon", "face", "matt", "revolution", "engie", "guy", "end", "dwarf", "uboa", "heart", "borgsrogue", "shitcurity", "catbeast", "voxpox", "security", "hieroglyphs" + Rand13.Int( 1, 3 ), "nanotrasen", "lie", "syndicate" + Rand13.Int( 1, 2 ), "lambda", "50bless", "chaos" });
			}
			mainOverlay = new Icon( "icons/effects/crayondecal.dmi", "" + type, 201 );
			shadeOverlay = new Icon( "icons/effects/crayondecal.dmi", "" + type + "s", 201 );
			mainOverlay.Blend( main, 0 );
			shadeOverlay.Blend( shade, 0 );
			this.overlays.Add( mainOverlay );
			this.overlays.Add( shadeOverlay );
			this.add_hiddenprint( Task13.User );
			return;
		}

	}

}
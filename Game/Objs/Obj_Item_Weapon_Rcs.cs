// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Rcs : Obj_Item_Weapon {

		public int rcharges = 10;
		public dynamic pad = null;
		public int last_charge = 30;
		public bool mode = false;
		public bool rand_x = false;
		public bool rand_y = false;
		public bool emagged = false;
		public bool teleporting = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 10;
			this.throwforce = 10;
			this.throw_speed = 1;
			this.throw_range = 5;
			this.icon = "icons/obj/telescience.dmi";
			this.icon_state = "rcs";
		}

		// Function from file: telepad.dm
		public Obj_Item_Weapon_Rcs ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.processing_objects.Add( this );
			return;
		}

		// Function from file: telepad.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Effect_Effect_System_SparkSpread s = null;

			
			if ( a is Obj_Item_Weapon_Card_Emag && !this.emagged ) {
				this.emagged = true;
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 5, 1, this );
				s.start();
				GlobalFuncs.to_chat( b, "<span class = 'caution'>You emag the RCS. Click on it to toggle between modes.</span>" );
				return null;
			}
			return null;
		}

		// Function from file: telepad.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.emagged ) {
				
				if ( !this.mode ) {
					this.mode = true;
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/pop.ogg", 50, 0 );
					GlobalFuncs.to_chat( user, "<span class = 'caution'> The telepad locator has become uncalibrated.</span>" );
				} else {
					this.mode = false;
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/pop.ogg", 50, 0 );
					GlobalFuncs.to_chat( user, "<span class = 'caution'>You calibrate the telepad locator.</span>" );
				}
			}
			return null;
		}

		// Function from file: telepad.dm
		public override dynamic process(  ) {
			
			if ( this.rcharges > 10 ) {
				this.rcharges = 10;
			}

			if ( this.last_charge == 0 ) {
				this.rcharges++;
				this.last_charge = 30;
			} else {
				this.last_charge--;
			}
			return null;
		}

		// Function from file: telepad.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.processing_objects.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: telepad.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>There are " + this.rcharges + " charges left.</span>" );
			return null;
		}

	}

}
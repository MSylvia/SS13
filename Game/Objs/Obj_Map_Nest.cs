// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Map_Nest : Obj_Map {

		public Type mobType = typeof(Mob_Living_SimpleAnimal_Hostile_Humanoid_Russian);
		public int breedTime = 3000;
		public int breedChance = 75;
		public double pop = 10;
		public double popMin = 2;
		public double popMax = 30;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/map/nests.dmi";
		}

		// Function from file: nests.dm
		public Obj_Map_Nest ( dynamic loc = null ) : base( (object)(loc) ) {
			
			while (this.pop != 0) {
				Lang13.Call( this.mobType, this.loc );
				this.pop--;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.ticker();
				return;
			}));
			return;
		}

		// Function from file: nests.dm
		public void ticker(  ) {
			dynamic M = null;

			
			while (this != null) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_area( this ) )) {
					M = _a;
					

					if ( Lang13.Bool( ((dynamic)this.mobType).IsInstanceOfType( M ) ) ) {
						this.pop++;
					} else {
						this.pop--;
					}
				}

				if ( Lang13.IsInRange( this.pop, this.popMin, this.popMax ) ) {
					
					if ( Rand13.PercentChance( this.breedChance ) ) {
						Lang13.Call( this.mobType, this.loc );
					}
				}
				Task13.Sleep( this.breedTime );
			}
			return;
		}

	}

}
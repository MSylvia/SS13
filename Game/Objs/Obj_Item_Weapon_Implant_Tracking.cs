// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Implant_Tracking : Obj_Item_Weapon_Implant {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.activated = false;
			this.origin_tech = "materials=2;magnets=2;programming=2;biotech=2";
		}

		// Function from file: implant_track.dm
		public Obj_Item_Weapon_Implant_Tracking ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.tracked_implants.Add( this );
			return;
		}

		// Function from file: implant_track.dm
		public override string get_data(  ) {
			string dat = null;

			dat = @"<b>Implant Specifications:</b><BR>
				<b>Name:</b> Tracking Beacon<BR>
				<b>Life:</b> 10 minutes after death of host<BR>
				<b>Important Notes:</b> None<BR>
				<HR>
				<b>Implant Details:</b> <BR>
				<b>Function:</b> Continuously transmits low power signal. Useful for tracking.<BR>
				<b>Special Features:</b><BR>
				<i>Neuro-Safe</i>- Specialized shell absorbs excess voltages self-destructing the chip if
				a malfunction occurs thereby securing safety of subject. The implant will melt and
				disintegrate into bio-safe elements.<BR>
				<b>Integrity:</b> Gradient creates slight risk of being overcharged and frying the
				circuitry. As a result neurotoxins can cause massive damage.";
			return dat;
		}

		// Function from file: implant_track.dm
		public override dynamic Destroy(  ) {
			base.Destroy();
			GlobalVars.tracked_implants.Remove( this );
			return null;
		}

	}

}
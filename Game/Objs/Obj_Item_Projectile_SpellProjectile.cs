// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Projectile_SpellProjectile : Obj_Item_Projectile {

		public Spell_Targeted_Projectile carried = null;
		public bool proj_trail = false;
		public int proj_trail_lifespan = 0;
		public string proj_trail_icon = "icons/obj/wizard.dmi";
		public string proj_trail_icon_state = "trail";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.nodamage = true;
			this.kill_count = 10;
		}

		public Obj_Item_Projectile_SpellProjectile ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: spell_projectile.dm
		public override bool OnDeath(  ) {
			
			if ( this.loc != null ) {
				this.prox_cast( this.carried.choose_prox_targets( this.carried.holder, this ) );
			}
			return false;
		}

		// Function from file: spell_projectile.dm
		public override dynamic Bump( Obj Obstacle = null, dynamic yes = null ) {
			
			if ( this.loc != null ) {
				this.prox_cast( this.carried.choose_prox_targets( this.carried.holder, this ) );
			}
			return null;
		}

		// Function from file: spell_projectile.dm
		public void prox_cast( ByTable targets = null ) {
			
			if ( this.loc != null ) {
				this.carried.prox_cast( targets, this );
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: spell_projectile.dm
		public override void process_step(  ) {
			ByTable targets = null;
			Game_Data trail = null;

			base.process_step();

			if ( !( this.loc == null ) ) {
				
				if ( this.carried != null ) {
					targets = this.carried.choose_prox_targets( this.carried.holder, this );

					if ( targets.len != 0 ) {
						this.prox_cast( targets );
					}
				}

				if ( this.proj_trail && this != null && this.loc != null ) {
					trail = GlobalFuncs.getFromPool( typeof(Obj_Effect_Overlay), this.loc );
					((dynamic)trail).icon = this.proj_trail_icon;
					((dynamic)trail).icon_state = this.proj_trail_icon_state;
					((dynamic)trail).density = 0;
					Task13.Schedule( this.proj_trail_lifespan, (Task13.Closure)(() => {
						GlobalFuncs.returnToPool( trail );
						return;
					}));
				}
			}
			return;
		}

		// Function from file: spell_projectile.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			return false;
		}

	}

}
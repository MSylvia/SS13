// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Radio_Integrated_Beepsky : Obj_Item_Radio_Integrated {

		public ByTable botlist = null;
		public dynamic active = null;
		public dynamic botstatus = null;
		public double control_freq = 1447;

		// Function from file: radio.dm
		public Obj_Item_Radio_Integrated_Beepsky ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 5, (Task13.Closure)(() => {
				
				if ( GlobalVars.radio_controller != null ) {
					GlobalVars.radio_controller.add_object( this, this.control_freq, GlobalVars.RADIO_SECBOT );
				}
				return;
			}));
			return;
		}

		// Function from file: radio.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			Ent_Static PDA = null;

			base.Topic( href, href_list, (object)(hclient) );
			PDA = this.hostpda;

			dynamic _a = href_list["op"]; // Was a switch-case, sorry for the mess.
			if ( _a=="control" ) {
				this.active = Lang13.FindObj( href_list["bot"] );
				this.post_signal( this.control_freq, "command", "bot_status", "active", this.active, null, null, GlobalVars.RADIO_SECBOT );
			} else if ( _a=="scanbots" ) {
				this.botlist = null;
				this.post_signal( this.control_freq, "command", "bot_status", null, null, null, null, GlobalVars.RADIO_SECBOT );
			} else if ( _a=="botlist" ) {
				this.active = null;
			} else if ( _a=="stop" || _a=="go" ) {
				this.post_signal( this.control_freq, "command", href_list["op"], "active", this.active, null, null, GlobalVars.RADIO_SECBOT );
				this.post_signal( this.control_freq, "command", "bot_status", "active", this.active, null, null, GlobalVars.RADIO_SECBOT );
			} else if ( _a=="summon" ) {
				this.post_signal( this.control_freq, "command", "summon", "active", this.active, "target", GlobalFuncs.get_turf( PDA ), GlobalVars.RADIO_SECBOT );
				this.post_signal( this.control_freq, "command", "bot_status", "active", this.active, null, null, GlobalVars.RADIO_SECBOT );
			}
			((dynamic)PDA).cartridge.unlock();
			return null;
		}

		// Function from file: radio.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			dynamic b = null;

			
			if ( ((dynamic)signal).data["type"] == "secbot" ) {
				
				if ( !( this.botlist != null ) ) {
					this.botlist = new ByTable();
				}

				if ( !this.botlist.Contains( ((dynamic)signal).source ) ) {
					this.botlist.Add( ((dynamic)signal).source );
				}

				if ( this.active == ((dynamic)signal).source ) {
					b = ((dynamic)signal).data;
					this.botstatus = b.Copy();
				}
			}
			return false;
		}

		// Function from file: radio.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( GlobalVars.radio_controller != null ) {
				GlobalVars.radio_controller.remove_object( this, this.control_freq );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_TableFrame : Obj_Structure {

		public Type framestack = typeof(Obj_Item_Stack_Rods);
		public int? framestackamount = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "table_frame";
			this.layer = 2.8;
		}

		public Obj_Structure_TableFrame ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: table_frames.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			int? i = null;
			dynamic P = null;
			dynamic M = null;
			dynamic G = null;
			dynamic S = null;

			
			if ( A is Obj_Item_Weapon_Wrench ) {
				user.WriteMsg( "<span class='notice'>You start disassembling " + this + "...</span>" );
				GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );

				if ( GlobalFuncs.do_after( user, 30 / A.toolspeed, null, this ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 50, 1 );
					i = null;
					i = 1;

					while (( i ??0) <= ( this.framestackamount ??0)) {
						Lang13.Call( this.framestack, GlobalFuncs.get_turf( this ) );
						i++;
					}
					GlobalFuncs.qdel( this );
					return null;
				}
			}

			if ( A is Obj_Item_Stack_Sheet_Plasteel ) {
				P = A;

				if ( ( ((Obj_Item_Stack)P).get_amount() ??0) < 1 ) {
					user.WriteMsg( "<span class='warning'>You need one plasteel sheet to do this!</span>" );
					return null;
				}
				user.WriteMsg( "<span class='notice'>You start adding " + P + " to " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 50, null, this ) ) {
					P.use( 1 );
					new Obj_Structure_Table_Reinforced( this.loc );
					GlobalFuncs.qdel( this );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Metal ) {
				M = A;

				if ( ( ((Obj_Item_Stack)M).get_amount() ??0) < 1 ) {
					user.WriteMsg( "<span class='warning'>You need one metal sheet to do this!</span>" );
					return null;
				}
				user.WriteMsg( "<span class='notice'>You start adding " + M + " to " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 20, null, this ) ) {
					M.use( 1 );
					new Obj_Structure_Table( this.loc );
					GlobalFuncs.qdel( this );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Glass ) {
				G = A;

				if ( ( ((Obj_Item_Stack)G).get_amount() ??0) < 1 ) {
					user.WriteMsg( "<span class='warning'>You need one glass sheet to do this!</span>" );
					return null;
				}
				user.WriteMsg( "<span class='notice'>You start adding " + G + " to " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 20, null, this ) ) {
					G.use( 1 );
					new Obj_Structure_Table_Glass( this.loc );
					GlobalFuncs.qdel( this );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Mineral_Silver ) {
				S = A;

				if ( ( ((Obj_Item_Stack)S).get_amount() ??0) < 1 ) {
					user.WriteMsg( "<span class='warning'>You need one silver sheet to do this!</span>" );
					return null;
				}
				user.WriteMsg( "<span class='notice'>You start adding " + S + " to " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 20, null, this ) ) {
					S.use( 1 );
					new Obj_Structure_Table_Optable( this.loc );
					GlobalFuncs.qdel( this );
				}
				return null;
			}
			return null;
		}

	}

}
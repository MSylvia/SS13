// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_StatusDisplay : Obj_Machinery {

		public int mode = 1;
		public string picture_state = null;
		public dynamic message1 = "";
		public dynamic message2 = "";
		public int index1 = 0;
		public int index2 = 0;
		public int frequency = 1435;
		public bool supply_display = false;
		public bool friendc = false;
		public bool spookymode = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 10;
			this.icon = "icons/obj/status_display.dmi";
			this.icon_state = "frame";
		}

		// Function from file: status_display.dm
		public Obj_Machinery_StatusDisplay ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.status_displays.Or( this );
			Task13.Schedule( 5, (Task13.Closure)(() => {
				
				if ( GlobalVars.radio_controller != null ) {
					GlobalVars.radio_controller.add_object( this, this.frequency );
				}
				return;
			}));
			return;
		}

		// Function from file: status_display.dm
		public override bool spook(  ) {
			
			if ( base.spook() ) {
				this.spookymode = true;
			}
			return false;
		}

		// Function from file: status_display.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			
			dynamic _a = ((dynamic)signal).data["command"]; // Was a switch-case, sorry for the mess.
			if ( _a=="blank" ) {
				this.mode = 0;
			} else if ( _a=="shuttle" ) {
				this.mode = 1;
			} else if ( _a=="message" ) {
				this.mode = 2;
				this.set_message( ((dynamic)signal).data["msg1"], ((dynamic)signal).data["msg2"] );
			} else if ( _a=="alert" ) {
				this.mode = 3;
				this.set_picture( ((dynamic)signal).data["picture_state"] );
			} else if ( _a=="supply" ) {
				
				if ( this.supply_display ) {
					this.mode = 4;
				}
			}
			return false;
		}

		// Function from file: status_display.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic _default = null;

			_default = base.examine( (object)(user), size );

			switch ((int)( this.mode )) {
				case 1:
				case 2:
				case 4:
					GlobalFuncs.to_chat( user, "<span class='info'>The display says:<br>	<xmp>" + this.message1 + "</xmp><br>	<xmp>" + this.message2 + "</xmp></span>" );
					break;
			}
			return _default;
		}

		// Function from file: status_display.dm
		public void remove_display(  ) {
			
			if ( this.overlays.len != 0 ) {
				this.overlays.len = 0;
			}

			if ( Lang13.Bool( this.maptext ) ) {
				this.maptext = "";
			}
			return;
		}

		// Function from file: status_display.dm
		public string get_supply_shuttle_timer(  ) {
			double timeleft = 0;

			
			if ( GlobalVars.supply_shuttle.moving != 0 ) {
				timeleft = Num13.Round( ( GlobalVars.supply_shuttle.eta_timeofday - Game13.timeofday ) / 10, 1 );

				if ( timeleft < 0 ) {
					return "Late";
				}
				return "" + GlobalFuncs.add_zero( String13.NumberToString( timeleft / 60 % 60 ), 2 ) + ":" + GlobalFuncs.add_zero( String13.NumberToString( timeleft % 60 ), 2 );
			}
			return "";
		}

		// Function from file: status_display.dm
		public string get_shuttle_timer(  ) {
			double timeleft = 0;

			timeleft = GlobalVars.emergency_shuttle.timeleft();

			if ( timeleft != 0 ) {
				return "" + GlobalFuncs.add_zero( String13.NumberToString( timeleft / 60 % 60 ), 2 ) + ":" + GlobalFuncs.add_zero( String13.NumberToString( timeleft % 60 ), 2 );
			}
			return "";
		}

		// Function from file: status_display.dm
		public void update_display( dynamic line1 = null, dynamic line2 = null ) {
			string new_text = null;

			new_text = "<div style=\"font-size:" + "5pt" + ";color:" + "#09f" + ";font:'" + "Arial Black" + "';text-align:center;\" valign=\"top\">" + line1 + "<br>" + line2 + "</div>";

			if ( this.maptext != new_text ) {
				this.maptext = new_text;
			}
			return;
		}

		// Function from file: status_display.dm
		public void set_picture( string state = null ) {
			this.picture_state = state;
			this.remove_display();
			this.overlays.Add( new Image( "icons/obj/status_display.dmi", null, this.picture_state ) );
			return;
		}

		// Function from file: status_display.dm
		public void set_message( dynamic m1 = null, dynamic m2 = null ) {
			
			if ( Lang13.Bool( m1 ) ) {
				this.index1 = Lang13.Length( m1 ) > 5 ?1:0;
				this.message1 = m1;
			} else {
				this.message1 = "";
				this.index1 = 0;
			}

			if ( Lang13.Bool( m2 ) ) {
				this.index2 = Lang13.Length( m2 ) > 5 ?1:0;
				this.message2 = m2;
			} else {
				this.message2 = "";
				this.index2 = 0;
			}
			return;
		}

		// Function from file: status_display.dm
		public void update(  ) {
			string line1 = null;
			string line2 = null;
			dynamic line12 = null;
			dynamic line22 = null;
			int message1_len = 0;
			int message2_len = 0;
			string line13 = null;
			string line23 = null;

			
			if ( this.friendc && this.mode != 4 ) {
				this.set_picture( "ai_friend" );
				return;
			}

			switch ((int)( this.mode )) {
				case 0:
					this.remove_display();
					break;
				case 1:
					
					if ( GlobalVars.emergency_shuttle.online ) {
						line1 = null;
						line2 = this.get_shuttle_timer();

						if ( GlobalVars.emergency_shuttle.location == 1 ) {
							line1 = "-ETD-";
						} else {
							line1 = "-ETA-";
						}

						if ( Lang13.Length( line2 ) > 5 ) {
							line2 = "Error!";
						}
						this.update_display( line1, line2 );
					} else {
						this.remove_display();
					}
					break;
				case 2:
					this.remove_display();
					line12 = null;
					line22 = null;

					if ( !( this.index1 != 0 ) ) {
						line12 = this.message1;
					} else {
						line12 = String13.SubStr( this.message1 + "|" + this.message1, this.index1, this.index1 + 5 );
						message1_len = Lang13.Length( this.message1 );
						this.index1 += 2;

						if ( this.index1 > message1_len ) {
							this.index1 -= message1_len;
						}
					}

					if ( !( this.index2 != 0 ) ) {
						line22 = this.message2;
					} else {
						line22 = String13.SubStr( this.message2 + "|" + this.message2, this.index2, this.index2 + 5 );
						message2_len = Lang13.Length( this.message2 );
						this.index2 += 2;

						if ( this.index2 > message2_len ) {
							this.index2 -= message2_len;
						}
					}
					this.update_display( line12, line22 );
					break;
				case 4:
					line13 = "SUPPLY";
					line23 = null;

					if ( GlobalVars.supply_shuttle.moving != 0 ) {
						line23 = this.get_supply_shuttle_timer();

						if ( Lang13.Length( line23 ) > 5 ) {
							line23 = "Error";
						}
					} else if ( GlobalVars.supply_shuttle.at_station ) {
						line23 = "Docked";
					} else {
						line13 = "";
					}
					this.update_display( line13, line23 );
					break;
			}
			return;
		}

		// Function from file: status_display.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				base.emp_act( severity );
				return null;
			}
			this.set_picture( "ai_bsod" );
			base.emp_act( severity );
			return null;
		}

		// Function from file: status_display.dm
		public override dynamic attack_ai( dynamic user = null ) {
			dynamic A = null;
			dynamic choice = null;
			dynamic msg1 = null;
			dynamic msg2 = null;
			dynamic new_icon = null;

			
			if ( this.spookymode ) {
				return null;
			}

			if ( Lang13.Bool( user.stat ) ) {
				return null;
			}

			if ( user is Mob_Living_Silicon_Ai ) {
				
				if ( Lang13.Bool( user.stat ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>Unable to connect to " + this + " (error #408)</span>" );
					return null;
				}

				if ( ( this.stat & 3 ) != 0 ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>Unable to connect to " + this + " (error #" + ( ( this.stat & 1 ) != 0 ? "120" : "408" ) + ")</span>" );
					return null;
				}
				A = user;
				choice = Interface13.Input( A, "Select a mode for " + this + ".", "Status display", null, new ByTable(new object [] { "Blank", "Emergency shuttle timer", "Text message", "Picture", "Supply shuttle timer" }), InputType.Any );

				dynamic _a = choice; // Was a switch-case, sorry for the mess.
				if ( _a=="Blank" ) {
					this.mode = 0;
				} else if ( _a=="Emergency shuttle timer" ) {
					this.mode = 1;
				} else if ( _a=="Text message" ) {
					msg1 = Interface13.Input( A, "Write the first line: ", "Status display", this.message1, null, InputType.Any );
					msg2 = Interface13.Input( A, "Write the second line: ", "Status display", this.message2, null, InputType.Any );
					this.mode = 2;
					this.set_message( msg1, msg2 );
				} else if ( _a=="Picture" ) {
					new_icon = Interface13.Input( A, "Load an image to be desplayed on " + this + ".", "Status display", null, GlobalVars.status_display_images, InputType.Any );

					if ( Lang13.Bool( new_icon ) ) {
						this.mode = 3;
						this.set_picture( GlobalVars.status_display_images[new_icon] );
					}
				} else if ( _a=="Supply shuttle timer" ) {
					this.mode = 4;
				}
			}
			return null;
		}

		// Function from file: status_display.dm
		public override dynamic process(  ) {
			
			if ( ( this.stat & 2 ) != 0 ) {
				this.remove_display();
				return null;
			}

			if ( this.spookymode ) {
				this.spookymode = false;
				this.remove_display();
				return null;
			}
			this.update();
			return null;
		}

		// Function from file: status_display.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic _default = null;

			_default = base.Destroy( (object)(brokenup) );
			GlobalVars.status_displays.Remove( this );
			return _default;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
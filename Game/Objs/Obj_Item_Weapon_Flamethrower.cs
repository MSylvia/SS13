// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Flamethrower : Obj_Item_Weapon {

		public bool status = false;
		public double throw_amount = 100;
		public bool lit = false;
		public bool operating = false;
		public dynamic previousturf = null;
		public Obj_Item_Weapon_Weldingtool weldtool = null;
		public dynamic igniter = null;
		public dynamic ptank = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "flamethrower_0";
			this.force = 3;
			this.throwforce = 10;
			this.throw_speed = 1;
			this.throw_range = 5;
			this.starting_materials = new ByTable().Set( "$iron", 500 );
			this.w_type = 1;
			this.melt_temperature = 1783.1500244140625;
			this.origin_tech = "combat=1;plasmatech=1";
			this.icon = "icons/obj/flamethrower.dmi";
			this.icon_state = "flamethrowerbase";
		}

		public Obj_Item_Weapon_Flamethrower ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: flamethrower.dm
		public void ignite_turf( dynamic target = null ) {
			GasMixture air_transfer = null;
			dynamic plasma_moles = null;

			air_transfer = ((GasMixture)this.ptank.air_contents).remove_ratio( this.throw_amount / 100 * 0.11 );
			plasma_moles = air_transfer.toxins;
			GlobalFuncs.getFromPool( typeof(Obj_Effect_Decal_Cleanable_LiquidFuel_FlamethrowerFuel), target, plasma_moles * 10, Map13.GetDistance( this.loc, target ) );
			air_transfer.toxins = 0;
			((Ent_Static)target).assume_air( air_transfer );
			((Tile)target).hotspot_expose( Lang13.DoubleNullable( this.ptank.air_contents.temperature * 2 + 380 ), 500 );
			return;
		}

		// Function from file: flamethrower.dm
		public void flame_turf( ByTable turflist = null ) {
			dynamic T = null;
			dynamic M = null;

			
			if ( !this.lit || this.operating ) {
				return;
			}
			this.operating = true;

			foreach (dynamic _a in Lang13.Enumerate( turflist )) {
				T = _a;
				

				if ( T.density || T is Tile_Space ) {
					break;
				}

				if ( !Lang13.Bool( this.previousturf ) && Lang13.Length( turflist ) > 1 ) {
					this.previousturf = GlobalFuncs.get_turf( this );
					continue;
				}

				if ( Lang13.Bool( this.previousturf ) && GlobalFuncs.LinkBlocked( this.previousturf, T ) ) {
					break;
				}
				this.ignite_turf( T );
				Task13.Sleep( 1 );
			}
			this.previousturf = null;
			this.operating = false;

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( this.loc, 1 ) )) {
				M = _b;
				

				if ( Lang13.Bool( M.client ) && M.machine == this ) {
					this.attack_self( M );
				}
			}
			return;
		}

		// Function from file: flamethrower.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic M = null;

			
			if ( Lang13.Bool( href_list["close"] ) ) {
				Task13.User.unset_machine();
				Interface13.Browse( Task13.User, null, "window=flamethrower" );
				return null;
			}

			if ( Lang13.Bool( Task13.User.stat ) || Task13.User.restrained() || Task13.User.lying == true ) {
				return null;
			}
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["light"] ) ) {
				
				if ( !Lang13.Bool( this.ptank ) ) {
					return null;
				}

				if ( Convert.ToDouble( this.ptank.air_contents.toxins ) < 1 ) {
					return null;
				}

				if ( !this.status ) {
					return null;
				}
				this.lit = !this.lit;

				if ( this.lit ) {
					GlobalVars.processing_objects.Add( this );
				}
			}

			if ( Lang13.Bool( href_list["amount"] ) ) {
				this.throw_amount = this.throw_amount + ( String13.ParseNumber( href_list["amount"] ) ??0);
				this.throw_amount = Num13.MaxInt( 50, Num13.MinInt( 5000, ((int)( this.throw_amount )) ) );
			}

			if ( Lang13.Bool( href_list["remove"] ) ) {
				
				if ( !Lang13.Bool( this.ptank ) ) {
					return null;
				}
				Task13.User.put_in_hands( this.ptank );
				this.ptank = null;
				this.lit = false;
				Task13.User.unset_machine();
				Interface13.Browse( Task13.User, null, "window=flamethrower" );
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( this.loc, 1 ) )) {
				M = _a;
				

				if ( Lang13.Bool( M.client ) && M.machine == this ) {
					this.attack_self( M );
				}
			}
			this.update_icon();
			return null;
		}

		// Function from file: flamethrower.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			
			if ( Lang13.Bool( user.stat ) || ((Mob)user).restrained() || user.lying == true ) {
				return null;
			}
			((Mob)user).set_machine( this );

			if ( !Lang13.Bool( this.ptank ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Attach a plasma tank first!</span>" );
				return null;
			}
			dat = new Txt( "<TT><B>Flamethrower (<A HREF='?src=" ).Ref( this ).str( ";light=1'>" ).item( ( this.lit ? "<font color='red'>Lit</font>" : "Unlit" ) ).str( "</a>)</B><BR>\n Tank Pressure: " ).item( this.ptank.air_contents.return_pressure() ).str( "<BR>\nAmount to throw: <A HREF='?src=" ).Ref( this ).str( ";amount=-100'>-</A> <A HREF='?src=" ).Ref( this ).str( ";amount=-10'>-</A> <A HREF='?src=" ).Ref( this ).str( ";amount=-1'>-</A> " ).item( this.throw_amount ).str( " <A HREF='?src=" ).Ref( this ).str( ";amount=1'>+</A> <A HREF='?src=" ).Ref( this ).str( ";amount=10'>+</A> <A HREF='?src=" ).Ref( this ).str( ";amount=100'>+</A><BR>\n<A HREF='?src=" ).Ref( this ).str( ";remove=1'>Remove plasmatank</A> - <A HREF='?src=" ).Ref( this ).str( ";close=1'>Close</A></TT>" ).ToString();
			Interface13.Browse( user, dat, "window=flamethrower;size=600x300" );
			GlobalFuncs.onclose( user, "flamethrower" );
			return null;
		}

		// Function from file: flamethrower.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic T = null;
			dynamic I = null;
			dynamic analyzer = null;

			
			if ( Lang13.Bool( b.stat ) || ((Mob)b).restrained() || b.lying == true ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Wrench && !this.status ) {
				T = GlobalFuncs.get_turf( this );

				if ( this.weldtool != null ) {
					this.weldtool.loc = T;
					this.weldtool = null;
				}

				if ( Lang13.Bool( this.igniter ) ) {
					this.igniter.loc = T;
					this.igniter = null;
				}

				if ( Lang13.Bool( this.ptank ) ) {
					this.ptank.loc = T;
					this.ptank = null;
				}
				GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), T );
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( a is Obj_Item_Weapon_Screwdriver && Lang13.Bool( this.igniter ) && !this.lit ) {
				this.status = !this.status;
				GlobalFuncs.to_chat( b, "<span class='notice'>" + this.igniter + " is now " + ( this.status ? "secured" : "unsecured" ) + "!</span>" );
				this.update_icon();
				return null;
			}

			if ( GlobalFuncs.isigniter( a ) ) {
				I = a;

				if ( Lang13.Bool( I.secured ) ) {
					return null;
				}

				if ( Lang13.Bool( this.igniter ) ) {
					return null;
				}

				if ( Lang13.Bool( b.drop_item( I, this ) ) ) {
					this.igniter = I;
					this.update_icon();
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Tank_Plasma ) {
				
				if ( Lang13.Bool( this.ptank ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>There appears to already be a plasma tank loaded in " + this + "!</span>" );
					return null;
				}

				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.ptank = a;
					this.update_icon();
					return null;
				}
			}

			if ( a is Obj_Item_Device_Analyzer && Lang13.Bool( this.ptank ) ) {
				analyzer = a;
				((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " has used the analyzer on " ).icon( this.icon ).str( "</span>" ).ToString() );
				b.show_message( ((Obj_Item_Device_Analyzer)analyzer).output_gas_scan( this.ptank.air_contents, this, false ), 1 );
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: flamethrower.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic target_turf = null;
			ByTable turflist = null;

			((Mob)user).delayNextAttack( 8 );

			if ( Lang13.Bool( user ) && ((Mob)user).get_active_hand() == this ) {
				target_turf = GlobalFuncs.get_turf( A );

				if ( Lang13.Bool( target_turf ) ) {
					turflist = GlobalFuncs.getline( user, target_turf );
					this.flame_turf( turflist );
				}
			}
			return false;
		}

		// Function from file: flamethrower.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( Lang13.Bool( this.igniter ) ) {
				this.overlays.Add( "+igniter" + this.status );
			}

			if ( Lang13.Bool( this.ptank ) ) {
				this.overlays.Add( "+ptank" );
			}

			if ( this.lit ) {
				this.overlays.Add( "+lit" );
				this.item_state = "flamethrower_1";
			} else {
				this.item_state = "flamethrower_0";
			}
			return null;
		}

		// Function from file: flamethrower.dm
		public override dynamic process(  ) {
			Ent_Static location = null;
			Ent_Static M = null;

			
			if ( !this.lit ) {
				GlobalVars.processing_objects.Remove( this );
				return null;
			}
			location = this.loc;

			if ( location is Mob ) {
				M = location;

				if ( ((dynamic)M).l_hand == this || ((dynamic)M).r_hand == this ) {
					location = M.loc;
				}
			}

			if ( location is Tile ) {
				new ByTable().Set( 1, 700 ).Set( 2, 2 ).Set( "surfaces", this.loc is Tile ).Apply( Lang13.BindFunc( location, "hotspot_expose" ) );
			}
			return null;
		}

		// Function from file: flamethrower.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.weldtool != null ) {
				GlobalFuncs.qdel( this.weldtool );
				this.weldtool = null;
			}

			if ( Lang13.Bool( this.igniter ) ) {
				GlobalFuncs.qdel( this.igniter );
				this.igniter = null;
			}

			if ( Lang13.Bool( this.ptank ) ) {
				GlobalFuncs.qdel( this.ptank );
				this.ptank = null;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
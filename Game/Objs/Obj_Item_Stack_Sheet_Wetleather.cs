// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Sheet_Wetleather : Obj_Item_Stack_Sheet {

		public dynamic wetness = 30;
		public double drying_threshold_temperature = 500;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "wet leather piece";
			this.icon_state = "sheet-wetleather";
		}

		public Obj_Item_Stack_Sheet_Wetleather ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: leather.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			Obj_Item_Stack_Sheet_Leather HS = null;
			Obj_Item_Stack_Sheet_Leather HS2 = null;

			base.temperature_expose( air, (object)(exposed_temperature), exposed_volume );

			if ( Convert.ToDouble( exposed_temperature ) >= this.drying_threshold_temperature ) {
				this.wetness--;

				if ( this.wetness == 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Item_Stack_Sheet_Leather) )) {
						HS = _a;
						

						if ( ( HS.amount ??0) < 50 ) {
							HS.amount++;
							this.use( 1 );
							this.wetness = Lang13.Initial( this, "wetness" );
							break;
						}
					}
					HS2 = new Obj_Item_Stack_Sheet_Leather( this.loc );
					HS2.amount = 1;
					this.wetness = Lang13.Initial( this, "wetness" );
					this.use( 1 );
				}
			}
			return null;
		}

	}

}
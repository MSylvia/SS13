// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Robotics : Obj_Machinery_Computer {

		public bool id = false;
		public string temp = null;
		public bool status = false;
		public int timeleft = 60;
		public bool stop = false;
		public int screen = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable(new object [] { 29 });
			this.circuit = "/obj/item/weapon/circuitboard/robotics";
			this.light_color = "#E17DE1";
			this.icon_state = "robot";
		}

		public Obj_Machinery_Computer_Robotics ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: robot.dm
		public void start_sequence(  ) {
			Mob_Living_Silicon_Robot R = null;

			
			do {
				
				if ( this.stop ) {
					this.stop = false;
					return;
				}
				this.timeleft--;
				Task13.Sleep( 10 );
			} while ( this.timeleft != 0 );

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Robot) )) {
				R = _a;
				

				if ( !R.scrambledcodes ) {
					R.self_destruct();
				}
			}
			return;
		}

		// Function from file: robot.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic I = null;
			dynamic pda = null;
			dynamic R = null;
			dynamic choice = null;
			dynamic R2 = null;
			dynamic choice2 = null;
			dynamic R3 = null;
			dynamic choice3 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			} else {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["eject"] ) ) {
					this.temp = new Txt( "Destroy Robots?<BR>\n			<BR><B><A href='?src=" ).Ref( this ).str( ";eject2=1'>[Swipe ID to initiate destruction sequence]</A></B><BR>\n			<A href='?src=" ).Ref( this ).str( ";temp=1'>Cancel</A>" ).ToString();
				} else if ( Lang13.Bool( href_list["eject2"] ) ) {
					I = Task13.User.get_active_hand();

					if ( I is Obj_Item_Device_Pda ) {
						pda = I;
						I = pda.id;
					}

					if ( I is Obj_Item_Weapon_Card_Id ) {
						
						if ( this.check_access( I ) ) {
							
							if ( !this.status ) {
								GlobalFuncs.message_admins( "<span class='notice'>" + GlobalFuncs.key_name_admin( Task13.User ) + " has initiated the global cyborg killswitch!</span>" );
								GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "<span class='notice'>" + GlobalFuncs.key_name( Task13.User ) + " has initiated the global cyborg killswitch!</span>" ) ) );
								this.status = true;
								this.start_sequence();
								this.temp = null;
							}
						} else {
							GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Access Denied.</span>" );
						}
					}
				} else if ( Lang13.Bool( href_list["stop"] ) ) {
					this.temp = new Txt( "\n			Stop Robot Destruction Sequence?<BR>\n			<BR><A href='?src=" ).Ref( this ).str( ";stop2=1'>Yes</A><BR>\n			<A href='?src=" ).Ref( this ).str( ";temp=1'>No</A>" ).ToString();
				} else if ( Lang13.Bool( href_list["stop2"] ) ) {
					this.stop = true;
					this.temp = null;
					this.status = false;
				} else if ( Lang13.Bool( href_list["reset"] ) ) {
					this.timeleft = 60;
				} else if ( Lang13.Bool( href_list["temp"] ) ) {
					this.temp = null;
				} else if ( Lang13.Bool( href_list["screen"] ) ) {
					
					dynamic _a = href_list["screen"]; // Was a switch-case, sorry for the mess.
					if ( _a=="0" ) {
						this.screen = 0;
					} else if ( _a=="1" ) {
						this.screen = 1;
					} else if ( _a=="2" ) {
						this.screen = 2;
					}
				} else if ( Lang13.Bool( href_list["killbot"] ) ) {
					
					if ( this.allowed( Task13.User ) ) {
						R = Lang13.FindObj( href_list["killbot"] );

						if ( Lang13.Bool( R ) ) {
							choice = Interface13.Input( "Are you certain you wish to detonate " + R.name + "?", null, null, null, new ByTable(new object [] { "Confirm", "Abort" }), InputType.Any );

							if ( choice == "Confirm" ) {
								
								if ( Lang13.Bool( R ) && R is Mob_Living_Silicon_Robot ) {
									
									if ( Lang13.Bool( R.mind ) && Lang13.Bool( R.mind.special_role ) && Lang13.Bool( R.emagged ) ) {
										GlobalFuncs.to_chat( R, "Extreme danger.  Termination codes detected.  Scrambling security codes and automatic AI unlink triggered." );
										((Mob_Living_Silicon_Robot)R).ResetSecurityCodes();
									} else {
										GlobalFuncs.message_admins( "<span class='notice'>" + GlobalFuncs.key_name_admin( Task13.User ) + " detonated " + R.name + "!</span>" );
										GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "<span class='notice'>" + GlobalFuncs.key_name_admin( Task13.User ) + " detonated " + R.name + "!</span>" ) ) );
										R.self_destruct();
									}
								}
							}
						}
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Access Denied.</span>" );
					}
				} else if ( Lang13.Bool( href_list["stopbot"] ) ) {
					
					if ( this.allowed( Task13.User ) ) {
						R2 = Lang13.FindObj( href_list["stopbot"] );

						if ( Lang13.Bool( R2 ) && R2 is Mob_Living_Silicon_Robot ) {
							choice2 = Interface13.Input( "Are you certain you wish to " + ( R2.canmove ? "lock down" : "release" ) + " " + R2.name + "?", null, null, null, new ByTable(new object [] { "Confirm", "Abort" }), InputType.Any );

							if ( choice2 == "Confirm" ) {
								
								if ( Lang13.Bool( R2 ) && R2 is Mob_Living_Silicon_Robot ) {
									GlobalFuncs.message_admins( "<span class='notice'>" + GlobalFuncs.key_name_admin( Task13.User ) + " " + ( R2.canmove ? "locked down" : "released" ) + " " + R2.name + "!</span>" );
									GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( Task13.User ) + " " + ( R2.canmove ? "locked down" : "released" ) + " " + R2.name + "!" ) ) );
									R2.canmove = !R2.canmove;

									if ( R2.lockcharge == true ) {
										R2.lockcharge = !( R2.lockcharge == true );
										GlobalFuncs.to_chat( R2, "Your lockdown has been lifted!" );
									} else {
										R2.lockcharge = !( R2.lockcharge == true );
										GlobalFuncs.to_chat( R2, "You have been locked down!" );
									}
								}
							}
						}
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Access Denied.</span>" );
					}
				} else if ( Lang13.Bool( href_list["magbot"] ) ) {
					
					if ( this.allowed( Task13.User ) ) {
						R3 = Lang13.FindObj( href_list["magbot"] );

						if ( R3 is Mob_Living_Silicon_Robot && Task13.User is Mob_Living_Silicon && Lang13.Bool( Task13.User.mind.special_role ) && Task13.User.mind.original == Task13.User && Lang13.Bool( R3.emagged ) != true ) {
							choice3 = Interface13.Input( "Are you certain you wish to hack " + R3.name + "?", null, null, null, new ByTable(new object [] { "Confirm", "Abort" }), InputType.Any );

							if ( choice3 == "Confirm" ) {
								
								if ( Lang13.Bool( R3 ) && R3 is Mob_Living_Silicon_Robot ) {
									GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( Task13.User ) + " emagged " + R3.name + " using robotic console!" ) ) );
									((Mob_Living_Silicon_Robot)R3).SetEmagged( 2 );

									if ( Lang13.Bool( R3.mind.special_role ) ) {
										R3.verbs += typeof(Mob_Living_Silicon_Robot).GetMethod( "ResetSecurityCodes" );
									}
								}
							}
						}
					}
				}
				this.add_fingerprint( Task13.User );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: robot.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			Mob_Living_Silicon_Robot R = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}

			if ( this.z > 6 ) {
				GlobalFuncs.to_chat( a, "<span class='danger'>Unable to establish a connection: </span>You're too far away from the station!" );
				return null;
			}
			((Mob)a).set_machine( this );

			if ( Lang13.Bool( this.temp ) ) {
				dat = new Txt( "<TT>" ).item( this.temp ).str( "</TT><BR><BR><A href='?src=" ).Ref( this ).str( ";temp=1'>Clear Screen</A>" ).ToString();
			} else {
				
				if ( this.screen == 0 ) {
					dat += new Txt( "<h3>Cyborg Control Console</h3><BR>\n				<A href='?src=" ).Ref( this ).str( ";screen=1'>1. Cyborg Status</A><BR>\n				<A href='?src=" ).Ref( this ).str( ";screen=2'>2. Emergency Full Destruct</A><BR>" ).ToString();
				}

				if ( this.screen == 1 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Robot) )) {
						R = _a;
						

						if ( a is Mob_Living_Silicon_Ai ) {
							
							if ( R.connected_ai != a ) {
								continue;
							}
						}

						if ( a is Mob_Living_Silicon_Robot ) {
							
							if ( R != a ) {
								continue;
							}
						}

						if ( R.scrambledcodes ) {
							continue;
						}
						dat += "" + R.name + " |";

						if ( Lang13.Bool( R.stat ) ) {
							dat += " Not Responding |";
						} else if ( !R.canmove ) {
							dat += " Locked Down |";
						} else {
							dat += " Operating Normally |";
						}

						if ( !R.canmove ) {
							
						} else if ( Lang13.Bool( R.cell ) ) {
							dat += " Battery Installed (" + R.cell.charge + "/" + R.cell.maxcharge + ") |";
						} else {
							dat += " No Cell Installed |";
						}

						if ( R.module != null ) {
							dat += " Module Installed (" + R.module.name + ") |";
						} else {
							dat += " No Module Installed |";
						}

						if ( R.connected_ai != null ) {
							dat += " Slaved to " + R.connected_ai.name + " |";
						} else {
							dat += " Independent from AI |";
						}

						if ( a is Mob_Living_Silicon ) {
							
							if ( Lang13.Bool( a.mind.special_role ) && a.mind.original == a && !( R.emagged != 0 ) ) {
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";magbot=" ).Ref( R ).str( "'>(<font color=blue><i>Hack</i></font>)</A> " ).ToString();
							}
						}
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";stopbot=" ).Ref( R ).str( "'>(<font color=green><i>" ).item( ( R.canmove ? "Lockdown" : "Release" ) ).str( "</i></font>)</A>\n					<A href='?src=" ).Ref( this ).str( ";killbot=" ).Ref( R ).str( "'>(<font color=red><i>Destroy</i></font>)</A>\n					<BR>" ).ToString();
					}
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";screen=0'>(Return to Main Menu)</A><BR>" ).ToString();
				}

				if ( this.screen == 2 ) {
					
					if ( !this.status ) {
						dat += new Txt( @"<BR><B>Emergency Robot Self-Destruct</B><HR>
Status: Off<BR>
				
<BR>
				
Countdown: " ).item( this.timeleft ).str( "/60 <A href='?src=" ).Ref( this ).str( @";reset=1'>[Reset]</A><BR>
				
<BR>
				
<A href='?src=" ).Ref( this ).str( @";eject=1'>Start Sequence</A><BR>
				
<BR>
				
<A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A>" ).ToString();
					} else {
						dat = new Txt( @"<B>Emergency Robot Self-Destruct</B><HR>
Status: Activated<BR>
				
<BR>
				
Countdown: " ).item( this.timeleft ).str( "/60 [Reset]<BR>\n				\n<BR>\n<A href='?src=" ).Ref( this ).str( @";stop=1'>Stop Sequence</A><BR>
				
<BR>
				
<A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A>" ).ToString();
					}
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";screen=0'>(Return to Main Menu)</A><BR>" ).ToString();
				}
			}
			Interface13.Browse( a, dat, "window=computer;size=400x500" );
			GlobalFuncs.onclose( a, "computer" );
			return null;
		}

		// Function from file: robot.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: robot.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			return this.attack_hand( user );
		}

	}

}
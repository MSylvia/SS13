// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_Supermatter : Obj_Machinery_Power {

		public int max_luminosity = 8;
		public string short_name = "Crystal";
		public double gasefficency = 0.25;
		public string base_icon_state = "darkmatter";
		public double damage = 0;
		public double damage_archived = 0;
		public double warning_point = 100;
		public double audio_warning_point = 500;
		public double emergency_point = 700;
		public double explosion_point = 1000;
		public bool emergency_issued = false;
		public int explosion_power = 8;
		public int lastwarning = 0;
		public int lastaudiowarning = 0;
		public double? power = 0;
		public int max_power = 2000;
		public double oxygen = 0;
		public int config_bullet_energy = 2;
		public double config_hallucination_power = 0.1;
		public Obj_Item_Device_Radio radio = null;
		public int frequency = 0;
		public dynamic id_tag = null;
		public ByTable message_exclusions = new ByTable(new object [] { typeof(Obj_Effect_Effect_Sparks) });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.light_color = "#E1E17D";
			this.machine_flags = 128;
			this.icon = "icons/obj/engine.dmi";
			this.icon_state = "darkmatter";
		}

		// Function from file: supermatter.dm
		public Obj_Machinery_Power_Supermatter ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.radio = new Obj_Item_Device_Radio(  );
			return;
		}

		// Function from file: supermatter.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			
			if ( AM is Obj_Machinery_Power_Supermatter ) {
				AM.visible_message( new Txt( "<span class='sinister'>As " ).the( this ).item().str( " bumps into " ).the( AM ).item().str( " an otherworldly resonance ringing begins to shake the room, you ponder for a moment all the incorrect choices in your life that led you here, to this very moment, to witness this. You take one final sigh before it all ends.</span>" ).ToString() );
				Task13.Sleep( 10 );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
				this.explode();
				return false;
			}

			if ( AM is Mob_Living ) {
				AM.visible_message( new Txt( "<span class=\"warning\">" ).The( AM ).item().str( " slams into " ).the( this ).item().str( " inducing a resonance... " ).his_her_its_their().str( " body starts to glow and catch flame before flashing into ash.</span>" ).ToString(), new Txt( "<span class=\"danger\">You slam into " ).the( this ).item().str( " as your ears are filled with unearthly ringing. Your last thought is \"Oh, fuck.\"</span>" ).ToString(), "<span class=\"warning\">You hear an unearthly noise as a wave of heat washes over you.</span>" );
			} else if ( !GlobalFuncs.is_type_in_list( AM, this.message_exclusions ) ) {
				AM.visible_message( new Txt( "<span class=\"warning\">" ).The( AM ).item().str( " smacks into " ).the( this ).item().str( " and rapidly flashes to ash.</span>" ).ToString(), "<span class=\"warning\">You hear a loud crack as you are washed with a wave of heat.</span>" );
			} else {
				return base.Bumped( AM, (object)(yes) );
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
			this.Consume( AM );
			return false;
		}

		// Function from file: supermatter.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			_default = base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}
			((Ent_Static)b).visible_message( new Txt( "<span class=\"warning\">" ).The( b ).item().str( " touches " ).a( a ).item().str( " to " ).the( this ).item().str( " as a silence fills the room...</span>" ).ToString(), new Txt( "<span class=\"danger\">You touch " ).the( a ).item().str( " to " ).the( this ).item().str( " when everything suddenly goes silent.\"</span>\n<span class=\"notice\">" ).The( a ).item().str( " flashes into dust as you flinch away from " ).the( this ).item().str( ".</span>" ).ToString(), "<span class=\"warning\">Everything suddenly goes silent.</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
			((Mob)b).drop_from_inventory( a );
			this.Consume( a );
			((Mob_Living)b).apply_effect( 150, "irradiate" );
			return _default;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			((Ent_Static)a).visible_message( new Txt( "<span class=\"warning\">" ).The( a ).item().str( " reaches out and touches " ).the( this ).item().str( ", inducing a resonance... " ).his_her_its_their().str( " body starts to glow and bursts into flames before flashing into ash.</span>" ).ToString(), new Txt( "<span class=\"danger\">You reach out and touch " ).the( this ).item().str( ". Everything starts burning and all you can hear is ringing. Your last thought is \"That was not a wise decision.\"</span>" ).ToString(), "<span class=\"warning\">You hear an unearthly noise as a wave of heat washes over you.</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/supermatter.ogg", 50, 1 );
			this.Consume( a );
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_ai( dynamic user = null ) {
			string stability = null;

			stability = String13.NumberToString( Num13.Floor( this.damage / this.explosion_point * 100 ) );
			GlobalFuncs.to_chat( user, "<span class = \"info\">Matrix Instability: " + stability + "%</span>" );
			GlobalFuncs.to_chat( user, "<span class = \"info\">Damage: " + GlobalFuncs.format_num( this.damage ) + "</span>" );
			GlobalFuncs.to_chat( user, "<span class = \"info\">Power: " + GlobalFuncs.format_num( this.power ) + "J</span>" );
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_ghost( Mob_Dead_Observer user = null ) {
			this.attack_ai( user );
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_robot( Mob_Living_Silicon_Robot user = null ) {
			
			if ( this.Adjacent( user ) ) {
				return this.attack_hand( user );
			} else {
				this.attack_ai( user );
			}
			return null;
		}

		// Function from file: supermatter.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: supermatter.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			Ent_Static L = null;

			L = this.loc;

			if ( !( L is Tile ) ) {
				return 0;
			}

			if ( Proj.flag != "bullet" ) {
				this.power += Convert.ToDouble( Proj.damage * this.config_bullet_energy );
			} else {
				this.damage += Convert.ToDouble( Proj.damage * this.config_bullet_energy );
			}
			return 0;
		}

		// Function from file: supermatter.dm
		public override string multitool_menu( dynamic user = null, dynamic P = null ) {
			return new Txt( "\n	<b>Main</b>\n	<ul>\n		<li><b>Frequency:</b> <a href=\"?src=" ).Ref( this ).str( ";set_freq=-1\">" ).item( GlobalFuncs.format_frequency( this.frequency ) ).str( " GHz</a> (<a href=\"?src=" ).Ref( this ).str( ";set_freq=" ).item( Lang13.Initial( this, "frequency" ) ).str( "\">Reset</a>)</li>\n		<li>" ).item( this.format_tag( "ID Tag", "id_tag" ) ).str( "</li>\n	</ul>" ).ToString();
		}

		// Function from file: supermatter.dm
		public override dynamic process(  ) {
			Ent_Static L = null;
			Obj_Effect_Beam_Emitter B = null;
			double stability = 0;
			ByTable audio_sounds = null;
			bool play_alert = false;
			bool audio_offset = false;
			string warning = null;
			int offset = 0;
			Game_Data speech = null;
			dynamic sf = null;
			Sound voice = null;
			Mob_Living mob = null;
			double rads = 0;
			dynamic radio_connection = null;
			Game_Data signal = null;
			GasMixture env = null;
			GasMixture removed = null;
			int temp_factor = 0;
			double device_energy = 0;
			Mob_Living_Carbon_Human l = null;
			Mob_Living l2 = null;
			double rads2 = 0;
			int light_value = 0;

			L = this.loc;

			if ( L == null ) {
				return 26;
			}

			if ( !( L is Tile ) ) {
				return null;
			}

			if ( L is Tile_Space ) {
				return null;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.beams, typeof(Obj_Effect_Beam_Emitter) )) {
				B = _a;
				
				this.power += B.get_damage() * this.config_bullet_energy;
			}
			stability = Num13.Floor( this.damage / this.explosion_point * 100 );

			if ( this.damage > this.warning_point ) {
				audio_sounds = new ByTable(new object [] { "sound/AI/supermatter_integrity_before.ogg" });
				play_alert = false;
				audio_offset = false;

				if ( ( Game13.timeofday - this.lastwarning ) / 10 >= 30 ) {
					warning = "";
					offset = 0;
					audio_sounds.Add( GlobalFuncs.vox_num2list( stability ) );
					audio_sounds.Add( new ByTable(new object [] { "sound/AI/supermatter_integrity_after.ogg" }) );

					if ( this.damage >= this.damage_archived ) {
						warning = "Danger! " + this.short_name + " hyperstructure instability detected, now at " + stability + "%.";
						offset = 150;

						if ( this.damage > this.emergency_point ) {
							warning = "" + String13.ToUpper( this.short_name ) + " INSTABILITY AT " + stability + "%. DELAMINATION IMMINENT - EVACUATE IMMEDIATELY.";
							offset = 0;
							audio_sounds.Add( new ByTable(new object [] { "sound/AI/supermatter_delam.ogg" }) );
						}
						play_alert = this.damage > this.audio_warning_point;
					} else {
						warning = "" + this.short_name + " hyperstructure returning to safe operating levels. Instability: " + stability + "%";
					}
					speech = this.radio.create_speech( warning, 1459, this.radio );
					((dynamic)speech).name = "Supermatter " + this.short_name + " Monitor";
					((dynamic)speech).job = "Automated Announcement";
					((dynamic)speech).as_name = "Supermatter " + this.short_name + " Monitor";
					GlobalFuncs.Broadcast_Message( speech, null, null, null, new ByTable(new object [] { 0, 1 }) );
					GlobalFuncs.returnToPool( speech );
					this.lastwarning = Game13.timeofday - offset;
				}

				if ( play_alert && ( Game13.timeofday - this.lastaudiowarning ) / 10 >= 30 ) {
					
					foreach (dynamic _b in Lang13.Enumerate( audio_sounds )) {
						sf = _b;
						
						voice = new Sound( sf, null, true, GlobalVars.VOX_CHANNEL );
						voice.status = GlobalVars.SOUND_STREAM;
						GlobalFuncs.to_chat( typeof(Game13), voice );
					}
					this.lastaudiowarning = Game13.timeofday - ( audio_offset ?1:0);
				}

				if ( this.damage > this.explosion_point ) {
					
					foreach (dynamic _c in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living) )) {
						mob = _c;
						

						if ( mob is Mob_Living_Carbon_Human ) {
							mob.hallucination += Num13.MaxInt( 50, Num13.MinInt( 300, ((int)( Math.Sqrt( 1 / ( Map13.GetDistance( mob, this ) + 1 ) ) * 600 )) ) );
						}
						rads = Math.Sqrt( 1 / ( Map13.GetDistance( mob, this ) + 1 ) ) * 200;
						mob.apply_effect( rads, "irradiate" );
					}
					this.explode();
				}
			}

			if ( this.frequency != 0 ) {
				radio_connection = GlobalVars.radio_controller.return_frequency( this.frequency );

				if ( !Lang13.Bool( radio_connection ) ) {
					return null;
				}
				signal = GlobalFuncs.getFromPool( typeof(Signal) );
				((dynamic)signal).source = this;
				((dynamic)signal).transmission_method = 1;
				((dynamic)signal).data = new ByTable().Set( "tag", this.id_tag ).Set( "device", "SM" ).Set( "instability", stability ).Set( "damage", this.damage ).Set( "power", this.power ).Set( "sigtype", "status" );
				radio_connection.post_signal( this, signal );
			}
			env = L.return_air();
			removed = env.remove( this.gasefficency * Convert.ToDouble( env.total_moles ) );

			if ( !( removed != null ) || !Lang13.Bool( removed.total_moles ) ) {
				this.damage += Num13.MaxInt( ((int)( ( ( this.power ??0) - 1600 ) / 10 )), 0 );
				this.power = Num13.MinInt( ((int)( this.power ??0 )), 1600 );
				return 1;
			}

			if ( !( removed != null ) ) {
				return 1;
			}
			this.damage_archived = this.damage;
			this.damage = Num13.MaxInt( ((int)( this.damage + ( ( removed.temperature ??0) - 800 ) / 150 )), 0 );
			this.oxygen = Num13.MaxInt( Num13.MinInt( Convert.ToInt32( ( removed.oxygen - removed.nitrogen * 4 ) / 103.93377685546875 ), 1 ), 0 );
			temp_factor = 100;

			if ( this.oxygen > 0.8 ) {
				this.icon_state = "" + this.base_icon_state + "_glow";
			} else {
				temp_factor = 60;
				this.icon_state = this.base_icon_state;
			}
			this.power = Num13.MaxInt( ((int)( ( removed.temperature ??0) * temp_factor / 273.41 * this.oxygen + ( this.power ??0) )), 0 );
			this.transfer_energy();
			device_energy = ( this.power ??0) * 1.1;
			removed.temperature += device_energy / 10;
			removed.temperature = Num13.MaxInt( 0, Num13.MinInt( ((int)( removed.temperature ??0 )), 2500 ) );
			removed.toxins += Num13.MaxInt( ((int)( device_energy / 1500 )), 0 );
			removed.oxygen += Num13.MaxInt( ((int)( ( device_energy + ( removed.temperature ??0) - 273.41 ) / 750 )), 0 );
			removed.update_values();
			env.merge( removed );

			foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInView( Num13.MinInt( 7, Num13.Floor( Math.Pow( this.power ??0, 0.25 ) ) ), this ), typeof(Mob_Living_Carbon_Human) )) {
				l = _d;
				

				if ( !( l.glasses is Obj_Item_Clothing_Glasses_Meson ) ) {
					l.hallucination = Num13.MaxInt( 0, Num13.MinInt( 200, ((int)( l.hallucination + ( this.power ??0) * this.config_hallucination_power * Math.Sqrt( 1 / Num13.MaxInt( 1, Map13.GetDistance( l, this ) ) ) )) ) );
				}
			}

			foreach (dynamic _e in Lang13.Enumerate( Map13.FetchInRange( Num13.Floor( Math.Pow( ( this.power ??0) / 100, 0.25 ) ), this ), typeof(Mob_Living) )) {
				l2 = _e;
				
				rads2 = ( this.power ??0) / 10 * Math.Sqrt( 1 / Num13.MaxInt( Map13.GetDistance( l2, this ), 1 ) );
				l2.apply_effect( rads2, "irradiate" );
			}
			this.power -= Math.Pow( ( this.power ??0) / 500, 3 );
			light_value = ( Num13.Floor( ( ( this.power ??0) / this.max_power <= 0 ? 0 : ( ( this.power ??0) / this.max_power >= 1 ? 1 : ( this.power ??0) / this.max_power ) ) * this.max_luminosity ) <= 0 ? 0 : ( Num13.Floor( ( ( this.power ??0) / this.max_power <= 0 ? 0 : ( ( this.power ??0) / this.max_power >= 1 ? 1 : ( this.power ??0) / this.max_power ) ) * this.max_luminosity ) >= this.max_luminosity ? this.max_luminosity : Num13.Floor( ( ( this.power ??0) / this.max_power <= 0 ? 0 : ( ( this.power ??0) / this.max_power >= 1 ? 1 : ( this.power ??0) / this.max_power ) ) * this.max_luminosity ) ) );
			this.set_light( light_value, light_value / 2 );
			return 1;
		}

		// Function from file: supermatter.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			bool _default = false;

			
			if ( mover is Obj_Structure_Closet_Crate_Secure_Large_Reinforced ) {
				return true;
			}
			_default = base.CanPass( (object)(mover), (object)(target), height, air_group );
			return _default;
		}

		// Function from file: supermatter.dm
		public override double singularity_act( double? current_size = null, Obj_Machinery_Singularity S = null ) {
			string prints = null;

			prints = "";

			if ( this.fingerprintshidden != null ) {
				prints = ", all touchers : " + this.fingerprintshidden;
			}
			GlobalFuncs.SetUniversalState( typeof(UniversalState_SupermatterCascade) );
			GlobalFuncs.log_admin( "New super singularity made by eating a SM crystal " + prints + ". Last touched by " + this.fingerprintslast + "." );
			GlobalFuncs.message_admins( "New super singularity made by eating a SM crystal " + prints + ". Last touched by " + this.fingerprintslast + "." );
			GlobalFuncs.qdel( this );
			return 20000;
		}

		// Function from file: supermatter.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((double?)( severity )) {
				case 3:
					return false;
					break;
				default:
					this.explode(); return false;
					break;
			}
			return false;
		}

		// Function from file: supermatter.dm
		public void Consume( dynamic user = null ) {
			Mob_Living l = null;
			double rads = 0;

			
			if ( user is Mob_Living ) {
				((Mob)user).dust();

				if ( user is Mob_Living_SimpleAnimal_Mouse ) {
					return;
				}
				this.power += 200;
			} else {
				GlobalFuncs.qdel( user );
			}
			this.power += 200;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( null, 10 ), typeof(Mob_Living) )) {
				l = _a;
				
				Interface13.Stat( null, Map13.FetchInView( null, null ).Contains( l ) );

				if ( l is Mob_Living ) {
					l.show_message( new Txt( "<span class=\"warning\">As " ).the( this ).item().str( " slowly stops resonating, you find your skin covered in new radiation burns.</span>" ).ToString(), 1, "<span class=\"warning\">The unearthly ringing subsides and you notice you have new radiation burns.</span>", 2 );
				} else {
					l.show_message( "<span class=\"warning\">You hear an uneartly ringing and notice your skin is covered in fresh radiation burns.</span>", 2 );
				}
				rads = Math.Sqrt( 1 / ( Map13.GetDistance( l, this ) + 1 ) ) * 500;
				l.apply_effect( rads, "irradiate", 0 );
			}
			return;
		}

		// Function from file: supermatter.dm
		public void transfer_energy(  ) {
			Obj_Machinery_Power_RadCollector R = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.rad_collectors, typeof(Obj_Machinery_Power_RadCollector) )) {
				R = _a;
				

				if ( Map13.GetDistance( R, this ) <= 15 ) {
					R.receive_pulse( this.power );
				}
			}
			return;
		}

		// Function from file: supermatter.dm
		public virtual void explode(  ) {
			GlobalFuncs.explosion( GlobalFuncs.get_turf( this ), this.explosion_power, this.explosion_power * 2, this.explosion_power * 3, this.explosion_power * 4, 1 );
			new Tile_Unsimulated_Wall_Supermatter( GlobalFuncs.get_turf( this ) );
			GlobalFuncs.SetUniversalState( typeof(UniversalState_SupermatterCascade) );
			GlobalFuncs.empulse( GlobalFuncs.get_turf( this ), 100, 200, true );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: supermatter.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic _default = null;

			GlobalFuncs.qdel( this.radio );
			this.radio = null;
			_default = base.Destroy( (object)(brokenup) );
			return _default;
		}

	}

}
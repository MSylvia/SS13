// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_GuardianBomb : Obj_Item_Weapon {

		public Ent_Static stored_obj = null;
		public Mob_Living_SimpleAnimal_Hostile_Guardian_Bomb spawner = null;

		public Obj_Item_Weapon_GuardianBomb ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: guardian.dm
		public override double examine( dynamic user = null ) {
			this.stored_obj.examine( user );

			if ( Map13.GetDistance( user, this ) <= 2 ) {
				user.WriteMsg( "<span class='notice'>Looks odd!</span>" );
			}
			return 0;
		}

		// Function from file: guardian.dm
		public override bool pickup( dynamic user = null ) {
			this.detonate( user );
			return false;
		}

		// Function from file: guardian.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			this.detonate( A );
			return null;
		}

		// Function from file: guardian.dm
		public void detonate( dynamic user = null ) {
			user.WriteMsg( "<span class='danger'><B>The " + this + " was boobytrapped!</span></B>" );
			this.spawner.WriteMsg( "<span class='danger'><B>Success! Your trap caught " + user + "</span></B>" );
			this.stored_obj.loc = GlobalFuncs.get_turf( this.loc );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/Explosion2.ogg", 200, 1 );
			((Ent_Static)user).ex_act( 2 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: guardian.dm
		public void disguise( Ent_Static A = null ) {
			A.loc = this;
			this.stored_obj = A;
			this.anchored = ((dynamic)A).anchored;
			this.density = A.density;
			this.appearance = A.appearance;
			Task13.Schedule( 600, (Task13.Closure)(() => {
				this.stored_obj.loc = GlobalFuncs.get_turf( this.loc );
				this.spawner.WriteMsg( "<span class='danger'><B>Failure! Your trap didn't catch anyone this time.</span></B>" );
				GlobalFuncs.qdel( this );
				return;
			}));
			return;
		}

	}

}
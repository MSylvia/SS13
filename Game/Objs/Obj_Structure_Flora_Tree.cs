// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Flora_Tree : Obj_Structure_Flora {

		public double health = 100;
		public double maxHealth = 100;
		public int height = 6;
		public dynamic falling_dir = 0;
		public bool randomize_on_creation = true;
		public Type log_type = typeof(Obj_Item_Weapon_Grown_Log_Tree);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -16;
			this.anchored = 1;
			this.icon = "icons/obj/flora/deadtrees.dmi";
			this.icon_state = "tree_1";
			this.layer = 5;
		}

		// Function from file: flora.dm
		public Obj_Structure_Flora_Tree ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.health = Rand13.Int( 60, 200 );
			this.maxHealth = this.health;
			this.height = Rand13.Int( 3, 8 );
			this.icon_state = Rand13.Pick(new object [] { "tree_1", "tree_2", "tree_3", "tree_4", "tree_5", "tree_6" });
			return;
		}

		// Function from file: flora.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this ); return false;
					break;
				case 2:
					this.height -= Rand13.Int( 1, 4 );
					this.fall_down();
					break;
				case 3:
					this.health -= Rand13.Int( 10, 30 );
					this.update_health();
					break;
			}
			return false;
		}

		// Function from file: flora.dm
		public void update_health(  ) {
			
			if ( this.health < 40 && !Lang13.Bool( this.falling_dir ) ) {
				this.falling_dir = Rand13.PickFromTable( GlobalVars.cardinal );
				this.visible_message( new Txt( "<span class='danger'>" ).The( this ).item().str( " starts leaning to the " ).item( GlobalFuncs.dir2text( this.falling_dir ) ).str( "!</span>" ).ToString(), null, null, new Txt( "<span class='sinister'>" ).The( this ).item().str( " is coming to life, man.</span>" ).ToString() );
			}

			if ( this.health <= 0 ) {
				this.fall_down();
			}
			return;
		}

		// Function from file: flora.dm
		public void fall_down(  ) {
			dynamic our_turf = null;
			dynamic current_turf = null;
			dynamic I = null;

			
			if ( !Lang13.Bool( this.falling_dir ) ) {
				this.falling_dir = Rand13.PickFromTable( GlobalVars.cardinal );
			}
			our_turf = GlobalFuncs.get_turf( this );
			current_turf = GlobalFuncs.get_turf( this );
			GlobalFuncs.qdel( this );
			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				while (this.height > 0) {
					
					if ( !Lang13.Bool( current_turf ) ) {
						break;
					}
					I = Lang13.Call( GlobalVars.log_type, our_turf );
					((Ent_Dynamic)I).throw_at( current_turf, 10, 10 );
					current_turf = Map13.GetStep( current_turf, Convert.ToInt32( this.falling_dir ) );
					this.height--;
					Task13.Sleep( 1 );
				}
				return;
			}));
			return;
		}

		// Function from file: flora.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon ) {
				
				if ( Convert.ToDouble( ((Obj)a).is_sharp() ) >= 1.2 ) {
					
					if ( Convert.ToDouble( a.w_class ) >= 2 ) {
						this.health -= ((Mob_Living)b).get_strength() * Convert.ToDouble( a.force );
					} else {
						GlobalFuncs.to_chat( b, new Txt( "<span class='info'>" ).The( a ).item().str( " doesn't appear to be big enough to cut into " ).the( this ).item().str( ". Try something bigger.</span>" ).ToString() );
					}
				} else {
					GlobalFuncs.to_chat( b, new Txt( "<span class='info'>" ).The( a ).item().str( " doesn't appear to be sharp enough to cut into " ).the( this ).item().str( ". Try something sharper.</span>" ).ToString() );
				}
			}
			this.update_health();
			return 1;
		}

		// Function from file: flora.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic _default = null;

			_default = base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>It appears to be about " + this.height * 3 + " feet tall.</span>" );

			dynamic _a = this.health / this.maxHealth; // Was a switch-case, sorry for the mess.
			if ( 081<=_a&&_a<=0.6 ) {
				GlobalFuncs.to_chat( user, "<span class='info'>It's been partially cut down.</span>" );
			} else if ( 0.6<=_a&&_a<=0.2 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>It's almost cut down, " + ( Lang13.Bool( this.falling_dir ) ? "and it's leaning towards the " + GlobalFuncs.dir2text( this.falling_dir ) + "." : "but it still stands upright." ) + "</span>" );
			} else if ( 0.2<=_a&&_a<=0 ) {
				GlobalFuncs.to_chat( user, "<span class='danger'>It's going to fall down any minute now!</span>" );
			} else if ( _a==1 ) {
				
			}
			return _default;
		}

	}

}
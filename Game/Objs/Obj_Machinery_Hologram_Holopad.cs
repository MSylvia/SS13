// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Hologram_Holopad : Obj_Machinery_Hologram {

		public dynamic master = null;
		public int last_request = 0;
		public int holo_range = 5;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 16;
			this.icon_state = "holopad0";
		}

		public Obj_Machinery_Hologram_Holopad ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hologram.dm
		public override dynamic process(  ) {
			dynamic holo_area = null;
			dynamic eye_area = null;

			
			if ( this.hologram != null ) {
				
				if ( Lang13.Bool( this.master ) && !Lang13.Bool( this.master.stat ) && Lang13.Bool( this.master.client ) && this.master.eyeobj != null ) {
					
					if ( !( ( this.stat & 2 ) != 0 ) ) {
						
						if ( !GlobalVars.HOLOPAD_MODE && Map13.GetDistance( this.master.eyeobj, this ) <= this.holo_range ) {
							return 1;
						} else if ( GlobalVars.HOLOPAD_MODE ) {
							holo_area = GlobalFuncs.get_area( this );
							eye_area = GlobalFuncs.get_area( this.master.eyeobj );

							if ( eye_area == holo_area ) {
								return 1;
							}
						}
					}
				}
				this.clear_holo();
			}
			return 1;
		}

		// Function from file: hologram.dm
		public override dynamic Hear( dynamic speech = null, dynamic rendered_speech = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { speech, rendered_speech } ).Extend(_);

			
			if ( _args[2] == null ) {
				_args[2] = "";
			}

			if ( _args[1].speaker != null && this.hologram != null && Lang13.Bool( this.master ) && !Lang13.Bool( _args[1].frequency ) && _args[1].speaker != this.master ) {
				
				if ( !((Ent_Dynamic)this.master).say_understands( _args[1].speaker, _args[1].language ) ) {
					_args[2] = ((Speech)_args[1]).render_message();
				}
				_args[2] = "<i><span class='" + ((Speech)_args[1]).render_wrapper_classes() + "'>Holopad received, <span class='message'>" + _args[2] + "</span></span></i>";
				this.master.show_message( _args[2], 2 );
			}
			return null;
		}

		// Function from file: hologram.dm
		public bool move_hologram(  ) {
			
			if ( this.hologram != null ) {
				Map13.StepTowards( this.hologram, this.master.eyeobj, 0 );
				this.hologram.loc = GlobalFuncs.get_turf( this.master.eyeobj );
			}
			return true;
		}

		// Function from file: hologram.dm
		public bool clear_holo(  ) {
			GlobalFuncs.qdel( this.hologram );
			this.hologram = null;

			if ( this.master.current == this ) {
				this.master.current = null;
			}
			this.master = null;
			this.set_light( 0 );
			this.icon_state = "holopad0";
			this.use_power = 1;
			return true;
		}

		// Function from file: hologram.dm
		public bool create_holo( dynamic A = null, Ent_Static T = null ) {
			T = T ?? this.loc;

			this.hologram = new Obj_Effect_Overlay( T );
			this.hologram.icon = A.holo_icon;
			this.hologram.mouse_opacity = 0;
			this.hologram.layer = GlobalVars.FLY_LAYER;
			this.hologram.anchored = 1;
			this.hologram.name = "" + A.name + " (Hologram)";
			this.hologram.set_light( 2 );
			this.set_light( 2 );
			this.icon_state = "holopad1";
			A.current = this;
			this.master = A;
			this.use_power = 2;
			return true;
		}

		// Function from file: hologram.dm
		public void activate_holo( dynamic user = null ) {
			
			if ( !( ( this.stat & 2 ) != 0 ) && user.eyeobj.loc == this.loc ) {
				
				if ( !( this.hologram != null ) ) {
					this.create_holo( user );
					this.visible_message( "A holographic image of " + user + " flicks to life right before your eyes!" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='warning'>ERROR: </span>Image feed in progress." );
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='warning'>ERROR: </span>Unable to project hologram." );
			}
			return;
		}

		// Function from file: hologram.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( !( user is Mob_Living_Silicon_Ai ) ) {
				return null;
			}

			if ( user.eyeobj.loc != this.loc ) {
				user.eyeobj.forceMove( GlobalFuncs.get_turf( this ) );
			} else if ( !( this.hologram != null ) ) {
				this.activate_holo( user );
			} else if ( this.master == user ) {
				this.clear_holo();
			}
			return null;
		}

		// Function from file: hologram.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic area = null;
			Mob_Living_Silicon_Ai AI = null;

			
			if ( !( a is Mob_Living_Carbon_Human ) ) {
				return null;
			}

			if ( Interface13.Alert( a, "Would you like to request an AI's presence?", null, "Yes", "No" ) == "Yes" ) {
				
				if ( this.last_request + 200 < Game13.time ) {
					this.last_request = Game13.time;
					GlobalFuncs.to_chat( a, "<span class='notice'>You request an AI's presence.</span>" );
					area = GlobalFuncs.get_area( this );

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Silicon_Ai) )) {
						AI = _a;
						

						if ( !( AI.client != null ) ) {
							continue;
						}
						GlobalFuncs.to_chat( AI, new Txt( "<span class='info'>Your presence is requested at <a href='?src=" ).Ref( AI ).str( ";jumptoholopad=" ).Ref( this ).str( "'>" ).the( area ).item().str( "</a>.</span>" ).ToString() );
					}
				} else {
					GlobalFuncs.to_chat( a, "<span class='notice'>A request for AI presence was already sent recently.</span>" );
				}
			}
			return null;
		}

	}

}
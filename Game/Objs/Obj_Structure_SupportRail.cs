// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_SupportRail : Obj_Structure {

		public int health = 10;
		public bool destroyed = false;
		public dynamic supported_mob = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.siemens_coefficient = 1;
			this.pressure_resistance = 506.625;
			this.explosion_resistance = 5;
			this.icon = "icons/obj/objects.dmi";
			this.icon_state = "rail";
			this.layer = 2.1;
		}

		public Obj_Structure_SupportRail ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: support_rail.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.supported_mob ) ) {
				this.letgo();
				this.add_fingerprint( a );
			} else {
				this.supported_mob = a;
				((Ent_Static)a).visible_message( "<span class='notice'>" + this.supported_mob.name + " grabbed the rail.</span>" );
				a.anchored = 1;
				a.loc = this.loc;
				a.dir = this.dir;
				((Mob)a).update_canmove();
				this.add_fingerprint( a );
			}
			return null;
		}

		// Function from file: support_rail.dm
		public void letgo(  ) {
			((Mob)this.supported_mob).update_canmove();
			this.supported_mob.anchored = 0;
			((Ent_Static)this.supported_mob).visible_message( "<span class='notice'>" + this.supported_mob.name + " let go.</span>" );
			this.supported_mob = null;
			return;
		}

		// Function from file: support_rail.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			this.letgo();
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: support_rail.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Game_Data M = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 50, 1 );
				M = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
				((dynamic)M).amount = 1;
				GlobalFuncs.qdel( this );
			} else {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
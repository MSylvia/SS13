// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_MechBayPowerConsole : Obj_Machinery_Computer {

		public bool autostart = true;
		public double? voltage = 45;
		public Obj_Machinery_MechBayRechargeFloor recharge_floor = null;
		public Obj_Machinery_MechBayRechargePort recharge_port = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/mech_bay_power_console";
			this.light_color = "#E17DE1";
			this.icon_state = "recharge_comp";
		}

		public Obj_Machinery_Computer_MechBayPowerConsole ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mech_bay.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( href_list["autostart"] ) ) {
				this.autostart = !this.autostart;
			}

			if ( Lang13.Bool( href_list["voltage"] ) ) {
				this.voltage = String13.ParseNumber( href_list["voltage"] );

				if ( this.recharge_port != null ) {
					this.recharge_port.set_voltage( this.voltage );
				}
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string output = null;
			dynamic cell_charge = null;

			((Mob)user).set_machine( this );
			output = "<html><head><title>" + this.name + "</title></head><body>";

			if ( !( this.recharge_floor != null ) ) {
				output += "<span class='rose'>Mech Bay Recharge Station not initialized.</span><br>";
			} else {
				output += "<b>Mech Bay Recharge Station Data:</b><div style='margin-left: 15px;'>\n						<b>Mecha: </b>" + ( this.recharge_floor.recharging_mecha != null || Lang13.Bool( "None" ) ) + "<br>";

				if ( this.recharge_floor.recharging_mecha != null ) {
					cell_charge = ((dynamic)this.recharge_floor.recharging_mecha).get_charge();
					output += "<b>Cell charge: </b>" + ( cell_charge == null ? "No powercell found" : "" + ((dynamic)this.recharge_floor.recharging_mecha).cell.charge + "/" + ((dynamic)this.recharge_floor.recharging_mecha).cell.maxcharge ) + "<br>";
				}
				output += "</div>";
			}

			if ( !( this.recharge_port != null ) ) {
				output += "<span class='rose'>Mech Bay Power Port not initialized.</span><br>";
			} else {
				output += "<b>Mech Bay Power Port Status: </b>" + ( this.recharge_port.active() ? "Now charging" : "On hold" ) + "<br>";
			}
			output += "</ body></html>";
			Interface13.Browse( user, output, "window=mech_bay_console" );
			GlobalFuncs.onclose( user, "mech_bay_console" );
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}

			if ( !( this.stat != 0 ) && ( Map13.GetDistance( this, a ) <= 1 || a is Mob_Living_Silicon ) ) {
				return this.interact( a );
			}
			return null;
		}

		// Function from file: mech_bay.dm
		public override void set_broken(  ) {
			this.icon_state = Lang13.Initial( this, "icon_state" ) + "_broken";
			this.stat |= 1;

			if ( this.recharge_port != null ) {
				this.recharge_port.stop_charge();
			}
			return;
		}

		// Function from file: mech_bay.dm
		public override dynamic power_change(  ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = Lang13.Initial( this, "icon_state" ) + "_broken";

				if ( this.recharge_port != null ) {
					this.recharge_port.stop_charge();
				}
			} else if ( Lang13.Bool( this.powered() ) ) {
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.stat &= 65533;
			} else {
				Task13.Schedule( Rand13.Int( 0, 15 ), (Task13.Closure)(() => {
					this.icon_state = Lang13.Initial( this, "icon_state" ) + "_nopower";
					this.stat |= 2;

					if ( this.recharge_port != null ) {
						this.recharge_port.stop_charge();
					}
					return;
				}));
			}
			return null;
		}

		// Function from file: mech_bay.dm
		public void mecha_out(  ) {
			
			if ( this.recharge_port != null ) {
				this.recharge_port.stop_charge();
			}
			return;
		}

		// Function from file: mech_bay.dm
		public void mecha_in( Ent_Dynamic mecha = null ) {
			bool answer = false;

			
			if ( ( this.stat & 3 ) != 0 ) {
				((Obj_Mecha)mecha).occupant_message( "<span class='rose'>Control console not responding. Terminating...</span>" );
				return;
			}

			if ( this.recharge_port != null && this.autostart ) {
				answer = this.recharge_port.start_charge( mecha );

				if ( answer ) {
					this.recharge_port.set_voltage( this.voltage );
					this.icon_state = Lang13.Initial( this, "icon_state" ) + "_on";
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Radio_Intercom : Obj_Item_Device_Radio {

		public bool number = false;
		public bool anyai = true;
		public bool circuitry_installed = true;
		public ByTable ai = new ByTable();
		public int last_tick = 0;
		public int? buildstage = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.w_class = 4;
			this.canhear_range = 2;
			this.icon_state = "intercom";
		}

		// Function from file: intercom.dm
		public Obj_Item_Device_Radio_Intercom ( dynamic loc = null, int? ndir = null, int? building = null ) {
			ndir = ndir ?? 0;
			building = building ?? 3;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.buildstage = building;

			if ( Lang13.Bool( this.buildstage ) ) {
				GlobalVars.processing_objects.Add( this );
			} else {
				this.pixel_x = ( ( ( ndir ??0) & 3 ) != 0 ? 0 : ( ndir == 4 ? 28 : -28 ) );
				this.pixel_y = ( ( ( ndir ??0) & 3 ) != 0 ? ( ndir == 1 ? 28 : -28 ) : 0 );
				this.dir = ndir ??0;
				this.b_stat = true;
				this.on = 0;
			}
			this.update_icon();
			return;
		}

		// Function from file: intercom.dm
		public override dynamic process(  ) {
			
			if ( Game13.timeofday - this.last_tick > 30 || Game13.timeofday - this.last_tick < 0 ) {
				this.last_tick = Game13.timeofday;

				if ( !Lang13.Bool( this.areaMaster ) ) {
					this.on = 0;
					this.update_icon();
					return null;
				}
				this.on = this.areaMaster.powered( 1 );
				this.update_icon();
			}
			return null;
		}

		// Function from file: intercom.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( !this.circuitry_installed ) {
				this.icon_state = "intercom-frame";
				return null;
			}
			this.icon_state = "intercom" + ( !Lang13.Bool( this.on ) ? "-p" : "" ) + ( this.b_stat ? "-open" : "" );
			return null;
		}

		// Function from file: intercom.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			double? i = null;
			dynamic coil = null;
			dynamic WT = null;

			
			switch ((int?)( this.buildstage )) {
				case 3:
					
					if ( a is Obj_Item_Weapon_Wirecutters && this.b_stat && this.wires.IsAllCut() ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>You cut out the intercoms wiring and disconnect its electronics.</span>" );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 50, 1 );

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							new Obj_Item_Stack_CableCoil( GlobalFuncs.get_turf( this ), 5 );
							this.on = 0;
							this.b_stat = true;
							this.buildstage = 1;
							this.update_icon();
							GlobalVars.processing_objects.Remove( this );
						}
						return 1;
					} else {
						return base.attackby( (object)(a), (object)(b), (object)(c) );
					}
					break;
				case 2:
					
					if ( a is Obj_Item_Weapon_Screwdriver ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							this.update_icon();
							this.on = 1;
							this.b_stat = false;
							this.buildstage = 3;
							GlobalFuncs.to_chat( b, "<span class='notice'>You secure the electronics!</span>" );
							this.update_icon();
							GlobalVars.processing_objects.Add( this );
							i = null;

							while (( i ??0) <= 5) {
								this.wires.UpdateCut( i, true );
								i++;
							}
						}
						return 1;
					}
					break;
				case 1:
					
					if ( a is Obj_Item_Stack_CableCoil ) {
						coil = a;

						if ( Convert.ToDouble( coil.amount ) < 5 ) {
							GlobalFuncs.to_chat( b, "<span class='warning'>You need more cable for this!</span>" );
							return null;
						}

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							coil.use( 5 );
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You wire " ).the( this ).item().str( "!</span>" ).ToString() );
							this.buildstage = 2;
						}
						return 1;
					}

					if ( a is Obj_Item_Weapon_Crowbar ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>You begin removing the electronics...</span>" );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							new Obj_Item_Weapon_IntercomElectronics( GlobalFuncs.get_turf( this ) );
							GlobalFuncs.to_chat( b, "<span class='notice'>The circuitboard pops out!</span>" );
							this.buildstage = 0;
						}
						return 1;
					}
					break;
				case 0:
					
					if ( a is Obj_Item_Weapon_IntercomElectronics ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							GlobalFuncs.qdel( a );
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You insert " ).the( a ).item().str( " into " ).the( this ).item().str( "!</span>" ).ToString() );
							this.buildstage = 1;
						}
						return 1;
					}

					if ( a is Obj_Item_Weapon_Weldingtool ) {
						WT = a;
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder.ogg", 50, 1 );

						if ( !Lang13.Bool( WT.remove_fuel( 3, b ) ) ) {
							GlobalFuncs.to_chat( b, "<span class='warning'>You're out of welding fuel.</span>" );
							return 1;
						}

						if ( GlobalFuncs.do_after( b, this, 10 ) ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>You cut the intercom frame from the wall!</span>" );
							new Obj_Item_Mounted_Frame_Intercom( GlobalFuncs.get_turf( this ) );
							GlobalFuncs.qdel( this );
							return 1;
						}
					}
					break;
			}
			return null;
		}

		// Function from file: intercom.dm
		public override dynamic Hear( dynamic speech = null, dynamic rendered_speech = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { speech, rendered_speech } ).Extend(_);

			
			if ( _args[2] == null ) {
				_args[2] = "";
			}

			if ( _args[1].speaker != null && !this.anyai && !false ) {
				return null;
			}
			base.Hear( (object)(speech), (object)(rendered_speech) );
			return null;
		}

		// Function from file: intercom.dm
		public override int? receive_range( dynamic freq = null, dynamic level = null ) {
			dynamic position = null;

			
			if ( !Lang13.Bool( this.on ) || this.b_stat || this.isWireCut( GlobalVars.WIRE_RECEIVE ) != 0 ) {
				return -1;
			}
			Interface13.Stat( null, level.Contains( 0 ) );

			if ( !( !Lang13.Bool( this.on ) || this.b_stat || this.isWireCut( GlobalVars.WIRE_RECEIVE ) != 0 ) ) {
				position = GlobalFuncs.get_turf( this );

				if ( position == null || !false ) {
					return -1;
				}
			}

			if ( !Lang13.Bool( this.listening ) ) {
				return -1;
			}

			if ( freq == GlobalVars.SYND_FREQ ) {
				
				if ( !this.syndie ) {
					return -1;
				}
			}
			return this.canhear_range;
		}

		// Function from file: intercom.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.add_fingerprint( a );
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.attack_self( a );
				return;
			}));
			return null;
		}

		// Function from file: intercom.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: intercom.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			this.add_fingerprint( user );
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.attack_self( user );
				return;
			}));
			return null;
		}

		// Function from file: intercom.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.processing_objects.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
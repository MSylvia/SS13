// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Pod : Obj_Machinery_Computer {

		public Obj_Machinery_MassDriver connected = null;
		public string title = "Mass Driver Controls";
		public string id = "1";
		public double? timing = 0;
		public double time = 30;
		public int range = 4;

		public Obj_Machinery_Computer_Pod ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: pod.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			double? t = null;
			double? tp = null;
			Obj_Machinery_Door_Poddoor M = null;
			Obj_Machinery_MassDriver M2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Task13.User.contents.Find( this ) != 0 || Map13.GetDistance( this, Task13.User ) <= 1 && this.loc is Tile || Task13.User is Mob_Living_Silicon ) {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["power"] ) ) {
					t = String13.ParseNumber( href_list["power"] );
					t = Num13.MinInt( Num13.MaxInt( ((int)( 0.25 )), ((int)( t ??0 )) ), 16 );

					if ( this.connected != null ) {
						this.connected.power = t;
					}
				}

				if ( Lang13.Bool( href_list["alarm"] ) ) {
					this.alarm();
				}

				if ( Lang13.Bool( href_list["time"] ) ) {
					this.timing = String13.ParseNumber( href_list["time"] );
				}

				if ( Lang13.Bool( href_list["tp"] ) ) {
					tp = String13.ParseNumber( href_list["tp"] );
					this.time += tp ??0;
					this.time = Num13.MinInt( Num13.MaxInt( Num13.Floor( this.time ), 0 ), 120 );
				}

				if ( Lang13.Bool( href_list["door"] ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_Door_Poddoor) )) {
						M = _a;
						

						if ( M.id == this.id ) {
							
							if ( M.density ) {
								M.open();
							} else {
								M.close();
							}
						}
					}
				}

				if ( Lang13.Bool( href_list["drive"] ) ) {
					
					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_MassDriver) )) {
						M2 = _b;
						

						if ( M2.id == this.id ) {
							M2.power = this.connected.power;
							M2.drive();
						}
					}
				}
				this.updateUsrDialog();
			}
			return null;
		}

		// Function from file: pod.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( !Lang13.Bool( base.process( (object)(seconds) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( this.timing ) ) {
				
				if ( this.time > 0 ) {
					this.time = Num13.Floor( this.time ) - 1;
				} else {
					this.alarm();
					this.time = 0;
					this.timing = 0;
				}
				this.updateDialog();
			}
			return null;
		}

		// Function from file: pod.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			string d2 = null;
			double second = 0;
			double minute = 0;
			string temp = null;
			ByTable L = null;
			dynamic t = null;
			Browser popup = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			dat = "";
			((Mob)a).set_machine( this );

			if ( this.connected != null ) {
				
				if ( Lang13.Bool( this.timing ) ) {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=0'>Stop Time Launch</A>" ).ToString();
				} else {
					d2 = new Txt( "<A href='?src=" ).Ref( this ).str( ";time=1'>Initiate Time Launch</A>" ).ToString();
				}
				second = this.time % 60;
				minute = ( this.time - second ) / 60;
				dat += new Txt( "<HR>\nTimer System: " ).item( d2 ).str( "\nTime Left: " ).item( ( minute != 0 ? "" + minute + ":" : null ) ).item( second ).str( " <A href='?src=" ).Ref( this ).str( ";tp=-30'>-</A> <A href='?src=" ).Ref( this ).str( ";tp=-1'>-</A> <A href='?src=" ).Ref( this ).str( ";tp=1'>+</A> <A href='?src=" ).Ref( this ).str( ";tp=30'>+</A>" ).ToString();
				temp = "";
				L = new ByTable(new object [] { 0.25, 0.5, 1, 2, 4, 8, 16 });

				foreach (dynamic _a in Lang13.Enumerate( L )) {
					t = _a;
					

					if ( t == this.connected.power ) {
						temp += "" + t + " ";
					} else {
						temp += new Txt( "<A href = '?src=" ).Ref( this ).str( ";power=" ).item( t ).str( "'>" ).item( t ).str( "</A> " ).ToString();
					}
				}
				dat += new Txt( "<HR>\nPower Level: " ).item( temp ).str( "<BR>\n<A href = '?src=" ).Ref( this ).str( ";alarm=1'>Firing Sequence</A><BR>\n<A href = '?src=" ).Ref( this ).str( ";drive=1'>Test Fire Driver</A><BR>\n<A href = '?src=" ).Ref( this ).str( ";door=1'>Toggle Outer Door</A><BR>" ).ToString();
			} else {
				dat += new Txt( "<BR>\n<A href = '?src=" ).Ref( this ).str( ";door=1'>Toggle Outer Door</A><BR>" ).ToString();
			}
			dat += new Txt( "<BR><BR><A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A>" ).ToString();
			this.add_fingerprint( Task13.User );
			popup = new Browser( a, "computer", this.title, 400, 500 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: pod.dm
		public void alarm(  ) {
			Obj_Machinery_Door_Poddoor M = null;
			Obj_Machinery_MassDriver M2 = null;
			Obj_Machinery_Door_Poddoor M3 = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}

			if ( !( this.connected != null ) ) {
				Map13.FetchViewers( null, null ).WriteMsg( "Cannot locate mass driver connector. Cancelling firing sequence!" );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_Door_Poddoor) )) {
				M = _a;
				

				if ( M.id == this.id ) {
					M.open();
				}
			}
			Task13.Sleep( 20 );

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_MassDriver) )) {
				M2 = _b;
				

				if ( M2.id == this.id ) {
					M2.power = this.connected.power;
					M2.drive();
				}
			}
			Task13.Sleep( 50 );

			foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_Door_Poddoor) )) {
				M3 = _c;
				

				if ( M3.id == this.id ) {
					M3.close();
				}
			}
			return;
		}

		// Function from file: pod.dm
		public override void initialize(  ) {
			Obj_Machinery_MassDriver M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, this.range ), typeof(Obj_Machinery_MassDriver) )) {
				M = _a;
				

				if ( M.id == this.id ) {
					this.connected = M;
				}
			}
			base.initialize();
			return;
		}

	}

}
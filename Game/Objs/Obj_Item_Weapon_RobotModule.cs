// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_RobotModule : Obj_Item_Weapon {

		public ByTable modules = new ByTable();
		public Obj_Item emag = null;
		public ByTable storages = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 100;
			this.item_state = "electronic";
			this.flags = 64;
			this.icon = "icons/obj/module.dmi";
			this.icon_state = "std_module";
		}

		// Function from file: robot_modules.dm
		public Obj_Item_Weapon_RobotModule ( dynamic loc = null ) : base( (object)(loc) ) {
			this.modules.Add( new Obj_Item_Device_Assembly_Flash_Cyborg( this ) );
			this.emag = new Obj_Item_Toy_Sword( this );
			this.emag.name = "Placeholder Emag Item";
			return;
		}

		// Function from file: robot_modules.dm
		public void on_emag(  ) {
			return;
		}

		// Function from file: robot_modules.dm
		public void fix_modules(  ) {
			Obj_Item I = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.modules, typeof(Obj_Item) )) {
				I = _a;
				
				I.flags |= 2;
				I.mouse_opacity = 2;
			}

			if ( this.emag != null ) {
				this.emag.flags |= 2;
				this.emag.mouse_opacity = 2;
			}
			return;
		}

		// Function from file: robot_modules.dm
		public void rebuild(  ) {
			ByTable temp_list = null;
			Obj O = null;

			temp_list = this.modules;
			this.modules = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( temp_list, typeof(Obj) )) {
				O = _a;
				

				if ( O != null ) {
					this.modules.Add( O );
				}
			}
			this.fix_modules();
			return;
		}

		// Function from file: robot_modules.dm
		public virtual void respawn_consumable( dynamic R = null, double? coeff = null ) {
			coeff = coeff ?? 1;

			RobotEnergyStorage st = null;
			Obj_Item I = null;
			Obj_Item F = null;
			Obj_Item B = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.storages, typeof(RobotEnergyStorage) )) {
				st = _a;
				
				st.energy = Num13.MinInt( st.max_energy, ((int)( st.energy + ( coeff ??0) * st.recharge_rate )) );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.get_usable_modules(), typeof(Obj_Item) )) {
				I = _b;
				

				if ( I is Obj_Item_Device_Assembly_Flash ) {
					F = I;
					((dynamic)F).times_used = 0;
					F.crit_fail = false;
					F.update_icon();
				}

				if ( I is Obj_Item_Weapon_Melee_Baton ) {
					B = I;

					if ( Lang13.Bool( ((dynamic)B).bcell ) ) {
						((dynamic)B).bcell.charge = ((dynamic)B).bcell.maxcharge;
					}
				}
			}
			R.toner = R.tonermax;
			return;
		}

		// Function from file: robot_modules.dm
		public void add_module( dynamic I = null ) {
			dynamic S = null;
			dynamic C = null;

			
			if ( I is Obj_Item_Stack ) {
				S = I;

				if ( GlobalFuncs.is_type_in_list( S, new ByTable(new object [] { typeof(Obj_Item_Stack_Sheet_Metal), typeof(Obj_Item_Stack_Rods), typeof(Obj_Item_Stack_Tile_Plasteel) }) ) ) {
					
					if ( Lang13.Bool( S.materials["$metal"] ) ) {
						S.cost = S.materials["$metal"] * 0.25;
					}
					S.source = this.get_or_create_estorage( typeof(RobotEnergyStorage_Metal) );
				} else if ( S is Obj_Item_Stack_Sheet_Glass ) {
					S.cost = 500;
					S.source = this.get_or_create_estorage( typeof(RobotEnergyStorage_Glass) );
				} else if ( S is Obj_Item_Stack_Medical ) {
					S.cost = 250;
					S.source = this.get_or_create_estorage( typeof(RobotEnergyStorage_Medical) );
				} else if ( S is Obj_Item_Stack_CableCoil ) {
					S.cost = 1;
					S.source = this.get_or_create_estorage( typeof(RobotEnergyStorage_Wire) );
				}

				if ( Lang13.Bool( S ) && Lang13.Bool( S.source ) ) {
					S.materials = new ByTable();
					S.is_cyborg = true;
				}
			}

			if ( I is Obj_Item_Weapon_Restraints_Handcuffs_Cable ) {
				C = I;
				C.wirestorage = this.get_or_create_estorage( typeof(RobotEnergyStorage_Wire) );
			}
			I.loc = this;
			this.modules.Add( I );
			this.rebuild();
			return;
		}

		// Function from file: robot_modules.dm
		public dynamic get_or_create_estorage( Type storage_type = null ) {
			RobotEnergyStorage S = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.storages, typeof(RobotEnergyStorage) )) {
				S = _a;
				

				if ( Lang13.Bool( ((dynamic)storage_type).IsInstanceOfType( S ) ) ) {
					return S;
				}
			}
			return Lang13.Call( storage_type, this );
		}

		// Function from file: robot_modules.dm
		public ByTable get_inactive_modules(  ) {
			ByTable _default = null;

			Ent_Static R = null;
			dynamic m = null;

			_default = new ByTable();
			R = this.loc;

			foreach (dynamic _a in Lang13.Enumerate( this.get_usable_modules() )) {
				m = _a;
				

				if ( m != ((dynamic)R).module_state_1 && m != ((dynamic)R).module_state_2 && m != ((dynamic)R).module_state_3 ) {
					_default.Add( m );
				}
			}
			return _default;
		}

		// Function from file: robot_modules.dm
		public ByTable get_usable_modules(  ) {
			ByTable _default = null;

			Ent_Static R = null;

			_default = this.modules.Copy();
			R = this.loc;

			if ( Lang13.Bool( ((dynamic)R).emagged ) ) {
				_default.Add( this.emag );
			}
			return _default;
		}

		// Function from file: robot_modules.dm
		public override double emp_act( int severity = 0 ) {
			Obj O = null;

			
			if ( this.modules != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.modules, typeof(Obj) )) {
					O = _a;
					
					O.emp_act( severity );
				}
			}

			if ( this.emag != null ) {
				this.emag.emp_act( severity );
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: robot_modules.dm
		public override dynamic Destroy(  ) {
			this.modules.Cut();
			this.emag = null;
			this.storages.Cut();
			return base.Destroy();
		}

	}

}
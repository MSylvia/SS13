// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Lattice_Catwalk : Obj_Structure_Lattice {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.smooth = 1;
			this.icon = "icons/obj/smooth_structures/catwalk.dmi";
			this.icon_state = "catwalk";
		}

		public Obj_Structure_Lattice_Catwalk ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: lattice.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic T = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Stack_CableCoil ) {
				T = GlobalFuncs.get_turf( this );
				((Ent_Static)T).attackby( A, user );
				return null;
			}
			return null;
		}

		// Function from file: lattice.dm
		public override void Deconstruct(  ) {
			Ent_Static T = null;
			Obj_Structure_Cable C = null;

			T = this.loc;

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Structure_Cable) )) {
				C = _a;
				
				C.Deconstruct();
			}
			base.Deconstruct();
			return;
		}

		// Function from file: lattice.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			Ent_Static T = null;
			Obj_Structure_Cable C = null;

			T = this.loc;

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Structure_Cable) )) {
				C = _a;
				
				C.Deconstruct();
			}
			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			return false;
		}

	}

}
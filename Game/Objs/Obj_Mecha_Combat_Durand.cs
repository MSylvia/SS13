// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Combat_Durand : Obj_Mecha_Combat {

		public bool defence = false;
		public int defence_deflect = 35;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.infra_luminosity = 8;
			this.initial_icon = "durand";
			this.step_in = 4;
			this.dir_in = 1;
			this.health = 400;
			this.deflect_chance = 20;
			this.damage_absorption = new ByTable().Set( "brute", 0.5 ).Set( "fire", 1.1 ).Set( "bullet", 0.41 ).Set( "laser", 0.85 ).Set( "energy", 081 ).Set( "bomb", 0.8 );
			this.max_temperature = 30000;
			this.force = 40;
			this.wreckage = typeof(Obj_Effect_Decal_MechaWreckage_Durand);
			this.icon_state = "durand";
		}

		public Obj_Mecha_Combat_Durand ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: durand.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( href_list["toggle_defence_mode"] ) ) {
				this.__CallVerb("Toggle defence mode" );
			}
			return null;
		}

		// Function from file: durand.dm
		public override string get_commands(  ) {
			string output = null;

			output = new Txt( "<div class='wr'>\n						<div class='header'>Special</div>\n						<div class='links'>\n						<a href='?src=" ).Ref( this ).str( ";toggle_defence_mode=1'>Toggle defence mode</a>\n						</div>\n						</div>\n						" ).ToString();
			output += base.get_commands();
			return output;
		}

		// Function from file: durand.dm
		public override string get_stats_part(  ) {
			string output = null;

			output = base.get_stats_part();
			output += "<b>Defence mode: " + ( this.defence ? "on" : "off" ) + "</b>";
			return output;
		}

		// Function from file: durand.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			dynamic _default = null;

			
			if ( this.defence ) {
				
				if ( Game13.time - this.last_message > 20 ) {
					this.occupant_message( "<font color='red'>Unable to move while in defence mode</font>" );
					this.last_message = Game13.time;
				}
				return 0;
			}
			_default = base.relaymove( M, direction );
			return _default;
		}

		// Function from file: durand.dm
		[Verb]
		[VerbInfo( name: "Toggle defence mode", group: "Exosuit Interface", access: VerbAccess.InUserLocation )]
		public void defence_mode(  ) {
			
			if ( Task13.User != this.occupant ) {
				return;
			}
			this.defence = !this.defence;

			if ( this.defence ) {
				this.icon_state = 0;

				if ( !( this is Obj_Mecha_Combat_Durand_Old ) ) {
					Icon13.Flick( "durand-lockdown-a", this );
					this.icon_state = "durand-lockdown";
				}
				this.deflect_chance = this.defence_deflect;
				this.occupant_message( "<font color='blue'>You enable " + this + " defence mode.</font>" );
				GlobalFuncs.playsound( this, "sound/mecha/mechlockdown.ogg", 60, 1 );
			} else {
				this.deflect_chance = Lang13.Initial( this, "deflect_chance" );

				if ( !( this is Obj_Mecha_Combat_Durand_Old ) ) {
					this.icon_state = this.reset_icon();
				}
				this.occupant_message( "<font color='red'>You disable " + this + " defence mode.</font>" );
			}
			this.log_message( "Toggled defence mode." );
			return;
		}

	}

}
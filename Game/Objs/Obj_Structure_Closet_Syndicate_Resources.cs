// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Syndicate_Resources : Obj_Structure_Closet_Syndicate {

		// Function from file: syndicate.dm
		public Obj_Structure_Closet_Syndicate_Resources ( dynamic loc = null ) : base( (object)(loc) ) {
			int common_min = 0;
			int common_max = 0;
			int rare_min = 0;
			int rare_max = 0;
			int pickednum = 0;
			Obj_Item_Weapon_Paper P = null;
			Game_Data M = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			common_min = 30;
			common_max = 50;
			rare_min = 5;
			rare_max = 20;
			Task13.Sleep( 2 );
			pickednum = Rand13.Int( 1, 50 );

			if ( pickednum == 1 ) {
				P = new Obj_Item_Weapon_Paper( this );
				P.name = "IOU";
				P.info = "Sorry man, we needed the money so we sold your stash. It's ok, we'll double our money for sure this time!";
			}

			if ( pickednum >= 2 ) {
				M = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
				((dynamic)M).amount = Rand13.Int( common_min, common_max );
			}

			if ( pickednum >= 5 ) {
				new Obj_Item_Stack_Sheet_Glass_Glass( this, Rand13.Int( common_min, common_max ) );
			}

			if ( pickednum >= 10 ) {
				new Obj_Item_Stack_Sheet_Plasteel( this, Rand13.Int( common_min, common_max ) );
			}

			if ( pickednum >= 15 ) {
				new Obj_Item_Stack_Sheet_Mineral_Plasma( this, Rand13.Int( rare_min, rare_max ) );
			}

			if ( pickednum >= 20 ) {
				new Obj_Item_Stack_Sheet_Mineral_Silver( this, Rand13.Int( rare_min, rare_max ) );
			}

			if ( pickednum >= 30 ) {
				new Obj_Item_Stack_Sheet_Mineral_Gold( this, Rand13.Int( rare_min, rare_max ) );
			}

			if ( pickednum >= 40 ) {
				new Obj_Item_Stack_Sheet_Mineral_Uranium( this, Rand13.Int( rare_min, rare_max ) );
			}

			if ( pickednum >= 45 ) {
				new Obj_Item_Stack_Sheet_Mineral_Diamond( this, Rand13.Int( rare_min, rare_max ) );
			}

			if ( pickednum == 50 ) {
				new Obj_Item_Weapon_Tank_Jetpack_Carbondioxide( this );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Organ_Brain : Obj_Item_Organ {

		public Mob_Living_Carbon_Brain brainmob = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.health = 400;
			this.flags = 0;
			this.force = 1;
			this.w_class = 1;
			this.throw_speed = 3;
			this.throw_range = 5;
			this.origin_tech = "biotech=3";
			this.attack_verb = new ByTable(new object [] { "attacked", "slapped", "whacked" });
			this.prosthetic_name = "cyberbrain";
			this.prosthetic_icon = "brain-prosthetic";
			this.organ_tag = "brain";
			this.organ_type = typeof(Organ_Internal_Brain);
			this.icon_state = "brain2";
		}

		// Function from file: brain_item.dm
		public Obj_Item_Organ_Brain ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 5, (Task13.Closure)(() => {
				
				if ( this.brainmob != null && this.brainmob.client != null ) {
					this.brainmob.client.screen.len = 0;
				}
				return;
			}));
			return;
		}

		// Function from file: brain_item.dm
		public override void replaced( Mob target = null ) {
			
			if ( Lang13.Bool( target.key ) ) {
				target.ghostize();
			}

			if ( this.brainmob != null ) {
				
				if ( this.brainmob.mind != null ) {
					this.brainmob.mind.transfer_to( target );
				} else {
					target.key = this.brainmob.key;
				}
			}
			return;
		}

		// Function from file: brain_item.dm
		public override void removed( Mob target = null, Mob user = null ) {
			Mob H = null;
			Obj_Item_Organ_Brain B = null;

			base.removed( target, user );
			H = target;
			((dynamic)H).dropBorers();
			B = this;

			if ( B is Obj_Item_Organ_Brain && H is Mob_Living_Carbon_Human ) {
				B.transfer_identity( target );
			}
			return;
		}

		// Function from file: brain_item.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.brainmob != null && this.brainmob.client != null ) {
				
				if ( GlobalFuncs.mind_can_reenter( this.brainmob.mind ) == true ) {
					GlobalFuncs.to_chat( user, "<span class='deadsay'>This one seems unresponsive.</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>You can feel the small spark of life still left in this one.</span>" );
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='deadsay'>This one seems particularly lifeless. Perhaps it will regain some of its luster later..</span>" );
			}
			return null;
		}

		// Function from file: brain_item.dm
		public void transfer_identity( Ent_Dynamic H = null ) {
			this.name = "" + H + "'s brain";
			this.brainmob = new Mob_Living_Carbon_Brain( this );
			this.brainmob.name = ((dynamic)H).real_name;
			this.brainmob.real_name = ((dynamic)H).real_name;
			this.brainmob.dna = ((Dna)((dynamic)H).dna).Clone();
			this.brainmob.timeofhostdeath = Convert.ToInt32( ((dynamic)H).timeofdeath );

			if ( Lang13.Bool( ((dynamic)H).mind ) ) {
				((Mind)((dynamic)H).mind).transfer_to( this.brainmob );
			}
			GlobalFuncs.to_chat( this.brainmob, "<span class='notice'>You feel slightly disoriented. That's normal when you're just a brain.</span>" );
			GlobalFuncs.callHook( "debrain" );
			return;
		}

	}

}
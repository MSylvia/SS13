// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Dnainjector : Obj_Item_Weapon {

		public dynamic block = 0;
		public Dna2_Record buf = null;
		public int s_time = 10;
		public int uses = 1;
		public bool? nofail = false;
		public bool is_bullet = false;
		public bool inuse = false;
		public int datatype = 0;
		public double value = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.throw_speed = 1;
			this.throw_range = 5;
			this.w_class = 1;
			this.icon_state = "dnainjector";
		}

		// Function from file: dna_injector.dm
		public Obj_Item_Weapon_Dnainjector ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.datatype != 0 && Lang13.Bool( this.block ) ) {
				this.buf = new Dna2_Record();
				this.buf.dna = new Dna();
				this.buf.types = this.datatype;
				this.buf.dna.ResetSE();
				this.SetValue( this.value );
			}
			return;
		}

		// Function from file: dna_injector.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			Obj_Effect_EquipE_Human O = null;
			dynamic O2 = null;

			
			if ( !( M is Mob ) ) {
				return null;
			}

			if ( !Lang13.Bool( user.dexterity_check() ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return null;
			}
			M.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <font color='orange'>Has been injected with " + this.name + " by " + user.name + " (" + user.ckey + ")</font>" );
			user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <font color='red'>Used the " + this.name + " to inject " + M.name + " (" + M.ckey + ")</font>" );
			GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + user.name + " (" + user.ckey + ") used the " + this.name + " to inject " + M.name + " (" + M.ckey + ")" ) ) );

			if ( !( user is Mob_Living_Carbon ) ) {
				M.LAssailant = null;
			} else {
				M.LAssailant = user;
			}

			if ( Lang13.Bool( user ) ) {
				
				if ( M is Mob_Living_Carbon_Human ) {
					
					if ( !this.inuse ) {
						O = new Obj_Effect_EquipE_Human();
						O.source = user;
						O.target = M;
						O.item = this;
						O.s_loc = user.loc;
						O.t_loc = M.loc;
						O.place = "dnainjector";
						this.inuse = true;
						Task13.Schedule( 50, (Task13.Closure)(() => {
							this.inuse = false;
							return;
						}));
						M.requests.Add( O );

						if ( ( this.buf.types & 4 ) != 0 ) {
							
							if ( Lang13.Bool( this.block ) ) {
								
								if ( this.GetState() && this.block == GlobalVars.MONKEYBLOCK && M is Mob_Living_Carbon_Human ) {
									GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the Isolated " + this.name + " <span class='warning'>(MONKEY)</span>" );
									GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the Isolated " + this.name + " (MONKEY)" ) ) );
									GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the Isolated " + this.name + " <span class='warning'>(MONKEY)</span>" ) ) );
								} else {
									GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the Isolated " + this.name ) ) );
								}
							} else if ( this.GetState( GlobalVars.MONKEYBLOCK ) && M is Mob_Living_Carbon_Human ) {
								GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the " + this.name + " <span class='warning'>(MONKEY)</span>" );
								GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name + " (MONKEY)" ) ) );
								GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the " + this.name + " <span class='warning'>(MONKEY)</span>" ) ) );
							} else {
								GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name ) ) );
							}
						} else {
							GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name ) ) );
						}
						Task13.Schedule( 0, (Task13.Closure)(() => {
							O.process();
							return;
							return;
						}));
					}
				} else if ( !this.inuse ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, M ) )) {
						O2 = _a;
						
						O2.show_message( "<span class='warning'>" + M + " has been injected with " + this + " by " + user + ".</span>", 1 );
					}

					if ( !( M is Mob_Living_Carbon_Human || M is Mob_Living_Carbon_Monkey ) ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>Apparently it didn't work.</span>" );
						return null;
					}

					if ( ( this.buf.types & 4 ) != 0 ) {
						
						if ( Lang13.Bool( this.block ) ) {
							
							if ( this.GetState() && this.block == GlobalVars.MONKEYBLOCK && M is Mob_Living_Carbon_Human ) {
								GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the Isolated " + this.name + " <span class='warning'>(MONKEY)</span>" );
								GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the Isolated " + this.name + " (MONKEY)" ) ) );
								GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the Isolated " + this.name + " <span class='warning'>(MONKEY)</span>" ) ) );
							} else {
								GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the Isolated " + this.name ) ) );
							}
						} else if ( this.GetState( GlobalVars.MONKEYBLOCK ) && M is Mob_Living_Carbon_Human ) {
							GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( M ) + " with the " + this.name + " <span class='warning'>(MONKEY)</span>" );
							GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name + " (MONKEY)" ) ) );
						} else {
							GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name ) ) );
						}
					} else {
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( M ) + " with the " + this.name ) ) );
					}
					this.inuse = true;
					this.inject( M, user );
					Task13.Schedule( 50, (Task13.Closure)(() => {
						this.inuse = false;
						return;
					}));

					if ( Lang13.Bool( user ) ) {
						
						if ( Lang13.Bool( M ) ) {
							user.show_message( "<span class='warning'>You inject " + M.name + ".</span>" );
						} else {
							user.show_message( "<span class='warning'>You finish the injection.</span>" );
						}
					}
				}
			}
			return null;
		}

		// Function from file: dna_injector.dm
		public int inject( dynamic M = null, dynamic user = null ) {
			
			if ( M is Mob_Living_Carbon_Human_Manifested ) {
				GlobalFuncs.to_chat( M, "<span class='warning'> Apparently it didn't work.</span>" );

				if ( M != user ) {
					GlobalFuncs.to_chat( user, "<span class='warning'> Apparently it didn't work.</span>" );
				}
			} else {
				
				if ( M is Mob_Living ) {
					M.radiation += Rand13.Int( 5, 20 );
				}

				if ( !Lang13.Bool( M.mutations.Contains( 8 ) ) ) {
					
					if ( ( this.buf.types & 1 ) != 0 ) {
						
						if ( !Lang13.Bool( this.block ) ) {
							((Mob)M).UpdateAppearance( this.buf.dna.UI.Copy() );

							if ( ( this.buf.types & 2 ) != 0 ) {
								M.real_name = this.buf.dna.real_name;
								M.name = this.buf.dna.real_name;
							}
							this.uses--;
						} else {
							((Dna)M.dna).SetUIValue( this.block, this.GetValue() ?1:0 );
							((Mob)M).UpdateAppearance();
							this.uses--;
						}
					}

					if ( ( this.buf.types & 4 ) != 0 ) {
						
						if ( !Lang13.Bool( this.block ) ) {
							M.dna.SE = this.buf.dna.SE.Copy();
							((Dna)M.dna).UpdateSE();
						} else {
							((Dna)M.dna).SetSEValue( this.block, this.GetValue() ?1:0 );
						}
						GlobalFuncs.domutcheck( M, null, this.nofail );
						this.uses--;
					}
				}
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				if ( Lang13.Bool( user ) ) {
					((Mob)user).drop_from_inventory( this );
				}

				if ( !( this.uses != 0 ) ) {
					GlobalFuncs.qdel( this );
				}
				return;
			}));
			return this.uses;
		}

		// Function from file: dna_injector.dm
		public void SetValue( double val = 0, int? selblock = null ) {
			selblock = selblock ?? 0;

			dynamic real_block = null;

			real_block = this.GetRealBlock( selblock );

			if ( ( this.buf.types & 4 ) != 0 ) {
				this.buf.dna.SetSEValue( real_block, val ); return;
			} else {
				this.buf.dna.SetUIValue( real_block, val ); return;
			}
		}

		// Function from file: dna_injector.dm
		public bool GetValue( int? selblock = null ) {
			selblock = selblock ?? 0;

			dynamic real_block = null;

			real_block = this.GetRealBlock( selblock );

			if ( ( this.buf.types & 4 ) != 0 ) {
				return this.buf.dna.GetSEValue( real_block );
			} else {
				return this.buf.dna.GetUIValue( real_block );
			}
		}

		// Function from file: dna_injector.dm
		public void SetState( bool on = false, int? selblock = null ) {
			selblock = selblock ?? 0;

			dynamic real_block = null;

			real_block = this.GetRealBlock( selblock );

			if ( ( this.buf.types & 4 ) != 0 ) {
				this.buf.dna.SetSEState( real_block, on ); return;
			} else {
				this.buf.dna.SetUIState( real_block, on ); return;
			}
		}

		// Function from file: dna_injector.dm
		public bool GetState( int? selblock = null ) {
			selblock = selblock ?? 0;

			dynamic real_block = null;

			real_block = this.GetRealBlock( selblock );

			if ( ( this.buf.types & 4 ) != 0 ) {
				return this.buf.dna.GetSEState( real_block );
			} else {
				return this.buf.dna.GetUIState( real_block );
			}
		}

		// Function from file: dna_injector.dm
		public dynamic GetRealBlock( int? selblock = null ) {
			
			if ( selblock == 0 ) {
				return this.block;
			} else {
				return selblock;
			}
		}

		// Function from file: dna_injector.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

	}

}
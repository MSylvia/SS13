// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Janitorialcart : Obj_Structure {

		public int amount_per_transfer_from_this = 5;
		public Obj_Item_Weapon_Storage_Bag_Trash mybag = null;
		public Obj_Item_Weapon_Mop mymop = null;
		public dynamic myspray = null;
		public Obj_Item_Device_Lightreplacer myreplacer = null;
		public int signs = 0;
		public int max_signs = 4;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 4096;
			this.icon = "icons/obj/janitor.dmi";
			this.icon_state = "cart";
		}

		// Function from file: janicart.dm
		public Obj_Structure_Janitorialcart ( dynamic loc = null ) : base( (object)(loc) ) {
			this.create_reagents( 100 );
			return;
		}

		// Function from file: janicart.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();

			if ( this.mybag != null ) {
				this.overlays.Add( "cart_garbage" );
			}

			if ( this.mymop != null ) {
				this.overlays.Add( "cart_mop" );
			}

			if ( Lang13.Bool( this.myspray ) ) {
				this.overlays.Add( "cart_spray" );
			}

			if ( this.myreplacer != null ) {
				this.overlays.Add( "cart_replacer" );
			}

			if ( this.signs != 0 ) {
				this.overlays.Add( "cart_sign" + this.signs );
			}
			return false;
		}

		// Function from file: janicart.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Mob user = null;
			dynamic Sign = null;

			
			if ( !( Map13.GetDistance( this, Task13.User ) <= 1 ) ) {
				return null;
			}

			if ( !( Task13.User is Mob_Living ) ) {
				return null;
			}
			user = Task13.User;

			if ( Lang13.Bool( href_list["garbage"] ) ) {
				
				if ( this.mybag != null ) {
					user.put_in_hands( this.mybag );
					user.WriteMsg( "<span class='notice'>You take " + this.mybag + " from " + this + ".</span>" );
					this.mybag = null;
				}
			}

			if ( Lang13.Bool( href_list["mop"] ) ) {
				
				if ( this.mymop != null ) {
					user.put_in_hands( this.mymop );
					user.WriteMsg( "<span class='notice'>You take " + this.mymop + " from " + this + ".</span>" );
					this.mymop = null;
				}
			}

			if ( Lang13.Bool( href_list["spray"] ) ) {
				
				if ( Lang13.Bool( this.myspray ) ) {
					user.put_in_hands( this.myspray );
					user.WriteMsg( "<span class='notice'>You take " + this.myspray + " from " + this + ".</span>" );
					this.myspray = null;
				}
			}

			if ( Lang13.Bool( href_list["replacer"] ) ) {
				
				if ( this.myreplacer != null ) {
					user.put_in_hands( this.myreplacer );
					user.WriteMsg( "<span class='notice'>You take " + this.myreplacer + " from " + this + ".</span>" );
					this.myreplacer = null;
				}
			}

			if ( Lang13.Bool( href_list["sign"] ) ) {
				
				if ( this.signs != 0 ) {
					Sign = Lang13.FindIn( typeof(Obj_Item_Weapon_Caution), this );

					if ( Lang13.Bool( Sign ) ) {
						user.put_in_hands( Sign );
						user.WriteMsg( new Txt( "<span class='notice'>You take " ).a( Sign ).item().str( " from " ).item( this ).str( ".</span>" ).ToString() );
						this.signs--;
					} else {
						GlobalFuncs.warning( "" + ( "Signs (" + this.signs + ") didn't match contents" ) + " in " + "code/game/objects/structures/janicart.dm" + " at line " + 142 + " src: " + this + " usr: " + Task13.User + "." );
						this.signs = 0;
					}
				}
			}
			this.update_icon();
			this.updateUsrDialog();
			return null;
		}

		// Function from file: janicart.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic dat = null;
			Browser popup = null;

			((Mob)a).set_machine( this );

			if ( this.mybag != null ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";garbage=1'>" ).item( this.mybag.name ).str( "</a><br>" ).ToString();
			}

			if ( this.mymop != null ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";mop=1'>" ).item( this.mymop.name ).str( "</a><br>" ).ToString();
			}

			if ( Lang13.Bool( this.myspray ) ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";spray=1'>" ).item( this.myspray.name ).str( "</a><br>" ).ToString();
			}

			if ( this.myreplacer != null ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";replacer=1'>" ).item( this.myreplacer.name ).str( "</a><br>" ).ToString();
			}

			if ( this.signs != 0 ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";sign=1'>" ).item( this.signs ).str( " sign" ).s().str( "</a><br>" ).ToString();
			}
			popup = new Browser( a, "janicart", this.name, 240, 160 );
			popup.set_content( dat );
			popup.open();
			return null;
		}

		// Function from file: janicart.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			string fail_msg = null;
			dynamic m = null;
			dynamic t = null;
			dynamic l = null;

			fail_msg = "<span class='warning'>There is already one of those in " + this + "!</span>";

			if ( A is Obj_Item_Weapon_Mop ) {
				m = A;

				if ( ( m.reagents.total_volume ??0) < Convert.ToDouble( m.reagents.maximum_volume ) ) {
					
					if ( this.wet_mop( m, user ) ) {
						return null;
					}
				}

				if ( !( this.mymop != null ) ) {
					m.janicart_insert( user, this );
				} else {
					user.WriteMsg( fail_msg );
				}
			} else if ( A is Obj_Item_Weapon_Storage_Bag_Trash ) {
				
				if ( !( this.mybag != null ) ) {
					t = A;
					t.janicart_insert( user, this );
				} else {
					user.WriteMsg( fail_msg );
				}
			} else if ( A is Obj_Item_Weapon_ReagentContainers_Spray_Cleaner ) {
				
				if ( !Lang13.Bool( this.myspray ) ) {
					this.put_in_cart( A, user );
					this.myspray = A;
					this.update_icon();
				} else {
					user.WriteMsg( fail_msg );
				}
			} else if ( A is Obj_Item_Device_Lightreplacer ) {
				
				if ( !( this.myreplacer != null ) ) {
					l = A;
					l.janicart_insert( user, this );
				} else {
					user.WriteMsg( fail_msg );
				}
			} else if ( A is Obj_Item_Weapon_Caution ) {
				
				if ( this.signs < GlobalVars.max_signs ) {
					this.put_in_cart( A, user );
					this.signs++;
					this.update_icon();
				} else {
					user.WriteMsg( "<span class='warning'>" + this + " can't hold any more signs!</span>" );
				}
			} else if ( this.mybag != null ) {
				this.mybag.attackby( A, user );
			} else if ( A is Obj_Item_Weapon_Crowbar ) {
				((Ent_Static)user).visible_message( "" + user + " begins to empty the contents of " + this + ".", "<span class='notice'>You begin to empty the contents of " + this + "...</span>" );

				if ( GlobalFuncs.do_after( user, 30 / A.toolspeed, null, this ) ) {
					Task13.User.WriteMsg( "<span class='notice'>You empty the contents of " + this + "'s bucket onto the floor.</span>" );
					this.reagents.reaction( this.loc );
					this.reagents.clear_reagents();
				}
			}
			return null;
		}

		// Function from file: janicart.dm
		public void put_in_cart( dynamic I = null, dynamic user = null ) {
			
			if ( !Lang13.Bool( user.drop_item() ) ) {
				return;
			}
			I.loc = this;
			this.updateUsrDialog();
			user.WriteMsg( "<span class='notice'>You put " + I + " into " + this + ".</span>" );
			return;
		}

		// Function from file: janicart.dm
		public bool wet_mop( dynamic mop = null, dynamic user = null ) {
			
			if ( ( this.reagents.total_volume ??0) < 1 ) {
				user.WriteMsg( "<span class='warning'>" + this + " is out of water!</span>" );
				return false;
			} else {
				this.reagents.trans_to( mop, 5 );
				user.WriteMsg( "<span class='notice'>You wet " + mop + " in " + this + ".</span>" );
				GlobalFuncs.playsound( this.loc, "sound/effects/slosh.ogg", 25, 1 );
				return true;
			}
		}

	}

}
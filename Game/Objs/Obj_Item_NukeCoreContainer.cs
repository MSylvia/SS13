// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_NukeCoreContainer : Obj_Item {

		public dynamic core = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "tile";
			this.icon = "icons/obj/nuke_tools.dmi";
			this.icon_state = "core_container_empty";
		}

		public Obj_Item_NukeCoreContainer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: nuke_tools.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_NukeCore ) {
				
				if ( !((Mob)user).unEquip( A ) ) {
					user.WriteMsg( "<span class='warning'>The " + A + " is stuck to your hand!</span>" );
					return null;
				} else {
					this.load( A, user );
				}
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: nuke_tools.dm
		public bool load( dynamic ncore = null, dynamic user = null ) {
			
			if ( Lang13.Bool( this.core ) || !( ncore is Obj_Item_NukeCore ) ) {
				return false;
			}
			ncore.loc = this;
			this.core = ncore;
			this.icon_state = "core_container_loaded";
			user.WriteMsg( "<span class='warning'>Container is sealing...</span>" );
			Task13.Schedule( 50, (Task13.Closure)(() => {
				GlobalVars.SSobj.processing.Remove( this.core );
				this.icon_state = "core_container_sealed";
				GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 100, 1 );

				if ( this.loc == user ) {
					user.WriteMsg( "<span class='warning'>Container is sealed, the radiation is contained.</span>" );
				}
				return;
			}));
			return true;
		}

	}

}
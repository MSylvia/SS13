// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Syringe : Obj_Item_Weapon_Gun {

		public ByTable syringes = new ByTable();
		public int max_syringes = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guninhands_left.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guninhands_right.dmi" );
			this.throw_range = 10;
			this.force = 4;
			this.starting_materials = new ByTable().Set( "$iron", 2000 );
			this.icon_state = "syringegun";
		}

		public Obj_Item_Weapon_Gun_Syringe ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: syringe_gun.dm
		public void fire_syringe( dynamic target = null, dynamic user = null ) {
			dynamic trg = null;
			Obj_Effect_SyringeGunDummy D = null;
			dynamic S = null;
			int? i = null;
			Mob_Living_Carbon M = null;
			bool blocked = false;
			Mob_Living_Carbon H = null;
			dynamic R = null;
			Reagent A = null;
			Mob_Living_Carbon H2 = null;
			Ent_Static A2 = null;

			
			if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Table), this.loc ) ) ) {
				return;
			} else {
				trg = GlobalFuncs.get_turf( target );
				D = new Obj_Effect_SyringeGunDummy( GlobalFuncs.get_turf( this ) );
				S = this.syringes[1];

				if ( !Lang13.Bool( S ) || !Lang13.Bool( S.reagents ) ) {
					return;
				}
				((Reagents)S.reagents).trans_to( D, S.reagents.total_volume );
				this.syringes.Remove( S );
				GlobalFuncs.qdel( S );
				S = null;
				D.icon_state = "syringeproj";
				D.name = "syringe";
				GlobalFuncs.playsound( user.loc, "sound/items/syringeproj.ogg", 50, 1 );
				GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + new Txt().item( user.name ).str( " (" ).item( user.ckey ).str( ") fired " ).the( this ).item().str( " at " ).item( target ).str( " " ).item( ( target is Mob ? "(" + target.ckey + ")" : "" ) ).str( " (" ).item( target.x ).str( "," ).item( target.y ).str( "," ).item( target.z ).str( ")" ).ToString() ) );
				i = null;
				i = 0;

				while (( i ??0) < 6) {
					
					if ( !( D != null ) ) {
						break;
					}

					if ( D.loc == trg ) {
						break;
					}
					Map13.StepTowardsSimple( D, trg );

					if ( D != null ) {
						
						foreach (dynamic _b in Lang13.Enumerate( D.loc, typeof(Mob_Living_Carbon) )) {
							M = _b;
							

							if ( !( M is Mob_Living_Carbon ) ) {
								continue;
							}

							if ( M == user ) {
								continue;
							}
							blocked = false;

							if ( M is Mob_Living_Carbon_Human ) {
								H = M;

								if ( Lang13.Bool( ((dynamic)H).species ) && ( ((dynamic)H).species.chem_flags & 8 ) != 0 ) {
									H.visible_message( new Txt( "<span class='warning'>" ).The( D ).item().str( " bounces harmlessly off of " ).item( H ).str( ".</span>" ).ToString(), new Txt( "<span class='notice'>" ).The( D ).item().str( " bounces off you harmlessly and breaks as it hits the ground.</span>" ).ToString() );
									GlobalFuncs.qdel( D );
									return;
								}
								blocked = ((dynamic)H).wear_suit is Obj_Item_Clothing_Suit_Space;
							}
							R = null;

							if ( Lang13.Bool( D.reagents ) ) {
								
								foreach (dynamic _a in Lang13.Enumerate( D.reagents.reagent_list, typeof(Reagent) )) {
									A = _a;
									
									R += A.id + " (";
									R += String13.NumberToString( A.volume ??0 ) + "),";
								}
							}

							if ( M is Mob ) {
								M.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <b>" + user + "/" + user.ckey + "</b> shot <b>" + M + "/" + M.ckey + "</b> with a <b>syringegun</b> (" + R + ") " + ( blocked ? "[BLOCKED]" : "" ) );
								user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <b>" + user + "/" + user.ckey + "</b> shot <b>" + M + "/" + M.ckey + "</b> with a <b>syringegun</b> (" + R + ") " + ( blocked ? "[BLOCKED]" : "" ) );
								GlobalFuncs.msg_admin_attack( "" + user + " (" + user.ckey + ") shot " + M + " (" + M.ckey + ") with a syringegun (" + R + ") " + ( blocked ? "[BLOCKED]" : "" ) + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + user.x + ";Y=" + user.y + ";Z=" + user.z + "'>JMP</a>)" );

								if ( !( user is Mob_Living_Carbon ) ) {
									M.LAssailant = null;
								} else {
									M.LAssailant = user;
								}
							} else {
								M.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <b>UNKNOWN SUBJECT (No longer exists)</b> shot <b>" + M + "/" + M.ckey + "</b> with a <b>syringegun</b> (" + R + ") " + ( blocked ? "[BLOCKED]" : "" ) );
								GlobalFuncs.msg_admin_attack( "UNKNOWN shot " + M + " (" + M.ckey + ") with a <b>syringegun</b> (" + R + ") " + ( blocked ? "[BLOCKED]" : "" ) + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + user.x + ";Y=" + user.y + ";Z=" + user.z + "'>JMP</a>)" );
							}

							if ( !blocked ) {
								
								if ( Lang13.Bool( D.reagents ) ) {
									((Reagents)D.reagents).trans_to( M, 15 );
								}
								M.visible_message( "<span class='danger'>" + M + " is hit by the syringe!</span>" );
							} else {
								H2 = M;
								M.visible_message( new Txt( "<span class='danger'>" ).item( M ).str( " is hit by the syringe, but " ).his_her_its_their().str( " " ).item( ((dynamic)H2).wear_suit ).str( " blocked it!</span>" ).ToString() );
							}
							GlobalFuncs.qdel( D );
							break;
						}
					}

					if ( D != null ) {
						
						foreach (dynamic _c in Lang13.Enumerate( D.loc, typeof(Ent_Static) )) {
							A2 = _c;
							

							if ( A2 == user ) {
								continue;
							}

							if ( A2.density ) {
								GlobalFuncs.qdel( D );
							}
						}
					}
					Task13.Sleep( 1 );
					i++;
				}

				if ( D != null ) {
					Task13.Schedule( 10, (Task13.Closure)(() => {
						GlobalFuncs.qdel( D );
						return;
					}));
				}
				return;
			}
		}

		// Function from file: syringe_gun.dm
		public override void Fire( dynamic target = null, dynamic user = null, dynamic _params = null, bool? reflex = null, bool? struggle = null ) {
			reflex = reflex ?? false;
			struggle = struggle ?? false;

			dynamic S = null;

			
			if ( this.syringes.len != 0 ) {
				
				if ( Lang13.Bool( user.mutations.Contains( 5 ) ) ) {
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>You accidentally shoot yourself!</span>" );
						S = this.syringes[1];

						if ( !Lang13.Bool( S ) || !Lang13.Bool( S.reagents ) ) {
							GlobalFuncs.to_chat( user, "<span class='notice'>Thankfully, nothing happens.</span>" );
							return;
						}
						this.syringes.Remove( S );
						((Reagents)S.reagents).trans_to( user, S.reagents.total_volume );
						GlobalFuncs.qdel( S );
						return;
					}
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.fire_syringe( target, user );
					return;
				}));
			} else {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " is empty.</span>" );
			}
			return;
		}

		// Function from file: syringe_gun.dm
		public override dynamic can_hit( Mob_Living target = null, Mob user = null ) {
			return 1;
		}

		// Function from file: syringe_gun.dm
		public override int can_fire(  ) {
			return this.syringes.len;
		}

		// Function from file: syringe_gun.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( A == user ) {
				return false;
			}
			base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
			return false;
		}

		// Function from file: syringe_gun.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic S = null;

			
			if ( a is Obj_Item_Weapon_ReagentContainers_Syringe ) {
				S = a;

				if ( Convert.ToInt32( S.mode ) != 2 ) {
					
					if ( this.syringes.len < this.max_syringes ) {
						
						if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
							this.syringes.Add( a );
							GlobalFuncs.to_chat( b, "<span class='notice'>You put the syringe in " + this + ".</span>" );
							GlobalFuncs.to_chat( b, "<span class='notice'>" + this.syringes.len + " / " + this.max_syringes + " syringes.</span>" );
						}
					} else {
						GlobalFuncs.to_chat( b, "<span class='warning'>" + this + " cannot hold more syringes.</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>This syringe is broken!</span>" );
				}
				return 1;
			}
			return null;
		}

		// Function from file: syringe_gun.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>" + this.syringes.len + " / " + this.max_syringes + " syringes.</span>" );
			return null;
		}

	}

}
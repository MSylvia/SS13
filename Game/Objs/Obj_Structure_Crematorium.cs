// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Crematorium : Obj_Structure {

		public Obj_Structure_CTray connected = null;
		public bool cremating = false;
		public bool id = true;
		public bool locked = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/stationobjs.dmi";
			this.icon_state = "crema1";
		}

		public Obj_Structure_Crematorium ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: morgue.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			Tile T = null;
			dynamic A = null;

			
			if ( Lang13.Bool( M.stat ) || this.locked ) {
				return null;
			}
			this.connected = new Obj_Structure_CTray( this.loc );
			Map13.Step( this.connected, ((int)( GlobalVars.SOUTH )) );
			this.connected.layer = GlobalVars.OBJ_LAYER;
			T = Map13.GetStep( this, ((int)( GlobalVars.SOUTH )) );

			if ( T.contents.Find( this.connected ) != 0 ) {
				this.connected.connected = this;
				this.icon_state = "crema0";

				foreach (dynamic _a in Lang13.Enumerate( this )) {
					A = _a;
					
					A.loc = this.connected.loc;
				}
				this.connected.icon_state = "cremat";
			} else {
				GlobalFuncs.qdel( this.connected );
				this.connected = null;
			}
			return null;
		}

		// Function from file: morgue.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic t = null;

			
			if ( a is Obj_Item_Weapon_Pen ) {
				t = Interface13.Input( b, "What would you like the label to be?", "" + this.name, null, null, InputType.Str );

				if ( ((Mob)b).get_active_hand() != a ) {
					return null;
				}

				if ( !this.Adjacent( b ) || Lang13.Bool( b.stat ) ) {
					return null;
				}
				t = String13.SubStr( GlobalFuncs.sanitize( t ), 1, 1024 );

				if ( Lang13.Bool( t ) ) {
					this.name = "Crematorium- '" + t + "'";
				} else {
					this.name = "Crematorium";
				}
			}
			this.add_fingerprint( b );
			return null;
		}

		// Function from file: morgue.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic A = null;
			Tile T = null;
			dynamic A2 = null;

			
			if ( this.cremating ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>It's locked.</span>" );
				return null;
			}

			if ( this.connected != null && !this.locked ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.connected.loc )) {
					A = _a;
					

					if ( !Lang13.Bool( A.anchored ) ) {
						A.loc = this;
					}
				}
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
				GlobalFuncs.qdel( this.connected );
				this.connected = null;
			} else if ( !this.locked ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
				this.connected = new Obj_Structure_CTray( this.loc );
				Map13.Step( this.connected, ((int)( GlobalVars.SOUTH )) );
				this.connected.layer = GlobalVars.OBJ_LAYER;
				T = Map13.GetStep( this, ((int)( GlobalVars.SOUTH )) );

				if ( T.contents.Find( this.connected ) != 0 ) {
					this.connected.connected = this;
					this.icon_state = "crema0";

					foreach (dynamic _b in Lang13.Enumerate( this )) {
						A2 = _b;
						
						A2.loc = this.connected.loc;
					}
					this.connected.icon_state = "cremat";
				} else {
					GlobalFuncs.qdel( this.connected );
					this.connected = null;
				}
			}
			this.add_fingerprint( a );
			this.update();
			return null;
		}

		// Function from file: morgue.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: morgue.dm
		public override dynamic alter_health( Mob_Living M = null ) {
			return this.loc;
		}

		// Function from file: morgue.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			dynamic A = null;
			dynamic A2 = null;
			dynamic A3 = null;

			
			switch ((double?)( severity )) {
				case 1:
					
					foreach (dynamic _a in Lang13.Enumerate( this )) {
						A = _a;
						
						A.loc = this.loc;
						this.ex_act( severity );
					}
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						
						foreach (dynamic _b in Lang13.Enumerate( this )) {
							A2 = _b;
							
							A2.loc = this.loc;
							this.ex_act( severity );
						}
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						
						foreach (dynamic _c in Lang13.Enumerate( this )) {
							A3 = _c;
							
							A3.loc = this.loc;
							this.ex_act( severity );
						}
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
			}
			return false;
		}

		// Function from file: morgue.dm
		public void cremate( dynamic user = null ) {
			dynamic M = null;
			ByTable inside = null;
			dynamic M2 = null;
			Mob_Living M3 = null;
			Obj O = null;

			
			if ( this.cremating ) {
				return;
			}

			if ( this.contents.len <= 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					M = _a;
					
					M.show_message( "<span class='warning'>You hear a hollow crackle.</span>", 1 );
					return;
				}
			} else {
				inside = GlobalFuncs.get_contents_in_object( this );

				if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Item_Weapon_Disk_Nuclear), inside ) ) ) {
					GlobalFuncs.to_chat( user, "<SPAN CLASS='warning'>You get the feeling that you shouldn't cremate one of the items in the cremator.</SPAN>" );
					return;
				}

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					M2 = _b;
					

					if ( !((Mob)M2).hallucinating() ) {
						M2.show_message( "<span class='warning'>You hear a roar as the crematorium activates.</span>", 1 );
					} else {
						M2.show_message( "<span class='notice'>You hear chewing as the crematorium consumes its meal.</span>", 1 );
						GlobalFuncs.to_chat( M2, "sound/items/eatfood.ogg" );
					}
				}
				this.locked = true;
				this.cremating = true;
				this.update();

				foreach (dynamic _c in Lang13.Enumerate( inside, typeof(Mob_Living) )) {
					M3 = _c;
					

					if ( M3.stat != 2 ) {
						M3.emote( "scream", null, null, true );
					}
					M3.death( true );
					M3.ghostize();
					GlobalFuncs.qdel( M3 );
					M3 = null;
				}

				foreach (dynamic _d in Lang13.Enumerate( inside, typeof(Obj) )) {
					O = _d;
					
					GlobalFuncs.qdel( O );
				}
				inside = null;
				new Obj_Effect_Decal_Cleanable_Ash( this );
				Task13.Sleep( 30 );
				this.cremating = false;
				this.update();
				this.locked = false;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/ding.ogg", 50, 1 );
			}
			return;
		}

		// Function from file: morgue.dm
		public void update(  ) {
			
			if ( this.cremating ) {
				this.icon_state = "crema_active";
				return;
			}

			if ( this.contents.len > 0 ) {
				this.icon_state = "crema2";
			} else {
				this.icon_state = "crema1";
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Spawner_Newbomb : Obj_Effect_Spawner {

		public int btype = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/mob/screen1.dmi";
			this.icon_state = "x";
		}

		// Function from file: bombspawner.dm
		public Obj_Effect_Spawner_Newbomb ( dynamic loc = null ) : base( (object)(loc) ) {
			Obj_Item_Device_TransferValve V = null;
			Obj_Item_Weapon_Tank_Plasma PT = null;
			Obj_Item_Weapon_Tank_Oxygen OT = null;
			Obj_Item_Device_Assembly S = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			V = new Obj_Item_Device_TransferValve( this.loc );
			PT = new Obj_Item_Weapon_Tank_Plasma( V );
			OT = new Obj_Item_Weapon_Tank_Oxygen( V );
			V.tank_one = PT;
			V.tank_two = OT;
			PT.master = V;
			OT.master = V;
			PT.air_contents.temperature = 519.1500244140625;
			PT.air_contents.toxins = 15;
			PT.air_contents.carbon_dioxide = 33;
			PT.air_contents.update_values();
			OT.air_contents.temperature = 519.1500244140625;
			OT.air_contents.oxygen = 48;
			OT.air_contents.update_values();

			switch ((int)( this.btype )) {
				case 0:
					S = new Obj_Item_Device_Assembly_Signaler( V );
					break;
				case 1:
					S = new Obj_Item_Device_Assembly_ProxSensor( V );
					break;
				case 2:
					S = new Obj_Item_Device_Assembly_Timer( V );
					break;
			}
			V.attached_device = S;
			S.holder = V;
			S.toggle_secure();
			V.update_icon();
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
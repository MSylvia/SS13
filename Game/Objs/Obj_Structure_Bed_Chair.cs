// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed_Chair : Obj_Structure_Bed {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.lockflags = 0;
			this.icon_state = "chair";
		}

		// Function from file: chairs.dm
		public Obj_Structure_Bed_Chair ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 3, (Task13.Closure)(() => {
				this.handle_layer();
				return;
			}));
			return;
		}

		// Function from file: chairs.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			Ent_Static target = null;

			
			if ( !( O is Mob ) ) {
				return false;
			}
			target = null;

			if ( O is Mob_Living_Carbon_Human ) {
				target = O;
			}

			if ( target != null && ((dynamic)target).op_stage.butt == 4 ) {
				
				if ( !Lang13.Bool( ((dynamic)O).weakened ) ) {
					
					if ( O == Task13.User ) {
						O.visible_message( "<span class='notice'>" + O.name + " has no butt, and slides right out of " + this + "!</span>", "Having no butt, you slide right out of the " + this, "You hear metal clanking." );
					} else {
						O.visible_message( "<span class='notice'>" + O.name + " has no butt, and slides right out of " + this + "!</span>", "Having no butt, you slide right out of the " + this, "You hear metal clanking." );
					}
					((dynamic)O).Weaken( 5 );
				} else {
					GlobalFuncs.to_chat( user, "You can't buckle " + O.name + " to " + this + ", They just fell out!" );
				}
			} else {
				this.buckle_mob( O, user );
			}
			return false;
		}

		// Function from file: chairs.dm
		public void spin(  ) {
			this.change_dir( Num13.Rotate( this.dir, 90 ) );
			return;
		}

		// Function from file: chairs.dm
		public virtual void handle_layer(  ) {
			
			if ( this.dir == GlobalVars.NORTH ) {
				this.layer = GlobalVars.FLY_LAYER;
			} else {
				this.layer = GlobalVars.OBJ_LAYER;
			}
			return;
		}

		// Function from file: chairs.dm
		public override dynamic update_dir(  ) {
			base.update_dir();
			this.handle_layer();
			return null;
		}

		// Function from file: chairs.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			dynamic SK = null;
			Obj_Structure_Bed_Chair_EChair E = null;

			
			if ( a is Obj_Item_Assembly_ShockKit ) {
				SK = a;

				if ( !Lang13.Bool( SK.status ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + SK + " is not ready to be attached!</span>" );
					return _default;
				}

				if ( Lang13.Bool( b.drop_item( a ) ) ) {
					E = new Obj_Structure_Bed_Chair_EChair( this.loc );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
					E.dir = this.dir;
					E.part = SK;
					((Ent_Dynamic)SK).forceMove( E );
					SK.master = E;
					GlobalFuncs.qdel( this );
					return _default;
				}
			}

			if ( a is Obj_Item_Weapon_Wrench ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 50, 1 );
				GlobalFuncs.getFromPool( this.sheet_type, GlobalFuncs.get_turf( this ), this.sheet_amt );
				GlobalFuncs.qdel( this );
				return _default;
			}
			_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			return _default;
		}

		// Function from file: chairs.dm
		[Verb]
		[VerbInfo( name: "Rotate Chair", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public virtual void rotate(  ) {
			
			if ( !( Task13.User != null ) || !( Task13.User.loc is Tile ) ) {
				return;
			}

			if ( !GlobalVars.config.ghost_interaction && !this.blessed ) {
				
				if ( Task13.User.isUnconscious() || Task13.User.restrained() ) {
					return;
				}
			}
			this.spin();
			return;
		}

	}

}
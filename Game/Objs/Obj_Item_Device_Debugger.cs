// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Debugger : Obj_Item_Device {

		public dynamic buffer = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 5;
			this.w_class = 2;
			this.throwforce = 5;
			this.throw_range = 15;
			this.throw_speed = 3;
			this.starting_materials = new ByTable().Set( "$iron", 50 ).Set( "$glass", 20 );
			this.w_type = 5;
			this.melt_temperature = 1687;
			this.origin_tech = "magnets=1;engineering=1";
			this.icon = "icons/obj/hacktool.dmi";
			this.icon_state = "hacktool-g";
		}

		public Obj_Item_Device_Debugger ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: debugger.dm
		public override bool is_used_on( dynamic O = null, dynamic user = null ) {
			dynamic A = null;
			dynamic D = null;
			dynamic A2 = null;

			
			if ( O is Obj_Machinery_Power_Apc ) {
				A = O;

				if ( Lang13.Bool( A.emagged ) || Lang13.Bool( A.malfhack ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>There is a software error with the device.</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>The device's software appears to be fine.</span>" );
				}
				return true;
			}

			if ( O is Obj_Machinery_Door ) {
				D = O;

				if ( Convert.ToInt32( D.operating ) == -1 ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>There is a software error with the device.</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>The device's software appears to be fine.</span>" );
				}
				return true;
			} else if ( O is Obj_Machinery ) {
				A2 = O;

				if ( Lang13.Bool( A2.emagged ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>There is a software error with the device.</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>The device's software appears to be fine.</span>" );
				}
				return true;
			}
			return false;
		}

	}

}
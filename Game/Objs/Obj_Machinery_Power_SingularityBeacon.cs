// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_SingularityBeacon : Obj_Machinery_Power {

		public bool active = false;
		public string icontype = "beacon";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/singularity.dmi";
			this.icon_state = "beacon";
			this.layer = 3.8;
		}

		public Obj_Machinery_Power_SingularityBeacon ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: syndicatebeacon.dm
		public override int? process( dynamic seconds = null ) {
			
			if ( !this.active ) {
				return 26;
			} else if ( Convert.ToDouble( this.surplus() ) > 1500 ) {
				this.add_load( 1500 );
			} else {
				this.Deactivate();
			}
			return null;
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic Destroy(  ) {
			
			if ( this.active ) {
				this.Deactivate();
			}
			return base.Destroy();
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( this.active ) {
					user.WriteMsg( "<span class='warning'>You need to deactivate the beacon first!</span>" );
					return null;
				}

				if ( Lang13.Bool( this.anchored ) ) {
					this.anchored = 0;
					user.WriteMsg( "<span class='notice'>You unscrew the beacon from the floor.</span>" );
					this.disconnect_from_network();
					return null;
				} else {
					
					if ( !this.connect_to_network() ) {
						user.WriteMsg( "<span class='warning'>This device must be placed over an exposed, powered cable node!</span>" );
						return null;
					}
					this.anchored = 1;
					user.WriteMsg( "<span class='notice'>You screw the beacon to the floor and attach the cable.</span>" );
					return null;
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				if ( this.active ) this.Deactivate( a ); else this.Activate( a ); return null;
			} else {
				a.WriteMsg( "<span class='warning'>You need to screw the beacon to the floor first!</span>" );
				return null;
			}
		}

		// Function from file: syndicatebeacon.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return null;
		}

		// Function from file: syndicatebeacon.dm
		public void Deactivate( dynamic user = null ) {
			Obj_Singularity singulo = null;

			
			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Obj_Singularity) )) {
				singulo = _a;
				

				if ( singulo.target == this ) {
					singulo.target = null;
				}
			}
			this.icon_state = "" + this.icontype + "0";
			this.active = false;

			if ( Lang13.Bool( user ) ) {
				user.WriteMsg( "<span class='notice'>You deactivate the beacon.</span>" );
			}
			return;
		}

		// Function from file: syndicatebeacon.dm
		public void Activate( dynamic user = null ) {
			Obj_Singularity singulo = null;

			
			if ( Convert.ToDouble( this.surplus() ) < 1500 ) {
				
				if ( Lang13.Bool( user ) ) {
					user.WriteMsg( "<span class='notice'>The connected wire doesn't have enough current.</span>" );
				}
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Obj_Singularity) )) {
				singulo = _a;
				

				if ( singulo.z == this.z ) {
					singulo.target = this;
				}
			}
			this.icon_state = "" + this.icontype + "1";
			this.active = true;
			GlobalVars.machines.Or( this );

			if ( Lang13.Bool( user ) ) {
				user.WriteMsg( "<span class='notice'>You activate the beacon.</span>" );
			}
			return;
		}

	}

}
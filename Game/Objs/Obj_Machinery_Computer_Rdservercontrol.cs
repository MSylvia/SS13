// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Rdservercontrol : Obj_Machinery_Computer {

		public int screen = 0;
		public Obj_Machinery_RND_Server temp_server = null;
		public ByTable servers = new ByTable();
		public ByTable consoles = new ByTable();
		public bool badmin = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.light_color = "#E17DE1";
			this.icon_state = "rdcomp";
		}

		public Obj_Machinery_Computer_Rdservercontrol ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: server.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Structure_Computerframe A = null;
			Obj_Item_Weapon_Circuitboard_Rdservercontrol M = null;
			Obj C = null;
			Obj_Structure_Computerframe A2 = null;
			Obj_Item_Weapon_Circuitboard_Rdservercontrol M2 = null;
			Obj C2 = null;

			
			if ( a is Obj_Item_Weapon_Screwdriver ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );

				if ( GlobalFuncs.do_after( b, this, 20 ) ) {
					
					if ( ( this.stat & 1 ) != 0 ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>The broken glass falls out.</span>" );
						A = new Obj_Structure_Computerframe( this.loc );
						GlobalFuncs.getFromPool( typeof(Obj_Item_Weapon_Shard), this.loc );
						M = new Obj_Item_Weapon_Circuitboard_Rdservercontrol( A );

						foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj) )) {
							C = _a;
							
							C.loc = this.loc;
						}
						A.circuit = M;
						A.state = 3;
						A.icon_state = "3";
						A.anchored = 1;
						GlobalFuncs.qdel( this );
					} else {
						GlobalFuncs.to_chat( b, "<span class='notice'>You disconnect the monitor.</span>" );
						A2 = new Obj_Structure_Computerframe( this.loc );
						M2 = new Obj_Item_Weapon_Circuitboard_Rdservercontrol( A2 );

						foreach (dynamic _b in Lang13.Enumerate( this, typeof(Obj) )) {
							C2 = _b;
							
							C2.loc = this.loc;
						}
						A2.circuit = M2;
						A2.state = 4;
						A2.icon_state = "4";
						A2.anchored = 1;
						GlobalFuncs.qdel( this );
					}
				}
			} else if ( a is Obj_Item_Weapon_Card_Emag && !( this.emagged != 0 ) ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/sparks4.ogg", 75, 1 );
				this.emagged = 1;
				GlobalFuncs.to_chat( b, "<span class='notice'>You you disable the security protocols</span>" );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: server.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			Obj_Machinery_RND_Server S = null;
			Obj_Machinery_Computer_Rdconsole C = null;
			dynamic console_turf = null;
			Obj_Machinery_Computer_Rdconsole C2 = null;
			dynamic console_turf2 = null;
			Tech T = null;
			Design D = null;
			Obj_Machinery_RND_Server S2 = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			((Mob)a).set_machine( this );
			dat = "";

			switch ((int)( this.screen )) {
				case 0:
					dat += "Connected Servers:<BR><BR>";

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_RND_Server) )) {
						S = _a;
						

						if ( S is Obj_Machinery_RND_Server_Centcom && !this.badmin ) {
							continue;
						}
						dat += new Txt().item( S.name ).str( " ||\n					<A href='?src=" ).Ref( this ).str( ";access=" ).item( S.server_id ).str( "'> Access Rights</A> |\n					<A href='?src=" ).Ref( this ).str( ";data=" ).item( S.server_id ).str( "'>Data Management</A>" ).ToString();

						if ( this.badmin ) {
							dat += new Txt( " | <A href='?src=" ).Ref( this ).str( ";transfer=" ).item( S.server_id ).str( "'>Server-to-Server Transfer</A>" ).ToString();
						}
						dat += "<BR>";
					}
					break;
				case 1:
					dat += "" + this.temp_server.name + " Access Rights<BR><BR>\n				Consoles with Upload Access<BR>";

					foreach (dynamic _b in Lang13.Enumerate( this.consoles, typeof(Obj_Machinery_Computer_Rdconsole) )) {
						C = _b;
						
						console_turf = GlobalFuncs.get_turf( C );
						dat += new Txt( "* <A href='?src=" ).Ref( this ).str( ";upload_toggle=" ).item( C.id ).str( "'>" ).item( console_turf.loc ).ToString();

						if ( this.temp_server.id_with_upload.Contains( C.id ) ) {
							dat += " (Remove)</A><BR>";
						} else {
							dat += " (Add)</A><BR>";
						}
					}
					dat += "Consoles with Download Access<BR>";

					foreach (dynamic _c in Lang13.Enumerate( this.consoles, typeof(Obj_Machinery_Computer_Rdconsole) )) {
						C2 = _c;
						
						console_turf2 = GlobalFuncs.get_turf( C2 );
						dat += new Txt( "* <A href='?src=" ).Ref( this ).str( ";download_toggle=" ).item( C2.id ).str( "'>" ).item( console_turf2.loc ).ToString();

						if ( this.temp_server.id_with_download.Contains( C2.id ) ) {
							dat += " (Remove)</A><BR>";
						} else {
							dat += " (Add)</A><BR>";
						}
					}
					dat += new Txt( "<HR><A href='?src=" ).Ref( this ).str( ";main=1'>Main Menu</A>" ).ToString();
					break;
				case 2:
					dat += "" + this.temp_server.name + " Data Management<BR><BR>\n				Known Technologies<BR>";

					foreach (dynamic _d in Lang13.Enumerate( this.temp_server.files.known_tech, typeof(Tech) )) {
						T = _d;
						
						dat += new Txt( "* " ).item( T.name ).str( "\n					<A href='?src=" ).Ref( this ).str( ";reset_tech=" ).item( T.id ).str( "'>(Reset)</A><BR>" ).ToString();
					}
					dat += "Known Designs<BR>";

					foreach (dynamic _e in Lang13.Enumerate( this.temp_server.files.known_designs, typeof(Design) )) {
						D = _e;
						
						dat += new Txt( "* " ).item( D.name ).str( "\n					<A href='?src=" ).Ref( this ).str( ";reset_design=" ).item( D.id ).str( "'>(Delete)</A><BR>" ).ToString();
					}
					dat += new Txt( "<HR><A href='?src=" ).Ref( this ).str( ";main=1'>Main Menu</A>" ).ToString();
					break;
				case 3:
					dat += "" + this.temp_server.name + " Server to Server Transfer<BR><BR>\n				Send Data to what server?<BR>";

					foreach (dynamic _f in Lang13.Enumerate( this.servers, typeof(Obj_Machinery_RND_Server) )) {
						S2 = _f;
						
						dat += new Txt().item( S2.name ).str( " <A href='?src=" ).Ref( this ).str( ";send_to=" ).item( S2.server_id ).str( "'> (Transfer)</A><BR>" ).ToString();
					}
					dat += new Txt( "<HR><A href='?src=" ).Ref( this ).str( ";main=1'>Main Menu</A>" ).ToString();
					break;
			}
			Interface13.Browse( a, "<TITLE>R&D Server Control</TITLE><HR>" + dat, "window=server_control;size=575x400" );
			GlobalFuncs.onclose( a, "server_control" );
			return null;
		}

		// Function from file: server.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			Obj_Machinery_RND_Server S = null;
			Obj_Machinery_Computer_Rdconsole C = null;
			Obj_Machinery S2 = null;
			double? num = null;
			double? num2 = null;
			string choice = null;
			Tech T = null;
			string choice2 = null;
			Design D = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}
			this.add_fingerprint( Task13.User );
			Task13.User.set_machine( this );

			if ( !this.allowed( Task13.User ) && !( this.emagged != 0 ) ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You do not have the required access level</span>" );
				return null;
			}

			if ( Lang13.Bool( href_list["main"] ) ) {
				this.screen = 0;
			} else if ( Lang13.Bool( href_list["access"] ) || Lang13.Bool( href_list["data"] ) || Lang13.Bool( href_list["transfer"] ) ) {
				this.temp_server = null;
				this.consoles = new ByTable();
				this.servers = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_RND_Server) )) {
					S = _a;
					

					if ( S.server_id == String13.ParseNumber( href_list["access"] ) || S.server_id == String13.ParseNumber( href_list["data"] ) || S.server_id == String13.ParseNumber( href_list["transfer"] ) ) {
						this.temp_server = S;
						break;
					}
				}

				if ( Lang13.Bool( href_list["access"] ) ) {
					this.screen = 1;

					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Rdconsole) )) {
						C = _b;
						

						if ( C.sync ) {
							this.consoles.Add( C );
						}
					}
				} else if ( Lang13.Bool( href_list["data"] ) ) {
					this.screen = 2;
				} else if ( Lang13.Bool( href_list["transfer"] ) ) {
					this.screen = 3;

					foreach (dynamic _c in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_RND_Server) )) {
						S2 = _c;
						

						if ( S2 == this ) {
							continue;
						}
						this.servers.Add( S2 );
					}
				}
			} else if ( Lang13.Bool( href_list["upload_toggle"] ) ) {
				num = String13.ParseNumber( href_list["upload_toggle"] );

				if ( this.temp_server.id_with_upload.Contains( num ) ) {
					this.temp_server.id_with_upload.Remove( num );
				} else {
					this.temp_server.id_with_upload.Add( num );
				}
			} else if ( Lang13.Bool( href_list["download_toggle"] ) ) {
				num2 = String13.ParseNumber( href_list["download_toggle"] );

				if ( this.temp_server.id_with_download.Contains( num2 ) ) {
					this.temp_server.id_with_download.Remove( num2 );
				} else {
					this.temp_server.id_with_download.Add( num2 );
				}
			} else if ( Lang13.Bool( href_list["reset_tech"] ) ) {
				choice = Interface13.Alert( "Technology Data Rest", "Are you sure you want to reset this technology to its default data? Data lost cannot be recovered.", "Continue", "Cancel" );

				if ( choice == "Continue" ) {
					
					foreach (dynamic _d in Lang13.Enumerate( this.temp_server.files.known_tech, typeof(Tech) )) {
						T = _d;
						

						if ( T.id == href_list["reset_tech"] ) {
							T.level = 1;
							break;
						}
					}
				}
				this.temp_server.files.RefreshResearch();
			} else if ( Lang13.Bool( href_list["reset_design"] ) ) {
				choice2 = Interface13.Alert( "Design Data Deletion", "Are you sure you want to delete this design? If you still have the prerequisites for the design, it'll reset to its base reliability. Data lost cannot be recovered.", "Continue", "Cancel" );

				if ( choice2 == "Continue" ) {
					
					foreach (dynamic _e in Lang13.Enumerate( this.temp_server.files.known_designs, typeof(Design) )) {
						D = _e;
						

						if ( D.id == href_list["reset_design"] ) {
							D.reliability_mod = 0;
							this.temp_server.files.known_designs.Remove( D );
							break;
						}
					}
				}
				this.temp_server.files.RefreshResearch();
			}
			this.updateUsrDialog();
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Deskbell : Obj_Item_Device {

		public double frequency = 1457;
		public bool code = false;
		public int ring_delay = 20;
		public int last_ring_time = 0;
		public bool wrenching = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 5;
			this.throwforce = 5;
			this.w_class = 2;
			this.throw_speed = 4;
			this.throw_range = 10;
			this.attack_verb = new ByTable(new object [] { "rang" });
			this.hitsound = "sound/machines/ding2.ogg";
			this.starting_materials = new ByTable().Set( "$iron", 3750 );
			this.w_type = 4;
			this.melt_temperature = 1783.1500244140625;
			this.anchored = 1;
			this.origin_tech = "materials=1";
			this.icon_state = "deskbell_2";
		}

		public Obj_Item_Device_Deskbell ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: deskbell.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			
			if ( over_object == Task13.User && !Task13.User.incapacitated() && ( Task13.User.contents.Find( this ) != 0 || GlobalFuncs.in_range( this, Task13.User ) ) ) {
				
				if ( over_object is Mob_Living_Carbon_Human || over_object is Mob_Living_Carbon_Monkey ) {
					
					if ( Lang13.Bool( this.anchored ) ) {
						GlobalFuncs.to_chat( over_object, "You must undo the securing bolts before you can pick it up." );
						return null;
					}

					if ( !Lang13.Bool( over_object.get_active_hand() ) ) {
						this.loc = over_object;
						over_object.put_in_hands( this );
						over_object.visible_message( "<span class='notice'>" + over_object + " picks up the " + this + ".</span>", "<span class='notice'>You grab " + this + " from the floor!</span>" );
					}
				}
			}
			return null;
		}

		// Function from file: deskbell.dm
		public virtual bool ring(  ) {
			
			if ( Game13.time - this.last_ring_time >= this.ring_delay ) {
				this.last_ring_time = Game13.time;
				Icon13.Flick( "" + this.icon_state + "-push", this );
				GlobalFuncs.playsound( this, "sound/machines/ding2.ogg", 50, 1 );
				return true;
			}
			return false;
		}

		// Function from file: deskbell.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				this.ring();
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: deskbell.dm
		public override dynamic attack_animal( Mob_Living user = null ) {
			return null;
		}

		// Function from file: deskbell.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: deskbell.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			return this.attack_hand( user );
		}

		// Function from file: deskbell.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Device_DeskbellAssembly A = null;

			
			if ( a is Obj_Item_Weapon_Wrench && this.loc is Tile ) {
				((Ent_Static)b).visible_message( new Txt().item( b ).str( " begins to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts." ).ToString(), new Txt( "You begin to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts..." ).ToString() );
				GlobalFuncs.playsound( this.loc, "sound/items/Ratchet.ogg", 50, 1 );

				if ( this.wrenching ) {
					return null;
				}
				this.wrenching = true;

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					
					if ( this != null ) {
						this.anchored = !Lang13.Bool( this.anchored );
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( "es " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( "</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( " " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( ".</span>" ).ToString(), "<span class='notice'>You hear a ratchet.</span>" );
					}
				}
				this.wrenching = false;
				return null;
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.anchored ) ) {
					GlobalFuncs.to_chat( b, new Txt( "You need to unwrench " ).the( this ).item().str( " first." ).ToString() );
					return null;
				}
				A = new Obj_Item_Device_DeskbellAssembly( GlobalFuncs.get_turf( this ) );
				A.frequency = this.frequency;
				A.has_signaler = false;
				A.build_step = 1;
				A.final_name = this.name;
				A.update_icon();
				GlobalFuncs.qdel( this );
				return null;
			}
			this.ring(  );
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

	}

}
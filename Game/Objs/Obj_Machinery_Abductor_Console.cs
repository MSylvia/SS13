// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Abductor_Console : Obj_Machinery_Abductor {

		public dynamic gizmo = null;
		public dynamic vest = null;
		public Obj_Machinery_Abductor_Experiment experiment = null;
		public Obj_Machinery_Abductor_Pad pad = null;
		public Obj_Machinery_Computer_CameraAdvanced_Abductor camera = null;
		public ByTable disguises = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/abductor.dmi";
			this.icon_state = "console";
		}

		public Obj_Machinery_Abductor_Console ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: console.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic G = null;
			dynamic V = null;

			
			if ( A is Obj_Item_Device_Abductor_Gizmo ) {
				G = A;
				user.WriteMsg( "<span class='notice'>You link the tool to the console.</span>" );
				this.gizmo = G;
				G.console = this;
			} else if ( A is Obj_Item_Clothing_Suit_Armor_Abductor_Vest ) {
				V = A;
				user.WriteMsg( "<span class='notice'>You link the vest to the console.</span>" );
				this.vest = V;
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: tgstation.dme
		public void Dispense( Type item = null, int? cost = null ) {
			cost = cost ?? 1;

			
			if ( this.experiment != null && ( this.experiment.points ??0) >= ( cost ??0) ) {
				this.experiment.points -= cost ??0;
				this.say( "Incoming supply!" );

				if ( this.pad != null ) {
					Icon13.Flick( "alien-pad", this.pad );
					Lang13.Call( item, this.pad.loc );
				} else {
					Lang13.Call( item, this.loc );
				}
			} else {
				this.say( "Insufficent data!" );
			}
			return;
		}

		// Function from file: console.dm
		public void AddSnapshot( dynamic target = null ) {
			IconSnapshot entry = null;
			int? i = null;
			dynamic temp = null;

			entry = new IconSnapshot();
			entry.name = target.name;
			entry.icon = target.icon;
			entry.icon_state = target.icon_state;
			entry.overlays = ((Mob_Living_Carbon_Human)target).get_overlays_copy( new ByTable(new object [] { 4, 3 }) );
			i = null;
			i = 1;

			while (( i ??0) <= this.disguises.len) {
				temp = this.disguises[i];

				if ( temp.name == entry.name ) {
					this.disguises[i] = entry;
					return;
				}
				i++;
			}
			this.disguises.Add( entry );
			return;
		}

		// Function from file: console.dm
		public void Initialize(  ) {
			Obj_Machinery_Abductor_Pad p = null;
			Obj_Machinery_Abductor_Experiment e = null;
			Obj_Machinery_Computer_CameraAdvanced_Abductor c = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Abductor_Pad) )) {
				p = _a;
				

				if ( p.team == this.team ) {
					this.pad = p;
					break;
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Abductor_Experiment) )) {
				e = _b;
				

				if ( e.team == this.team ) {
					this.experiment = e;
					e.console = this;
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_CameraAdvanced_Abductor) )) {
				c = _c;
				

				if ( c.team == this.team ) {
					this.camera = c;
					c.console = this;
				}
			}
			return;
		}

		// Function from file: console.dm
		public void SelectDisguise( bool? remote = null ) {
			remote = remote ?? false;

			ByTable entries = null;
			dynamic tempname = null;
			dynamic temp = null;
			int? i = null;
			dynamic entry_name = null;
			dynamic chosen = null;

			entries = new ByTable();
			i = null;
			i = 1;

			while (( i ??0) <= this.disguises.len) {
				temp = this.disguises[i];
				tempname = temp.name;
				entries["" + tempname] = this.disguises[i];
				i++;
			}
			entry_name = Interface13.Input( "Choose Disguise", "Disguise", null, null, entries, InputType.Any );
			chosen = entries[entry_name];

			if ( Lang13.Bool( chosen ) && ( remote == true || Map13.GetDistance( Task13.User, this ) <= 1 ) ) {
				((Obj_Item_Clothing_Suit_Armor_Abductor_Vest)this.vest).SetDisguise( chosen );
			}
			return;
		}

		// Function from file: console.dm
		public void FlipVest(  ) {
			
			if ( this.vest != null ) {
				((Obj_Item_Clothing_Suit_Armor_Abductor_Vest)this.vest).flip_mode();
			}
			return;
		}

		// Function from file: console.dm
		public void TeleporterSend(  ) {
			
			if ( this.pad != null ) {
				this.pad.Send();
			}
			return;
		}

		// Function from file: console.dm
		public void TeleporterRetrieve(  ) {
			
			if ( this.gizmo != null && this.pad != null && Lang13.Bool( this.gizmo.marked ) ) {
				this.pad.Retrieve( this.gizmo.marked );
			}
			return;
		}

		// Function from file: console.dm
		public void TeleporterSet(  ) {
			dynamic A = null;

			A = null;
			A = Interface13.Input( "Select area to teleport to", "Teleport", A, null, GlobalVars.teleportlocs, InputType.Any );

			if ( this.pad != null && Map13.GetDistance( Task13.User, this ) <= 1 ) {
				this.pad.teleport_target = GlobalVars.teleportlocs[A];
			}
			return;
		}

		// Function from file: console.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["teleporter_set"] ) ) {
				this.TeleporterSet();
			} else if ( Lang13.Bool( href_list["teleporter_send"] ) ) {
				this.TeleporterSend();
			} else if ( Lang13.Bool( href_list["teleporter_retrieve"] ) ) {
				this.TeleporterRetrieve();
			} else if ( Lang13.Bool( href_list["flip_vest"] ) ) {
				this.FlipVest();
			} else if ( Lang13.Bool( href_list["select_disguise"] ) ) {
				this.SelectDisguise();
			} else if ( Lang13.Bool( href_list["dispense"] ) ) {
				
				dynamic _a = href_list["dispense"]; // Was a switch-case, sorry for the mess.
				if ( _a=="baton" ) {
					this.Dispense( typeof(Obj_Item_Weapon_AbductorBaton), 2 );
				} else if ( _a=="helmet" ) {
					this.Dispense( typeof(Obj_Item_Clothing_Head_Helmet_Abductor) );
				} else if ( _a=="silencer" ) {
					this.Dispense( typeof(Obj_Item_Device_Abductor_Silencer) );
				} else if ( _a=="tool" ) {
					this.Dispense( typeof(Obj_Item_Device_Abductor_Gizmo) );
				}
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: console.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			int? points = null;
			bool mode = false;
			Browser popup = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}

			if ( !this.IsAbductor( a ) ) {
				a.WriteMsg( "<span class='warning'>You start mashing alien buttons at random!</span>" );

				if ( GlobalFuncs.do_after( a, 100, null, this ) ) {
					this.TeleporterSend();
				}
				return null;
			}
			((Mob)a).set_machine( this );
			dat = "";
			dat += "<H3> Abductsoft 3000 </H3>";

			if ( this.experiment != null ) {
				points = this.experiment.points;
				dat += "Collected Samples : " + points + " <br>";
				dat += "<b>Transfer data in exchange for supplies:</b><br>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";dispense=baton'>Advanced Baton</A><br>" ).ToString();
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";dispense=helmet'>Agent Helmet</A><br>" ).ToString();
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";dispense=silencer'>Radio Silencer</A><br>" ).ToString();
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";dispense=tool'>Science Tool</A><br>" ).ToString();
			} else {
				dat += "<span class='bad'>NO EXPERIMENT MACHINE DETECTED</span> <br>";
			}

			if ( this.pad != null ) {
				dat += "<span class='bad'>Emergency Teleporter System.</span>";
				dat += "<span class='bad'>Consider using primary observation console first.</span>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";teleporter_send=1'>Activate Teleporter</A><br>" ).ToString();
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";teleporter_set=1'>Set Teleporter</A><br>" ).ToString();

				if ( this.gizmo != null && this.gizmo.marked != null ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";teleporter_retrieve=1'>Retrieve Mark</A><br>" ).ToString();
				} else {
					dat += "<span class='linkOff'>Retrieve Mark</span><br>";
				}
			} else {
				dat += "<span class='bad'>NO TELEPAD DETECTED</span></br>";
			}

			if ( this.vest != null ) {
				dat += "<h4> Agent Vest Mode </h4><br>";
				mode = Lang13.Bool( this.vest.mode );

				if ( mode ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";flip_vest=1'>Combat</A>" ).ToString();
					dat += "<span class='linkOff'>Stealth</span>";
				} else {
					dat += "<span class='linkOff'>Combat</span>";
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";flip_vest=1'>Stealth</A>" ).ToString();
				}
				dat += "<br>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";select_disguise=1'>Select Agent Vest Disguise</a><br>" ).ToString();
			} else {
				dat += "<span class='bad'>NO AGENT VEST DETECTED</span>";
			}
			popup = new Browser( a, "computer", "Abductor Console", 400, 500 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Mask_Cigarette_Pipe : Obj_Item_Clothing_Mask_Cigarette {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "pipe";
			this.overlay_on = "pipelit";
			this.smoketime = 100;
			this.icon_state = "pipe";
		}

		public Obj_Item_Clothing_Mask_Cigarette_Pipe ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cigs_lighters.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.lit ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " puts out " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You put out " ).the( this ).item().str( ".</span>" ).ToString() );
				this.lit = false;
				this.update_brightness();
				return null;
			}

			if ( Convert.ToDouble( this.smoketime ) < Convert.ToDouble( Lang13.Initial( this, "smoketime" ) ) ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " refills " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You refill " ).the( this ).item().str( ".</span>" ).ToString() );
				this.smoketime = Lang13.Initial( this, "smoketime" );
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		public override dynamic process(  ) {
			dynamic location = null;
			Ent_Static M = null;

			location = GlobalFuncs.get_turf( this );
			this.smoketime--;

			if ( Convert.ToDouble( this.smoketime ) <= 0 ) {
				new Obj_Effect_Decal_Cleanable_Ash( location );
				this.lit = false;

				if ( this.loc is Mob ) {
					M = this.loc;
					M.visible_message( "<span class='notice'>" + M + "'s " + this.name + " goes out.</span>", "<span class='notice'>Your " + this.name + " goes out, and you empty the ash.</span>" );

					if ( ((dynamic)M).wear_mask == this ) {
						((dynamic)M).update_inv_wear_mask( 0 );
					}
				}
				this.update_brightness();
				return null;
			}

			if ( Lang13.Bool( location ) ) {
				((Tile)location).hotspot_expose( 700, 5, null, this.loc is Tile );
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		[VerbInfo( name: "light" )]
		public override void f_light( string flavor_text = null ) {
			flavor_text = flavor_text ?? "" + Task13.User + " lights the " + this.name + ".";

			dynamic T = null;
			Ent_Static M = null;

			
			if ( !this.lit ) {
				this.lit = true;
				this.damtype = "fire";
				this.update_brightness();
				T = GlobalFuncs.get_turf( this );
				((Ent_Static)T).visible_message( flavor_text );

				if ( this.loc is Mob ) {
					M = this.loc;

					if ( ((dynamic)M).wear_mask == this ) {
						((dynamic)M).update_inv_wear_mask( 0 );
					}
				}
			}
			return;
		}

	}

}
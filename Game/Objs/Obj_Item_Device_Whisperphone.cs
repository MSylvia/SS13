// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Whisperphone : Obj_Item_Device {

		public bool spamcheck = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "radio";
			this.w_class = 1;
			this.icon_state = "megaphone";
		}

		public Obj_Item_Device_Whisperphone ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string message = null;
			dynamic O = null;

			
			if ( Lang13.Bool( user.client ) ) {
				
				if ( ( user.client.prefs.muted & 1 ) != 0 ) {
					GlobalFuncs.to_chat( this, "<span class = 'warning'>You cannot speak in IC (muted).</span>" );
					return null;
				}
			}

			if ( !( user is Mob_Living_Carbon_Human ) ) {
				GlobalFuncs.to_chat( user, "<span class = 'warning'>You don't know how to use this!</span>" );
				return null;
			}

			if ( user.miming || Lang13.Bool( user.silent ) ) {
				GlobalFuncs.to_chat( user, "<span class = 'warning'>You find yourself unable to speak at all.</span>" );
				return null;
			}

			if ( this.spamcheck ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class = 'warning'>" ).The( this ).item().str( " needs to recharge!</span>" ).ToString() );
				return null;
			}
			message = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( user, "'Shout' a message?", "Whisperphone", null, null, InputType.Str ) ), 1, 1024 );

			if ( !Lang13.Bool( message ) ) {
				return null;
			}
			message = GlobalFuncs.capitalize( message );

			if ( this.loc == user && Task13.User.stat == 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, user ) )) {
					O = _a;
					
					O.show_message( "<B>" + user + "</B> broadcasts, <i>\"" + message + "\"</i>", 2 );
				}
				this.spamcheck = true;
				Task13.Schedule( 20, (Task13.Closure)(() => {
					this.spamcheck = false;
					return;
				}));
				return null;
			}
			return null;
		}

	}

}
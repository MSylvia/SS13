// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Blob_Core : Obj_Effect_Blob {

		public Mob_Camera_Blob overmind = null;
		public int overmind_get_delay = 0;
		public int resource_delay = 0;
		public int? point_rate = 2;
		public dynamic creator = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.health = 200;
			this.fire_resist = 2;
			this.custom_process = true;
			this.icon_state = "blob_core";
		}

		// Function from file: core.dm
		public Obj_Effect_Blob_Core ( dynamic loc = null, int? h = null, dynamic new_overmind = null, int? new_rate = null, dynamic C = null ) : base( (object)(loc) ) {
			h = h ?? 200;
			new_rate = new_rate ?? 2;

			GlobalVars.blob_cores.Add( this );
			GlobalVars.processing_objects.Add( this );
			this.creator = C;

			if ( !( this.overmind != null ) ) {
				this.create_overmind( new_overmind );
			}
			this.point_rate = new_rate;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: core.dm
		public bool create_overmind( dynamic new_overmind = null ) {
			dynamic C = null;
			ByTable candidates = null;
			Mob_Camera_Blob B = null;
			dynamic mode = null;

			
			if ( this.overmind_get_delay > Game13.time ) {
				return false;
			}
			this.overmind_get_delay = Game13.time + 300;

			if ( this.overmind != null ) {
				GlobalFuncs.qdel( this.overmind );
				this.overmind = null;
			}
			C = null;
			candidates = new ByTable();

			if ( !Lang13.Bool( new_overmind ) ) {
				candidates = GlobalFuncs.get_candidates( "blob" );

				if ( candidates.len != 0 ) {
					C = Rand13.PickFromTable( candidates );
				}
			} else {
				C = new_overmind;
			}

			if ( Lang13.Bool( C ) ) {
				B = new Mob_Camera_Blob( this.loc );
				B.key = C.key;
				B.blob_core = this;
				this.overmind = B;

				if ( !Lang13.Bool( B.blob_core.creator ) ) {
					B.verbs.Add( typeof(Mob_Camera_Blob).GetMethod( "create_core" ) );
				}

				if ( GlobalVars.ticker.mode is GameMode_Blob ) {
					mode = GlobalVars.ticker.mode;
					mode.infected_crew += B.mind;
				}
				return true;
			}
			return false;
		}

		// Function from file: core.dm
		public override bool run_action(  ) {
			return false;
		}

		// Function from file: core.dm
		public override bool Life(  ) {
			dynamic T = null;
			dynamic O = null;
			int? i = null;
			dynamic b_dir = null;
			dynamic B = null;

			
			if ( this.timestopped ) {
				return false;
			}

			if ( !( this.overmind != null ) ) {
				this.create_overmind();
			} else if ( this.resource_delay <= Game13.time ) {
				this.resource_delay = Game13.time + 10;
				this.overmind.add_points( this.point_rate );
			}
			this.health = Num13.MinInt( Convert.ToInt32( Lang13.Initial( this, "health" ) ), ((int)( this.health + 1 )) );
			T = GlobalFuncs.get_turf( this.overmind );
			O = Lang13.FindIn( typeof(Obj_Effect_Blob), T );
			i = null;
			i = 1;

			while (( i ??0) < 8) {
				this.Pulse( 0, i );

				if ( O is Obj_Effect_Blob ) {
					O.Pulse( 0, i );
				}
				i += i ??0;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.alldirs )) {
				b_dir = _a;
				

				if ( !Rand13.PercentChance( 5 ) ) {
					continue;
				}
				B = Lang13.FindIn( typeof(Obj_Effect_Blob_Normal), Map13.GetStep( this, Convert.ToInt32( b_dir ) ) );

				if ( Lang13.Bool( B ) ) {
					((Obj_Effect_Blob)B).change_to( typeof(Obj_Effect_Blob_Shield) );
				}
			}
			base.Life();
			return false;
		}

		// Function from file: core.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.health <= 0 ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/blobkill.ogg", 50, 1 );
				this.Delete();
				return null;
			}
			return null;
		}

		// Function from file: core.dm
		public override bool fire_act( GasMixture air = null, double? exposed_temperature = null, int exposed_volume = 0 ) {
			return false;
		}

		// Function from file: core.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.blob_cores.Remove( this );

			if ( this.overmind != null ) {
				GlobalFuncs.qdel( this.overmind );
				this.overmind = null;
			}
			GlobalVars.processing_objects.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
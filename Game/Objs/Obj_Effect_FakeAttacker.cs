// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_FakeAttacker : Obj_Effect {

		public Ent_Dynamic my_target = null;
		public dynamic weapon_name = null;
		public dynamic weap = null;
		public dynamic stand_icon = null;
		public Image currentimage = null;
		public dynamic v_base = null;
		public dynamic s_tone = null;
		public dynamic v_clone = null;
		public dynamic left = null;
		public dynamic right = null;
		public dynamic up = null;
		public bool collapse = false;
		public dynamic down = null;
		public double health = 100;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
		}

		// Function from file: Hallucination.dm
		public Obj_Effect_FakeAttacker ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Map13.StepAway( this, this.my_target, 2 );
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.attack_loop();

				if ( this.my_target != null ) {
					((dynamic)this.my_target).hallucinations -= this;
				}
				GlobalFuncs.returnToPool( this );
				return;
			}));
			return;
		}

		// Function from file: Hallucination.dm
		public void attack_loop(  ) {
			int time = 0;
			int timespent = 0;

			time = 0;

			while (time < 300) {
				timespent = Rand13.Int( 5, 10 );
				time += timespent;
				Task13.Sleep( timespent );

				if ( this.health < 0 ) {
					this.collapse = true;
					this.updateimage();
					continue;
				}

				if ( Map13.GetDistance( this, this.my_target ) > 1 ) {
					this.dir = Map13.GetDistance( this, this.my_target );
					Map13.StepTowardsSimple( this, this.my_target );
					this.updateimage();
				} else if ( Rand13.PercentChance( 15 ) ) {
					
					if ( Lang13.Bool( this.weapon_name ) ) {
						GlobalFuncs.to_chat( this.my_target, new Sound( Rand13.Pick(new object [] { "sound/weapons/genhit1.ogg", "sound/weapons/genhit2.ogg", "sound/weapons/genhit3.ogg" }) ) );
						((dynamic)this.my_target).show_message( "<span class='danger'>" + this.my_target + " has been attacked with " + this.weapon_name + " by " + this.name + " </span>", 1 );
						((dynamic)this.my_target).halloss += 8;

						if ( Rand13.PercentChance( 20 ) ) {
							((dynamic)this.my_target).eye_blurry += 3;
						}

						if ( Rand13.PercentChance( 33 ) ) {
							
							if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Effect_Overlay), this.my_target.loc ) ) ) {
								GlobalFuncs.fake_blood( this.my_target );
							}
						}
					} else {
						GlobalFuncs.to_chat( this.my_target, new Sound( Rand13.Pick(new object [] { "sound/weapons/punch1.ogg", "sound/weapons/punch2.ogg", "sound/weapons/punch3.ogg", "sound/weapons/punch4.ogg" }) ) );
						((dynamic)this.my_target).show_message( "<span class='danger'>" + this.name + " has punched " + this.my_target + "!</span>", 1 );
						((dynamic)this.my_target).halloss += 4;

						if ( Rand13.PercentChance( 33 ) ) {
							
							if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Effect_Overlay), this.my_target.loc ) ) ) {
								GlobalFuncs.fake_blood( this.my_target );
							}
						}
					}
				}

				if ( Rand13.PercentChance( 15 ) ) {
					Map13.StepAway( this, this.my_target, 2 );
				}
			}
			return;
		}

		// Function from file: Hallucination.dm
		public void updateimage(  ) {
			
			if ( this.dir == GlobalVars.NORTH ) {
				Lang13.Delete( this.currentimage );
				this.currentimage = null;
				this.currentimage = new Image( this.up, this );
			} else if ( this.dir == GlobalVars.SOUTH ) {
				Lang13.Delete( this.currentimage );
				this.currentimage = null;
				this.currentimage = new Image( this.down, this );
			} else if ( this.dir == GlobalVars.EAST ) {
				Lang13.Delete( this.currentimage );
				this.currentimage = null;
				this.currentimage = new Image( this.right, this );
			} else if ( this.dir == GlobalVars.WEST ) {
				Lang13.Delete( this.currentimage );
				this.currentimage = null;
				this.currentimage = new Image( this.left, this );
			}
			GlobalFuncs.to_chat( this.my_target, this.currentimage );
			return;
		}

		// Function from file: Hallucination.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			dynamic O2 = null;

			
			if ( O == this.my_target ) {
				Map13.StepAway( this, this.my_target, 2 );

				if ( Rand13.PercentChance( 30 ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( this.my_target, Game13.view ) )) {
						O2 = _a;
						
						GlobalFuncs.to_chat( O2, "<span class='danger'>" + this.my_target + " stumbles around.</span>" );
					}
				}
			}
			return null;
		}

		// Function from file: Hallucination.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic M = null;

			Map13.StepAway( this, this.my_target, 2 );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( this.my_target, Game13.view ) )) {
				M = _a;
				
				GlobalFuncs.to_chat( M, "<span class='danger'>" + this.my_target + " flails around wildly.</span>" );
			}
			((dynamic)this.my_target).show_message( "<span class='danger'>" + this + " has been attacked by " + this.my_target + " </span>", 1 );
			this.health -= Convert.ToDouble( a.force );
			return null;
		}

	}

}
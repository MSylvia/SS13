// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Melee_Defibrillator : Obj_Item_Weapon_Melee {

		public Effect_Effect_System_SparkSpread sparks = new Effect_Effect_System_SparkSpread();
		public int charges = 10;
		public bool ready = false;
		public bool emagged = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "defib";
			this.force = 5;
			this.throwforce = 5;
			this.origin_tech = "biotech=3";
			this.icon_state = "defib_full";
		}

		// Function from file: defib.dm
		public Obj_Item_Weapon_Melee_Defibrillator ( dynamic loc = null ) : base( (object)(loc) ) {
			this.sparks.set_up( 5, 0, this );
			this.sparks.attach( this );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: defib.dm
		public void attemptDefib( dynamic target = null, dynamic user = null ) {
			dynamic head = null;
			Mob_Dead_Observer ghost = null;
			dynamic heart = null;

			((Ent_Static)user).visible_message( "<span class='notice'>" + user + " starts setting up the paddles on " + target + "'s chest</span>", "<span class='notice'>You start setting up the paddles on " + target + "'s chest</span>" );

			if ( GlobalFuncs.do_after( user, target, 30 ) ) {
				this.sparks.start();
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/defib.ogg", 50, 1 );
				this.charges--;
				this.update_icon();
				GlobalFuncs.to_chat( user, "<span class='notice'>You shock " + target + " with the paddles.</span>" );
				head = ((Mob_Living_Carbon_Human)target).get_organ( "head" );
				Interface13.Stat( null, ((dynamic)( Lang13.Bool( target.mutations ) || !((Mob_Living)target).has_brain() || target.suiciding == true )).Contains( !Lang13.Bool( head ) || Lang13.Bool( head.status & 64 ) || 8 != 0 ) );

				if ( false ) {
					((Ent_Static)target).visible_message( "<span class='warning'>" + this + " buzzes: Defibrillation failed. Patient's condition does not allow reviving.</span>" );
					return;
				}

				if ( Lang13.Bool( target.wear_suit ) && target.wear_suit is Obj_Item_Clothing_Suit_Armor && Rand13.PercentChance( 95 ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " buzzes: Defibrillation failed. Please apply on bare skin.</span>" );
					((Mob_Living)target).apply_damage( Rand13.Int( 1, 5 ), "fire", "chest" );
					return;
				}

				if ( Lang13.Bool( target.w_uniform ) && target.w_uniform is Obj_Item_Clothing_Under && Rand13.PercentChance( 50 ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " buzzes: Defibrillation failed. Please apply on bare skin.</span>" );
					((Mob_Living)target).apply_damage( Rand13.Int( 1, 5 ), "fire", "chest" );
					return;
				}

				if ( Lang13.Bool( target.mind ) && !Lang13.Bool( target.client ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
						ghost = _a;
						

						if ( ghost.mind == target.mind && ghost.client != null && ghost.can_reenter_corpse != 0 ) {
							GlobalFuncs.to_chat( ghost, "sound/effects/adminhelp.ogg" );
							GlobalFuncs.to_chat( ghost, new Txt( "<span class='interface'><b><font size = 3>Someone is trying to revive your body. Return to it if you want to be resurrected!</b> (Verbs -> Ghost -> Re-enter corpse, or <a href='?src=" ).Ref( ghost ).str( ";reentercorpse=1'>click here!</a>)</font></span>" ).ToString() );
							GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " buzzes: Defibrillation failed. Vital signs are too weak, please try again in five seconds.</span>" );
							return;
						}
					}
					((Ent_Static)target).visible_message( "<span class='warning'>" + this + " buzzes: Defibrillation failed. Patient's condition does not allow reviving.</span>" );
					return;
				}
				heart = target.internal_organs_by_name["heart"];

				if ( Rand13.PercentChance( 25 ) ) {
					heart.damage += 5;
				}
				((Mob_Living)target).apply_damage( -((Mob_Living)target).getOxyLoss(), "oxy" );
				((Mob_Living)target).updatehealth();
				((Ent_Static)target).visible_message( "<span class='danger'>" + target + "'s body convulses a bit.</span>" );

				if ( Convert.ToDouble( target.health ) > Convert.ToDouble( GlobalVars.config.health_threshold_dead ) ) {
					target.timeofdeath = 0;
					((Ent_Static)target).visible_message( "<span class='notice'>" + this + " beeps: Defibrillation successful.</span>" );
					((Mob)target).resurrect();
					target.tod = null;
					target.stat = 1;
					((Mob)target).regenerate_icons();
					((Mob)target).update_canmove();
					Icon13.Flick( "e_flash", target.flash );
					((Mob_Living)target).apply_effect( 10, "eye_blur" );
					((Mob_Living)target).apply_effect( 10, "paralize" );
					((Mob)target).update_canmove();
					GlobalFuncs.to_chat( target, "<span class='notice'>You suddenly feel a spark and your consciousness returns, dragging you back to the mortal plane.</span>" );
				} else {
					((Ent_Static)target).visible_message( "<span class='warning'>" + this + " buzzes: Defibrillation failed. Patient's condition does not allow reviving.</span>" );
				}
				return;
			}
			return;
		}

		// Function from file: defib.dm
		public void shockAttack( dynamic target = null, dynamic user = null ) {
			dynamic heart = null;

			heart = target.internal_organs_by_name["heart"];
			((Ent_Static)target).visible_message( "<span class='danger'>" + target + " has been shocked in the chest with the " + this + " by " + user + "!</span>" );
			((Mob)target).Weaken( Rand13.Int( 6, 12 ) );
			((Mob_Living)target).apply_damage( Rand13.Int( 30, 60 ), "fire", "chest" );
			heart.damage += Rand13.Int( 5, 60 );
			((Mob)target).emote( "scream", null, null, true );
			((Mob_Living)target).updatehealth();
			Task13.Schedule( 0, (Task13.Closure)(() => {
				user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "]<font color='red'> Shocked " + target.name + " (" + target.ckey + ") with an emagged " + this.name + "</font>" );
				target.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "]<font color='orange'> Shocked by " + user.name + " (" + user.ckey + ") with an emagged " + this.name + "</font>" );
				GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "<font color='red'>" + user.name + " (" + user.ckey + ") shocked " + target.name + " (" + target.ckey + ") with an emagged " + this.name + "</font>" ) ) );

				if ( !( user is Mob_Living_Carbon ) ) {
					target.LAssailant = null;
				} else {
					target.LAssailant = user;
				}
				return;
			}));
			this.sparks.start();
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/defib.ogg", 50, 1 );
			this.charges--;
			this.update_icon();
			return;
		}

		// Function from file: defib.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic target = null;

			
			if ( !( M is Mob_Living_Carbon_Human ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You can't defibrilate " + M + ". You don't even know where to put the paddles!</span>" );
			} else if ( !( this.charges != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " is out of charges.</span>" );
			} else if ( !this.ready ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Take the paddles out first.</span>" );
			} else {
				target = M;

				if ( !( Convert.ToInt32( target.stat ) == 2 || Convert.ToInt32( target.stat ) == 2 ) ) {
					
					if ( this.emagged ) {
						this.shockAttack( target, user );
					} else {
						GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " buzzes: Vital signs detected.</span>" );
					}
				} else {
					this.attemptDefib( target, user );
				}
			}
			return null;
		}

		// Function from file: defib.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			
			if ( a is Obj_Item_Weapon_Card_Emag ) {
				this.emagged = !this.emagged;

				if ( this.emagged ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You short out " + this + "'s safety protocols.</span>" );
					this.overlays.Add( "defib_emag" );
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You reset " + this + "'s safety protocols.</span>" );
					this.overlays.len = 0;
				}
			} else {
				_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return _default;
		}

		// Function from file: defib.dm
		public override void update_wield( dynamic user = null ) {
			base.update_wield( (object)(user) );
			this.item_state = "fireaxe" + ( Lang13.Bool( this.wielded ) ? true : false );
			this.force = ( Lang13.Bool( this.wielded ) ? 40 : 10 );

			if ( Lang13.Bool( user ) ) {
				((Mob)user).update_inv_l_hand();
				((Mob)user).update_inv_r_hand();
			}
			return;
		}

		// Function from file: defib.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic H = null;

			
			if ( this.charges != 0 || this.ready ) {
				Interface13.Stat( null, user.mutations.Contains( 5 ) );

				if ( false && Rand13.PercentChance( 50 ) && this.charges != 0 ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>You touch the paddles together, shorting the device.</span>" );
					this.sparks.start();
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/defib.ogg", 50, 1 );
					((Mob)user).Weaken( 5 );
					H = user;

					if ( user is Mob_Living_Carbon_Human ) {
						((Mob_Living)H).apply_damage( 20, "fire" );
					}
					this.charges--;
					this.update_icon();
				} else {
					this.ready = !this.ready;
					GlobalFuncs.to_chat( user, "<span class='notice'>You turn " + this + " " + ( this.ready ? "on and take the paddles out" : "off and put the paddles back in" ) + ".</span>" );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sparks", 75, 1, -1 );
					this.update_icon();
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " is out of charges.</span>" );
			}
			this.add_fingerprint( user );
			return null;
		}

		// Function from file: defib.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.icon_state = "defib";

			if ( this.ready ) {
				this.icon_state += "paddleout";
			} else {
				this.icon_state += "paddlein";
			}

			dynamic _a = this.charges / Convert.ToDouble( Lang13.Initial( this, "charges" ) ); // Was a switch-case, sorry for the mess.
			if ( 061<=_a&&_a<=Double.PositiveInfinity ) {
				this.icon_state += "_full";
			} else if ( 0.4<=_a&&_a<=0.6 ) {
				this.icon_state += "_half";
			} else if ( 0.01<=_a&&_a<=0.3 ) {
				this.icon_state += "_low";
			} else {
				this.icon_state += "_empty";
			}
			return null;
		}

		// Function from file: defib.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			GlobalFuncs.to_chat( Map13.FetchViewers( null, user ), new Txt( "<span class='warning'>" ).item( user ).str( " is putting the live paddles on " ).his_her_its_their().str( " chest! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/defib.ogg", 50, 1 );
			return 2;
		}

	}

}
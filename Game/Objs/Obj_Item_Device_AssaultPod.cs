// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_AssaultPod : Obj_Item_Device {

		public string shuttle_id = "steel_rain";
		public int dwidth = 3;
		public bool dheight = false;
		public int width = 7;
		public int height = 7;
		public bool lz_dir = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "walkietalkie";
			this.icon_state = "gangtool-red";
		}

		public Obj_Item_Device_AssaultPod ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: assault_pod.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic target_area = null;
			dynamic picked_area = null;
			dynamic T = null;
			Obj_DockingPort_Stationary landing_zone = null;
			Obj_Machinery_Computer_Shuttle S = null;

			target_area = Interface13.Input( "Area to land", "Select a Landing Zone", target_area, null, GlobalVars.teleportlocs, InputType.Any );
			picked_area = GlobalVars.teleportlocs[target_area];

			if ( !( this != null ) || Lang13.Bool( GlobalFuncs.qdeleted( this ) ) ) {
				return null;
			}
			T = GlobalFuncs.safepick( GlobalFuncs.get_area_turfs( picked_area ) );

			if ( !Lang13.Bool( T ) ) {
				return null;
			}
			landing_zone = new Obj_DockingPort_Stationary( T );
			landing_zone.id = new Txt( "assault_pod(" ).Ref( this ).str( ")" ).ToString();
			landing_zone.name = "Landing Zone";
			landing_zone.dwidth = this.dwidth;
			landing_zone.dheight = this.dheight;
			landing_zone.width = this.width;
			landing_zone.height = this.height;
			landing_zone.dir = this.lz_dir ?1:0;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Shuttle) )) {
				S = _a;
				

				if ( S.shuttleId == this.shuttle_id ) {
					S.possible_destinations = "" + landing_zone.id;
				}
			}
			user.WriteMsg( "Landing zone set." );
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Singularity_EnergyBall : Obj_Singularity {

		public ByTable orbiting_balls = new ByTable();
		public dynamic produced_power = null;
		public double? energy_to_raise = 32;
		public double? energy_to_lower = -20;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -32;
			this.pixel_y = -32;
			this.current_size = 3;
			this.grav_pull = 0;
			this.contained = false;
			this.energy = 0;
			this.icon = "icons/obj/tesla_engine/energy_ball.dmi";
			this.icon_state = "energy_ball";
		}

		public Obj_Singularity_EnergyBall ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			
		}

		// Function from file: energy_ball.dm
		public override dynamic orbit( dynamic A = null, double? radius = null, int? clockwise = null, double? rotation_speed = null, int? rotation_segments = null, int? pre_rotation = null, int? lockinorbit = null ) {
			dynamic _default = null;

			
			if ( A is Obj_Singularity_EnergyBall ) {
				A.orbiting_balls.Add( this );
				GlobalVars.poi_list.Remove( this );
			}
			_default = base.orbit( (object)(A), radius, clockwise, rotation_speed, rotation_segments, pre_rotation, lockinorbit );

			if ( A is Obj_Singularity_EnergyBall ) {
				A.orbiting_balls.Remove( this );
			}

			if ( !( this.loc != null ) ) {
				GlobalFuncs.qdel( this );
			}
			return _default;
		}

		// Function from file: energy_ball.dm
		public override bool Bumped( dynamic AM = null ) {
			this.dust_mobs( AM );
			return false;
		}

		// Function from file: energy_ball.dm
		public override dynamic Bump( Ent_Static Obstacle = null, dynamic yes = null ) {
			this.dust_mobs( Obstacle );
			return null;
		}

		// Function from file: energy_ball.dm
		public void dust_mobs( dynamic A = null ) {
			dynamic C = null;

			
			if ( A is Mob_Living_Carbon ) {
				C = A;
				((Mob)C).dust();
			}
			return;
		}

		// Function from file: energy_ball.dm
		public void handle_energy(  ) {
			Obj_Singularity_EnergyBall EB = null;
			Icon I = null;
			double? orbitsize = null;
			dynamic Orchiectomy_target = null;

			
			if ( ( this.energy ??0) >= ( this.energy_to_raise ??0) ) {
				this.energy_to_lower = ( this.energy_to_raise ??0) - 20;
				this.energy_to_raise += this.energy_to_raise ??0;
				GlobalFuncs.playsound( this.loc, "sound/magic/lightning_chargeup.ogg", 100, 1, 15 );
				Task13.Schedule( 100, (Task13.Closure)(() => {
					
					if ( !( this.loc != null ) ) {
						return;
					}
					EB = new Obj_Singularity_EnergyBall( this.loc );
					EB.transform *= Rand13.Pick(new object [] { 0.3, 0.4, 0.5, 0.6, 061 });
					I = new Icon( this.icon, this.icon_state, this.dir );
					orbitsize = ( I.Width() + I.Height() ) * Convert.ToDouble( Rand13.Pick(new object [] { 0.4, 0.5, 0.6, 061, 0.8 }) );
					orbitsize -= ( orbitsize ??0) / Game13.icon_size * Game13.icon_size * 0.25;
					EB.orbit( this, orbitsize, Lang13.IntNullable( Rand13.Pick(new object [] { GlobalVars.FALSE, GlobalVars.TRUE }) ), Rand13.Int( 10, 25 ), Lang13.IntNullable( Rand13.Pick(new object [] { 3, 4, 5, 6, 36 }) ) );
					return;
				}));
			} else if ( ( this.energy ??0) < ( this.energy_to_lower ??0) && this.orbiting_balls.len != 0 ) {
				this.energy_to_raise = ( this.energy_to_raise ??0) * 0.5;
				this.energy_to_lower = ( this.energy_to_raise ??0) * 0.5 - 20;
				Orchiectomy_target = Rand13.PickFromTable( this.orbiting_balls );
				GlobalFuncs.qdel( Orchiectomy_target );
			} else if ( this.orbiting_balls.len != 0 ) {
				this.energy -= this.orbiting_balls.len;
			}
			return;
		}

		// Function from file: energy_ball.dm
		public void move_the_basket_ball( int move_amount = 0 ) {
			int first_move = 0;
			double i = 0;
			dynamic move_dir = null;
			Tile T = null;

			first_move = this.dir;

			foreach (dynamic _a in Lang13.IterateRange( 0, move_amount )) {
				i = _a;
				
				move_dir = Rand13.PickFromTable( GlobalVars.alldirs + first_move );
				T = Map13.GetStep( this, Convert.ToInt32( move_dir ) );

				if ( this.can_move( T ) ) {
					this.loc = T;
				}
			}
			return;
		}

		// Function from file: energy_ball.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.orbiting_balls.len != 0 ) {
				user.WriteMsg( "The amount of orbiting mini-balls is " + this.orbiting_balls.len + "." );
			}
			return 0;
		}

		// Function from file: energy_ball.dm
		public override int? process( dynamic seconds = null ) {
			dynamic ball = null;

			
			if ( !Lang13.Bool( this.orbiting ) ) {
				this.handle_energy();
				this.move_the_basket_ball( this.orbiting_balls.len * 2 + 2 );
				GlobalFuncs.playsound( this.loc, "sound/magic/lightningbolt.ogg", 100, 1, 15 );
				this.pixel_x = 0;
				this.pixel_y = 0;
				this.dir = Convert.ToInt32( GlobalFuncs.tesla_zap( this, 7, 1738260 ) );
				this.pixel_x = -32;
				this.pixel_y = -32;

				foreach (dynamic _a in Lang13.Enumerate( this.orbiting_balls )) {
					ball = _a;
					
					GlobalFuncs.tesla_zap( ball, Rand13.Int( 1, Num13.MaxInt( 3, Num13.MinInt( this.orbiting_balls.len, 7 ) ) ), 869130 );
				}
			} else {
				this.energy = 0;
			}
			return null;
		}

		// Function from file: energy_ball.dm
		public override dynamic Destroy(  ) {
			dynamic EB = null;
			dynamic ball = null;
			dynamic EB2 = null;

			
			if ( Lang13.Bool( this.orbiting ) && this.orbiting is Obj_Singularity_EnergyBall ) {
				EB = this.orbiting;
				EB.orbiting_balls.Remove( this );
				this.orbiting = null;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.orbiting_balls )) {
				ball = _a;
				
				EB2 = ball;
				GlobalFuncs.qdel( EB2 );
			}
			return base.Destroy();
		}

	}

}
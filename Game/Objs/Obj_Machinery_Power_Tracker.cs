// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_Tracker : Obj_Machinery_Power {

		public bool id = false;
		public double sun_angle = 0;
		public Obj_Machinery_Power_SolarControl control = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "tracker";
		}

		// Function from file: tracker.dm
		public Obj_Machinery_Power_Tracker ( dynamic loc = null, Obj_Item_SolarAssembly S = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.Make( S );
			this.connect_to_network();
			return;
		}

		// Function from file: tracker.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic S = null;

			
			if ( A is Obj_Item_Weapon_Crowbar ) {
				GlobalFuncs.playsound( this.loc, "sound/machines/click.ogg", 50, 1 );
				((Ent_Static)user).visible_message( "" + user + " begins to take the glass off the solar tracker.", "<span class='notice'>You begin to take the glass off the solar tracker...</span>" );

				if ( GlobalFuncs.do_after( user, 50 / A.toolspeed, null, this ) ) {
					S = Lang13.FindIn( typeof(Obj_Item_SolarAssembly), this );

					if ( Lang13.Bool( S ) ) {
						S.loc = this.loc;
						((Obj_Item_SolarAssembly)S).give_glass( this.stat & 1 );
					}
					GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 50, 1 );
					((Ent_Static)user).visible_message( "" + user + " takes the glass off the tracker.", "<span class='notice'>You take the glass off the tracker.</span>" );
					GlobalFuncs.qdel( this );
				}
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: tracker.dm
		public void set_angle( double angle = 0 ) {
			this.sun_angle = angle;
			this.dir = Num13.Rotate( GlobalVars.NORTH, -angle - 22.5 );

			if ( Lang13.Bool( this.powernet ) && this.powernet == this.control.powernet ) {
				this.control.currentdir = angle;
			}
			return;
		}

		// Function from file: tracker.dm
		public void Make( Obj_Item_SolarAssembly S = null ) {
			
			if ( !( S != null ) ) {
				S = new Obj_Item_SolarAssembly( this );
				S.glass_type = typeof(Obj_Item_Stack_Sheet_Glass);
				S.tracker = true;
				S.anchored = 1;
			}
			S.loc = this;
			this.update_icon();
			return;
		}

		// Function from file: tracker.dm
		public void unset_control(  ) {
			
			if ( this.control != null ) {
				this.control.connected_tracker = null;
			}
			this.control = null;
			return;
		}

		// Function from file: tracker.dm
		public bool set_control( Obj_Machinery_Power_SolarControl SC = null ) {
			
			if ( !( SC != null ) || Map13.GetDistance( this, SC ) > 40 ) {
				return false;
			}
			this.control = SC;
			SC.connected_tracker = this;
			return true;
		}

		// Function from file: tracker.dm
		public override dynamic Destroy(  ) {
			this.unset_control();
			return base.Destroy();
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ParticleEffect_Smoke_Chem : Obj_Effect_ParticleEffect_Smoke {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.lifetime = 10;
		}

		public Obj_Effect_ParticleEffect_Smoke_Chem ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: effects_smoke.dm
		public override bool smoke_mob( Mob_Living C = null ) {
			Mob_Living C2 = null;
			double? fraction = null;

			
			if ( this.lifetime < 1 ) {
				return false;
			}

			if ( !( C is Mob_Living_Carbon ) ) {
				return false;
			}
			C2 = C;

			if ( ((dynamic)C2).v_internal != null || Lang13.Bool( ((dynamic)C2).has_smoke_protection() ) ) {
				return false;
			}
			fraction = 1 / Convert.ToDouble( Lang13.Initial( this, "lifetime" ) );
			this.reagents.copy_to( C2, ( fraction ??0) * ( this.reagents.total_volume ??0) );
			this.reagents.reaction( C, GlobalVars.INGEST, fraction );
			return true;
		}

		// Function from file: effects_smoke.dm
		public override int? process( dynamic seconds = null ) {
			dynamic T = null;
			double? fraction = null;
			Ent_Dynamic AM = null;

			
			if ( Lang13.Bool( base.process( (object)(seconds) ) ) ) {
				T = GlobalFuncs.get_turf( this );
				fraction = 1 / Convert.ToDouble( Lang13.Initial( this, "lifetime" ) );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Dynamic) )) {
					AM = _a;
					

					if ( AM.type == this.type ) {
						continue;
					}
					this.reagents.reaction( AM, GlobalVars.TOUCH, fraction );
				}
				this.reagents.reaction( T, GlobalVars.TOUCH, fraction );
				return 1;
			}
			return null;
		}

	}

}
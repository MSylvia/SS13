// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Onetankbomb : Obj_Item_Device {

		public bool status = false;
		public dynamic bombassembly = null;
		public Obj_Item_Weapon_Tank bombtank = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "assembly";
			this.throwforce = 5;
			this.throw_range = 4;
			this.flags = 257;
			this.icon = "icons/obj/tank.dmi";
		}

		public Obj_Item_Device_Onetankbomb ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bomb.dm
		public override bool on_found( dynamic finder = null ) {
			
			if ( Lang13.Bool( this.bombassembly ) ) {
				((Obj_Item)this.bombassembly).on_found( finder );
			}
			return false;
		}

		// Function from file: bomb.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			
			if ( Lang13.Bool( this.bombassembly ) ) {
				((Base_Dynamic)this.bombassembly).Crossed( O );
			}
			return null;
		}

		// Function from file: bomb.dm
		public override bool HasProximity( dynamic AM = null ) {
			
			if ( Lang13.Bool( this.bombassembly ) ) {
				((Ent_Static)this.bombassembly).HasProximity( AM );
			}
			return false;
		}

		// Function from file: bomb.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			this.visible_message( new Txt().icon( this ).str( " *beep* *beep*" ).ToString(), "*beep* *beep*" );
			Task13.Sleep( 10 );

			if ( !( this != null ) ) {
				return false;
			}

			if ( this.status ) {
				this.bombtank.detonate();
			} else {
				this.bombtank.release();
			}
			return false;
		}

		// Function from file: bomb.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			((Obj_Item)this.bombassembly).attack_self( user, 1 );
			this.add_fingerprint( user );
			return null;
		}

		// Function from file: bomb.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Device_Analyzer ) {
				this.bombtank.attackby( a, b );
				return null;
			}

			if ( a is Obj_Item_Weapon_Wrench && !this.status ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You disassemble " + this + ".</span>" );
				this.bombassembly.loc = b.loc;
				this.bombassembly.master = null;
				this.bombassembly = null;
				this.bombtank.loc = b.loc;
				this.bombtank.master = null;
				this.bombtank = null;
				Lang13.Delete( this );
				Task13.Source = null;
				return null;
				return null;
			}

			if ( a is Obj_Item_Weapon_Weldingtool && a.welding ) {
				
				if ( !this.status ) {
					this.status = true;
					GlobalVars.bombers.Add( "" + GlobalFuncs.key_name( b ) + " welded a single tank bomb. Temp: " + ( ( this.bombtank.air_contents.temperature ??0) - 273.41 ) );
					GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( b ) + " welded a single tank bomb. Temp: " + ( ( this.bombtank.air_contents.temperature ??0) - 273.41 ) );
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>A pressure hole has been bored to " ).item( this.bombtank ).str( " valve. " ).The( this.bombtank ).item().str( " can now be ignited.</span>" ).ToString() );
				} else {
					this.status = false;
					GlobalVars.bombers.Add( "" + GlobalFuncs.key_name( b ) + " unwelded a single tank bomb. Temp: " + ( ( this.bombtank.air_contents.temperature ??0) - 273.41 ) );
					GlobalFuncs.to_chat( b, "<span class='notice'>The hole has been closed.</span>" );
				}
			}
			this.add_fingerprint( b );
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: bomb.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.bombtank != null ) {
				this.icon_state = this.bombtank.icon_state;
			}

			if ( Lang13.Bool( this.bombassembly ) ) {
				this.overlays.Add( this.bombassembly.icon_state );
				this.overlays.Add( this.bombassembly.overlays );
				this.overlays.Add( "bomb_assembly" );
			}
			return null;
		}

		// Function from file: bomb.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			user.__CallVerb("Examine", this.bombtank );
			return null;
		}

	}

}
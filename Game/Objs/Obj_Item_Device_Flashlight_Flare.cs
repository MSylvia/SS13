// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Flashlight_Flare : Obj_Item_Device_Flashlight {

		public double fuel = 0;
		public int on_damage = 7;
		public double? produce_heat = 1500;
		public string H_color = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.light_power = 2.5;
			this.item_state = "flare";
			this.light_color = "#FA644B";
			this.icon_state = "flare";
		}

		// Function from file: flashlight.dm
		public Obj_Item_Device_Flashlight_Flare ( dynamic loc = null ) : base( (object)(loc) ) {
			this.fuel = Rand13.Int( 300, 500 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: flashlight.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !( this.fuel != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>It's out of fuel.</span>" );
				return null;
			}

			if ( this.on ) {
				return null;
			}
			((Ent_Static)user).visible_message( "<span class='notice'>" + user + " activates the flare.</span>", "<span class='notice'>You pull the cord on the flare, activating it!</span>" );
			this.Light( user );
			return null;
		}

		// Function from file: flashlight.dm
		public bool Light( dynamic user = null ) {
			
			if ( Lang13.Bool( user ) ) {
				
				if ( !( user.loc is Tile ) ) {
					GlobalFuncs.to_chat( user, "You cannot turn the light on while in this " + user.loc + "." );
					return false;
				}
			}
			this.on = true;
			this.force = this.on_damage;
			this.damtype = "fire";
			GlobalVars.processing_objects.Add( this );

			if ( Lang13.Bool( user ) ) {
				this.update_brightness( user );
			} else {
				this.update_brightness();
			}
			return false;
		}

		// Function from file: flashlight.dm
		public void turn_off(  ) {
			Ent_Static U = null;

			this.on = false;
			this.force = Lang13.Initial( this, "force" );
			this.damtype = Lang13.Initial( this, "damtype" );

			if ( this.loc is Mob ) {
				U = this.loc;
				this.update_brightness( U );
			} else {
				this.update_brightness();
			}
			return;
		}

		// Function from file: flashlight.dm
		public override dynamic process(  ) {
			dynamic pos = null;

			pos = GlobalFuncs.get_turf( this );

			if ( Lang13.Bool( pos ) ) {
				((Tile)pos).hotspot_expose( this.produce_heat, 5, null, this.loc is Tile );
			}
			this.fuel = Num13.MaxInt( ((int)( this.fuel - 1 )), 0 );

			if ( !( this.fuel != 0 ) || !this.on ) {
				this.turn_off();

				if ( !( this.fuel != 0 ) ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-empty";
				}
				GlobalVars.processing_objects.Remove( this );
			}
			return null;
		}

	}

}
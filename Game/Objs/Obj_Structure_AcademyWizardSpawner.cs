// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_AcademyWizardSpawner : Obj_Structure {

		public double health = 200;
		public Mob_Living_Carbon_Human current_wizard = null;
		public int next_check = 0;
		public int cooldown = 600;
		public string faction = "wizard";
		public bool broken = false;
		public bool braindead_check = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/cult.dmi";
			this.icon_state = "forge";
		}

		// Function from file: Academy.dm
		public Obj_Structure_AcademyWizardSpawner ( dynamic loc = null ) : base( (object)(loc) ) {
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: Academy.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( !this.broken ) {
				
				if ( P.damage_type == "brute" || P.damage_type == "fire" ) {
					this.health -= Convert.ToDouble( P.damage );
					this.update_status();
				}
			}
			base.bullet_act( (object)(P), (object)(def_zone) );
			return null;
		}

		// Function from file: Academy.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			this.add_fingerprint( user );
			((Mob)user).changeNext_move( 8 );

			if ( !this.broken ) {
				this.health -= Convert.ToDouble( A.force );
				this.update_status();
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: Academy.dm
		public void update_status(  ) {
			
			if ( this.health < 0 ) {
				this.visible_message( "<span class='warning'>" + this + " breaks down!</span>" );
				this.icon_state = "forge_off";
				GlobalVars.SSobj.processing.Remove( this );
				this.broken = true;
			}
			return;
		}

		// Function from file: Academy.dm
		public void summon_wizard(  ) {
			Ent_Static T = null;
			Mob_Living_Carbon_Human wizbody = null;
			Obj_Item_Weapon_Implant_Exile Implant = null;
			Mind wizmind = null;
			Objective O = null;

			T = this.loc;
			wizbody = new Mob_Living_Carbon_Human( T );
			wizbody.equipOutfit( typeof(Outfit_Wizard_Academy) );
			Implant = new Obj_Item_Weapon_Implant_Exile( wizbody );
			Implant.implant( wizbody );
			wizbody.faction |= "wizard";
			wizbody.real_name = "Academy Teacher";
			wizbody.name = "Academy Teacher";
			wizmind = new Mind();
			wizmind.name = "Wizard Defender";
			wizmind.special_role = "Academy Defender";
			O = new Objective( "Protect Wizard Academy from the intruders" );
			wizmind.objectives.Add( O );
			wizmind.transfer_to( wizbody );
			GlobalVars.ticker.mode.wizards.Or( wizmind );
			wizmind.AddSpell( new Obj_Effect_ProcHolder_Spell_Targeted_EtherealJaunt() );
			wizmind.AddSpell( new Obj_Effect_ProcHolder_Spell_Targeted_Projectile_MagicMissile() );
			wizmind.AddSpell( new Obj_Effect_ProcHolder_Spell_Dumbfire_Fireball() );
			this.current_wizard = wizbody;
			this.give_control();
			return;
		}

		// Function from file: Academy.dm
		public void give_control(  ) {
			ByTable candidates = null;
			dynamic chosen = null;

			
			if ( !( this.current_wizard != null ) ) {
				return;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				candidates = GlobalFuncs.pollCandidates( "Do you want to play as Wizard Academy Defender?", "wizard" );
				chosen = null;

				if ( candidates.len != 0 ) {
					chosen = Rand13.PickFromTable( candidates );
					GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( chosen ) + " was spawned as Wizard Academy Defender" );
					this.current_wizard.ghostize();
					this.current_wizard.key = chosen.key;
				}
				return;
			}));
			return;
		}

		// Function from file: Academy.dm
		public override int? process( dynamic seconds = null ) {
			Mob_Living L = null;

			
			if ( this.next_check < Game13.time ) {
				
				if ( !( this.current_wizard != null ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living) )) {
						L = _a;
						

						if ( L.z == this.z && L.stat != 2 && !Lang13.Bool( L.faction.Contains( this.faction ) ) ) {
							this.summon_wizard();
							break;
						}
					}
				} else {
					
					if ( this.current_wizard.stat == 2 ) {
						this.current_wizard = null;
						this.summon_wizard();
					}

					if ( !( this.current_wizard.client != null ) ) {
						
						if ( !this.braindead_check ) {
							this.braindead_check = true;
						} else {
							this.braindead_check = false;
							this.give_control();
						}
					}
				}
				this.next_check = Game13.time + this.cooldown;
			}
			return null;
		}

	}

}
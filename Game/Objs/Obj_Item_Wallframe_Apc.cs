// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Wallframe_Apc : Obj_Item_Wallframe {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.result_path = typeof(Obj_Machinery_Power_Apc);
			this.inverse = true;
			this.icon = "icons/obj/apc_repair.dmi";
			this.icon_state = "apc_frame";
		}

		public Obj_Item_Wallframe_Apc ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: apc_frame.dm
		public override bool try_build( Tile_Simulated_Wall on_wall = null ) {
			dynamic loc = null;
			Ent_Static A = null;
			Obj_Machinery_Power_Terminal T = null;
			Obj_Item_Stack_CableCoil C = null;

			
			if ( !base.try_build( on_wall ) ) {
				return false;
			}
			loc = GlobalFuncs.get_turf( Task13.User );
			A = loc.loc;

			if ( Lang13.Bool( ((dynamic)A).get_apc() ) ) {
				Task13.User.WriteMsg( "<span class='warning'>This area already has APC!</span>" );
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( loc, typeof(Obj_Machinery_Power_Terminal) )) {
				T = _a;
				

				if ( T.master != null ) {
					Task13.User.WriteMsg( "<span class='warning'>There is another network terminal here!</span>" );
					return false;
				} else {
					C = new Obj_Item_Stack_CableCoil( loc );
					C.amount = 10;
					Task13.User.WriteMsg( "<span class='notice'>You cut the cables and disassemble the unused power terminal.</span>" );
					GlobalFuncs.qdel( T );
				}
			}
			return true;
		}

	}

}
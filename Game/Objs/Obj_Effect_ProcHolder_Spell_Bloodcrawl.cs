// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Bloodcrawl : Obj_Effect_ProcHolder_Spell {

		public bool phased = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.charge_max = 0;
			this.clothes_req = 0;
			this.selection_type = "range";
			this.range = 1;
			this.overlay = null;
			this.action_icon_state = "bloodcrawl";
			this.action_background_icon_state = "bg_demon";
		}

		public Obj_Effect_ProcHolder_Spell_Bloodcrawl ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bloodcrawl.dm
		public override void perform( dynamic targets = null, bool? recharge = null, dynamic user = null ) {
			recharge = recharge ?? true;
			user = user ?? Task13.User;

			
			if ( user is Mob_Living ) {
				
				if ( this.phased ) {
					
					if ( ((Mob_Living)user).phasein( targets ) ) {
						this.phased = false;
					}
				} else if ( ((Mob_Living)user).phaseout( targets ) ) {
					this.phased = true;
				}
				this.start_recharge();
				return;
			}
			this.revert_cast();
			user.WriteMsg( "<span class='warning'>You are unable to blood crawl!</span>" );
			return;
		}

		// Function from file: bloodcrawl.dm
		public override void choose_targets( Mob user = null ) {
			user = user ?? Task13.User;

			Obj_Effect_Decal_Cleanable target = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( GlobalFuncs.get_turf( user ), this.range ), typeof(Obj_Effect_Decal_Cleanable) )) {
				target = _a;
				

				if ( target.can_bloodcrawl_in() != 0 ) {
					this.perform( target );
					return;
				}
			}
			this.revert_cast();
			user.WriteMsg( "<span class='warning'>There must be a nearby source of blood!</span>" );
			return;
		}

	}

}
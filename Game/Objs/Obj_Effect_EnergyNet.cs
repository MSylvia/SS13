// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_EnergyNet : Obj_Effect {

		public double health = 25;
		public Ent_Static affecting = null;
		public dynamic master = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/effects/effects.dmi";
			this.icon_state = "energynet";
		}

		public Obj_Effect_EnergyNet ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: energy_net_nets.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic aforce = null;

			aforce = A.force;
			this.health = Num13.MaxInt( 0, ((int)( this.health - Convert.ToDouble( aforce ) )) );
			this.healthcheck();
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: energy_net_nets.dm
		public override bool attack_alien( dynamic user = null ) {
			((Ent_Dynamic)user).do_attack_animation( this );

			if ( user is Mob_Living_Carbon_Alien_Larva ) {
				return false;
			}
			GlobalFuncs.playsound( this.loc, "sound/weapons/slash.ogg", 80, 1 );
			this.health -= Rand13.Int( 10, 20 );

			if ( this.health > 0 ) {
				((Ent_Static)user).visible_message( "<span class='danger'>" + user + " claws at the energy net!</span>", "ÿ You claw at the net." );
			} else {
				((Ent_Static)user).visible_message( "<span class='danger'>" + user + " slices the energy net apart!</span>", "ÿ You slice the energy net to pieces." );
			}
			this.healthcheck();
			return false;
		}

		// Function from file: energy_net_nets.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand();
		}

		// Function from file: energy_net_nets.dm
		public override bool attack_hulk( Mob_Living_Carbon_Human hulk = null, bool? do_attack_animation = null ) {
			base.attack_hulk( hulk, true );
			hulk.visible_message( "<span class='danger'>" + hulk + " rips the energy net apart!</span>", "<span class='notice'>You easily destroy the energy net.</span>" );
			this.health -= 50;
			this.healthcheck();
			return false;
		}

		// Function from file: energy_net_nets.dm
		public override bool hitby( Ent_Dynamic AM = null, bool? skipcatch = null, bool? hitpush = null, bool? blocked = null ) {
			dynamic tforce = null;

			base.hitby( AM, skipcatch, hitpush, blocked );
			tforce = 0;

			if ( AM is Mob ) {
				tforce = 10;
			} else {
				tforce = ((dynamic)AM).throwforce;
			}
			GlobalFuncs.playsound( this.loc, "sound/weapons/slash.ogg", 80, 1 );
			this.health = Num13.MaxInt( 0, ((int)( this.health - Convert.ToDouble( tforce ) )) );
			this.healthcheck();
			base.hitby( AM, skipcatch, hitpush, blocked );
			return false;
		}

		// Function from file: energy_net_nets.dm
		public override bool blob_act( dynamic severity = null ) {
			this.health -= 50;
			this.healthcheck();
			return false;
		}

		// Function from file: energy_net_nets.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					this.health -= 50;
					break;
				case 2:
					this.health -= 50;
					break;
				case 3:
					this.health -= ( Rand13.PercentChance( 50 ) ? 50 : 25 );
					break;
			}
			this.healthcheck();
			return false;
		}

		// Function from file: energy_net_nets.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			this.health -= Convert.ToDouble( P.damage );
			this.healthcheck();
			base.bullet_act( (object)(P), (object)(def_zone) );
			return null;
		}

		// Function from file: energy_net_nets.dm
		public override int? process( dynamic seconds = null ) {
			int check = 0;
			string mob_name = null;
			Obj_Item W = null;
			EffectSystem_SparkSpread spark_system = null;
			dynamic O = null;

			check = 30;
			mob_name = this.affecting.name;
			seconds.notransform = 1;

			while (!( seconds == null ) && !( this == null ) && check > 0) {
				check--;
				Task13.Sleep( 10 );
			}

			if ( seconds == null || seconds.loc != this.loc ) {
				
				if ( !( this.master == null ) ) {
					this.master.WriteMsg( new Txt( "<span class='userdanger'>ERROR</span>: unable to locate " ).the( mob_name ).item().str( ". Procedure terminated." ).ToString() );
				}
				GlobalFuncs.qdel( this );
				seconds.notransform = 0;
				return null;
			}

			if ( !( this == null ) ) {
				this.density = false;
				this.invisibility = 101;
				this.health = Double.PositiveInfinity;

				foreach (dynamic _a in Lang13.Enumerate( seconds, typeof(Obj_Item) )) {
					W = _a;
					

					if ( seconds is Mob_Living_Carbon_Human ) {
						
						if ( W == seconds.w_uniform ) {
							continue;
						}

						if ( W == seconds.shoes ) {
							continue;
						}
					}
					((Mob)seconds).unEquip( W );
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					GlobalFuncs.playsound( seconds.loc, "sound/effects/sparks4.ogg", 50, 1 );
					GlobalFuncs.anim( seconds.loc, seconds, "icons/mob/mob.dmi", null, "phaseout", null, Convert.ToInt32( seconds.dir ) );
					return;
				}));
				seconds.loc = Rand13.PickFromTable( GlobalVars.holdingfacility );
				seconds.WriteMsg( "<span class='danger'>You appear in a strange place!</span>" );
				Task13.Schedule( 0, (Task13.Closure)(() => {
					spark_system = new EffectSystem_SparkSpread();
					spark_system.set_up( 5, 0, seconds.loc );
					spark_system.start();
					GlobalFuncs.playsound( seconds.loc, "sound/effects/phasein.ogg", 25, 1 );
					GlobalFuncs.playsound( seconds.loc, "sound/effects/sparks2.ogg", 50, 1 );
					GlobalFuncs.anim( seconds.loc, seconds, "icons/mob/mob.dmi", null, "phasein", null, Convert.ToInt32( seconds.dir ) );
					GlobalFuncs.qdel( this );
					return;
				}));

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( 3, this ) )) {
					O = _b;
					
					O.show_message( "" + seconds + " vanishes!", 1, "<span class='italics'>You hear sparks flying!</span>", 2 );
				}

				if ( !( this.master == null ) ) {
					this.master.WriteMsg( new Txt( "<span class='notice'><b>SUCCESS</b>: transport procedure of " ).the( this.affecting ).item().str( " complete.</span>" ).ToString() );
				}
				seconds.notransform = 0;
			} else {
				seconds.WriteMsg( "<span class='notice'>You are free of the net!</span>" );
				seconds.notransform = 0;
			}
			return null;
		}

		// Function from file: energy_net_nets.dm
		public void healthcheck(  ) {
			Ent_Static M = null;
			dynamic O = null;

			
			if ( this.health <= 0 ) {
				this.density = false;

				if ( this.affecting != null ) {
					M = this.affecting;
					((dynamic)M).anchored = 0;

					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( 3, this ) )) {
						O = _a;
						
						O.show_message( "" + M.name + " was recovered from the energy net!", 1, "<span class='italics'>You hear a grunt.</span>", 2 );
					}

					if ( !( this.master == null ) ) {
						this.master.WriteMsg( "<span class='userdanger'>ERROR</span>: unable to initiate transport protocol. Procedure terminated." );
					}
				}
				GlobalFuncs.qdel( this );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Combat_Gygax : Obj_Mecha_Combat {

		public bool overload = false;
		public int overload_coeff = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.infra_luminosity = 6;
			this.initial_icon = "gygax";
			this.step_in = 3;
			this.dir_in = 1;
			this.deflect_chance = 15;
			this.damage_absorption = new ByTable().Set( "brute", 0.75 ).Set( "fire", 1 ).Set( "bullet", 0.8 ).Set( "laser", 061 ).Set( "energy", 0.85 ).Set( "bomb", 1 );
			this.wreckage = typeof(Obj_Effect_Decal_MechaWreckage_Gygax);
			this.internal_damage_threshold = 35;
			this.icon_state = "gygax";
		}

		public Obj_Mecha_Combat_Gygax ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: vgstation13.dme
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( href_list["toggle_leg_overload"] ) ) {
				this.__CallVerb("Toggle leg actuators overload" );
			}
			return null;
		}

		// Function from file: gygax.dm
		public override string get_commands(  ) {
			string output = null;

			output = new Txt( "<div class='wr'>\n						<div class='header'>Special</div>\n						<div class='links'>\n						<a href='?src=" ).Ref( this ).str( ";toggle_leg_overload=1'>Toggle leg actuators overload</a>\n						</div>\n						</div>\n						" ).ToString();
			output += base.get_commands();
			return output;
		}

		// Function from file: gygax.dm
		public override string get_stats_part(  ) {
			string output = null;

			output = base.get_stats_part();
			output += "<b>Leg actuators overload: " + ( this.overload ? "on" : "off" ) + "</b>";
			return output;
		}

		// Function from file: gygax.dm
		public override bool dyndomove( double? direction = null ) {
			
			if ( !base.dyndomove( direction ) ) {
				return false;
			}

			if ( this.overload ) {
				this.health--;

				if ( this.health < Convert.ToDouble( Lang13.Initial( this, "health" ) - Lang13.Initial( this, "health" ) / 3 ) ) {
					this.overload = false;
					this.step_in = Lang13.Initial( this, "step_in" );
					this.step_energy_drain = Lang13.Initial( this, "step_energy_drain" );
					this.occupant_message( "<font color='red'>Leg actuators damage threshold exceded. Disabling overload.</font>" );
				}
			}
			return false;
		}

		// Function from file: gygax.dm
		[Verb]
		[VerbInfo( name: "Toggle leg actuators overload", group: "Exosuit Interface", access: VerbAccess.InUserLocation )]
		public void f_overload(  ) {
			
			if ( Task13.User != this.occupant ) {
				return;
			}

			if ( this.overload ) {
				this.overload = false;
				this.step_in = Lang13.Initial( this, "step_in" );
				this.step_energy_drain = Lang13.Initial( this, "step_energy_drain" );
				this.occupant_message( "<font color='blue'>You disable leg actuators overload.</font>" );

				if ( !( this is Obj_Mecha_Combat_Gygax_Dark ) ) {
					Icon13.Flick( "gygax-gofast-aoff", this );
					this.reset_icon();
				}
			} else {
				this.overload = true;
				this.step_in = Num13.MinInt( 1, Num13.Floor( Convert.ToDouble( this.step_in / 2 ) ) );
				this.step_energy_drain = this.step_energy_drain * this.overload_coeff;
				this.occupant_message( "<font color='red'>You enable leg actuators overload.</font>" );

				if ( !( this is Obj_Mecha_Combat_Gygax_Dark ) ) {
					Icon13.Flick( "gygax-gofast-aon", this );
					this.icon_state = "gygax-gofast";
				}
			}
			this.log_message( "Toggled leg actuators overload." );
			return;
		}

	}

}
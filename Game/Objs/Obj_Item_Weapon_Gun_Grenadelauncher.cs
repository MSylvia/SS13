// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Grenadelauncher : Obj_Item_Weapon_Gun {

		public ByTable grenades = new ByTable();
		public int max_grenades = 3;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "riotgun";
			this.w_class = 4;
			this.throw_range = 10;
			this.starting_materials = new ByTable().Set( "$iron", 2000 );
			this.icon_state = "riotgun";
		}

		public Obj_Item_Weapon_Gun_Grenadelauncher ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: grenade_launcher.dm
		public void fire_grenade( dynamic target = null, dynamic user = null ) {
			dynamic O = null;
			Ent_Static F = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( user, Game13.view ) )) {
				O = _a;
				
				O.show_message( "<span class='warning'>" + user + " fired a grenade!</span>", 1 );
			}
			GlobalFuncs.to_chat( user, "<span class='warning'>You fire the grenade launcher!</span>" );
			F = this.grenades[1];
			this.grenades.Remove( F );
			F.loc = user.loc;
			((dynamic)F).throw_at( target, 30, 2 );
			GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( user ) + " fired " + F.name + " from " + this.name + "." );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name_admin( user ) + " launched " + F.name + " from " + this.name + "." ) ) );
			((dynamic)F).active = 1;
			F.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
			GlobalFuncs.playsound( user.loc, "sound/weapons/grenadelauncher.ogg", 50, 1, -3 );
			Task13.Schedule( 15, (Task13.Closure)(() => {
				((dynamic)F).prime();
				return;
			}));
			return;
		}

		// Function from file: grenade_launcher.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( A is Obj_Item_Weapon_Storage_Backpack ) {
				return false;
			} else if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Table), this.loc ) ) ) {
				return false;
			} else if ( A == user ) {
				return false;
			}

			if ( this.grenades.len != 0 ) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.fire_grenade( A, user );
					return;
				}));
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The " + this.name + " is empty.</span>" );
			}
			return false;
		}

		// Function from file: grenade_launcher.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Grenade ) {
				
				if ( this.grenades.len < this.max_grenades ) {
					
					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.grenades.Add( a );
						GlobalFuncs.to_chat( b, "<span class='notice'>You load the " + a.name + " into the " + this.name + ".</span>" );
						GlobalFuncs.to_chat( b, "<span class='notice'>" + this.grenades.len + " / " + this.max_grenades + " grenades loaded.</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>The " + this.name + " cannot hold more grenades.</span>" );
				}
			}
			return null;
		}

		// Function from file: grenade_launcher.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			Obj_Item_Weapon_Grenade G = null;

			base.examine( (object)(user), size );

			if ( !( this.grenades.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='info'>It is empty.</span>" );
				return null;
			}
			GlobalFuncs.to_chat( user, "<span class='info'>It has " + this.grenades.len + " / " + this.max_grenades + " grenades loaded.</span>" );

			foreach (dynamic _a in Lang13.Enumerate( this.grenades, typeof(Obj_Item_Weapon_Grenade) )) {
				G = _a;
				
				GlobalFuncs.to_chat( user, new Txt( " " ).icon( G ).str( " " ).item( G.name ).ToString() );
			}
			return null;
		}

	}

}
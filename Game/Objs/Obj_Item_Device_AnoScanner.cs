// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_AnoScanner : Obj_Item_Device {

		public string nearest_artifact_id = "unknown";
		public double nearest_artifact_distance = -1;
		public int last_scan_time = 0;
		public int scan_delay = 25;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "lampgreen";
			this.w_class = 1;
			this.slot_flags = 512;
			this.icon = "icons/obj/xenoarchaeology.dmi";
			this.icon_state = "ano_scanner";
		}

		public Obj_Item_Device_AnoScanner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tools_anoscanner.dm
		public void scan(  ) {
			dynamic cur_turf = null;
			Tile_Unsimulated_Mineral T = null;
			double cur_dist = 0;

			this.last_scan_time = Game13.time;
			this.nearest_artifact_distance = -1;
			cur_turf = GlobalFuncs.get_turf( this );

			if ( GlobalVars.master_controller != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.master_controller.artifact_spawning_turfs, typeof(Tile_Unsimulated_Mineral) )) {
					T = _a;
					

					if ( T.artifact_find != null ) {
						
						if ( T.z == Convert.ToInt32( cur_turf.z ) ) {
							cur_dist = Map13.GetDistance( cur_turf, T ) * 2;

							if ( ( this.nearest_artifact_distance < 0 || cur_dist < this.nearest_artifact_distance ) && cur_dist <= T.artifact_find.artifact_detect_range ) {
								this.nearest_artifact_distance = cur_dist + Rand13.Float() * 2 - 1;
								this.nearest_artifact_id = T.artifact_find.artifact_id;
							}
						}
					} else {
						GlobalVars.master_controller.artifact_spawning_turfs.Remove( T );
					}
				}
			}
			((Ent_Static)cur_turf).visible_message( "<span class='info'>" + this + " clicks.</span>" );
			return;
		}

		// Function from file: tools_anoscanner.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string message = null;

			message = "Background radiation levels detected.";

			if ( this.nearest_artifact_distance >= 0 ) {
				message = "Exotic energy detected on wavelength '" + this.nearest_artifact_id + "' in a radius of " + this.nearest_artifact_distance + "m";
			}
			GlobalFuncs.to_chat( user, "<span class='info'>" + message + "</span>" );

			if ( Game13.time - this.last_scan_time >= this.scan_delay ) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.scan();
					return;
				}));
			}
			return null;
		}

		// Function from file: tools_anoscanner.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			return this.interact( user );
		}

	}

}
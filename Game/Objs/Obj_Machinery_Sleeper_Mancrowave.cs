// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Sleeper_Mancrowave : Obj_Machinery_Sleeper {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.base_icon = "mancrowave";
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Sleeper_Mancrowave(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_Manipulator()
			 });
			this.connected_type = typeof(Obj_Machinery_SleepConsole_MancrowaveConsole);
			this.setting = "Thermoregulate";
			this.available_options = new ByTable().Set( "Thermoregulate", 50 );
			this.light_color = "#FA9632";
			this.automatic = true;
			this.drag_delay = 0;
			this.machine_flags = 7;
			this.icon_state = "mancrowave_open";
		}

		public Obj_Machinery_Sleeper_Mancrowave ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: Sleeper.dm
		public override dynamic RefreshParts(  ) {
			return null;
		}

		// Function from file: Sleeper.dm
		public override int emag( dynamic user = null ) {
			
			if ( !( this.emagged != 0 ) ) {
				this.emagged = 1;
				this.connected.emagged = 1;
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You short out the safety features of " ).the( this ).item().str( ", and feel like a MAN!	</span>" ).ToString() );
				this.available_options = new ByTable().Set( "Thermoregulate", 50 ).Set( "Rare", 500 ).Set( "Medium", 600 ).Set( "Well Done", 700 );
				this.update_icon();
				this.connected.name = "THE MANCROWAVE";
				this.name = "THE MANCROWAVE";
				return 1;
			}
			return -1;
		}

		// Function from file: Sleeper.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( !( this.occupant != null ) ) {
				this.icon_state = "" + this.base_icon + "_open";
			} else if ( this.setting != "Thermoregulate" && this.on ) {
				this.icon_state = "" + this.base_icon + "_2";
			} else {
				this.icon_state = "" + this.base_icon + "_" + this.on;
			}

			if ( this.emagged != 0 ) {
				this.light_color = "#FA8282";
				this.icon_state += "emag";
			} else {
				this.light_color = "#FA9632";
			}

			if ( this.on ) {
				this.set_light( this.light_range_on, this.light_power_on );
			} else {
				this.set_light( 0 );
			}

			if ( Lang13.Bool( this.connected ) ) {
				this.connected.update_icon();
			} else {
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: Sleeper.dm
		public override bool go_out( Ent_Static exit = null ) {
			exit = exit ?? this.loc;

			
			if ( this.on && !( this.emagged != 0 ) ) {
				return false;
			} else {
				this.on = false;
				base.go_out( exit );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ChemDispenser_BoozeDispenser : Obj_Machinery_ChemDispenser {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.dispensable_reagents = new ByTable(new object [] { 
				"beer", 
				"whiskey", 
				"tequila", 
				"vodka", 
				"vermouth", 
				"rum", 
				"cognac", 
				"wine", 
				"kahlua", 
				"ale", 
				"ice", 
				"water", 
				"gin", 
				"sodawater", 
				"cola", 
				"cream", 
				"tomatojuice", 
				"orangejuice", 
				"limejuice", 
				"tonic"
			 });
			this.icon_state = "booze_dispenser";
		}

		// Function from file: Chemistry-Machinery.dm
		public Obj_Machinery_ChemDispenser_BoozeDispenser ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_ChemDispenser_BoozeDispenser(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_ConsoleScreen()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override bool can_use( dynamic R = null ) {
			
			if ( !( R is Mob_Living_Silicon_Robot_Mommi ) && R.module is Obj_Item_Weapon_RobotModule_Butler ) {
				this.targetMoveKey = R.on_moved.Add( this, "user_moved" );
				return true;
			} else {
				return false;
			}
		}

	}

}
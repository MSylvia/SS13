// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Effect_Smoke_Chem : Obj_Effect_Effect_Smoke {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/effects/chemsmoke.dmi";
		}

		// Function from file: effect_system.dm
		public Obj_Effect_Effect_Smoke_Chem ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 500 );
			return;
		}

		// Function from file: effect_system.dm
		public override bool affect( Ent_Dynamic M = null ) {
			((Reagents)this.reagents).reaction( M );
			return false;
		}

		// Function from file: effect_system.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			Ent_Static A = null;

			base.Move( (object)(NewLoc), Dir, step_x, step_y );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInView( this, 2 ), typeof(Ent_Static) )) {
				A = _a;
				

				if ( ((Reagents)this.reagents).has_reagent( "radium" ) || ((Reagents)this.reagents).has_reagent( "uranium" ) || ((Reagents)this.reagents).has_reagent( "carbon" ) || ((Reagents)this.reagents).has_reagent( "thermite" ) ) {
					
					if ( Rand13.PercentChance( 5 ) ) {
						((Reagents)this.reagents).reaction( A );
					}
				} else {
					((Reagents)this.reagents).reaction( A );
				}
			}
			return false;
		}

	}

}
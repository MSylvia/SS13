// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Singularity_Narsie_Large_Exit : Obj_Machinery_Singularity_Narsie_Large {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.move_self = false;
			this.announce = false;
			this.narnar = false;
			this.consume_range = 6;
			this.icon = "icons/obj/rift.dmi";
			this.icon_state = "rift";
			this.layer = 12;
		}

		// Function from file: portal.dm
		public Obj_Machinery_Singularity_Narsie_Large_Exit ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.processing_objects.Add( this );
			return;
		}

		// Function from file: portal.dm
		public override bool consume( dynamic A = null ) {
			dynamic L = null;
			dynamic O = null;
			dynamic T = null;
			int dist = 0;
			Ent_Dynamic AM = null;

			
			if ( !((Ent_Static)A).singuloCanEat() ) {
				return false;
			}

			if ( A is Mob_Living ) {
				L = A;

				if ( Lang13.Bool( L.locked_to ) && L.locked_to is Obj_Structure_Bed ) {
					O = L.locked_to;
					GlobalFuncs.do_teleport( O, Rand13.PickFromTable( GlobalVars.endgame_safespawns ) );
					L.loc = O.loc;
				} else {
					GlobalFuncs.do_teleport( L, Rand13.PickFromTable( GlobalVars.endgame_safespawns ) );
				}
			} else if ( A is Obj_Mecha ) {
				GlobalFuncs.do_teleport( A, Rand13.PickFromTable( GlobalVars.endgame_safespawns ) );
			} else if ( A is Tile ) {
				T = A;
				dist = Map13.GetDistance( T, this );

				if ( dist <= this.consume_range && T.density ) {
					T.density = false;
				}

				foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Ent_Dynamic) )) {
					AM = _a;
					

					if ( AM == this ) {
						continue;
					}

					if ( dist <= this.consume_range ) {
						this.consume( AM );
						continue;
					}

					if ( dist > this.consume_range && this.canPull( AM ) ) {
						
						if ( !AM.singuloCanEat() ) {
							continue;
						}

						if ( 101 == AM.invisibility ) {
							continue;
						}
						Task13.Schedule( 0, (Task13.Closure)(() => {
							Map13.StepTowardsSimple( AM, this );
							return;
						}));
					}
				}
			}
			return false;
		}

		// Function from file: portal.dm
		public override void acquire( dynamic food = null ) {
			return;
		}

		// Function from file: portal.dm
		public override dynamic process(  ) {
			dynamic M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list )) {
				M = _a;
				

				if ( Lang13.Bool( M.client ) ) {
					((Mob)M).see_rift( this );
				}
			}
			this.eat();
			return null;
		}

		// Function from file: portal.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays = 0;
			return null;
		}

	}

}
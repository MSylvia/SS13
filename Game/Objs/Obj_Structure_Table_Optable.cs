// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Table_Optable : Obj_Structure_Table {

		public dynamic patient = null;
		public dynamic computer = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.buildstack = typeof(Obj_Item_Stack_Sheet_Mineral_Silver);
			this.can_buckle = 1;
			this.buckle_lying = 1;
			this.buckle_requires_restraints = true;
			this.icon = "icons/obj/surgery.dmi";
			this.icon_state = "optable";
		}

		// Function from file: tables_racks.dm
		public Obj_Structure_Table_Optable ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic dir = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cardinal )) {
				dir = _a;
				
				this.computer = Lang13.FindIn( typeof(Obj_Machinery_Computer_Operating), Map13.GetStep( this, Convert.ToInt32( dir ) ) );

				if ( Lang13.Bool( this.computer ) ) {
					this.computer.table = this;
					break;
				}
			}
			return;
		}

		// Function from file: tables_racks.dm
		public bool check_patient(  ) {
			dynamic M = null;

			M = Lang13.FindIn( typeof(Mob_Living_Carbon_Human), this.loc );

			if ( Lang13.Bool( M ) ) {
				
				if ( M.resting != 0 ) {
					this.patient = M;
					return true;
				}
			} else {
				this.patient = null;
				return false;
			}
			return false;
		}

	}

}
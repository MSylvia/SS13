// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Statue : Obj_Structure_Closet {

		public dynamic intialTox = 0;
		public dynamic intialFire = 0;
		public dynamic intialBrute = 0;
		public dynamic intialOxy = 0;
		public double? timer = 240;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.health = 0;
			this.icon = "icons/obj/statue.dmi";
			this.icon_state = "human_male";
		}

		// Function from file: statue.dm
		public Obj_Structure_Closet_Statue ( dynamic loc = null, dynamic L = null ) : base( (object)(loc) ) {
			
			if ( L is Mob_Living_Carbon_Human || L is Mob_Living_Carbon_Monkey || L is Mob_Living_SimpleAnimal_Corgi ) {
				
				if ( Lang13.Bool( L.locked_to ) ) {
					L.locked_to = 0;
					L.anchored = 0;
				}

				if ( Lang13.Bool( L.client ) ) {
					L.client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
					L.client.eye = this;
				}
				L.loc = this;
				L.sdisabilities |= 2;
				((Mob)L).delayNextAttack( this.timer );
				L.click_delayer.setDelay( this.timer );
				this.health = Convert.ToDouble( L.health + 100 );
				this.intialTox = ((Mob_Living)L).getToxLoss();
				this.intialFire = ((Mob_Living)L).getFireLoss();
				this.intialBrute = ((Mob_Living)L).getBruteLoss();
				this.intialOxy = ((Mob_Living)L).getOxyLoss();

				if ( L is Mob_Living_Carbon_Human ) {
					this.name = "statue of " + L.name;

					if ( L.gender == "female" ) {
						this.icon_state = "human_female";
					}
				} else if ( L is Mob_Living_Carbon_Monkey ) {
					this.name = "statue of " + L.name;
					this.icon_state = "monkey";
				} else if ( L is Mob_Living_SimpleAnimal_Corgi ) {
					this.name = "statue of " + L.name;
					this.icon_state = "corgi";
					this.desc = "If it takes forever, I will wait for you...";
				}
			}

			if ( this.health == 0 ) {
				GlobalFuncs.qdel( this );
				return;
			}
			GlobalVars.processing_objects.Add( this );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: statue.dm
		public override void container_resist(  ) {
			return;
		}

		// Function from file: statue.dm
		public void shatter( dynamic user = null ) {
			
			if ( Lang13.Bool( user ) ) {
				((Mob)user).gib();
			}
			this.dump_contents();
			this.visible_message( "<span class='warning'>" + this + " shatters into pieces!. </span>" );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: statue.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			return null;
		}

		// Function from file: statue.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return null;
		}

		// Function from file: statue.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			return null;
		}

		// Function from file: statue.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			return false;
		}

		// Function from file: statue.dm
		public override bool place( dynamic user = null, dynamic I = null ) {
			return false;
		}

		// Function from file: statue.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic M = null;

			this.health -= Convert.ToDouble( a.force );
			this.visible_message( "<span class='warning'>" + b + " strikes " + this + " with " + a + ".</span>" );
			((Mob)b).delayNextAttack( 10 );

			if ( this.health <= 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this )) {
					M = _a;
					
					this.shatter( M );
				}
			}
			return null;
		}

		// Function from file: statue.dm
		public override bool blob_act( dynamic severity = null ) {
			dynamic M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this )) {
				M = _a;
				
				this.shatter( M );
			}
			return false;
		}

		// Function from file: statue.dm
		public override dynamic attack_animal( Mob_Living user = null ) {
			dynamic M = null;

			
			if ( Lang13.Bool( ((dynamic)user).environment_smash ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this )) {
					M = _a;
					
					this.shatter( M );
				}
			}
			return null;
		}

		// Function from file: statue.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			dynamic M = null;

			this.health -= Convert.ToDouble( Proj.damage );

			if ( this.health <= 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this )) {
					M = _a;
					
					this.shatter( M );
				}
			}
			return null;
		}

		// Function from file: statue.dm
		public override bool toggle(  ) {
			return false;
		}

		// Function from file: statue.dm
		public override bool close(  ) {
			return false;
		}

		// Function from file: statue.dm
		public override int insert( Ent_Dynamic AM = null, bool? include_mobs = null ) {
			return 0;
		}

		// Function from file: statue.dm
		public override bool open(  ) {
			return false;
		}

		// Function from file: statue.dm
		public override void take_contents(  ) {
			return;
		}

		// Function from file: statue.dm
		public override void dump_contents(  ) {
			Obj O = null;
			Mob_Living M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj) )) {
				O = _a;
				
				O.loc = this.loc;
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Mob_Living) )) {
				M = _b;
				
				M.loc = this.loc;
				M.sdisabilities &= 65533;
				M.take_overall_damage( M.health - this.health - 100, 0 );

				if ( M.client != null ) {
					M.client.eye = M.client.mob;
					M.client.perspective = GlobalVars.MOB_PERSPECTIVE ?1:0;
				}
			}
			return;
		}

		// Function from file: statue.dm
		public override dynamic process(  ) {
			Mob_Living M = null;

			this.timer--;

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Mob_Living) )) {
				M = _a;
				
				M.setToxLoss( this.intialTox );
				M.adjustFireLoss( this.intialFire - M.getFireLoss() );
				M.adjustBruteLoss( this.intialBrute - M.getBruteLoss() );
				M.setOxyLoss( this.intialOxy );
			}

			if ( ( this.timer ??0) <= 0 ) {
				this.dump_contents();
				GlobalVars.processing_objects.Remove( this );
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: statue.dm
		[Verb]
		[VerbInfo( name: "Toggle Open", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public override void verb_toggleopen(  ) {
			return;
		}

	}

}
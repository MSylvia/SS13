// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ZeroPointEmitter : Obj_Machinery {

		public bool active = false;
		public int fire_delay = 100;
		public int last_shot = 0;
		public int shot_number = 0;
		public bool locked = false;
		public double energy = 0.0;
		public double frequency = 1;
		public int freq = 50000;
		public dynamic id = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable(new object [] { 47 });
			this.idle_power_usage = 10;
			this.active_power_usage = 300;
			this.machine_flags = 89;
			this.icon = "icons/obj/engine.dmi";
			this.icon_state = "laser";
		}

		// Function from file: ZeroPointLaser.dm
		public Obj_Machinery_ZeroPointEmitter ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			double? i = null;
			double? d = null;
			double new_power = 0;
			Obj_Machinery_Computer_Lasercon comp = null;
			Obj_Machinery_Computer_Lasercon comp2 = null;
			double? amt = null;
			double new_freq = 0;
			Obj_Machinery_Computer_Lasercon comp3 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			}

			if ( Lang13.Bool( href_list["input"] ) ) {
				i = String13.ParseNumber( href_list["input"] );
				d = i;
				new_power = this.energy + ( d ??0);
				new_power = Num13.MaxInt( ((int)( new_power )), ((int)( 0.0 )) );
				new_power = Num13.MinInt( ((int)( new_power )), ((int)( 0.01 )) );
				this.energy = new_power;

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Lasercon) )) {
					comp = _a;
					

					if ( comp.id == this.id ) {
						comp.updateDialog();
					}
				}
			} else if ( Lang13.Bool( href_list["online"] ) ) {
				this.active = !this.active;

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Lasercon) )) {
					comp2 = _b;
					

					if ( comp2.id == this.id ) {
						comp2.updateDialog();
					}
				}
			} else if ( Lang13.Bool( href_list["freq"] ) ) {
				amt = String13.ParseNumber( href_list["freq"] );
				new_freq = this.frequency + ( amt ??0);
				new_freq = Num13.MaxInt( ((int)( new_freq )), 1 );
				new_freq = Num13.MinInt( ((int)( new_freq )), 20000 );
				this.frequency = new_freq;

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Lasercon) )) {
					comp3 = _c;
					

					if ( comp3.id == this.id ) {
						comp3.updateDialog();
					}
				}
			}
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic power_change(  ) {
			base.power_change();
			this.update_icon();
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}

			if ( a is Obj_Item_Weapon_Card_Id || a is Obj_Item_Device_Pda ) {
				
				if ( this.emagged != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The lock seems to be broken</span>" );
					return null;
				}

				if ( this.allowed( b ) ) {
					
					if ( this.active ) {
						this.locked = !this.locked;
						GlobalFuncs.to_chat( b, "The controls are now " + ( this.locked ? "locked." : "unlocked." ) );
					} else {
						this.locked = false;
						GlobalFuncs.to_chat( b, "<span class='warning'>The controls can only be locked when the " + this + " is online</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>Access denied.</span>" );
				}
				return null;
			}
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		public override int emag( dynamic user = null ) {
			
			if ( !( this.emagged != 0 ) ) {
				this.locked = false;
				this.emagged = 1;
				((Ent_Static)user).visible_message( "" + user.name + " emags the " + this.name + ".", "<span class='warning'>You short out the lock.</span>" );
				return 1;
			}
			return -1;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic process(  ) {
			Game_Data A = null;
			Effect_Effect_System_SparkSpread s = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( this.state != 2 ) {
				this.active = false;
				return null;
			}

			if ( this.last_shot + this.fire_delay <= Game13.time && this.active ) {
				this.last_shot = Game13.time;

				if ( this.shot_number < 3 ) {
					this.fire_delay = 2;
					this.shot_number++;
				} else {
					this.fire_delay = Rand13.Int( 20, 100 );
					this.shot_number = 0;
				}
				this.f_use_power( 1000 );
				A = GlobalFuncs.getFromPool( typeof(Obj_Item_Projectile_Beam_Emitter), this.loc );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/emitter.ogg", 25, 1 );

				if ( Rand13.PercentChance( 35 ) ) {
					s = new Effect_Effect_System_SparkSpread();
					s.set_up( 5, 1, this );
					s.start();
				}
				((dynamic)A).dir = this.dir;

				switch ((int)( this.dir )) {
					case 1:
						((dynamic)A).yo = 20;
						((dynamic)A).xo = 0;
						break;
					case 4:
						((dynamic)A).yo = 0;
						((dynamic)A).xo = 20;
						break;
					case 8:
						((dynamic)A).yo = 0;
						((dynamic)A).xo = -20;
						break;
					default:
						((dynamic)A).yo = -20;
						((dynamic)A).xo = 0;
						break;
				}
				((dynamic)A).process();
			}
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic emp_act( int severity = 0 ) {
			this.f_use_power( 1000 );
			return 1;
		}

		// Function from file: ZeroPointLaser.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.add_fingerprint( a );

			if ( this.state == 2 ) {
				
				if ( !this.locked ) {
					
					if ( this.active ) {
						this.active = false;
						GlobalFuncs.to_chat( a, "You turn off the " + this + "." );
						this.use_power = 1;
					} else {
						this.active = true;
						GlobalFuncs.to_chat( a, "You turn on the " + this + "." );
						this.shot_number = 0;
						this.fire_delay = 100;
						this.use_power = 2;
					}
					this.update_icon();
				} else {
					GlobalFuncs.to_chat( a, "<span class='warning'>The controls are locked!</span>" );
				}
			} else {
				GlobalFuncs.to_chat( a, "<span class='warning'>The " + this + " needs to be firmly secured to the floor first.</span>" );
				return 1;
			}
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.active && !( ( this.stat & 3 ) != 0 ) ) {
				this.icon_state = "laser";
			} else {
				this.icon_state = "laser";
			}
			return null;
		}

		// Function from file: ZeroPointLaser.dm
		[Verb]
		[VerbInfo( name: "Rotate", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public bool rotate(  ) {
			
			if ( Lang13.Bool( this.anchored ) || Lang13.Bool( Task13.User.stat ) ) {
				GlobalFuncs.to_chat( Task13.User, "It is fastened to the floor!" );
				return false;
			}
			this.dir = Num13.Rotate( this.dir, 90 );
			return true;
		}

	}

}
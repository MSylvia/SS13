// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Crate_Bin : Obj_Structure_Closet_Crate {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.open_sound = "sound/effects/bin_open.ogg";
			this.close_sound = "sound/effects/bin_close.ogg";
			this.anchored = 1;
			this.icon_state = "largebins";
		}

		// Function from file: bins.dm
		public Obj_Structure_Closet_Crate_Bin ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_icon();
			return;
		}

		// Function from file: bins.dm
		public void do_animate(  ) {
			GlobalFuncs.playsound( this.loc, this.open_sound, 15, 1, -3 );
			Icon13.Flick( "animate_largebins", this );
			Task13.Schedule( 13, (Task13.Closure)(() => {
				GlobalFuncs.playsound( this.loc, this.close_sound, 15, 1, -3 );
				this.update_icon();
				return;
			}));
			return;
		}

		// Function from file: bins.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic T = null;
			Obj_Item O = null;

			
			if ( A is Obj_Item_Weapon_Storage_Bag_Trash ) {
				T = A;
				user.WriteMsg( "<span class='notice'>You fill the bag.</span>" );

				foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item) )) {
					O = _a;
					

					if ( ((Obj_Item_Weapon_Storage)T).can_be_inserted( O, true ) ) {
						O.loc = T;
					}
				}
				T.update_icon();
				this.do_animate();
			} else if ( A is Obj_Item_Weapon_Wrench ) {
				this.anchored = !Lang13.Bool( this.anchored );
				GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 75, 1 );
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: bins.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );
			this.overlays.Cut();

			if ( this.contents.len == 0 ) {
				this.overlays.Add( "largebing" );
			} else if ( this.contents.len >= this.storage_capacity ) {
				this.overlays.Add( "largebinr" );
			} else {
				this.overlays.Add( "largebino" );
			}
			return false;
		}

	}

}
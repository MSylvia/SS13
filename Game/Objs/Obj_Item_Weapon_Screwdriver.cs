// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Screwdriver : Obj_Item_Weapon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.hitsound = "sound/weapons/toolhit.ogg";
			this.sharpness = 1;
			this.slot_flags = 512;
			this.force = 5;
			this.w_class = 1;
			this.throwforce = 5;
			this.throw_speed = 3;
			this.throw_range = 5;
			this.starting_materials = new ByTable().Set( "$iron", 75 );
			this.w_type = 4;
			this.melt_temperature = 1783.1500244140625;
			this.attack_verb = new ByTable(new object [] { "stabbed" });
			this.icon_state = "screwdriver";
		}

		// Function from file: tools.dm
		public Obj_Item_Weapon_Screwdriver ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			dynamic _a = Rand13.Pick(new object [] { "red", "blue", "purple", "brown", "green", "cyan", "yellow" }); // Was a switch-case, sorry for the mess.
			if ( _a=="red" ) {
				this.icon_state = "screwdriver2";
				this.item_state = "screwdriver";
			} else if ( _a=="blue" ) {
				this.icon_state = "screwdriver";
				this.item_state = "screwdriver_blue";
			} else if ( _a=="purple" ) {
				this.icon_state = "screwdriver3";
				this.item_state = "screwdriver_purple";
			} else if ( _a=="brown" ) {
				this.icon_state = "screwdriver4";
				this.item_state = "screwdriver_brown";
			} else if ( _a=="green" ) {
				this.icon_state = "screwdriver5";
				this.item_state = "screwdriver_green";
			} else if ( _a=="cyan" ) {
				this.icon_state = "screwdriver6";
				this.item_state = "screwdriver_cyan";
			} else if ( _a=="yellow" ) {
				this.icon_state = "screwdriver7";
				this.item_state = "screwdriver_yellow";
			}

			if ( Rand13.PercentChance( 75 ) ) {
				this.pixel_y = Rand13.Int( 0, 16 );
			}
			return;
		}

		// Function from file: tools.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			Mob M = null;
			Obj_Item_Weapon_Legcuffs_Bolas_Cable B = null;

			
			if ( a is Obj_Item_Stack_CableCoil ) {
				C = a;
				M = Task13.User;

				if ( M is Mob_Living_Carbon_Human && !M.restrained() && !Lang13.Bool( M.stat ) && !( M.paralysis != 0 ) && !( M.stunned != 0 ) ) {
					
					if ( !( M.loc is Tile ) ) {
						return null;
					}

					if ( Convert.ToDouble( C.amount ) < 10 ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You need at least 10 lengths to make a bolas wire!</span>" );
						return null;
					}
					B = new Obj_Item_Weapon_Legcuffs_Bolas_Cable( Task13.User.loc );
					GlobalFuncs.qdel( this );
					B.icon_state = "cbolas_" + C._color;
					B.cable_color = C._color;
					B.screw_state = this.item_state;
					B.screw_istate = this.icon_state;
					GlobalFuncs.to_chat( M, "<span class='notice'>You wind some cable around the screwdriver handle to make a bolas wire.</span>" );
					((Obj_Item_Stack)C).use( 10 );
				} else {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You cannot do that.</span>" );
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: tools.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( !( M is Mob_Living_Carbon ) ) {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( GlobalFuncs.can_operate( M ) ) {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( ((dynamic)user.zone_sel).selecting != "eyes" && ((dynamic)user.zone_sel).selecting != "head" ) {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}
			Interface13.Stat( null, user.mutations.Contains( 5 ) );

			if ( ((dynamic)user.zone_sel).selecting != "eyes" && ((dynamic)user.zone_sel).selecting != "head" && Rand13.PercentChance( 50 ) ) {
				M = user;
			}
			this.eyestab( M, user ); return null;
		}

		// Function from file: tools.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			GlobalFuncs.to_chat( Map13.FetchViewers( null, user ), Rand13.Pick(new object [] { new Txt( "<span class='danger'>" ).item( user ).str( " is stabbing the " ).item( this.name ).str( " into " ).his_her_its_their().str( " temple! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString(), new Txt( "<span class='danger'>" ).item( user ).str( " is stabbing the " ).item( this.name ).str( " into " ).his_her_its_their().str( " heart! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() }) );
			return 1;
		}

	}

}
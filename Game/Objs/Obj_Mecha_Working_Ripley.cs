// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Working_Ripley : Obj_Mecha_Working {

		public ByTable cargo = new ByTable();
		public int cargo_capacity = 15;
		public dynamic ore_box = null;
		public Obj_Item_MechaParts_MechaEquipment_Tool_HydraulicClamp hydraulic_clamp = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.step_in = 4;
			this.max_temperature = 20000;
			this.health = 200;
			this.wreckage = typeof(Obj_Effect_Decal_MechaWreckage_Ripley);
			this.icon_state = "ripley";
		}

		public Obj_Mecha_Working_Ripley ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: ripley.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic M = null;
			Ent_Dynamic A = null;
			dynamic T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this )) {
				M = _a;
				

				if ( M == this.occupant ) {
					continue;
				}
				M.loc = GlobalFuncs.get_turf( this );
				M.loc.Entered( M );
				Map13.StepRandom( M );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.cargo, typeof(Ent_Dynamic) )) {
				A = _b;
				
				A.loc = GlobalFuncs.get_turf( this );
				T = GlobalFuncs.get_turf( A );

				if ( Lang13.Bool( T ) ) {
					((Base_Static)T).Entered( A );
				}
				Map13.StepRandom( A );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: ripley.dm
		public override void empty_bad_contents(  ) {
			Obj O = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj) )) {
				O = _a;
				

				if ( this.cargo.Contains( O ) ) {
					continue;
				}

				if ( !GlobalFuncs.is_type_in_list( O, this.mech_parts ) ) {
					O.loc = this.loc;
				}
			}
			return;
		}

		// Function from file: ripley.dm
		public override string get_stats_part(  ) {
			string output = null;
			Obj O = null;

			output = base.get_stats_part();
			output += "<b>Cargo Compartment Contents:</b><div style=\"margin-left: 15px;\">";

			if ( this.cargo.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.cargo, typeof(Obj) )) {
					O = _a;
					
					output += new Txt( "<a href='?src=" ).Ref( this ).str( ";drop_from_cargo=" ).Ref( O ).str( "'>Unload</a> : " ).item( O ).str( "<br>" ).ToString();
				}
			} else {
				output += "Nothing";
			}
			output += "</div>";
			return output;
		}

		// Function from file: ripley.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic O = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( href_list["drop_from_cargo"] ) ) {
				O = Lang13.FindObj( href_list["drop_from_cargo"] );

				if ( this.cargo.Contains( Lang13.Bool( O ) && Lang13.Bool( O ) ) ) {
					this.occupant_message( "<span class='notice'>You unload " + O + ".</span>" );
					((Ent_Dynamic)O).forceMove( GlobalFuncs.get_turf( this ) );
					this.cargo.Remove( O );

					if ( this.ore_box == O ) {
						this.ore_box = Lang13.FindIn( typeof(Obj_Structure_OreBox), this.cargo );
					}
					this.log_message( "Unloaded " + O + ". Cargo compartment capacity: " + ( this.cargo_capacity - this.cargo.len ) );
				}
			}
			return null;
		}

		// Function from file: ripley.dm
		public override bool Exit( Ent_Dynamic O = null, Ent_Static newloc = null ) {
			
			if ( this.cargo.Contains( O ) ) {
				return false;
			}
			return base.Exit( O, newloc );
		}

	}

}
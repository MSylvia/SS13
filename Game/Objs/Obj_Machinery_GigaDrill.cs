// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_GigaDrill : Obj_Machinery {

		public bool active = false;
		public int drill_time = 10;
		public dynamic drilling_turf = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/mining.dmi";
			this.icon_state = "gigadrill";
			this.layer = 3.1;
		}

		public Obj_Machinery_GigaDrill ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: artifact_gigadrill.dm
		public override dynamic Bump(Ent_Static Obstacle = null, dynamic yes = null) {
			Tile_Unsimulated_Mineral M = null;
			
			if ( this.active && !Lang13.Bool( this.drilling_turf ) ) {
				
				if ( Obstacle is Tile_Unsimulated_Mineral ) {
					M = (Tile_Unsimulated_Mineral)Obstacle;
					this.drilling_turf = GlobalFuncs.get_turf( this );
					this.visible_message( "<span class='danger'>" + this + " begins to drill into " + M + "!</span>" );
					this.anchored = 1;
					Task13.Schedule( this.drill_time, (Task13.Closure)(() => {
						
						if ( GlobalFuncs.get_turf( this ) == this.drilling_turf && this.active ) {
							M.GetDrilled();
							this.loc = M;
						}
						this.drilling_turf = null;
						this.anchored = 0;
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: artifact_gigadrill.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.active ) {
				this.active = false;
				this.icon_state = "gigadrill";
				GlobalFuncs.to_chat( a, "<span class='notice'>You press a button and " + this + " slowly spins down.</span>" );
			} else {
				this.active = true;
				this.icon_state = "gigadrill_mov";
				GlobalFuncs.to_chat( a, "<span class='notice'>You press a button and " + this + " shudders to life.</span>" );
			}
			return null;
		}

	}

}
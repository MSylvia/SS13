// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Telescience : Obj_Machinery_Computer {

		public bool sending = true;
		public dynamic telepad = null;
		public int teles_left = 0;
		public int x_off = 0;
		public int y_off = 0;
		public dynamic x_player_off = null;
		public dynamic y_player_off = null;
		public dynamic x_co = 1;
		public dynamic y_co = 1;
		public dynamic z_co = 1;
		public dynamic cell = null;
		public double teleport_cell_usage = 1000;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/telesci_computer";
			this.idle_power_usage = 10;
			this.processing = true;
			this.light_color = "#6496FA";
			this.icon_state = "teleport";
		}

		// Function from file: telesci_computer.dm
		public Obj_Machinery_Computer_Telescience ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.teles_left = Rand13.Int( 12, 14 );
			this.x_off = Rand13.Int( -10, 10 );
			this.y_off = Rand13.Int( -10, 10 );
			this.x_player_off = 0;
			this.y_player_off = 0;

			if ( GlobalVars.ticker != null ) {
				this.initialize();
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic new_x = null;
			dynamic new_y = null;
			dynamic new_x2 = null;
			dynamic x_validate = null;
			dynamic new_y2 = null;
			dynamic y_validate = null;
			dynamic new_z = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return 0;
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				
				if ( Task13.User.machine == this ) {
					Task13.User.unset_machine();
				}
				return 1;
			}

			if ( Lang13.Bool( href_list["setPOffsetX"] ) ) {
				new_x = Interface13.Input( "Please input desired X offset.", this.name, this.x_player_off, null, null, InputType.Num );

				if ( Convert.ToDouble( new_x ) < -10 || Convert.ToDouble( new_x ) > 10 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid X offset (-10 to 10)</span>" );
				} else {
					this.x_player_off = new_x;
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["setPOffsetY"] ) ) {
				new_y = Interface13.Input( "Please input desired X offset.", this.name, this.y_player_off, null, null, InputType.Num );

				if ( Convert.ToDouble( new_y ) < -10 || Convert.ToDouble( new_y ) > 10 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid Y offset (-10 to 10)</span>" );
				} else {
					this.y_player_off = new_y;
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["setx"] ) ) {
				new_x2 = Interface13.Input( "Please input desired X coordinate.", this.name, this.x_co, null, null, InputType.Num );
				x_validate = new_x2 + this.x_off;

				if ( Convert.ToDouble( x_validate ) < -49 || Convert.ToDouble( x_validate ) > Game13.map_size_x + 50 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid X coordinate.</span>" );
				} else {
					this.x_co = new_x2;
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["sety"] ) ) {
				new_y2 = Interface13.Input( "Please input desired Y coordinate.", this.name, this.y_co, null, null, InputType.Num );
				y_validate = new_y2 + this.y_off;

				if ( Convert.ToDouble( y_validate ) < -49 || Convert.ToDouble( y_validate ) > Game13.map_size_y + 50 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid Y coordinate.</span>" );
				} else {
					this.y_co = new_y2;
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["setz"] ) ) {
				new_z = Interface13.Input( "Please input desired Z coordinate.", this.name, this.z_co, null, null, InputType.Num );

				if ( new_z == GlobalVars.map.zCentcomm || Convert.ToDouble( new_z ) < 1 || Convert.ToDouble( new_z ) > GlobalVars.map.zLevels.len ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid Z coordinate.</span>" );
				} else {
					this.z_co = new_z;
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["send"] ) ) {
				
				if ( Lang13.Bool( this.cell ) && Convert.ToDouble( this.cell.charge ) >= this.teleport_cell_usage ) {
					this.sending = true;
					this.teleport( Task13.User );
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["receive"] ) ) {
				
				if ( Lang13.Bool( this.cell ) && Convert.ToDouble( this.cell.charge ) >= this.teleport_cell_usage ) {
					this.sending = false;
					this.teleport( Task13.User );
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["eject_cell"] ) ) {
				
				if ( Lang13.Bool( this.cell ) ) {
					Task13.User.put_in_hands( this.cell );
					((Ent_Static)this.cell).add_fingerprint( Task13.User );
					this.cell.updateicon();
					this.cell = null;
					Task13.User.visible_message( new Txt().item( Task13.User ).str( " removes the cell from " ).the( this.name ).item().str( "." ).ToString(), new Txt( "You remove the cell from " ).the( this.name ).item().str( "." ).ToString() );
					this.update_icon();
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["recal"] ) ) {
				this.teles_left = Rand13.Int( 12, 14 );
				this.x_off = Rand13.Int( -10, 10 );
				this.y_off = Rand13.Int( -10, 10 );
				this.sparks();
				GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Calibration successful.</span>" );
				this.updateUsrDialog();
				return 1;
			}
			return 0;
		}

		// Function from file: telesci_computer.dm
		public void teleport( Mob user = null ) {
			
			if ( this.x_co == null || this.y_co == null || this.z_co == null ) {
				GlobalFuncs.to_chat( user, "<span class='caution'>Error: coordinates not set.</span>" );
				this.telefail();
				return;
			}

			if ( Lang13.Bool( this.cell ) && Convert.ToDouble( this.cell.charge ) < this.teleport_cell_usage ) {
				GlobalFuncs.to_chat( user, "<span class='caution'>Error: not enough energy.</span>" );
				return;
			}
			((Obj_Item_Weapon_Cell)this.cell).use( this.teleport_cell_usage );

			if ( this.teles_left > 0 ) {
				this.teles_left -= 1;
				this.doteleport( user );
			} else {
				this.telefail();
				return;
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public void doteleport( Mob user = null ) {
			dynamic trueX = null;
			dynamic trueY = null;
			Tile target = null;
			Ent_Static A = null;
			Effect_Effect_System_SparkSpread s = null;
			dynamic sparks = null;
			Effect_Effect_System_SparkSpread y = null;
			dynamic source = null;
			dynamic dest = null;
			int things = 0;
			Ent_Dynamic ROI = null;

			trueX = this.x_co + this.x_off - this.x_player_off + GlobalVars.WORLD_X_OFFSET[this.z_co];
			trueY = this.y_co + this.y_off - this.y_player_off + GlobalVars.WORLD_Y_OFFSET[this.z_co];
			trueX = ( Convert.ToDouble( trueX ) <= 1 ? ((dynamic)( 1 )) : ( Convert.ToDouble( trueX ) >= Game13.map_size_x ? ((dynamic)( Game13.map_size_x )) : trueX ) );
			trueY = ( Convert.ToDouble( trueY ) <= 1 ? ((dynamic)( 1 )) : ( Convert.ToDouble( trueY ) >= Game13.map_size_y ? ((dynamic)( Game13.map_size_y )) : trueY ) );

			if ( Lang13.Bool( this.telepad ) ) {
				target = Map13.GetTile( Convert.ToInt32( trueX ), Convert.ToInt32( trueY ), Convert.ToInt32( this.z_co ) );
				A = target.loc;

				if ( A != null && Lang13.Bool( ((dynamic)A).jammed ) ) {
					
					if ( !Lang13.Bool( this.telepad.amplifier ) || Convert.ToInt32( ((dynamic)A).jammed ) == 2 ) {
						this.visible_message( new Txt( "<span class='warning'>" ).icon( this ).str( " " ).item( this ).str( " turns on and the lights dim.  You can see a faint shape, but it loses focus and the telepad shuts off with a buzz.  Perhaps you need more signal strength?" ).ToString(), new Txt().icon( this ).str( "<span class='warning'>You hear something buzz.</span></span>" ).ToString() );
						return;
					}

					if ( Rand13.PercentChance( 25 ) ) {
						GlobalFuncs.qdel( this.telepad.amplifier );
						this.telepad.amplifier = null;
						this.visible_message( new Txt().icon( this ).str( "<span class='notice'>You hear something shatter.</span>" ).ToString(), new Txt().icon( this ).str( "<span class='notice'>You hear something shatter.</span>" ).ToString() );
					}
				}
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 5, 1, this.telepad );
				s.start();
				Icon13.Flick( "pad-beam", this.telepad );
				GlobalFuncs.to_chat( user, "<span class='caution'>Teleport successful.</span>" );
				sparks = GlobalFuncs.get_turf( target );
				y = new Effect_Effect_System_SparkSpread();
				y.set_up( 5, 1, sparks );
				y.start();
				source = target;
				dest = GlobalFuncs.get_turf( this.telepad );

				if ( this.sending ) {
					source = dest;
					dest = target;
				}
				things = 0;

				foreach (dynamic _a in Lang13.Enumerate( source, typeof(Ent_Dynamic) )) {
					ROI = _a;
					

					if ( Lang13.Bool( ROI.anchored ) || things >= 10 ) {
						continue;
					}

					if ( GlobalFuncs.is_type_in_list( ROI, GlobalVars.telesci_warnings ) ) {
						GlobalFuncs.message_admins( "" + user.real_name + "/(" + GlobalFuncs.formatPlayerPanel( user, user.ckey ) + ") teleported a " + ROI + " to " + GlobalFuncs.formatJumpTo( dest ) + " from " + GlobalFuncs.formatJumpTo( source ) );
					}
					GlobalFuncs.log_admin( "" + user.real_name + "/(" + GlobalFuncs.formatPlayerPanel( user, user.ckey ) + ") teleported a " + ROI + " to " + GlobalFuncs.formatJumpTo( dest ) + " from " + GlobalFuncs.formatJumpTo( source ) );
					GlobalFuncs.do_teleport( ROI, dest, 0 );
					things++;
				}
				return;
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public void telefail(  ) {
			dynamic O = null;
			Obj_Machinery_Telepad E = null;
			dynamic L = null;
			Mob_Living_Carbon_Human M = null;
			Mob_Living_Carbon O2 = null;
			Mob_Living_Carbon M2 = null;
			Mob_Living_Carbon H = null;
			Obj_Machinery_Telepad E2 = null;
			dynamic L2 = null;
			ByTable blocked = null;
			dynamic hostiles = null;
			Mob_Living_Carbon_Human M3 = null;
			dynamic chosen = null;
			dynamic H2 = null;

			
			if ( Rand13.PercentChance( 95 ) ) {
				this.sparks();

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
					O = _a;
					
					O.show_message( "<span class='warning'>The telepad weakly fizzles.</span>", 2 );
				}
				return;
			}

			if ( Rand13.PercentChance( 5 ) ) {
				
				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Telepad) )) {
					E = _c;
					
					L = GlobalFuncs.get_turf( E );
					this.sparks();

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, L ), typeof(Mob_Living_Carbon_Human) )) {
						M = _b;
						
						M.apply_effect( Rand13.Int( 10, 20 ), "irradiate", 0 );
						GlobalFuncs.to_chat( M, "<span class='warning'>You feel strange.</span>" );
					}
				}
				return;
			}

			if ( Rand13.PercentChance( 1 ) ) {
				this.visible_message( "<span class='warning'>The telepad changes colors rapidly, and opens a portal, and you see what your mind seems to think is the very threads that hold the pattern of the universe together, and a eerie sense of paranoia creeps into you.</span>" );

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchViewers( null, this ), typeof(Mob_Living_Carbon) )) {
					O2 = _d;
					
					GlobalFuncs.spacevine_infestation();
				}
				this.sparks();
				return;
			}

			if ( Rand13.PercentChance( 5 ) ) {
				
				foreach (dynamic _e in Lang13.Enumerate( Map13.FetchHearers( null, this ), typeof(Mob_Living_Carbon) )) {
					M2 = _e;
					
					GlobalFuncs.to_chat( M2, new Sound( "sound/items/AirHorn.ogg" ) );

					if ( M2 is Mob_Living_Carbon_Human ) {
						H = M2;

						if ( Lang13.Bool( ((dynamic)H).earprot() ) ) {
							continue;
						}
					}
					GlobalFuncs.to_chat( M2, "<font color='red' size='7'>HONK</font>" );
					M2.sleeping = 0;
					M2.stuttering += 20;
					M2.ear_deaf += 30;
					M2.Weaken( 3 );

					if ( Rand13.PercentChance( 30 ) ) {
						M2.Stun( 10 );
						M2.Paralyse( 4 );
					} else {
						M2.Jitter( 500 );
					}
					this.sparks();
				}
				return;
			}

			if ( Rand13.PercentChance( 1 ) ) {
				this.sparks();

				foreach (dynamic _g in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Telepad) )) {
					E2 = _g;
					
					L2 = GlobalFuncs.get_turf( E2 );
					blocked = new ByTable(new object [] { 
						typeof(Mob_Living_SimpleAnimal_Hostile), 
						typeof(Mob_Living_SimpleAnimal_Hostile_Alien_Queen_Large), 
						typeof(Mob_Living_SimpleAnimal_Hostile_Retaliate), 
						typeof(Mob_Living_SimpleAnimal_Hostile_Retaliate_Clown), 
						typeof(Mob_Living_SimpleAnimal_Hostile_GiantSpider_Nurse)
					 });
					hostiles = Lang13.GetTypes( typeof(Mob_Living_SimpleAnimal_Hostile) ) - blocked;
					GlobalFuncs.playsound( L2, "sound/effects/phasein.ogg", 100, 1, 3, 5 );

					foreach (dynamic _f in Lang13.Enumerate( Map13.FetchViewers( null, L2 ), typeof(Mob_Living_Carbon_Human) )) {
						M3 = _f;
						
						Icon13.Flick( "e_flash", M3.flash );
					}
					chosen = Rand13.PickFromTable( hostiles );
					H2 = Lang13.Call( chosen );
					H2.loc = L2;
					return;
				}
				return;
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public void sparks(  ) {
			dynamic L = null;
			Effect_Effect_System_SparkSpread s = null;

			
			if ( Lang13.Bool( this.telepad ) ) {
				L = GlobalFuncs.get_turf( GlobalVars.E );
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 5, 1, L );
				s.start();
			} else {
				return;
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string _out = null;
			Browser browserdatum = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				((Mob)user).unset_machine(  );
				return null;
			}
			_out = new Txt( @"
		<div class='item'>
			<div class='itemLabel'>
				Offsets:
			</div>
			<div class='itemContent'>
				<a href='?src=" ).Ref( this ).str( ";setPOffsetX=1'>X offset: " ).item( this.x_player_off ).str( "</a>\n				<a href='?src=" ).Ref( this ).str( ";setPOffsetY=1'>Y offset: " ).item( this.y_player_off ).str( @"</a>
			</div>
		</div>
		<div class='item'>
			<div class='itemLabel'>
				Coordinates:
			</div>
			<div class='itemContent'>
				<a href='?src=" ).Ref( this ).str( ";setx=1'>X: " ).item( this.x_co ).str( "</a>\n				<a href='?src=" ).Ref( this ).str( ";sety=1'>Y: " ).item( this.y_co ).str( "</a>\n				<a href='?src=" ).Ref( this ).str( ";setz=1'>Z: " ).item( this.z_co ).str( @"</a>
			</div>
		</div>
		<div class='item'>
			<div class='itemLabel'>
				Controls:
			</div>
			<div class='itemContent'>
				<a href='?src=" ).Ref( this ).str( ";send=1' " ).item( ( Lang13.Bool( this.x_co ) && Lang13.Bool( this.y_co ) && Lang13.Bool( this.z_co ) ? "" : "class='linkOff'" ) ).str( ">Send</a>\n				<a href='?src=" ).Ref( this ).str( ";receive=1' " ).item( ( Lang13.Bool( this.x_co ) && Lang13.Bool( this.y_co ) && Lang13.Bool( this.z_co ) ? "" : "class='linkOff'" ) ).str( ">Receive</a>\n				<a href='?src=" ).Ref( this ).str( ";recal=1'>Recalibrate</a>\n			</div>\n		</div>\n		" ).ToString();

			if ( !Lang13.Bool( this.cell ) ) {
				_out += "\n		<div class=\"notice\">No power cell detected.</div>\n		";
			} else {
				_out += new Txt( @"
		<div class='statusDisplay'>
			<div class='line'>
				<div class='statusLabel'>
					" ).item( this.cell.charge ).str( "/" ).item( this.cell.maxcharge ).str( "\n					<a href='?src=" ).Ref( this ).str( @";eject_cell=1'>Eject</a>
				</div>
			</div>
		</div>
		" ).ToString();
			}
			((Mob)user).set_machine( this );
			browserdatum = new Browser( user, "telescience", this.name, 380, 210, this );
			browserdatum.add_stylesheet( "shared", "nano/css/shared.css" );
			browserdatum.set_content( _out );
			browserdatum.open();
			return null;
		}

		// Function from file: telesci_computer.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( a.client ) && Lang13.Bool( a.client.prefs.usenanoui ) ) {
				this.ui_interact( a );
				return null;
			} else {
				this.interact( a );
			}
			return null;
		}

		// Function from file: telesci_computer.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

		// Function from file: telesci_computer.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			GlobalFuncs.to_chat( a, "You are too primitive to use this computer." );
			return null;
		}

		// Function from file: telesci_computer.dm
		public override void ui_interact( dynamic user = null, string ui_key = null, Nanoui ui = null, bool? force_open = null ) {
			ui_key = ui_key ?? "main";
			force_open = force_open ?? true;

			ByTable cell_data = null;
			ByTable data = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}

			if ( Lang13.Bool( user.stat ) || ((Mob)user).restrained() ) {
				return;
			}
			cell_data = null;

			if ( Lang13.Bool( this.cell ) ) {
				cell_data = new ByTable().Set( "charge", this.cell.charge ).Set( "maxcharge", this.cell.maxcharge );
			}
			data = new ByTable().Set( "pOffsetX", this.x_player_off ).Set( "pOffsetY", this.y_player_off ).Set( "coordx", this.x_co ).Set( "coordy", this.y_co ).Set( "coordz", this.z_co ).Set( "cell", cell_data );
			ui = GlobalVars.nanomanager.try_update_ui( user, this, ui_key, ui, data, force_open );

			if ( !( ui != null ) ) {
				ui = new Nanoui( user, this, ui_key, "telescience_console.tmpl", this.name, 380, 210 );
				ui.set_initial_data( data );
				ui.open();
				ui.set_auto_update( true );
			}
			return;
		}

		// Function from file: telesci_computer.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "teleportb";
			} else if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "teleport0";
				this.stat |= 2;
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.stat &= 65533;
			}
			return null;
		}

		// Function from file: telesci_computer.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Cell && Lang13.Bool( this.anchored ) ) {
				
				if ( Lang13.Bool( this.cell ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>There is already a cell in " ).the( this.name ).item().str( ".</span>" ).ToString() );
					return null;
				} else {
					
					if ( !this.areaMaster.power_equip ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>" ).The( this.name ).item().str( " blinks red as you try to insert the cell!</span>" ).ToString() );
						return null;
					}

					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.cell = a;
						((Ent_Static)b).visible_message( "" + b + " inserts a cell into the " + this + ".", "You insert a cell into the " + this + "." );
					} else {
						b.WriteMsg( new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
					}
				}
				this.update_icon();
			}
			return null;
		}

		// Function from file: telesci_computer.dm
		public override dynamic process(  ) {
			
			if ( !Lang13.Bool( this.cell ) || ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				return null;
			}

			if ( ((Obj_Item_Weapon_Cell)this.cell).give( 100 ) != 0 ) {
				this.f_use_power( 200 );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: telesci_computer.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			base.initialize( suppress_icon_check );

			if ( !( GlobalVars.ticker != null ) ) {
				this.cell = new Obj_Item_Weapon_Cell( this );
				this.cell.charge = 0;
			}
			this.telepad = Lang13.FindIn( typeof(Obj_Machinery_Telepad), Map13.FetchInRange( 7, this ) );
			return false;
		}

	}

}
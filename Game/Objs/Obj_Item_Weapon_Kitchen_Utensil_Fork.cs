// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Kitchen_Utensil_Fork : Obj_Item_Weapon_Kitchen_Utensil {

		public string loaded_food_name = null;
		public Image loaded_food = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.sharpness = 0.6;
			this.melt_temperature = 1783.1500244140625;
			this.icon_state = "fork";
		}

		// Function from file: kitchen.dm
		public Obj_Item_Weapon_Kitchen_Utensil_Fork ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.reagents = new Reagents( 10 );
			this.reagents.my_atom = this;
			return;
		}

		// Function from file: kitchen.dm
		public bool load_food( Obj_Item_Weapon_ReagentContainers_Food_Snacks snack = null, dynamic user = null ) {
			Icon food_to_load = null;

			
			if ( !( snack != null ) || !Lang13.Bool( user ) || !( snack is Obj_Item_Weapon_ReagentContainers_Food_Snacks ) || !( user is Mob ) ) {
				return false;
			}

			if ( this.loaded_food != null ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You already have food on " ).the( this ).item().str( ".</span>" ).ToString() );
				return false;
			}

			if ( snack.wrapped ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>You can't eat packaging!</span>" );
				return false;
			}

			if ( Lang13.Bool( snack.reagents.total_volume ) ) {
				this.loaded_food_name = snack.name;
				food_to_load = GlobalFuncs.getFlatIcon( snack );
				food_to_load.Scale( 16, 16 );
				this.loaded_food = new Image( food_to_load );
				this.loaded_food.pixel_x = this.pixel_x + 8;
				this.loaded_food.pixel_y = this.pixel_y + 15;
				this.overlays.Add( this.loaded_food );

				if ( ( snack.reagents.total_volume ??0) > ( snack.bitesize ??0) ) {
					((Reagents)snack.reagents).trans_to( this, snack.bitesize );
				} else {
					((Reagents)snack.reagents).trans_to( this, snack.reagents.total_volume );
					snack.bitecount++;
					snack.On_Consume( user );
				}
			}
			return true;
		}

		// Function from file: kitchen.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.loaded_food != null ) {
				user.show_message( "It has a forkful of " + this.loaded_food_name + " on it." );
			}
			return null;
		}

		// Function from file: kitchen.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( !( M is Mob_Living_Carbon ) || !( user is Mob_Living_Carbon ) ) {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( ((dynamic)user.zone_sel).selecting != "eyes" && ((dynamic)user.zone_sel).selecting != "head" && M != user && !( this.loaded_food != null ) ) {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( this.loaded_food != null ) {
				((Reagents)this.reagents).update_total();

				if ( M == user ) {
					((Ent_Static)user).visible_message( "<span class='notice'>" + user + " eats a delicious forkful of " + this.loaded_food_name + "!</span>" );
				} else {
					((Ent_Static)user).visible_message( "<span class='notice'>" + user + " feeds " + M + " a delicious forkful of " + this.loaded_food_name + "!</span>" );
				}
				((Reagents)this.reagents).reaction( M, GlobalVars.INGEST );
				((Reagents)this.reagents).trans_to( M.reagents, this.reagents.total_volume );
				this.overlays.Remove( this.loaded_food );
				Lang13.Delete( this.loaded_food );
				this.loaded_food = null;
				this.loaded_food_name = null;
				return null;
			} else if ( Lang13.Bool( user.mutations.Contains( 5 ) ) && Rand13.PercentChance( 50 ) ) {
				this.eyestab( user, user ); return null;
			} else {
				this.eyestab( M, user ); return null;
			}
			return null;
		}

	}

}
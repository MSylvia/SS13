// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Storage_Lockbox_Unlockable : Obj_Item_Weapon_Storage_Lockbox {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable();
		}

		public Obj_Item_Weapon_Storage_Lockbox_Unlockable ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: lockbox.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			dynamic ID = null;

			
			if ( a is Obj_Item_Weapon_Card_Id ) {
				ID = a;

				if ( this.broken ) {
					GlobalFuncs.to_chat( b, "<span class='rose'>It appears to be broken.</span>" );
					return _default;
				} else {
					this.locked = !this.locked;

					if ( this.locked ) {
						this.icon_state = this.icon_locked;
						GlobalFuncs.to_chat( b, "<span class='rose'>You lock the " + this.name + "!</span>" );
						this.tracked_access = "The tracker reads: 'Last locked by " + ID.registered_name + "'.";
						return _default;
					} else {
						this.icon_state = this.icon_closed;
						GlobalFuncs.to_chat( b, "<span class='rose'>You unlock the " + this.name + "!</span>" );
						this.tracked_access = "The tracker reads: 'Last unlocked by " + ID.registered_name + ".'";
						return _default;
					}
				}
			} else {
				_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return _default;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_RND_Server : Obj_Machinery_RND {

		public Research files = null;
		public int health = 100;
		public ByTable id_with_upload = new ByTable();
		public ByTable id_with_download = new ByTable();
		public string id_with_upload_string = "";
		public string id_with_download_string = "";
		public double? server_id = 0;
		public double heat_gen = 100;
		public int heating_power = 40000;
		public dynamic delay = 10;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.req_access = new ByTable(new object [] { 30 });
			this.icon_state = "server";
		}

		// Function from file: server.dm
		public Obj_Machinery_RND_Server ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Rdserver(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor()
			 });
			this.RefreshParts();
			this.initialize();
			return;
		}

		// Function from file: server.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.disabled ) {
				return null;
			}

			if ( this.shocked != 0 ) {
				this.shock( a, 50 );
			}
			return null;
		}

		// Function from file: server.dm
		public void produce_heat( double heat_amt = 0 ) {
			Ent_Static L = null;
			GasMixture env = null;
			dynamic transfer_moles = null;
			GasMixture removed = null;
			int? heat_capacity = null;

			
			if ( !( ( this.stat & 3 ) != 0 ) ) {
				L = this.loc;

				if ( L is Tile_Simulated ) {
					env = L.return_air();

					if ( ( env.temperature ??0) < heat_amt + 273.41 ) {
						transfer_moles = env.f_total_moles() * 0.25;
						removed = env.remove( transfer_moles );

						if ( removed != null ) {
							heat_capacity = removed.heat_capacity();

							if ( heat_capacity == 0 || heat_capacity == null ) {
								heat_capacity = 1;
							}
							removed.temperature = Num13.MinInt( ((int)( ( ( removed.temperature ??0) * ( heat_capacity ??0) + this.heating_power ) / ( heat_capacity ??0) )), 1000 );
						}
						env.merge( removed );
					}
				}
			}
			return;
		}

		// Function from file: server.dm
		public void griefProtection(  ) {
			Obj_Machinery_RND_Server_Centcom C = null;
			Tech T = null;
			Design D = null;

			
			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_RND_Server_Centcom) )) {
				C = _c;
				

				foreach (dynamic _a in Lang13.Enumerate( this.files.known_tech, typeof(Tech) )) {
					T = _a;
					
					C.files.AddTech2Known( T );
				}

				foreach (dynamic _b in Lang13.Enumerate( this.files.known_designs, typeof(Design) )) {
					D = _b;
					
					C.files.AddDesign2Known( D );
				}
				C.files.RefreshResearch();
			}
			return;
		}

		// Function from file: server.dm
		public override bool blob_act( dynamic severity = null ) {
			this.griefProtection();
			base.blob_act( (object)(severity) );
			return false;
		}

		// Function from file: server.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			this.griefProtection();
			base.ex_act( severity, (object)(child) );
			return false;
		}

		// Function from file: server.dm
		public override dynamic emp_act( int severity = 0 ) {
			this.griefProtection();
			base.emp_act( severity );
			return null;
		}

		// Function from file: server.dm
		public override dynamic process(  ) {
			GasMixture environment = null;
			bool changed = false;
			Tech T = null;

			environment = this.loc.return_air();

			dynamic _a = environment.temperature; // Was a switch-case, sorry for the mess.
			if ( 0<=_a&&_a<=273.41 ) {
				this.health = Num13.MinInt( 100, this.health + 1 );
			} else if ( 273.41<=_a&&_a<=313.41 ) {
				this.health = ( this.health <= 0 ? 0 : ( this.health >= 100 ? 100 : this.health ) );
			} else if ( 313.41<=_a&&_a<=Double.PositiveInfinity ) {
				this.health = Num13.MaxInt( 0, this.health - 1 );
			}

			if ( this.health <= 0 ) {
				this.griefProtection();
				this.files.known_designs = new ByTable();
				changed = false;

				foreach (dynamic _b in Lang13.Enumerate( this.files.known_tech, typeof(Tech) )) {
					T = _b;
					

					if ( Rand13.PercentChance( 1 ) ) {
						T.level = 0;
						changed = true;
					}
				}

				if ( changed ) {
					this.files.RefreshResearch();
				}
			}

			if ( Lang13.Bool( this.delay ) ) {
				this.delay--;
			} else {
				this.produce_heat( this.heat_gen );
				this.delay = Lang13.Initial( this, "delay" );
			}
			return null;
		}

		// Function from file: server.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			ByTable temp_list = null;
			dynamic N = null;
			dynamic N2 = null;

			
			if ( !( this.files != null ) ) {
				this.files = new Research(  );
			}

			if ( !( this.id_with_upload.len != 0 ) ) {
				temp_list = new ByTable();
				temp_list = GlobalFuncs.text2list( this.id_with_upload_string, ";" );

				foreach (dynamic _a in Lang13.Enumerate( temp_list )) {
					N = _a;
					
					this.id_with_upload.Add( String13.ParseNumber( N ) );
				}
			}

			if ( !( this.id_with_download.len != 0 ) ) {
				temp_list = new ByTable();
				temp_list = GlobalFuncs.text2list( this.id_with_download_string, ";" );

				foreach (dynamic _b in Lang13.Enumerate( temp_list )) {
					N2 = _b;
					
					this.id_with_download.Add( String13.ParseNumber( N2 ) );
				}
			}
			return false;
		}

		// Function from file: server.dm
		public override dynamic RefreshParts(  ) {
			int tot_rating = 0;
			Obj_Item_Weapon_StockParts SP = null;

			tot_rating = 0;

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_StockParts) )) {
				SP = _a;
				
				tot_rating += SP.rating;
			}
			this.heat_gen /= Num13.MaxInt( 1, tot_rating );
			return null;
		}

		// Function from file: server.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			this.griefProtection();
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_SolarAssembly : Obj_Machinery_Power {

		public bool tracker = false;
		public Type glass_type = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "sp_base";
		}

		public Obj_Machinery_Power_SolarAssembly ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: solar.dm
		public override string give_tech_list(  ) {
			return "power=3";
		}

		// Function from file: solar.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic S = null;

			
			if ( !Lang13.Bool( this.anchored ) && this.loc is Tile ) {
				
				if ( a is Obj_Item_Weapon_Wrench ) {
					this.anchored = 1;
					this.density = true;
					((Ent_Static)b).visible_message( "<span class='notice'>" + b + " wrenches " + this + " down.</span>", "<span class='notice'>You wrench " + this + " down.</span>" );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 75, 1 );
					return 1;
				}
			} else {
				
				if ( a is Obj_Item_Weapon_Wrench ) {
					this.anchored = 0;
					this.density = false;
					((Ent_Static)b).visible_message( "<span class='notice'>" + b + " unwrenches " + this + " from the ground.</span>", "<span class='notice'>You unwrench " + this + " from the ground.</span>" );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 75, 1 );
					return 1;
				}

				if ( a is Obj_Item_Stack_Sheet_Glass ) {
					S = a;

					if ( Convert.ToDouble( S.amount ) >= 2 ) {
						this.glass_type = a.type;
						S.use( 2 );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 50, 1 );
						((Ent_Static)b).visible_message( "<span class='notice'>" + b + " carefully adds glass to " + this + ".</span>", "<span class='notice'>You carefully add glass to " + this + ".</span>" );

						if ( this.tracker ) {
							new Obj_Machinery_Power_Solar_Panel_Tracker( GlobalFuncs.get_turf( this ), this );
						} else {
							new Obj_Machinery_Power_Solar_Panel( GlobalFuncs.get_turf( this ), this );
						}
					} else {
						GlobalFuncs.to_chat( b, "<span class='notice'>You lack enough " + a.type + " to finish the solar.</span>" );
					}
					return 1;
				}
			}

			if ( !this.tracker ) {
				
				if ( a is Obj_Item_Weapon_TrackerElectronics ) {
					
					if ( Lang13.Bool( b.drop_item( a ) ) ) {
						this.tracker = true;
						GlobalFuncs.qdel( a );
						((Ent_Static)b).visible_message( "<span class='notice'>" + b + " inserts the electronics into " + this + ".</span>", "<span class='notice'>You insert the electronics into " + this + ".</span>" );
						return 1;
					}
				}
			} else if ( a is Obj_Item_Weapon_Crowbar ) {
				new Obj_Item_Weapon_TrackerElectronics( this.loc );
				this.tracker = false;
				((Ent_Static)b).visible_message( "<span class='notice'>" + b + " takes the electronics out of " + this + ".</span>", "<span class='notice'>You take the electronics out of " + this + ".</span>" );
				return 1;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: solar.dm
		public void give_glass(  ) {
			dynamic S = null;

			
			if ( this.glass_type != null ) {
				S = Lang13.Call( this.glass_type, GlobalFuncs.get_turf( this ) );
				S.amount = 2;
				this.glass_type = null;
			}
			return;
		}

	}

}
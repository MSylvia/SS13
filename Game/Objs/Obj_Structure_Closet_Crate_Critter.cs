// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Crate_Critter : Obj_Structure_Closet_Crate {

		public Obj_Item_Weapon_Tank_Internals_EmergencyOxygen tank = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.breakout_time = 1;
			this.material_drop = typeof(Obj_Item_Stack_Sheet_Mineral_Wood);
			this.icon_state = "crittercrate";
		}

		// Function from file: critter.dm
		public Obj_Structure_Closet_Crate_Critter ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.tank = new Obj_Item_Weapon_Tank_Internals_EmergencyOxygen();
			return;
		}

		// Function from file: critter.dm
		public override GasMixture return_air(  ) {
			
			if ( this.tank != null ) {
				return this.tank.air_contents;
			} else {
				return this.loc.return_air();
			}
		}

		// Function from file: critter.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();

			if ( this.opened ) {
				this.overlays.Add( "crittercrate_door_open" );
			} else {
				this.overlays.Add( "crittercrate_door" );

				if ( this.manifest != null ) {
					this.overlays.Add( "manifest" );
				}
			}
			return false;
		}

		// Function from file: critter.dm
		public override dynamic Destroy(  ) {
			dynamic T = null;
			double i = 0;

			T = GlobalFuncs.get_turf( this );
			this.tank.loc = T;
			this.tank = null;

			foreach (dynamic _a in Lang13.IterateRange( 1, Rand13.Int( 2, 5 ) )) {
				i = _a;
				
				Lang13.Call( this.material_drop, T );
			}
			return base.Destroy();
		}

	}

}
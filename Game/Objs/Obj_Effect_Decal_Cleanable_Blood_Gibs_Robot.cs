// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Decal_Cleanable_Blood_Gibs_Robot : Obj_Effect_Decal_Cleanable_Blood_Gibs {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.basecolor = "#030303";
			this.random_icon_states = new ByTable(new object [] { "gib1", "gib2", "gib3", "gib4", "gib5", "gib6", "gib7" });
			this.icon = "icons/mob/robots.dmi";
			this.icon_state = "gib1";
		}

		public Obj_Effect_Decal_Cleanable_Blood_Gibs_Robot ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: disposal.dm
		public override void pipe_eject( int? direction = null ) {
			ByTable dirs = null;

			
			if ( Lang13.Bool( direction ) ) {
				dirs = new ByTable(new object [] { direction, Num13.Rotate( direction, -45 ), Num13.Rotate( direction, 45 ) });
			} else {
				dirs = GlobalVars.alldirs.Copy();
			}
			this.streak( dirs );
			return;
		}

		// Function from file: robots.dm
		public override void streak( ByTable directions = null ) {
			dynamic direction = null;
			int? i = null;
			Game_Data streak = null;
			Effect_Effect_System_SparkSpread s = null;

			Task13.Schedule( 0, (Task13.Closure)(() => {
				direction = Rand13.PickFromTable( directions );
				i = null;
				i = 0;

				while (( i ??0) < Convert.ToDouble( Rand13.PickWeighted(new object [] { 13107, 1, 39321, 2, 58981, 3, 65535, 4 }) )) {
					Task13.Sleep( 3 );

					if ( ( i ??0) > 0 ) {
						
						if ( Rand13.PercentChance( 40 ) ) {
							streak = GlobalFuncs.getFromPool( typeof(Obj_Effect_Decal_Cleanable_Blood_Oil_Streak), GlobalFuncs.get_turf( this ) );
							((dynamic)streak).New( ((dynamic)streak).loc );
							((dynamic)streak).update_icon();
						} else if ( Rand13.PercentChance( 10 ) ) {
							s = new Effect_Effect_System_SparkSpread();
							s.set_up( 3, 1, this );
							s.start();
						}
					}
					Map13.StepTowards( this, Map13.GetStep( this, Convert.ToInt32( direction ) ), 0 );

					if ( ( i ??0) > 0 ) {
						break;
					}
					i++;
				}
				return;
			}));
			return;
		}

		// Function from file: robots.dm
		public override void dry(  ) {
			return;
		}

		// Function from file: robots.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.color = "#FFFFFF";
			return null;
		}

	}

}
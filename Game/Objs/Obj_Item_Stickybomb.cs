// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stickybomb : Obj_Item {

		public Obj_Item_Weapon_Gun_Stickybomb fired_from = null;
		public bool live = false;
		public dynamic stuck_to = null;
		public Image self_overlay = null;
		public bool signal = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 1;
			this.w_class = 1;
			this.icon = "icons/obj/ammo.dmi";
			this.icon_state = "stickybomb";
		}

		// Function from file: stickylauncher.dm
		public Obj_Item_Stickybomb ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.pixel_x = Rand13.Int( -10, 10 );
			this.pixel_y = Rand13.Int( -10, 10 );
			return;
		}

		// Function from file: stickylauncher.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj is Obj_Item_Projectile_Beam || Proj is Obj_Item_Projectile_Bullet || Proj is Obj_Item_Projectile_Ricochet ) {
				
				if ( !( Proj is Obj_Item_Projectile_Beam_Lastertag ) && !( Proj is Obj_Item_Projectile_Beam_Practice ) ) {
					this.detonate();
				}
			}
			return null;
		}

		// Function from file: stickylauncher.dm
		public override dynamic emp_act( int severity = 0 ) {
			this.deactivate();
			this.unstick();
			return null;
		}

		// Function from file: stickylauncher.dm
		public void deactivate(  ) {
			this.live = false;

			if ( this.fired_from != null ) {
				this.fired_from.fired.Remove( this );
				this.fired_from = null;
			}
			this.update_icon();
			this.alpha = 255;
			this.unstick();
			return;
		}

		// Function from file: stickylauncher.dm
		public void detonate(  ) {
			dynamic T = null;
			Mob_Living L = null;
			dynamic TL = null;
			int dist = 0;
			dynamic throw_target = null;

			this.icon_state = "stickybomb_flick";

			if ( !( this.self_overlay != null ) ) {
				this.self_overlay = new Image( this.icon, this, this.icon_state, 13, this.dir );
				this.overlays.Add( this.self_overlay );
			}

			if ( this.signal ) {
				return;
			}
			this.signal = true;
			this.mouse_opacity = 0;
			T = GlobalFuncs.get_turf( this );
			GlobalFuncs.playsound( T, "sound/machines/twobeep.ogg", 30, 1 );

			if ( this.stuck_to is Mob ) {
				this.stuck_to.overlays -= this.self_overlay;
				this.self_overlay.icon_state = "stickybomb_flick";
				this.self_overlay.layer = 13;
				this.stuck_to.overlays += this.self_overlay;
			}
			this.alpha = 255;
			Task13.Schedule( 3, (Task13.Closure)(() => {
				
				if ( this.stuck_to is Mob ) {
					this.stuck_to.overlays -= this.self_overlay;
				}
				((Tile)T).turf_animation( "icons/effects/96x96.dmi", "explosion_sticky", this.pixel_x - 32, this.pixel_y - 32, 13 );
				GlobalFuncs.playsound( T, "explosion_small", 75, 1 );

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( 3, T ), typeof(Mob_Living) )) {
					L = _b;
					
					TL = GlobalFuncs.get_turf( L );
					dist = Map13.GetDistance( T, L );
					throw_target = T;

					if ( T != TL ) {
						throw_target = GlobalFuncs.get_edge_target_turf( T, Map13.GetDistance( T, TL ) );
					}

					dynamic _a = dist; // Was a switch-case, sorry for the mess.
					if ( 0<=_a&&_a<=1 ) {
						L.ex_act( 3 );
						L.ex_act( 3 );
						Task13.Schedule( 1, (Task13.Closure)(() => {
							L.throw_at( throw_target, 2, 3 );
							return;
						}));
					} else if ( 1<=_a&&_a<=2 ) {
						L.ex_act( 3, GlobalVars.TRUE );
						Task13.Schedule( 1, (Task13.Closure)(() => {
							L.throw_at( throw_target, 1, 1 );
							return;
						}));
					} else if ( 2<=_a&&_a<=3 ) {
						L.ex_act( 3, GlobalVars.TRUE );
					}
				}
				GlobalFuncs.qdel( this );
				return;
			}));
			return;
		}

		// Function from file: stickylauncher.dm
		public void unstick( bool? fall_to_floor = null ) {
			fall_to_floor = fall_to_floor ?? true;

			
			if ( this.stuck_to is Mob ) {
				this.stuck_to.overlays -= this.self_overlay;
				this.icon_state = this.self_overlay.icon_state;

				if ( fall_to_floor == true ) {
					this.loc = GlobalFuncs.get_turf( this );
				}
			}
			this.stuck_to = null;
			this.anchored = 0;
			this.alpha = 255;
			this.pixel_x = 0;
			this.pixel_y = 0;
			return;
		}

		// Function from file: stickylauncher.dm
		public void stick_to( dynamic A = null, int? side = null ) {
			this.stuck_to = A;
			this.loc = A;
			this.pixel_x = Rand13.Int( -10, 10 );
			this.pixel_y = Rand13.Int( -10, 10 );
			GlobalFuncs.playsound( A, "sound/items/metal_impact.ogg", 30, 1 );

			if ( A is Tile ) {
				this.anchored = 1;

				switch ((int?)( side )) {
					case 1:
						this.pixel_y = 16;
						break;
					case 2:
						this.pixel_y = -16;
						break;
					case 4:
						this.pixel_x = 16;
						break;
					case 8:
						this.pixel_x = -16;
						break;
				}
				Task13.Sleep( 50 );

				if ( this.stuck_to == A ) {
					Icon13.Flick( "stickybomb_flick", this );
					this.live = true;
					this.update_icon();
					Icon13.Animate( new ByTable().Set( 1, this ).Set( "alpha", 50 ).Set( "time", 300 ) );
				}
			} else if ( A is Mob_Living ) {
				this.visible_message( new Txt( "<span class='warning'>" ).the( this ).item().str( " sticks itself on " ).the( A ).item().str( ".</span>" ).ToString() );
				this.loc = A;
				this.self_overlay = new Image( this.icon, this, this.icon_state, 10, this.dir );
				this.self_overlay.pixel_x = this.pixel_x;
				this.self_overlay.pixel_y = this.pixel_y;
				A.overlays += this.self_overlay;
				Task13.Sleep( 50 );

				if ( this.stuck_to == A ) {
					this.live = true;
					A.overlays -= this.self_overlay;
					this.self_overlay.icon_state = "stickybomb-live";
					A.overlays += this.self_overlay;
				}
			}
			return;
		}

		// Function from file: stickylauncher.dm
		public override bool pickup( Mob user = null ) {
			
			if ( Lang13.Bool( this.stuck_to ) ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You reach for " ).the( this ).item().str( " stuck on " ).the( this.stuck_to ).item().str( " and start pulling.</span>" ).ToString() );

				if ( GlobalFuncs.do_after( user, this, 30 ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>It came off!</span>" );
					this.unstick();
					base.pickup( user );
				}
			} else {
				base.pickup( user );
			}
			return false;
		}

		// Function from file: stickylauncher.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + ( this.live ? "-live" : "" );

			if ( this.live ) {
				this.desc = "It appears to be live.";
			} else {
				this.desc = "Ammo for a stickybomb launcher.";
			}
			return null;
		}

		// Function from file: stickylauncher.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.fired_from != null ) {
				this.fired_from.fired.Remove( this );
				this.fired_from = null;
			}
			this.stuck_to = null;
			this.self_overlay = null;
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
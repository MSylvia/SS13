// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_RustGyrotronController : Obj_Machinery_Computer {

		public ByTable linked_gyrotrons = new ByTable( 0 );

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_RustGyrotronControl);
			this.light_color = "#6496FA";
			this.icon_state = "engine";
		}

		public Obj_Machinery_Computer_RustGyrotronController ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: gyrotron_controller.dm
		public override bool unlinkFrom( Mob user = null, Base_Data buffer = null ) {
			bool _default = false;

			this.linked_gyrotrons.Remove( buffer );
			_default = true;
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override Base_Data getLink( double? idx = null ) {
			Base_Data _default = null;

			
			if ( ( idx ??0) <= this.linked_gyrotrons.len ) {
				_default = this.linked_gyrotrons[idx];
			}
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override bool linkWith( Mob user = null, Base_Data buffer = null, ByTable context = null ) {
			bool _default = false;

			this.linked_gyrotrons.Add( buffer );
			_default = true;
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override bool isLinkedWith( Base_Data O = null ) {
			bool _default = false;

			_default = this.linked_gyrotrons.Contains( O );
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override bool canLink( Base_Data O = null, ByTable context = null ) {
			bool _default = false;

			_default = O is Obj_Machinery_Rust_Gyrotron && Map13.GetDistance( this, O ) < 25;
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override string linkMenu( Base_Data O = null ) {
			string _default = null;

			
			if ( O is Obj_Machinery_Rust_Gyrotron ) {
				_default = new Txt( "<a href='?src=" ).Ref( this ).str( ";link=1'>[LINK]</a> " ).ToString();
			}
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override string multitool_menu( dynamic user = null, dynamic P = null ) {
			string _default = null;

			Obj_Machinery_Rust_Gyrotron G = null;

			_default = "Linked gyrotrons:<br><lu>";

			foreach (dynamic _a in Lang13.Enumerate( this.linked_gyrotrons, typeof(Obj_Machinery_Rust_Gyrotron) )) {
				G = _a;
				
				_default += new Txt( "<li><b>" ).item( G.id_tag ).str( "</b> <a href='?src=" ).Ref( this ).str( ";unlink=" ).item( this.linked_gyrotrons.Find( G ) ).str( "'>[X]</a></li>" ).ToString();
			}
			_default += "</ul>";
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic _default = null;

			_default = base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			Obj_Machinery_Rust_Gyrotron gyro = null;
			int gyro_id = 0;
			string status = null;
			string mode = null;
			Browser popup = null;

			dat = @"
		Linked gyrotrons:
		<hr>
		<table>
			<tr>
				<th>ID tag</th>
				<th>Status</th>
				<th>Mode</th>
				<th>Emissions rate (1/10th sec)</th>
				<th>Beam Output (TJ)</th>
				<th>Frequency (GHz)</th>
			</tr>
	";

			foreach (dynamic _a in Lang13.Enumerate( this.linked_gyrotrons, typeof(Obj_Machinery_Rust_Gyrotron) )) {
				gyro = _a;
				
				gyro_id = this.linked_gyrotrons.Find( gyro );
				status = ( gyro.state != 2 || ( gyro.stat & 3 ) != 0 ? "<span style='color: red'>Unresponsive</span>" : "<span style='color: green'>Operational</span>" );
				dat += "\n			</tr>\n				<td>" + gyro.id_tag + "</td>\n				<td>" + status + "</td>\n		";

				if ( gyro.state != 2 || ( gyro.stat & 3 ) != 0 ) {
					dat += @"
				<td><span style='color: red'>ERROR</span></td>
				<td><span style='color: red'>ERROR</span></td>
				<td><span style='color: red'>ERROR</span></td>
				<td><span style='color: red'>ERROR</span></td>
			";
				} else {
					mode = ( gyro.emitting ? new Txt( "<a href='?src=" ).Ref( this ).str( ";deactivate=1;gyro=" ).item( gyro_id ).str( "'>Emitting</a>" ).ToString() : new Txt( "<a href='?src=" ).Ref( this ).str( ";activate=1;gyro=" ).item( gyro_id ).str( "'>Stand-By</a>" ).ToString() );
					dat += new Txt( "\n				<td>" ).item( mode ).str( "</td>\n				<td><a href='?src=" ).Ref( this ).str( ";modifyrate=1;gyro=" ).item( gyro_id ).str( "'>" ).item( gyro.rate ).str( "</a></td>\n				<td><a href='?src=" ).Ref( this ).str( ";modifypower=1;gyro=" ).item( gyro_id ).str( "'>" ).item( gyro.mega_energy ).str( "</a></td>\n				<td><a href='?src=" ).Ref( this ).str( ";modifyfreq=1;gyro=" ).item( gyro_id ).str( "'>" ).item( gyro.frequency ).str( "</a></td>\n			" ).ToString();
				}
				dat += "</tr>";
			}
			dat += "</table>";
			popup = new Browser( user, "gyrotron_controller", "Gyrotron Remote Control Console", 500, 400, this );
			popup.set_content( dat );
			popup.open();
			((Mob)user).set_machine( this );
			return null;
		}

		// Function from file: gyrotron_controller.dm
		public override int wrenchAnchor( dynamic user = null ) {
			int _default = 0;

			Obj_Machinery_Rust_Gyrotron gyro = null;

			_default = base.wrenchAnchor( (object)(user) );

			if ( _default == 1 && Lang13.Bool( this.state ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.linked_gyrotrons, typeof(Obj_Machinery_Rust_Gyrotron) )) {
					gyro = _a;
					

					if ( Map13.GetDistance( this, gyro ) > 25 ) {
						this.linked_gyrotrons.Remove( gyro );
					}
				}
			}
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			_default = base.attack_hand( (object)(a), (object)(b), (object)(c) );

			if ( Lang13.Bool( _default ) ) {
				
				if ( a.machine == this ) {
					((Mob)a).unset_machine(  );
				}
				return _default;
			}
			this.interact( a );
			return _default;
		}

		// Function from file: gyrotron_controller.dm
		public override dynamic attack_ai( dynamic user = null ) {
			dynamic _default = null;

			_default = this.attack_hand( user );
			return _default;
		}

	}

}
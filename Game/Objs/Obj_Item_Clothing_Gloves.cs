// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Gloves : Obj_Item_Clothing {

		public bool wired = false;
		public dynamic cell = 0;
		public bool clipped = false;
		public bool pickpocket = false;
		public int bonus_knockout = 0;
		public int damage_added = 0;
		public int? transfer_blood = 0;
		public Mob bloody_hands_mob = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/gloves.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/gloves.dmi" );
			this.siemens_coefficient = 0.5;
			this.body_parts_covered = 1536;
			this.slot_flags = 4;
			this.attack_verb = new ByTable(new object [] { "challenged" });
			this.species_restricted = new ByTable(new object [] { "exclude", "Unathi", "Tajaran", "Muton" });
			this.icon = "icons/obj/clothing/gloves.dmi";
		}

		public Obj_Item_Clothing_Gloves ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: stungloves.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			Ent_Static H = null;

			base.update_icon( (object)(location), (object)(target) );
			this.overlays.len = 0;

			if ( this.wired ) {
				this.overlays.Add( "gloves_wire" );
			}

			if ( Lang13.Bool( this.cell ) ) {
				this.overlays.Add( "gloves_cell" );
			}

			if ( this.wired && Lang13.Bool( this.cell ) ) {
				this.item_state = "stungloves";
			} else {
				this.item_state = Lang13.Initial( this, "item_state" );
			}

			if ( this.loc is Mob_Living_Carbon_Human ) {
				H = this.loc;
				((dynamic)H).update_inv_gloves();
			}
			return null;
		}

		// Function from file: stungloves.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;

			
			if ( this is Obj_Item_Clothing_Gloves_Boxing ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>That won't work.</span>" );
				base.attackby( (object)(a), (object)(b), (object)(c) );
				return null;
			}

			if ( a is Obj_Item_Stack_CableCoil ) {
				C = a;

				if ( !this.wired ) {
					
					if ( Convert.ToDouble( C.amount ) >= 2 ) {
						((Obj_Item_Stack)C).use( 2 );
						this.wired = true;
						this.siemens_coefficient = 3;
						GlobalFuncs.to_chat( b, "<span class='notice'>You wrap some wires around " + this + ".</span>" );
						this.update_icon();
					} else {
						GlobalFuncs.to_chat( b, "<span class='notice'>There is not enough wire to cover " + this + ".</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " are already wired.</span>" );
				}
			} else if ( a is Obj_Item_Weapon_Cell ) {
				
				if ( !this.wired ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " need to be wired first.</span>" );
				} else if ( !Lang13.Bool( this.cell ) ) {
					
					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.cell = a;
						GlobalFuncs.to_chat( b, "<span class='notice'>You attach a cell to " + this + ".</span>" );
						this.update_icon();
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " already have a cell.</span>" );
				}
			} else if ( a is Obj_Item_Weapon_Wirecutters ) {
				
				if ( Lang13.Bool( this.cell ) ) {
					this.cell.updateicon();
					this.cell.loc = GlobalFuncs.get_turf( this.loc );
					this.cell = null;
					GlobalFuncs.to_chat( b, "<span class='notice'>You cut the cell away from " + this + ".</span>" );
					this.update_icon();
					return null;
				}

				if ( this.wired ) {
					this.wired = false;
					this.siemens_coefficient = Lang13.Initial( this, "siemens_coefficient" );
					GlobalFuncs.to_chat( b, "<span class='notice'>You cut the wires away from " + this + ".</span>" );
					this.update_icon();
				}
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: clothing.dm
		public virtual bool Touch( Ent_Static A = null, Mob_Living user = null, bool proximity = false ) {
			return false;
		}

		// Function from file: clothing.dm
		public virtual bool dexterity_check( dynamic user = null ) {
			return true;
		}

		// Function from file: clothing.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( Lang13.Bool( this.cell ) ) {
				this.cell.charge -= 1000 / severity;

				if ( Convert.ToDouble( this.cell.charge ) < 0 ) {
					this.cell.charge = 0;
				}

				if ( Convert.ToInt32( this.cell.reliability ) != 100 && Rand13.PercentChance( ((int)( 50 / severity )) ) ) {
					this.cell.reliability -= 10 / severity;
				}
			}
			base.emp_act( severity );
			return null;
		}

	}

}
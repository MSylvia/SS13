// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Chisel : Obj_Item_Weapon {

		public bool use_name = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.starting_materials = new ByTable().Set( "$iron", 120 );
			this.icon_state = "chisel";
		}

		public Obj_Item_Weapon_Chisel ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: chisel.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic W = null;
			string engraving_name = null;
			string engraving = null;
			ByTable engravings = null;
			dynamic engravingdesign = null;
			dynamic engraving_icon_state = null;
			Icon engraving_overlay = null;
			int quality = 0;

			
			if ( !( flag == true ) ) {
				return false;
			}

			if ( A is Tile_Simulated_Wall ) {
				W = A;
				((Ent_Static)W).add_fingerprint( user );

				if ( !Lang13.Bool( W.engraving ) ) {
					engraving_name = GlobalFuncs.sanitize( Interface13.Input( Task13.User, "Depicted on the wall is an image of ...", "Basic engraving", null, null, InputType.Str | InputType.Null ) );

					if ( !Lang13.Bool( engraving_name ) ) {
						return false;
					}
					engraving = GlobalFuncs.sanitize( Interface13.Input( Task13.User, "Depicted on the wall is an image of " + engraving_name + ". ...", "Details of the engraving", null, null, InputType.Str | InputType.Null ) );

					if ( !Lang13.Bool( engraving ) ) {
						return false;
					}
					engravings = new ByTable()
						.Set( "Amyjon", "amyjon" )
						.Set( "Face", "face" )
						.Set( "Matt wuz here", "matt" )
						.Set( "Vive la Revolution", "revolution" )
						.Set( "Engi", "engie" )
						.Set( "Killroy", "guy" )
						.Set( "End is nigh", "end" )
						.Set( "Dorf", "dwarf" )
						.Set( "Uboa", "uboa" )
					;
					engravingdesign = Interface13.Input( "Your engraving", null, null, null, engravings, InputType.Null | InputType.Any );

					if ( !Lang13.Bool( engravingdesign ) ) {
						return false;
					}
					engraving_icon_state = engravings[engravingdesign];
					engraving_overlay = new Icon( "icons/effects/crayondecal.dmi", "" + engraving_icon_state, 201 );
					((Ent_Static)user).visible_message( "<span class='notice'>" + user.name + " starts engraving something on the " + W.name + ".</span>", "<span class='notice'>You start engraving an image of " + engraving_name + " on the " + W.name + ".</span>" );

					if ( GlobalFuncs.do_after( user, A, 60 ) ) {
						
						if ( !( W is Tile_Simulated_Wall ) || !Lang13.Bool( user ) || !( this != null ) || !Lang13.Bool( W ) ) {
							return false;
						}

						if ( W.rotting ) {
							((Ent_Static)user).visible_message( "<span class='warning'>The " + W.name + " crumbles under " + user.name + "'s touch!</span>", "<span class='warning'>The " + W.name + " crumbles under your touch!</span>" );
							((Tile)W).dismantle_wall();
							return false;
						}
						quality = Rand13.Int( 1, 10 );

						if ( this.blessed ) {
							quality = Rand13.Int( 8, 10 );
						}

						dynamic _a = quality; // Was a switch-case, sorry for the mess.
						if ( 1<=_a&&_a<=4 ) {
							W.engraving_quality = "an";
						} else if ( 5<=_a&&_a<=7 ) {
							W.engraving_quality = "a finely-designed";
						} else if ( 8<=_a&&_a<=9 ) {
							W.engraving_quality = "an exceptionally designed";
						} else if ( _a==10 ) {
							W.engraving_quality = "a <span class='notice'>masterfully designed</span>";
							GlobalFuncs.to_chat( user, "<span class='warning'>It's a masterpiece!</span>" );
						}
						engraving = "Depicted on the wall is " + W.engraving_quality + " image of " + engraving_name + ( this.use_name ? " by " + user.real_name : "" ) + ". " + engraving + ".";
						W.overlays += engraving_overlay;
						W.engraving = engraving;
						((Ent_Static)user).visible_message( "<span class='notice'>" + user.name + " finishes engraving " + W.engraving_quality + " image of " + engraving_name + ".</span>", "<span class='notice'>You finish engraving on the " + W.name + ".</span>" );
					}
				}
			}
			return false;
		}

		// Function from file: chisel.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			string engraving = null;
			Ent_Static ST = null;

			
			if ( M is Mob_Living_SimpleAnimal_Sculpture ) {
				engraving = GlobalFuncs.sanitize( Interface13.Input( Task13.User, "What do you want to write on the " + M.real_name + "?", null, null, null, InputType.Str ) );
				ST = user.loc;
				Task13.Sleep( Lang13.Length( engraving ) * 10 + 10 );

				if ( !( user.loc == ST && ((Mob)user).get_active_hand() == this ) ) {
					return null;
				}

				if ( !( M is Mob_Living_SimpleAnimal_Sculpture ) || !Lang13.Bool( user ) || !( this != null ) || !Lang13.Bool( M ) ) {
					return null;
				}
				M.desc += engraving;
			}
			return null;
		}

		// Function from file: chisel.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.use_name = !this.use_name;

			if ( this.use_name ) {
				GlobalFuncs.to_chat( user, "You will now sign your work." );
			} else {
				GlobalFuncs.to_chat( user, "You will no longer sign your work." );
			}
			return null;
		}

	}

}
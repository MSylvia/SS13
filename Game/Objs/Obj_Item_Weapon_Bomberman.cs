// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Bomberman : Obj_Item_Weapon {

		public int bomblimit = 1;
		public int bombtotal = 1;
		public int bombpower = 1;
		public bool can_kick = false;
		public bool can_line = false;
		public bool has_power = false;
		public int skate = 0;
		public int speed_bonus = 0;
		public bool? destroy_environnement = false;
		public bool? hurt_players = false;
		public bool slow = false;
		public bool fast = false;
		public bool small_bomb = false;
		public bool no_bomb = false;
		public bool spam_bomb = false;
		public BombermanArena arena = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 5;
			this.icon = "icons/obj/bomberman.dmi";
			this.icon_state = "dispenser";
		}

		// Function from file: bomberman.dm
		public Obj_Item_Weapon_Bomberman ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.bomberman_hurt ) {
				this.hurt_players = true;
			}

			if ( GlobalVars.bomberman_destroy ) {
				this.destroy_environnement = true;
			}
			GlobalVars.bombermangear.Add( this );
			return;
		}

		// Function from file: bomberman.dm
		public void lost(  ) {
			BombermanArena pastarena = null;
			ByTable turfs = null;
			dynamic T = null;

			
			if ( this.arena != null ) {
				this.arena.tools.Remove( this );
				pastarena = this.arena;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					pastarena.end();
					return;
				}));
			}
			turfs = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, this.loc ) )) {
				T = _a;
				

				if ( !T.density ) {
					turfs.Add( T );
				}
			}

			while (this.skate > 0) {
				new Obj_Structure_Powerup_Skate( Rand13.PickFromTable( turfs ) );
				this.skate--;
			}

			while (this.bombtotal > 1) {
				new Obj_Structure_Powerup_Bombup( Rand13.PickFromTable( turfs ) );
				this.bombtotal--;
			}

			while (this.bombpower > 1) {
				new Obj_Structure_Powerup_Fire( Rand13.PickFromTable( turfs ) );
				this.bombpower--;
			}

			if ( this.can_kick ) {
				new Obj_Structure_Powerup_Kick( Rand13.PickFromTable( turfs ) );
			}

			if ( this.can_line ) {
				new Obj_Structure_Powerup_Line( Rand13.PickFromTable( turfs ) );
			}

			if ( this.has_power ) {
				new Obj_Structure_Powerup_Power( Rand13.PickFromTable( turfs ) );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: bomberman.dm
		public void cure( dynamic disease = null ) {
			Task13.Schedule( 400, (Task13.Closure)(() => {
				
				dynamic _a = disease; // Was a switch-case, sorry for the mess.
				if ( _a=="Low Power Disease" ) {
					this.small_bomb = false;
				} else if ( _a=="Constipation" ) {
					this.no_bomb = false;
				} else if ( _a=="Diarrhea" ) {
					this.spam_bomb = false;
				} else if ( _a=="Slow Pace Disease" ) {
					this.slow = false;
				} else if ( _a=="Rapid Pace Disease" ) {
					this.fast = false;
					this.speed_bonus = this.skate;
				}
				return;
			}));
			return;
		}

		// Function from file: bomberman.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic T = null;
			int? power = null;

			T = GlobalFuncs.get_turf( this );

			if ( this.bomblimit != 0 && !this.no_bomb ) {
				power = this.bombpower;

				if ( this.small_bomb ) {
					power = 1;
				}

				if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Bomberman), T ) ) ) {
					GlobalFuncs.playsound( T, "sound/bomberman/bombplace.ogg", 50, 1 );

					if ( this.has_power && this.bomblimit == this.bombtotal ) {
						this.bomblimit--;
						new Obj_Structure_Bomberman_Power( T, power, this.destroy_environnement, this.hurt_players, this );
					} else {
						this.bomblimit--;
						new Obj_Structure_Bomberman( T, power, this.destroy_environnement, this.hurt_players, this );
					}
				} else if ( this.can_line ) {
					GlobalFuncs.playsound( T, "sound/bomberman/bombplace.ogg", 50, 1 );
					this.bomblimit--;
					new Obj_Structure_Bomberman( T, power, this.destroy_environnement, this.hurt_players, this, Lang13.IntNullable( user.dir ) );
				}
			}
			return null;
		}

		// Function from file: bomberman.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			base.Destroy( (object)(brokenup) );
			GlobalVars.bombermangear.Remove( this );
			this.arena = null;
			return null;
		}

	}

}
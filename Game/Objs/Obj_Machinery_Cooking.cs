// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Cooking : Obj_Machinery {

		public string icon_state_on = "oven_on";
		public bool recursive_ingredients = false;
		public bool active = false;
		public string cookSound = "sound/machines/ding.ogg";
		public double cookTime = 150;
		public dynamic ingredient = null;
		public ByTable foodChoices = new ByTable();
		public bool cooks_in_reagents = false;
		public double? cks_max_volume = 50;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 20;
			this.active_power_usage = 500;
			this.machine_flags = 24;
			this.icon = "icons/obj/cooking_machines.dmi";
			this.icon_state = "oven_off";
			this.layer = 2.9;
		}

		// Function from file: cooking_machines.dm
		public Obj_Machinery_Cooking ( dynamic loc = null ) : base( (object)(loc) ) {
			
			if ( GlobalVars.ticker != null ) {
				this.initialize();
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: cooking_machines.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.active ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>" + this.name + " is currently busy.</span>" );
				return null;
			} else if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			} else if ( b is Mob_Living_Silicon ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>That's a terrible idea.</span>" );
				return null;
			} else {
				this.takeIngredient( a, b );
			}
			return null;
		}

		// Function from file: cooking_machines.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			
			if ( a is Mob_Dead_Observer ) {
				GlobalFuncs.to_chat( a, "Your ghostly hand goes straight through." );
			} else if ( a is Mob_Living_Silicon ) {
				GlobalFuncs.to_chat( a, "This is old analog equipment. You can't interface with it." );
			} else if ( this.active ) {
				
				if ( Interface13.Alert( a, new Txt( "Remove " ).the( this.ingredient.name ).item().str( "?" ).ToString(), null, "Yes", "No" ) == "Yes" ) {
					
					if ( Lang13.Bool( this.ingredient ) && GlobalFuncs.get_turf( this.ingredient ) == GlobalFuncs.get_turf( this ) ) {
						
						if ( this.Adjacent( a ) ) {
							this.active = false;
							this.icon_state = Lang13.Initial( this, "icon_state" );
							this.ingredient.mouse_opacity = 1;
							((Mob)a).put_in_hands( this.ingredient );
							GlobalFuncs.to_chat( a, new Txt( "<span class='notice'>You remove " ).the( this.ingredient.name ).item().str( " from " ).the( this.name ).item().str( ".</span>" ).ToString() );
							this.ingredient = null;
						} else {
							GlobalFuncs.to_chat( a, "You are too far away from " + this.name + "." );
						}
					} else {
						this.active = false;
					}
				} else {
					GlobalFuncs.to_chat( a, new Txt( "You leave " ).the( this.name ).item().str( " alone." ).ToString() );
				}
			} else {
				_default = base.attack_hand( (object)(a), (object)(b), (object)(c) );
			}
			return _default;
		}

		// Function from file: cooking_machines.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic _default = null;

			_default = base.examine( (object)(user), size );

			if ( this.active ) {
				GlobalFuncs.to_chat( user, "<span class='info'>It's currently processing " + ( Lang13.Bool( this.ingredient ) ? this.ingredient.name : "" ) + ".</span>" );
			}

			if ( this.cooks_in_reagents ) {
				GlobalFuncs.to_chat( user, "<span class='info'>It seems to have " + this.reagents.total_volume + " units left.</span>" );
			}
			return _default;
		}

		// Function from file: cooking_machines.dm
		public override dynamic is_open_container(  ) {
			
			if ( this.cooks_in_reagents ) {
				return 1;
			}
			return null;
		}

		// Function from file: cooking_machines.dm
		public virtual dynamic makeFood( dynamic foodType = null ) {
			dynamic H = null;
			dynamic I = null;
			dynamic new_food = null;
			dynamic F = null;
			dynamic F2 = null;

			
			if ( this.ingredient is Obj_Item_Weapon_Holder ) {
				H = this.ingredient;

				if ( H.stored_mob != null ) {
					((dynamic)H.stored_mob).ghostize();
					((dynamic)H.stored_mob).death();
					H.contents -= H.stored_mob;
					GlobalFuncs.qdel( H.stored_mob );
					H.stored_mob = null;
				}
			}
			I = this.ingredient;
			new_food = Lang13.Call( foodType, this.loc, I );

			if ( this.cooks_in_reagents ) {
				this.transfer_reagents_to_food( new_food );
			}

			if ( Lang13.Bool( I.reagents ) ) {
				((Reagents)I.reagents).trans_to( new_food, I.reagents.total_volume );
			}

			if ( new_food is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable ) {
				F = new_food;
				F.ingredients += I;
				F.updateName();
				F.overlays += F.generateFilling( I );
			} else if ( new_food is Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle_Customizable ) {
				F2 = new_food;
				F2.ingredients += I;
				F2.updateName();
				F2.overlays += F2.generateFilling( I );
			}
			this.ingredient = null;
			return new_food;
		}

		// Function from file: cooking_machines.dm
		public virtual void cook( dynamic foodType = null ) {
			this.active = true;
			this.icon_state = this.icon_state_on;

			if ( this.cook_after( this.cookTime, 25 ) ) {
				this.makeFood( foodType );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), this.cookSound, 100, 1 );
			}
			this.active = false;
			this.icon_state = Lang13.Initial( this, "icon_state" );
			return;
		}

		// Function from file: cooking_machines.dm
		public bool cook_after( double delay = 0, int? numticks = null ) {
			numticks = numticks ?? 5;

			int delayfraction = 0;
			double i = 0;

			delayfraction = Num13.Floor( delay / ( numticks ??0) );

			foreach (dynamic _a in Lang13.IterateRange( 1, numticks )) {
				i = _a;
				
				Task13.Sleep( delayfraction );

				if ( !Lang13.Bool( this.ingredient ) || !this.active || GlobalFuncs.get_turf( this.ingredient ) != GlobalFuncs.get_turf( this ) ) {
					return false;
				}
			}
			return true;
		}

		// Function from file: cooking_machines.dm
		public void transfer_reagents_to_food( dynamic I = null ) {
			dynamic target_food = null;
			Reagent reagent = null;

			
			if ( Lang13.Bool( I ) ) {
				target_food = I;
			} else if ( Lang13.Bool( this.ingredient ) ) {
				target_food = this.ingredient;
			}

			if ( !Lang13.Bool( target_food ) || !Lang13.Bool( this.reagents ) || !Lang13.Bool( this.reagents.total_volume ) ) {
				return;
			}

			if ( target_food is Obj_Item_Weapon_ReagentContainers ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
					reagent = _a;
					
					((Reagents)this.reagents).trans_id_to( target_food, reagent.id, Num13.MaxInt( 5, Convert.ToInt32( target_food.w_class * 5 ) ) / this.reagents.reagent_list.len );
				}
			}
			return;
		}

		// Function from file: cooking_machines.dm
		public virtual dynamic takeIngredient( dynamic I = null, dynamic user = null ) {
			dynamic _default = null;

			_default = this.validateIngredient( I );

			if ( _default == "transto" ) {
				return _default;
			}

			if ( _default == "valid" ) {
				
				if ( this.foodChoices != null ) {
					_default = this.foodChoices[Interface13.Input( "Select production.", null, null, null, this.foodChoices, InputType.Any )];
				}

				if ( !this.Adjacent( user ) || Lang13.Bool( user.stat ) || ((Mob)user).get_active_hand() != I ) {
					return 0;
				}

				if ( Lang13.Bool( user.drop_item( I, this ) ) ) {
					this.ingredient = I;
					Task13.Schedule( 0, (Task13.Closure)(() => {
						this.cook( _default );
						return;
					}));
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You add " ).the( I.name ).item().str( " to " ).the( this.name ).item().str( ".</span>" ).ToString() );
					return 1;
				}
			} else {
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You can't put that in " ).the( this.name ).item().str( ". \n" ).item( _default ).str( "</span>" ).ToString() );
			}
			return 0;
		}

		// Function from file: cooking_machines.dm
		public virtual string validateIngredient( dynamic I = null ) {
			string _default = null;

			dynamic organ = null;

			
			if ( I is Obj_Item_Weapon_Grab || I is Obj_Item_TkGrab ) {
				_default = "It won't fit.";
			} else if ( I is Obj_Item_Weapon_Disk_Nuclear ) {
				_default = "It's the fucking nuke disk!";
			} else if ( !this.recursive_ingredients && !GlobalVars.recursiveFood && I is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable ) {
				_default = "It would be a straining topological exercise.";
			} else if ( I is Obj_Item_Weapon_ReagentContainers_Food_Snacks || I is Obj_Item_Weapon_Holder || GlobalVars.deepFriedEverything ) {
				_default = "valid";
			} else if ( I is Obj_Item_Weapon_ReagentContainers ) {
				_default = "transto";
			} else if ( I is Obj_Item_Organ ) {
				organ = I;

				if ( Lang13.Bool( organ.robotic ) ) {
					_default = "That's a prosthetic. It wouldn't taste very good.";
				} else {
					_default = "valid";
				}
			} else {
				_default = "It's not edible food.";
			}
			return _default;
		}

		// Function from file: cooking_machines.dm
		public virtual dynamic getFoodChoices(  ) {
			return Lang13.GetTypes( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable_Cook) ) - typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable_Cook);
		}

		// Function from file: cooking_machines.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			dynamic food = null;
			dynamic path = null;

			
			if ( this.foodChoices != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.getFoodChoices() )) {
					path = _a;
					
					food = path;
					this.foodChoices.Add( new ByTable().Set( Lang13.Initial( food, "name" ), path ) );
				}
			}

			if ( this.cooks_in_reagents ) {
				this.create_reagents( this.cks_max_volume );
			}
			return false;
		}

		// Function from file: cooking_machines.dm
		public override dynamic cultify(  ) {
			new Obj_Structure_Cult_Talisman( this.loc );
			base.cultify();
			return null;
		}

		// Function from file: cooking_machines.dm
		[Verb]
		[VerbInfo( name: "Remove ingredients", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public virtual void flush_reagents(  ) {
			
			if ( this.cooks_in_reagents ) {
				
				if ( GlobalFuncs.do_after( Task13.User, this, ( this.reagents.total_volume ??0) / 10 ) ) {
					((Reagents)this.reagents).clear_reagents();

					if ( Task13.User != null ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "You clean " ).the( this ).item().str( " of any ingredients." ).ToString() );
					}
				}
			}
			return;
		}

	}

}
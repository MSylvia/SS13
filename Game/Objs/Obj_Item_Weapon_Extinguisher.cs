// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Extinguisher : Obj_Item_Weapon {

		public double? max_water = 50;
		public int last_use = 1;
		public bool safety = true;
		public string sprite_name = "fire_extinguisher";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "fire_extinguisher";
			this.hitsound = "sound/weapons/smash.ogg";
			this.throwforce = 10;
			this.throw_range = 10;
			this.force = 10;
			this.starting_materials = new ByTable().Set( "$iron", 90 );
			this.w_type = 4;
			this.melt_temperature = 1783.1500244140625;
			this.attack_verb = new ByTable(new object [] { "slammed", "whacked", "bashed", "thunked", "battered", "bludgeoned", "thrashed" });
			this.icon_state = "fire_extinguisher0";
		}

		// Function from file: extinguisher.dm
		public Obj_Item_Weapon_Extinguisher ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( this.max_water );
			((Reagents)this.reagents).add_reagent( "water", this.max_water );
			return;
		}

		// Function from file: extinguisher.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic o = null;
			ByTable badshit = null;
			dynamic bad_reagent = null;
			string hl = null;
			int pack = 0;
			ByTable badshit2 = null;
			dynamic bad_reagent2 = null;
			string hl2 = null;
			int direction = 0;
			dynamic B = null;
			int movementdirection = 0;
			Obj thing = null;
			dynamic T = null;
			Tile T1 = null;
			Tile T2 = null;
			ByTable the_targets = null;
			int? a = null;
			Reagents R = null;
			Obj_Effect_Effect_Water_Spray W = null;
			string ccolor = null;
			dynamic my_target = null;
			int? b = null;
			Ent_Static atm = null;
			Ent_Static campfire = null;
			Ent_Static M = null;

			
			if ( flag == true ) {
				
				if ( A is Obj_Structure_ReagentDispensers ) {
					o = A;
					badshit = new ByTable();

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.reagents_to_log )) {
						bad_reagent = _a;
						

						if ( ((Reagents)o.reagents).has_reagent( bad_reagent ) ) {
							badshit.Add( GlobalVars.reagents_to_log[bad_reagent] );
						}
					}

					if ( badshit.len != 0 ) {
						hl = "<span class='danger'>(" + GlobalFuncs.english_list( badshit ) + ")";
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + new Txt().item( user.name ).str( " (" ).item( user.ckey ).str( ") filled " ).a( this ).item().str( " with " ).item( o.reagents.get_reagent_ids() ).str( " " ).item( hl ).str( ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( user.x ).str( ";Y=" ).item( user.y ).str( ";Z=" ).item( user.z ).str( "'>JMP</a>)" ).ToString() ) );
					}
					((Reagents)o.reagents).trans_to( this, 50 );
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is now refilled</span>" ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/refill.ogg", 50, 1, -6 );
					return false;
				}

				if ( Lang13.Bool( this.is_open_container() ) && Lang13.Bool( this.reagents.total_volume ) ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You empty " ).the( this ).item().str( " onto " ).item( A ).str( ".</span>" ).ToString() );

					if ( ((Reagents)this.reagents).has_reagent( "fuel" ) ) {
						GlobalFuncs.message_admins( "" + user.name + " (" + user.ckey + ") poured Welder Fuel onto " + A + ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + user.x + ";Y=" + user.y + ";Z=" + user.z + "'>JMP</a>)" );
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + user.name + " (" + user.ckey + ") poured Welder Fuel onto " + A + ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + user.x + ";Y=" + user.y + ";Z=" + user.z + "'>JMP</a>)" ) ) );
					}
					((Reagents)this.reagents).reaction( A, GlobalVars.TOUCH );
					Task13.Schedule( 5, (Task13.Closure)(() => {
						((Reagents)this.reagents).clear_reagents();
						return;
					}));
					return false;
				}
			}

			if ( !this.safety && !Lang13.Bool( this.is_open_container() ) ) {
				
				if ( ( this.reagents.total_volume ??0) < 1 ) {
					pack = GlobalFuncs.pack_check( user, this );

					if ( !( pack != 0 ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>" ).The( this ).item().str( " is empty!</span>" ).ToString() );
						return false;
					} else if ( pack == 1 ) {
						return false;
					}
				}

				if ( Game13.time < this.last_use + 20 ) {
					return false;
				}
				((Mob)user).delayNextAttack( 5, true );
				badshit2 = new ByTable();

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.reagents_to_log )) {
					bad_reagent2 = _b;
					

					if ( ((Reagents)this.reagents).has_reagent( bad_reagent2 ) ) {
						badshit2.Add( GlobalVars.reagents_to_log[bad_reagent2] );
					}
				}

				if ( badshit2.len != 0 ) {
					hl2 = "<span class='danger'>(" + GlobalFuncs.english_list( badshit2 ) + ")</span>";
					GlobalFuncs.message_admins( new Txt().item( user.name ).str( " (" ).item( user.ckey ).str( ") used " ).a( this ).item().str( " filled with " ).item( this.reagents.get_reagent_ids( 1 ) ).str( " " ).item( hl2 ).str( ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( user.x ).str( ";Y=" ).item( user.y ).str( ";Z=" ).item( user.z ).str( "'>JMP</a>)" ).ToString() );
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + new Txt().item( user.name ).str( " (" ).item( user.ckey ).str( ") used " ).a( this ).item().str( " filled with " ).item( this.reagents.get_reagent_ids( 1 ) ).str( " " ).item( hl2 ).str( ". (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( user.x ).str( ";Y=" ).item( user.y ).str( ";Z=" ).item( user.z ).str( "'>JMP</a>)" ).ToString() ) );
				}
				this.last_use = Game13.time;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/extinguish.ogg", 75, 1, -3 );
				direction = Map13.GetDistance( this, A );

				if ( Lang13.Bool( user.locked_to ) && user.locked_to is Obj && !Lang13.Bool( user.locked_to.anchored ) ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						B = user.locked_to;
						movementdirection = Num13.Rotate( direction, 180 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 2 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 2 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( user, movementdirection ), movementdirection );
						return;
					}));
				}

				if ( Lang13.Bool( Lang13.FindIn( typeof(Obj), this ) ) ) {
					
					foreach (dynamic _c in Lang13.Enumerate( this, typeof(Obj) )) {
						thing = _c;
						
						thing.loc = GlobalFuncs.get_turf( this );
						thing.throw_at( A, 10, thing.throw_speed * 3 );
						((Ent_Static)user).visible_message( "<span class='danger'>" + user + " fires " + this + " and launches " + thing + " at " + A + "!</span>", "<span class='danger'>You fire " + this + " and launch " + thing + " at " + A + "!</span>" );
						break;
					}
				}
				T = GlobalFuncs.get_turf( A );
				T1 = Map13.GetStep( T, Num13.Rotate( direction, 90 ) );
				T2 = Map13.GetStep( T, Num13.Rotate( direction, -90 ) );
				the_targets = new ByTable(new object [] { T, T1, T2 });
				a = null;
				a = 0;

				while (( a ??0) < 5) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						R = new Reagents( 5 );
						R.my_atom = this;
						((Reagents)this.reagents).trans_to_holder( R, 1 );
						W = new Obj_Effect_Effect_Water_Spray( GlobalFuncs.get_turf( this ) );
						ccolor = GlobalFuncs.mix_color_from_reagents( R.reagent_list );

						if ( Lang13.Bool( ccolor ) ) {
							W.color = ccolor;
						}
						my_target = Rand13.PickFromTable( the_targets );

						if ( !( W != null ) ) {
							return;
						}
						W.reagents = R;
						R.my_atom = W;

						if ( !( W != null ) || !( this != null ) ) {
							return;
						}
						b = null;
						b = 0;

						while (( b ??0) < 5) {
							Map13.StepTowardsSimple( W, my_target );

							if ( !( W != null ) || !Lang13.Bool( W.reagents ) ) {
								return;
							}
							((Reagents)W.reagents).reaction( GlobalFuncs.get_turf( W ), GlobalVars.TOUCH );

							foreach (dynamic _d in Lang13.Enumerate( GlobalFuncs.get_turf( W ), typeof(Ent_Static) )) {
								atm = _d;
								

								if ( !( W != null ) ) {
									return;
								}
								((Reagents)W.reagents).reaction( atm, GlobalVars.TOUCH );

								if ( ((Reagents)W.reagents).has_reagent( "water" ) ) {
									
									if ( atm is Obj_Machinery_SpaceHeater_Campfire ) {
										campfire = atm;
										((dynamic)campfire).cell.charge = 0;
										((Obj)campfire).process();
									}

									if ( atm is Mob_Living ) {
										M = atm;
										((dynamic)M).ExtinguishMob();
									}

									if ( atm.on_fire ) {
										atm.extinguish();
									}

									if ( atm.molten ) {
										atm.molten = false;
										atm.solidify();
									}
								}
							}

							if ( W.loc == my_target ) {
								break;
							}
							Task13.Sleep( 2 );
							b++;
						}
						return;
					}));
					a++;
				}

				if ( user.loc is Tile_Space || user.areaMaster.has_gravity == false ) {
					user.inertia_dir = Map13.GetDistance( A, user );
					Map13.Step( user, Convert.ToInt32( user.inertia_dir ) );
				}
			} else {
				return base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
			}
			return false;
		}

		// Function from file: extinguisher.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( b.stat ) || ((Mob)b).restrained() || b.lying == true ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Wrench ) {
				
				if ( !Lang13.Bool( this.is_open_container() ) ) {
					((Ent_Static)b).visible_message( new Txt().item( b ).str( " begins to unwrench the fill cap on " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You begin to unwrench the fill cap on " ).the( this ).item().str( ".</span>" ).ToString() );

					if ( GlobalFuncs.do_after( b, this, 25 ) ) {
						((Ent_Static)b).visible_message( new Txt().item( b ).str( " removes the fill cap on " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You remove the fill cap on " ).the( this ).item().str( ".</span>" ).ToString() );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
						this.flags |= 4096;
					}
				} else {
					((Ent_Static)b).visible_message( new Txt().item( b ).str( " begins to seal the fill cap on " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You begin to seal the fill cap on " ).the( this ).item().str( ".</span>" ).ToString() );

					if ( GlobalFuncs.do_after( b, this, 25 ) ) {
						((Ent_Static)b).visible_message( new Txt().item( b ).str( " fastens the fill cap on " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You fasten the fill cap on " ).the( this ).item().str( ".</span>" ).ToString() );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
						this.flags &= 61439;
					}
				}
				return null;
			}

			if ( a is Obj_Item && !Lang13.Bool( this.is_open_container() ) && !( this is Obj_Item_Weapon_Extinguisher_Foam ) && !( a is Obj_Item_Weapon_Evidencebag ) ) {
				
				if ( Lang13.Bool( ((Ent_Static)a).is_open_container() ) ) {
					return null;
				}

				if ( Convert.ToDouble( a.w_class ) > 1 ) {
					GlobalFuncs.to_chat( b, new Txt().The( a ).item().str( " won't fit into the nozzle!" ).ToString() );
					return null;
				}

				if ( Lang13.Bool( Lang13.FindIn( typeof(Obj), this ) ) ) {
					GlobalFuncs.to_chat( b, "There's already something crammed into the nozzle." );
					return null;
				}

				if ( b is Mob_Living_Silicon_Robot && !( b is Mob_Living_Silicon_Robot_Mommi ) ) {
					GlobalFuncs.to_chat( b, "You're a robot. No." );
					return null;
				}

				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "You cram " ).the( a ).item().str( " into the nozzle of " ).the( this ).item().str( "." ).ToString() );
					GlobalFuncs.message_admins( new Txt().item( b ).str( "/" ).item( b.ckey ).str( " has crammed " ).a( a ).item().str( " into a " ).item( this ).str( "." ).ToString() );
				}
			}
			return null;
		}

		// Function from file: extinguisher.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.safety = !this.safety;
			this.icon_state = "" + this.sprite_name + !this.safety;
			this.desc = "The safety is " + ( this.safety ? "on" : "off" ) + ".";
			GlobalFuncs.to_chat( user, "The safety is " + ( this.safety ? "on" : "off" ) + "." );
			return null;
		}

		// Function from file: extinguisher.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			Reagent R = null;
			dynamic thing = null;

			base.examine( (object)(user), size );

			if ( !Lang13.Bool( this.is_open_container() ) ) {
				GlobalFuncs.to_chat( user, "It contains:" );

				if ( Lang13.Bool( this.reagents ) && this.reagents.reagent_list.len != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
						R = _a;
						
						GlobalFuncs.to_chat( user, "<span class='info'>" + R.volume + " units of " + R.name + "</span>" );
					}
				} else {
					GlobalFuncs.to_chat( user, "<span class='info'>Nothing</span>" );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( this )) {
				thing = _b;
				
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>" ).A( thing ).item().str( " is jammed into the nozzle!</span>" ).ToString() );
			}
			return null;
		}

	}

}
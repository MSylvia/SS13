// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_DoorAssembly : Obj_Structure {

		public int state = 0;
		public string base_icon_state = "";
		public string base_name = "Airlock";
		public dynamic electronics = null;
		public string airlock_type = "";
		public string glass_type = "/glass";
		public dynamic glass = 0;
		public string created_name = null;
		public bool? busy = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/doors/door_assembly.dmi";
			this.icon_state = "door_as_0";
		}

		// Function from file: door_assembly.dm
		public Obj_Structure_DoorAssembly ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_state();
			return;
		}

		// Function from file: vgstation13.dme
		public void update_state(  ) {
			this.icon_state = "door_as_" + ( this.glass == 1 ? "g" : "" ) + ( this.glass is string ? this.glass : ((dynamic)( this.base_icon_state )) ) + this.state;
			this.name = "";

			switch ((int)( this.state )) {
				case 0:
					
					if ( Lang13.Bool( this.anchored ) ) {
						this.name = "Secured ";
					}
					break;
				case 1:
					this.name = "Wired ";
					break;
				case 2:
					this.name = "Near Finished ";
					break;
			}
			this.name += "" + ( this.glass == 1 ? "Window " : "" ) + ( this.glass is string ? "" + this.glass + " Airlock" : this.base_name ) + " Assembly";
			return;
		}

		// Function from file: door_assembly.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string t = null;
			dynamic WT = null;
			Type M = null;
			Game_Data M2 = null;
			dynamic coil = null;
			dynamic electronic = null;
			dynamic ae = null;
			dynamic S = null;
			dynamic M3 = null;
			Type path = null;
			dynamic door = null;

			
			if ( this.busy == true ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Pen ) {
				t = String13.SubStr( GlobalFuncs.stripped_input( b, "Enter the name for the door.", this.name, this.created_name ), 1, 26 );

				if ( !Lang13.Bool( t ) ) {
					return null;
				}

				if ( !GlobalFuncs.in_range( this, Task13.User ) && this.loc != Task13.User ) {
					return null;
				}
				this.created_name = t;
				return null;
			}

			if ( a is Obj_Item_Weapon_Weldingtool && ( this.glass is string || this.glass == 1 || !Lang13.Bool( this.anchored ) ) ) {
				WT = a;

				if ( Lang13.Bool( WT.remove_fuel( 0, b ) ) ) {
					this.busy = GlobalVars.TRUE;
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder2.ogg", 50, 1 );

					if ( this.glass is string ) {
						((Ent_Static)b).visible_message( "" + b + " welds the " + this.glass + " plating off the airlock assembly.", "You start to weld the " + this.glass + " plating off the airlock assembly." );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							
							if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								this.busy = GlobalVars.FALSE;
								return null;
							}
							GlobalFuncs.to_chat( b, "<span class='notice'>You welded the " + this.glass + " plating off!</span>" );
							M = Lang13.FindClass( "/obj/item/stack/sheet/mineral/" + this.glass );
							Lang13.Call( M, this.loc, 2 );
							this.glass = 0;
						}
					} else if ( this.glass == 1 ) {
						((Ent_Static)b).visible_message( "" + b + " welds the glass panel out of the airlock assembly.", "You start to weld the glass panel out of the airlock assembly." );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							
							if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								this.busy = GlobalVars.FALSE;
								return null;
							}
							GlobalFuncs.to_chat( b, "<span class='notice'>You welded the glass panel out!</span>" );
							new Obj_Item_Stack_Sheet_Glass_Rglass( this.loc );
							this.glass = 0;
						}
					} else if ( !Lang13.Bool( this.anchored ) ) {
						((Ent_Static)b).visible_message( "" + b + " dissassembles the airlock assembly.", "You start to dissassemble the airlock assembly." );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							
							if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
								this.busy = GlobalVars.FALSE;
								return null;
							}
							GlobalFuncs.to_chat( b, "<span class='notice'>You dissasembled the airlock assembly!</span>" );
							M2 = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
							((dynamic)M2).amount = 4;
							GlobalFuncs.qdel( this );
						}
					}
					this.busy = GlobalVars.FALSE;
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You need more welding fuel.</span>" );
					return null;
				}
			} else if ( a is Obj_Item_Weapon_Wrench && this.state == 0 ) {
				this.busy = true;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );

				if ( Lang13.Bool( this.anchored ) ) {
					((Ent_Static)b).visible_message( "" + b + " unsecures the airlock assembly from the floor.", "You start to unsecure the airlock assembly from the floor." );
				} else {
					((Ent_Static)b).visible_message( "" + b + " secures the airlock assembly to the floor.", "You start to secure the airlock assembly to the floor." );
				}

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					GlobalFuncs.to_chat( b, "<span class='notice'>You " + ( Lang13.Bool( this.anchored ) ? "un" : "" ) + "secured the airlock assembly!</span>" );
					this.anchored = !Lang13.Bool( this.anchored );
				}
				this.busy = false;
			} else if ( a is Obj_Item_Stack_CableCoil && this.state == 0 && Lang13.Bool( this.anchored ) ) {
				this.busy = true;
				coil = a;
				((Ent_Static)b).visible_message( "" + b + " wires the airlock assembly.", "You start to wire the airlock assembly." );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					coil.use( 1 );
					this.state = 1;
					GlobalFuncs.to_chat( b, "<span class='notice'>You wire the Airlock!</span>" );
				}
				this.busy = false;
			} else if ( a is Obj_Item_Weapon_Wirecutters && this.state == 1 ) {
				this.busy = true;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 100, 1 );
				((Ent_Static)b).visible_message( "" + b + " cuts the wires from the airlock assembly.", "You start to cut the wires from airlock assembly." );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					GlobalFuncs.to_chat( b, "<span class='notice'>You cut the airlock wires.!</span>" );
					new Obj_Item_Stack_CableCoil( this.loc, 1 );
					this.state = 0;
				}
				this.busy = false;
			} else if ( a is Obj_Item_Weapon_Circuitboard_Airlock && this.state == 1 && a.icon_state != "door_electronics_smoked" ) {
				this.busy = true;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 100, 1 );
				((Ent_Static)b).visible_message( "" + b + " installs the electronics into the airlock assembly.", "You start to install electronics into the airlock assembly." );
				new ByTable().Set( 1, a ).Set( 2, this ).Set( "force_drop", 1 ).Apply( Lang13.BindFunc( b, "drop_item" ) );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					electronic = a;
					electronic.installed = 1;
					GlobalFuncs.to_chat( b, "<span class='notice'>You installed the airlock electronics!</span>" );
					this.state = 2;
					this.name = "Near finished Airlock Assembly";
					this.electronics = a;
				} else {
					a.loc = this.loc;
				}
				this.busy = false;
			} else if ( a is Obj_Item_Weapon_Crowbar && this.state == 2 ) {
				this.busy = true;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 100, 1 );
				((Ent_Static)b).visible_message( "" + b + " removes the electronics from the airlock assembly.", "You start to install electronics into the airlock assembly." );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					GlobalFuncs.to_chat( b, "<span class='notice'>You removed the airlock electronics!</span>" );
					this.state = 1;
					this.name = "Wired Airlock Assembly";

					if ( !Lang13.Bool( this.electronics ) ) {
						ae = new Obj_Item_Weapon_Circuitboard_Airlock( this.loc );
					} else {
						ae = this.electronics;
						this.electronics.installed = 0;
						this.electronics = null;
						ae.loc = this.loc;
					}
				}
				this.busy = false;
			} else if ( a is Obj_Item_Stack_Sheet && !Lang13.Bool( this.glass ) ) {
				S = a;

				if ( Lang13.Bool( S ) ) {
					
					if ( Convert.ToDouble( S.amount ) >= 1 ) {
						this.busy = true;

						if ( S is Obj_Item_Stack_Sheet_Glass_Rglass ) {
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 100, 1 );
							((Ent_Static)b).visible_message( "" + b + " adds " + S.name + " to the airlock assembly.", "You start to install " + S.name + " into the airlock assembly." );

							if ( GlobalFuncs.do_after( b, this, 40 ) ) {
								GlobalFuncs.to_chat( b, "<span class='notice'>You installed reinforced glass windows into the airlock assembly!</span>" );
								S.use( 1 );
								this.glass = 1;
							}
						} else if ( S is Obj_Item_Stack_Sheet_Mineral && Lang13.Bool( S.sheettype ) ) {
							M3 = S.sheettype;

							if ( Convert.ToDouble( S.amount ) >= 2 ) {
								GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 100, 1 );
								((Ent_Static)b).visible_message( "" + b + " adds " + S.name + " to the airlock assembly.", "You start to install " + S.name + " into the airlock assembly." );

								if ( GlobalFuncs.do_after( b, this, 40 ) ) {
									GlobalFuncs.to_chat( b, "<span class='notice'>You installed " + M3 + " plating into the airlock assembly!</span>" );
									S.use( 2 );
									this.glass = "" + M3;
								}
							}
						}
						this.busy = false;
					}
				}
			} else if ( a is Obj_Item_Weapon_Screwdriver && this.state == 2 ) {
				this.busy = true;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 100, 1 );
				GlobalFuncs.to_chat( b, "<span class='notice'>Now finishing the airlock.</span>" );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					
					if ( !( this != null ) ) {
						return null;
					}
					GlobalFuncs.to_chat( b, "<span class='notice'>You finish the airlock!</span>" );

					if ( this.glass is string ) {
						path = Lang13.FindClass( "/obj/machinery/door/airlock/" + this.glass );
					} else if ( this.glass == 1 ) {
						path = Lang13.FindClass( "/obj/machinery/door/airlock" + this.glass_type );
					} else {
						path = Lang13.FindClass( "/obj/machinery/door/airlock" + this.airlock_type );
					}
					door = Lang13.Call( path, this.loc );
					door.assembly_type = this.type;
					door.electronics = this.electronics;
					door.fingerprints.Add( this.fingerprints );
					door.fingerprintshidden.Add( this.fingerprintshidden );
					door.fingerprintslast = b.ckey;

					if ( Lang13.Bool( this.electronics.one_access ) ) {
						door.req_access = null;
						door.req_one_access = this.electronics.conf_access;
					} else {
						door.req_access = this.electronics.conf_access;
					}

					if ( Lang13.Bool( this.created_name ) ) {
						door.name = this.created_name;
					} else {
						door.name = "" + ( this.glass is string ? "" + this.glass + " airlock" : this.base_name );
					}
					this.electronics.loc = door;
					this.electronics.installed = 1;
					GlobalFuncs.qdel( this );
				}
				this.busy = false;
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			this.update_state();
			return null;
		}

	}

}
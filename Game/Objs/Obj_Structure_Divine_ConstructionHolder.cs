// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Divine_ConstructionHolder : Obj_Structure_Divine {

		public Type construction_result = typeof(Obj_Structure_Divine);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.alpha = 125;
			this.constructable = false;
		}

		public Obj_Structure_Divine_ConstructionHolder ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: structures.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( Lang13.Bool( this.metal_cost ) || Lang13.Bool( this.glass_cost ) || Lang13.Bool( this.lesser_gem_cost ) || Lang13.Bool( this.greater_gem_cost ) ) {
				user.WriteMsg( "To finish construction it requires the following materials:" );

				if ( Lang13.Bool( this.metal_cost ) ) {
					user.WriteMsg( "" + this.metal_cost + " metal <IMG CLASS=icon SRC=icons/obj/items.dmi ICONSTATE='sheet-metal'>" );
				}

				if ( Lang13.Bool( this.glass_cost ) ) {
					user.WriteMsg( "" + this.glass_cost + " glass <IMG CLASS=icon SRC=icons/obj/items.dmi ICONSTATE='sheet-glass'>" );
				}

				if ( Lang13.Bool( this.lesser_gem_cost ) ) {
					user.WriteMsg( "" + this.lesser_gem_cost + " lesser gems <IMG CLASS=icon SRC=icons/obj/items.dmi ICONSTATE='sheet-lessergem'>" );
				}

				if ( Lang13.Bool( this.greater_gem_cost ) ) {
					user.WriteMsg( "" + this.greater_gem_cost + " greater gems <IMG CLASS=icon SRC=icons/obj/items.dmi ICONSTATE='sheet-greatergem'>" );
				}
			}
			return 0;
		}

		// Function from file: structures.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic M = null;
			int spend = 0;
			dynamic G = null;
			int spend2 = 0;
			dynamic LG = null;
			int spend3 = 0;
			dynamic GG = null;
			int spend4 = 0;

			
			if ( !Lang13.Bool( A ) || !Lang13.Bool( user ) ) {
				return 0;
			}

			if ( A is Obj_Item_Stack_Sheet_Metal ) {
				M = A;

				if ( Lang13.Bool( this.metal_cost ) ) {
					spend = Num13.MinInt( Convert.ToInt32( this.metal_cost ), Convert.ToInt32( M.amount ) );
					user.WriteMsg( new Txt( "<span class='notice'>You add " ).item( spend ).str( " metal to " ).the( this ).item().str( "." ).ToString() );
					this.metal_cost = Num13.MaxInt( 0, Convert.ToInt32( this.metal_cost - spend ) );
					M.use( spend );
					this.check_completion();
				} else {
					user.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " does not require any more metal!" ).ToString() );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Glass ) {
				G = A;

				if ( Lang13.Bool( this.glass_cost ) ) {
					spend2 = Num13.MinInt( Convert.ToInt32( this.glass_cost ), Convert.ToInt32( G.amount ) );
					user.WriteMsg( new Txt( "<span class='notice'>You add " ).item( spend2 ).str( " glass to " ).the( this ).item().str( "." ).ToString() );
					this.glass_cost = Num13.MaxInt( 0, Convert.ToInt32( this.glass_cost - spend2 ) );
					G.use( spend2 );
					this.check_completion();
				} else {
					user.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " does not require any more glass!" ).ToString() );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Lessergem ) {
				LG = A;

				if ( Lang13.Bool( this.lesser_gem_cost ) ) {
					spend3 = Num13.MinInt( Convert.ToInt32( this.lesser_gem_cost ), Convert.ToInt32( LG.amount ) );
					user.WriteMsg( new Txt( "<span class='notice'>You add " ).item( spend3 ).str( " lesser gems to " ).the( this ).item().str( "." ).ToString() );
					this.lesser_gem_cost = Num13.MaxInt( 0, Convert.ToInt32( this.lesser_gem_cost - spend3 ) );
					LG.use( spend3 );
					this.check_completion();
				} else {
					user.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " does not require any more lesser gems!" ).ToString() );
				}
				return null;
			}

			if ( A is Obj_Item_Stack_Sheet_Greatergem ) {
				GG = A;

				if ( Lang13.Bool( this.greater_gem_cost ) ) {
					spend4 = Num13.MinInt( Convert.ToInt32( this.greater_gem_cost ), Convert.ToInt32( GG.amount ) );
					user.WriteMsg( new Txt( "<span class='notice'>You add " ).item( spend4 ).str( " greater gems to " ).the( this ).item().str( "." ).ToString() );
					this.greater_gem_cost = Num13.MaxInt( 0, Convert.ToInt32( this.greater_gem_cost - spend4 ) );
					GG.use( spend4 );
					this.check_completion();
				} else {
					user.WriteMsg( new Txt( "<span class='notice'>" ).The( this ).item().str( " does not require any more greater gems!" ).ToString() );
				}
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: structures.dm
		public void check_completion(  ) {
			dynamic D = null;

			
			if ( !Lang13.Bool( this.metal_cost ) && !Lang13.Bool( this.glass_cost ) && !Lang13.Bool( this.lesser_gem_cost ) && !Lang13.Bool( this.greater_gem_cost ) ) {
				this.visible_message( new Txt( "<span class='notice'>" ).The( Lang13.Initial( this.construction_result, "name" ) ).item().str( " is complete!</span>" ).ToString() );
				D = Lang13.Call( this.construction_result, GlobalFuncs.get_turf( this ) );
				D.assign_deity( this.deity );
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: structures.dm
		public void setup_construction( Type construct_type = null ) {
			
			if ( construct_type is Type ) {
				this.construction_result = construct_type;
				this.name = "" + Lang13.Initial( this.construction_result, "name" ) + " construction site ";
				this.icon_state = Lang13.Initial( this.construction_result, "icon_state" );
				this.metal_cost = Lang13.Initial( this.construction_result, "metal_cost" );
				this.glass_cost = Lang13.Initial( this.construction_result, "glass_cost" );
				this.lesser_gem_cost = Lang13.Initial( this.construction_result, "lesser_gem_cost" );
				this.greater_gem_cost = Lang13.Initial( this.construction_result, "greater_gem_cost" );
				this.desc = "An unfinished " + Lang13.Initial( this.construction_result, "name" ) + ".";
			}
			return;
		}

		// Function from file: structures.dm
		public override void attack_god( Mob_Camera_God user = null ) {
			
			if ( user.side == this.side && this.construction_result != null ) {
				user.add_faith( 75 );
				this.visible_message( new Txt( "<span class='danger'>" ).item( user ).str( " has cancelled " ).the( Lang13.Initial( this.construction_result, "name" ) ).item().ToString() );
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: structures.dm
		public override bool assign_deity( Mob_Camera_God new_deity = null, int? alert_old_deity = null ) {
			alert_old_deity = alert_old_deity ?? GlobalVars.TRUE;

			
			if ( base.assign_deity( new_deity, alert_old_deity ) ) {
				this.color = this.side;
			}
			return false;
		}

	}

}
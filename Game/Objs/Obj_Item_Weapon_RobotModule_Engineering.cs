// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_RobotModule_Engineering : Obj_Item_Weapon_RobotModule {

		// Function from file: robot_modules.dm
		public Obj_Item_Weapon_RobotModule_Engineering ( dynamic R = null ) : base( (object)(R) ) {
			Obj_Item_Stack_CableCoil W = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.emag = new Obj_Item_Borg_Stun( this );
			this.modules.Add( new Obj_Item_Device_Rcd_Borg_Engineering( this ) );
			this.modules.Add( new Obj_Item_Device_Rcd_Rpd( this ) );
			this.modules.Add( new Obj_Item_Weapon_Extinguisher( this ) );
			this.modules.Add( new Obj_Item_Weapon_Extinguisher_Foam( this ) );
			this.modules.Add( new Obj_Item_Weapon_Weldingtool_Largetank( this ) );
			this.modules.Add( new Obj_Item_Weapon_Screwdriver( this ) );
			this.modules.Add( new Obj_Item_Weapon_Wrench( this ) );
			this.modules.Add( new Obj_Item_Weapon_Crowbar( this ) );
			this.modules.Add( new Obj_Item_Weapon_Wirecutters( this ) );
			this.modules.Add( new Obj_Item_Device_Multitool( this ) );
			this.modules.Add( new Obj_Item_Device_TScanner( this ) );
			this.modules.Add( new Obj_Item_Device_Analyzer( this ) );
			this.modules.Add( new Obj_Item_Taperoll_Atmos( this ) );
			this.modules.Add( new Obj_Item_Taperoll_Engineering( this ) );
			this.modules.Add( new Obj_Item_Device_Rcd_TilePainter( this ) );
			this.modules.Add( new Obj_Item_Device_MaterialSynth_Robot( this ) );
			this.modules.Add( new Obj_Item_Device_SilicateSprayer( this ) );
			this.sensor_augs = new ByTable(new object [] { "Mesons", "Disable" });
			W = new Obj_Item_Stack_CableCoil( this );
			W.amount = 50;
			W.max_amount = 50;
			this.modules.Add( W );
			return;
		}

		// Function from file: robot_modules.dm
		public override bool recharge_consumable( Mob_Living_Silicon_Robot R = null ) {
			dynamic T = null;
			ByTable um = null;
			Obj O = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.modules )) {
				T = _a;
				

				if ( !Lang13.Bool( Lang13.FindIn( T, this.modules ) ) ) {
					this.modules.Remove( null );
				}
			}
			this.recharge_tick++;

			if ( this.recharge_tick < this.recharge_time ) {
				return false;
			}
			this.recharge_tick = 0;

			if ( R != null && Lang13.Bool( R.cell ) ) {
				this.respawn_consumable( R );
				um = R.contents | R.module.modules;

				foreach (dynamic _b in Lang13.Enumerate( um, typeof(Obj) )) {
					O = _b;
					

					if ( O is Obj_Item_Stack_CableCoil ) {
						
						if ( Convert.ToDouble( ((dynamic)O).amount ) < 50 ) {
							((dynamic)O).amount += 1;
							R.cell.use( 50 );
						}

						if ( Convert.ToDouble( ((dynamic)O).amount ) > 50 ) {
							((dynamic)O).amount = 50;
						}
					}
				}
			}
			return false;
		}

		// Function from file: robot_modules.dm
		public override void respawn_consumable( Ent_Static R = null ) {
			ByTable what = null;
			dynamic T = null;
			dynamic O = null;

			what = new ByTable(new object [] { typeof(Obj_Item_Stack_CableCoil) });

			foreach (dynamic _a in Lang13.Enumerate( what )) {
				T = _a;
				

				if ( !Lang13.Bool( Lang13.FindIn( T, this.modules ) ) ) {
					this.modules.Remove( null );
					O = Lang13.Call( T, this );

					if ( O is Obj_Item_Stack_CableCoil ) {
						O.max_amount = 50;
					}
					this.modules.Add( O );
					O.amount = 1;
				}
			}
			return;
		}

	}

}
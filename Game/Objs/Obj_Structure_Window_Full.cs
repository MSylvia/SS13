// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Window_Full : Obj_Structure_Window {

		public string base_state = "window";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.sheetamount = 2;
			this.cracked_base = "fcrack";
			this.icon_state = "window0";
			this.layer = 3.21;
		}

		// Function from file: fullwindow.dm
		public Obj_Structure_Window_Full ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.flags &= 65023;
			return;
		}

		// Function from file: fullwindow.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			int junction = 0;
			Obj_Structure_Window_Full W = null;

			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				if ( !( this != null ) ) {
					return;
				}
				junction = 0;

				if ( Lang13.Bool( this.anchored ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( 1, this ), typeof(Obj_Structure_Window_Full) )) {
						W = _a;
						

						if ( Lang13.Bool( W.anchored ) && W.density ) {
							
							if ( Math.Abs( this.x - W.x ) - Math.Abs( this.y - W.y ) != 0 ) {
								junction |= Map13.GetDistance( this, W );
							}
						}
					}
				}
				this.icon_state = "" + this.base_state + junction;
				return;
				return;
			}));
			return null;
		}

		// Function from file: fullwindow.dm
		public override bool is_fulltile(  ) {
			return true;
		}

		// Function from file: fullwindow.dm
		public override bool can_be_reached( Ent_Static user = null ) {
			return true;
		}

		// Function from file: fullwindow.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( mover is Ent_Dynamic && ((Ent_Static)mover).checkpass( 2 ) != 0 ) {
				return true;
			}
			return false;
		}

		// Function from file: fullwindow.dm
		public override bool CheckExit( Ent_Dynamic mover = null, Ent_Static target = null ) {
			return true;
		}

		// Function from file: adjacent.dm
		public override bool Adjacent( dynamic neighbor = null, dynamic recurse = null ) {
			bool _default = false;

			Obj_Structure_Window W = null;
			Obj_Structure_Window W2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Structure_Window) )) {
				W = _a;
				

				if ( W != null ) {
					W.throwpass = true;
				}
			}
			_default = base.Adjacent( (object)(neighbor), (object)(recurse) );

			foreach (dynamic _b in Lang13.Enumerate( this.loc, typeof(Obj_Structure_Window) )) {
				W2 = _b;
				

				if ( W2 != null ) {
					W2.throwpass = false;
				}
			}
			return _default;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Eftpos : Obj_Item_Device {

		public string machine_id = "";
		public dynamic eftpos_name = "Default EFTPOS scanner";
		public bool transaction_locked = false;
		public bool transaction_paid = false;
		public dynamic transaction_amount = 0;
		public dynamic transaction_purpose = "Default charge";
		public dynamic access_code = 0;
		public Obj_Machinery_AccountDatabase linked_db = null;
		public dynamic linked_account = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "eftpos";
		}

		// Function from file: EFTPOS.dm
		public Obj_Item_Device_Eftpos ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.machine_id = "" + GlobalFuncs.station_name() + " EFTPOS #" + GlobalVars.num_financial_terminals++;
			this.access_code = Rand13.Int( 1111, 111111 );
			this.reconnect_database();
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.print_reference();
				return;
			}));
			this.linked_account = GlobalVars.station_account;
			return;
		}

		// Function from file: EFTPOS.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic attempt_code = null;
			dynamic trycode = null;
			double? attempt_code2 = null;
			dynamic attempt_account_num = null;
			dynamic attempt_pin = null;
			dynamic try_num = null;
			dynamic attempt_code3 = null;
			dynamic I = null;
			dynamic I2 = null;
			dynamic C = null;

			
			if ( Lang13.Bool( href_list["choice"] ) ) {
				
				dynamic _a = href_list["choice"]; // Was a switch-case, sorry for the mess.
				if ( _a=="change_code" ) {
					attempt_code = Interface13.Input( "Re-enter the current EFTPOS access code", "Confirm old EFTPOS code", null, null, null, InputType.Num );

					if ( attempt_code == this.access_code ) {
						trycode = Interface13.Input( "Enter a new access code for this device (4-6 digits, numbers only)", "Enter new EFTPOS code", null, null, null, InputType.Num );

						if ( Convert.ToDouble( trycode ) >= 1000 && Convert.ToDouble( trycode ) <= 999999 ) {
							this.access_code = trycode;
						} else {
							Interface13.Alert( "That is not a valid code!" );
						}
						this.print_reference();
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Incorrect code entered.</span>" ).ToString() );
					}
				} else if ( _a=="change_id" ) {
					attempt_code2 = String13.ParseNumber( Interface13.Input( "Re-enter the current EFTPOS access code", "Confirm EFTPOS code", null, null, null, InputType.Any ) );

					if ( attempt_code2 == this.access_code ) {
						this.eftpos_name = Interface13.Input( "Enter a new terminal ID for this device", "Enter new EFTPOS ID", null, null, null, InputType.Any ) + " EFTPOS scanner";
						this.print_reference();
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Incorrect code entered.</span>" ).ToString() );
					}
				} else if ( _a=="link_account" ) {
					
					if ( !( this.linked_db != null ) ) {
						this.reconnect_database();
					}

					if ( this.linked_db != null ) {
						attempt_account_num = Interface13.Input( "Enter account number to pay EFTPOS charges into", "New account number", null, null, null, InputType.Num );
						attempt_pin = Interface13.Input( "Enter pin code", "Account pin", null, null, null, InputType.Num );
						this.linked_account = this.linked_db.attempt_account_access( attempt_account_num, attempt_pin, 1 );
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Unable to connect to accounts database.</span>" ).ToString() );
					}
				} else if ( _a=="trans_purpose" ) {
					this.transaction_purpose = Interface13.Input( "Enter reason for EFTPOS transaction", "Transaction purpose", null, null, null, InputType.Any );
				} else if ( _a=="trans_value" ) {
					try_num = Interface13.Input( "Enter amount for EFTPOS transaction", "Transaction amount", null, null, null, InputType.Num );

					if ( Convert.ToDouble( try_num ) < 0 ) {
						Interface13.Alert( "That is not a valid amount!" );
					} else {
						this.transaction_amount = try_num;
					}
				} else if ( _a=="toggle_lock" ) {
					
					if ( this.transaction_locked ) {
						attempt_code3 = Interface13.Input( "Enter EFTPOS access code", "Reset Transaction", null, null, null, InputType.Num );

						if ( attempt_code3 == this.access_code ) {
							this.transaction_locked = false;
							this.transaction_paid = false;
						}
					} else if ( Lang13.Bool( this.linked_account ) ) {
						this.transaction_locked = true;
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( " <span class='warning'>No account connected to send transactions to.</span>" ).ToString() );
					}
				} else if ( _a=="scan_card" ) {
					
					if ( !( this.linked_db != null ) ) {
						this.reconnect_database();
					}

					if ( this.linked_db != null && Lang13.Bool( this.linked_account ) ) {
						I = Task13.User.get_active_hand();

						if ( I is Obj_Item_Weapon_Card ) {
							this.scan_card( I );
						}
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Unable to link accounts.</span>" ).ToString() );
					}
				} else if ( _a=="reset" ) {
					I2 = Task13.User.get_active_hand();

					if ( I2 is Obj_Item_Weapon_Card ) {
						C = I2;

						if ( Lang13.Bool( C.access.Contains( ((dynamic)( Lang13.Bool( C.access ) || GlobalVars.access_captain != 0 )).Contains( ((dynamic)( Lang13.Bool( C.access ) || GlobalVars.access_hop != 0 )).Contains( GlobalVars.access_cent_captain ) ) ) ) ) {
							this.access_code = 0;
							GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='info'>Access code reset to 0.</span>" ).ToString() );
						}
					} else if ( I2 is Obj_Item_Weapon_Card_Emag ) {
						this.access_code = 0;
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='info'>Access code reset to 0.</span>" ).ToString() );
					}
				}
			}
			this.attack_self( Task13.User );
			return null;
		}

		// Function from file: EFTPOS.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic I = null;

			
			if ( a is Obj_Item_Weapon_Card ) {
				
				if ( !( this.linked_db != null ) ) {
					this.reconnect_database();
				}

				if ( this.linked_db != null ) {
					
					if ( Lang13.Bool( this.linked_account ) ) {
						I = a;
						this.scan_card( I );
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Unable to connect to linked account.</span>" ).ToString() );
					}
				} else {
					GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Unable to connect to accounts database.</span>" ).ToString() );
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: EFTPOS.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			
			if ( Map13.GetDistance( this, user ) <= 1 ) {
				dat = "<b>" + this.eftpos_name + "</b><br>\n<i>This terminal is</i> " + this.machine_id + ". <i>Report this code when contacting Nanotrasen IT Support</i><br>";

				if ( this.transaction_locked ) {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=toggle_lock'>Reset" ).item( ( this.transaction_paid ? "" : " (authentication required)" ) ).str( "</a><br><br>\n				Transaction purpose: <b>" ).item( this.transaction_purpose ).str( "</b><br>\n				Value: <b>$" ).item( this.transaction_amount ).str( "</b><br>\n				Linked account: <b>" ).item( ( Lang13.Bool( this.linked_account ) ? this.linked_account.owner_name : ((dynamic)( "None" )) ) ).str( "</b><hr>" ).ToString();

					if ( this.transaction_paid ) {
						dat += "<i>This transaction has been processed successfully.</i><hr>";
					} else {
						dat += new Txt( "<i>Swipe your card below the line to finish this transaction.</i><hr>\n					<a href='?src=" ).Ref( this ).str( ";choice=scan_card'>[------]</a>" ).ToString();
					}
				} else {
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";choice=toggle_lock'>Lock in new transaction</a><br><br>\n				Transaction purpose: <a href='?src=" ).Ref( this ).str( ";choice=trans_purpose'>" ).item( this.transaction_purpose ).str( "</a><br>\n				Value: <a href='?src=" ).Ref( this ).str( ";choice=trans_value'>$" ).item( this.transaction_amount ).str( "</a><br>\n				Linked account: <a href='?src=" ).Ref( this ).str( ";choice=link_account'>" ).item( ( Lang13.Bool( this.linked_account ) ? this.linked_account.owner_name : ((dynamic)( "None" )) ) ).str( "</a><hr>\n				<a href='?src=" ).Ref( this ).str( ";choice=change_code'>Change access code</a><br>\n				<a href='?src=" ).Ref( this ).str( ";choice=change_id'>Change EFTPOS ID</a><br>\n				Scan card to reset access code <a href='?src=" ).Ref( this ).str( ";choice=reset'>[------]</a>" ).ToString();
				}
				Interface13.Browse( user, dat, "window=eftpos" );
			} else {
				Interface13.Browse( user, null, "window=eftpos" );
			}
			return null;
		}

		// Function from file: EFTPOS.dm
		public void scan_card( dynamic I = null ) {
			dynamic C = null;
			dynamic attempt_pin = null;
			dynamic D = null;
			Transaction T = null;

			
			if ( I is Obj_Item_Weapon_Card_Id ) {
				C = I;
				this.visible_message( "<span class='info'>" + Task13.User + " swipes a card through " + this + ".</span>" );

				if ( this.transaction_locked && !this.transaction_paid ) {
					
					if ( Lang13.Bool( this.linked_account ) ) {
						attempt_pin = Interface13.Input( "Enter pin code", "EFTPOS transaction", null, null, null, InputType.Num );
						D = this.linked_db.attempt_account_access( C.associated_account_number, attempt_pin, 2 );

						if ( Lang13.Bool( D ) ) {
							
							if ( Convert.ToDouble( this.transaction_amount ) <= ( D.money ??0) ) {
								GlobalFuncs.playsound( this, "sound/machines/chime.ogg", 50, 1 );
								this.visible_message( new Txt().icon( this ).str( " The " ).item( this ).str( " chimes." ).ToString() );
								this.transaction_paid = true;
								D.money -= Convert.ToDouble( this.transaction_amount );
								this.linked_account.money += Convert.ToDouble( this.transaction_amount );
								T = new Transaction();
								T.target_name = "" + this.linked_account.owner_name + " (via " + this.eftpos_name + ")";
								T.purpose = this.transaction_purpose;

								if ( Convert.ToDouble( this.transaction_amount ) > 0 ) {
									T.amount = "(" + this.transaction_amount + ")";
								} else {
									T.amount = "" + this.transaction_amount;
								}
								T.source_terminal = this.machine_id;
								T.date = GlobalVars.current_date_string;
								T.time = GlobalFuncs.worldtime2text();
								D.transaction_log.Add( T );
								T = new Transaction();
								T.target_name = D.owner_name;
								T.purpose = this.transaction_purpose;
								T.amount = "" + this.transaction_amount;
								T.source_terminal = this.machine_id;
								T.date = GlobalVars.current_date_string;
								T.time = GlobalFuncs.worldtime2text();
								this.linked_account.transaction_log.Add( T );
							} else {
								GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>You don't have that much money!</span>" ).ToString() );
							}
						} else {
							GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Unable to access account. Check security settings and try again.</span>" ).ToString() );
						}
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>EFTPOS is not connected to an account.</span>" ).ToString() );
					}
				}
			} else {
				Lang13.SuperCall( I );
			}
			return;
		}

		// Function from file: EFTPOS.dm
		public void reconnect_database(  ) {
			dynamic location = null;
			Obj_Machinery_AccountDatabase DB = null;

			location = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( location ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.account_DBs, typeof(Obj_Machinery_AccountDatabase) )) {
				DB = _a;
				

				if ( DB.z == this.z || DB.z == 1 ) {
					
					if ( !( ( DB.stat & 2 ) != 0 ) && DB.activated ) {
						this.linked_db = DB;
						break;
					}
				}
			}
			return;
		}

		// Function from file: EFTPOS.dm
		public void print_reference(  ) {
			Obj_Item_Weapon_Paper R = null;
			Image stampoverlay = null;
			Obj_Item_Delivery D = null;

			R = new Obj_Item_Weapon_Paper( this.loc );
			R.name = "Reference: " + this.eftpos_name;
			R.info = "<b>" + this.eftpos_name + " reference</b><br><br>\n		Access code: " + this.access_code + "<br><br>\n		<b>Do not lose or misplace this code.</b><br>";
			stampoverlay = new Image( "icons/obj/bureaucracy.dmi" );
			stampoverlay.icon_state = "paper_stamp-cent";

			if ( !( R.stamped != null ) ) {
				R.stamped = new ByTable();
			}
			R.stamped.Add( typeof(Obj_Item_Weapon_Stamp) );
			R.overlays.Add( stampoverlay );
			R.stamps += "<HR><i>This paper has been stamped by the EFTPOS device.</i>";
			D = new Obj_Item_Delivery( R.loc );
			R.loc = D;
			D.wrapped = R;
			D.name = "small parcel - 'EFTPOS access code'";
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_TeleportationScroll : Obj_Item_Weapon {

		public int uses = 4;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.item_state = "paper";
			this.throw_speed = 4;
			this.throw_range = 20;
			this.origin_tech = "bluespace=4";
			this.icon = "icons/obj/wizard.dmi";
			this.icon_state = "scroll";
		}

		public Obj_Item_Weapon_TeleportationScroll ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: scrolls.dm
		public void teleportscroll( Mob user = null ) {
			dynamic A = null;
			Base_Data thearea = null;
			Effect_Effect_System_SmokeSpread smoke = null;
			ByTable L = null;
			dynamic T = null;
			bool clear = false;
			Obj O = null;
			ByTable tempL = null;
			dynamic attempt = null;
			bool success = false;

			A = Interface13.Input( user, "Area to jump to", "BOOYEA", A, GlobalVars.teleportlocs, InputType.Any );
			thearea = GlobalVars.teleportlocs[A];

			if ( !( user != null ) || Lang13.Bool( user.stat ) || user.restrained() ) {
				return;
			}

			if ( !( user == this.loc || GlobalFuncs.in_range( this, user ) && this.loc is Tile ) ) {
				return;
			}
			smoke = new Effect_Effect_System_SmokeSpread();
			smoke.set_up( 5, 0, user.loc );
			smoke.attach( user );
			smoke.start();
			L = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.get_area_turfs( thearea.type ) )) {
				T = _b;
				

				if ( !T.density ) {
					clear = true;

					foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj) )) {
						O = _a;
						

						if ( O.density ) {
							clear = false;
							break;
						}
					}

					if ( clear ) {
						L.Add( T );
					}
				}
			}

			if ( !( L.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "The spell matrix was unable to locate a suitable teleport destination for an unknown reason. Sorry." );
				return;
			}

			if ( user != null && Lang13.Bool( user.locked_to ) ) {
				((Ent_Dynamic)user.locked_to).unlock_atom( user );
			}
			tempL = L;
			attempt = null;
			success = false;

			while (tempL.len != 0) {
				attempt = Rand13.PickFromTable( tempL );
				success = user.Move( attempt );

				if ( !success ) {
					tempL.Remove( attempt );
				} else {
					break;
				}
			}

			if ( !success ) {
				user.loc = Rand13.PickFromTable( L );
			}
			smoke.start();
			this.uses -= 1;
			return;
		}

		// Function from file: scrolls.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			Mob H = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( Task13.User.stat ) || Task13.User.restrained() || this.loc != Task13.User ) {
				return null;
			}
			H = Task13.User;

			if ( !( H is Mob_Living_Carbon_Human ) ) {
				return 1;
			}

			if ( Task13.User == this.loc || GlobalFuncs.in_range( this, Task13.User ) && this.loc is Tile ) {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["spell_teleport"] ) ) {
					
					if ( this.uses >= 1 ) {
						this.teleportscroll( H );
					}
				}
			}

			if ( H != null ) {
				this.attack_self( H );
			}
			return null;
		}

		// Function from file: scrolls.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			((Mob)user).set_machine( this );
			dat = "<B>Teleportation Scroll:</B><BR>";
			dat += "Number of uses: " + this.uses + "<BR>";
			dat += "<HR>";
			dat += "<B>Four uses, use them wisely:</B><BR>";
			dat += new Txt( "<A href='byond://?src=" ).Ref( this ).str( ";spell_teleport=1'>Teleport</A><BR>" ).ToString();
			dat += "Kind regards,<br>Wizards Federation<br><br>P.S. Don't forget to bring your gear, you'll need it to cast most spells.<HR>";
			Interface13.Browse( user, dat, "window=scroll" );
			GlobalFuncs.onclose( user, "scroll" );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Suit_Space_Chronos : Obj_Item_Clothing_Suit_Space {

		public ByTable chronosafe_items = new ByTable(new object [] { typeof(Obj_Item_Weapon_ChronoEraser), typeof(Obj_Item_Weapon_Gun_Energy_ChronoGun) });
		public int hands_nodrop_states = 0;
		public dynamic helmet = null;
		public Obj_Effect_ChronosCam camera = null;
		public Dynamic_Overlay phase_underlay = null;
		public Action_Innate_ChronoTeleport teleport_now = new Action_Innate_ChronoTeleport();
		public bool activating = false;
		public bool activated = false;
		public int cooldowntime = 50;
		public bool teleporting = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "chronosuit";
			this.action_button_name = "Toggle Chronosuit";
			this.armor = new ByTable().Set( "melee", 60 ).Set( "bullet", 60 ).Set( "laser", 60 ).Set( "energy", 60 ).Set( "bomb", 30 ).Set( "bio", 90 ).Set( "rad", 90 );
			this.icon_state = "chronosuit";
		}

		// Function from file: chronosuit.dm
		public Obj_Item_Clothing_Suit_Space_Chronos ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.teleport_now.chronosuit = this;
			this.teleport_now.target = this;
			return;
		}

		// Function from file: chronosuit.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static user = null;

			
			if ( this.activated ) {
				user = this.loc;

				if ( user != null && user is Mob_Living_Carbon_Human && ((dynamic)user).wear_suit == this ) {
					
					if ( this.camera != null && ((dynamic)user).remote_control == this.camera ) {
						
						if ( !this.teleporting ) {
							
							if ( this.camera.loc != user && ( this.camera.x != user.x || this.camera.y != user.y || this.camera.z != user.z ) ) {
								
								if ( this.camera.phase_time <= Game13.time ) {
									this.chronowalk( this.camera );
								}
							} else {
								this.camera.remove_target_ui();
							}
						}
					} else {
						this.new_camera( user );
					}
				}
			} else {
				GlobalVars.SSobj.processing.Remove( this );
			}
			return null;
		}

		// Function from file: chronosuit.dm
		public override double emp_act( int severity = 0 ) {
			Ent_Static user = null;

			user = this.loc;

			switch ((int)( severity )) {
				case 1:
					
					if ( this.activated && user != null && user is Mob_Living_Carbon_Human && ((dynamic)user).wear_suit == this ) {
						((dynamic)user).WriteMsg( "<span class='userdanger'>E:FATAL:RAM_READ_FAIL\nE:FATAL:STACK_EMPTY\nE:FATAL:READ_NULL_POINT\nE:FATAL:PWR_BUS_OVERLOAD</span>" );
					}
					this.deactivate( true, true );
					break;
			}
			return 0;
		}

		// Function from file: chronosuit.dm
		public override dynamic Destroy(  ) {
			this.dropped();
			return base.Destroy();
		}

		// Function from file: chronosuit.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.activated ) {
				this.deactivate();
			}
			base.dropped( (object)(user) );
			return false;
		}

		// Function from file: chronosuit.dm
		public override void ui_action_click(  ) {
			
			if ( this.cooldown <= Game13.time && !this.teleporting && !this.activating ) {
				
				if ( !this.activated ) {
					this.activate();
				} else {
					this.deactivate();
				}
			}
			return;
		}

		// Function from file: chronosuit.dm
		public void deactivate( bool? force = null, bool? silent = null ) {
			force = force ?? false;
			silent = silent ?? false;

			Ent_Static user = null;

			
			if ( this.activated && ( !this.teleporting || force == true ) ) {
				this.activating = true;
				user = this.loc;

				if ( user != null && user is Mob_Living_Carbon_Human ) {
					
					if ( ((dynamic)user).wear_suit == this ) {
						
						if ( !( silent == true ) ) {
							((dynamic)user).WriteMsg( "\nroot@ChronosuitMK4# chronowalk4 --stop\n" );
						}

						if ( this.camera != null ) {
							
							if ( !( silent == true ) ) {
								((dynamic)user).WriteMsg( "[ <span style='color: #ff5500;'>ok</span> ] Sending TERM signal to chronowalk4-view" );
							}
							GlobalFuncs.qdel( this.camera );
						}

						if ( Lang13.Bool( this.helmet ) ) {
							
							if ( !( silent == true ) ) {
								((dynamic)user).WriteMsg( "[ <span style='color: #ff5500;'>ok</span> ] Stopping ui display driver" );
								((dynamic)user).WriteMsg( "[ <span style='color: #ff5500;'>ok</span> ] Stopping brainwave scanner" );
								((dynamic)user).WriteMsg( "[ <span style='color: #ff5500;'>ok</span> ] Unmounting /dev/helmet" );
							}
							this.helmet.flags &= 65533;
							this.helmet.suit = null;
							this.helmet = null;
						}

						if ( !( silent == true ) ) {
							((dynamic)user).WriteMsg( "logout" );
						}
					}
					this.teleport_now.Remove( user );
				}
				this.flags &= 65533;
				this.cooldown = Game13.time + this.cooldowntime * 1.5;
				this.activated = false;
				this.activating = false;
				this.finish_chronowalk();

				if ( this.teleporting && force == true ) {
					new ByTable().Set( 1, 35 ).Set( 2, this ).Set( "safety", 1 ).Apply( Lang13.BindFunc( user, "electrocute_act" ) );
				}
			}
			return;
		}

		// Function from file: chronosuit.dm
		public bool activate(  ) {
			Ent_Static user = null;

			
			if ( !this.activating && !this.activated && !this.teleporting ) {
				this.activating = true;
				user = this.loc;

				if ( user != null && user is Mob_Living_Carbon_Human ) {
					
					if ( ((dynamic)user).wear_suit == this ) {
						((dynamic)user).WriteMsg( "\nChronosuitMK4 login: root" );
						((dynamic)user).WriteMsg( "Password:\n" );
						((dynamic)user).WriteMsg( "root@ChronosuitMK4# chronowalk4 --start\n" );

						if ( Lang13.Bool( ((dynamic)user).head ) && ((dynamic)user).head is Obj_Item_Clothing_Head_Helmet_Space_Chronos ) {
							((dynamic)user).WriteMsg( "[ <span style='color: #00ff00;'>ok</span> ] Mounting /dev/helmet" );
							this.helmet = ((dynamic)user).head;
							this.helmet.flags |= 2;
							this.helmet.suit = this;
							this.flags |= 2;
							((dynamic)user).WriteMsg( "[ <span style='color: #00ff00;'>ok</span> ] Starting brainwave scanner" );
							((dynamic)user).WriteMsg( "[ <span style='color: #00ff00;'>ok</span> ] Starting ui display driver" );
							((dynamic)user).WriteMsg( "[ <span style='color: #00ff00;'>ok</span> ] Initializing chronowalk4-view" );
							this.new_camera( user );
							GlobalVars.SSobj.processing.Or( this );
							this.activated = true;
						} else {
							((dynamic)user).WriteMsg( "[ <span style='color: #ff0000;'>fail</span> ] Mounting /dev/helmet" );
							((dynamic)user).WriteMsg( "<span style='color: #ff0000;'><b>FATAL: </b>Unable to locate /dev/helmet. <b>Aborting...</b>" );
						}
					}
					this.teleport_now.Grant( user );
				}
				this.cooldown = Game13.time + this.cooldowntime;
				this.activating = false;
				return false;
			}
			return false;
		}

		// Function from file: chronosuit.dm
		public Dynamic_Overlay create_phase_underlay( Ent_Static user = null ) {
			Icon user_icon = null;
			Dynamic_Overlay phase = null;

			user_icon = GlobalFuncs.getFlatIcon( user );
			user_icon.Blend( "#ffffff" );
			phase = new Dynamic_Overlay( user.loc );
			phase.icon = user_icon;
			phase.density = true;
			phase.anchored = 1;
			phase.master = user;
			((dynamic)phase).animate_movement = 0;
			phase.alpha = 0;
			phase.mouse_opacity = 0;
			phase.name = user.name;
			phase.transform = user.transform;
			phase.pixel_x = user.pixel_x;
			phase.pixel_y = user.pixel_y;
			return phase;
		}

		// Function from file: chronosuit.dm
		public void chronowalk( Obj_Effect_ChronosCam location = null ) {
			Ent_Static user = null;
			dynamic from_turf = null;
			dynamic to_turf = null;
			double distance = 0;
			double phase_in_ds = 0;
			ByTable nonsafe_slots = null;
			dynamic slot = null;
			dynamic slot_item = null;

			user = this.loc;

			if ( this.activated && !this.teleporting && user != null && user is Mob_Living_Carbon_Human && location != null && user.loc != null && location.loc != null && ((dynamic)user).wear_suit == this && Lang13.Bool( ((dynamic)user).stat ) == false ) {
				this.teleporting = true;
				from_turf = GlobalFuncs.get_turf( user );
				to_turf = GlobalFuncs.get_turf( location );
				distance = GlobalFuncs.cheap_hypotenuse( Convert.ToInt32( from_turf.x ), Convert.ToInt32( from_turf.y ), Convert.ToInt32( to_turf.x ), Convert.ToInt32( to_turf.y ) );
				phase_in_ds = distance * 2;

				if ( this.camera != null ) {
					this.camera.remove_target_ui();
				}

				if ( this.teleport_now.button != null ) {
					this.teleport_now.button.UpdateIcon();
				}
				nonsafe_slots = new ByTable(new object [] { 6, 1, 4, 5 });

				foreach (dynamic _a in Lang13.Enumerate( nonsafe_slots )) {
					slot = _a;
					
					slot_item = ((Mob)user).get_item_by_slot( slot );

					if ( Lang13.Bool( slot_item ) && !this.chronosafe_items.Contains( slot_item.type ) && ((Mob)user).unEquip( slot_item ) ) {
						((dynamic)user).WriteMsg( "<span class='notice'>Your " + slot_item.name + " got left behind.</span>" );
					}
				}
				((dynamic)user).ExtinguishMob();

				if ( Lang13.Bool( ((dynamic)user).buckled ) ) {
					((Ent_Dynamic)((dynamic)user).buckled).unbuckle_mob();
				}
				this.phase_underlay = this.create_phase_underlay( user );
				this.hands_nodrop_states = 0;

				if ( Lang13.Bool( ((dynamic)user).l_hand ) ) {
					this.hands_nodrop_states |= ( Lang13.Bool( ((dynamic)user).l_hand.flags & 2 ) ? true : false ) ?1:0;
					((dynamic)user).l_hand.flags |= 2;
				}

				if ( Lang13.Bool( ((dynamic)user).r_hand ) ) {
					this.hands_nodrop_states |= ( Lang13.Bool( ((dynamic)user).r_hand.flags & 2 ) ? 2 : 0 );
					((dynamic)user).r_hand.flags |= 2;
				}
				((dynamic)user).animate_movement = 0;
				((dynamic)user).changeNext_move( phase_in_ds + 8 );
				((dynamic)user).notransform = 1;
				((dynamic)user).anchored = 1;
				((dynamic)user).Stun( Double.PositiveInfinity );
				Icon13.Animate( new ByTable().Set( 1, user ).Set( "color", "#00ccee" ).Set( "time", 3 ) );
				Task13.Schedule( 3, (Task13.Closure)(() => {
					
					if ( this.teleporting && this.activated && user != null && this.phase_underlay != null && !Lang13.Bool( GlobalFuncs.qdeleted( this.phase_underlay ) ) ) {
						Icon13.Animate( new ByTable().Set( 1, user ).Set( "alpha", 0 ).Set( "time", 2 ) );
						Icon13.Animate( new ByTable().Set( 1, this.phase_underlay ).Set( "alpha", 255 ).Set( "time", 2 ) );
						Task13.Sleep( 2 );

						if ( this.teleporting && this.activated && user != null && this.phase_underlay != null && !Lang13.Bool( GlobalFuncs.qdeleted( this.phase_underlay ) ) ) {
							this.phase_underlay.loc = to_turf;
							user.loc = to_turf;
							Icon13.Animate( new ByTable().Set( 1, user ).Set( "alpha", 255 ).Set( "time", phase_in_ds ) );
							Icon13.Animate( new ByTable().Set( 1, this.phase_underlay ).Set( "alpha", 0 ).Set( "time", phase_in_ds ) );
							Task13.Sleep( ((int)( phase_in_ds )) );

							if ( this.teleporting && this.activated && this.phase_underlay != null && !Lang13.Bool( GlobalFuncs.qdeleted( this.phase_underlay ) ) ) {
								Icon13.Animate( new ByTable().Set( 1, user ).Set( "color", "#ffffff" ).Set( "time", 3 ) );
								Task13.Sleep( 3 );
							}
						}
					}

					if ( this.teleporting && user != null && !Lang13.Bool( GlobalFuncs.qdeleted( user ) ) ) {
						user.loc = to_turf;
						this.finish_chronowalk();
					}
					return;
				}));
			}
			return;
		}

		// Function from file: chronosuit.dm
		public void finish_chronowalk(  ) {
			Ent_Static user = null;

			user = this.loc;

			if ( user is Mob_Living_Carbon_Human ) {
				((dynamic)user).SetStunned( 0 );
				((dynamic)user).next_move = 1;
				user.alpha = 255;
				user.color = "#ffffff";
				((dynamic)user).animate_movement = 1;
				((dynamic)user).notransform = 0;
				((dynamic)user).anchored = 0;
				this.teleporting = false;

				if ( Lang13.Bool( ((dynamic)user).l_hand ) && !( ( this.hands_nodrop_states & 1 ) != 0 ) ) {
					((dynamic)user).l_hand.flags &= 65533;
				}

				if ( Lang13.Bool( ((dynamic)user).r_hand ) && !( ( this.hands_nodrop_states & 2 ) != 0 ) ) {
					((dynamic)user).r_hand.flags &= 65533;
				}

				if ( this.phase_underlay != null && !Lang13.Bool( GlobalFuncs.qdeleted( this.phase_underlay ) ) ) {
					GlobalFuncs.qdel( this.phase_underlay );
					this.phase_underlay = null;
				}

				if ( this.camera != null ) {
					this.camera.remove_target_ui();
					this.camera.loc = user;
				}

				if ( this.teleport_now.button != null ) {
					this.teleport_now.button.UpdateIcon();
				}
			}
			return;
		}

		// Function from file: chronosuit.dm
		public void new_camera( Ent_Static user = null ) {
			
			if ( this.camera != null ) {
				GlobalFuncs.qdel( this.camera );
			}
			this.camera = new Obj_Effect_ChronosCam( user );
			this.camera.holder = user;
			this.camera.chronosuit = this;
			((dynamic)user).remote_control = this.camera;
			return;
		}

	}

}
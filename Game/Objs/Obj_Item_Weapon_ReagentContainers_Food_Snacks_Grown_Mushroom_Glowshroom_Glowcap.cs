// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom_Glowshroom_Glowcap : Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom_Glowshroom {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.seed = typeof(Obj_Item_Seeds_Glowcap);
			this.effect_path = typeof(Obj_Effect_Glowshroom_Glowcap);
			this.icon_state = "glowcap";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom_Glowshroom_Glowcap ( dynamic loc = null, int? new_potency = null ) : base( (object)(loc), new_potency ) {
			
		}

		// Function from file: grown.dm
		public override void On_Consume(  ) {
			bool batteries_recharged = false;
			Obj_Item_Weapon_StockParts_Cell C = null;
			double? newcharge = null;
			Ent_Static O = null;

			
			if ( !Lang13.Bool( this.reagents.total_volume ) ) {
				batteries_recharged = false;

				foreach (dynamic _a in Lang13.Enumerate( Task13.User.GetAllContents(), typeof(Obj_Item_Weapon_StockParts_Cell) )) {
					C = _a;
					
					newcharge = ( this.potency ??0) * ( C.maxcharge ??0) * 0.01;

					if ( ( C.charge ??0) < ( newcharge ??0) ) {
						C.charge = newcharge;

						if ( C.loc is Obj ) {
							O = C.loc;
							((dynamic)O).update_icon();
						}
						batteries_recharged = true;
					}
				}

				if ( batteries_recharged ) {
					Task13.User.WriteMsg( "<span class='notice'>Battery has recovered.</span>" );
				}
			}
			base.On_Consume();
			return;
		}

	}

}
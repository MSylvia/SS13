// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Hecate : Obj_Item_Weapon_Gun_Projectile {

		public int backup_view = 7;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=5;combat=6";
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns_experimental.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns_experimental.dmi" );
			this.recoil = 2;
			this.slot_flags = 1024;
			this.fire_delay = 30;
			this.w_class = 4;
			this.fire_sound = "sound/weapons/hecate_fire.ogg";
			this.caliber = new ByTable().Set( ".50BMG", 1 );
			this.ammo_type = "/obj/item/ammo_casing/BMG50";
			this.max_shells = 1;
			this.slowdown = 10;
			this.icon = "icons/obj/gun_experimental.dmi";
			this.icon_state = "hecate";
		}

		public Obj_Item_Weapon_Gun_Projectile_Hecate ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: sniper.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Lang13.Bool( this.wielded ) ) {
				this.unwield( user );
			} else {
				this.wield( user );
			}
			return null;
		}

		// Function from file: sniper.dm
		public override void update_wield( dynamic user = null ) {
			Client C = null;
			Client C2 = null;

			
			if ( Lang13.Bool( this.wielded ) ) {
				this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns_64x64.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns_64x64.dmi" );

				if ( Lang13.Bool( user ) && Lang13.Bool( user.client ) ) {
					((Mob)user).regenerate_icons();
					C = user.client;
					this.backup_view = C.view;
					C.view = C.view * 2;
				}
			} else {
				this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns_experimental.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns_experimental.dmi" );

				if ( Lang13.Bool( user ) && Lang13.Bool( user.client ) ) {
					((Mob)user).regenerate_icons();
					C2 = user.client;
					C2.view = this.backup_view;
				}
			}
			return;
		}

		// Function from file: sniper.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			struggle = struggle ?? false;

			
			if ( flag == true ) {
				return false;
			}

			if ( this.harm_labeled >= this.min_harm_label ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>A label sticks the trigger to the trigger guard!</span>" );
				return false;
			}

			if ( Lang13.Bool( this.wielded ) ) {
				this.Fire( A, user, _params, null, struggle );
			} else {
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You must dual-wield " ).the( this ).item().str( " before you can fire it!</span>" ).ToString() );
			}
			return false;
		}

		// Function from file: sniper.dm
		public override bool isHandgun(  ) {
			return false;
		}

	}

}
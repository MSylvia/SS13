// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Extinguisher_Foam : Obj_Item_Weapon_Extinguisher {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "foam_extinguisher";
			this.sprite_name = "foam_extinguisher";
			this.icon_state = "foam_extinguisher0";
		}

		public Obj_Item_Weapon_Extinguisher_Foam ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: extinguisher.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic o = null;
			int pack = 0;
			int direction = 0;
			dynamic B = null;
			int? movementdirection = null;
			dynamic T = null;
			Tile T1 = null;
			Tile T2 = null;
			ByTable the_targets = null;
			int? a = null;
			Reagents R = null;
			Obj_Effect_Effect_Foam_Fire W = null;
			dynamic my_target = null;
			int? b = null;
			dynamic oldturf = null;
			Ent_Static atm = null;
			Ent_Static M = null;
			dynamic F = null;

			
			if ( flag == true ) {
				
				if ( A is Obj_Structure_ReagentDispensers_Watertank ) {
					o = A;
					((Reagents)o.reagents).trans_to( this, 50 );
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is now refilled</span>" ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/refill.ogg", 50, 1, -6 );
					return false;
				}
			}

			if ( !this.safety && !Lang13.Bool( this.is_open_container() ) ) {
				
				if ( ( this.reagents.total_volume ??0) < 1 ) {
					pack = GlobalFuncs.pack_check( user, this );

					if ( !( pack != 0 ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>" ).The( this ).item().str( " is empty!</span>" ).ToString() );
						return false;
					} else if ( pack == 1 ) {
						return false;
					}
				}

				if ( Game13.time < this.last_use + 20 ) {
					return false;
				}
				((Mob)user).delayNextAttack( 5, true );
				this.last_use = Game13.time;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/extinguish.ogg", 75, 1, -3 );
				direction = Map13.GetDistance( this, A );

				if ( Lang13.Bool( Task13.User.locked_to ) && Task13.User.locked_to is Obj && !Lang13.Bool( Task13.User.locked_to.anchored ) ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						B = Task13.User.locked_to;
						movementdirection = Num13.Rotate( direction, 180 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 1 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 2 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 2 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						Task13.Sleep( 3 );
						B.Move( Map13.GetStep( Task13.User, movementdirection ??0 ), movementdirection );
						return;
					}));
				}
				T = GlobalFuncs.get_turf( A );
				T1 = Map13.GetStep( T, Num13.Rotate( direction, 90 ) );
				T2 = Map13.GetStep( T, Num13.Rotate( direction, -90 ) );
				the_targets = new ByTable(new object [] { T, T1, T2 });
				a = null;
				a = 0;

				while (( a ??0) < 5) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						R = new Reagents( 5 );
						R.my_atom = this;
						((Reagents)this.reagents).trans_to_holder( R, 1 );
						W = new Obj_Effect_Effect_Foam_Fire( GlobalFuncs.get_turf( this ), R );
						my_target = Rand13.PickFromTable( the_targets );

						if ( !( W != null ) || !( this != null ) ) {
							return;
						}
						b = null;
						b = 0;

						while (( b ??0) < 5) {
							oldturf = GlobalFuncs.get_turf( W );
							Map13.StepTowardsSimple( W, my_target );

							if ( !( W != null ) || !Lang13.Bool( W.reagents ) ) {
								return;
							}
							((Reagents)W.reagents).reaction( GlobalFuncs.get_turf( W ), GlobalVars.TOUCH );

							foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_turf( W ), typeof(Ent_Static) )) {
								atm = _a;
								

								if ( !( W != null ) ) {
									return;
								}
								((Reagents)W.reagents).reaction( atm, GlobalVars.TOUCH );

								if ( ((Reagents)W.reagents).has_reagent( "water" ) ) {
									
									if ( atm is Mob_Living ) {
										M = atm;
										((dynamic)M).ExtinguishMob();
									}

									if ( atm.on_fire ) {
										atm.extinguish();
									}

									if ( atm.molten ) {
										atm.molten = false;
										atm.solidify();
									}
								}
							}
							F = Lang13.FindIn( typeof(Obj_Effect_Effect_Foam_Fire), oldturf );

							if ( !( F is Obj_Effect_Effect_Foam_Fire ) && oldturf != GlobalFuncs.get_turf( this ) ) {
								F = new Obj_Effect_Effect_Foam_Fire( GlobalFuncs.get_turf( oldturf ), W.reagents );
							}

							if ( W.loc == my_target ) {
								break;
							}
							Task13.Sleep( 2 );
							b++;
						}
						return;
					}));
					a++;
				}

				if ( user.loc is Tile_Space || user.areaMaster.has_gravity == false ) {
					user.inertia_dir = Map13.GetDistance( A, user );
					Map13.Step( user, Convert.ToInt32( user.inertia_dir ) );
				}
			} else {
				return base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Effect_Foam : Obj_Effect_Effect {

		public int amount = 3;
		public bool expand = true;
		public dynamic metal = 0;
		public double? lowest_temperature = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon_state = "foam";
			this.layer = 3.9;
		}

		// Function from file: effect_system.dm
		public Obj_Effect_Effect_Foam ( dynamic loc = null, dynamic ismetal = null ) : base( (object)(loc) ) {
			ismetal = ismetal ?? 0;

			Obj_Structure_Foamedmetal M = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_state = "" + ( Lang13.Bool( ismetal ) ? "m" : "" ) + "foam";
			this.metal = ismetal;
			GlobalFuncs.playsound( this, "sound/effects/bubbles2.ogg", 80, 1, -3 );
			Task13.Schedule( Convert.ToInt32( this.metal * 3 + 3 ), (Task13.Closure)(() => {
				this.process();
				return;
			}));
			Task13.Schedule( 120, (Task13.Closure)(() => {
				GlobalVars.processing_objects.Remove( this );
				Task13.Sleep( 30 );

				if ( Lang13.Bool( this.metal ) ) {
					M = new Obj_Structure_Foamedmetal( this.loc );
					M.metal = this.metal;
					M.updateicon();
				}
				Icon13.Flick( "" + this.icon_state + "-disolve", this );
				Task13.Sleep( 5 );
				GlobalFuncs.qdel( this );
				return;
			}));
			return;
		}

		// Function from file: effect_system.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic M = null;
			Ent_Dynamic M2 = null;

			
			if ( Lang13.Bool( this.metal ) ) {
				return null;
			}

			if ( this is Obj_Effect_Effect_Foam_Fire ) {
				
				if ( O is Mob_Living ) {
					M = O;
					((Reagents)this.reagents).reaction( M );
				}
				return null;
			}

			if ( O is Mob_Living_Carbon ) {
				M2 = O;

				if ( Lang13.Bool( ((dynamic)M2).Slip( 5, 2, 1 ) ) ) {
					GlobalFuncs.to_chat( M2, "<span class='notice'>You slipped on the foam!</span>" );
				}
			}
			return null;
		}

		// Function from file: effect_system.dm
		public override bool fire_act( GasMixture air = null, double? exposed_temperature = null, int exposed_volume = 0 ) {
			
			if ( !Lang13.Bool( this.metal ) && Rand13.PercentChance( Num13.MaxInt( 0, ((int)( ( exposed_temperature ??0) - 475 )) ) ) ) {
				Icon13.Flick( "" + this.icon_state + "-disolve", this );
				Task13.Schedule( 5, (Task13.Closure)(() => {
					GlobalFuncs.qdel( this );
					return;
				}));
			}
			return false;
		}

		// Function from file: effect_system.dm
		public override dynamic process(  ) {
			dynamic direction = null;
			Tile T = null;
			dynamic F = null;
			Reagent R = null;

			
			if ( --this.amount < 0 ) {
				return null;
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.cardinal )) {
				direction = _b;
				
				T = Map13.GetStep( this, Convert.ToInt32( direction ) );

				if ( !( T != null ) ) {
					continue;
				}

				if ( !T.Enter( this ) ) {
					continue;
				}
				F = Lang13.FindIn( typeof(Obj_Effect_Effect_Foam), T );

				if ( Lang13.Bool( F ) ) {
					continue;
				}
				F = new Obj_Effect_Effect_Foam( T, this.metal );
				F.amount = this.amount;

				if ( !Lang13.Bool( this.metal ) ) {
					((Ent_Static)F).create_reagents( 10 );

					if ( Lang13.Bool( this.reagents ) ) {
						
						foreach (dynamic _a in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
							R = _a;
							
							((Reagents)F.reagents).add_reagent( R.id, 1 );
						}
					}
				}
			}
			return null;
		}

		// Function from file: effect_system.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Ent_Static A = null;

			
			if ( !Lang13.Bool( this.metal ) && Lang13.Bool( this.reagents ) && !( this is Obj_Effect_Effect_Foam_Fire ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInViewExcludeThis( this, 0 ), typeof(Ent_Static) )) {
					A = _a;
					

					if ( A == this ) {
						continue;
					}
					((Reagents)this.reagents).reaction( A, 1, 1 );
				}
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Crate_Flatpack : Obj_Structure_Closet_Crate {

		public dynamic machine = null;
		public bool assembling = false;
		public ByTable stacked = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/machines/flatpack.dmi";
			this.icon_state = "flatpack";
		}

		// Function from file: flatpack.dm
		public Obj_Structure_Closet_Crate_Flatpack ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_state = "flatpack";
			return;
		}

		// Function from file: flatpack.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			Ent_Static stacking = null;

			
			if ( O is Obj_Structure_Closet_Crate_Flatpack && O != this ) {
				stacking = O;

				if ( this.stacked.len + ((dynamic)stacking).stacked.len + 2 >= 6 ) {
					GlobalFuncs.to_chat( user, "You can't stack flatpacks that high." );
					return false;
				}
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " adds " ).item( ((dynamic)stacking).stacked.len + 1 ).str( " flatpack" ).s().str( " to the stack." ).ToString(), new Txt( "You add " ).item( ((dynamic)stacking).stacked.len + 1 ).str( " flatpack" ).s().str( " to the stack." ).ToString() );
				this.add_stack( stacking );
				return true;
			}
			return false;
		}

		// Function from file: flatpack.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			ByTable params_list = null;
			int? clicked_index = null;
			dynamic bottom_pack = null;
			ByTable removed_packs = null;
			int? i = null;
			dynamic above = null;
			Obj_Structure_Closet_Crate_Flatpack newpack = null;

			
			if ( Lang13.Bool( b ) && this.stacked.len != 0 ) {
				params_list = String13.ParseUrlParams( b );
				clicked_index = Num13.Floor( ( ( String13.ParseNumber( params_list["icon-y"] ) ??0) - 4 ) / 4 );

				if ( clicked_index == 0 ) {
					return null;
				}
				clicked_index = ( ( clicked_index ??0) <= 1 ? 1 : ( ( clicked_index ??0) >= this.stacked.len ? this.stacked.len : clicked_index ) );
				bottom_pack = Lang13.FindObj( this.stacked[clicked_index] );
				removed_packs = new ByTable();
				i = null;
				i = this.stacked.len;

				while (( i ??0) > ( clicked_index ??0)) {
					above = Lang13.FindObj( this.stacked[i] );
					removed_packs.Add( above );
					this.remove_stack( above );
					i--;
				}
				this.remove_stack( bottom_pack );
				((Ent_Dynamic)bottom_pack).forceMove( GlobalFuncs.get_turf( a ) );

				foreach (dynamic _a in Lang13.Enumerate( removed_packs, typeof(Obj_Structure_Closet_Crate_Flatpack) )) {
					newpack = _a;
					
					((Obj_Structure_Closet_Crate_Flatpack)bottom_pack).add_stack( newpack );
				}
				((Ent_Static)a).visible_message( new Txt().item( a ).str( " removes the top " ).item( bottom_pack.stacked.len + 1 ).str( " flatpack" ).s().str( " from the stack." ).ToString(), new Txt( "You remove the top " ).item( bottom_pack.stacked.len + 1 ).str( " flatpack" ).s().str( " from the stack." ).ToString() );
				return 1;
			}
			return null;
		}

		// Function from file: flatpack.dm
		public void remove_stack( dynamic flatpack = null ) {
			dynamic oldimage = null;

			
			if ( flatpack == null ) {
				return;
			}
			Interface13.Stat( null, this.stacked.Contains( new Txt().Ref( flatpack ).ToString() ) );

			if ( !( flatpack == null ) ) {
				return;
			}
			oldimage = this.stacked[new Txt().Ref( flatpack ).ToString()];
			this.overlays.Remove( oldimage );
			this.stacked.Remove( new Txt().Ref( flatpack ).ToString() );
			this.update_icon();
			return;
		}

		// Function from file: flatpack.dm
		public void add_stack( dynamic flatpack = null ) {
			Image flatimage = null;
			ByTable flatpack_stacked = null;
			dynamic stackedpack = null;
			dynamic newpack = null;

			
			if ( !Lang13.Bool( flatpack ) ) {
				return;
			}
			flatpack.loc = this;
			flatimage = new Image( flatpack.icon, null, flatpack.icon_state );
			this.stacked.Add( new ByTable().Set( new Txt().Ref( flatpack ).ToString(), flatimage ) );
			flatimage.pixel_y = this.stacked.len * 4;
			this.overlays.Add( flatimage );

			if ( flatpack.stacked.len != 0 ) {
				flatpack_stacked = flatpack.stacked.Copy();

				foreach (dynamic _a in Lang13.Enumerate( flatpack_stacked )) {
					stackedpack = _a;
					
					newpack = Lang13.FindObj( stackedpack );
					((Obj_Structure_Closet_Crate_Flatpack)flatpack).remove_stack( newpack );
					this.add_stack( newpack );
				}
			}
			return;
		}

		// Function from file: flatpack.dm
		public void Finalize(  ) {
			Ent_Dynamic AM = null;

			this.machine.loc = GlobalFuncs.get_turf( this );
			((Obj_Machinery)this.machine).RefreshParts();

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Ent_Dynamic) )) {
				AM = _a;
				
				AM.loc = GlobalFuncs.get_turf( this );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: flatpack.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Crowbar && !this.assembling ) {
				
				if ( this.stacked.len != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='rose'>You can't open this flatpack while others are stacked on top of it!</span>" );
					return null;
				}
				this.assembling = true;
				((Ent_Static)b).visible_message( "<span class='notice'>" + b + " begins to open the flatpack...</span>", "<span class='notice'>You begin to open the flatpack...</span>" );

				if ( GlobalFuncs.do_after( b, this, Rand13.Int( 10, 40 ) ) ) {
					
					if ( Lang13.Bool( this.machine ) ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'> " ).icon( this ).str( "You successfully unpack " ).the( this.machine ).item().str( "!</span>" ).ToString() );
						((Ent_Dynamic)this.machine).forceMove( this.loc );
						this.machine = null;
						GlobalFuncs.qdel( this );
					} else {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'> " ).icon( this ).str( "It seems this " ).item( this ).str( " was empty...</span>" ).ToString() );
						GlobalFuncs.qdel( this );
					}
				}
				this.assembling = false;
				return null;
			}
			return null;
		}

		// Function from file: flatpack.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			ByTable check_accesses = null;
			double? i = null;
			ByTable access_overlap = null;
			double i2 = 0;
			dynamic stack_image = null;

			this.icon_state = "flatpack";

			if ( Lang13.Bool( this.machine ) ) {
				check_accesses = this.machine.req_access | this.machine.req_one_access;

				if ( check_accesses != null && check_accesses.len != 0 ) {
					
					foreach (dynamic _b in Lang13.IterateRange( 1, 4 )) {
						i = _b;
						
						access_overlap = check_accesses & GlobalFuncs.get_region_accesses( i );

						if ( access_overlap.len != 0 ) {

							switch ((int?)(i)) {
								case 1:
									this.icon_state = "flatpacksec";
									break;
								case 2:
									this.icon_state = "flatpackmed";
									break;
								case 3:
									this.icon_state = "flatpacksci";
									break;
								case 4:
									this.icon_state = "flatpackeng";
									break;
							}
							break;
						}
					}
				}
			} else if ( this.stacked.len != 0 ) {
				
				foreach (dynamic _c in Lang13.IterateRange( 1, this.stacked.len )) {
					i2 = _c;
					
					stack_image = this.stacked[this.stacked[i2]];
					this.overlays.Remove( stack_image );
					stack_image.pixel_y = i2 * 4;
					this.overlays.Add( stack_image );
				}
			}
			return null;
		}

		// Function from file: flatpack.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic stackpack = null;

			base.examine( (object)(user), size );

			if ( this.stacked.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.stacked )) {
					stackpack = _a;
					
					GlobalFuncs.to_chat( user, new Txt( "There's " ).a( Lang13.FindObj( stackpack ) ).item().str( " stacked on top of it." ).ToString() );
				}
			}
			return null;
		}

	}

}
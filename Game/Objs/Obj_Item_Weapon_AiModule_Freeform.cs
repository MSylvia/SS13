// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_AiModule_Freeform : Obj_Item_Weapon_AiModule {

		public dynamic priority = 1;
		public int allowed_priority_min = 15;
		public int allowed_priority_max = 50;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.modname = "Freeform";
			this.origin_tech = "programming=4;materials=4";
		}

		public Obj_Item_Weapon_AiModule_Freeform ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: freeform.dm
		public override bool validate( dynamic laws = null, Obj_Item_Weapon_PlanningFrame target = null, Mob sender = null ) {
			
			if ( !Lang13.Bool( this.law ) ) {
				
				if ( sender != null ) {
					GlobalFuncs.to_chat( sender, "No law detected on module, please create one." );
				}
				return false;
			}
			return base.validate( (object)(laws), target, sender );
		}

		// Function from file: freeform.dm
		public override bool upload( dynamic laws = null, dynamic target = null, dynamic sender = null, bool? notify_target = null ) {
			notify_target = notify_target ?? false;

			base.upload( (object)(laws), (object)(target), (object)(sender), notify_target );

			if ( ( !Lang13.Bool( this.priority ) || Convert.ToDouble( this.priority ) < this.allowed_priority_min ) && !( this.priority == -2 || this.priority == -1 || this.priority == 0 ) ) {
				this.priority = this.allowed_priority_min;
			}
			((AiLaws)laws).add_law( this.priority, this.law );
			GlobalVars.lawchanges.Add( "The law was '" + this.law + "'" );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + this.fmtSubject( sender ) + " added law \"" + this.law + "\" to " + this.fmtSubject( target ) ) ) );
			return true;
		}

		// Function from file: freeform.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic lawpos = null;

			base.attack_self( (object)(user), (object)(flag), emp );

			if ( Convert.ToDouble( this.priority ) > 0 ) {
				lawpos = this.allowed_priority_min;

				while (true) {
					lawpos = Interface13.Input( "Please enter the priority for your new law. Can only write to law sectors " + this.allowed_priority_min + " - " + this.allowed_priority_max + ".", "Law Priority (15+)", lawpos, null, null, InputType.Num );

					if ( this.allowed_priority_min > 0 && Convert.ToDouble( lawpos ) < this.allowed_priority_min ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>Desired law sector is too low.</span>" );
						continue;
					}

					if ( this.allowed_priority_max > 0 && Convert.ToDouble( lawpos ) > this.allowed_priority_max ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>Desired law sector is too high.</span>" );
						continue;
					}
					this.priority = lawpos;
					GlobalFuncs.to_chat( user, "<span class='notice'>Target law sector set to " + this.priority + ".</span>" );
					break;
				}
			}
			this.law = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( Task13.User, "Please enter a new law for the AI.", "Freeform Law Entry", this.law, null, InputType.Any ) ), 1, 1024 );
			this.updateLaw();
			return null;
		}

		// Function from file: freeform.dm
		public override dynamic copy(  ) {
			dynamic clone = null;

			clone = base.copy();
			clone.law = this.law;
			clone.priority = this.priority;
			return clone;
		}

		// Function from file: freeform.dm
		public override void updateLaw(  ) {
			this.desc = new Txt().A( this.name ).str( "'" ).item().str( "' " ).item( this.modtype ).str( ": " ).ToString();

			if ( Convert.ToDouble( this.priority ) > 0 && Convert.ToDouble( this.priority ) > this.allowed_priority_min ) {
				this.desc += "(" + this.priority + ") ";
			}

			if ( !Lang13.Bool( this.law ) ) {
				this.desc += "<No law set>";
			} else {
				this.desc += "'" + this.law + "'";
			}
			return;
		}

	}

}
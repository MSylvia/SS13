// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_ReadWrite : Obj_Item_Device_Assembly {

		public dynamic stored_num = 0;
		public dynamic stored_txt = "NULL";
		public dynamic READ = null;
		public dynamic READ_value = "";
		public dynamic WRITE = null;
		public dynamic WRITE_value = "";
		public ByTable device_pool = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.starting_materials = new ByTable().Set( "$iron", 130 ).Set( "$glass", 50 );
			this.origin_tech = "programming=1";
			this.wires = 1;
			this.connection_text = "connected to";
			this.accessible_values = new ByTable().Set( "Stored number", "stored_num;number" ).Set( "Stored string", "stored_txt;text" );
			this.icon_state = "circuit_write";
		}

		public Obj_Item_Device_Assembly_ReadWrite ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: write.dm
		public override void disconnected( dynamic A = null, bool? in_frame = null ) {
			base.disconnected( (object)(A), in_frame );
			this.device_pool.Remove( A );

			if ( this.READ == A ) {
				this.READ = null;
			}

			if ( this.WRITE == A ) {
				this.WRITE = null;
			}
			return;
		}

		// Function from file: write.dm
		public override void connected( dynamic A = null, bool? in_frame = null ) {
			base.connected( (object)(A), in_frame );
			this.device_pool.Or( A );
			return;
		}

		// Function from file: write.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic choice = null;
			dynamic choice2 = null;
			dynamic choice3 = null;
			dynamic A = null;
			dynamic new_value = null;
			dynamic choice4 = null;
			dynamic A2 = null;
			dynamic new_value2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["set_num_value"] ) ) {
				choice = Interface13.Input( Task13.User, new Txt( "Select a new numeric value to be stored in " ).the( this ).item().str( "." ).ToString(), new Txt().The( this ).item().ToString(), null, null, InputType.Num | InputType.Null );

				if ( choice == null ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
					return null;
				}
				this.stored_num = choice;
			}

			if ( Lang13.Bool( href_list["set_txt_value"] ) ) {
				choice2 = Interface13.Input( Task13.User, new Txt( "Select a new string value to be stored in " ).the( this ).item().str( "." ).ToString(), new Txt().The( this ).item().ToString(), null, null, InputType.Str | InputType.Null );

				if ( choice2 == null ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
					return null;
				}
				this.stored_txt = choice2;
			}

			if ( Lang13.Bool( href_list["set_read"] ) ) {
				choice3 = Interface13.Input( Task13.User, new Txt( "Select a new READ assembly for " ).the( this ).item().str( "." ).ToString(), new Txt().The( this ).item().ToString(), null, this.device_pool + "Nothing", InputType.Null | InputType.Any );

				if ( choice3 == null ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
					return null;
				}
				A = choice3;
				new_value = Interface13.Input( Task13.User, new Txt( "Select which of " ).the( A ).item().str( "'s values will be read." ).ToString(), new Txt().The( this ).item().ToString(), null, A.accessible_values, InputType.Null | InputType.Any );

				if ( new_value == null ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
					return null;
				}

				if ( choice3 == "Nothing" ) {
					this.READ = null;
					GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='info'>" ).The( this ).item().str( " will no longer read anything.</span>" ).ToString() );
				} else {
					
					if ( !( this.device_pool.Find( choice3 ) != 0 ) ) {
						return null;
					}
					this.READ = choice3;
					this.READ_value = new_value;
					GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='info'>" ).The( this ).item().str( " will now read " ).item( A ).str( "'s " ).item( new_value ).str( ".</span>" ).ToString() );
				}
			}

			if ( Lang13.Bool( href_list["set_write"] ) ) {
				choice4 = Interface13.Input( Task13.User, new Txt( "Select a new WRITE assembly for " ).the( this ).item().str( "." ).ToString(), new Txt().The( this ).item().ToString(), null, this.device_pool + "Nothing", InputType.Null | InputType.Any );

				if ( choice4 == null ) {
					return null;
				}

				if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
					return null;
				}

				if ( choice4 == "Nothing" ) {
					this.WRITE = null;
					GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='info'>" ).The( this ).item().str( " will no longer write to anything.</span>" ).ToString() );
				} else {
					A2 = choice4;
					new_value2 = Interface13.Input( Task13.User, new Txt( "Select which of " ).the( A2 ).item().str( "'s values will be written to." ).ToString(), new Txt().The( this ).item().ToString(), null, A2.accessible_values, InputType.Null | InputType.Any );

					if ( new_value2 == null ) {
						return null;
					}

					if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
						return null;
					}

					if ( !( this.device_pool.Find( choice4 ) != 0 ) ) {
						return null;
					}
					this.WRITE = choice4;
					this.WRITE_value = new_value2;
					GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='info'>" ).The( this ).item().str( " will now write to " ).item( A2 ).str( "'s " ).item( new_value2 ).str( ".</span>" ).ToString() );
				}
			}

			if ( Task13.User != null ) {
				this.attack_self( Task13.User );
			}
			return null;
		}

		// Function from file: write.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			Browser popup = null;

			dat = "";
			dat += new Txt( "<p><b>READ</b>: <a href='?src=" ).Ref( this ).str( ";set_read=1'>" ).item( ( Lang13.Bool( this.READ ) ? "" + this.READ + " (" + this.READ_value + ")" : "nothing" ) ).str( "</a></p>" ).ToString();
			dat += new Txt( "<p><b>WRITE</b>: <a href='?src=" ).Ref( this ).str( ";set_write=1'>" ).item( ( Lang13.Bool( this.WRITE ) ? "" + this.WRITE + " (" + this.WRITE_value + ")" : "nothing" ) ).str( "</a></p><hr>" ).ToString();
			dat += new Txt( "<p>Stored value 1 (number): " ).item( this.stored_num ).str( " (<a href='?src=" ).Ref( this ).str( ";set_num_value=1'>change</a>)</p>" ).ToString();
			dat += new Txt( "<p>Stored value 2 (text): " ).item( this.stored_txt ).str( " (<a href='?src=" ).Ref( this ).str( ";set_txt_value=1'>change</a>)</p>" ).ToString();
			popup = new Browser( user, "circuit4", "" + this, 500, 300, this );
			popup.set_content( dat );
			popup.open();
			GlobalFuncs.onclose( user, "circuit4" );
			return null;
		}

		// Function from file: write.dm
		public override bool activate(  ) {
			dynamic value = null;
			ByTable W_params = null;

			
			if ( !base.activate() ) {
				return false;
			}

			if ( Lang13.Bool( this.READ ) && Lang13.Bool( this.READ_value ) ) {
				value = this.READ.get_value( this.READ_value );

				if ( value is string ) {
					this.stored_num = String13.ParseNumber( value );
					this.stored_txt = value;
				} else if ( Lang13.Bool( Lang13.IsNumber( value ) ) ) {
					this.stored_num = value;
					this.stored_txt = String13.NumberToString( Convert.ToDouble( value ) );
				}
			}

			if ( Lang13.Bool( this.WRITE ) && Lang13.Bool( this.WRITE_value ) ) {
				W_params = String13.ParseUrlParams( this.WRITE.accessible_values[this.WRITE_value] );

				dynamic _a = W_params[2]; // Was a switch-case, sorry for the mess.
				if ( _a=="text" ) {
					((Obj_Item_Device_Assembly)this.WRITE).write_to_value( this.WRITE_value, this.stored_txt );
				} else if ( _a=="number" ) {
					((Obj_Item_Device_Assembly)this.WRITE).write_to_value( this.WRITE_value, this.stored_num );
				}
			}
			return false;
		}

	}

}
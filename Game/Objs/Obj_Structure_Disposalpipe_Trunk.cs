// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Disposalpipe_Trunk : Obj_Structure_Disposalpipe {

		public dynamic linked = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "pipe-t";
		}

		// Function from file: disposal-structures.dm
		public Obj_Structure_Disposalpipe_Trunk ( dynamic loc = null, Game_Data make_from = null ) : base( (object)(loc), make_from ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.dpdir = this.dir;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.getlinked();
				return;
			}));
			this.update();
			return;
		}

		// Function from file: disposal-structures.dm
		public override double? nextdir( int fromdir = 0, double? sortTag = null ) {
			
			if ( fromdir == GlobalVars.DOWN ) {
				return this.dir;
			} else {
				return 0;
			}
		}

		// Function from file: disposal-structures.dm
		public override Obj_Structure_Disposalpipe transfer( Obj_Structure_Disposalholder H = null ) {
			dynamic O = null;
			dynamic D = null;

			
			if ( H.dir == GlobalVars.DOWN ) {
				return base.transfer( H );
			}

			if ( Lang13.Bool( this.linked ) ) {
				O = this.linked;

				if ( O is Obj_Structure_Disposaloutlet && H != null ) {
					((Obj_Structure_Disposaloutlet)O).expel( H );
				} else {
					D = this.linked;

					if ( H != null ) {
						D.expel( H );
					}
				}
			} else if ( H != null ) {
				this.expel( H, GlobalFuncs.get_turf( this ), 0 );
			}
			return null;
		}

		// Function from file: disposal-structures.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;
			Ent_Static T = null;
			dynamic W = null;

			C = Lang13.FindIn( typeof(Obj_Structure_Disposalconstruct), this.loc );

			if ( Lang13.Bool( C ) && Lang13.Bool( C.anchored ) ) {
				return null;
			}
			T = this.loc;

			if ( Lang13.Bool( ((dynamic)T).intact ) ) {
				return null;
			}
			this.add_fingerprint( user );

			if ( A is Obj_Item_Weapon_Weldingtool ) {
				W = A;

				if ( Lang13.Bool( this.linked ) ) {
					user.WriteMsg( "<span class='warning'>You need to deconstruct disposal machinery above this pipe!</span>" );
					return null;
				}

				if ( ((Obj_Item_Weapon_Weldingtool)W).remove_fuel( 0, user ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 100, 1 );
					user.WriteMsg( "<span class='notice'>You start slicing the disposal pipe...</span>" );

					if ( GlobalFuncs.do_after( user, 30 / A.toolspeed, null, this ) ) {
						
						if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)W).isOn() ) {
							return null;
						}
						this.Deconstruct();
						user.WriteMsg( "<span class='notice'>You slice the disposal pipe.</span>" );
					}
				} else {
					return null;
				}
			}
			return null;
		}

		// Function from file: disposal-structures.dm
		public void getlinked(  ) {
			dynamic D = null;
			dynamic O = null;

			this.linked = null;
			D = Lang13.FindIn( typeof(Obj_Machinery_Disposal), this.loc );

			if ( Lang13.Bool( D ) ) {
				this.linked = D;

				if ( !Lang13.Bool( D.trunk ) ) {
					D.trunk = this;
				}
			}
			O = Lang13.FindIn( typeof(Obj_Structure_Disposaloutlet), this.loc );

			if ( Lang13.Bool( O ) ) {
				this.linked = O;
			}
			this.update();
			return;
		}

		// Function from file: disposal-structures.dm
		public override dynamic Destroy(  ) {
			dynamic D = null;
			dynamic D2 = null;

			
			if ( Lang13.Bool( this.linked ) ) {
				
				if ( this.linked is Obj_Structure_Disposaloutlet ) {
					D = this.linked;
					D.trunk = null;
				} else if ( this.linked is Obj_Machinery_Disposal ) {
					D2 = this.linked;
					D2.trunk = null;
				}
			}
			return base.Destroy();
		}

	}

}
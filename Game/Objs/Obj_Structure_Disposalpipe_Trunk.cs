// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Disposalpipe_Trunk : Obj_Structure_Disposalpipe {

		public dynamic disposal = null;
		public dynamic disposaloutlet = null;
		public dynamic linked = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "pipe-t";
		}

		// Function from file: disposal.dm
		public Obj_Structure_Disposalpipe_Trunk ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.dpdir = this.dir;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.getlinked();
				return;
			}));
			this.update();
			return;
		}

		// Function from file: disposal.dm
		public override double? nextdir( int fromdir = 0, dynamic sortTag = null ) {
			
			if ( fromdir == GlobalVars.DOWN ) {
				return this.dir;
			} else {
				return 0;
			}
		}

		// Function from file: disposal.dm
		public override Obj_Structure_Disposalpipe transfer( Obj_Structure_Disposalholder H = null ) {
			dynamic O = null;
			dynamic D = null;

			
			if ( H.dir == GlobalVars.DOWN ) {
				return base.transfer( H );
			}

			if ( Lang13.Bool( this.linked ) ) {
				O = this.linked;

				if ( O is Obj_Structure_Disposaloutlet && H != null ) {
					((Obj_Structure_Disposaloutlet)O).expel( H );
				} else {
					D = this.linked;

					if ( H != null ) {
						D.expel( H );
					}
				}
			} else if ( H != null ) {
				this.expel( H, this.loc, 0 );
			}
			return null;
		}

		// Function from file: disposal.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			Ent_Static T = null;
			dynamic W = null;
			Ent_Static uloc = null;
			Ent_Static wloc = null;

			C = Lang13.FindIn( typeof(Obj_Structure_Disposalconstruct), this.loc );

			if ( Lang13.Bool( C ) && Lang13.Bool( C.anchored ) ) {
				return null;
			}
			T = this.loc;

			if ( Lang13.Bool( ((dynamic)T).intact ) ) {
				return null;
			}
			this.add_fingerprint( b );

			if ( a is Obj_Item_Weapon_Weldingtool ) {
				W = a;

				if ( Lang13.Bool( W.remove_fuel( 0, b ) ) ) {
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder2.ogg", 100, 1 );
					uloc = b.loc;
					wloc = W.loc;
					GlobalFuncs.to_chat( b, "Slicing the disposal pipe." );
					Task13.Sleep( 30 );

					if ( !((Obj_Item_Weapon_Weldingtool)W).isOn() ) {
						return null;
					}

					if ( b.loc == uloc && wloc == W.loc ) {
						this.welded();
					} else {
						GlobalFuncs.to_chat( b, "You must stay still while welding the pipe." );
					}
				} else {
					GlobalFuncs.to_chat( b, "You need more welding fuel to cut the pipe." );
					return null;
				}
			}
			return null;
		}

		// Function from file: disposal.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( Lang13.Bool( this.disposal ) ) {
				
				if ( Lang13.Bool( this.disposal.trunk ) ) {
					this.disposal.trunk = null;
				}
				this.disposal = null;
			}

			if ( Lang13.Bool( this.disposaloutlet ) ) {
				
				if ( Lang13.Bool( this.disposaloutlet.trunk ) ) {
					this.disposaloutlet.trunk = null;
				}
				this.disposaloutlet = null;
			}

			if ( Lang13.Bool( this.linked ) ) {
				this.linked = null;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: disposal.dm
		public void getlinked(  ) {
			this.disposal = Lang13.FindIn( typeof(Obj_Machinery_Disposal), this.loc );

			if ( Lang13.Bool( this.disposal ) ) {
				
				if ( this.disposal.trunk != this ) {
					this.disposal.trunk = this;
				}
				this.linked = this.disposal;
			}
			this.disposaloutlet = Lang13.FindIn( typeof(Obj_Structure_Disposaloutlet), this.loc );

			if ( Lang13.Bool( this.disposaloutlet ) ) {
				
				if ( this.disposaloutlet.trunk != this ) {
					this.disposaloutlet.trunk = this;
				}
				this.linked = this.disposaloutlet;
			}
			return;
		}

	}

}
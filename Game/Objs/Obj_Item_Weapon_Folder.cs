// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Folder : Obj_Item_Weapon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.pressure_resistance = 2;
			this.autoignition_temperature = 522;
			this.fire_fuel = 1;
			this.icon = "icons/obj/bureaucracy.dmi";
			this.icon_state = "folder";
		}

		public Obj_Item_Weapon_Folder ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: vgstation13.dme
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic P = null;
			string message = null;
			string message2 = null;
			dynamic P2 = null;
			dynamic P3 = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( Task13.User.stat ) || Task13.User.restrained() ) {
				return null;
			}

			if ( Task13.User.contents.Find( this ) != 0 ) {
				
				if ( Lang13.Bool( href_list["remove"] ) ) {
					P = Lang13.FindObj( href_list["remove"] );

					if ( !( P is Obj_Item_Weapon_Paper ) && !( P is Obj_Item_Weapon_Photo ) ) {
						message = "<span class='warning'>" + Task13.User + "(" + Task13.User.key + ") has tried to remove something other than a paper/photo from a folder.<span>";
						GlobalFuncs.message_admins( message );
						message += "" + P;
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + message ) );
						GlobalVars.admin_log.Add( message );
						return null;
					}

					if ( !this.contents.Contains( P ) ) {
						message2 = "<span class='warning'>" + Task13.User + "(" + Task13.User.key + ") has tried to remove a paper/photo from a folder that didn't contain it.<span>";
						GlobalFuncs.message_admins( message2 );
						message2 += "" + P;
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + message2 ) );
						GlobalVars.admin_log.Add( message2 );
						return null;
					}

					if ( Lang13.Bool( P ) ) {
						P.loc = Task13.User.loc;
						Task13.User.put_in_hands( P );
					}
				}

				if ( Lang13.Bool( href_list["read"] ) ) {
					P2 = Lang13.FindObj( href_list["read"] );

					if ( Lang13.Bool( P2 ) ) {
						
						if ( !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Dead_Observer || Task13.User is Mob_Living_Silicon ) ) {
							Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P2.name + "</TITLE></HEAD><BODY" + ( Lang13.Bool( P2.color ) ? " bgcolor=" + P2.color : "" ) + ">" + GlobalFuncs.stars( P2.info ) + P2.stamps + "</BODY></HTML>", "window=" + P2.name );
							GlobalFuncs.onclose( Task13.User, "" + P2.name );
						} else {
							Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P2.name + "</TITLE></HEAD><BODY" + ( Lang13.Bool( P2.color ) ? " bgcolor=" + P2.color : "" ) + ">" + P2.info + P2.stamps + "</BODY></HTML>", "window=" + P2.name );
							GlobalFuncs.onclose( Task13.User, "" + P2.name );
						}
					}
				}

				if ( Lang13.Bool( href_list["look"] ) ) {
					P3 = Lang13.FindObj( href_list["look"] );

					if ( Lang13.Bool( P3 ) ) {
						((Obj_Item_Weapon_Photo)P3).show( Task13.User );
					}
				}
				this.attack_self( Task13.User );
				this.update_icon();
			}
			return null;
		}

		// Function from file: folders.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;
			Obj_Item_Weapon_Paper P = null;
			Obj_Item_Weapon_Photo Ph = null;

			dat = "<title>" + this.name + "</title>";

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Paper) )) {
				P = _a;
				
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( P ).str( "'>Remove</A> - <A href='?src=" ).Ref( this ).str( ";read=" ).Ref( P ).str( "'>" ).item( P.name ).str( "</A><BR>" ).ToString();
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Photo) )) {
				Ph = _b;
				
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( Ph ).str( "'>Remove</A> - <A href='?src=" ).Ref( this ).str( ";look=" ).Ref( Ph ).str( "'>" ).item( Ph.name ).str( "</A><BR>" ).ToString();
			}
			Interface13.Browse( user, dat, "window=folder" );
			GlobalFuncs.onclose( user, "folder" );
			this.add_fingerprint( Task13.User );
			return null;
		}

		// Function from file: folders.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string n_name = null;

			
			if ( a is Obj_Item_Weapon_Paper || a is Obj_Item_Weapon_Photo ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You put the " ).item( a ).str( " into " ).the( this ).item().str( ".</span>" ).ToString() );
					this.update_icon();
				}
			} else if ( a is Obj_Item_Weapon_Pen ) {
				n_name = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( b, "What would you like to label the folder?", "Folder Labelling", null, null, InputType.Str ) ), 1, 26 );

				if ( GlobalFuncs.in_range( this, b ) && Lang13.Bool( b.stat ) == false ) {
					this.name = "folder" + ( Lang13.Bool( n_name ) ? "- '" + n_name + "'" : null );
				}
			}
			return null;
		}

		// Function from file: folders.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( this.contents.len != 0 ) {
				this.overlays.Add( "folder_paper" );
			}
			return null;
		}

	}

}
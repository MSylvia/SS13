// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Under_Contortionist : Obj_Item_Clothing_Under {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "darkholme";
			this._color = "darkholme";
			this.icon_state = "darkholme";
		}

		public Obj_Item_Clothing_Under_Contortionist ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: miscellaneous.dm
		public bool check_clothing( Mob user = null ) {
			ByTable slot_must_be_empty = null;
			dynamic slot_id = null;

			slot_must_be_empty = new ByTable(new object [] { 1, 3, 19, 4, 5, 6, 11, 13 });

			foreach (dynamic _a in Lang13.Enumerate( slot_must_be_empty )) {
				slot_id = _a;
				

				if ( Lang13.Bool( user.get_item_by_slot( slot_id ) ) ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You can't fit inside while wearing that " ).the( user.get_item_by_slot( slot_id ) ).item().str( ".</span>" ).ToString() );
					return false;
				}
			}
			return true;
		}

		// Function from file: ventcrawl.dm
		[Verb]
		[VerbInfo( name: "Crawl Through Vent", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void crawl_through_vent(  ) {
			Mob user = null;
			dynamic pipe = null;

			user = Task13.User;

			if ( user is Mob_Living_Carbon_Human && ((dynamic)user).w_uniform == this && this.check_clothing( user ) ) {
				pipe = user.start_ventcrawl();

				if ( Lang13.Bool( pipe ) ) {
					((dynamic)user).handle_ventcrawl( pipe );
				}
			}
			return;
		}

	}

}
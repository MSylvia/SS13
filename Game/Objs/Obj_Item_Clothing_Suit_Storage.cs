// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Suit_Storage : Obj_Item_Clothing_Suit {

		public ByTable can_hold = new ByTable();
		public ByTable cant_hold = new ByTable();
		public int max_w_class = 2;
		public int max_combined_w_class = 4;
		public int storage_slots = 2;
		public Game_Data boxes = null;
		public Game_Data closer = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.body_parts_covered = 390;
		}

		// Function from file: coat.dm
		public Obj_Item_Clothing_Suit_Storage ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.boxes = GlobalFuncs.getFromPool( typeof(Obj_Screen_Storage) );
			((dynamic)this.boxes).name = "storage";
			((dynamic)this.boxes).master = this;
			((dynamic)this.boxes).icon_state = "block";
			((dynamic)this.boxes).screen_loc = "7,7 to 10,8";
			((dynamic)this.boxes).layer = 19;
			this.closer = GlobalFuncs.getFromPool( typeof(Obj_Screen_Close) );
			((dynamic)this.closer).master = this;
			((dynamic)this.closer).icon_state = "x";
			((dynamic)this.closer).layer = 20;
			this.orient2hud();
			return;
		}

		// Function from file: coat.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic M = null;

			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "rustle", 50, 1, -5 );
			this.orient2hud( a );

			if ( this.loc == a ) {
				
				if ( a.s_active != null ) {
					((Obj_Item_Weapon_Storage)a.s_active).close( a );
				}
				this.show_to( a );
			} else {
				base.attack_hand( (object)(a), (object)(b), (object)(c) );

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( null, 1 ) )) {
					M = _a;
					

					if ( M.s_active == this ) {
						this.close( M );
					}
				}
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: coat.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: coat.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			Mob M = null;

			
			if ( Task13.User is Mob_Living_Carbon_Human ) {
				M = Task13.User;

				if ( !( over_object is Obj_Screen ) ) {
					return base.MouseDrop( over_object, (object)(src_location), over_location, (object)(src_control), (object)(over_control), _params );
				}
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "rustle", 50, 1, -5 );

				if ( ((dynamic)M).wear_suit == this && !M.incapacitated() ) {
					
					if ( over_object.name == "r_hand" ) {
						M.u_equip( this, false );
						M.put_in_r_hand( this );
					} else if ( over_object.name == "l_hand" ) {
						M.u_equip( this, false );
						M.put_in_l_hand( this );
					}
					M.update_inv_wear_suit();
					this.add_fingerprint( Task13.User );
					return null;
				}

				if ( ( over_object == Task13.User && GlobalFuncs.in_range( this, Task13.User ) || Task13.User.contents.Find( this ) != 0 ) && Task13.User.s_active != null ) {
					((Obj_Item_Weapon_Storage)Task13.User.s_active).close( Task13.User );
				}
				this.show_to( Task13.User );
			}
			return null;
		}

		// Function from file: coat.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic M = null;
			bool ok = false;
			dynamic A = null;
			dynamic A2 = null;
			dynamic sum_w_class = null;
			Obj_Item I = null;

			
			if ( a is Obj_Item_Weapon_Evidencebag && this.loc != b ) {
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( b is Mob_Living_Silicon_Robot ) {
				
				if ( b is Mob_Living_Silicon_Robot_Mommi ) {
					M = b;

					if ( Lang13.Bool( ((Mob_Living_Silicon_Robot_Mommi)M).is_in_modules( a ) ) ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>You can't throw away something built into you.</span>" );
						return null;
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You're a robot. No.</span>" );
					return null;
				}
			}

			if ( this.loc == a ) {
				return null;
			}

			if ( this.contents.len >= this.storage_slots ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>The " + this + " is full, make some space.</span>" );
				return null;
			}

			if ( this.can_hold.len != 0 ) {
				ok = false;

				foreach (dynamic _a in Lang13.Enumerate( this.can_hold )) {
					A = _a;
					

					if ( Lang13.Bool( ((dynamic)Lang13.FindClass( A )).IsInstanceOfType( a ) ) ) {
						ok = true;
						break;
					}
				}

				if ( !ok ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>The " ).item( this ).str( " cannot hold " ).the( a ).item().str( ".</span>" ).ToString() );
					return null;
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( this.cant_hold )) {
				A2 = _b;
				

				if ( Lang13.Bool( ((dynamic)Lang13.FindClass( A2 )).IsInstanceOfType( a ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>The " ).item( this ).str( " cannot hold " ).the( a ).item().str( ".</span>" ).ToString() );
					return null;
				}
			}

			if ( Convert.ToDouble( a.w_class ) > this.max_w_class ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>The " ).item( a ).str( " is too big for " ).the( this ).item().str( ".</span>" ).ToString() );
				return null;
			}
			sum_w_class = a.w_class;

			foreach (dynamic _c in Lang13.Enumerate( this.contents, typeof(Obj_Item) )) {
				I = _c;
				
				sum_w_class += I.w_class;
			}

			if ( Convert.ToDouble( sum_w_class ) > this.max_combined_w_class ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>The " + this + " is full, make some space.</span>" );
				return null;
			}

			if ( Convert.ToDouble( a.w_class ) >= Convert.ToDouble( this.w_class ) && a is Obj_Item_Weapon_Storage ) {
				
				if ( !( this is Obj_Item_Weapon_Storage_Backpack_Holding ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>The " ).item( this ).str( " cannot hold " ).the( a ).item().str( " as it's a storage item of the same size.</span>" ).ToString() );
					return null;
				}
			}
			((Mob)b).u_equip( a, true );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "rustle", 50, 1, -5 );
			a.loc = this;

			if ( Lang13.Bool( b.client ) && b.s_active != this ) {
				b.client.screen -= a;
			}
			this.orient2hud( b );
			this.add_fingerprint( b );
			this.show_to( b );
			return null;
		}

		// Function from file: coat.dm
		public void orient2hud( dynamic user = null ) {
			int row_num = 0;
			int col_count = 0;

			row_num = 0;
			col_count = Num13.MinInt( 7, this.storage_slots ) - 1;

			if ( this.contents.len > 7 ) {
				row_num = Num13.Floor( ( this.contents.len - 1 ) / 7 );
			}
			this.standard_orient_objs( row_num, col_count );
			return;
		}

		// Function from file: coat.dm
		public void standard_orient_objs( int rows = 0, int cols = 0 ) {
			int cx = 0;
			int cy = 0;
			Obj O = null;

			cx = 4;
			cy = rows + 2;
			((dynamic)this.boxes).screen_loc = "4:16,2:16 to " + ( cols + 4 ) + ":16," + ( rows + 2 ) + ":16";

			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj) )) {
				O = _a;
				
				O.screen_loc = "" + cx + ":16," + cy + ":16";
				O.layer = 20;
				cx++;

				if ( cx > cols + 4 ) {
					cx = 4;
					cy--;
				}
			}
			((dynamic)this.closer).screen_loc = "" + ( cols + 5 ) + ":16,2:16";
			return;
		}

		// Function from file: coat.dm
		public void orient_objs( dynamic tx = null, dynamic ty = null, int mx = 0, dynamic my = null ) {
			int cx = 0;
			int cy = 0;
			Obj O = null;

			cx = Convert.ToInt32( tx );
			cy = Convert.ToInt32( ty );
			((dynamic)this.boxes).screen_loc = "" + tx + ":," + ty + " to " + mx + "," + my;

			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj) )) {
				O = _a;
				
				O.screen_loc = "" + cx + "," + cy;
				O.layer = 20;
				cx++;

				if ( cx > mx ) {
					cx = Convert.ToInt32( tx );
					cy--;
				}
			}
			((dynamic)this.closer).screen_loc = "" + ( mx + 1 ) + "," + my;
			return;
		}

		// Function from file: coat.dm
		public void close( dynamic user = null ) {
			this.hide_from( user );
			user.s_active = null;
			return;
		}

		// Function from file: coat.dm
		public void hide_from( dynamic user = null ) {
			
			if ( !Lang13.Bool( user.client ) ) {
				return;
			}
			user.client.screen -= this.boxes;
			user.client.screen -= this.closer;
			user.client.screen -= this.contents;
			return;
		}

		// Function from file: coat.dm
		public void show_to( dynamic user = null ) {
			user.client.screen -= this.boxes;
			user.client.screen -= this.closer;
			user.client.screen -= this.contents;
			user.client.screen += this.boxes;
			user.client.screen += this.closer;
			user.client.screen += this.contents;
			user.s_active = this;
			return;
		}

		// Function from file: coat.dm
		public ByTable return_inv(  ) {
			ByTable L = null;
			Obj_Item_Weapon_Storage S = null;
			Obj_Item_Weapon_Gift G = null;

			L = new ByTable();
			L.Add( this.contents );

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Storage) )) {
				S = _a;
				
				L.Add( S.return_inv() );
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Gift) )) {
				G = _b;
				
				L.Add( G.gift );

				if ( G.gift is Obj_Item_Weapon_Storage ) {
					L.Add( G.gift.return_inv() );
				}
			}
			return L;
		}

	}

}
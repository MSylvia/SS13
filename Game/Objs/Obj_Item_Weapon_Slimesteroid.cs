// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Slimesteroid : Obj_Item_Weapon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/chemical.dmi";
			this.icon_state = "bottle16";
		}

		public Obj_Item_Weapon_Slimesteroid ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: slime.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( !( M is Mob_Living_Carbon_Slime ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>The steroid only works on baby slimes!</span>" );
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( M is Mob_Living_Carbon_Slime_Adult ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Only baby slimes can use the steroid!</span>" );
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( Lang13.Bool( M.stat ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>The slime is dead!</span>" );
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}

			if ( M.cores == 3 ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>The slime already has the maximum amount of extract!</span>" );
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}
			GlobalFuncs.to_chat( user, "You feed the slime the steroid. It now has triple the amount of extract." );
			M.cores = 3;
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_AiModule_Targetted : Obj_Item_Weapon_AiModule {

		public int priority = 0;
		public string action = "target";
		public dynamic targetName = null;

		public Obj_Item_Weapon_AiModule_Targetted ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: targetted.dm
		public override bool validate( dynamic laws = null, Obj_Item_Weapon_PlanningFrame target = null, Mob sender = null ) {
			
			if ( !Lang13.Bool( this.targetName ) ) {
				GlobalFuncs.to_chat( Task13.User, "No name detected on module, please enter one." );
				return false;
			}
			return base.validate( (object)(laws), target, sender );
		}

		// Function from file: targetted.dm
		public override void updateLaw(  ) {
			
			if ( !Lang13.Bool( this.targetName ) ) {
				this.law = Lang13.Initial( this, "law" );
			} else {
				this.law = GlobalFuncs.replacetext( Lang13.Initial( this, "law" ), "<name>", this.targetName );
			}
			this.desc = new Txt().A( this.name ).item().str( ": '" ).item( this.law ).str( "'" ).ToString();
			return;
		}

		// Function from file: targetted.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic targName = null;

			base.attack_self( (object)(user), (object)(flag), emp );
			targName = GlobalFuncs.stripped_input( Task13.User, "Please enter the name of the person to " + this.action + ".", "Who?", user.name );
			this.targetName = targName;
			this.updateLaw();
			return null;
		}

		// Function from file: targetted.dm
		public override dynamic copy(  ) {
			dynamic clone = null;

			clone = base.copy();
			clone.targetName = this.targetName;
			clone.desc = this.desc;
			clone.law = this.law;
			return clone;
		}

		// Function from file: targetted.dm
		public override bool upload( dynamic laws = null, dynamic target = null, dynamic sender = null, bool? notify_target = null ) {
			base.upload( (object)(laws), (object)(target), (object)(sender), notify_target );

			if ( target is Mob && GlobalFuncs.is_special_character( target ) != 0 && this.priority == 0 ) {
				GlobalFuncs.to_chat( target, "" + sender.real_name + " attempted to modify your zeroth law." );
				GlobalFuncs.to_chat( target, "It would be in your best interest to play along with " + sender.real_name + " that " + this.law );
				GlobalVars.lawchanges.Add( "The law specified " + this.targetName + ", but the AI's existing law 0 cannot be overriden." );
				return true;
			}
			((AiLaws)laws).add_law( this.priority, this.law );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + sender.name + "(" + sender.key + ") added law \"" + this.law + "\" on " + this.fmtSubject( target ) ) ) );
			GlobalVars.lawchanges.Add( "The law specified " + this.targetName );
			return true;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Tank_Jetpack : Obj_Item_Weapon_Tank {

		public string gas_type = "o2";
		public int? on = 0;
		public int? turbo = 0;
		public EffectSystem_TrailFollow_Ion ion_trail = null;
		public dynamic cycle_action = null;
		public Type cycle_action_type = typeof(Action_ItemAction_Jetpack_Cycle);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "jetpack";
			this.w_class = 4;
			this.distribute_pressure = 21.278247833251953;
			this.icon_state = "jetpack";
		}

		// Function from file: jetpack.dm
		public Obj_Item_Weapon_Tank_Jetpack ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.air_contents.assert_gas( this.gas_type );
			this.air_contents.gases[this.gas_type][1] = ( this.volume ??0) * 607.949951171875 / 2436.07666015625;
			this.ion_trail = new EffectSystem_TrailFollow_Ion();
			this.ion_trail.set_up( this );
			this.cycle_action = Lang13.Call( this.cycle_action_type, this );
			return;
		}

		// Function from file: jetpack.dm
		public bool allow_thrust( double num = 0, Mob_Living_Carbon_Human user = null ) {
			GasMixture removed = null;
			dynamic T = null;

			
			if ( !Lang13.Bool( this.on ) ) {
				return false;
			}

			if ( num < 0.041 || this.air_contents.total_moles() < num ) {
				this.turn_off();
				return false;
			}
			removed = this.air_contents.remove( num );

			if ( removed.total_moles() < 0.041 ) {
				this.turn_off();
				return false;
			}
			T = GlobalFuncs.get_turf( user );
			((Ent_Static)T).assume_air( removed );
			return true;
		}

		// Function from file: jetpack.dm
		public virtual void turn_off(  ) {
			this.on = GlobalVars.FALSE;
			this.icon_state = Lang13.Initial( this, "icon_state" );
			this.ion_trail.stop();
			return;
		}

		// Function from file: jetpack.dm
		public virtual void turn_on(  ) {
			this.on = GlobalVars.TRUE;
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-on";
			this.ion_trail.start();
			return;
		}

		// Function from file: jetpack.dm
		public virtual void cycle( dynamic user = null ) {
			
			if ( ((Mob)user).incapacitated() ) {
				return;
			}

			if ( !Lang13.Bool( this.on ) ) {
				this.turn_on();
				user.WriteMsg( "<span class='notice'>You turn the thrusters on.</span>" );
			} else if ( !Lang13.Bool( this.turbo ) ) {
				this.turbo = GlobalVars.TRUE;
				user.WriteMsg( "<span class='notice'>You engage turbo mode.</span>" );
			} else {
				this.turn_off();
				this.turbo = GlobalVars.FALSE;
				user.WriteMsg( "<span class='notice'>You turn jetpack off.</span>" );
			}
			return;
		}

		// Function from file: jetpack.dm
		public override bool dropped( dynamic user = null ) {
			base.dropped( (object)(user) );
			((Action)this.cycle_action).Remove( user );
			return false;
		}

		// Function from file: jetpack.dm
		public override bool pickup( dynamic user = null ) {
			base.pickup( (object)(user) );
			((Action)this.cycle_action).Grant( user );
			return false;
		}

	}

}
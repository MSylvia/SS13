// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Girder : Obj_Structure {

		public int state = 0;
		public Type material = typeof(Obj_Item_Stack_Sheet_Metal);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon_state = "girder";
		}

		public Obj_Structure_Girder ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: girders.dm
		public override int projectile_check(  ) {
			return 1;
		}

		// Function from file: girders.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				
				if ( this.state != 0 ) {
					this.name = "reinforced girder";
					this.icon_state = "reinforced";
				} else {
					this.name = "girder";
					this.icon_state = "girder";
				}
			} else if ( this.state != 0 ) {
				this.name = "displaced reinforced girder";
				this.icon_state = "r_displaced";
			} else {
				this.name = "displaced girder";
				this.icon_state = "displaced";
			}
			return null;
		}

		// Function from file: girders.dm
		public override bool mech_drill_act( double? severity = null, dynamic child = null ) {
			GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: girders.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					
					if ( Rand13.PercentChance( 25 ) && this.state == 2 ) {
						GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), GlobalFuncs.get_turf( this ) );
						this.state = 0;
						this.update_icon();
					} else {
						GlobalFuncs.qdel( this );
					}
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 30 ) ) {
						
						if ( this.state == 2 ) {
							this.state = 1;
							this.update_icon();
						}

						if ( this.state == 1 ) {
							GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), GlobalFuncs.get_turf( this ) );
							this.state = 0;
							this.update_icon();
						} else {
							GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
							GlobalFuncs.qdel( this );
						}
					}
					return false;
					break;
				case 3:
					
					if ( this.state == 0 && Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
						GlobalFuncs.qdel( this );
					} else if ( Rand13.PercentChance( 15 ) ) {
						
						if ( this.state == 2 ) {
							this.state = 1;
							this.update_icon();
						}

						if ( this.state == 1 ) {
							GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), GlobalFuncs.get_turf( this ), 2 );
							this.state = 0;
							this.update_icon();
						}
					}
					return false;
					break;
			}
			return false;
		}

		// Function from file: girders.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj.destroy ) {
				this.ex_act( 2 );
			}
			base.bullet_act( (object)(Proj), (object)(def_zone) );
			return 0;
		}

		// Function from file: girders.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( Rand13.PercentChance( 40 ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: girders.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic PK = null;
			dynamic R = null;
			dynamic O = null;
			dynamic S = null;
			double pdiff = 0;
			Obj_Structure_Falsewall FW = null;
			dynamic Tsrc = null;
			dynamic X = null;
			double pdiff2 = 0;
			Obj_Structure_Falserwall FW2 = null;
			dynamic Tsrc2 = null;
			dynamic X2 = null;
			dynamic M = null;
			Type F = null;
			double pdiff3 = 0;
			dynamic FW3 = null;
			Type wallpath = null;
			dynamic Tsrc3 = null;
			dynamic X3 = null;
			dynamic P = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				
				if ( this.state == 0 ) {
					
					if ( Lang13.Bool( this.anchored ) && !( this is Obj_Structure_Girder_Displaced ) ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts disassembling " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start disassembling " ).the( this ).item().str( ".</span>" ).ToString() );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " dissasembles " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You dissasemble " ).the( this ).item().str( ".</span>" ).ToString() );
							GlobalFuncs.getFromPool( this.material, GlobalFuncs.get_turf( this ) );
							GlobalFuncs.qdel( this );
						}
					} else if ( !Lang13.Bool( this.anchored ) ) {
						
						if ( !( this.loc is Tile_Simulated_Floor ) ) {
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You can't secure " ).the( this ).item().str( " to " ).item( ( this.loc is Tile_Space ? "space" : "this" ) ).str( "!</span>" ).ToString() );
							return null;
						}
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts securing " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start securing " ).the( this ).item().str( ".</span>" ).ToString() );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " secures " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You secure " ).the( this ).item().str( ".</span>" ).ToString() );
							this.add_hiddenprint( b );
							this.add_fingerprint( b );
							this.anchored = 1;
							this.update_icon();
						}
					}
				} else if ( this.state == 1 || this.state == 2 ) {
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts " ).item( ( Lang13.Bool( this.anchored ) ? "un" : "" ) ).str( "securing " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start " ).item( ( Lang13.Bool( this.anchored ) ? "un" : "" ) ).str( "securing " ).the( this ).item().str( ".</span>" ).ToString() );

					if ( GlobalFuncs.do_after( b, this, 40 ) ) {
						this.anchored = !Lang13.Bool( this.anchored );
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " " ).item( ( Lang13.Bool( this.anchored ) ? "" : "un" ) ).str( "secures " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You " ).item( ( Lang13.Bool( this.anchored ) ? "" : "un" ) ).str( "secure " ).the( this ).item().str( ".</span>" ).ToString() );
						this.add_hiddenprint( b );
						this.add_fingerprint( b );
						this.update_icon();
					}
				}
			} else if ( a is Obj_Item_Weapon_Pickaxe ) {
				PK = a;

				if ( !( ( PK.diggables & 4 ) != 0 ) ) {
					return null;
				}
				((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " starts " ).item( PK.drill_verb ).str( " " ).the( this ).item().str( " with " ).the( PK ).item().str( "</span>" ).ToString(), new Txt( "<span class='notice'>You start " ).item( PK.drill_verb ).str( " " ).the( this ).item().str( " with " ).the( PK ).item().str( "</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " destroys " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>Your " ).item( PK ).str( " tears through the last of " ).the( this ).item().str( "!</span>" ).ToString() );
					GlobalFuncs.getFromPool( this.material, GlobalFuncs.get_turf( this ) );
					GlobalFuncs.qdel( this );
				}
			} else if ( a is Obj_Item_Weapon_Screwdriver && this.state == 2 ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 100, 1 );
				((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " starts unsecuring " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You start unsecuring " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " unsecures " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You unsecure " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );
					this.add_hiddenprint( b );
					this.add_fingerprint( b );
					this.state = 1;
					this.update_icon();
				}
			} else if ( a is Obj_Item_Weapon_Screwdriver && this.state == 1 ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 100, 1 );
				((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts securing " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You start securing " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " secures " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You secure " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );
					this.add_hiddenprint( b );
					this.add_fingerprint( b );
					this.state = 2;
					this.update_icon();
				}
			} else if ( a is Obj_Item_Weapon_Wirecutters && this.state == 1 ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 100, 1 );
				((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " starts removing " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You start removing " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " removes " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString(), new Txt( "<span class='notice'>You remove " ).the( this ).item().str( "'s internal support struts.</span>" ).ToString() );
					this.add_hiddenprint( b );
					this.add_fingerprint( b );
					GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), GlobalFuncs.get_turf( this ), 2 );
					this.state = 0;
					this.update_icon();
				}
			} else if ( a is Obj_Item_Stack_Rods && this.state == 0 && this.material == typeof(Obj_Item_Stack_Sheet_Metal) ) {
				R = a;

				if ( Convert.ToDouble( R.amount ) < 2 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You need more rods to finish the support struts.</span>" );
					return null;
				}
				((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts inserting internal support struts into " ).the( this ).item().str( "</span>" ).ToString(), new Txt( "<span class='notice'>You start inserting internal support struts into " ).the( this ).item().str( ".</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					O = a;

					if ( Convert.ToDouble( O.amount ) < 2 ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>You need more rods to finish the support struts.</span>" );
						return null;
					}
					O.use( 2 );
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " inserts internal support struts into " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You insert internal support struts into " ).the( this ).item().str( ".</span>" ).ToString() );
					this.add_hiddenprint( b );
					this.add_fingerprint( b );
					this.state = 1;
					this.update_icon();
				}
			} else if ( a is Obj_Item_Weapon_Crowbar && this.state == 0 && Lang13.Bool( this.anchored ) ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 100, 1 );
				((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " starts dislodging " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start dislodging " ).the( this ).item().str( ".</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 40 ) ) {
					((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " dislodges " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You dislodge " ).the( this ).item().str( ".</span>" ).ToString() );
					this.add_hiddenprint( b );
					this.add_fingerprint( b );
					this.anchored = 0;
					this.update_icon();
				}
			} else if ( a is Obj_Item_Stack_Sheet ) {
				S = a;

				dynamic _a = S.type; // Was a switch-case, sorry for the mess.
				if ( _a==typeof(Obj_Item_Stack_Sheet_Metal) || _a==typeof(Obj_Item_Stack_Sheet_Metal_Cyborg) ) {
					
					if ( this.state != 0 ) {
						return null;
					}

					if ( !Lang13.Bool( this.anchored ) ) {
						
						if ( Convert.ToDouble( S.amount ) < 2 ) {
							return null;
						}
						pdiff = GlobalFuncs.performWallPressureCheck( this.loc );

						if ( !( pdiff != 0 ) ) {
							S.use( 2 );
							((Ent_Static)b).visible_message( "<span class='warning'>" + b + " creates a false wall!</span>", "<span class='notice'>You create a false wall. Push on it to open or close the passage.</span>" );
							FW = new Obj_Structure_Falsewall( this.loc );
							FW.add_hiddenprint( b );
							FW.add_fingerprint( b );
							GlobalFuncs.qdel( this );
						} else {
							GlobalFuncs.to_chat( b, "<span class='warning'>There is too much air moving through the gap!  The door wouldn't stay closed if you built it.</span>" );
							GlobalFuncs.message_admins( "Attempted false wall made by " + b.real_name + " (" + GlobalFuncs.formatPlayerPanel( b, b.ckey ) + ") at " + GlobalFuncs.formatJumpTo( this.loc ) + " had a pressure difference of " + pdiff + "!" );
							GlobalFuncs.log_admin( "Attempted false wall made by " + b.real_name + " (user.ckey) at " + this.loc + " had a pressure difference of " + pdiff + "!" );
							return null;
						}
					} else {
						
						if ( Convert.ToDouble( S.amount ) < 2 ) {
							return base.attackby( (object)(a), (object)(b), (object)(c) );
						}
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts installing plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start installing plating to " ).the( this ).item().str( ".</span>" ).ToString() );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							
							if ( Convert.ToDouble( S.amount ) < 2 ) {
								return null;
							}
							S.use( 2 );
							((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " finishes installing plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You finish installing plating to " ).the( this ).item().str( ".</span>" ).ToString() );
							Tsrc = GlobalFuncs.get_turf( this );

							if ( !( Tsrc is Tile ) ) {
								return 0;
							}
							X = ((Tile)Tsrc).ChangeTurf( typeof(Tile_Simulated_Wall) );

							if ( Lang13.Bool( X ) ) {
								((Ent_Static)X).add_hiddenprint( b );
								((Ent_Static)X).add_fingerprint( b );
							}
							GlobalFuncs.qdel( this );
						}
						return null;
					}
				} else if ( _a==typeof(Obj_Item_Stack_Sheet_Plasteel) ) {
					
					if ( !Lang13.Bool( this.anchored ) ) {
						
						if ( Convert.ToDouble( S.amount ) < 2 ) {
							return null;
						}
						pdiff2 = GlobalFuncs.performWallPressureCheck( this.loc );

						if ( !( pdiff2 != 0 ) ) {
							S.use( 2 );
							((Ent_Static)b).visible_message( "<span class='warning'>" + b + " creates a false reinforced wall!</span>", "<span class='notice'>You create a false reinforced wall. Push on it to open or close the passage.</span>" );
							FW2 = new Obj_Structure_Falserwall( this.loc );
							FW2.add_hiddenprint( b );
							FW2.add_fingerprint( b );
							GlobalFuncs.qdel( this );
						} else {
							GlobalFuncs.to_chat( b, "<span class='warning'>There is too much air moving through the gap!  The door wouldn't stay closed if you built it.</span>" );
							GlobalFuncs.message_admins( "Attempted false rwall made by " + b.real_name + " (" + GlobalFuncs.formatPlayerPanel( b, b.ckey ) + ") at " + GlobalFuncs.formatJumpTo( this.loc ) + " had a pressure difference of " + pdiff2 + "!" );
							GlobalFuncs.log_admin( "Attempted false rwall made by " + b.real_name + " (" + b.ckey + ") at " + this.loc + " had a pressure difference of " + pdiff2 + "!" );
							return null;
						}
					}

					if ( this.state != 2 ) {
						return null;
					}
					((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " starts installing reinforced plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start installing reinforced plating to " ).the( this ).item().str( ".</span>" ).ToString() );

					if ( GlobalFuncs.do_after( b, this, 50 ) ) {
						S.use( 1 );
						((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " finishes installing reinforced plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You finish installing reinforced plating to " ).the( this ).item().str( ".</span>" ).ToString() );
						Tsrc2 = GlobalFuncs.get_turf( this );
						X2 = ((Tile)Tsrc2).ChangeTurf( typeof(Tile_Simulated_Wall_RWall) );

						if ( Lang13.Bool( X2 ) ) {
							((Ent_Static)X2).add_hiddenprint( b );
							((Ent_Static)X2).add_fingerprint( b );
							X2.d_state = 4;
							X2.update_icon();
						}
						GlobalFuncs.qdel( this );
					}
					return null;
				}

				if ( Lang13.Bool( S.sheettype ) ) {
					M = S.sheettype;

					if ( !Lang13.Bool( this.anchored ) ) {
						
						if ( Convert.ToDouble( S.amount ) < 2 ) {
							return null;
						}
						F = Lang13.FindClass( "/obj/structure/falsewall/" + M );

						if ( !( F is Type ) ) {
							return null;
						}
						pdiff3 = GlobalFuncs.performWallPressureCheck( this.loc );

						if ( !( pdiff3 != 0 ) ) {
							S.use( 2 );
							((Ent_Static)b).visible_message( "<span class='warning'>" + b + " creates a false wall!</span>", "<span class='notice'>You create a false wall. Push on it to open or close the passage.</span>" );
							FW3 = Lang13.Call( F, this.loc );
							((Ent_Static)FW3).add_hiddenprint( b );
							((Ent_Static)FW3).add_fingerprint( b );
							GlobalFuncs.qdel( this );
						} else {
							GlobalFuncs.to_chat( b, "<span class='warning'>There is too much air moving through the gap!  The door wouldn't stay closed if you built it.</span>" );
							GlobalFuncs.message_admins( "Attempted false " + M + " wall made by " + b.real_name + " (" + GlobalFuncs.formatPlayerPanel( b, b.ckey ) + ") at " + GlobalFuncs.formatJumpTo( this.loc ) + " had a pressure difference of " + pdiff3 + "!" );
							GlobalFuncs.log_admin( "Attempted false " + M + " wall made by " + b.real_name + " (" + b.ckey + ") at " + this.loc + " had a pressure difference of " + pdiff3 + "!" );
							return null;
						}
					} else {
						
						if ( Convert.ToDouble( S.amount ) < 2 ) {
							return base.attackby( (object)(a), (object)(b), (object)(c) );
						}
						wallpath = Lang13.FindClass( "/turf/simulated/wall/mineral/" + M );

						if ( !( wallpath is Type ) ) {
							return base.attackby( (object)(a), (object)(b), (object)(c) );
						}
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " starts installing plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You start installing plating to " ).the( this ).item().str( ".</span>" ).ToString() );

						if ( GlobalFuncs.do_after( b, this, 40 ) ) {
							
							if ( Convert.ToDouble( S.amount ) < 2 ) {
								return null;
							}
							S.use( 2 );
							((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " finishes installing plating to " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You finish installing plating to " ).the( this ).item().str( ".</span>" ).ToString() );
							Tsrc3 = GlobalFuncs.get_turf( this );
							X3 = ((Tile)Tsrc3).ChangeTurf( wallpath );

							if ( Lang13.Bool( X3 ) ) {
								((Ent_Static)X3).add_hiddenprint( b );
								((Ent_Static)X3).add_fingerprint( b );
							}
							GlobalFuncs.qdel( this );
						}
						return null;
					}
				}
				this.add_hiddenprint( Task13.User );
			} else if ( a is Obj_Item_Pipe ) {
				P = a;

				if ( new ByTable(new object [] { 0, 1, 5 }).Contains( P.pipe_type ) ) {
					
					if ( Lang13.Bool( b.drop_item( P, this.loc ) ) ) {
						((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b ).str( " fits " ).the( P ).item().str( " into " ).the( this ).item().str( "</span>" ).ToString(), new Txt( "<span class='notice'>You fit " ).the( P ).item().str( " into " ).the( this ).item().str( "</span>" ).ToString() );
					}
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
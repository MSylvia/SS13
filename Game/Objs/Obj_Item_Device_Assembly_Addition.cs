// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_Addition : Obj_Item_Device_Assembly {

		public double pulse_counter = 0;
		public double limit = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.starting_materials = new ByTable().Set( "$iron", 100 ).Set( "$glass", 25 );
			this.origin_tech = "programming=1";
			this.accessible_values = new ByTable().Set( "Counter", "pulse_counter;number" ).Set( "Limit", "limit;number" );
			this.icon_state = "circuit_+";
		}

		public Obj_Item_Device_Assembly_Addition ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: addition.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["sub_counter"] ) ) {
				this.pulse_counter = Num13.MaxInt( ((int)( this.pulse_counter - ( String13.ParseNumber( href_list["sub_counter"] ) ??0) )), 0 );
			}

			if ( Lang13.Bool( href_list["add_counter"] ) ) {
				this.pulse_counter += String13.ParseNumber( href_list["add_counter"] ) ??0;
			}

			if ( Lang13.Bool( href_list["sub_limit"] ) ) {
				this.limit = Num13.MaxInt( ((int)( this.limit - ( String13.ParseNumber( href_list["sub_limit"] ) ??0) )), 0 );
			}

			if ( Lang13.Bool( href_list["add_limit"] ) ) {
				this.limit += String13.ParseNumber( href_list["add_limit"] ) ??0;
			}

			if ( Task13.User != null ) {
				this.attack_self( Task13.User );
			}
			return null;
		}

		// Function from file: addition.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			Browser popup = null;

			dat = "";
			dat += "<tt>Addition circuit</tt><BR><BR>";
			dat += "Counter: " + new Txt( "<a href='?src=" ).Ref( this ).str( ";sub_counter=" ).item( 10 ).str( "'>" ).ToString() + "--</a> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";sub_counter=" ).item( 1 ).str( "'>" ).ToString() + "-</a>  | <b>" + this.pulse_counter + "</b> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";add_counter=" ).item( 1 ).str( "'>" ).ToString() + "+</a> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";add_counter=" ).item( 10 ).str( "'>" ).ToString() + "++</a><BR>";
			dat += "Limit: " + new Txt( "<a href='?src=" ).Ref( this ).str( ";sub_limit=" ).item( 10 ).str( "'>" ).ToString() + "--</a> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";sub_limit=" ).item( 1 ).str( "'>" ).ToString() + "-</a>  | <b>" + this.limit + "</b> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";add_limit=" ).item( 1 ).str( "'>" ).ToString() + "+</a> | " + new Txt( "<a href='?src=" ).Ref( this ).str( ";add_limit=" ).item( 10 ).str( "'>" ).ToString() + "++</a><BR>";
			popup = new Browser( user, "circuit1", "" + this, 500, 300, this );
			popup.set_content( dat );
			popup.open();
			GlobalFuncs.onclose( user, "circuit1" );
			return null;
		}

		// Function from file: addition.dm
		public override bool activate(  ) {
			
			if ( !base.activate() ) {
				return false;
			}

			if ( ++this.pulse_counter >= this.limit ) {
				this.pulse_counter = 0;
				this.pulse();
			}
			this.updateUsrDialog();
			return false;
		}

	}

}
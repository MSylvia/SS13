// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune_Imbue : Obj_Effect_Rune {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.color = "#0000ff";
			this.cultist_name = "Bind Talisman";
			this.cultist_desc = "Transforms papers and valid runes into talismans.";
			this.invocation = null;
			this.icon_state = "3";
		}

		public Obj_Effect_Rune_Imbue ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: runes.dm
		public override void invoke( dynamic user = null ) {
			dynamic T = null;
			ByTable papers_on_rune = null;
			Obj_Item_Weapon_Paper P = null;
			dynamic paper_to_imbue = null;
			ByTable nearby_runes = null;
			Obj_Effect_Rune R = null;
			dynamic picked_rune = null;
			ByTable split_rune_type = null;
			dynamic imbue_type = null;
			Type talisman_type = null;
			dynamic TA = null;
			dynamic TR = null;
			dynamic TT = null;

			T = GlobalFuncs.get_turf( this );
			papers_on_rune = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Item_Weapon_Paper) )) {
				P = _a;
				

				if ( !Lang13.Bool( P.info ) ) {
					papers_on_rune.Add( P );
				}
			}

			if ( !( papers_on_rune.len != 0 ) ) {
				user.WriteMsg( "<span class='cultitalic'>There must be a blank paper on top of " + this + "!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Talisman Imbue rune failed - no blank papers on rune" );
				return;
			}
			paper_to_imbue = Rand13.PickFromTable( papers_on_rune );
			nearby_runes = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Obj_Effect_Rune) )) {
				R = _b;
				
				nearby_runes.Add( R );
			}

			if ( !( nearby_runes.len != 0 ) ) {
				user.WriteMsg( "<span class='cultitalic'>There are no runes near " + this + "!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Talisman Imbue rune failed - no nearby runes" );
				return;
			}
			picked_rune = Rand13.PickFromTable( nearby_runes );
			split_rune_type = GlobalFuncs.splittext( "" + picked_rune.type, "/" );
			imbue_type = split_rune_type[split_rune_type.len];
			talisman_type = Lang13.FindClass( "/obj/item/weapon/paper/talisman/" + imbue_type );

			if ( talisman_type is Type ) {
				((Ent_Dynamic)user).say( "H'drak v'loso, mir'kanas verbot!" );
				TA = Lang13.Call( talisman_type, GlobalFuncs.get_turf( this ) );

				if ( picked_rune is Obj_Effect_Rune_Teleport ) {
					TR = picked_rune;
					TT = TA;
					TT.keyword = TR.keyword;
				}
			} else {
				user.WriteMsg( "<span class='cultitalic'>The chosen rune was not a valid target!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Talisman Imbue rune failed - chosen rune invalid" );
				return;
			}
			this.visible_message( "<span class='warning'>" + picked_rune + " crumbles to dust, and bloody images form themselves on " + paper_to_imbue + ".</span>" );
			GlobalFuncs.qdel( paper_to_imbue );
			GlobalFuncs.qdel( picked_rune );
			return;
		}

	}

}
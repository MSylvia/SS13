// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_RustParticleCatcher : Obj_Effect {

		public Obj_Effect_RustEmField parent = null;
		public int mysize = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.invisibility = 101;
			this.anchored = 1;
			this.icon = "icons/effects/effects.dmi";
			this.layer = 4;
		}

		public Obj_Effect_RustParticleCatcher ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: virtual_particle_catcher.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			
			if ( AM is Mob && this.density && Rand13.PercentChance( 10 ) ) {
				GlobalFuncs.to_chat( AM, "<span class='warning'>A powerful force pushes you back.</span>" );
			}
			base.Bumped( AM, (object)(yes) );
			return false;
		}

		// Function from file: virtual_particle_catcher.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj.flag != "bullet" && this.parent != null ) {
				this.parent.AddEnergy( Convert.ToInt32( Proj.damage * 20 ), false, 1 );
				this.update_icon();
			}
			return 0;
		}

		// Function from file: virtual_particle_catcher.dm
		public void UpdateSize(  ) {
			
			if ( this.parent.size >= this.mysize ) {
				this.density = true;
				this.name = "collector " + this.mysize + " ON";
			} else {
				this.density = false;
				this.name = "collector " + this.mysize + " OFF";
			}
			return;
		}

		// Function from file: virtual_particle_catcher.dm
		public bool AddParticles( dynamic name = null, bool? quantity = null ) {
			quantity = quantity ?? true;

			
			if ( this.parent != null && this.parent.size >= this.mysize ) {
				this.parent.AddParticles( name, quantity );
				return true;
			}
			return false;
		}

		// Function from file: virtual_particle_catcher.dm
		public void SetSize( int newsize = 0 ) {
			this.name = "collector " + newsize;
			this.mysize = newsize;
			this.UpdateSize();
			return;
		}

		// Function from file: virtual_particle_catcher.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic _default = null;

			_default = base.Destroy( (object)(brokenup) );
			this.parent.particle_catchers.Remove( this );
			this.parent = null;
			return _default;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_SilicateSprayer : Obj_Item_Device {

		public bool start_filled = true;
		public double? max_silicate = 50;
		public int silicate_per_state = 5;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.origin_tech = "engineering=2";
			this.icon_state = "silicate sprayer";
		}

		// Function from file: silicate sprayer.dm
		public Obj_Item_Device_SilicateSprayer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( this.max_silicate );

			if ( this.start_filled ) {
				((Reagents)this.reagents).add_reagent( "silicate", this.max_silicate );
			}
			this.update_icon();
			return;
		}

		// Function from file: silicate sprayer.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			dynamic W = null;
			dynamic diff = null;

			
			if ( Map13.GetDistance( target, user ) > 1 ) {
				return false;
			}

			if ( !( target is Obj_Structure_Window ) ) {
				return false;
			}

			if ( !this.get_amount() ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is out of silicate!</span>" ).ToString() );
				return true;
			}
			W = target;
			diff = Lang13.Initial( W, "health" ) - W.health;

			if ( !Lang13.Bool( diff ) ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( W ).item().str( " is already in perfect condition!</span>" ).ToString() );
				return true;
			}
			diff = Num13.MinInt( Convert.ToInt32( diff ), ((int)( ( this.get_amount() ?1:0) / 0.05 )) );
			W.health += diff;
			((Obj_Structure_Window)W).healthcheck( user, GlobalVars.FALSE );
			((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " repairs " ).the( W ).item().str( " with their " ).item( this.name ).str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You repair " ).the( W ).item().str( " with your " ).item( this.name ).str( ".</span>" ).ToString() );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/refill.ogg", 10, 1, -6 );
			this.remove_silicate( diff * 0.05 );
			return true;
		}

		// Function from file: silicate sprayer.dm
		public override void on_reagent_change(  ) {
			this.update_icon();
			return;
		}

		// Function from file: silicate sprayer.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			double amount = 0;
			dynamic i = null;

			this.overlays.Cut();
			amount = this.get_amount() ?1:0;

			if ( !( amount != 0 ) ) {
				return null;
			}
			i = 0;

			if ( amount >= ( this.max_silicate ??0) / 2 ) {
				i = GlobalFuncs.Floor( amount / this.silicate_per_state, 1 );
			} else {
				i = GlobalFuncs.Ceiling( amount / this.silicate_per_state, 1 );
			}
			this.overlays.Add( "silicate sprayer " + i );
			return null;
		}

		// Function from file: silicate sprayer.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic _default = null;

			_default = base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='notice'>It contains " + this.get_amount() + "/" + this.max_silicate + " units of silicate!</span>" );
			return _default;
		}

		// Function from file: silicate sprayer.dm
		public void remove_silicate( dynamic amount = null ) {
			amount = amount ?? 0;

			((Reagents)this.reagents).remove_reagent( "silicate", amount );
			this.update_icon();
			return;
		}

		// Function from file: silicate sprayer.dm
		public bool get_amount(  ) {
			return ((Reagents)this.reagents).get_reagent_amount( "silicate" );
		}

	}

}
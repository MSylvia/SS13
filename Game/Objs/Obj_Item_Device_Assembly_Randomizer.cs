// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_Randomizer : Obj_Item_Device_Assembly {

		public dynamic output_number = 1;
		public int last_value = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.short_name = "randomizer";
			this.starting_materials = new ByTable().Set( "$iron", 100 ).Set( "$glass", 25 );
			this.origin_tech = "programming=1";
			this.connection_text = "connected to";
			this.accessible_values = new ByTable().Set( "Generated number", "last_value;number" ).Set( "Upper limit", "output_number;number" );
			this.icon_state = "circuit_rng";
		}

		public Obj_Item_Device_Assembly_Randomizer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: randomizer.dm
		public override void send_pulses_to_list( ByTable L = null ) {
			ByTable AS = null;
			double i = 0;
			dynamic A = null;

			
			if ( !( L != null ) || !( L.len != 0 ) ) {
				return;
			}
			AS = L.Copy();

			foreach (dynamic _a in Lang13.IterateRange( 0, this.output_number - 1 )) {
				i = _a;
				
				A = Rand13.PickFromTable( AS );
				AS.Remove( A );
				((Obj_Item_Device_Assembly)A).pulsed();

				if ( !( AS.len != 0 ) ) {
					break;
				}
			}
			return;
		}

		// Function from file: randomizer.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			dynamic new_output_num = null;

			new_output_num = Interface13.Input( user, new Txt( "How many devices should " ).the( this ).item().str( " randomly select?" ).ToString(), "" + this, this.output_number, null, InputType.Num | InputType.Null );

			if ( !this.Adjacent( user ) || ((Mob)user).isUnconscious() ) {
				return null;
			}
			this.output_number = ( Convert.ToDouble( new_output_num ) <= 1 ? ((dynamic)( 1 )) : ( Convert.ToDouble( new_output_num ) >= 512 ? ((dynamic)( 512 )) : new_output_num ) );
			GlobalFuncs.to_chat( user, "<span class='info'>Number of outputs set to " + this.output_number + ".</span>" );
			return null;
		}

		// Function from file: randomizer.dm
		public override bool activate(  ) {
			
			if ( !base.activate() ) {
				return false;
			}
			this.last_value = Rand13.Int( 0, Convert.ToInt32( this.output_number ) );
			this.pulse();
			return false;
		}

	}

}
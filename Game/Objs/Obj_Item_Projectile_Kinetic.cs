// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Projectile_Kinetic : Obj_Item_Projectile {

		public bool splash = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flag = "bomb";
			this.range = 3;
		}

		// Function from file: special.dm
		public Obj_Item_Projectile_Kinetic ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic proj_turf = null;
			GasMixture environment = null;
			double pressure = 0;

			proj_turf = GlobalFuncs.get_turf( this );

			if ( !( proj_turf is Tile ) ) {
				return;
			}
			environment = ((Ent_Static)proj_turf).return_air();
			pressure = environment.return_pressure();

			if ( pressure < 50 ) {
				this.name = "full strength kinetic force";
				this.damage *= 4;
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: special.dm
		public override dynamic on_hit( Ent_Static target = null, double? blocked = null, dynamic hit_zone = null ) {
			dynamic _default = null;

			dynamic target_turf = null;
			dynamic M = null;
			dynamic T = null;
			dynamic M2 = null;

			_default = base.on_hit( target, blocked, (object)(hit_zone) );
			target_turf = GlobalFuncs.get_turf( target );

			if ( target_turf is Tile_Simulated_Mineral ) {
				M = target_turf;
				M.gets_drilled( this.firer );
			}
			new Obj_Item_Effect_KineticBlast( target_turf );

			if ( this.splash ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( target_turf, this.splash ) )) {
					T = _a;
					

					if ( T is Tile_Simulated_Mineral ) {
						M2 = T;
						M2.gets_drilled( this.firer );
					}
				}
			}
			return _default;
		}

		// Function from file: special.dm
		public override void on_range(  ) {
			new Obj_Item_Effect_KineticBlast( this.loc );
			base.on_range();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Mirror_Magic : Obj_Structure_Mirror {

		public ByTable races_blacklist = new ByTable(new object [] { "skeleton" });
		public ByTable choosable_races = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "magic_mirror";
		}

		// Function from file: mirror.dm
		public Obj_Structure_Mirror_Magic ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic speciestype = null;
			dynamic S = null;

			
			if ( !( this.choosable_races.len != 0 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(Species) ) - typeof(Species) )) {
					speciestype = _a;
					
					S = Lang13.Call( speciestype );

					if ( !this.races_blacklist.Contains( S.id ) ) {
						this.choosable_races.Add( S.id );
					}
				}
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: mirror.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic H = null;
			dynamic choice = null;
			string newname = null;
			dynamic newrace = null;
			dynamic racechoice = null;
			dynamic new_s_tone = null;
			dynamic new_mutantcolor = null;
			string temp_hsv = null;
			string hairchoice = null;
			dynamic new_hair_color = null;
			dynamic new_face_color = null;
			dynamic new_eye_color = null;

			
			if ( !( a is Mob_Living_Carbon_Human ) ) {
				return null;
			}
			H = a;
			choice = Interface13.Input( a, "Something to change?", "Magical Grooming", null, new ByTable(new object [] { "name", "race", "gender", "hair", "eyes" }), InputType.Null | InputType.Any );

			dynamic _a = choice; // Was a switch-case, sorry for the mess.
			if ( _a=="name" ) {
				newname = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( H, "Who are we again?", "Name change", H.name, null, InputType.Str | InputType.Null ) ), 1, 26 );

				if ( !Lang13.Bool( newname ) ) {
					return null;
				}
				H.real_name = newname;
				H.name = newname;

				if ( Lang13.Bool( H.dna ) ) {
					H.dna.real_name = newname;
				}

				if ( Lang13.Bool( H.mind ) ) {
					H.mind.name = newname;
				}
			} else if ( _a=="race" ) {
				newrace = null;
				racechoice = Interface13.Input( H, "What are we again?", "Race change", null, this.choosable_races, InputType.Null | InputType.Any );
				newrace = GlobalVars.species_list[racechoice];

				if ( !Lang13.Bool( newrace ) ) {
					return null;
				}
				((Mob)H).set_species( newrace, false );

				if ( H.dna.species.use_skintones ) {
					new_s_tone = Interface13.Input( a, "Choose your skin tone:", "Race change", null, GlobalVars.skin_tones, InputType.Null | InputType.Any );

					if ( Lang13.Bool( new_s_tone ) ) {
						H.skin_tone = new_s_tone;
						((Dna)H.dna).update_ui_block( 3 );
					}
				}

				if ( H.dna.species.specflags.Contains( 1 ) ) {
					new_mutantcolor = Interface13.Input( a, "Choose your skin color:", "Race change", null, null, InputType.Null | InputType.Color );

					if ( Lang13.Bool( new_mutantcolor ) ) {
						temp_hsv = GlobalFuncs.RGBtoHSV( new_mutantcolor );

						if ( Convert.ToDouble( GlobalFuncs.ReadHSV( temp_hsv )[3] ) >= Convert.ToDouble( GlobalFuncs.ReadHSV( "#7F7F7F" )[3] ) ) {
							H.dna.features["mcolor"] = GlobalFuncs.sanitize_hexcolor( new_mutantcolor );
						} else {
							H.WriteMsg( "<span class='notice'>Invalid color. Your color is not bright enough.</span>" );
						}
					}
				}
				((Mob_Living_Carbon_Human)H).update_body();
				((Mob)H).update_hair();
				((Mob_Living_Carbon_Human)H).update_mutcolor();
				((Mob_Living_Carbon)H).update_mutations_overlay();
			} else if ( _a=="gender" ) {
				
				if ( !new ByTable(new object [] { "male", "female" }).Contains( H.gender ) ) {
					return null;
				}

				if ( H.gender == "male" ) {
					
					if ( Interface13.Alert( H, "Become a Witch?", "Confirmation", "Yes", "No" ) == "Yes" ) {
						H.gender = "female";
						H.WriteMsg( "<span class='notice'>Man, you feel like a woman!</span>" );
					} else {
						return null;
					}
				} else if ( Interface13.Alert( H, "Become a Warlock?", "Confirmation", "Yes", "No" ) == "Yes" ) {
					H.gender = "male";
					H.WriteMsg( "<span class='notice'>Whoa man, you feel like a man!</span>" );
				} else {
					return null;
				}
				((Dna)H.dna).update_ui_block( 5 );
				((Mob_Living_Carbon_Human)H).update_body();
				((Mob_Living_Carbon)H).update_mutations_overlay();
			} else if ( _a=="hair" ) {
				hairchoice = Interface13.Alert( H, "Hair style or hair color?", "Change Hair", "Style", "Color" );

				if ( hairchoice == "Style" ) {
					base.attack_hand( (object)(a), b, c );
				} else {
					new_hair_color = Interface13.Input( H, "Choose your hair color", "Hair Color", null, null, InputType.Null | InputType.Color );

					if ( Lang13.Bool( new_hair_color ) ) {
						H.hair_color = GlobalFuncs.sanitize_hexcolor( new_hair_color );
						((Dna)H.dna).update_ui_block( 1 );
					}

					if ( H.gender == "male" ) {
						new_face_color = Interface13.Input( H, "Choose your facial hair color", "Hair Color", null, null, InputType.Null | InputType.Color );

						if ( Lang13.Bool( new_face_color ) ) {
							H.facial_hair_color = GlobalFuncs.sanitize_hexcolor( new_face_color );
							((Dna)H.dna).update_ui_block( 2 );
						}
					}
					((Mob)H).update_hair();
				}
			} else if ( _a=="eyes" ) {
				new_eye_color = Interface13.Input( H, "Choose your eye color", "Eye Color", null, null, InputType.Null | InputType.Color );

				if ( Lang13.Bool( new_eye_color ) ) {
					H.eye_color = GlobalFuncs.sanitize_hexcolor( new_eye_color );
					((Dna)H.dna).update_ui_block( 4 );
					((Mob_Living_Carbon_Human)H).update_body();
				}
			}
			return null;
		}

	}

}
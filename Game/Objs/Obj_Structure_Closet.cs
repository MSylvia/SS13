// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet : Obj_Structure {

		public string icon_closed = "closed";
		public string icon_opened = "open";
		public bool opened = false;
		public bool welded = false;
		public bool locked = false;
		public bool broken = false;
		public bool large = true;
		public bool pick_up_stuff = true;
		public bool wall_mounted = false;
		public double health = 100;
		public int lastbang = 0;
		public int storage_capacity = 30;
		public double breakout_time = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.starting_materials = new ByTable().Set( "$iron", 7500 );
			this.w_type = 4;
			this.ignoreinvert = 1;
			this.icon = "icons/obj/closet.dmi";
			this.icon_state = "closed";
		}

		public Obj_Structure_Closet ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: closets.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( air_group == true || height == 0 || this.wall_mounted ) {
				return true;
			}
			return !this.density;
		}

		// Function from file: closets.dm
		public override void container_resist(  ) {
			Mob user = null;
			int breakout_time = 0;
			dynamic O = null;
			dynamic T = null;

			user = Task13.User;
			breakout_time = 2;

			if ( this.opened || !this.welded && !this.locked ) {
				return;
			}
			user.delayNext( 7, 100 );
			GlobalFuncs.to_chat( user, "<span class='notice'>You lean on the back of " + this + " and start pushing the door open. (this will take about " + breakout_time + " minutes.)</span>" );

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
				O = _a;
				
				GlobalFuncs.to_chat( O, "<span class='warning'>" + this + " begins to shake violently!</span>" );
			}
			T = GlobalFuncs.get_turf( this );

			if ( GlobalFuncs.do_after( user, this, breakout_time * 600 ) ) {
				
				if ( !( user != null ) || user.stat != 0 || user.loc != this || this.opened || !this.locked && !this.welded || T != GlobalFuncs.get_turf( this ) ) {
					return;
				}
				this.welded = false;
				this.locked = false;
				this.broken = true;
				this.visible_message( "<span class='danger'>" + user + " successfully broke out of " + this + "!</span>" );
				GlobalFuncs.to_chat( user, "<span class='notice'>You successfully break out of " + this + "!</span>" );
				this.open();
			}
			return;
		}

		// Function from file: closets.dm
		public override bool Exit( Ent_Dynamic O = null, Ent_Static newloc = null ) {
			this.open();

			if ( O.loc == this ) {
				return false;
			}
			return true;
		}

		// Function from file: closets.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( !this.opened ) {
				this.icon_state = this.icon_closed;

				if ( this.welded ) {
					this.overlays.Add( "welded" );
				}
			} else {
				this.icon_state = this.icon_opened;
			}
			return null;
		}

		// Function from file: closets.dm
		public override void attack_self_tk( dynamic user = null ) {
			this.add_fingerprint( user );

			if ( !this.toggle() ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>It won't budge!</span>" );
			}
			return;
		}

		// Function from file: closets.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic L = null;
			Base_Client C = null;
			Image temp_overlay = null;
			Image spooky_overlay = null;

			
			if ( !this.Adjacent( a ) ) {
				return null;
			}
			this.add_fingerprint( a );
			L = a;

			if ( !this.opened && Lang13.Bool( L ) && Lang13.Bool( L.client ) && ((Mob)L).hallucinating() ) {
				
				if ( Rand13.PercentChance( 10 ) ) {
					C = L.client;
					temp_overlay = new Image( this.icon, null, this.icon_opened );
					temp_overlay.v_override = true;
					((dynamic)temp_overlay).loc = this;

					switch ((int)( Rand13.Int( 0, 5 ) )) {
						case 0:
							spooky_overlay = new Image( "icons/mob/animal.dmi", null, "hunter", null, Num13.Rotate( L.dir, 180 ) );
							break;
						case 1:
							spooky_overlay = new Image( "icons/mob/animal.dmi", null, "zombie", null, Num13.Rotate( L.dir, 180 ) );
							break;
						case 2:
							spooky_overlay = new Image( "icons/mob/horror.dmi", null, "horror_" + Rand13.Pick(new object [] { "male", "female" }), null, Num13.Rotate( L.dir, 180 ) );
							break;
						case 3:
							spooky_overlay = new Image( "icons/mob/animal.dmi", null, "faithless", null, Num13.Rotate( L.dir, 180 ) );
							break;
						case 4:
							spooky_overlay = new Image( "icons/mob/animal.dmi", null, "carp", null, Num13.Rotate( L.dir, 180 ) );
							break;
						case 5:
							spooky_overlay = new Image( "icons/mob/animal.dmi", null, "skelly", null, Num13.Rotate( L.dir, 180 ) );
							break;
					}

					if ( !( spooky_overlay != null ) ) {
						return null;
					}
					temp_overlay.overlays.Add( spooky_overlay );
					C.images.Add( temp_overlay );
					GlobalFuncs.to_chat( L, new Sound( "sound/machines/click.ogg" ) );
					GlobalFuncs.to_chat( L, new Sound( "sound/hallucinations/scary.ogg" ) );
					((Mob)L).Weaken( 5 );
					Task13.Sleep( 50 );

					if ( C != null ) {
						C.images.Remove( temp_overlay );
					}
					return null;
				}
			}

			if ( !this.toggle() ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>It won't budge!</span>" );
			}
			return null;
		}

		// Function from file: closets.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: closets.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			dynamic M2 = null;

			
			if ( Lang13.Bool( M.stat ) || !( this.loc is Tile ) ) {
				return null;
			}

			if ( !this.open() ) {
				GlobalFuncs.to_chat( M, "<span class='notice'>It won't budge!</span>" );

				if ( !( this.lastbang != 0 ) ) {
					this.lastbang = 1;

					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
						M2 = _a;
						
						GlobalFuncs.to_chat( M2, "<FONT size=" + Num13.MaxInt( 0, 5 - Map13.GetDistance( this, M2 ) ) + ">BANG, bang!</FONT>" );
					}
					Task13.Schedule( 30, (Task13.Closure)(() => {
						this.lastbang = 0;
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: closets.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			needs_opened = needs_opened ?? true;
			show_message = show_message ?? true;
			move_them = move_them ?? true;

			
			if ( O is Obj_Screen ) {
				return false;
			}

			if ( !( O.loc is Tile ) ) {
				return false;
			}

			if ( ((Mob)user).restrained() || Lang13.Bool( user.stat ) || user.weakened != 0 || Lang13.Bool( user.stunned ) || user.paralysis != 0 || user.lying == true ) {
				return false;
			}

			if ( !( O is Ent_Dynamic ) || Lang13.Bool( ((dynamic)O).anchored ) || Map13.GetDistance( user, this ) > 1 || Map13.GetDistance( user, O ) > 1 ) {
				return false;
			}

			if ( !( user.loc is Tile ) ) {
				return false;
			}

			if ( needs_opened == true && !this.opened ) {
				return false;
			}

			if ( O is Obj_Structure_Closet ) {
				return false;
			}

			if ( move_them == true ) {
				Map13.StepTowardsSimple( (Ent_Dynamic)(O), this.loc );
			}

			if ( show_message == true && user != O ) {
				((Mob)user).show_viewers( "<span class='danger'>" + user + " stuffs " + O + " into " + this + "!</span>" );
			}
			this.add_fingerprint( user );
			return true;
		}

		// Function from file: closets.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic G = null;
			dynamic WT = null;
			Game_Data Met = null;
			dynamic M = null;
			dynamic WT2 = null;
			dynamic M2 = null;

			
			if ( this.opened ) {
				
				if ( a is Obj_Item_Weapon_Grab ) {
					
					if ( this.large ) {
						G = a;
						this.MouseDrop_T( G.affecting, b );
					} else {
						GlobalFuncs.to_chat( b, "<span class='notice'>The locker is too small to stuff " + a + " into!</span>" );
					}
				}

				if ( a is Obj_Item_TkGrab ) {
					return 0;
				}

				if ( a is Obj_Item_Weapon_Weldingtool ) {
					WT = a;

					if ( !Lang13.Bool( WT.remove_fuel( 0, b ) ) ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>You need more welding fuel to complete this task.</span>" );
						return null;
					}
					Met = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ) );
					((dynamic)Met).amount = 2;

					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
						M = _a;
						
						M.show_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " has been cut apart by " ).item( b ).str( " with " ).the( WT ).item().str( ".</span>" ).ToString(), 1, "You hear welding.", 2 );
					}
					GlobalFuncs.qdel( this );
					return null;
				}
				b.drop_item( a, this.loc );
			} else if ( a is Obj_Item_Stack_PackageWrap ) {
				return null;
			} else if ( a is Obj_Item_Weapon_Weldingtool ) {
				WT2 = a;

				if ( !Lang13.Bool( WT2.remove_fuel( 0, b ) ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>You need more welding fuel to complete this task.</span>" );
					return null;
				}
				this.welded = !this.welded;
				this.update_icon();

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					M2 = _b;
					
					M2.show_message( "<span class='warning'>" + this + " has been " + ( this.welded ? "welded shut" : "unwelded" ) + " by " + b.name + ".</span>", 1, "You hear welding.", 2 );
				}
			} else if ( !this.place( b, a ) ) {
				this.attack_hand( b );
			}
			return null;
		}

		// Function from file: closets.dm
		public override bool blob_act( dynamic severity = null ) {
			dynamic A = null;

			
			if ( Rand13.PercentChance( 75 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this )) {
					A = _a;
					
					A.loc = this.loc;
				}
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: closets.dm
		public override dynamic attack_animal( Mob_Living user = null ) {
			dynamic A = null;

			
			if ( Lang13.Bool( ((dynamic)user).environment_smash ) ) {
				this.visible_message( "<span class='warning'>" + user + " destroys the " + this + ". </span>" );

				foreach (dynamic _a in Lang13.Enumerate( this )) {
					A = _a;
					
					A.loc = this.loc;
				}
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: closets.dm
		public override dynamic attack_robot( Mob_Living_Silicon_Robot user = null ) {
			
			if ( user is Mob_Living_Silicon_Robot_Mommi ) {
				this.add_hiddenprint( user );
				this.add_fingerprint( user );
				return this.attack_hand( user );
			}
			base.attack_robot( user );
			return null;
		}

		// Function from file: closets.dm
		public override dynamic process(  ) {
			Obj_Effect_Beam B = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.beams, typeof(Obj_Effect_Beam) )) {
				B = _a;
				
				this.health -= B.get_damage();
			}

			if ( this.health <= 0 ) {
				this.dump_contents();
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: closets.dm
		public override void beam_disconnect( Obj_Effect_Beam B = null ) {
			base.beam_disconnect( B );

			if ( this.beams.len == 0 ) {
				GlobalVars.processing_objects.Remove( this );
			}
			return;
		}

		// Function from file: closets.dm
		public override bool beam_connect( Obj_Effect_Beam B = null ) {
			
			if ( !( GlobalVars.processing_objects.Find( this ) != 0 ) ) {
				GlobalVars.processing_objects.Add( this );
				Game13.log.WriteMsg( "## TESTING: " + ( "Connected " + this + " with " + B + "!" ) );
			}
			return base.beam_connect( B );
		}

		// Function from file: closets.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			dynamic A = null;

			this.health -= Convert.ToDouble( Proj.damage );
			base.bullet_act( (object)(Proj), (object)(def_zone) );

			if ( this.health <= 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this )) {
					A = _a;
					
					A.loc = this.loc;
				}
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: closets.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			dynamic A = null;
			dynamic A2 = null;
			dynamic A3 = null;

			
			switch ((int?)( severity )) {
				case 1:
					
					foreach (dynamic _a in Lang13.Enumerate( this )) {
						A = _a;
						
						A.loc = this.loc;
						((Ent_Static)A).ex_act( severity++ );
					}
					GlobalFuncs.qdel( this );
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						
						foreach (dynamic _b in Lang13.Enumerate( this )) {
							A2 = _b;
							
							A2.loc = this.loc;
							((Ent_Static)A2).ex_act( severity++ );
						}
						GlobalFuncs.qdel( this );
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						
						foreach (dynamic _c in Lang13.Enumerate( this )) {
							A3 = _c;
							
							A3.loc = this.loc;
							((Ent_Static)A3).ex_act( severity++ );
						}
						GlobalFuncs.qdel( this );
					}
					break;
			}
			return false;
		}

		// Function from file: closets.dm
		public virtual bool place( dynamic user = null, dynamic I = null ) {
			return false;
		}

		// Function from file: closets.dm
		public virtual bool toggle(  ) {
			
			if ( this.opened ) {
				return this.close();
			}
			return this.open();
		}

		// Function from file: closets.dm
		public virtual bool close(  ) {
			Obj_Effect_Beam B = null;

			
			if ( !this.opened ) {
				return false;
			}

			if ( !this.can_close() ) {
				return false;
			}
			this.take_contents();
			this.icon_state = this.icon_closed;
			this.opened = false;

			if ( this is Obj_Structure_Closet_BodyBag ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/zip.ogg", 15, 1, -3 );
			} else {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 15, 1, -3 );
			}
			this.density = true;

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Effect_Beam) )) {
				B = _a;
				
				B.Crossed( this );
			}
			return true;
		}

		// Function from file: closets.dm
		public virtual int insert( Ent_Dynamic AM = null, bool? include_mobs = null ) {
			Ent_Dynamic L = null;

			
			if ( this.contents.len >= this.storage_capacity ) {
				return -1;
			}

			if ( AM is Mob_Living_Silicon_Ai || AM is Mob_Living_SimpleAnimal_Sculpture ) {
				return 0;
			}

			if ( AM is Mob_Living ) {
				L = AM;

				if ( Lang13.Bool( L.locked_to ) ) {
					return 0;
				}

				if ( Lang13.Bool( ((dynamic)L).client ) ) {
					((dynamic)L).client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
					((dynamic)L).client.eye = this;
				}
			} else if ( !( AM is Obj_Item ) && !( AM is Obj_Effect_Dummy_Chameleon ) ) {
				return 0;
			} else if ( AM.density || Lang13.Bool( AM.anchored ) ) {
				return 0;
			}
			AM.loc = this;
			return 1;
		}

		// Function from file: closets.dm
		public virtual bool open(  ) {
			
			if ( this.opened ) {
				return false;
			}

			if ( !this.can_open() ) {
				return false;
			}
			this.icon_state = this.icon_opened;
			this.opened = true;
			this.density = false;
			this.dump_contents();

			if ( this.on_destroyed is _Event ) {
				this.on_destroyed.Invoke( new ByTable() );
			}

			if ( this is Obj_Structure_Closet_BodyBag ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/zip.ogg", 15, 1, -3 );
			} else {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 15, 1, -3 );
			}
			return true;
		}

		// Function from file: closets.dm
		public virtual void take_contents(  ) {
			Ent_Dynamic AM = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Ent_Dynamic) )) {
				AM = _a;
				

				if ( this.insert( AM ) == -1 ) {
					break;
				}

				if ( AM.on_moved is _Event ) {
					AM.on_moved.Invoke( new ByTable().Set( "loc", this ) );
				}
			}
			return;
		}

		// Function from file: closets.dm
		public virtual void dump_contents(  ) {
			Mob L = null;
			dynamic SM = null;
			Obj_Effect_Dummy_Chameleon AD = null;
			Obj O = null;
			dynamic M = null;

			
			if ( Task13.User != null ) {
				L = Task13.User;
				SM = Lang13.FindIn( typeof(Obj_Machinery_Power_Supermatter), this.contents );

				if ( SM is Obj_Machinery_Power_Supermatter ) {
					GlobalFuncs.message_admins( new Txt().item( L.name ).str( " (" ).item( L.ckey ).str( ") opened " ).the( this ).item().str( " that contained supermatter (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( L.x ).str( ";Y=" ).item( L.y ).str( ";Z=" ).item( L.z ).str( "'>JMP</a>)" ).ToString() );
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + new Txt().item( L.name ).str( " (" ).item( L.ckey ).str( ") opened " ).the( this ).item().str( " that contained supermatter (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( L.x ).str( ";Y=" ).item( L.y ).str( ";Z=" ).item( L.z ).str( "'>JMP</a>)" ).ToString() ) );
				}
			}

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Effect_Dummy_Chameleon) )) {
				AD = _a;
				
				AD.loc = this.loc;
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Obj) )) {
				O = _b;
				
				O.loc = this.loc;
			}

			foreach (dynamic _c in Lang13.Enumerate( this )) {
				M = _c;
				
				M.loc = this.loc;

				if ( Lang13.Bool( M.client ) ) {
					M.client.eye = M.client.mob;
					M.client.perspective = GlobalVars.MOB_PERSPECTIVE ?1:0;
				}
			}
			return;
		}

		// Function from file: closets.dm
		public virtual bool can_close(  ) {
			Obj_Structure_Closet closet = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_turf( this ), typeof(Obj_Structure_Closet) )) {
				closet = _a;
				

				if ( closet != this ) {
					return false;
				}
			}
			return true;
		}

		// Function from file: closets.dm
		public virtual bool can_open(  ) {
			
			if ( this.welded ) {
				return false;
			}
			return true;
		}

		// Function from file: closets.dm
		public override dynamic alter_health( Mob_Living M = null ) {
			return GlobalFuncs.get_turf( this );
		}

		// Function from file: closets.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			this.dump_contents();
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: closets.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			base.initialize( suppress_icon_check );

			if ( !this.opened ) {
				this.take_contents();
			} else {
				this.density = false;
			}
			return false;
		}

		// Function from file: closets.dm
		[Verb]
		[VerbInfo( name: "Toggle Open", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public virtual void verb_toggleopen(  ) {
			
			if ( Task13.User.incapacitated() ) {
				return;
			}

			if ( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Living_Silicon_Robot_Mommi ) {
				
				if ( Task13.User is Mob_Living_Silicon_Robot_Mommi ) {
					this.add_hiddenprint( Task13.User );
					this.add_fingerprint( Task13.User );
				}
				this.attack_hand( Task13.User );
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>This mob type can't use this verb.</span>" );
			}
			return;
		}

	}

}
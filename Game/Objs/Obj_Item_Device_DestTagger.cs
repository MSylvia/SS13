// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_DestTagger : Obj_Item_Device {

		public bool panel = false;
		public bool mode = false;
		public double? currTag = 0;
		public ByTable destinations = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.item_state = "electronic";
			this.slot_flags = 512;
			this.icon_state = "dest_tagger";
		}

		// Function from file: sortingmachinery.dm
		public Obj_Item_Device_DestTagger ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.destinations = GlobalVars.DEFAULT_TAGGER_LOCATIONS.Copy();
			return;
		}

		// Function from file: sortingmachinery.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic _default = null;

			double? idx = null;
			string newtag = null;

			_default = base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}
			this.add_fingerprint( Task13.User );

			if ( Lang13.Bool( href_list["nextTag"] ) ) {
				this.currTag = ( ( String13.ParseNumber( href_list["nextTag"] ) ??0) <= 0 ? 0 : ( ( String13.ParseNumber( href_list["nextTag"] ) ??0) >= this.destinations.len ? this.destinations.len : String13.ParseNumber( href_list["nextTag"] ) ) );
				this.interact( Task13.User );
				return 1;
			}

			if ( Lang13.Bool( href_list["remove_dest"] ) && this.mode ) {
				idx = ( ( String13.ParseNumber( href_list["remove_dest"] ) ??0) <= 1 ? 1 : ( ( String13.ParseNumber( href_list["remove_dest"] ) ??0) >= this.destinations.len ? this.destinations.len : String13.ParseNumber( href_list["remove_dest"] ) ) );
				this.destinations.Remove( this.destinations[idx] );
				this.interact( Task13.User );
				return 1;
			}

			if ( Lang13.Bool( href_list["new_dest"] ) && this.mode ) {
				newtag = String13.ToUpper( String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( Task13.User, "Destination ID?", "Add Destination", null, null, InputType.Str ) ), 1, 26 ) );
				this.destinations.Or( newtag );
				this.interact( Task13.User );
				return 1;
			}
			return _default;
		}

		// Function from file: sortingmachinery.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.panel ) {
				this.icon_state = "dest_tagger_p";
				this.desc += "\nThe panel appears to be open.";
			} else {
				this.icon_state = "dest_tagger";
				this.desc = Lang13.Initial( this, "desc" );
			}
			return null;
		}

		// Function from file: sortingmachinery.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			
			if ( a is Obj_Item_Weapon_Screwdriver ) {
				this.panel = !this.panel;
				GlobalFuncs.to_chat( b, new Txt( "<span class='notify'>You " ).item( ( this.panel ? "open" : "close" ) ).str( " the panel on " ).the( this ).item().str( ".</span>" ).ToString() );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
				this.update_icon();
				return 1;
			}

			if ( a is Obj_Item_Device_Multitool && this.panel ) {
				this.mode = !this.mode;
				GlobalFuncs.to_chat( b, new Txt( "<span class='notify'>You " ).item( ( this.mode ? "disable" : "enable" ) ).str( " the lock on " ).the( this ).item().str( ".</span>" ).ToString() );
				return 1;
			}
			_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			return _default;
		}

		// Function from file: sortingmachinery.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.interact( user );
			return null;
		}

		// Function from file: sortingmachinery.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			int? i = null;
			Browser popup = null;

			dat = "<table style='width:100%; padding:4px;'><tr>";
			i = null;
			i = 1;

			while (( i ??0) <= this.destinations.len) {
				dat += new Txt( "<td><a href='?src=" ).Ref( this ).str( ";nextTag=" ).item( i ).str( "'>" ).item( this.destinations[i] ).str( "</a>" ).item( ( this.mode ? new Txt( "<a href='?src=" ).Ref( this ).str( ";remove_dest=" ).item( i ).str( "' class='linkDanger'>[X]</a>" ).ToString() : "" ) ).str( "</td>" ).ToString();

				if ( ( i ??0) % 4 == 0 ) {
					dat += "</tr><tr>";
				}
				i++;
			}
			dat += "</tr></table><br>Current Selection: " + ( Lang13.Bool( this.currTag ) ? this.destinations[this.currTag] : "None" ) + ".<hr><br>";

			if ( this.mode ) {
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";new_dest=1'>Add destination</a>" ).ToString();
			}
			popup = new Browser( user, "destTagger", this.name, 380, 350, this );
			popup.add_stylesheet( "shared", "nano/css/shared.css" );
			popup.set_content( dat );
			popup.open();
			return null;
		}

	}

}
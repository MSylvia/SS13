// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Foamedmetal : Obj_Structure {

		public dynamic metal = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/effects/effects.dmi";
			this.icon_state = "metalfoam";
		}

		// Function from file: effect_system.dm
		public Obj_Structure_Foamedmetal ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_nearby_tiles();
			return;
		}

		// Function from file: effect_system.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			this.update_nearby_tiles();
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: effect_system.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( air_group == true ) {
				return false;
			}
			return !this.density;
		}

		// Function from file: effect_system.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic G = null;
			dynamic O = null;
			dynamic O2 = null;

			((Mob)b).delayNextAttack( 10 );

			if ( a is Obj_Item_Weapon_Grab ) {
				G = a;
				G.affecting.loc = this.loc;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					O = _a;
					

					if ( Lang13.Bool( O.client ) ) {
						GlobalFuncs.to_chat( O, "<span class='warning'>" + G.assailant + " smashes " + G.affecting + " through the foamed metal wall.</span>" );
					}
				}
				GlobalFuncs.returnToPool( a );
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( Rand13.PercentChance( Convert.ToInt32( a.force * 20 - this.metal * 25 ) ) ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You smash through the foamed metal with " ).the( a ).item().str( ".</span>" ).ToString() );

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewersExcludeThis( null, b ) )) {
					O2 = _b;
					

					if ( Lang13.Bool( O2.client ) && !Lang13.Bool( O2.blinded ) ) {
						GlobalFuncs.to_chat( O2, "<span class='warning'>" + b + " smashes through the foamed metal.</span>" );
					}
				}
				GlobalFuncs.qdel( this );
			} else {
				GlobalFuncs.to_chat( b, "<span class='notice'>You hit the metal foam to no effect.</span>" );
			}
			return null;
		}

		// Function from file: effect_system.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic O = null;

			((Mob)a).delayNextAttack( 10 );

			if ( Lang13.Bool( a.mutations.Contains( 4 ) ) || Rand13.PercentChance( ((int)( 75 - Convert.ToDouble( this.metal * 25 ) )) ) ) {
				GlobalFuncs.to_chat( a, "<span class='notice'>You smash through the metal foam wall.</span>" );

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( null, a ) )) {
					O = _a;
					

					if ( Lang13.Bool( O.client ) && !Lang13.Bool( O.blinded ) ) {
						GlobalFuncs.to_chat( O, "<span class='warning'>" + a + " smashes through the foamed metal.</span>" );
					}
				}
				GlobalFuncs.qdel( this );
			} else {
				GlobalFuncs.to_chat( a, "<span class='notice'>You hit the metal foam but bounce off it.</span>" );
			}
			return null;
		}

		// Function from file: effect_system.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand( a );
			return null;
		}

		// Function from file: effect_system.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( this.metal == 1 || Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: effect_system.dm
		public override bool blob_act( dynamic severity = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: effect_system.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: effect_system.dm
		public bool update_nearby_tiles(  ) {
			Ent_Static T = null;

			
			if ( GlobalVars.air_master == null ) {
				return false;
			}
			T = this.loc;

			if ( T is Tile ) {
				GlobalVars.air_master.mark_for_update( T );
			}
			return true;
		}

		// Function from file: effect_system.dm
		public void updateicon(  ) {
			
			if ( this.metal == 1 ) {
				this.icon_state = "metalfoam";
			} else {
				this.icon_state = "ironfoam";
			}
			return;
		}

	}

}
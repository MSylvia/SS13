// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Landmark : Obj_Effect {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.unacidable = true;
			this.icon = "icons/mob/screen1.dmi";
			this.icon_state = "x2";
		}

		// Function from file: landmarks.dm
		public Obj_Effect_Landmark ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.tag = "landmark*" + this.name;
			this.invisibility = 101;

			switch ((string)( this.name )) {
				case "shuttle":
					GlobalVars.shuttle_z = this.z;
					GlobalFuncs.qdel( this );
					break;
				case "airtunnel_stop":
					GlobalVars.airtunnel_stop = this.x;
					break;
				case "airtunnel_start":
					GlobalVars.airtunnel_start = this.x;
					break;
				case "airtunnel_bottom":
					GlobalVars.airtunnel_bottom = this.y;
					break;
				case "monkey":
					GlobalVars.monkeystart.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "start":
					GlobalVars.newplayer_start.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "wizard":
					GlobalVars.wizardstart.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "JoinLate":
					GlobalVars.latejoin.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "AssetJoinLate":
					GlobalVars.assistant_latejoin.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "prisonwarp":
					GlobalVars.prisonwarp.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "Holding Facility":
					GlobalVars.holdingfacility.Add( this.loc );
					break;
				case "tdome1":
					GlobalVars.tdome1.Add( this.loc );
					break;
				case "tdome2":
					GlobalVars.tdome2.Add( this.loc );
					break;
				case "tdomeadmin":
					GlobalVars.tdomeadmin.Add( this.loc );
					break;
				case "tdomeobserve":
					GlobalVars.tdomeobserve.Add( this.loc );
					break;
				case "prisonsecuritywarp":
					GlobalVars.prisonsecuritywarp.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "blobstart":
					GlobalVars.blobstart.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "xeno_spawn":
					GlobalVars.xeno_spawn.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "endgame_exit":
					GlobalVars.endgame_safespawns.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
				case "bluespacerift":
					GlobalVars.endgame_exits.Add( this.loc );
					GlobalFuncs.qdel( this );
					break;
			}
			GlobalVars.landmarks_list.Add( this );
			return; // Warning! Attempt to return some other value!
		}

		// Function from file: landmarks.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.landmarks_list.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
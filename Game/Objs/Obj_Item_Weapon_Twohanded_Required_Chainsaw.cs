// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Twohanded_Required_Chainsaw : Obj_Item_Weapon_Twohanded_Required {

		public bool on = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 64;
			this.force = 13;
			this.throwforce = 13;
			this.throw_range = 4;
			this.materials = new ByTable().Set( "$metal", 13000 );
			this.origin_tech = "materials=2;engineering=2;combat=2";
			this.attack_verb = new ByTable(new object [] { "sawed", "torn", "cut", "chopped", "diced" });
			this.hitsound = "swing_hit";
			this.sharpness = 1;
			this.action_button_name = "Pull the starting cord";
			this.icon_state = "chainsaw_off";
		}

		public Obj_Item_Weapon_Twohanded_Required_Chainsaw ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: twohanded.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.on = !this.on;
			user.WriteMsg( new Txt( "As you pull the starting cord dangling from " ).the( this ).item().str( ", " ).item( ( this.on ? "it begins to whirr." : "the chain stops moving." ) ).ToString() );
			this.force = ( this.on ? 21 : 13 );
			this.throwforce = ( this.on ? 21 : 13 );
			this.icon_state = "chainsaw_" + ( this.on ? "on" : "off" );

			if ( this.hitsound == "swing_hit" ) {
				this.hitsound = "sound/weapons/chainsawhit.ogg";
			} else {
				this.hitsound = "swing_hit";
			}

			if ( this == ((Mob)user).get_active_hand() ) {
				((Mob)user).update_inv_l_hand();
				((Mob)user).update_inv_r_hand();
			}
			return null;
		}

	}

}
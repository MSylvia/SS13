// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_SlotMachine : Obj_Machinery_Computer {

		public dynamic show_name = null;
		public Image overlay_1 = null;
		public Image overlay_2 = null;
		public Image overlay_3 = null;
		public int? value_1 = 1;
		public int? value_2 = 1;
		public int? value_3 = 1;
		public int rigged = 0;
		public double? stored_money = 0;
		public double? spin_cost = 15;
		public bool spinning = false;
		public int id = 0;
		public MoneyAccount our_money_account = null;
		public Obj_Item_Device_Radio radio = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.machine_flags = 30;
			this.icon = "icons/obj/slot_machine.dmi";
			this.icon_state = "slot";
		}

		// Function from file: slot_machine.dm
		public Obj_Machinery_Computer_SlotMachine ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.id = Rand13.Int( 1, 99999 );
			this.our_money_account = GlobalFuncs.create_account( "slot machine (" + this.id + ")", Rand13.Int( 30000, 50000 ) );
			this.radio = new Obj_Item_Device_Radio(  );
			this.update_icon();
			return;
		}

		// Function from file: slot_machine.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic S = null;
			dynamic money_add = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_Spacecash ) {
				
				if ( !this.can_play() ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " rejects your money.</span>" );
					return null;
				}
				S = a;
				money_add = S.amount * S.worth;

				if ( Lang13.Bool( b.drop_item( a ) ) ) {
					GlobalFuncs.qdel( a );
					this.stored_money += Convert.ToDouble( money_add );
					this.updateUsrDialog();
				}
			}
			return null;
		}

		// Function from file: slot_machine.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( this.spinning ) {
				return null;
			}

			if ( Lang13.Bool( href_list["reclaim"] ) ) {
				GlobalFuncs.dispense_cash( this.stored_money, GlobalFuncs.get_turf( this ) );
				this.stored_money = 0;
			} else if ( Lang13.Bool( href_list["spin"] ) ) {
				
				if ( ( this.stored_money ??0) >= ( this.spin_cost ??0) && this.can_play() ) {
					this.spin( Task13.User );
				}
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: slot_machine.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			Browser popup = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}
			((Mob)a).set_machine( this );
			dat = "<h4><center>Current Jackpot: <b>" + ( this.our_money_account != null ? "$" + GlobalFuncs.num2septext( this.our_money_account.money ) : "---ERROR---" ) + "</b></center></h4><br>";

			if ( ( this.stored_money ??0) > 0 ) {
				dat += new Txt( "There are <span style=\"color:" ).item( ( ( this.stored_money ??0) < ( this.spin_cost ??0) ? "red" : "green" ) ).str( "\"><b>$" ).item( GlobalFuncs.num2septext( this.stored_money ) ).str( "</b>\n			space credits insterted. <span style=\"color:blue\"><a href='?src=" ).Ref( this ).str( ";reclaim=1'>Reclaim</a></span><br>" ).ToString();
			} else {
				dat += "You need at least <b>$" + this.spin_cost + "</b> credits to play. Use a nearby ATM and retreive some cash from your money account!<br>";
			}

			if ( this.can_play() ) {
				
				if ( ( this.stored_money ??0) >= ( this.spin_cost ??0) ) {
					dat += new Txt( "<span style=\"color:yellow\"><a href='?src=" ).Ref( this ).str( ";spin=1'>Play! (<b>$" ).item( this.spin_cost ).str( "</b>)</a></span><br>" ).ToString();
				}
			} else {
				dat += "<b>OUT OF SERVICE</b><br>";
			}
			popup = new Browser( a, "slotmachine", "" + this, 500, 300, this );
			popup.set_content( dat );
			popup.open();
			GlobalFuncs.onclose( a, "slotmachine" );
			return null;
		}

		// Function from file: slot_machine.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			dynamic initial_icon = null;

			base.update_icon( (object)(location), (object)(target) );
			initial_icon = Lang13.Initial( this, "icon_state" );

			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "" + initial_icon + "b";
				this.remove_overlays();
			} else if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "" + initial_icon + "0";
				this.remove_overlays();
			} else {
				this.init_overlays();
				this.add_overlays();
				this.icon_state = initial_icon;
			}
			return null;
		}

		// Function from file: slot_machine.dm
		public bool can_play(  ) {
			
			if ( !( this.our_money_account != null ) ) {
				return false;
			}

			if ( ( this.our_money_account.money ??0) < 1000 ) {
				return false;
			}
			return true;
		}

		// Function from file: slot_machine.dm
		public void broadcast( dynamic message = null ) {
			
			if ( !Lang13.Bool( message ) ) {
				return;
			}
			GlobalFuncs.Broadcast_Message( this.radio, Lang13.BoolNullable( GlobalVars.all_languages["Galactic Common"] ), null, this.radio, message );
			return;
		}

		// Function from file: slot_machine.dm
		public void check_victory( Mob user = null ) {
			Image win_image = null;
			double? win_value = null;
			Mob_Living_SimpleAnimal_Chicken C = null;

			
			if ( !( this.our_money_account != null ) ) {
				return;
			}

			if ( this.value_1 == this.value_2 && this.value_1 == this.value_3 ) {
				win_image = new Image( "icons/obj/slot_machine.dmi", null, "win" );
				this.overlays.Or( win_image );
				win_value = 0;

				switch ((int?)( this.value_1 )) {
					case 1:
						win_value = this.our_money_account.money;
						this.broadcast( "" + user + " has just won the JACKPOT ($" + win_value + ")!" );
						break;
					case 9:
						win_value = ( this.spin_cost ??0) * 400;
						C = new Mob_Living_SimpleAnimal_Chicken( this.loc );
						C.name = "Pomf chicken";
						C.body_color = "white";
						C.icon_state = "chicken_white";
						C.icon_living = "chicken_white";
						C.icon_dead = "chicken_white_dead";
						break;
					case 2:
						win_value = ( this.spin_cost ??0) * 300;
						break;
					case 3:
						win_value = ( this.spin_cost ??0) * 200;
						break;
					case 4:
						win_value = ( this.spin_cost ??0) * 100;
						break;
					case 5:
						win_value = ( this.spin_cost ??0) * 75;
						break;
					case 6:
						win_value = ( this.spin_cost ??0) * 60;
						break;
					case 7:
						win_value = ( this.spin_cost ??0) * 12;
						break;
					case 8:
						win_value = ( this.spin_cost ??0) * 10;
						break;
					case 10:
						win_value = ( this.spin_cost ??0) * 4;
						break;
				}

				if ( Lang13.Bool( win_value ) ) {
					win_value = Num13.MinInt( ((int)( win_value ??0 )), ((int)( this.our_money_account.money ??0 )) );
					Task13.Schedule( 10, (Task13.Closure)(() => {
						
						if ( this.our_money_account.charge( win_value, null, "Victory", "one-armed bandit #" + this.id ) ) {
							GlobalFuncs.dispense_cash( win_value, GlobalFuncs.get_turf( this ) );
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "polaroid", 50, 1 );
							GlobalFuncs.to_chat( user, "<span class='notice'>You win $" + win_value + "!</span>" );
						} else {
							this.visible_message( "<span class='danger'>" + this + "'s screen flashes red.</span>" );
						}
						return;
					}));
				}
				Task13.Sleep( 50 );
				this.overlays.Remove( win_image );
			}
			return;
		}

		// Function from file: slot_machine.dm
		public void spin( Mob user = null ) {
			int victory = 0;
			ByTable spin_states = null;
			dynamic sound_to_play = null;
			int sleep_time = 0;

			
			if ( this.spinning ) {
				return;
			}

			if ( ( this.stored_money ??0) >= ( this.spin_cost ??0) ) {
				this.stored_money -= this.spin_cost ??0;
			} else {
				return;
			}
			this.spinning = true;
			this.remove_overlays();

			if ( this.rigged != 0 ) {
				this.value_1 = ( this.rigged <= 1 ? 1 : ( this.rigged >= 10 ? 10 : this.rigged ) );
				this.value_2 = this.value_1;
				this.value_3 = this.value_1;
				this.rigged = 0;
			} else {
				victory = Rand13.Int( 1, 10 );

				dynamic _a = victory; // Was a switch-case, sorry for the mess.
				if ( 2<=_a&&_a<=10 ) {
					this.spin_wheels( -1 );
				} else if ( _a==1 ) {
					this.spin_wheels( Lang13.IntNullable( Rand13.Pick(new object [] { 7, 8, 10 }) ) );
				}
			}
			spin_states = new ByTable(new object [] { "spin1", "spin2", "spin3" });
			this.overlay_1.icon_state = Rand13.PickFromTable( spin_states );
			spin_states.Remove( this.overlay_1.icon_state );
			this.overlay_2.icon_state = Rand13.PickFromTable( spin_states );
			spin_states.Remove( this.overlay_2.icon_state );
			this.overlay_3.icon_state = Rand13.PickFromTable( spin_states );
			spin_states.Remove( this.overlay_3.icon_state );
			this.add_overlays();
			sound_to_play = Rand13.Pick(new object [] { "sound/effects/xylophone1.ogg", "sound/effects/xylophone2.ogg", "sound/effects/xylophone3.ogg" });
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), new Sound( sound_to_play ), 30, -4 );
			sleep_time = 48;
			Task13.Sleep( ((int)( sleep_time / 3 )) );
			this.update_overlay_icon_state( this.overlay_1, "" + this.value_1 );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/chime.ogg", 50, -4 );
			Task13.Sleep( ((int)( sleep_time / 3 )) );
			this.update_overlay_icon_state( this.overlay_2, "" + this.value_2 );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/chime.ogg", 50, -4 );
			Task13.Sleep( ((int)( sleep_time / 3 )) );
			this.update_overlay_icon_state( this.overlay_3, "" + this.value_3 );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/chime.ogg", 50, -4 );
			this.check_victory( user );
			this.spinning = false;
			return;
		}

		// Function from file: slot_machine.dm
		public void spin_wheels( int? win = null ) {
			win = win ?? -1;

			
			while (true) {
				this.value_1 = Rand13.Int( 1, 10 );
				this.value_2 = Rand13.Int( 1, 10 );
				this.value_3 = Rand13.Int( 1, 10 );

				dynamic _a = win; // Was a switch-case, sorry for the mess.
				if ( 1<=_a&&_a<=10 ) {
					this.value_1 = win;
					this.value_2 = win;
					this.value_3 = win;
					return;
				} else if ( _a==-1 ) {
					return;
				} else if ( _a==0 ) {
					
					if ( !( this.value_1 == this.value_2 && this.value_2 == this.value_3 ) ) {
						return;
					}
				} else {
					return;
				}
			}
			return;
		}

		// Function from file: slot_machine.dm
		public void init_overlays(  ) {
			this.overlay_1 = new Image( "icons/obj/slot_machine.dmi", this, "" + this.value_1 );
			this.overlay_2 = new Image( "icons/obj/slot_machine.dmi", this, "" + this.value_2 );
			this.overlay_2.pixel_x = 4;
			this.overlay_3 = new Image( "icons/obj/slot_machine.dmi", this, "" + this.value_3 );
			this.overlay_3.pixel_x = 8;
			return;
		}

		// Function from file: slot_machine.dm
		public void update_overlay_icon_state( Image I = null, string new_icon_state = null ) {
			this.overlays.Remove( I );
			I.icon_state = new_icon_state;
			this.overlays.Or( I );
			return;
		}

		// Function from file: slot_machine.dm
		public void add_overlays(  ) {
			this.overlays.Or( new ByTable(new object [] { this.overlay_1, this.overlay_2, this.overlay_3 }) );
			return;
		}

		// Function from file: slot_machine.dm
		public void remove_overlays(  ) {
			this.overlays.Remove( new ByTable(new object [] { this.overlay_1, this.overlay_2, this.overlay_3 }) );
			return;
		}

	}

}
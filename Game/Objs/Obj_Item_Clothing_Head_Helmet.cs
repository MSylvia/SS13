// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Head_Helmet : Obj_Item_Clothing_Head {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 4096;
			this.item_state = "helmet";
			this.armor = new ByTable().Set( "melee", 30 ).Set( "bullet", 25 ).Set( "laser", 25 ).Set( "energy", 10 ).Set( "bomb", 25 ).Set( "bio", 0 ).Set( "rad", 0 );
			this.flags_inv = 6;
			this.cold_protection = 1;
			this.min_cold_protection_temperature = 160;
			this.heat_protection = 1;
			this.max_heat_protection_temperature = 600;
			this.strip_delay = 60;
			this.flags_cover = 4;
			this.icon_state = "helmet";
		}

		// Function from file: helmet.dm
		public Obj_Item_Clothing_Head_Helmet ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: helmet.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic S = null;
			Obj_Item_Device_Flashlight_Seclite S2 = null;

			
			if ( A is Obj_Item_Device_Flashlight_Seclite ) {
				S = A;

				if ( this.can_flashlight ) {
					
					if ( !Lang13.Bool( this.F ) ) {
						
						if ( !((Mob)user).unEquip( A ) ) {
							return null;
						}
						user.WriteMsg( "<span class='notice'>You click " + S + " into place on " + this + ".</span>" );

						if ( Lang13.Bool( S.on ) ) {
							this.SetLuminosity( 0 );
						}
						this.F = S;
						A.loc = this;
						this.update_icon();
						this.update_helmlight( user );
						this.verbs.Add( typeof(Obj_Item_Clothing_Head_Helmet).GetMethod( "toggle_helmlight" ) );
					}
				}
				return null;
			}

			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.F ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Device_Flashlight_Seclite) )) {
						S2 = _a;
						
						user.WriteMsg( "<span class='notice'>You unscrew the seclite from " + this + ".</span>" );
						this.F = null;
						S2.loc = GlobalFuncs.get_turf( user );
						this.update_helmlight( user );
						S2.update_brightness( user );
						this.update_icon();
						Task13.User.update_inv_head();
						this.verbs.Remove( typeof(Obj_Item_Clothing_Head_Helmet).GetMethod( "toggle_helmlight" ) );
					}
					return null;
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: helmet.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( Lang13.Bool( this.F ) ) {
				
				if ( Lang13.Bool( this.F.on ) ) {
					((Ent_Static)user).AddLuminosity( Convert.ToDouble( -this.F.brightness_on ) );
					this.SetLuminosity( this.F.brightness_on );
				}
			}
			return false;
		}

		// Function from file: helmet.dm
		public override bool pickup( dynamic user = null ) {
			
			if ( Lang13.Bool( this.F ) ) {
				
				if ( Lang13.Bool( this.F.on ) ) {
					((Ent_Static)user).AddLuminosity( Convert.ToDouble( this.F.brightness_on ) );
					this.SetLuminosity( 0 );
				}
			}
			return false;
		}

		// Function from file: helmet.dm
		public void update_helmlight( dynamic user = null ) {
			
			if ( Lang13.Bool( this.F ) ) {
				this.action_button_name = "Toggle Helmetlight";

				if ( Lang13.Bool( this.F.on ) ) {
					
					if ( this.loc == user ) {
						((Ent_Static)user).AddLuminosity( Convert.ToDouble( this.F.brightness_on ) );
					} else if ( this.loc is Tile ) {
						this.SetLuminosity( this.F.brightness_on );
					}
				} else if ( this.loc == user ) {
					((Ent_Static)user).AddLuminosity( Convert.ToDouble( -this.F.brightness_on ) );
				} else if ( this.loc is Tile ) {
					this.SetLuminosity( 0 );
				}
				this.update_icon();
			} else {
				this.action_button_name = null;

				if ( this.loc == user ) {
					((Ent_Static)user).AddLuminosity( -5 );
				} else if ( this.loc is Tile ) {
					this.SetLuminosity( 0 );
				}
				return;
			}
			return;
		}

		// Function from file: helmet.dm
		[VerbInfo( name: "Toggle Helmetlight", desc: "Click to toggle your helmet's attached flashlight.", group: "Object" )]
		public void toggle_helmlight(  ) {
			Mob user = null;

			
			if ( !Lang13.Bool( this.F ) ) {
				return;
			}
			user = Task13.User;

			if ( user.incapacitated() ) {
				return;
			}

			if ( !( user.loc is Tile ) ) {
				user.WriteMsg( "<span class='warning'>You cannot turn the light on while in this " + user.loc + "!</span>" );
			}
			this.F.on = !Lang13.Bool( this.F.on );
			user.WriteMsg( "<span class='notice'>You toggle the helmetlight " + ( Lang13.Bool( this.F.on ) ? "on" : "off" ) + ".</span>" );
			GlobalFuncs.playsound( user, "sound/weapons/empty.ogg", 100, 1 );
			this.update_helmlight( user );
			return;
		}

		// Function from file: helmet.dm
		public override void ui_action_click(  ) {
			this.toggle_helmlight();
			base.ui_action_click();
			return;
		}

		// Function from file: helmet.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			string state = null;
			Ent_Static H = null;

			state = "" + Lang13.Initial( this, "icon_state" );

			if ( Lang13.Bool( this.F ) ) {
				
				if ( Lang13.Bool( this.F.on ) ) {
					state += "-flight-on";
				} else {
					state += "-flight";
				}
			}
			this.icon_state = state;

			if ( this.loc is Mob_Living_Carbon_Human ) {
				H = this.loc;
				((dynamic)H).update_inv_head();
			}
			return false;
		}

		// Function from file: helmet.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic C = null;

			
			if ( this.can_toggle && !((Mob)user).incapacitated() ) {
				
				if ( Game13.time > this.cooldown + this.toggle_cooldown ) {
					this.cooldown = Game13.time;
					this.up = !( this.up != 0 ) ?1:0;
					this.flags ^= this.visor_flags;
					this.flags_inv ^= this.visor_flags_inv;
					this.flags_cover ^= Lang13.Initial( this, "flags_cover" );
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + ( this.up != 0 ? "up" : "" );
					user.WriteMsg( new Txt().item( ( this.up != 0 ? this.alt_toggle_message : this.toggle_message ) ).str( " " ).the( this ).item().ToString() );
					((Mob)user).update_inv_head();

					if ( user is Mob_Living_Carbon ) {
						C = user;
						((Mob_Living_Carbon)C).head_update( this, true );
					}

					if ( Lang13.Bool( this.active_sound ) ) {
						
						while (this.up != 0) {
							GlobalFuncs.playsound( this.loc, "" + this.active_sound, 100, 0, 4 );
							Task13.Sleep( 15 );
						}
					}
				}
			}
			return null;
		}

		// Function from file: helmet.dm
		public override double emp_act( int severity = 0 ) {
			base.emp_act( severity );
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Tile : Obj_Item_Stack {

		public Type turf_type = null;
		public string mineralType = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "broken tile";
			this.force = 1;
			this.throwforce = 1;
			this.throw_speed = 3;
			this.max_amount = 60;
			this.icon = "icons/obj/tiles.dmi";
		}

		public Obj_Item_Stack_Tile ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: tile_types.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;
			Obj_Item_Stack_Sheet_Metal new_item = null;
			Obj_Item_Stack_Tile R = null;
			bool replace = false;
			Type sheet_type = null;
			dynamic new_item2 = null;
			Obj_Item_Stack_Tile R2 = null;
			bool replace2 = false;

			
			if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				if ( ( this.get_amount() ??0) < 4 ) {
					user.WriteMsg( "<span class='warning'>You need at least four tiles to do this!</span>" );
					return null;
				}

				if ( ((Obj_Item)WT).is_hot() != 0 && !Lang13.Bool( this.mineralType ) ) {
					user.WriteMsg( "<span class='warning'>You can not reform this!</span>" );
					return null;
				}

				if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
					
					if ( this.mineralType == "plasma" ) {
						this.atmos_spawn_air( 5, 5 );
						((Ent_Static)user).visible_message( "<span class='warning'>" + user.name + " sets the plasma tiles on fire!</span>", "<span class='warning'>You set the plasma tiles on fire!</span>" );
						GlobalFuncs.qdel( this );
						return null;
					}

					if ( this.mineralType == "metal" ) {
						new_item = new Obj_Item_Stack_Sheet_Metal( user.loc );
						((Ent_Static)user).visible_message( "" + user.name + " shaped " + this + " into metal with the weldingtool.", "<span class='notice'>You shaped " + this + " into metal with the weldingtool.</span>", "<span class='italics'>You hear welding.</span>" );
						R = this;
						Task13.Source = null;
						replace = ((Mob)user).get_inactive_hand() == R;
						R.use( 4 );

						if ( !( R != null ) && replace ) {
							((Mob)user).put_in_hands( new_item );
						}
					} else {
						sheet_type = Lang13.FindClass( "/obj/item/stack/sheet/mineral/" + this.mineralType );
						new_item2 = Lang13.Call( sheet_type, user.loc );
						((Ent_Static)user).visible_message( "" + user.name + " shaped " + this + " into a sheet with the weldingtool.", "<span class='notice'>You shaped " + this + " into a sheet with the weldingtool.</span>", "<span class='italics'>You hear welding.</span>" );
						R2 = this;
						Task13.Source = null;
						replace2 = ((Mob)user).get_inactive_hand() == R2;
						R2.use( 4 );

						if ( !( R2 != null ) && replace2 ) {
							((Mob)user).put_in_hands( new_item2 );
						}
					}
				}
				return null;
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

	}

}
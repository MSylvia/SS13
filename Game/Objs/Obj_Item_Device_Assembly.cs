// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly : Obj_Item_Device {

		public string short_name = null;
		public bool show_status = true;
		public bool secured = true;
		public ByTable attached_overlays = null;
		public Obj_Item_Device holder = null;
		public int cooldown = 0;
		public int wires = 3;
		public bool WIRE_RECEIVE = true;
		public int WIRE_PULSE = 2;
		public int WIRE_PULSE_SPECIAL = 4;
		public int WIRE_RADIO_RECEIVE = 8;
		public int WIRE_RADIO_PULSE = 16;
		public string connection_text = "sending signals to";
		public ByTable accessible_values = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.starting_materials = new ByTable().Set( "$iron", 100 );
			this.w_type = 5;
			this.throwforce = 2;
			this.throw_speed = 3;
			this.throw_range = 10;
			this.origin_tech = "magnets=1";
			this.icon = "icons/obj/assemblies/new_assemblies.dmi";
		}

		// Function from file: assembly.dm
		public Obj_Item_Device_Assembly ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( !Lang13.Bool( this.short_name ) ) {
				this.short_name = this.name;
			}
			return;
		}

		// Function from file: assembly.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			return null;
		}

		// Function from file: assembly.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !Lang13.Bool( user ) ) {
				return 0;
			}
			((Mob)user).set_machine( this );
			this.interact( user );
			return 1;
		}

		// Function from file: assembly.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.show_status ) {
				
				if ( this.secured ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='info'>" ).The( this ).item().str( " is ready!</span>" ).ToString() );
				} else {
					GlobalFuncs.to_chat( user, new Txt( "<span class='info'>" ).The( this ).item().str( " can be attached!</span>" ).ToString() );
				}
			}
			return null;
		}

		// Function from file: assembly.dm
		public override dynamic process(  ) {
			GlobalVars.processing_objects.Remove( this );
			return null;
		}

		// Function from file: assembly.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic A = null;

			
			if ( GlobalFuncs.isassembly( a ) ) {
				A = a;

				if ( !Lang13.Bool( A.secured ) && !this.secured ) {
					this.attach_assembly( A, b );
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( this.toggle_secure() ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).The( this ).item().str( " is ready!</span>" ).ToString() );
				} else {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).The( this ).item().str( " can now be attached!</span>" ).ToString() );
				}
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: assembly.dm
		public bool attach_assembly( dynamic A = null, dynamic user = null ) {
			this.holder = new Obj_Item_Device_AssemblyHolder( GlobalFuncs.get_turf( this ) );

			if ( Lang13.Bool( ((dynamic)this.holder).attach( A, this, user ) ) ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You attach " ).the( A ).item().str( " to " ).the( this ).item().str( "!</span>" ).ToString() );
				return true;
			}
			return false;
		}

		// Function from file: assembly.dm
		public virtual bool toggle_secure(  ) {
			this.secured = !this.secured;
			this.update_icon();
			return this.secured;
		}

		// Function from file: assembly.dm
		public virtual bool activate(  ) {
			
			if ( !this.secured || this.cooldown > 0 ) {
				return false;
			}
			this.cooldown = 2;
			Task13.Schedule( 10, (Task13.Closure)(() => {
				this.process_cooldown();
				return;
			}));
			return true;
		}

		// Function from file: assembly.dm
		public virtual bool pulse( bool? radio = null ) {
			radio = radio ?? false;

			Obj_Item_Device AB = null;
			Ent_Static G = null;

			
			if ( this.holder is Obj_Item_Device_AssemblyFrame ) {
				AB = this.holder;
				((dynamic)AB).receive_pulse( this );
			} else {
				
				if ( this.holder != null && ( this.wires & 2 ) != 0 ) {
					((dynamic)this.holder).process_activation( this, 1, 0 );
				}

				if ( this.holder != null && ( this.wires & 4 ) != 0 ) {
					((dynamic)this.holder).process_activation( this, 0, 1 );
				}
			}

			if ( this.loc is Obj_Item_Weapon_Grenade ) {
				G = this.loc;
				((dynamic)G).prime();
			}
			return true;
		}

		// Function from file: assembly.dm
		public bool pulsed( bool? radio = null ) {
			radio = radio ?? false;

			
			if ( this.holder != null && ( this.wires & 1 ) != 0 ) {
				this.activate();
			}

			if ( radio == true && ( this.wires & 8 ) != 0 ) {
				this.activate();
			}
			return true;
		}

		// Function from file: assembly.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Ent_Static A = null;
			Ent_Static AF = null;

			
			if ( this.loc is Obj_Item_Device_AssemblyHolder || this.holder is Obj_Item_Device_AssemblyHolder ) {
				A = this.loc;

				if ( ((dynamic)A).a_left == this ) {
					((dynamic)A).a_left = null;
				} else if ( ((dynamic)A).a_right == this ) {
					((dynamic)A).a_right = null;
				}
				this.holder = null;
			} else if ( this.loc is Obj_Item_Device_AssemblyFrame ) {
				AF = this.loc;
				((Obj_Item_Device_AssemblyFrame)AF).eject_assembly( this );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: assembly.dm
		public bool process_cooldown(  ) {
			this.cooldown--;

			if ( this.cooldown <= 0 ) {
				return false;
			}
			Task13.Schedule( 10, (Task13.Closure)(() => {
				this.process_cooldown();
				return;
			}));
			return true;
		}

		// Function from file: assembly.dm
		public virtual void disconnected( dynamic A = null, bool? in_frame = null ) {
			in_frame = in_frame ?? false;

			return;
		}

		// Function from file: assembly.dm
		public virtual void connected( dynamic A = null, bool? in_frame = null ) {
			in_frame = in_frame ?? false;

			return;
		}

		// Function from file: assembly.dm
		public virtual void set_value( string var_name = null, dynamic new_value = null ) {
			this.vars[var_name] = new_value;
			return;
		}

		// Function from file: assembly.dm
		public virtual void write_to_value( dynamic value = null, dynamic new_value = null ) {
			ByTable L = null;
			string var_to_change = null;

			Interface13.Stat( null, this.accessible_values.Contains( !Lang13.Bool( value ) ) );

			if ( false ) {
				return;
			}
			L = String13.ParseUrlParams( this.accessible_values[value] );

			if ( L[2] == "number" ) {
				
				if ( !Lang13.Bool( Lang13.IsNumber( new_value ) ) ) {
					return;
				}

				if ( L.len >= 4 ) {
					new_value = ( Convert.ToDouble( new_value ) <= ( String13.ParseNumber( L[3] ) ??0) ? ((dynamic)( String13.ParseNumber( L[3] ) )) : ( Convert.ToDouble( new_value ) >= ( String13.ParseNumber( L[4] ) ??0) ? ((dynamic)( String13.ParseNumber( L[4] ) )) : new_value ) );
				}
			} else if ( !( new_value is string ) ) {
				new_value = "" + new_value;
			}
			var_to_change = L[1];
			this.set_value( var_to_change, new_value );
			return;
		}

		// Function from file: assembly.dm
		public virtual dynamic get_value( dynamic value = null ) {
			ByTable L = null;
			dynamic var_to_grab = null;

			Interface13.Stat( null, this.accessible_values.Contains( !Lang13.Bool( value ) ) );

			if ( false ) {
				return null;
			}
			L = String13.ParseUrlParams( this.accessible_values[value] );
			var_to_grab = L[1];
			return this.vars[var_to_grab];
		}

		// Function from file: assembly.dm
		public virtual void send_pulses_to_list( ByTable L = null ) {
			Obj_Item_Device_Assembly A = null;

			
			if ( !( L != null ) || !( L.len != 0 ) ) {
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( L, typeof(Obj_Item_Device_Assembly) )) {
				A = _a;
				
				A.pulsed();
			}
			return;
		}

		// Function from file: assembly.dm
		public string describe(  ) {
			return "The trigger assembly looks broken!";
		}

		// Function from file: assembly.dm
		public virtual bool holder_movement(  ) {
			return false;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "process cooldown" )]
		public void _internal_process_cooldown(  ) {
			return;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "attach assembly" )]
		[VerbArg( 1, InputType.Obj )]
		[VerbArg( 2, InputType.Mob )]
		public void _internal_attach_assembly( dynamic A = null, dynamic user = null ) {
			return;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "toggle secure" )]
		public void _internal_toggle_secure(  ) {
			return;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "pulse" )]
		public void _internal_pulse( bool? radio = null ) {
			radio = radio ?? false;

			return;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "pulsed" )]
		public void _internal_pulsed( bool? radio = null ) {
			radio = radio ?? false;

			return;
		}

		// Function from file: assembly.dm
		[VerbInfo( name: "activate" )]
		public void _internal_activate(  ) {
			return;
		}

	}

}
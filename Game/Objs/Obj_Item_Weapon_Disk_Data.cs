// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Disk_Data : Obj_Item_Weapon_Disk {

		public Dna2_Record buf = null;
		public bool read_only = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "card-id";
			this.w_class = 1;
			this.icon = "icons/obj/cloning.dmi";
			this.icon_state = "datadisk0";
		}

		// Function from file: cloning.dm
		public Obj_Item_Weapon_Disk_Data ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic diskcolor = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			diskcolor = Rand13.Pick(new object [] { 0, 1, 2 });
			this.icon_state = "datadisk" + diskcolor;
			return;
		}

		// Function from file: cloning.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "The write-protect tab is set to " + ( this.read_only ? "protected" : "unprotected" ) + "." );
			return null;
		}

		// Function from file: cloning.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.read_only = !this.read_only;
			GlobalFuncs.to_chat( user, "You flip the write-protect tab to " + ( this.read_only ? "protected" : "unprotected" ) + "." );
			return null;
		}

		// Function from file: cloning.dm
		public void Initialize(  ) {
			this.buf = new Dna2_Record();
			this.buf.dna = new Dna();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Effect_Sparks : Obj_Effect_Effect {

		public int inertia_dir = 0;
		public int energy = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon_state = "sparks";
		}

		// Function from file: effect_system.dm
		public Obj_Effect_Effect_Sparks ( dynamic travel_dir = null ) : base( (object)(travel_dir) ) {
			Ent_Static T = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			T = this.loc;

			if ( T is Tile ) {
				new ByTable().Set( 1, 1000 ).Set( 2, 100 ).Set( "surfaces", 1 ).Apply( Lang13.BindFunc( T, "hotspot_expose" ) );
			}
			return;
		}

		// Function from file: effect_system.dm
		public override dynamic process(  ) {
			
			if ( this.energy == 0 ) {
				GlobalVars.processing_objects.Remove( this );
				GlobalFuncs.returnToPool( this );
				return null;
			} else {
				Map13.Step( this, this.inertia_dir );
			}
			this.energy--;
			return null;
		}

		// Function from file: effect_system.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			Ent_Static T = null;

			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			T = this.loc;

			if ( T is Tile ) {
				new ByTable().Set( 1, 1000 ).Set( 2, 100 ).Set( "surfaces", 1 ).Apply( Lang13.BindFunc( T, "hotspot_expose" ) );
			}
			return false;
		}

		// Function from file: effect_system.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Ent_Static T = null;

			GlobalVars.processing_objects.Remove( this );
			T = this.loc;

			if ( T is Tile ) {
				new ByTable().Set( 1, 1000 ).Set( 2, 100 ).Set( "surfaces", 1 ).Apply( Lang13.BindFunc( T, "hotspot_expose" ) );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: effect_system.dm
		public void start( dynamic travel_dir = null, int? max_energy = null ) {
			max_energy = max_energy ?? 3;

			Ent_Static T = null;

			this.inertia_dir = Convert.ToInt32( travel_dir );
			this.energy = Rand13.Int( 1, max_energy ??0 );
			GlobalVars.processing_objects.Add( this );
			T = this.loc;

			if ( T is Tile ) {
				new ByTable().Set( 1, 1000 ).Set( 2, 100 ).Set( "surfaces", 1 ).Apply( Lang13.BindFunc( T, "hotspot_expose" ) );
			}
			return;
		}

	}

}
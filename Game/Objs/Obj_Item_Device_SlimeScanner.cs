// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_SlimeScanner : Obj_Item_Device {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.origin_tech = "biotech=1";
			this.w_class = 2;
			this.flags = 64;
			this.throw_speed = 3;
			this.materials = new ByTable().Set( "$metal", 30 ).Set( "$glass", 20 );
			this.icon_state = "adv_spectrometer";
		}

		public Obj_Item_Device_SlimeScanner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: scanners.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			dynamic T = null;

			
			if ( Lang13.Bool( user.stat ) || user.eye_blind != 0 ) {
				return false;
			}

			if ( !( M is Mob_Living_SimpleAnimal_Slime ) ) {
				user.WriteMsg( "<span class='warning'>This device can only scan slimes!</span>" );
				return false;
			}
			T = M;
			user.WriteMsg( "Slime scan results:" );
			user.WriteMsg( "" + T.colour + " " + ( T.is_adult ? "adult" : "baby" ) + " slime" );
			user.WriteMsg( "Nutrition: " + T.nutrition + "/" + ((Mob_Living_SimpleAnimal_Slime)T).get_max_nutrition() );

			if ( T.nutrition < ((Mob_Living_SimpleAnimal_Slime)T).get_starve_nutrition() ) {
				user.WriteMsg( "<span class='warning'>Warning: slime is starving!</span>" );
			} else if ( T.nutrition < ((Mob_Living_SimpleAnimal_Slime)T).get_hunger_nutrition() ) {
				user.WriteMsg( "<span class='warning'>Warning: slime is hungry</span>" );
			}
			user.WriteMsg( "Electric change strength: " + T.powerlevel );
			user.WriteMsg( "Health: " + Num13.Round( Convert.ToDouble( T.health / T.maxHealth ), 0.01 ) * 100 );

			if ( T.slime_mutation[4] == T.colour ) {
				user.WriteMsg( "This slime does not evolve any further." );
			} else if ( T.slime_mutation[3] == T.slime_mutation[4] ) {
				
				if ( T.slime_mutation[2] == T.slime_mutation[1] ) {
					user.WriteMsg( "Possible mutation: " + T.slime_mutation[3] );
					user.WriteMsg( "Genetic destability: " + T.mutation_chance / 2 + " % chance of mutation on splitting" );
				} else {
					user.WriteMsg( "Possible mutations: " + T.slime_mutation[1] + ", " + T.slime_mutation[2] + ", " + T.slime_mutation[3] + " (x2)" );
					user.WriteMsg( "Genetic destability: " + T.mutation_chance + " % chance of mutation on splitting" );
				}
			} else {
				user.WriteMsg( "Possible mutations: " + T.slime_mutation[1] + ", " + T.slime_mutation[2] + ", " + T.slime_mutation[3] + ", " + T.slime_mutation[4] );
				user.WriteMsg( "Genetic destability: " + T.mutation_chance + " % chance of mutation on splitting" );
			}

			if ( T.cores > 1 ) {
				user.WriteMsg( "Anomalious slime core amount detected" );
			}
			user.WriteMsg( "Growth progress: " + T.amount_grown + "/" + 10 );
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle_Molotov : Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle {

		public ByTable accelerants = new ByTable(new object [] { 
											typeof(Reagent_Consumable_Ethanol), 
											typeof(Reagent_Fuel), 
											typeof(Reagent_Clf3), 
											typeof(Reagent_Phlogiston), 
											typeof(Reagent_Napalm), 
											typeof(Reagent_Hellwater), 
											typeof(Reagent_Toxin_Plasma), 
											typeof(Reagent_Toxin_SporeBurning)
										 });
		public bool active = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.list_reagents = new ByTable();
			this.icon_state = "vodkabottle";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle_Molotov ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: bottle.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.active ) {
				
				if ( !this.isGlass ) {
					user.WriteMsg( "<span class='danger'>The flame's spread too far on it!</span>" );
					return null;
				}
				user.WriteMsg( new Txt( "<span class='info'>You snuff out the flame on " ).the( this ).item().str( ".</span>" ).ToString() );
				this.overlays.Remove( GlobalVars.fire_overlay );
				this.active = false;
			}
			return null;
		}

		// Function from file: bottle.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic bombturf = null;
			dynamic bombarea = null;
			int counter = 0;
			Ent_Static target = null;
			Ent_Static S = null;
			Ent_Static A2 = null;

			
			if ( ((Obj_Item)A).is_hot() != 0 && !this.active ) {
				this.active = true;
				bombturf = GlobalFuncs.get_turf( this );
				bombarea = GlobalFuncs.get_area( bombturf );
				GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name( user ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A> has primed a " ).item( this.name ).str( " for detonation at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( bombarea ).str( " (JMP)</a>." ).ToString() );
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has primed a " + this.name + " for detonation at " + bombarea + " (" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")." );
				user.WriteMsg( new Txt( "<span class='info'>You light " ).the( this ).item().str( " on fire.</span>" ).ToString() );
				this.overlays.Add( GlobalVars.fire_overlay );

				if ( !this.isGlass ) {
					Task13.Schedule( 50, (Task13.Closure)(() => {
						
						if ( this.active ) {
							target = this.loc;
							counter = 0;

							while (counter < 2) {
								
								if ( target is Obj_Item_Weapon_Storage ) {
									S = target;
									target = S.loc;
								}
								counter++;
							}

							if ( target is Ent_Static ) {
								A2 = target;
								this.SplashReagents( A2 );
								A2.fire_act();
							}
							GlobalFuncs.qdel( this );
						}
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: bottle.dm
		public override bool throw_impact( dynamic target = null, Mob_Living_Carbon thrower = null ) {
			bool firestarter = false;
			Reagent R = null;
			dynamic A = null;

			firestarter = false;

			foreach (dynamic _b in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
				R = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( this.accelerants )) {
					A = _a;
					

					if ( Lang13.Bool( A.IsInstanceOfType( R ) ) ) {
						firestarter = true;
						break;
					}
				}
			}
			this.SplashReagents( target );

			if ( firestarter && this.active ) {
				((Ent_Static)target).fire_act();
				new Obj_Effect_Hotspot( GlobalFuncs.get_turf( target ) );
			}
			base.throw_impact( (object)(target), thrower );
			return false;
		}

		// Function from file: bottle.dm
		public override void CheckParts( Game_Data holder = null ) {
			dynamic B = null;

			B = Lang13.FindIn( typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks_Bottle), this.contents );

			if ( Lang13.Bool( B ) ) {
				this.icon_state = B.icon_state;
				B.reagents.copy_to( this, 100 );

				if ( !B.isGlass ) {
					this.desc += " You're not sure if making this out of a carton was the brightest idea.";
					this.isGlass = false;
				}
			}
			return;
		}

	}

}
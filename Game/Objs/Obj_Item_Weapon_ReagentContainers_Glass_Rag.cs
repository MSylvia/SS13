// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Glass_Rag : Obj_Item_Weapon_ReagentContainers_Glass {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.possible_transfer_amounts = new ByTable(new object [] { 5 });
			this.volume = 5;
			this.can_be_placed_into = null;
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "rag";
		}

		public Obj_Item_Weapon_ReagentContainers_Glass_Rag ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: vgstation13.dme
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			Obj_Effect O = null;

			
			if ( !( flag == true ) ) {
				return false;
			}

			if ( ( this.reagents.total_volume ??0) < 1 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Your rag is dry!</span>" );
				return false;
			}
			((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " begins to wipe down " ).the( A ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You begin to wipe down " ).the( A ).item().str( ".</span>" ).ToString() );

			if ( GlobalFuncs.do_after( user, A, 50 ) ) {
				
				if ( Lang13.Bool( A ) ) {
					((Ent_Static)A).clean_blood();

					if ( A is Tile ) {
						
						foreach (dynamic _a in Lang13.Enumerate( A, typeof(Obj_Effect) )) {
							O = _a;
							

							if ( O is Obj_Effect_Rune || O is Obj_Effect_Decal_Cleanable || O is Obj_Effect_Overlay ) {
								GlobalFuncs.qdel( O );
							}
						}
					}
					((Reagents)this.reagents).remove_any( 1 );
					((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " finishes wiping down " ).the( A ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You have finished wiping down " ).the( A ).item().str( "!</span>" ).ToString() );
				}
			}
			return false;
		}

		// Function from file: footprints_and_rag.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( ((dynamic)user.zone_sel).selecting == "mouth" ) {
				
				if ( M is Mob && Lang13.Bool( M.reagents ) && Lang13.Bool( this.reagents.total_volume ) ) {
					((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).The( M ).item().str( " has been smothered with " ).the( this ).item().str( " by " ).the( user ).item().str( "!</span>" ).ToString(), new Txt( "<span class='warning'>You smother " ).the( M ).item().str( " with " ).the( this ).item().str( "!</span>" ).ToString(), "You hear some struggling and muffled cries of surprise" );
					((Reagents)this.reagents).reaction( M, GlobalVars.TOUCH );
					Task13.Schedule( 5, (Task13.Closure)(() => {
						((Reagents)this.reagents).clear_reagents();
						return;
					}));
					return true;
				}
			} else {
				base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}
			return null;
		}

		// Function from file: footprints_and_rag.dm
		public override dynamic mop_act( Obj_Item_Weapon_Mop M = null, dynamic user = null ) {
			return 0;
		}

		// Function from file: footprints_and_rag.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			return null;
		}

	}

}
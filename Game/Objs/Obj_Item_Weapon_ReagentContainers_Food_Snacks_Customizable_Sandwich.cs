// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable_Sandwich : Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable {

		public bool finished = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.ingredients_placement = 3;
			this.icon = "icons/obj/food/burgerbread.dmi";
			this.icon_state = "breadslice";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Customizable_Sandwich ( dynamic location = null, int? vol = null ) : base( (object)(location), vol ) {
			
		}

		// Function from file: customizables.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic BS = null;
			Image TOP = null;
			Image O = null;

			
			if ( A is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Breadslice ) {
				BS = A;

				if ( this.finished ) {
					return null;
				}
				user.WriteMsg( "<span class='notice'>You finish the " + this.name + ".</span>" );
				this.finished = true;
				this.name = "" + this.customname + " sandwich";
				((Reagents)BS.reagents).trans_to( this, BS.reagents.total_volume );
				this.ingMax = this.ingredients.len;
				TOP = new Image( this.icon, "" + BS.icon_state );
				TOP.pixel_y = this.ingredients.len * 2 + 3;
				this.overlays.Add( TOP );

				if ( BS is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Breadslice_Custom ) {
					O = new Image( this.icon, "" + Lang13.Initial( BS, "icon_state" ) + "_filling" );
					O.color = BS.filling_color;
					O.pixel_y = this.ingredients.len * 2 + 3;
					this.overlays.Add( O );
				}
				GlobalFuncs.qdel( BS );
				return null;
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: customizables.dm
		public override void initialize_custom_food( Obj_Item BASE = null, dynamic I = null, dynamic user = null ) {
			this.icon_state = BASE.icon_state;
			base.initialize_custom_food( BASE, (object)(I), (object)(user) );
			return;
		}

	}

}
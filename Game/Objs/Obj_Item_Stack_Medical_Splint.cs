// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Medical_Splint : Obj_Item_Stack_Medical {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "medical splint";
			this.icon_state = "splint";
		}

		public Obj_Item_Stack_Medical_Splint ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: medical.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic H = null;
			dynamic affecting = null;
			dynamic limb = null;

			
			if ( base.attack( (object)(M), (object)(user), def_zone, eat_override ) == true ) {
				return true;
			}

			if ( M is Mob_Living_Carbon_Human ) {
				H = M;
				affecting = ((Mob_Living_Carbon_Human)H).get_organ( ((dynamic)user.zone_sel).selecting );
				limb = affecting.display_name;

				if ( !( affecting.name == "l_arm" || affecting.name == "r_arm" || affecting.name == "l_leg" || affecting.name == "r_leg" ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>You can only apply splints on limbs!</span>" );
					return null;
				}

				if ( Lang13.Bool( affecting.status & 256 ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>" + M + "'s " + limb + " is already splinted!</span>" );
					return null;
				}

				if ( M != user ) {
					((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " starts to apply " ).the( this ).item().str( " to " ).item( M ).str( "'s " ).item( limb ).str( ".</span>" ).ToString(), new Txt( "<span class='warning'>You start to apply " ).the( this ).item().str( " to " ).item( M ).str( "'s " ).item( limb ).str( ".</span>" ).ToString(), "<span class='warning'>You hear something being wrapped.</span>" );
				} else {
					
					if ( !( user.hand == true ) && affecting.name == "r_arm" || user.hand == true && affecting.name == "l_arm" ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>You can't apply a splint to the arm you're using!</span>" );
						return null;
					}
					((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " starts to apply " ).the( this ).item().str( " to their " ).item( limb ).str( ".</span>" ).ToString(), new Txt( "<span class='warning'>You start to apply " ).the( this ).item().str( " to your " ).item( limb ).str( ".</span>" ).ToString(), "<span class='warning'>You hear something being wrapped.</span>" );
				}

				if ( GlobalFuncs.do_mob( user, M, 50 ) ) {
					
					if ( M != user ) {
						((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " finishes applying " ).the( this ).item().str( " to " ).item( M ).str( "'s " ).item( limb ).str( ".</span>" ).ToString(), new Txt( "<span class='warning'>You finish applying " ).the( this ).item().str( " to " ).item( M ).str( "'s " ).item( limb ).str( ".</span>" ).ToString(), "<span class='warning'>You hear something being wrapped.</span>" );
					} else if ( Rand13.PercentChance( 25 ) ) {
						((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " successfully applies " ).the( this ).item().str( " to their " ).item( limb ).str( ".</span>" ).ToString(), new Txt( "<span class='warning'>You successfully apply " ).the( this ).item().str( " to your " ).item( limb ).str( ".</span>" ).ToString(), "<span class='warning'>You hear something being wrapped.</span>" );
					} else {
						((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " fumbles " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='warning'>You fumble " ).the( this ).item().str( ".</span>" ).ToString(), "<span class='warning'>You hear something being wrapped.</span>" );
						return null;
					}
					affecting.status |= 256;
					this.use( 1 );
				}
				return null;
			}
			return null;
		}

	}

}
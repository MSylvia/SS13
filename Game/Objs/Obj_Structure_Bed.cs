// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed : Obj_Structure {

		public Type sheet_type = typeof(Obj_Item_Stack_Sheet_Metal);
		public int sheet_amt = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.lockflags = 1;
			this.anchored = 1;
			this.icon = "icons/obj/stools-chairs-beds.dmi";
			this.icon_state = "bed";
		}

		public Obj_Structure_Bed ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bed.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 50, 1 );
				GlobalFuncs.getFromPool( this.sheet_type, GlobalFuncs.get_turf( this ), 2 );
				GlobalFuncs.qdel( this );
				return _default;
			}
			_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			return _default;
		}

		// Function from file: bed.dm
		public virtual void buckle_mob( dynamic M = null, dynamic user = null ) {
			
			if ( !( M is Mob ) || !this.Adjacent( user ) || M.loc != this.loc || ((Mob)user).restrained() || user.lying == true || Lang13.Bool( user.stat ) || Lang13.Bool( M.locked_to ) || user is Mob_Living_Silicon_Pai ) {
				return;
			}

			if ( M is Mob_Living_SimpleAnimal ) {
				
				if ( Convert.ToDouble( M.size ) <= 1 ) {
					GlobalFuncs.to_chat( user, "The " + M + " is too small to buckle in." );
					return;
				}
			}

			if ( M is Mob_Living_Carbon_Slime ) {
				GlobalFuncs.to_chat( user, "The " + M + " is too squishy to buckle in." );
				return;
			}

			if ( this.locked_atoms.len != 0 ) {
				GlobalFuncs.to_chat( user, new Txt( "Somebody else is already buckled into " ).the( this ).item().str( "!" ).ToString() );
			}

			if ( M == Task13.User ) {
				((Ent_Static)M).visible_message( "<span class='notice'>" + M.name + " buckles in!</span>", "You buckle yourself to " + this + ".", "You hear metal clanking." );
			} else {
				((Ent_Static)M).visible_message( "<span class='notice'>" + M.name + " is buckled in to " + this + " by " + user.name + "!</span>", "You are buckled in to " + this + " by " + user.name + ".", "You hear metal clanking." );
			}
			this.add_fingerprint( user );
			this.lock_atom( M );
			return;
		}

		// Function from file: bed.dm
		public virtual void manual_unbuckle( dynamic user = null ) {
			Ent_Dynamic M = null;

			
			if ( !( this.locked_atoms.len != 0 ) ) {
				return;
			}
			M = this.locked_atoms[1];

			if ( M != user ) {
				M.visible_message( "<span class='notice'>" + M + " was unbuckled by " + user + "!</span>", new Txt( "You were unbuckled from " ).the( this ).item().str( " by " ).item( user ).str( "." ).ToString(), "You hear metal clanking." );
			} else {
				M.visible_message( new Txt( "<span class='notice'>" ).item( M ).str( " unbuckled " ).himself_herself_itself_themself().str( "!</span>" ).ToString(), new Txt( "You unbuckle yourself from " ).the( this ).item().str( "." ).ToString(), "You hear metal clanking." );
			}
			this.unlock_atom( M );
			this.add_fingerprint( user );
			return;
		}

		// Function from file: bed.dm
		public override bool MouseDrop_T( Ent_Static O = null, dynamic user = null, bool? needs_opened = null, bool? show_message = null, bool? move_them = null ) {
			
			if ( !( O is Mob ) ) {
				return false;
			}
			this.buckle_mob( O, user );
			return false;
		}

		// Function from file: bed.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			return null;
		}

		// Function from file: bed.dm
		public override dynamic attack_robot( Mob_Living_Silicon_Robot user = null ) {
			
			if ( this.Adjacent( user ) ) {
				this.manual_unbuckle( user );
			}
			return null;
		}

		// Function from file: bed.dm
		public override dynamic attack_animal( Mob_Living user = null ) {
			this.manual_unbuckle( user );
			return null;
		}

		// Function from file: bed.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.manual_unbuckle( a );
			return null;
		}

		// Function from file: bed.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: bed.dm
		public override dynamic cultify(  ) {
			dynamic _default = null;

			Obj_Structure_Bed_Chair_Wood_Wings I = null;

			I = new Obj_Structure_Bed_Chair_Wood_Wings( this.loc );
			I.dir = this.dir;
			_default = base.cultify();
			return _default;
		}

	}

}
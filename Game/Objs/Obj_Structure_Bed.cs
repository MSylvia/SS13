// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed : Obj_Structure {

		public Type buildstacktype = typeof(Obj_Item_Stack_Sheet_Metal);
		public int buildstackamount = 2;
		public Type foldabletype = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.can_buckle = 1;
			this.buckle_lying = 1;
			this.burn_state = 0;
			this.burntime = 30;
			this.icon = "icons/obj/objects.dmi";
			this.icon_state = "bed";
		}

		public Obj_Structure_Bed ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bed.dm
		public override dynamic MouseDrop( dynamic over = null, dynamic src_location = null, dynamic over_location = null, string src_control = null, dynamic over_control = null, string _params = null ) {
			dynamic _default = null;

			_default = base.MouseDrop( (object)(over), (object)(src_location), (object)(over_location), src_control, (object)(over_control), _params );

			if ( this.foldabletype != null ) {
				
				if ( over == Task13.User && this.Adjacent( Task13.User ) && ( Map13.GetDistance( this, Task13.User ) <= 1 || Task13.User.contents.Find( this ) != 0 ) ) {
					
					if ( !( Task13.User is Mob_Living_Carbon_Human ) ) {
						return _default;
					}

					if ( Lang13.Bool( this.buckled_mob ) ) {
						return 0;
					}
					Task13.User.visible_message( new Txt().item( Task13.User ).str( " collapses " ).the( this.name ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You collapse " ).the( this.name ).item().str( ".</span>" ).ToString() );
					Lang13.Call( this.foldabletype, GlobalFuncs.get_turf( this ) );
					GlobalFuncs.qdel( this );
				}
			}
			return _default;
		}

		// Function from file: bed.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Wrench && !Lang13.Bool( this.flags & 128 ) ) {
				GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );

				if ( this.buildstacktype != null ) {
					Lang13.Call( this.buildstacktype, this.loc, this.buildstackamount );
				}
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: bed.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( this.buildstacktype != null ) {
				Lang13.Call( this.buildstacktype, this.loc, this.buildstackamount );
			}
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: bed.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 70 ) ) {
						
						if ( this.buildstacktype != null ) {
							Lang13.Call( this.buildstacktype, this.loc, this.buildstackamount );
						}
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 50 ) ) {
						
						if ( this.buildstacktype != null ) {
							Lang13.Call( this.buildstacktype, this.loc, this.buildstackamount );
						}
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
			}
			return false;
		}

		// Function from file: bed.dm
		public override bool attack_animal( Mob_Living user = null ) {
			
			if ( Lang13.Bool( ((dynamic)user).environment_smash ) ) {
				new Obj_Item_Stack_Sheet_Metal( this.loc );
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: bed.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

	}

}
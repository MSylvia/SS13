// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_AlienEmbryo : Obj_Item {

		public Ent_Static affected_mob = null;
		public ByTable ghost_volunteers = new ByTable( 0 );
		public dynamic picked = null;
		public int stage = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/mob/alien.dmi";
			this.icon_state = "larva0_dead";
		}

		// Function from file: alien_embryo.dm
		public Obj_Item_AlienEmbryo ( dynamic loc = null ) : base( (object)(loc) ) {
			Mob_Dead_Observer O = null;

			
			if ( this.loc is Mob_Living ) {
				this.affected_mob = this.loc;
				GlobalVars.processing_objects.Add( this );

				foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_active_candidates( "alien", null, new Txt().item( this.affected_mob ).str( " has been infected by " ).a( this ).item().str( "!" ).ToString() ), typeof(Mob_Dead_Observer) )) {
					O = _a;
					

					if ( O.client != null && Lang13.Bool( O.client.desires_role( "alien" ) ) ) {
						
						if ( this.check_observer( O ) ) {
							GlobalFuncs.to_chat( O, new Txt( "<span class=\"recruit\">You have automatically been signed up for " ).a( this ).item().str( ". (<a href='?src=" ).Ref( O ).str( ";jump=" ).Ref( this ).str( "'>Teleport</a> | <a href='?src=" ).Ref( this ).str( ";signup=" ).Ref( O ).str( "'>Retract</a>)</span>" ).ToString() );
							this.ghost_volunteers.Add( O );
						}
					}
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.AddInfectionImages( this.affected_mob );
					return;
				}));
			} else {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: alien_embryo.dm
		public override dynamic process(  ) {
			
			if ( !( this.affected_mob != null ) ) {
				return null;
			}

			if ( this.loc != this.affected_mob ) {
				((dynamic)this.affected_mob).status_flags &= 32767;
				GlobalVars.processing_objects.Remove( this );
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.RemoveInfectionImages( this.affected_mob );
					this.affected_mob = null;
					return;
				}));
				return null;
			}

			if ( this.stage < 5 && Rand13.PercentChance( 3 ) ) {
				this.stage++;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.RefreshInfectionImage(  );
					return;
				}));
			}

			switch ((int)( this.stage )) {
				case 2:
				case 3:
					
					if ( Rand13.PercentChance( 1 ) ) {
						((dynamic)this.affected_mob).emote( "sneeze" );
					}

					if ( Rand13.PercentChance( 1 ) ) {
						((dynamic)this.affected_mob).emote( "cough" );
					}

					if ( Rand13.PercentChance( 1 ) ) {
						GlobalFuncs.to_chat( this.affected_mob, "<span class='warning'>Your throat feels sore.</span>" );
					}

					if ( Rand13.PercentChance( 1 ) ) {
						GlobalFuncs.to_chat( this.affected_mob, "<span class='warning'>Mucous runs down the back of your throat.</span>" );
					}
					break;
				case 4:
					
					if ( Rand13.PercentChance( 1 ) ) {
						((dynamic)this.affected_mob).emote( "sneeze" );
					}

					if ( Rand13.PercentChance( 1 ) ) {
						((dynamic)this.affected_mob).emote( "cough" );
					}

					if ( Rand13.PercentChance( 2 ) ) {
						GlobalFuncs.to_chat( this.affected_mob, "<span class='warning'>Your muscles ache.</span>" );

						if ( Rand13.PercentChance( 20 ) ) {
							((dynamic)this.affected_mob).take_organ_damage( 1 );
						}
					}

					if ( Rand13.PercentChance( 2 ) ) {
						GlobalFuncs.to_chat( this.affected_mob, "<span class='warning'>Your stomach hurts.</span>" );

						if ( Rand13.PercentChance( 20 ) ) {
							((dynamic)this.affected_mob).adjustToxLoss( 1 );
							((dynamic)this.affected_mob).updatehealth();
						}
					}
					break;
				case 5:
					GlobalFuncs.to_chat( this.affected_mob, "<span class='danger'>You feel something tearing its way out of your stomach...</span>" );
					((dynamic)this.affected_mob).adjustToxLoss( 10 );
					((dynamic)this.affected_mob).updatehealth();

					if ( Rand13.PercentChance( 50 ) ) {
						this.AttemptGrow();
					}
					break;
			}
			return null;
		}

		// Function from file: alien_embryo.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.affected_mob != null ) {
				((dynamic)this.affected_mob).status_flags &= 32767;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.RemoveInfectionImages( this.affected_mob );
					return;
				}));
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: alien_embryo.dm
		public void RemoveInfectionImages( Ent_Static C = null ) {
			Mob_Living_Carbon_Alien alien = null;
			Image I = null;

			
			if ( C != null ) {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Alien) )) {
					alien = _b;
					

					if ( alien.client != null ) {
						
						foreach (dynamic _a in Lang13.Enumerate( alien.client.images, typeof(Image) )) {
							I = _a;
							

							if ( ((dynamic)I).loc == C ) {
								
								if ( GlobalFuncs.dd_hasprefix_case( I.icon_state, "infected" ) != 0 ) {
									alien.client.images.Remove( I );
								}
							}
						}
					}
				}
			}
			return;
		}

		// Function from file: alien_embryo.dm
		public void AddInfectionImages( Ent_Static C = null ) {
			Mob_Living_Carbon_Alien alien = null;
			Image I = null;

			
			if ( C != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Alien) )) {
					alien = _a;
					

					if ( alien.client != null ) {
						
						if ( Lang13.Bool( ((dynamic)C).status_flags & 32768 ) ) {
							I = new Image( "icons/mob/alien.dmi", C, "infected" + this.stage );
							alien.client.images.Add( I );
						}
					}
				}
			}
			return;
		}

		// Function from file: alien_embryo.dm
		public void RefreshInfectionImage(  ) {
			Mob_Living_Carbon_Alien alien = null;
			Image I = null;
			Mob_Living L = null;
			Image I2 = null;

			
			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Carbon_Alien) )) {
				alien = _c;
				

				if ( alien.client != null ) {
					
					foreach (dynamic _a in Lang13.Enumerate( alien.client.images, typeof(Image) )) {
						I = _a;
						

						if ( GlobalFuncs.dd_hasprefix_case( I.icon_state, "infected" ) != 0 ) {
							alien.client.images.Remove( I );
						}
					}

					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living) )) {
						L = _b;
						

						if ( L is Mob_Living_SimpleAnimal_Corgi || L is Mob_Living_Carbon ) {
							
							if ( ( L.status_flags & 32768 ) != 0 ) {
								I2 = new Image( "icons/mob/alien.dmi", L, "infected" + this.stage );
								alien.client.images.Add( I2 );
							}
						}
					}
				}
			}
			return;
		}

		// Function from file: alien_embryo.dm
		public void AttemptGrow( bool? gib_on_success = null ) {
			gib_on_success = gib_on_success ?? true;

			dynamic ghostpicked = null;
			ByTable candidates = null;
			Mob_Dead_Observer O = null;
			ByTable candidates2 = null;
			Mob_Dead_Observer O2 = null;
			Mob_Living_Carbon_Alien_Larva new_xeno = null;

			
			while (this.ghost_volunteers.len != 0) {
				ghostpicked = GlobalFuncs.pick_n_take( this.ghost_volunteers );

				if ( !( ghostpicked is Mob_Dead_Observer ) ) {
					continue;
				}
				break;
			}

			if ( !Lang13.Bool( ghostpicked ) || !( ghostpicked is Mob_Dead_Observer ) ) {
				candidates = GlobalFuncs.get_active_candidates( "alien", true, 1 );

				if ( !( candidates.len != 0 ) ) {
					this.picked = ((dynamic)this.affected_mob).key;
				} else {
					
					foreach (dynamic _a in Lang13.Enumerate( candidates, typeof(Mob_Dead_Observer) )) {
						O = _a;
						
						GlobalFuncs.to_chat( O, new Txt( "<span class=\"recruit\">" ).item( this.affected_mob ).str( " is about to burst from " ).a( this ).item().str( "!. (<a href='?src=" ).Ref( O ).str( ";jump=" ).Ref( this ).str( "'>Teleport</a> | <a href='?src=" ).Ref( this ).str( ";signup=" ).Ref( O ).str( "'>Sign Up</a>)</span>" ).ToString() );
					}
				}
			} else {
				this.picked = ghostpicked.key;
			}

			if ( !Lang13.Bool( this.picked ) ) {
				this.stage = 4;
				candidates2 = GlobalFuncs.get_active_candidates( "alien", true, 1 );

				foreach (dynamic _b in Lang13.Enumerate( candidates2, typeof(Mob_Dead_Observer) )) {
					O2 = _b;
					
					GlobalFuncs.to_chat( O2, new Txt( "<span class=\"recruit\">" ).item( this.affected_mob ).str( " is about to burst from " ).a( this ).item().str( "!. (<a href='?src=" ).Ref( O2 ).str( ";jump=" ).Ref( this ).str( "'>Teleport</a> | <a href='?src=" ).Ref( this ).str( ";signup=" ).Ref( O2 ).str( "'>Sign Up</a>)</span>" ).ToString() );
				}
				return;
			}

			if ( Lang13.Bool( ((dynamic)this.affected_mob).lying ) ) {
				this.affected_mob.overlays.Add( new Image( "icons/mob/alien.dmi", this.affected_mob, "burst_lie" ) );
			} else {
				this.affected_mob.overlays.Add( new Image( "icons/mob/alien.dmi", this.affected_mob, "burst_stand" ) );
			}
			Task13.Schedule( 6, (Task13.Closure)(() => {
				new_xeno = new Mob_Living_Carbon_Alien_Larva( GlobalFuncs.get_turf( this.affected_mob ) );
				new_xeno.key = this.picked;
				new_xeno.WriteMsg( new Sound( "sound/voice/hiss5.ogg", false, false, 0, 100 ) );

				if ( gib_on_success == true ) {
					((dynamic)this.affected_mob).gib();
				}
				GlobalFuncs.qdel( this );
				return;
			}));
			return;
		}

		// Function from file: alien_embryo.dm
		public bool check_observer( dynamic O = null ) {
			
			if ( O.has_enabled_antagHUD == 1 && GlobalVars.config.antag_hud_restricted ) {
				return false;
			}

			if ( Lang13.Bool( GlobalFuncs.jobban_isbanned( O, "Syndicate" ) ) ) {
				return false;
			}

			if ( !Lang13.Bool( O.client ) ) {
				return false;
			}

			if ( O.client.inactivity / 10 / 60 <= 1 ) {
				return true;
			}
			return false;
		}

		// Function from file: alien_embryo.dm
		public void volunteer( dynamic O = null ) {
			
			if ( !( O is Mob_Dead_Observer ) ) {
				GlobalFuncs.to_chat( O, "<span class='danger'>NO.</span>" );
				return;
			}
			Interface13.Stat( null, this.ghost_volunteers.Contains( O ) );

			if ( !( O is Mob_Dead_Observer ) ) {
				GlobalFuncs.to_chat( O, "<span class='notice'>You will no longer be considered for this " + this + ". Click again to volunteer.</span>" );
				this.ghost_volunteers.Remove( O );
				return;
			}

			if ( !this.check_observer( O ) ) {
				GlobalFuncs.to_chat( O, new Txt( "<span class='warning'>You cannot be " ).a( this ).item().str( " in your current condition.</span>" ).ToString() );
				return;
			}
			GlobalFuncs.to_chat( O, "<span class='notice'>You have been added to the list of ghosts that may become this " + this + ".  Click again to unvolunteer.</span>" );
			this.ghost_volunteers.Add( O );
			return;
		}

		// Function from file: alien_embryo.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic O = null;

			Interface13.Stat( null, href_list.Contains( "signup" ) );

			if ( false ) {
				O = Lang13.FindObj( href_list["signup"] );

				if ( !Lang13.Bool( O ) ) {
					return null;
				}
				this.volunteer( O );
			}
			return null;
		}

	}

}
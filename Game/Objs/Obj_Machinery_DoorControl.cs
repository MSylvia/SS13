// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_DoorControl : Obj_Machinery {

		public string id_tag = null;
		public int range = 10;
		public bool normaldoorcontrol = false;
		public bool specialfunctions = true;
		public bool exposedwires = false;
		public int wires = 3;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.power_channel = 3;
			this.anchored = 1;
			this.idle_power_usage = 2;
			this.active_power_usage = 4;
			this.ghost_read = false;
			this.machine_flags = 129;
			this.icon_state = "doorctrl0";
		}

		public Obj_Machinery_DoorControl ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: door_control.dm
		public override void change_area( dynamic oldarea = null, dynamic newarea = null ) {
			base.change_area( (object)(oldarea), (object)(newarea) );
			this.name = GlobalFuncs.replacetext( this.name, oldarea, newarea );
			return;
		}

		// Function from file: door_control.dm
		public override dynamic power_change(  ) {
			base.power_change();

			if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "doorctrl-p";
			} else {
				this.icon_state = "doorctrl0";
			}
			return null;
		}

		// Function from file: door_control.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Machinery_Door_Airlock D = null;
			Obj_Machinery_Door_Poddoor M = null;

			this.add_fingerprint( Task13.User );

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( !this.allowed( a ) && ( this.wires & 1 ) != 0 ) {
				GlobalFuncs.to_chat( a, "<span class='warning'>Access Denied.</span>" );
				Icon13.Flick( "doorctrl-denied", this );
				return null;
			}
			this.f_use_power( 5 );
			this.icon_state = "doorctrl1";
			this.add_fingerprint( a );

			if ( this.normaldoorcontrol ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( null, this.range ), typeof(Obj_Machinery_Door_Airlock) )) {
					D = _a;
					

					if ( D.id_tag == this.id_tag ) {
						Task13.Schedule( 0, (Task13.Closure)(() => {
							
							if ( D != null ) {
								
								if ( D.density ) {
									D.open();
								} else {
									D.close();
								}
								return;
							}
							return;
						}));

						if ( ( ( this.specialfunctions ?1:0) & 2 ) != 0 ) {
							D.aiDisabledIdScanner = !D.aiDisabledIdScanner;
						}

						if ( ( ( this.specialfunctions ?1:0) & 4 ) != 0 ) {
							
							if ( !( D.isWireCut( 4 ) != 0 ) && D.arePowerSystemsOn() ) {
								D.locked = !D.locked;
								D.update_icon();
							}
						}

						if ( ( ( this.specialfunctions ?1:0) & 8 ) != 0 ) {
							D.secondsElectrified = ( D.secondsElectrified != 0 ? 0 : -1 );
						}

						if ( ( ( this.specialfunctions ?1:0) & 16 ) != 0 ) {
							D.safe = !D.safe;
						}
					}
				}
			} else {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.poddoors, typeof(Obj_Machinery_Door_Poddoor) )) {
					M = _b;
					

					if ( M.id_tag == this.id_tag ) {
						
						if ( M.density ) {
							Task13.Schedule( 0, (Task13.Closure)(() => {
								M.open();
								return;
								return;
							}));
						} else {
							Task13.Schedule( 0, (Task13.Closure)(() => {
								M.close();
								return;
								return;
							}));
						}
					}
				}
			}
			Task13.Schedule( 15, (Task13.Closure)(() => {
				
				if ( !( ( this.stat & 2 ) != 0 ) ) {
					this.icon_state = "doorctrl0";
				}
				return;
			}));
			return null;
		}

		// Function from file: door_control.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			base.attackby( (object)(a), (object)(b), (object)(c) );
			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Device_DetectiveScanner ) {
				return null;
			}
			return this.attack_hand( b );
		}

		// Function from file: door_control.dm
		public override int emag( dynamic user = null ) {
			this.req_access = new ByTable();
			this.req_one_access = new ByTable();
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sparks", 100, 1 );
			return 0;
		}

		// Function from file: door_control.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: door_control.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );

			if ( ( this.wires & 2 ) != 0 ) {
				return this.attack_hand( user );
			} else {
				GlobalFuncs.to_chat( user, "Error, no route to host." );
			}
			return null;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
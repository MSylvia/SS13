// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_PaperBin_Nano : Obj_Item_Weapon_PaperBin {

		public int ressources = 30;
		public int max_ressources = 30;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.throw_range = 3;
			this.autoignition_temperature = 1000;
			this.fire_fuel = 1;
			this.icon_state = "np_dispenser";
		}

		public Obj_Item_Weapon_PaperBin_Nano ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: nano_paper_bin.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.ressources < 1 ) {
				this.icon_state = "np_dispenser_empty";
			} else {
				this.icon_state = "np_dispenser";
			}
			return null;
		}

		// Function from file: nano_paper_bin.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.ressources != 0 ) {
				GlobalFuncs.to_chat( user, "<span class='info'>There is " + this.ressources + " nano paper left in the dispenser!</span>" );
			} else {
				GlobalFuncs.to_chat( user, "<span class='warning'>The nano paper dispenser is empty! add more plasteel to refil!</span>" );
			}
			return null;
		}

		// Function from file: nano_paper_bin.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !( a is Obj_Item_Stack_Sheet_Plasteel ) ) {
				return null;
			}

			if ( this.ressources > 0 ) {
				GlobalFuncs.to_chat( b, "<span class=notice> The dispenser needs to be empty before it can be reloaded!" );
				return null;
			}
			GlobalFuncs.to_chat( b, "<span class='notice'>you load the " + a + " in the dispenser</span>" );
			a.amount--;

			if ( Convert.ToDouble( a.amount ) < 1 ) {
				GlobalFuncs.qdel( a );
				a = null;
			}
			this.ressources += 30;
			this.update_icon();
			return null;
		}

		// Function from file: nano_paper_bin.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Weapon_Paper_Nano p = null;

			
			if ( this.ressources > 0 ) {
				this.ressources--;
				p = new Obj_Item_Weapon_Paper_Nano();
				p.loc = a.loc;
				((Mob)a).put_in_hands( p );
				GlobalFuncs.to_chat( a, new Txt( "<span class='notice'>" ).The( this ).item().str( " spits out a piece of nano paper.</span>" ).ToString() );

				if ( this.ressources == 0 ) {
					GlobalFuncs.to_chat( a, "<span class=notice> The dispenser is now empty!" );
				}
			} else {
				GlobalFuncs.to_chat( a, "<span class='notice'>The " + this + " is empty!</span>" );
				this.update_icon();
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: nano_paper_bin.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: nano_paper_bin.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			
			if ( over_object == Task13.User && !Task13.User.incapacitated() && ( Task13.User.contents.Find( this ) != 0 || GlobalFuncs.in_range( this, Task13.User ) ) ) {
				
				if ( !( Task13.User is Mob_Living_Carbon_Slime ) && !( Task13.User is Mob_Living_SimpleAnimal ) ) {
					
					if ( !Lang13.Bool( Task13.User.get_active_hand() ) ) {
						this.loc = over_object;
						over_object.put_in_hands( this );
						over_object.visible_message( "<span class='notice'>" + over_object + " picks up the " + this + ".</span>", "<span class='notice'>You pick-up the " + this + "</span>" );
					}
				}
			}
			return null;
		}

	}

}
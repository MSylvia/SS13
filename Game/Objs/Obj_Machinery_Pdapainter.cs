// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Pdapainter : Obj_Machinery {

		public dynamic storedpda = null;
		public ByTable colorlist = new ByTable();
		public bool busy = false;
		public int last_print = 0;
		public double build_time = 200;
		public ByTable blocked = new ByTable(new object [] { 
											typeof(Obj_Item_Device_Pda_Ai_Pai), 
											typeof(Obj_Item_Device_Pda_Ai), 
											typeof(Obj_Item_Device_Pda_Heads), 
											typeof(Obj_Item_Device_Pda_Clear), 
											typeof(Obj_Item_Device_Pda_Syndicate)
										 });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.machine_flags = 14;
			this.icon = "icons/obj/pda.dmi";
			this.icon_state = "pdapainter";
		}

		// Function from file: pdapainter.dm
		public Obj_Machinery_Pdapainter ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic P = null;
			dynamic D = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Pdapainter(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ConsoleScreen()
			 });

			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(Obj_Item_Device_Pda) ) - this.blocked )) {
				P = _a;
				
				D = P;
				this.colorlist[Lang13.Initial( D, "name" )] = D;
			}
			this.RefreshParts();
			return;
		}

		// Function from file: pdapainter.dm
		public override dynamic power_change(  ) {
			base.power_change();
			this.update_icon();
			return null;
		}

		// Function from file: pdapainter.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic chosenPDA = null;
			dynamic P = null;

			base.attack_hand( (object)(a), (object)(b), (object)(c) );

			if ( !( a is Mob_Living_Carbon_Human ) ) {
				return null;
			}
			this.add_fingerprint( a );

			if ( Lang13.Bool( this.storedpda ) ) {
				chosenPDA = Interface13.Input( a, "Select your color.", "PDA Painting", null, this.colorlist, InputType.Null | InputType.Any );

				if ( !Lang13.Bool( chosenPDA ) ) {
					return null;
				}

				if ( !GlobalFuncs.in_range( this, a ) ) {
					return null;
				}
				this.busy = true;
				P = this.colorlist[chosenPDA];
				this.storedpda.icon_state = Lang13.Initial( P, "icon_state" );
				this.storedpda.desc = Lang13.Initial( P, "desc" );

				if ( !Lang13.Bool( this.storedpda.owner ) ) {
					this.storedpda.name = Lang13.Initial( P, "name" );
				}
				Task13.Sleep( 10 );
				this.visible_message( new Txt( " " ).icon( this ).str( " " ).The( this ).item().str( " beeps: \"Successfully recolored to " ).a( this.storedpda ).item().str( "\"" ).ToString() );
				this.busy = false;
			} else {
				GlobalFuncs.to_chat( a, new Txt( "<span class='notice'>" ).The( this ).item().str( " is empty.</span>" ).ToString() );
			}
			return null;
		}

		// Function from file: pdapainter.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic P = null;

			
			if ( this.busy ) {
				GlobalFuncs.to_chat( b, new Txt().The( this ).item().str( " is currently busy, try again later." ).ToString() );
				return null;
			}

			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}

			if ( a is Obj_Item_Device_Pda ) {
				
				if ( Lang13.Bool( this.storedpda ) ) {
					GlobalFuncs.to_chat( b, "There is already a PDA inside." );
					return null;
				} else {
					P = a;

					if ( P is Obj_Item_Device_Pda ) {
						
						if ( Lang13.Bool( b.drop_item( P, this ) ) ) {
							this.storedpda = P;
							this.update_icon();
						}
					}
				}
			}
			return null;
		}

		// Function from file: pdapainter.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-broken";
				return null;
			}

			if ( Lang13.Bool( this.storedpda ) ) {
				this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "-closed" );
			}

			if ( Lang13.Bool( this.powered() ) ) {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			} else {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-off";
			}
			return null;
		}

		// Function from file: pdapainter.dm
		public override dynamic RefreshParts(  ) {
			int i = 0;
			double total_rating = 0;
			Obj_Item_Weapon_StockParts_MicroLaser ML = null;

			i = 0;
			total_rating = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_MicroLaser) )) {
				ML = _a;
				
				total_rating += ML.rating;
				i++;
			}

			if ( !( total_rating != 0 ) || !( i != 0 ) ) {
				total_rating = 1;
			}
			total_rating = total_rating / i;
			this.build_time = 250 - total_rating * 50;
			return null;
		}

		// Function from file: pdapainter.dm
		[Verb]
		[VerbInfo( name: "Print PDA", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public void printpda(  ) {
			
			if ( !( Task13.User is Mob_Living_Carbon_Human ) ) {
				return;
			}

			if ( Lang13.Bool( this.storedpda ) ) {
				GlobalFuncs.to_chat( Task13.User, new Txt( "You can't print a PDA while " ).the( this.storedpda ).item().str( " is loaded into " ).the( this ).item().str( "." ).ToString() );
				return;
			}

			if ( this.busy ) {
				GlobalFuncs.to_chat( Task13.User, new Txt().The( this ).item().str( " is busy, try again later." ).ToString() );
				return;
			}

			if ( this.last_print + 300 < Game13.timeofday ) {
				this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " begins to hum lightly.</span>" ).ToString() );
				this.busy = true;
				Task13.Sleep( ((int)( this.build_time )) );
				this.visible_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " rattles and shakes, spitting out a new PDA.</span>" ).ToString() );
				this.busy = false;
				new Obj_Item_Device_Pda( GlobalFuncs.get_turf( this ) );
				this.last_print = Game13.timeofday;
			} else {
				GlobalFuncs.to_chat( Task13.User, new Txt().The( this ).item().str( " is not ready to print again." ).ToString() );
			}
			return;
		}

		// Function from file: pdapainter.dm
		[Verb]
		[VerbInfo( name: "Eject PDA", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public void ejectpda(  ) {
			
			if ( !( Task13.User is Mob_Living_Carbon_Human ) ) {
				return;
			}

			if ( Lang13.Bool( this.storedpda ) ) {
				this.storedpda.loc = GlobalFuncs.get_turf( this.loc );
				this.storedpda = null;
				this.update_icon();
			} else {
				GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>" ).The( this ).item().str( " is empty.</span>" ).ToString() );
			}
			return;
		}

	}

}
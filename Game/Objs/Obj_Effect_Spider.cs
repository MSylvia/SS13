// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Spider : Obj_Effect {

		public dynamic health = 15;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/effects/effects.dmi";
		}

		public Obj_Effect_Spider ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: effects.dm
		public override bool fire_act( GasMixture air = null, double? exposed_temperature = null, int exposed_volume = 0 ) {
			
			if ( ( exposed_temperature ??0) > 300 ) {
				this.health -= 5;
				this.healthcheck();
			}
			return false;
		}

		// Function from file: effects.dm
		public void healthcheck(  ) {
			
			if ( Convert.ToDouble( this.health ) <= 0 ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: effects.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			base.bullet_act( (object)(Proj), (object)(def_zone) );
			this.health -= Proj.damage;
			this.healthcheck();
			return null;
		}

		// Function from file: effects.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic damage = null;
			dynamic WT = null;

			((Mob)b).delayNextAttack( 8 );

			if ( Lang13.Bool( a.attack_verb ) && a.attack_verb.len != 0 ) {
				this.visible_message( new Txt( "<span class='warning'><B>" ).The( this ).item().str( " " ).item( ( this.gender == GlobalVars.PLURAL ? "have" : "has" ) ).str( " been " ).item( Rand13.PickFromTable( a.attack_verb ) ).str( " with " ).the( a ).item().item( ( Lang13.Bool( b ) ? " by " + b : "" ) ).str( ".</span>" ).ToString() );
			} else {
				this.visible_message( new Txt( "<span class='warning'><B>" ).The( this ).item().str( " " ).item( ( this.gender == GlobalVars.PLURAL ? "have" : "has" ) ).str( " been attacked with " ).the( a ).item().item( ( Lang13.Bool( b ) ? " by " + b : "" ) ).str( "</span>" ).ToString() );
			}
			damage = ( Lang13.Bool( ((Obj)a).is_hot() ) || Lang13.Bool( ((Obj)a).is_sharp() ) ? a.force : a.force / 4 );

			if ( a is Obj_Item_Weapon_Weldingtool ) {
				WT = a;

				if ( Lang13.Bool( WT.remove_fuel( 0, b ) ) ) {
					damage = 15;
					GlobalFuncs.playsound( this.loc, "sound/items/welder.ogg", 100, 1 );
				} else {
					damage = a.force / 4;
				}
			}
			this.health -= damage;
			this.healthcheck();
			return null;
		}

		// Function from file: effects.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.qdel( this );
					}
					break;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Shoes_ClownShoes_Advanced : Obj_Item_Clothing_Shoes_ClownShoes {

		public ByTable sound_list = new ByTable()
											.Set( "Clown squeak", "clownstep" )
											.Set( "Bike horn", "sound/items/bikehorn.ogg" )
											.Set( "Air horn", "sound/items/AirHorn.ogg" )
											.Set( "Chewing", "sound/items/eatfood.ogg" )
											.Set( "Polaroid", "polaroid" )
											.Set( "Gunshot", "sound/weapons/Gunshot.ogg" )
											.Set( "Ion gun", "sound/weapons/ion.ogg" )
											.Set( "Laser gun", "sound/weapons/laser.ogg" )
											.Set( "Punch", "punch" )
											.Set( "Shotgun", "sound/weapons/shotgun.ogg" )
											.Set( "Taser", "sound/weapons/Taser.ogg" )
											.Set( "Male scream", "malescream" )
											.Set( "Female scream", "femalescream" )
											.Set( "Sad trombone", "sound/misc/sadtrombone.ogg" )
											.Set( "Awooga", "sound/effects/awooga.ogg" )
											.Set( "Bubbles", "sound/effects/bubbles.ogg" )
											.Set( "EMP pulse", "sound/effects/EMPulse.ogg" )
											.Set( "Explosion", "explosion" )
											.Set( "Glass", "sound/effects/glass_step.ogg" )
											.Set( "Mouse squeak", "sound/effects/mousesqueek.ogg" )
											.Set( "Meteor impact", "sound/effects/meteorimpact.ogg" )
											.Set( "Supermatter", "sound/effects/supermatter.ogg" )
											.Set( "Emitter", "sound/weapons/emitter.ogg" )
											.Set( "Laughter", "sound/effects/laughtrack.ogg" )
											.Set( "Mecha step", "sound/mecha/mechstep.ogg" )
											.Set( "Fart", "sound/misc/fart.ogg" )
											.Set( "Random", "random sound" )
										;
		public bool random_sound = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "superclown";
			this.flags = 1024;
			this.icon_state = "superclown";
		}

		public Obj_Item_Clothing_Shoes_ClownShoes_Advanced ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: miscellaneous.dm
		public override void step_action(  ) {
			Ent_Static H = null;

			
			if ( this.loc is Mob_Living_Carbon_Human ) {
				H = this.loc;

				if ( Lang13.Bool( ((dynamic)H).mind ) && ((dynamic)H).mind.assigned_role != "Clown" ) {
					
					if ( ((dynamic)H).mind.assigned_role == "Mime" ) {
						((Mob_Living_Carbon)H).Slip( 3, 2, true );
					}
					return;
				}

				if ( this.random_sound ) {
					this.step_sound = this.sound_list[Rand13.PickFromTable( this.sound_list )];
				}
			}
			base.step_action();
			return;
		}

		// Function from file: miscellaneous.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic H = null;
			dynamic new_sound = null;

			
			if ( Lang13.Bool( user.mind ) && user.mind.assigned_role != "Clown" ) {
				GlobalFuncs.to_chat( user, "<span class='danger'>These shoes are too powerful for you to handle!</span>" );

				if ( Rand13.PercentChance( 25 ) ) {
					
					if ( user is Mob_Living_Carbon_Human ) {
						H = user;
						GlobalFuncs.to_chat( H, new Sound( "sound/items/AirHorn.ogg" ) );
						GlobalFuncs.to_chat( H, "<font color='red' size='7'>HONK</font>" );
						H.sleeping = 0;
						H.stuttering += 20;
						H.ear_deaf += 30;
						((Mob)H).Weaken( 3 );

						if ( Rand13.PercentChance( 30 ) ) {
							((Mob)H).Stun( 10 );
							((Mob)H).Paralyse( 4 );
						} else {
							((Mob)H).Jitter( 500 );
						}
					}
				}
				return null;
			}
			new_sound = Interface13.Input( user, "Select the new step sound!", "Advanced clown shoes", null, this.sound_list, InputType.Any );

			if ( this.Adjacent( user ) ) {
				
				if ( this.step_sound == "random sound" ) {
					this.step_sound = "clownstep";
					GlobalFuncs.to_chat( user, "<span class='sinister'>You set " + this + "'s step sound to always be random!</span>" );
					this.random_sound = true;
				} else {
					this.step_sound = this.sound_list[new_sound];
					GlobalFuncs.to_chat( user, "<span class='sinister'>You set " + this + "'s step sound to \"" + new_sound + "\"!</span>" );
					this.random_sound = false;
				}
			}
			return null;
		}

		// Function from file: miscellaneous.dm
		[Verb]
		[VerbInfo( name: "Change Sound", group: "Object" )]
		public dynamic ChangeSound(  ) {
			return this.attack_self( Task13.User );
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_RequestsConsole : Obj_Machinery {

		public dynamic department = "Unknown";
		public ByTable messages = new ByTable();
		public double? departmentType = 0;
		public int newmessagepriority = 0;
		public int screen = 0;
		public bool silent = false;
		public bool hackState = false;
		public bool announcementConsole = false;
		public bool open = false;
		public bool? announceAuth = false;
		public string msgVerified = "";
		public string msgStamped = "";
		public string message = "";
		public string dpt = "";
		public int? priority = -1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 0;
			this.anchored = 1;
			this.icon = "icons/obj/terminals.dmi";
			this.icon_state = "req_comp0";
		}

		// Function from file: requests_console.dm
		public Obj_Machinery_RequestsConsole ( dynamic loc = null ) : base( (object)(loc) ) {
			GlobalVars.allConsoles.Add( this );
			this.set_department( this.department, this.departmentType );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: requests_console.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic ID = null;
			dynamic ID2 = null;
			dynamic ID3 = null;
			dynamic T = null;

			
			if ( a is Obj_Item_Weapon_Crowbar ) {
				
				if ( this.open ) {
					this.open = false;
					this.icon_state = "req_comp0";
				} else {
					this.open = true;

					if ( !this.hackState ) {
						this.icon_state = "req_comp_open";
					} else {
						this.icon_state = "req_comp_rewired";
					}
				}
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( this.open ) {
					
					if ( !this.hackState ) {
						this.hackState = true;
						this.icon_state = "req_comp_rewired";
					} else {
						this.hackState = false;
						this.icon_state = "req_comp_open";
					}
				} else {
					GlobalFuncs.to_chat( b, "You can't do much with that." );
				}
			}

			if ( a is Obj_Item_Weapon_Wrench && this.open && !Lang13.Bool( this.departmentType ) ) {
				((Ent_Static)b).visible_message( "<span class='notice'>" + b + " disassembles the " + this + "!</span>", "<span class='notice'>You disassemble the " + this + "</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 100, 1 );
				new Obj_Item_Stack_Sheet_Metal( this.loc, 2 );
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( a is Obj_Item_Weapon_Card_Id || a is Obj_Item_Device_Pda ) {
				
				if ( this.screen == 5 ) {
					ID = ((Obj_Item)a).GetID();

					if ( this.hackState || Lang13.Bool( ID.access.Find( GlobalVars.access_engine_equip ) ) ) {
						this.announceAuth = true;
					} else {
						this.announceAuth = false;
						GlobalFuncs.to_chat( b, "<span class='warning'>You are not authorized to configure this panel.</span>" );
					}
					this.updateUsrDialog();
				}

				if ( this.screen == 9 ) {
					ID2 = ((Obj_Item)a).GetID();
					this.msgVerified = "<font color='green'><b>Verified by " + ID2.registered_name + " (" + ID2.assignment + ")</b></font>";
					this.updateUsrDialog();
				}

				if ( this.screen == 10 ) {
					ID3 = ((Obj_Item)a).GetID();

					if ( !( ID3 == null ) && Lang13.Bool( ID3.access.Find( GlobalVars.access_RC_announce ) ) || this.hackState ) {
						this.announceAuth = GlobalVars.TRUE;
					} else {
						this.announceAuth = GlobalVars.FALSE;
						GlobalFuncs.to_chat( b, "<span class='warning'>You are not authorized to send announcements.</span>" );
					}
					this.updateUsrDialog();
				}
			}

			if ( a is Obj_Item_Weapon_Stamp ) {
				
				if ( this.screen == 9 ) {
					T = a;
					this.msgStamped = "<font color='blue'><b>Stamped with the " + T.name + "</b></font>";
					this.updateUsrDialog();
				}
			}
			return null;
		}

		// Function from file: requests_console.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			string new_message = null;
			string new_message2 = null;
			dynamic M = null;
			string log_msg = null;
			string sending = null;
			bool pass = false;
			Obj_Machinery_MessageServer MS = null;
			Obj_Machinery_RequestsConsole Console = null;
			dynamic name = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}
			Task13.User.set_machine( this );
			this.add_fingerprint( Task13.User );

			if ( Lang13.Bool( GlobalFuncs.reject_bad_text( href_list["write"] ) ) ) {
				this.dpt = String13.CKey( href_list["write"] );
				new_message = String13.SubStr( GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Write your message:", "Awaiting Input", "", null, InputType.Any ) ), 1, 1024 );

				if ( Lang13.Bool( new_message ) ) {
					this.message = new_message;
					this.screen = 9;

					dynamic _a = href_list["priority"]; // Was a switch-case, sorry for the mess.
					if ( _a=="2" ) {
						this.priority = 2;
					} else {
						this.priority = -1;
					}
				} else {
					this.dpt = "";
					this.msgVerified = "";
					this.msgStamped = "";
					this.screen = 0;
					this.priority = -1;
				}
			}

			if ( Lang13.Bool( href_list["writeAnnouncement"] ) ) {
				new_message2 = String13.SubStr( GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Write your message:", "Awaiting Input", "", null, InputType.Any ) ), 1, 1024 );

				if ( Lang13.Bool( new_message2 ) ) {
					this.message = new_message2;

					dynamic _b = href_list["priority"]; // Was a switch-case, sorry for the mess.
					if ( _b=="2" ) {
						this.priority = 2;
					} else {
						this.priority = -1;
					}
				} else {
					this.message = "";
					this.announceAuth = false;
					this.screen = 0;
				}
			}

			if ( Lang13.Bool( href_list["sendAnnouncement"] ) ) {
				
				if ( !this.announcementConsole ) {
					return null;
				}

				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.player_list )) {
					M = _c;
					

					if ( !( M is Mob_NewPlayer ) && Lang13.Bool( M.client ) ) {
						GlobalFuncs.to_chat( M, "<b><font size = 3><font color = red>" + this.department + " announcement:</font color> " + this.message + "</font size></b>" );
					}
				}
				this.announceAuth = false;
				this.message = "";
				this.screen = 0;
			}

			if ( Lang13.Bool( href_list["department"] ) && Lang13.Bool( this.message ) ) {
				log_msg = this.message;
				sending = this.message;
				sending += "<br>";

				if ( Lang13.Bool( this.msgVerified ) ) {
					sending += this.msgVerified;
					sending += "<br>";
				}

				if ( Lang13.Bool( this.msgStamped ) ) {
					sending += this.msgStamped;
					sending += "<br>";
				}
				this.screen = 7;

				if ( Lang13.Bool( sending ) ) {
					pass = false;

					foreach (dynamic _d in Lang13.Enumerate( GlobalVars.message_servers, typeof(Obj_Machinery_MessageServer) )) {
						MS = _d;
						

						if ( !MS.active ) {
							continue;
						}
						MS.send_rc_message( href_list["department"], this.department, log_msg, this.msgStamped, this.msgVerified, this.priority );
						pass = true;
					}

					if ( pass ) {
						
						foreach (dynamic _f in Lang13.Enumerate( GlobalVars.allConsoles, typeof(Obj_Machinery_RequestsConsole) )) {
							Console = _f;
							

							if ( String13.CKey( Console.department ) == String13.CKey( href_list["department"] ) ) {
								
								switch ((int?)( this.priority )) {
									case 2:
										
										if ( Console.newmessagepriority < 2 ) {
											Console.newmessagepriority = 2;
											Console.icon_state = "req_comp3";
										}

										if ( !Console.silent ) {
											GlobalFuncs.playsound( Console.loc, "sound/machines/request_urgent.ogg", 50, 1 );
											this.say( new Txt().icon( Console ).str( " *The Requests Console beeps: 'PRIORITY Alert in " ).item( this.department ).str( "'" ).ToString() );
										}
										Console.messages.Add( new Txt( "<B><FONT color='red'>High Priority message from <A href='?src=" ).Ref( Console ).str( ";write=" ).item( String13.CKey( this.department ) ).str( "'>" ).item( this.department ).str( "</A></FONT></B><BR>" ).item( sending ).ToString() );
										break;
									default:
										
										if ( Console.newmessagepriority < 1 ) {
											Console.newmessagepriority = 1;
											Console.icon_state = "req_comp2";
										}

										if ( !Console.silent ) {
											GlobalFuncs.playsound( Console.loc, "sound/machines/request.ogg", 50, 1 );
											this.say( new Txt().icon( Console ).str( " *The Requests Console beeps: 'Message from " ).item( this.department ).str( "'" ).ToString() );
										}
										Console.messages.Add( new Txt( "<B>Message from <A href='?src=" ).Ref( Console ).str( ";write=" ).item( String13.CKey( this.department ) ).str( "'>" ).item( this.department ).str( "</A></FONT></B><BR>" ).item( this.message ).ToString() );
										break;
								}
								this.screen = 6;
								Console.set_light( 2 );
							}
						}
						this.messages.Add( "<B>Message sent to " + this.dpt + "</B><BR>" + this.message );
					} else {
						this.say( new Txt().icon( this ).str( " *The Requests Console beeps: 'NOTICE: No server detected!'" ).ToString() );
					}
				}
			}

			switch ((double?)( String13.ParseNumber( href_list["setScreen"] ) )) {
				case null:
					
					break;
				case 1:
					this.screen = 1;
					break;
				case 2:
					this.screen = 2;
					break;
				case 3:
					this.screen = 3;
					break;
				case 5:
					this.screen = 5;
					break;
				case 6:
					this.screen = 6;
					break;
				case 7:
					this.screen = 7;
					break;
				case 8:
					this.screen = 8;
					break;
				case 9:
					this.screen = 9;
					break;
				case 10:
					
					if ( !this.announcementConsole ) {
						return null;
					}
					this.screen = 10;
					break;
				default:
					this.dpt = "";
					this.msgVerified = "";
					this.msgStamped = "";
					this.message = "";
					this.priority = -1;
					this.screen = 0;
					break;
			}

			dynamic _h = href_list["setSilent"]; // Was a switch-case, sorry for the mess.
			if ( _h==null ) {
				
			} else if ( _h=="1" ) {
				this.silent = true;
			} else {
				this.silent = false;
			}

			dynamic _i = href_list["setDepartment"]; // Was a switch-case, sorry for the mess.
			if ( _i==null ) {
				
			} else {
				name = GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Name:", "Name this department.", "Public", null, InputType.Str | InputType.Null ) );
				this.set_department( name, String13.ParseNumber( href_list["setDepartment"] ) );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: requests_console.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			dynamic dpt = null;
			dynamic dpt2 = null;
			dynamic dpt3 = null;
			Obj_Machinery_RequestsConsole Console = null;
			dynamic msg = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}
			dat = "<HEAD><TITLE>Requests Console</TITLE></HEAD><H3>" + this.department + " Requests Console</H3>";

			if ( !this.open ) {
				
				switch ((int)( this.screen )) {
					case 1:
						dat += "Which department do you need assistance from?<BR><BR>";

						foreach (dynamic _a in Lang13.Enumerate( GlobalVars.req_console_assistance )) {
							dpt = _a;
							

							if ( dpt != this.department ) {
								dat += new Txt().item( dpt ).str( " (<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt ) ).str( "'>Message</A> or " ).ToString();
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt ) ).str( ";priority=2'>High Priority</A>" ).ToString();
								dat += ")<BR>";
							}
						}
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					case 2:
						dat += "Which department do you need supplies from?<BR><BR>";

						foreach (dynamic _b in Lang13.Enumerate( GlobalVars.req_console_supplies )) {
							dpt2 = _b;
							

							if ( dpt2 != this.department ) {
								dat += new Txt().item( dpt2 ).str( " (<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt2 ) ).str( "'>Message</A> or " ).ToString();
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt2 ) ).str( ";priority=2'>High Priority</A>" ).ToString();
								dat += ")<BR>";
							}
						}
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					case 3:
						dat += "Which department would you like to send information to?<BR><BR>";

						foreach (dynamic _c in Lang13.Enumerate( GlobalVars.req_console_information )) {
							dpt3 = _c;
							

							if ( dpt3 != this.department ) {
								dat += new Txt().item( dpt3 ).str( " (<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt3 ) ).str( "'>Message</A> or " ).ToString();
								dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";write=" ).item( String13.CKey( dpt3 ) ).str( ";priority=2'>High Priority</A>" ).ToString();
								dat += ")<BR>";
							}
						}
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					case 5:
						dat += "<B>Configure Panel</B><BR><BR>";

						if ( this.announceAuth == true ) {
							dat += "<b>Authentication accepted</b><BR><BR>";
						} else {
							dat += "Swipe your card to authenticate yourself.<BR><BR>";
						}

						if ( this.announceAuth == true ) {
							dat += "Configure department. Set to 0 to release internal locks for deconstruction.<BR><BR>";
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=0'>No Contact</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=1'>Assistance</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=2'>Supply</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=3'>Anonymous Tip Recipient</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=4'>Assistance + Supply</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=5'>Assistance + Tips</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=6'>Supply + Tips</A><BR>" ).ToString();
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setDepartment=7'>All</A><BR>" ).ToString();
						}
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					case 6:
						dat += "<FONT COLOR='GREEN'>Message sent</FONT><BR><BR>";
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=0'>Continue</A><BR>" ).ToString();
						break;
					case 7:
						dat += "<FONT COLOR='RED'>An error occurred. </FONT><BR><BR>";
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=0'>Continue</A><BR>" ).ToString();
						break;
					case 8:
						
						foreach (dynamic _d in Lang13.Enumerate( GlobalVars.allConsoles, typeof(Obj_Machinery_RequestsConsole) )) {
							Console = _d;
							

							if ( Console.department == this.department ) {
								Console.newmessagepriority = 0;
								Console.icon_state = "req_comp0";
								Console.set_light( 1 );
							}
						}
						this.newmessagepriority = 0;
						this.icon_state = "req_comp0";

						foreach (dynamic _e in Lang13.Enumerate( this.messages )) {
							msg = _e;
							
							dat += "" + msg + "<BR>";
						}
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back to main menu</A><BR>" ).ToString();
						break;
					case 9:
						dat += "<B>Message Authentication</B><BR><BR>";
						dat += "<b>Message for " + this.dpt + ": </b>" + this.message + "<BR><BR>";
						dat += "You may authenticate your message now by scanning your ID or your stamp<BR><BR>";
						dat += "Validated by: " + this.msgVerified + "<br>";
						dat += "Stamped by: " + this.msgStamped + "<br>";
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";department=" ).item( this.dpt ).str( "'>Send</A><BR>" ).ToString();
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					case 10:
						dat += "<B>Station wide announcement</B><BR><BR>";

						if ( this.announceAuth == true ) {
							dat += "<b>Authentication accepted</b><BR><BR>";
						} else {
							dat += "Swipe your card to authenticate yourself.<BR><BR>";
						}
						dat += new Txt( "<b>Message: </b>" ).item( this.message ).str( " <A href='?src=" ).Ref( this ).str( ";writeAnnouncement=1'>Write</A><BR><BR>" ).ToString();

						if ( this.announceAuth == true && Lang13.Bool( this.message ) ) {
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";sendAnnouncement=1'>Announce</A><BR>" ).ToString();
						}
						dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";setScreen=0'>Back</A><BR>" ).ToString();
						break;
					default:
						this.screen = 0;
						this.announceAuth = false;

						if ( this.newmessagepriority == 1 ) {
							dat += "<FONT COLOR='RED'>There are new messages</FONT><BR>";
						}

						if ( this.newmessagepriority == 2 ) {
							dat += "<FONT COLOR='RED'><B>NEW PRIORITY MESSAGES</B></FONT><BR>";
						}
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=8'>View Messages</A><BR><BR>" ).ToString();
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=1'>Request Assistance</A><BR>" ).ToString();
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=2'>Request Supplies</A><BR>" ).ToString();
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=3'>Relay Anonymous Information</A><BR><BR>" ).ToString();
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=5'>Configure Panel</A><BR><BR>" ).ToString();

						if ( this.announcementConsole ) {
							dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";setScreen=10'>Send station-wide announcement</A><BR><BR>" ).ToString();
						}

						if ( this.silent ) {
							dat += new Txt( "Speaker <A href='?src=" ).Ref( this ).str( ";setSilent=0'>OFF</A>" ).ToString();
						} else {
							dat += new Txt( "Speaker <A href='?src=" ).Ref( this ).str( ";setSilent=1'>ON</A>" ).ToString();
						}
						break;
				}
				Interface13.Browse( a, "" + dat, "window=request_console" );
				GlobalFuncs.onclose( a, "req_console" );
			}
			return null;
		}

		// Function from file: requests_console.dm
		public void set_department( dynamic name = null, double? D = null ) {
			this.department = name;
			this.departmentType = D;
			name = "" + this.department + " Requests Console";
			Interface13.Stat( null, GlobalVars.req_console_assistance.Contains( "" + this.department ) );

			if ( false ) {
				GlobalVars.req_console_assistance.Remove( this.department );
			}
			Interface13.Stat( null, GlobalVars.req_console_supplies.Contains( "" + this.department ) );

			if ( false ) {
				GlobalVars.req_console_supplies.Remove( this.department );
			}
			Interface13.Stat( null, GlobalVars.req_console_information.Contains( "" + this.department ) );

			if ( false ) {
				GlobalVars.req_console_information.Remove( this.department );
			}

			switch ((double?)( this.departmentType )) {
				case 1:
					Interface13.Stat( null, GlobalVars.req_console_assistance.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_assistance.Add( this.department );
					}
					break;
				case 2:
					Interface13.Stat( null, GlobalVars.req_console_supplies.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_supplies.Add( this.department );
					}
					break;
				case 3:
					Interface13.Stat( null, GlobalVars.req_console_information.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_information.Add( this.department );
					}
					break;
				case 4:
					Interface13.Stat( null, GlobalVars.req_console_assistance.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_assistance.Add( this.department );
					}
					Interface13.Stat( null, GlobalVars.req_console_supplies.Contains( "" + this.department ) );

					if ( !( !false ) ) {
						GlobalVars.req_console_supplies.Add( this.department );
					}
					break;
				case 5:
					Interface13.Stat( null, GlobalVars.req_console_assistance.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_assistance.Add( this.department );
					}
					Interface13.Stat( null, GlobalVars.req_console_information.Contains( "" + this.department ) );

					if ( !( !false ) ) {
						GlobalVars.req_console_information.Add( this.department );
					}
					break;
				case 6:
					Interface13.Stat( null, GlobalVars.req_console_supplies.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_supplies.Add( this.department );
					}
					Interface13.Stat( null, GlobalVars.req_console_information.Contains( "" + this.department ) );

					if ( !( !false ) ) {
						GlobalVars.req_console_information.Add( this.department );
					}
					break;
				case 7:
					Interface13.Stat( null, GlobalVars.req_console_assistance.Contains( "" + this.department ) );

					if ( !false ) {
						GlobalVars.req_console_assistance.Add( this.department );
					}
					Interface13.Stat( null, GlobalVars.req_console_supplies.Contains( "" + this.department ) );

					if ( !( !false ) ) {
						GlobalVars.req_console_supplies.Add( this.department );
					}
					Interface13.Stat( null, GlobalVars.req_console_information.Contains( "" + this.department ) );

					if ( !( !( !false ) ) ) {
						GlobalVars.req_console_information.Add( this.department );
					}
					break;
			}
			return;
		}

		// Function from file: requests_console.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( ( this.stat & 2 ) != 0 ) {
				
				if ( this.icon_state != "req_comp_off" ) {
					this.icon_state = "req_comp_off";
				}
			} else if ( this.icon_state == "req_comp_off" ) {
				this.icon_state = "req_comp0";
			}
			return null;
		}

		// Function from file: requests_console.dm
		public override dynamic power_change(  ) {
			base.power_change();
			this.update_icon();
			return null;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
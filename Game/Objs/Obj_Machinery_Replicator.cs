// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Replicator : Obj_Machinery {

		public int spawn_progress = 0;
		public int max_spawn_ticks = 5;
		public ByTable construction = new ByTable();
		public ByTable spawning_types = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.idle_power_usage = 100;
			this.active_power_usage = 1000;
			this.machine_flags = 8;
			this.icon = "icons/obj/xenoarchaeology.dmi";
			this.icon_state = "borgcharger0(old)";
		}

		// Function from file: artifact_replicator.dm
		public Obj_Machinery_Replicator ( dynamic loc = null ) : base( (object)(loc) ) {
			ByTable viables = null;
			int? quantity = null;
			int? i = null;
			string button_desc = null;
			dynamic type = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			viables = new ByTable(new object [] { 
				typeof(Obj_Item_Roller), 
				typeof(Obj_Structure_Closet_Crate), 
				typeof(Obj_Structure_Closet_Acloset), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Mimic), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Viscerator), 
				typeof(Mob_Living_SimpleAnimal_Hostile_Hivebot), 
				typeof(Obj_Item_Device_Analyzer), 
				typeof(Obj_Item_Device_Camera), 
				typeof(Obj_Item_Device_Flash), 
				typeof(Obj_Item_Device_Flashlight), 
				typeof(Obj_Item_Device_Healthanalyzer), 
				typeof(Obj_Item_Device_Multitool), 
				typeof(Obj_Item_Device_Paicard), 
				typeof(Obj_Item_Device_Radio), 
				typeof(Obj_Item_Device_Radio_Headset), 
				typeof(Obj_Item_Beacon), 
				typeof(Obj_Item_Weapon_AutopsyScanner), 
				typeof(Obj_Item_Weapon_Bikehorn), 
				typeof(Obj_Item_Weapon_Bonesetter), 
				typeof(Obj_Item_Weapon_Kitchen_Utensil_Knife_Large_Butch), 
				typeof(Obj_Item_Weapon_Caution), 
				typeof(Obj_Item_Weapon_Caution_Cone), 
				typeof(Obj_Item_Weapon_Crowbar), 
				typeof(Obj_Item_Weapon_Clipboard), 
				typeof(Obj_Item_Weapon_Cell), 
				typeof(Obj_Item_Weapon_CircularSaw), 
				typeof(Obj_Item_Weapon_Hatchet), 
				typeof(Obj_Item_Weapon_Handcuffs), 
				typeof(Obj_Item_Weapon_Hemostat), 
				typeof(Obj_Item_Weapon_Kitchen_Utensil_Knife_Large), 
				typeof(Obj_Item_Weapon_Lighter), 
				typeof(Obj_Item_Weapon_Light_Bulb), 
				typeof(Obj_Item_Weapon_Light_Tube), 
				typeof(Obj_Item_Weapon_Pickaxe), 
				typeof(Obj_Item_Weapon_Pickaxe_Shovel), 
				typeof(Obj_Item_Weapon_TableParts), 
				typeof(Obj_Item_Weapon_Weldingtool), 
				typeof(Obj_Item_Weapon_Wirecutters), 
				typeof(Obj_Item_Weapon_Wrench), 
				typeof(Obj_Item_Weapon_Screwdriver), 
				typeof(Obj_Item_Weapon_Grenade_ChemGrenade_Cleaner), 
				typeof(Obj_Item_Weapon_Grenade_ChemGrenade_Metalfoam)
			 });
			quantity = Rand13.Int( 5, 15 );
			i = null;
			i = 0;

			while (( i ??0) < ( quantity ??0)) {
				button_desc = "" + Rand13.Pick(new object [] { "a yellow", "a purple", "a green", "a blue", "a red", "an orange", "a white" }) + ", ";
				button_desc += "" + Rand13.Pick(new object [] { "round", "square", "diamond", "heart", "dog", "human" }) + " shaped ";
				button_desc += "" + Rand13.Pick(new object [] { "toggle", "switch", "lever", "button", "pad", "hole" });
				type = Rand13.PickFromTable( viables );
				viables.Remove( type );
				this.construction[button_desc] = type;
				i++;
			}
			return;
		}

		// Function from file: artifact_replicator.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			double? index = null;

			
			if ( this.spawning_types.len > 0 ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The machine is already processing something. The buttons are unresponsive.</span>" );
				return null;
			}

			if ( Lang13.Bool( href_list["activate"] ) ) {
				index = String13.ParseNumber( href_list["activate"] );

				if ( ( index ??0) > 0 && ( index ??0) <= this.construction.len ) {
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " a " ).item( Rand13.Pick(new object [] { "light", "dial", "display", "meter", "pad" }) ).str( " on " ).item( this ).str( "'s front " ).item( Rand13.Pick(new object [] { "blinks", "flashes" }) ).str( " " ).item( Rand13.Pick(new object [] { "red", "yellow", "blue", "orange", "purple", "green", "white" }) ).str( "." ).item( ( Task13.User is Mob_Dead_Observer ? " Spooky." : "" ) ).str( "</span>" ).ToString() );
					this.spawning_types.Add( this.construction[this.construction[index]] );
					this.spawn_progress = 0;
					this.use_power = 2;
					this.icon_state = "borgcharger1(old)";
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 50, 0 );
				}
			}
			return null;
		}

		// Function from file: artifact_replicator.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			int? index = null;

			dat = "The control panel displays an incomprehensible selection of controls, many with unusual markings or text around them.<br>";
			dat += "<br>";
			index = null;
			index = 1;

			while (( index ??0) <= this.construction.len) {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";activate=" ).item( index ).str( "'>[" ).item( this.construction[index] ).str( "]</a><br>" ).ToString();
				index++;
			}
			Interface13.Browse( user, dat, "window=alien_replicator" );
			return null;
		}

		// Function from file: artifact_replicator.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}
			this.interact( a );
			return null;
		}

		// Function from file: artifact_replicator.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Wrench ) {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			} else if ( Convert.ToDouble( a.force ) > 10 ) {
				GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "<font color='red'>" + b + " damaged " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with " + a + "</font>" ) ) );
				this.visible_message( new Txt( "<span class='warning'>" ).The( b ).item().str( " damages " ).the( this ).item().str( " with " ).the( a ).item().str( ".</span>" ).ToString() );

				if ( Rand13.PercentChance( Convert.ToInt32( a.force / 2 ) ) ) {
					GlobalFuncs.msg_admin_attack( "" + b + " blew up " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with " + a + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + b.x + ";Y=" + b.y + ";Z=" + b.z + "'>JMP</a>)" );
					GlobalFuncs.explosion( GlobalFuncs.get_turf( this ), -1, 2, 3, 3 );
					GlobalFuncs.qdel( this );
				}
			} else {
				this.visible_message( new Txt( "<span class='warning'>" ).The( b ).item().str( " taps " ).the( this ).item().str( " with " ).the( a ).item().str( ".</span>" ).ToString() );
			}
			return null;
		}

		// Function from file: artifact_replicator.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj is Obj_Item_Projectile_Beam || Proj is Obj_Item_Projectile_Bullet || Proj is Obj_Item_Projectile_Ricochet ) {
				GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "<font color='red'>" + ( Lang13.Bool( Proj.firer ) ? "" + GlobalFuncs.key_name( Proj.firer ) : "Something" ) + " shot " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with a " + Proj.type + "</font>" ) ) );
				this.visible_message( new Txt( "<span class='notice'>" ).The( Proj ).item().str( " " ).item( ( Lang13.Bool( Proj.damage ) ? "hits" : "glances off" ) ).str( " " ).the( this ).item().str( "!</span>" ).ToString() );

				if ( Rand13.PercentChance( Convert.ToInt32( Proj.damage / 2 ) ) ) {
					
					if ( Lang13.Bool( Proj.firer ) ) {
						GlobalFuncs.msg_admin_attack( "" + GlobalFuncs.key_name( Proj.firer ) + " blew up " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with a " + Proj.type + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + Proj.firer.x + ";Y=" + Proj.firer.y + ";Z=" + Proj.firer.z + "'>JMP</a>)" );
					}
					GlobalFuncs.explosion( GlobalFuncs.get_turf( this ), -1, 2, 3, 3 );
					GlobalFuncs.qdel( this );
				}
			}
			return null;
		}

		// Function from file: artifact_replicator.dm
		public override dynamic process(  ) {
			dynamic spawn_type = null;

			
			if ( this.spawning_types.len != 0 && Lang13.Bool( this.powered() ) ) {
				this.spawn_progress++;

				if ( this.spawn_progress > this.max_spawn_ticks ) {
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).item( this ).str( " pings!</span>" ).ToString() );
					spawn_type = this.spawning_types[1];
					Lang13.Call( spawn_type, this.loc );
					this.spawning_types.Remove( this.spawning_types[1] );
					this.spawn_progress = 0;
					this.max_spawn_ticks = Rand13.Int( 5, 30 );

					if ( !( this.spawning_types.len != 0 ) ) {
						this.use_power = 1;
						this.icon_state = "borgcharger0(old)";
					}
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/heps.ogg", 50, 0 );
				} else if ( Rand13.PercentChance( 5 ) ) {
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).item( this ).str( " " ).item( Rand13.Pick(new object [] { "clicks", "whizzes", "whirrs", "whooshes", "clanks", "clongs", "clonks", "bangs" }) ).str( ".</span>" ).ToString() );
				}
			}
			return null;
		}

	}

}
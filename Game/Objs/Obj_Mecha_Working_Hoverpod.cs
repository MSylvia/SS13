// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Mecha_Working_Hoverpod : Obj_Mecha_Working {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.wreckage = typeof(Obj_Effect_Decal_MechaWreckage_Hoverpod);
			this.icon_state = "engineering_pod";
		}

		public Obj_Mecha_Working_Hoverpod ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: artifact_hoverpod.dm
		public override dynamic mechsteprand(  ) {
			dynamic result = null;

			Map13.StepRandom( this );
			result = null;

			if ( Lang13.Bool( result ) ) {
				GlobalFuncs.playsound( this, "sound/machines/hiss.ogg", 40, 1 );
			}
			return result;
		}

		// Function from file: artifact_hoverpod.dm
		public override dynamic mechstep( double? direction = null ) {
			dynamic result = null;

			Map13.Step( this, ((int)( direction ??0 )) );
			result = null;

			if ( Lang13.Bool( result ) ) {
				GlobalFuncs.playsound( this, "sound/machines/hiss.ogg", 40, 1 );
			}
			return result;
		}

		// Function from file: artifact_hoverpod.dm
		public override bool mechturn( double? direction = null ) {
			this.dir = ((int)( direction ??0 ));
			return true;
		}

		// Function from file: artifact_hoverpod.dm
		public override bool dyndomove( double? direction = null ) {
			bool move_result = false;

			
			if ( !this.can_move ) {
				return false;
			}

			if ( this.pr_inertial_movement.active() ) {
				return false;
			}

			if ( !this.has_charge( this.step_energy_drain ) ) {
				return false;
			}
			move_result = false;

			if ( this.hasInternalDamage( 16 ) != 0 ) {
				move_result = Lang13.Bool( this.mechsteprand() );
			} else if ( this.dir != direction ) {
				move_result = this.mechturn( direction );
			} else {
				move_result = Lang13.Bool( this.mechstep( direction ) );
			}

			if ( move_result ) {
				this.can_move = false;
				this.use_power( this.step_energy_drain );

				if ( this.do_after( this.step_in ) ) {
					this.can_move = true;
				}
				return true;
			}
			return false;
		}

	}

}
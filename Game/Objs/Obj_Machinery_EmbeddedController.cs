// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_EmbeddedController : Obj_Machinery {

		public Computer_File_EmbeddedProgram program = null;
		public bool on = true;
		public int build = 2;
		public dynamic boardtype = null;
		public dynamic _circuitboard = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.machine_flags = 128;
			this.icon = "icons/obj/airlock_machines.dmi";
			this.icon_state = "airlock_control_build0";
		}

		// Function from file: embedded_controller_base.dm
		public Obj_Machinery_EmbeddedController ( dynamic loc = null, int ndir = 0, bool? building = null ) : base( (object)(loc) ) {
			building = building ?? false;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( building == true ) {
				this.dir = ndir;
				this.pixel_x = ( ( this.dir & 3 ) != 0 ? 0 : ( this.dir == 4 ? 24 : -24 ) );
				this.pixel_y = ( ( this.dir & 3 ) != 0 ? ( this.dir == 1 ? 24 : -24 ) : 0 );
				this.build = 0;
				this.stat |= 8;
				this.update_icon();
			}
			return;
		}

		// Function from file: embedded_controller_base.dm
		public override void ui_interact( dynamic user = null, string ui_key = null, Nanoui ui = null, bool? force_open = null ) {
			return;
		}

		// Function from file: embedded_controller_base.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !Lang13.Bool( a.dexterity_check() ) ) {
				GlobalFuncs.to_chat( a, "You do not have the dexterity to use this." );
				return null;
			}

			if ( this.build < 2 ) {
				return 1;
			}
			this.ui_interact( a );
			return null;
		}

		// Function from file: embedded_controller_base.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand( a );
			return null;
		}

		// Function from file: embedded_controller_base.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( this.build < 2 ) {
				return 1;
			}
			this.ui_interact( user );
			return null;
		}

		// Function from file: embedded_controller_base.dm
		public override dynamic process(  ) {
			
			if ( this.program != null ) {
				this.program.process();
			}
			this.update_icon();
			this.updateDialog();
			return null;
		}

		// Function from file: embedded_controller_base.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			
			if ( !( signal != null ) || Lang13.Bool( ((dynamic)signal).encryption ) ) {
				return false;
			}

			if ( this.program != null ) {
				this.program.receive_signal( signal, receive_method, receive_param );
			}
			return false;
		}

		// Function from file: embedded_controller_base.dm
		public virtual bool post_signal( Game_Data signal = null, dynamic comm_line = null ) {
			return false;
		}

		// Function from file: embedded_controller_base.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			dynamic C = null;
			dynamic C2 = null;
			dynamic C3 = null;
			dynamic EC = null;

			_default = base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}

			if ( this.type == typeof(Obj_Machinery_EmbeddedController) ) {
				
				switch ((int)( this.build )) {
					case 0:
						
						if ( a is Obj_Item_Weapon_Screwdriver ) {
							GlobalFuncs.to_chat( Task13.User, new Txt( "You begin removing screws from " ).the( this ).item().str( " backplate..." ).ToString() );

							if ( GlobalFuncs.do_after( b, this, 50 ) ) {
								GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>You unscrew " ).the( this ).item().str( " from the wall.</span>" ).ToString() );
								GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
								new Obj_Item_Mounted_Frame_AirlockController( GlobalFuncs.get_turf( this ) );
								GlobalFuncs.qdel( this );
							}
							return 1;
						}

						if ( a is Obj_Item_Weapon_Circuitboard ) {
							C = a;

							if ( C.board_type != "embedded controller" ) {
								GlobalFuncs.to_chat( b, "<span class='warning'>You cannot install this type of board into an embedded controller.</span>" );
								return _default;
							}
							GlobalFuncs.to_chat( Task13.User, new Txt( "You begin to insert " ).the( C ).item().str( " into " ).the( this ).item().str( "." ).ToString() );

							if ( GlobalFuncs.do_after( b, this, 10 ) ) {
								
								if ( Lang13.Bool( b.drop_item( C, this ) ) ) {
									GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>You secure " ).the( C ).item().str( "!</span>" ).ToString() );
									this._circuitboard = C;
									GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/pop.ogg", 50, 0 );
									this.build++;
									this.update_icon();
								}
							}
							return 1;
						}
						break;
					case 1:
						
						if ( a is Obj_Item_Weapon_Crowbar ) {
							GlobalFuncs.to_chat( Task13.User, new Txt( "You begin to pry out " ).the( a ).item().str( " into " ).the( this ).item().str( "." ).ToString() );

							if ( GlobalFuncs.do_after( b, this, 10 ) ) {
								GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/pop.ogg", 50, 0 );
								this.build--;
								this.update_icon();
								C2 = null;

								if ( Lang13.Bool( this._circuitboard ) ) {
									this._circuitboard.loc = GlobalFuncs.get_turf( this );
									C2 = this._circuitboard;
									this._circuitboard = null;
								} else {
									C2 = Lang13.Call( this.boardtype, GlobalFuncs.get_turf( this ) );
								}
								((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b.name ).str( " has removed " ).the( C2 ).item().str( "!</span>" ).ToString(), new Txt( "You remove " ).the( C2 ).item().str( "." ).ToString() );
							}
							return 1;
						}

						if ( a is Obj_Item_Stack_CableCoil ) {
							C3 = a;
							GlobalFuncs.to_chat( b, new Txt( "You start adding cables to " ).the( this ).item().str( "..." ).ToString() );
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );

							if ( GlobalFuncs.do_after( b, this, 20 ) && Convert.ToDouble( C3.amount ) >= 10 ) {
								C3.use( 5 );
								this.build++;
								this.update_icon();
								((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b.name ).str( " has added cables to " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "You add cables to " ).the( this ).item().str( "." ).ToString() );
							}
						}
						break;
					case 2:
						
						if ( a is Obj_Item_Weapon_Wirecutters ) {
							GlobalFuncs.to_chat( Task13.User, new Txt( "You begin to remove the wiring from " ).the( this ).item().str( "." ).ToString() );

							if ( GlobalFuncs.do_after( b, this, 50 ) ) {
								new Obj_Item_Stack_CableCoil( this.loc, 5 );
								((Ent_Static)b).visible_message( "<span class='warning'>" + b.name + " cut the cables.</span>", "You cut the cables." );
								this.build--;
								this.update_icon();
							}
							return 1;
						}

						if ( a is Obj_Item_Weapon_Screwdriver ) {
							GlobalFuncs.to_chat( b, new Txt( "You begin to complete " ).the( this ).item().str( "..." ).ToString() );
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );

							if ( GlobalFuncs.do_after( b, this, 20 ) ) {
								
								if ( !Lang13.Bool( this._circuitboard ) ) {
									this._circuitboard = Lang13.Call( this.boardtype, this );
								}
								EC = Lang13.Call( this._circuitboard.build_path, GlobalFuncs.get_turf( this ) );
								EC.dir = this.dir;
								EC.pixel_x = this.pixel_x;
								EC.pixel_y = this.pixel_y;
								((Ent_Static)b).visible_message( new Txt( "<span class='warning'>" ).item( b.name ).str( " has finished " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "You finish " ).the( this ).item().str( "." ).ToString() );
								GlobalFuncs.qdel( this );
							}
							return 1;
						}
						break;
				}
			}

			if ( this.build < 2 ) {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return _default;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
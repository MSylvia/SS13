// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Hailer : Obj_Item_Device {

		public bool spamcheck = false;
		public bool emagged = false;
		public int insults = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "flashbang";
			this.origin_tech = "magnets=1;combat=1";
			this.w_class = 1;
			this.icon_state = "voice0";
		}

		public Obj_Item_Device_Hailer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: whistle.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Card_Emag && !this.emagged ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You overload " ).the( this ).item().str( "'s voice synthesizer.</span>" ).ToString() );
				this.emagged = true;
				this.insults = Rand13.Int( 1, 3 );
				return null;
			}
			return null;
		}

		// Function from file: whistle.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.spamcheck ) {
				return null;
			}

			if ( this.emagged ) {
				
				if ( this.insults >= 1 ) {
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/voice/binsult.ogg", 100, 1 );
					user.show_message( "<span class='warning'>" + user + "'s " + this.name + " gurgles, \"FUCK YOUR CUNT YOU SHIT EATING CUNT TILL YOU ARE A MASS EATING SHIT CUNT. EAT PENISES IN YOUR FUCK FACE AND SHIT OUT ABORTIONS TO FUCK UP SHIT IN YOUR ASS YOU COCK FUCK SHIT MONKEY FROM THE DEPTHS OF SHIT\"</span>", 2 );
					this.insults--;
				} else {
					GlobalFuncs.to_chat( user, "<span class='warning'>*BZZZZcuntZZZZT*</span>" );
				}
			} else {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/voice/halt.ogg", 100, 1 );
				user.show_message( "<span class='warning'>" + user + "'s " + this.name + " rasps, \"Halt! Security!\"</span>", 1 );
			}
			this.spamcheck = true;
			Task13.Schedule( 20, (Task13.Closure)(() => {
				this.spamcheck = false;
				return;
			}));
			return null;
		}

	}

}
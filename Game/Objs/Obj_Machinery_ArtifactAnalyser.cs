// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ArtifactAnalyser : Obj_Machinery {

		public bool scan_in_progress = false;
		public bool scan_num = false;
		public dynamic scanned_obj = null;
		public dynamic owned_scanner = null;
		public int scan_completion_time = 0;
		public int scan_duration = 120;
		public Obj scanned_object = null;
		public int report_num = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/virology.dmi";
			this.icon_state = "isolator";
		}

		// Function from file: artifact_analyser.dm
		public Obj_Machinery_ArtifactAnalyser ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.reconnect_scanner();
			return;
		}

		// Function from file: artifact_analyser.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			bool artifact_in_use = false;
			Obj O = null;
			Obj A = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["begin_scan"] ) ) {
				
				if ( !Lang13.Bool( this.owned_scanner ) ) {
					this.reconnect_scanner();
				}

				if ( Lang13.Bool( this.owned_scanner ) ) {
					artifact_in_use = false;

					foreach (dynamic _a in Lang13.Enumerate( this.owned_scanner.loc, typeof(Obj) )) {
						O = _a;
						

						if ( O == this.owned_scanner ) {
							continue;
						}

						if ( O.invisibility != 0 ) {
							continue;
						}

						if ( this.scanned_object is Obj_Machinery_Artifact ) {
							A = this.scanned_object;

							if ( Lang13.Bool( ((dynamic)A).being_used ) ) {
								artifact_in_use = true;
							} else {
								A.anchored = 1;
								((dynamic)A).being_used = 1;
							}
						}

						if ( artifact_in_use ) {
							this.visible_message( "<b>" + this.name + "</b> states, \"Cannot harvest. Too much interference.\"" );
						} else {
							this.scanned_object = O;
							this.scan_in_progress = true;
							this.scan_completion_time = Game13.time + this.scan_duration;
							this.visible_message( "<b>" + this.name + "</b> states, \"Scanning begun.\"" );
						}
						break;
					}

					if ( !( this.scanned_object != null ) ) {
						this.visible_message( "<b>" + this.name + "</b> states, \"Unable to isolate scan target.\"" );
					}
				}
			}

			if ( Lang13.Bool( href_list["halt_scan"] ) ) {
				this.scan_in_progress = false;
				this.visible_message( "<b>" + this.name + "</b> states, \"Scanning halted.\"" );
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				Task13.User.unset_machine(  );
				Interface13.Browse( Task13.User, null, "window=artanalyser" );
			}
			this.updateDialog();
			return null;
		}

		// Function from file: artifact_analyser.dm
		public override dynamic process(  ) {
			string results = null;
			Obj_Item_Weapon_Paper P = null;
			Obj A = null;

			
			if ( this.scan_in_progress && Game13.time > this.scan_completion_time ) {
				this.scan_in_progress = false;
				this.updateDialog();
				results = "";

				if ( !Lang13.Bool( this.owned_scanner ) ) {
					this.reconnect_scanner();
				}

				if ( !Lang13.Bool( this.owned_scanner ) ) {
					results = "Error communicating with scanner.";
				} else if ( !( this.scanned_object != null ) || this.scanned_object.loc != this.owned_scanner.loc ) {
					results = "Unable to locate scanned object. Ensure it was not moved in the process.";
				} else {
					results = this.get_scan_info( this.scanned_object );
				}
				this.visible_message( "<b>" + this.name + "</b> states, \"Scanning complete.\"" );
				P = new Obj_Item_Weapon_Paper( this.loc );
				P.name = "" + this + " report #" + ++this.report_num;
				P.info = "<b>" + this + " analysis report #" + this.report_num + "</b><br>";
				P.info += "<br>";
				P.info += new Txt().icon( this.scanned_object ).str( " " ).item( results ).ToString();
				P.stamped = new ByTable(new object [] { typeof(Obj_Item_Weapon_Stamp) });
				P.overlays = new ByTable(new object [] { "paper_stamped" });

				if ( this.scanned_object != null && this.scanned_object is Obj_Machinery_Artifact ) {
					A = this.scanned_object;
					A.anchored = 0;
					((dynamic)A).being_used = 0;
				}
			}
			return null;
		}

		// Function from file: artifact_analyser.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;

			
			if ( Lang13.Bool( base.interact( (object)(user), flag1 ) ) ) {
				return null;
			}

			if ( ( this.stat & 3 ) != 0 || Map13.GetDistance( this, user ) > 1 ) {
				((Mob)user).unset_machine(  );
				return null;
			}
			dat = "<B>Anomalous material analyser</B><BR>";
			dat += "<HR>";

			if ( !Lang13.Bool( this.owned_scanner ) ) {
				this.owned_scanner = Lang13.FindIn( typeof(Obj_Machinery_ArtifactScanpad), Map13.FetchInRangeExcludeThis( this, 1 ) );
			}

			if ( !Lang13.Bool( this.owned_scanner ) ) {
				dat += "<b><font color=red>Unable to locate analysis pad.</font></b><br>";
			} else if ( this.scan_in_progress ) {
				dat += "Please wait. Analysis in progress.<br>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";halt_scan=1'>Halt scanning.</a><br>" ).ToString();
			} else {
				dat += "Scanner is ready.<br>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";begin_scan=1'>Begin scanning.</a><br>" ).ToString();
			}
			dat += "<br>";
			dat += "<hr>";
			dat += new Txt( "<a href='?src=" ).Ref( this ).str( "'>Refresh</a> <a href='?src=" ).Ref( this ).str( ";close=1'>Close</a>" ).ToString();
			Interface13.Browse( user, dat, "window=artanalyser;size=450x500" );
			((Mob)user).set_machine( this );
			GlobalFuncs.onclose( user, "artanalyser" );
			return null;
		}

		// Function from file: artifact_analyser.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}
			this.add_fingerprint( a );
			this.interact( a );
			return null;
		}

		// Function from file: artifact_analyser.dm
		public string get_scan_info( Obj scanned_obj = null ) {
			Obj A = null;
			string _out = null;

			
			dynamic _e = scanned_obj.type; // Was a switch-case, sorry for the mess.
			if ( _e==typeof(Obj_Machinery_AutoCloner) ) {
				return "Automated cloning pod - appears to rely on organic nanomachines with a self perpetuating ecosystem involving self cannibalism and a symbiotic relationship with the contained liquid.<br><br>Structure is composed of a carbo-titanium alloy with interlaced reinforcing energy fields, and the contained liquid resembles proto-plasmic residue supportive of single cellular developmental conditions.";
			} else if ( _e==typeof(Obj_Machinery_Power_Supermatter) ) {
				return "Super dense plasma clump - Appears to have been shaped or hewn, structure is composed of matter 2000% denser than ordinary carbon matter residue.Potential application as unrefined plasma source.";
			} else if ( _e==typeof(Obj_Structure_Constructshell) ) {
				return "Tribal idol - Item resembles statues/emblems built by superstitious pre-warp civilisations to honour their gods. Material appears to be a rock/plastcrete composite.";
			} else if ( _e==typeof(Obj_Machinery_GigaDrill) ) {
				return "Automated mining drill - structure composed of titanium-carbide alloy, with tip and drill lines edged in an alloy of diamond and plasma.";
			} else if ( _e==typeof(Obj_Structure_Cult_Pylon) ) {
				return "Tribal pylon - Item resembles statues/emblems built by cargo cult civilisations to honour energy systems from post-warp civilisations.";
			} else if ( _e==typeof(Obj_Mecha_Working_Hoverpod) ) {
				return "Vacuum capable repair pod - Item is a remarkably intact single man repair craft capable of flight in a vacuum. Outer shell composed of primarily post-warp hull alloys, with internal wiring and circuitry consistent with modern electronics and engineering.";
			} else if ( _e==typeof(Obj_Machinery_Replicator) ) {
				return "Automated construction unit - Item appears to be able to synthesize synthetic items, some with simple internal circuitry. Method unknown, phasing suggested?";
			} else if ( _e==typeof(Obj_Structure_Crystal) ) {
				return "Crystal formation - Pseudo organic crystalline matrix, unlikely to have formed naturally. No known technology exists to synthesize this exact composition.";
			} else if ( _e==typeof(Obj_Machinery_Artifact) ) {
				A = scanned_obj;
				_out = "Anomalous alien device - Composed of an unknown alloy, ";

				if ( Lang13.Bool( ((dynamic)A).my_effect ) ) {
					
					switch ((int)( ((dynamic)A).my_effect.effect_type )) {
						case 1:
							_out += "concentrated energy emissions";
							break;
						case 2:
							_out += "intermittent psionic wavefront";
							break;
						case 3:
							_out += "electromagnetic energy";
							break;
						case 4:
							_out += "high frequency particles";
							break;
						case 5:
							_out += "organically reactive exotic particles";
							break;
						case 6:
							_out += "interdimensional/bluespace? phasing";
							break;
						case 7:
							_out += "atomic synthesis";
							break;
						default:
							_out += "low level energy emissions";
							break;
					}
					_out += " have been detected ";

					dynamic _b = ((dynamic)A).my_effect.effect; // Was a switch-case, sorry for the mess.
					if ( _b==1 ) {
						_out += " emitting in an ambient energy field.";
					} else if ( _b==2 ) {
						_out += " emitting in periodic bursts.";
					} else {
						_out += " interspersed throughout substructure and shell.";
					}

					if ( ((dynamic)A).my_effect.trigger >= 0 && ((dynamic)A).my_effect.trigger <= 4 ) {
						_out += " Activation index involves physical interaction with artifact surface.";
					} else if ( ((dynamic)A).my_effect.trigger >= 5 && ((dynamic)A).my_effect.trigger <= 8 ) {
						_out += " Activation index involves energetic interaction with artifact surface.";
					} else if ( ((dynamic)A).my_effect.trigger >= 9 && ((dynamic)A).my_effect.trigger <= 12 ) {
						_out += " Activation index involves precise local atmospheric conditions.";
					} else {
						_out += " Unable to determine any data about activation trigger.";
					}
				}

				if ( Lang13.Bool( ((dynamic)A).secondary_effect ) ) {
					_out += "<br><br>Warning, internal scans indicate ongoing " + Rand13.Pick(new object [] { "subluminous", "subcutaneous", "superstructural" }) + " activity operating independantly from primary systems. Auxiliary activity involves ";

					switch ((int)( ((dynamic)A).secondary_effect.effect_type )) {
						case 1:
							_out += "concentrated energy emissions";
							break;
						case 2:
							_out += "intermittent psionic wavefront";
							break;
						case 3:
							_out += "electromagnetic energy";
							break;
						case 4:
							_out += "high frequency particles";
							break;
						case 5:
							_out += "organically reactive exotic particles";
							break;
						case 6:
							_out += "interdimensional/bluespace? phasing";
							break;
						case 7:
							_out += "atomic synthesis";
							break;
						default:
							_out += "low level radiation";
							break;
					}

					dynamic _d = ((dynamic)A).secondary_effect.effect; // Was a switch-case, sorry for the mess.
					if ( _d==1 ) {
						_out += " emitting in an ambient energy field.";
					} else if ( _d==2 ) {
						_out += " emitting in periodic bursts.";
					} else {
						_out += " interspersed throughout substructure and shell.";
					}

					if ( ((dynamic)A).secondary_effect.trigger >= 0 && ((dynamic)A).secondary_effect.trigger <= 4 ) {
						_out += " Activation index involves physical interaction with artifact surface, but subsystems indicate anomalous interference with standard attempts at triggering.";
					} else if ( ((dynamic)A).secondary_effect.trigger >= 5 && ((dynamic)A).secondary_effect.trigger <= 8 ) {
						_out += " Activation index involves energetic interaction with artifact surface, but subsystems indicate anomalous interference with standard attempts at triggering.";
					} else if ( ((dynamic)A).secondary_effect.trigger >= 9 && ((dynamic)A).secondary_effect.trigger <= 12 ) {
						_out += " Activation index involves precise local atmospheric conditions, but subsystems indicate anomalous interference with standard attempts at triggering.";
					} else {
						_out += " Unable to determine any data about activation trigger.";
					}
				}
				return _out;
			} else {
				return "" + scanned_obj.name + " - Mundane application, composed of carbo-ferritic alloy composite.";
			}
			return null;
		}

		// Function from file: artifact_analyser.dm
		public void reconnect_scanner(  ) {
			this.owned_scanner = Lang13.FindIn( typeof(Obj_Machinery_ArtifactScanpad), Map13.GetStep( this, this.dir ) );

			if ( !Lang13.Bool( this.owned_scanner ) ) {
				this.owned_scanner = Lang13.FindIn( typeof(Obj_Machinery_ArtifactScanpad), Map13.FetchInRangeExcludeThis( this, 1 ) );
			}
			return;
		}

	}

}
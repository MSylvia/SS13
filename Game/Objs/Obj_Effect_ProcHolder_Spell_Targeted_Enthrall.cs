// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Spell_Targeted_Enthrall : Obj_Effect_ProcHolder_Spell_Targeted {

		public bool enthralling = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.panel = "Shadowling Abilities";
			this.charge_max = 0;
			this.human_req = 1;
			this.clothes_req = 0;
			this.range = 1;
			this.action_icon_state = "enthrall";
		}

		public Obj_Effect_ProcHolder_Spell_Targeted_Enthrall ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: shadowling_abilities.dm
		public override bool cast( dynamic targets = null, dynamic thearea = null, dynamic user = null ) {
			thearea = thearea ?? Task13.User;

			Mob_Living_Carbon_Human target = null;
			int? progress = null;
			Obj_Item_Weapon_Implant_Loyalty L = null;

			GlobalFuncs.listclearnulls( GlobalVars.ticker.mode.thralls );

			if ( !GlobalVars.ticker.mode.shadows.Contains( thearea.mind ) ) {
				return false;
			}

			if ( thearea.dna.species.id != "shadowling" ) {
				
				if ( GlobalVars.ticker.mode.thralls.len >= 5 ) {
					this.revert_cast();
					return false;
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( targets, typeof(Mob_Living_Carbon_Human) )) {
				target = _c;
				

				if ( !( Map13.GetDistance( thearea, target ) <= 1 ) ) {
					thearea.WriteMsg( "<span class='warning'>You need to be closer to enthrall " + target + "!</span>" );
					this.revert_cast();
					return false;
				}

				if ( !Lang13.Bool( target.key ) || !( target.mind != null ) ) {
					thearea.WriteMsg( "<span class='warning'>The target has no mind!</span>" );
					this.revert_cast();
					return false;
				}

				if ( target.stat != 0 ) {
					thearea.WriteMsg( "<span class='warning'>The target must be conscious!</span>" );
					this.revert_cast();
					return false;
				}

				if ( GlobalFuncs.is_shadow_or_thrall( target ) ) {
					thearea.WriteMsg( "<span class='warning'>You can not enthrall allies!</span>" );
					this.revert_cast();
					return false;
				}

				if ( !( target is Mob_Living_Carbon_Human ) ) {
					thearea.WriteMsg( "<span class='warning'>You can only enthrall humans!</span>" );
					this.revert_cast();
					return false;
				}

				if ( this.enthralling ) {
					thearea.WriteMsg( "<span class='warning'>You are already enthralling!</span>" );
					this.revert_cast();
					return false;
				}

				if ( !( target.client != null ) ) {
					thearea.WriteMsg( "<span class='warning'>" + target + "'s mind is vacant of activity.</span>" );
				}
				this.enthralling = true;
				thearea.WriteMsg( "<span class='danger'>This target is valid. You begin the enthralling...</span>" );
				target.WriteMsg( "<span class='userdanger'>" + thearea + " stares at you. You feel your head begin to pulse.</span>" );
				progress = null;
				progress = 0;

				while (( progress ??0) <= 3) {
					
					switch ((int?)( progress )) {
						case 1:
							thearea.WriteMsg( "<span class='notice'>You place your hands to " + target + "'s head...</span>" );
							((Ent_Static)thearea).visible_message( "<span class='warning'>" + thearea + " places their hands onto the sides of " + target + "'s head!</span>" );
							break;
						case 2:
							thearea.WriteMsg( "<span class='notice'>You begin preparing " + target + "'s mind as a blank slate...</span>" );
							((Ent_Static)thearea).visible_message( "<span class='warning'>" + thearea + "'s palms flare a bright red against " + target + "'s temples!</span>" );
							target.WriteMsg( "<span class='danger'>A terrible red light floods your mind. You collapse as conscious thought is wiped away.</span>" );
							target.Weaken( 12 );
							Task13.Sleep( 20 );

							if ( GlobalFuncs.isloyal( target ) ) {
								thearea.WriteMsg( "<span class='notice'>They are enslaved by Nanotrasen. You begin to shut down the nanobot implant - this will take some time.</span>" );
								((Ent_Static)thearea).visible_message( "<span class='warning'>" + thearea + " pauses, then dips their head in concentration!</span>" );
								target.WriteMsg( "<span class='boldannounce'>You feel your loyalties begin to weaken!</span>" );
								Task13.Sleep( 100 );
								thearea.WriteMsg( "<span class='notice'>The nanobots composing the loyalty implant have been rendered inert. Now to continue.</span>" );
								((Ent_Static)thearea).visible_message( "<span class='warning'>" + thearea + " relaxes again.</span>" );

								foreach (dynamic _a in Lang13.Enumerate( target, typeof(Obj_Item_Weapon_Implant_Loyalty) )) {
									L = _a;
									

									if ( L != null && Lang13.Bool( L.implanted ) ) {
										GlobalFuncs.qdel( L );
									}
								}
								target.WriteMsg( "<span class='boldannounce'>Your unwavering loyalty to Nanotrasen unexpectedly falters, dims, dies.</span>" );
							}
							break;
						case 3:
							thearea.WriteMsg( "<span class='notice'>You begin planting the tumor that will control the new thrall...</span>" );
							((Ent_Static)thearea).visible_message( "<span class='warning'>A strange energy passes from " + thearea + "'s hands into " + target + "'s head!</span>" );
							target.WriteMsg( "<span class='boldannounce'>You feel your memories twisting, morphing. A sense of horror dominates your mind.</span>" );
							break;
					}

					if ( !GlobalFuncs.do_mob( thearea, target, 70 ) ) {
						thearea.WriteMsg( "<span class='warning'>The enthralling has been interrupted - your target's mind returns to its previous state.</span>" );
						target.WriteMsg( "<span class='userdanger'>You wrest yourself away from " + thearea + "'s hands and compose yourself</span>" );
						this.enthralling = false;
						return false;
					}
					progress++;
				}
				this.enthralling = false;
				thearea.WriteMsg( "<span class='shadowling'>You have enthralled <b>" + target.real_name + "</b>!</span>" );
				target.visible_message( "<span class='big'>" + target + " looks to have experienced a revelation!</span>", "<span class='warning'>False faces all d<b>ark not real not real not--</b></span>" );
				target.setOxyLoss( 0 );
				target.mind.special_role = "thrall";
				((GameMode)GlobalVars.ticker.mode).add_thrall( target.mind );
			}
			return false;
		}

	}

}
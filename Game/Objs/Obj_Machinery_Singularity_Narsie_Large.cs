// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Singularity_Narsie_Large : Obj_Machinery_Singularity_Narsie {

		public bool announce = true;
		public bool narnar = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.light_range = 1;
			this.light_color = "#FA8282";
			this.current_size = 12;
			this.consume_range = 12;
			this.icon_state = "narsie";
		}

		// Function from file: narsie.dm
		public Obj_Machinery_Singularity_Narsie_Large ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			dynamic mode_ticker = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.announce ) {
				GlobalFuncs.to_chat( typeof(Game13), "<font size='15' color='red'><b>" + String13.ToUpper( this.name ) + " HAS RISEN</b></font>" );
				Game13.WriteMsg( new Sound( "sound/effects/wind/wind_5_1.ogg" ) );
			}

			if ( !GlobalVars.narsie_cometh ) {
				
				if ( GlobalVars.ticker.mode is GameMode_Cult ) {
					mode_ticker = GlobalVars.ticker.mode;

					if ( mode_ticker.objectives[mode_ticker.current_objective] == "eldergod" ) {
						((GameMode_Cult)mode_ticker).third_phase();
					}
				}

				if ( GlobalVars.emergency_shuttle != null ) {
					GlobalVars.emergency_shuttle.incall();
					GlobalVars.emergency_shuttle.can_recall = false;
					GlobalVars.emergency_shuttle.settimeleft( 600 );
				}

				if ( this.narnar ) {
					GlobalFuncs.SetUniversalState( typeof(UniversalState_Hell) );
				}
				GlobalVars.narsie_cometh = true;
			}
			return;
		}

		// Function from file: narsie.dm
		public override void on_release(  ) {
			this.chained = false;
			this.move_self = true;
			this.icon_state = "narsie";
			return;
		}

		// Function from file: narsie.dm
		public override void on_capture(  ) {
			dynamic M = null;

			this.chained = true;
			this.move_self = false;
			this.icon_state = "narsie-chains";

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				

				if ( Lang13.Bool( M.client ) ) {
					((Mob)M).see_narsie( this );
				}
			}
			return;
		}

		// Function from file: narsie.dm
		public override bool consume( dynamic A = null ) {
			dynamic M = null;
			dynamic O = null;
			int dist = 0;
			Ent_Dynamic AM = null;
			dynamic T = null;
			dynamic C2 = null;
			dynamic B = null;
			int dist2 = 0;
			Ent_Dynamic AM2 = null;
			dynamic T2 = null;

			
			if ( GlobalVars.narsie_behaviour == "CultStation13" ) {
				
				if ( A is Mob && Map13.GetDistance( A, this ) <= 7 ) {
					M = A;

					if ( Lang13.Bool( M.flags & 128 ) ) {
						return false;
					}
					M.cultify();
					GlobalVars.stat_collection.cult.narsie_corpses_fed++;
				} else if ( A is Obj ) {
					O = A;
					O.cultify();
				} else if ( A is Tile ) {
					dist = Map13.GetDistance( A, this );

					foreach (dynamic _a in Lang13.Enumerate( A.contents, typeof(Ent_Dynamic) )) {
						AM = _a;
						

						if ( dist <= this.consume_range ) {
							this.consume( AM );
							continue;
						}

						if ( dist > this.consume_range && this.canPull( AM ) ) {
							
							if ( 101 == AM.invisibility ) {
								continue;
							}
						}
					}

					if ( dist <= this.consume_range && !( A is Tile_Space ) ) {
						T = A;

						if ( T.holy ) {
							T.holy = false;
						}
						T.cultify();
					}
				}
			} else if ( GlobalVars.narsie_behaviour == "Nar-Singulo" ) {
				
				if ( !((Ent_Static)A).singuloCanEat() ) {
					return false;
				}

				if ( A is Mob_Living ) {
					C2 = A;

					if ( Lang13.Bool( C2.flags & 128 ) ) {
						return false;
					}
					((Mob)C2).dust();
				} else if ( A is Obj ) {
					
					if ( A is Obj_Machinery_Bot ) {
						B = A;

						if ( Lang13.Bool( B.flags & 128 ) ) {
							return false;
						}
					}
					GlobalFuncs.qdel( A );

					if ( Lang13.Bool( A ) ) {
						GlobalFuncs.qdel( A );
					}
				} else if ( A is Tile ) {
					dist2 = Map13.GetDistance( A, this );

					foreach (dynamic _b in Lang13.Enumerate( A.contents, typeof(Ent_Dynamic) )) {
						AM2 = _b;
						

						if ( AM2 == this ) {
							continue;
						}

						if ( dist2 <= this.consume_range ) {
							this.consume( AM2 );
							continue;
						}

						if ( dist2 > this.consume_range && this.canPull( AM2 ) ) {
							
							if ( !AM2.singuloCanEat() ) {
								continue;
							}

							if ( 101 == AM2.invisibility ) {
								continue;
							}
							Task13.Schedule( 0, (Task13.Closure)(() => {
								Map13.StepTowardsSimple( AM2, this );
								return;
							}));
						}
					}

					if ( dist2 <= this.consume_range && !Lang13.Bool( GlobalFuncs.get_base_turf( A.z ).IsInstanceOfType( A ) ) ) {
						T2 = A;
						((Tile)T2).ChangeTurf( GlobalFuncs.get_base_turf( T2.z ) );
					}
				}
			}
			return false;
		}

		// Function from file: narsie.dm
		public override bool move( bool? force_move = null ) {
			force_move = force_move ?? false;

			dynamic movement_dir = null;
			dynamic M = null;
			dynamic M2 = null;

			
			if ( !this.move_self ) {
				return false;
			}
			movement_dir = Rand13.PickFromTable( GlobalVars.alldirs - this.last_failed_movement );

			if ( force_move == true ) {
				movement_dir = force_move;
			}

			if ( Lang13.Bool( this.target ) && Rand13.PercentChance( 60 ) ) {
				movement_dir = Map13.GetDistance( this, this.target );
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				this.narsiefloor( GlobalFuncs.get_turf( this.loc ) );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list )) {
					M = _a;
					

					if ( Lang13.Bool( M.client ) ) {
						((Mob)M).see_narsie( this, movement_dir );
					}
				}
				return;
			}));
			Task13.Schedule( 10, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				this.narsiefloor( GlobalFuncs.get_turf( this.loc ) );

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list )) {
					M2 = _b;
					

					if ( Lang13.Bool( M2.client ) ) {
						((Mob)M2).see_narsie( this, movement_dir );
					}
				}
				return;
			}));
			return true;
		}

		// Function from file: narsie.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			
			if ( !this.narnar ) {
				return false;
			}

			if ( AM is Tile ) {
				this.narsiewall( AM );
			} else if ( AM is Obj_Structure_Cult ) {
				GlobalFuncs.qdel( AM );
			}
			return false;
		}

		// Function from file: narsie.dm
		public override dynamic Bump(Ent_Static Obstacle = null, dynamic yes = null) {
			
			if ( !this.narnar ) {
				return null;
			}

			if ( Obstacle is Tile ) {
				this.narsiewall( Obstacle );
			} else if ( Obstacle is Obj_Structure_Cult ) {
				GlobalFuncs.qdel( Obstacle );
			}
			return null;
		}

		// Function from file: narsie.dm
		public override void eat(  ) {
			dynamic A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, this.consume_range ) )) {
				A = _a;
				
				this.consume( A );
			}
			return;
		}

	}

}
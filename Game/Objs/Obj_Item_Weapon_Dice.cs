// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Dice : Obj_Item_Weapon {

		public int sides = 6;
		public int minsides = 1;
		public double result = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.icon = "icons/obj/dice.dmi";
			this.icon_state = "d6";
		}

		// Function from file: dice.dm
		public Obj_Item_Weapon_Dice ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.result = Rand13.Int( this.minsides, this.sides );
			this.update_icon();
			return;
		}

		// Function from file: dice.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;
			this.overlays.Add( "" + this.icon_state + this.result );
			return null;
		}

		// Function from file: dice.dm
		public virtual bool diceroll( dynamic user = null, bool thrown = false ) {
			string comment = null;

			this.result = Rand13.Int( this.minsides, this.sides );
			comment = "";

			if ( this.sides == 20 && this.result == 20 ) {
				comment = "Nat 20!";
			} else if ( this.sides == 20 && this.result == 1 ) {
				comment = "Ouch, bad luck.";
			}
			this.update_icon();

			if ( Lang13.Initial( this, "icon_state" ) == "d00" ) {
				this.result = ( this.result - 1 ) * 10;
			}

			if ( !thrown ) {
				((Ent_Static)user).visible_message( "<span class='notice'>" + user + " has thrown " + this + ". It lands on " + this.result + ". " + comment + "</span>", "<span class='notice'>You throw " + this + ". It lands on " + this.result + ". " + comment + "</span>", "<span class='notice'>You hear " + this + " landing on " + this.result + ". " + comment + "</span>" );
			} else if ( this.throwing == 0 ) {
				this.visible_message( "<span class='notice'>" + this + " rolls to a stop, landing on " + this.result + ". " + comment + "</span>" );
			}
			return false;
		}

		// Function from file: dice.dm
		public override dynamic throw_impact( dynamic hit_atom = null, dynamic speed = null, Mob user = null ) {
			base.throw_impact( (object)(hit_atom), (object)(speed), user );
			this.diceroll( user, true );
			return null;
		}

		// Function from file: dice.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.diceroll( user, false );
			return null;
		}

	}

}
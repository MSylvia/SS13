// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Swarmer_Destructible : Obj_Effect_Swarmer {

		public double health = 30;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 1;
		}

		public Obj_Effect_Swarmer_Destructible ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: swarmer.dm
		public override bool attack_animal( Mob_Living user = null ) {
			Mob_Living S = null;

			
			if ( user is Mob_Living_SimpleAnimal ) {
				S = user;
				S.do_attack_animation( this );
				user.changeNext_move( 8 );

				if ( ((dynamic)S).melee_damage_type == "brute" || ((dynamic)S).melee_damage_type == "fire" ) {
					this.TakeDamage( Rand13.Int( Convert.ToInt32( ((dynamic)S).melee_damage_lower ), Convert.ToInt32( ((dynamic)S).melee_damage_upper ) ) );
				}
			}
			return false;
		}

		// Function from file: swarmer.dm
		public override double emp_act( int severity = 0 ) {
			GlobalFuncs.qdel( this );
			return 0;
		}

		// Function from file: swarmer.dm
		public override bool blob_act( dynamic severity = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: swarmer.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: swarmer.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon ) {
				((Mob)user).changeNext_move( 8 );
				((Ent_Dynamic)user).do_attack_animation( this );
				this.TakeDamage( A.force );
			}
			return null;
		}

		// Function from file: swarmer.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( Lang13.Bool( P.damage ) ) {
				
				if ( P.damage_type == "brute" || P.damage_type == "fire" ) {
					this.TakeDamage( P.damage );
				}
			}
			base.bullet_act( (object)(P), (object)(def_zone) );
			return null;
		}

		// Function from file: swarmer.dm
		public void TakeDamage( dynamic damage = null ) {
			this.health -= Convert.ToDouble( damage );

			if ( this.health <= 0 ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

	}

}
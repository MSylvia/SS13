// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Atmospherics_Unary : Obj_Machinery_Atmospherics {

		public GasMixture air_contents = null;
		public Obj_Machinery_Atmospherics node = null;
		public Game_Data network = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.initialize_directions = 2;
			this.layer = 2.45;
		}

		// Function from file: unary_base.dm
		public Obj_Machinery_Atmospherics_Unary ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.initialize_directions = this.dir;
			this.air_contents = new GasMixture();
			this.air_contents.temperature = 273.41;
			this.air_contents.volume = this.starting_volume;
			return;
		}

		// Function from file: unary_base.dm
		public override void unassign_network( PipeNetwork reference = null ) {
			
			if ( this.network == reference ) {
				this.network = null;
			}
			return;
		}

		// Function from file: unary_base.dm
		public override dynamic disconnect( Obj_Machinery_Atmospherics reference = null ) {
			
			if ( reference == this.node ) {
				
				if ( this.network != null ) {
					GlobalFuncs.returnToPool( this.network );
				}
				this.node = null;
			}
			return null;
		}

		// Function from file: unary_base.dm
		public override ByTable return_network_air( PipeNetwork reference = null ) {
			ByTable results = null;

			results = new ByTable();

			if ( this.network == reference ) {
				results.Add( this.air_contents );
			}
			return results;
		}

		// Function from file: unary_base.dm
		public override bool reassign_network( Game_Data old_network = null, PipeNetwork new_network = null ) {
			
			if ( this.network == old_network ) {
				this.network = new_network;
			}
			return true;
		}

		// Function from file: unary_base.dm
		public override dynamic return_network( Obj reference = null ) {
			this.build_network();

			if ( reference == this.node || reference == this ) {
				return this.network;
			}
			return null;
		}

		// Function from file: unary_base.dm
		public override dynamic build_network(  ) {
			
			if ( !( this.network != null ) && this.node != null ) {
				this.network = GlobalFuncs.getFromPool( typeof(PipeNetwork) );
				((dynamic)this.network).normal_members += this;
				((dynamic)this.network).build_network( this.node, this );
			}
			return null;
		}

		// Function from file: unary_base.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			int node_connect = 0;
			Obj_Machinery_Atmospherics target = null;

			
			if ( this.node != null ) {
				return false;
			}
			node_connect = this.dir;

			foreach (dynamic _a in Lang13.Enumerate( Map13.GetStep( this, node_connect ), typeof(Obj_Machinery_Atmospherics) )) {
				target = _a;
				

				if ( ( ((int)( target.initialize_directions ??0 )) & Map13.GetDistance( target, this ) ) != 0 ) {
					
					if ( target.piping_layer == this.piping_layer || ( target.pipe_flags & 2 ) != 0 ) {
						this.node = target;
						break;
					}
				}
			}
			this.update_icon();
			return false;
		}

		// Function from file: unary_base.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.node != null ) {
				this.node.disconnect( this );

				if ( this.network != null ) {
					GlobalFuncs.returnToPool( this.network );
				}
			}
			this.node = null;
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: unary_base.dm
		public override dynamic network_expand( PipeNetwork new_network = null, Obj_Machinery_Atmospherics reference = null ) {
			
			if ( reference == this.node ) {
				this.network = new_network;
			}

			if ( new_network.normal_members.Find( this ) != 0 ) {
				return 0;
			}
			new_network.normal_members.Add( this );
			return null;
		}

		// Function from file: unary_base.dm
		public override bool? buildFrom( Mob usr = null, Obj_Item_Pipe pipe = null ) {
			Ent_Static T = null;

			this.dir = pipe.dir;
			this.initialize_directions = pipe.get_pipe_dir();

			if ( Lang13.Bool( pipe.pipename ) ) {
				this.name = pipe.pipename;
			}
			T = this.loc;
			this.level = ( Lang13.Bool( ((dynamic)T).intact ) ? 2 : 1 );
			this.initialize();
			this.build_network();

			if ( this.node != null ) {
				this.node.initialize();
				this.node.build_network();
			}
			return true;
		}

		// Function from file: unary_base.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			target = new ByTable(new object [] { this.node });
			base.update_icon( (object)(location), (object)(target) );
			return null;
		}

	}

}
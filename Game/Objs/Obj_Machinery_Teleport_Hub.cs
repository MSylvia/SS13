// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Teleport_Hub : Obj_Machinery_Teleport {

		public bool accurate = false;
		public bool opened = false;
		public bool engaged = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.idle_power_usage = 10;
			this.active_power_usage = 2000;
			this.machine_flags = 6;
			this.icon_state = "tele0";
		}

		// Function from file: teleporter.dm
		public Obj_Machinery_Teleport_Hub ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Telehub(), 
				new Obj_Item_Weapon_StockParts_ScanningModule_Adv_Phasic(), 
				new Obj_Item_Weapon_StockParts_ScanningModule_Adv_Phasic(), 
				new Obj_Item_Weapon_StockParts_Capacitor_Adv_Super(), 
				new Obj_Item_Weapon_StockParts_Capacitor_Adv_Super(), 
				new Obj_Item_Weapon_StockParts_Capacitor_Adv_Super(), 
				new Obj_Item_Weapon_StockParts_Subspace_Ansible(), 
				new Obj_Item_Weapon_StockParts_Subspace_Ansible(), 
				new Obj_Item_Weapon_StockParts_Subspace_Filter(), 
				new Obj_Item_Weapon_StockParts_Subspace_Filter(), 
				new Obj_Item_Weapon_StockParts_Subspace_Treatment(), 
				new Obj_Item_Weapon_StockParts_Subspace_Crystal(), 
				new Obj_Item_Weapon_StockParts_Subspace_Crystal(), 
				new Obj_Item_Weapon_StockParts_Subspace_Transmitter(), 
				new Obj_Item_Weapon_StockParts_Subspace_Transmitter(), 
				new Obj_Item_Weapon_StockParts_Subspace_Transmitter(), 
				new Obj_Item_Weapon_StockParts_Subspace_Transmitter()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: teleporter.dm
		public void teleport( Ent_Dynamic M = null ) {
			Ent_Static l = null;
			dynamic com = null;
			dynamic O = null;
			Effect_Effect_System_SparkSpread s = null;
			dynamic B = null;

			l = this.loc;
			com = Lang13.FindIn( typeof(Obj_Machinery_Computer_Teleporter), Map13.GetTile( l.x - 2, l.y, l.z ) );

			if ( !Lang13.Bool( com ) ) {
				return;
			}

			if ( !Lang13.Bool( com.locked ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
					O = _a;
					
					O.show_message( "<span class='warning'>Failure: Cannot authenticate locked on coordinates. Please reinstate coordinate matrix.</span>" );
				}
				return;
			}

			if ( M is Ent_Dynamic ) {
				
				if ( Rand13.PercentChance( 5 ) && !this.accurate ) {
					GlobalFuncs.do_teleport( M, Map13.GetTile( Rand13.Int( 14, Game13.map_size_x - 14 ), Rand13.Int( 14, Game13.map_size_y - 14 ), 3 ), 2 );
				} else {
					GlobalFuncs.do_teleport( M, com.locked );
				}

				if ( com.one_time_use ) {
					com.one_time_use = false;
					com.locked = null;
				}
			} else {
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 5, 1, this );
				s.start();

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
					B = _b;
					
					B.show_message( "<span class='notice'>Test fire completed.</span>" );
				}
			}
			return;
		}

		// Function from file: teleporter.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic B = null;

			
			if ( O == this ) {
				return null;
			}

			if ( O is Obj_Item_Projectile_Beam ) {
				B = O;
				((dynamic)B).wait = 1;
			}

			if ( O is Obj_Effect_Beam ) {
				this.Bump( O );
				return null;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				if ( this.engaged ) {
					this.teleport( O );
					this.f_use_power( 5000 );
				}
				return;
			}));
			return null;
		}

		// Function from file: teleporter.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return base.attackby( (object)(a), (object)(b), (object)(c) );
		}

		// Function from file: observer.dm
		public override dynamic attack_ghost( Mob_Dead_Observer user = null ) {
			Ent_Static l = null;
			dynamic com = null;

			l = this.loc;
			com = Lang13.FindIn( typeof(Obj_Machinery_Computer_Teleporter), Map13.GetTile( l.x - 2, l.y, l.z ) );

			if ( Lang13.Bool( com.locked ) ) {
				user.loc = GlobalFuncs.get_turf( com.locked );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_AnnouncementSystem : Obj_Machinery {

		public Obj_Item_Device_Radio_Headset_Ai radio = null;
		public bool broken = false;
		public string arrival = "%PERSON has signed up as %RANK";
		public bool arrivalToggle = true;
		public string newhead = "%PERSON, %RANK, is the department head.";
		public bool newheadToggle = true;
		public string greenlight = "Light_Green";
		public string pinklight = "Light_Pink";
		public string errorlight = "Error_Red";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.verb_say = "coldly states";
			this.verb_ask = "queries";
			this.verb_exclaim = "alarms";
			this.idle_power_usage = 20;
			this.active_power_usage = 50;
			this.icon = "icons/obj/machines/telecomms.dmi";
			this.icon_state = "AAS_On";
		}

		// Function from file: announcement_system.dm
		public Obj_Machinery_AnnouncementSystem ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.announcement_systems.Add( this );
			this.radio = new Obj_Item_Device_Radio_Headset_Ai( this );
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_AnnouncementSystem( null ) );
			this.component_parts.Add( new Obj_Item_Stack_CableCoil( null, 2 ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_ConsoleScreen( null ) );
			this.RefreshParts();
			this.update_icon();
			return;
		}

		// Function from file: announcement_system.dm
		public override bool emag_act( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.emagged ) ) {
				this.emagged = 1;
				this.act_up();
			}
			return false;
		}

		// Function from file: announcement_system.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( !( ( this.stat & 3 ) != 0 ) ) {
				this.act_up();
			}
			base.emp_act( severity );
			return 0;
		}

		// Function from file: announcement_system.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( !( user is Mob_Living_Silicon_Ai ) ) {
				return null;
			}

			if ( this.broken ) {
				user.WriteMsg( "<span class='warning'>" + this + "'s firmware appears to be malfunctioning!</span>" );
				return null;
			}
			this.interact( user );
			return null;
		}

		// Function from file: announcement_system.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			string NewMessage = null;
			string NewMessage2 = null;

			
			if ( this.broken ) {
				this.visible_message( "<span class='warning'>" + this + " buzzes.</span>", "<span class='italics'>You hear a faint buzz.</span>" );
				GlobalFuncs.playsound( this.loc, "sound/machines/buzz-two.ogg", 50, 1 );
				return null;
			}

			if ( Lang13.Bool( href_list["ArrivalTopic"] ) ) {
				NewMessage = GlobalFuncs.stripped_input( Task13.User, "Enter in the arrivals announcement configuration.", "Arrivals Announcement Config", this.arrival );

				if ( !( Map13.GetDistance( this, Task13.User ) <= 1 ) && this.loc != Task13.User && !( Task13.User is Mob_Living_Silicon_Ai ) ) {
					return null;
				}

				if ( Lang13.Bool( NewMessage ) ) {
					this.arrival = NewMessage;
				}
			} else if ( Lang13.Bool( href_list["NewheadTopic"] ) ) {
				NewMessage2 = GlobalFuncs.stripped_input( Task13.User, "Enter in the departmental head announcement configuration.", "Head Departmental Announcement Config", this.newhead );

				if ( !( Map13.GetDistance( this, Task13.User ) <= 1 ) && this.loc != Task13.User && !( Task13.User is Mob_Living_Silicon_Ai ) ) {
					return null;
				}

				if ( Lang13.Bool( NewMessage2 ) ) {
					this.newhead = NewMessage2;
				}
			} else if ( Lang13.Bool( href_list["NewheadT-Topic"] ) ) {
				this.newheadToggle = !this.newheadToggle;
				this.update_icon();
			} else if ( Lang13.Bool( href_list["ArrivalT-Topic"] ) ) {
				this.arrivalToggle = !this.arrivalToggle;
				this.update_icon();
			}
			this.add_fingerprint( Task13.User );
			this.interact( Task13.User );
			return null;
		}

		// Function from file: announcement_system.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string contents = null;
			Browser popup = null;

			
			if ( this.broken ) {
				this.visible_message( "<span class='warning'>" + this + " buzzes.</span>", "<span class='italics'>You hear a faint buzz.</span>" );
				GlobalFuncs.playsound( this.loc, "sound/machines/buzz-two.ogg", 50, 1 );
				return null;
			}
			contents = new Txt( "Arrival Announcement:  <A href='?src=" ).Ref( this ).str( ";ArrivalT-Topic=1'>(" ).item( ( this.arrivalToggle ? "On" : "Off" ) ).str( ")</a><br>\n<A href='?src=" ).Ref( this ).str( ";ArrivalTopic=1'>" ).item( this.arrival ).str( "</a><br><br>\n" ).ToString();
			contents += new Txt( "Departmental Head Announcement:  <A href='?src=" ).Ref( this ).str( ";NewheadT-Topic=1'>(" ).item( ( this.newheadToggle ? "On" : "Off" ) ).str( ")</a><br>\n<A href='?src=" ).Ref( this ).str( ";NewheadTopic=1'>" ).item( this.newhead ).str( "</a><br><br>\n" ).ToString();
			popup = new Browser( user, "announcement_config", "Automated Announcement Configuration", 370, 220 );
			popup.set_content( contents );
			popup.open();
			return null;
		}

		// Function from file: announcement_system.dm
		public void act_up(  ) {
			this.broken = true;
			this.update_icon();
			this.arrival = Rand13.Pick(new object [] { "#!@%ERR-34%2 CANNOT LOCAT@# JO# F*LE!", "CRITICAL ERROR 99.", "ERR)#: DA#AB@#E NOT F(*ND!" });
			this.newhead = Rand13.Pick(new object [] { "OV#RL()D: [UNKNOWN??] DET*#CT)D!", "ER)#R - B*@ TEXT F*O(ND!", "AAS.exe is not responding. NanoOS is searching for a solution to the problem." });
			return;
		}

		// Function from file: announcement_system.dm
		public void announce( string message_type = null, dynamic user = null, dynamic rank = null, ByTable channels = null ) {
			dynamic message = null;
			dynamic channel = null;

			
			if ( !this.is_operational() ) {
				return;
			}

			if ( message_type == "ARRIVAL" && this.arrivalToggle ) {
				message = this.CompileText( this.arrival, user, rank );
			} else if ( message_type == "NEWHEAD" && this.newheadToggle ) {
				message = this.CompileText( this.newhead, user, rank );
			}

			if ( channels.len == 0 ) {
				this.radio.talk_into( this, message, null, new ByTable(new object [] { "robot" }) );
			} else {
				
				foreach (dynamic _a in Lang13.Enumerate( channels )) {
					channel = _a;
					
					this.radio.talk_into( this, message, channel, new ByTable(new object [] { "robot" }) );
				}
			}
			return;
		}

		// Function from file: announcement_system.dm
		public dynamic CompileText( dynamic str = null, dynamic user = null, dynamic rank = null ) {
			str = GlobalFuncs.replacetext( str, "%PERSON", "" + user );
			str = GlobalFuncs.replacetext( str, "%RANK", "" + rank );
			return str;
		}

		// Function from file: announcement_system.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( !Lang13.Bool( this.panel_open ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
					user.WriteMsg( "<span class='notice'>You open the maintenance hatch of " + this + ".</span>" );
					this.panel_open = 1;
				} else {
					GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
					user.WriteMsg( "<span class='notice'>You close the maintenance hatch of " + this + ".</span>" );
					this.panel_open = 0;
				}
				this.update_icon();
				return null;
			}

			if ( Lang13.Bool( this.panel_open ) ) {
				this.default_deconstruction_crowbar( A );

				if ( A is Obj_Item_Device_Multitool && this.broken ) {
					user.WriteMsg( "<span class='notice'>You reset " + this + "'s firmware.</span>" );
					this.broken = false;
					this.update_icon();
					return null;
				}
			}
			return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
		}

		// Function from file: announcement_system.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

		// Function from file: announcement_system.dm
		public override dynamic Destroy(  ) {
			GlobalVars.announcement_systems.Remove( this );
			return base.Destroy();
		}

		// Function from file: announcement_system.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.is_operational() ) {
				this.icon_state = ( Lang13.Bool( this.panel_open ) ? "AAS_On_Open" : "AAS_On" );
			} else {
				this.icon_state = ( Lang13.Bool( this.panel_open ) ? "AAS_Off_Open" : "AAS_Off" );
			}
			this.overlays.Cut();

			if ( this.arrivalToggle ) {
				this.overlays.Or( this.greenlight );
			} else {
				this.overlays.Remove( this.greenlight );
			}

			if ( this.newheadToggle ) {
				this.overlays.Or( this.pinklight );
			} else {
				this.overlays.Remove( this.pinklight );
			}

			if ( this.broken ) {
				this.overlays.Or( this.errorlight );
			} else {
				this.overlays.Remove( this.errorlight );
			}
			return false;
		}

	}

}
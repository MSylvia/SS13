// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_SilicateSprayer_Advanced : Obj_Item_Device_SilicateSprayer {

		public bool mode = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.max_silicate = 100;
			this.silicate_per_state = 10;
			this.origin_tech = "materials=3;engineering=4";
			this.icon_state = "silicate sprayer advanced";
		}

		public Obj_Item_Device_SilicateSprayer_Advanced ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: silicate sprayer.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			dynamic W = null;
			dynamic initial_health = null;
			double extra_health = 0;
			int repair_amt = 0;

			
			if ( Map13.GetDistance( target, user ) > 1 ) {
				return false;
			}

			if ( !( target is Obj_Structure_Window ) ) {
				return false;
			}

			if ( !this.get_amount() ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is out of silicate!</span>" ).ToString() );
				return true;
			}
			W = target;
			initial_health = Lang13.Initial( W, "health" );

			if ( !this.mode || Convert.ToDouble( W.health ) < Convert.ToDouble( initial_health ) ) {
				return base.preattack( (object)(target), (object)(user), proximity_flag, (object)(click_parameters) );
			}
			extra_health = Convert.ToDouble( W.health - initial_health );

			if ( Convert.ToDouble( W.health ) >= Convert.ToDouble( initial_health * 2 ) ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You can't reinforce " ).the( W ).item().str( " any further!</span>" ).ToString() );
				return true;
			}
			repair_amt = Num13.MinInt( ((int)( ( this.get_amount() ?1:0) / 0.1 )), Convert.ToInt32( initial_health * 2 - ( initial_health + extra_health ) ) );
			W.health += repair_amt;
			((Obj_Structure_Window)W).healthcheck( user, GlobalVars.FALSE );
			((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " reinforced " ).the( W ).item().str( " with their " ).item( this.name ).str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You reinforce " ).the( W ).item().str( " with your " ).item( this.name ).str( ".</span>" ).ToString() );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/refill.ogg", 10, 1, -6 );
			this.remove_silicate( repair_amt * 0.1 );
			return true;
		}

		// Function from file: silicate sprayer.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic _default = null;

			_default = base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='notice'>It is set to " + ( this.mode ? "reinforce" : "repair" ) + " windows.</span>" );
			return _default;
		}

		// Function from file: silicate sprayer.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			bool? _default = null;

			_default = base.update_icon( (object)(location), (object)(target) );

			if ( this.mode ) {
				this.overlays.Add( "silicate sprayer reinforce" );
			}
			return _default;
		}

		// Function from file: silicate sprayer.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.mode = !this.mode;
			GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is now set to " ).item( ( this.mode ? "reinforce" : "repair" ) ).str( " windows.</span>" ).ToString() );
			this.update_icon();
			return 1;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_CameraAssembly : Obj_Item_Weapon {

		public ByTable possible_upgrades = new ByTable(new object [] { 
											typeof(Obj_Item_Device_Assembly_ProxSensor), 
											typeof(Obj_Item_Stack_Sheet_Mineral_Plasma), 
											typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Carrot), 
											typeof(Obj_Item_Device_Assembly_Voice)
										 });
		public ByTable upgrades = new ByTable();
		public int state = 0;
		public bool busy = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.starting_materials = new ByTable().Set( "$iron", 700 ).Set( "$glass", 300 );
			this.w_type = 5;
			this.melt_temperature = 1783.1500244140625;
			this.icon = "icons/obj/monitors.dmi";
			this.icon_state = "cameracase";
		}

		public Obj_Item_Weapon_CameraAssembly ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: camera_assembly.dm
		public bool weld( dynamic WT = null, dynamic user = null ) {
			
			if ( this.busy ) {
				return false;
			}

			if ( !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
				return false;
			}
			GlobalFuncs.to_chat( user, "<span class='notice'>You start to weld the " + this + "...</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder.ogg", 50, 1 );
			((Obj_Item_Weapon_Weldingtool)WT).eyecheck( user );
			this.busy = true;

			if ( GlobalFuncs.do_after( user, this, 20 ) ) {
				this.busy = false;

				if ( !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
					return false;
				}
				return true;
			}
			this.busy = false;
			return false;
		}

		// Function from file: camera_assembly.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !Lang13.Bool( this.anchored ) ) {
				base.attack_hand( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: camera_assembly.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				this.icon_state = "camera1";
			} else {
				this.icon_state = "cameracase";
			}
			return null;
		}

		// Function from file: camera_assembly.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			string input = null;
			ByTable tempnetwork = null;
			Obj_Machinery_Camera C2 = null;
			int? i = null;
			dynamic direct = null;
			string confirm = null;
			dynamic s = null;
			dynamic U = null;

			
			switch ((int)( this.state )) {
				case 0:
					
					if ( a is Obj_Item_Weapon_Wrench && this.loc is Tile ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 50, 1 );
						GlobalFuncs.to_chat( b, "You wrench the assembly into place." );
						this.anchored = 1;
						this.state = 1;
						this.update_icon();
						this.auto_turn();
						return null;
					}
					break;
				case 1:
					
					if ( a is Obj_Item_Weapon_Weldingtool ) {
						
						if ( this.weld( a, b ) ) {
							GlobalFuncs.to_chat( b, "You weld the assembly securely into place." );
							this.anchored = 1;
							this.state = 2;
						}
						return null;
					} else if ( a is Obj_Item_Weapon_Wrench ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Ratchet.ogg", 50, 1 );
						GlobalFuncs.to_chat( b, "You unattach the assembly from it's place." );
						this.anchored = 0;
						this.update_icon();
						this.state = 0;
						return null;
					}
					break;
				case 2:
					
					if ( a is Obj_Item_Stack_CableCoil ) {
						C = a;

						if ( ((Obj_Item_Stack)C).use( 2 ) ) {
							GlobalFuncs.to_chat( b, "You add wires to the assembly." );
							this.state = 3;
						}
						return null;
					} else if ( a is Obj_Item_Weapon_Weldingtool ) {
						
						if ( this.weld( a, b ) ) {
							GlobalFuncs.to_chat( b, "You unweld the assembly from it's place." );
							this.state = 1;
							this.anchored = 1;
						}
						return null;
					}
					break;
				case 3:
					
					if ( a is Obj_Item_Weapon_Screwdriver ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
						input = GlobalFuncs.strip_html( Interface13.Input( Task13.User, "Which networks would you like to connect this camera to? seperate networks with a comma. No Spaces!\nFor example: SS13,Security,Secret ", "Set Network", "SS13", null, InputType.Any ) );

						if ( !Lang13.Bool( input ) ) {
							GlobalFuncs.to_chat( Task13.User, "No input found, please hang up and try your call again." );
							return null;
						}
						tempnetwork = GlobalFuncs.text2list( input, "," );

						if ( tempnetwork.len < 1 ) {
							GlobalFuncs.to_chat( Task13.User, "No network found, please hang up and try your call again." );
							return null;
						}
						this.state = 4;
						C2 = new Obj_Machinery_Camera( this.loc );
						this.loc = C2;
						C2.assembly = this;
						C2.auto_turn();
						C2.network = tempnetwork;
						C2.c_tag = "" + GlobalFuncs.get_area_name( this ) + " (" + Rand13.Int( 1, 999 );
						i = null;
						i = 5;

						while (( i ??0) >= 0) {
							direct = Interface13.Input( b, "Direction?", "Assembling Camera", null, new ByTable(new object [] { "LEAVE IT", "NORTH", "EAST", "SOUTH", "WEST" }), InputType.Any );

							if ( direct != "LEAVE IT" ) {
								C2.dir = GlobalFuncs.text2dir( direct );
							}

							if ( i != 0 ) {
								confirm = Interface13.Alert( b, "Is this what you want? Chances Remaining: " + i, "Confirmation", "Yes", "No" );

								if ( confirm == "Yes" ) {
									break;
								}
							}
							i -= 1;
						}
						return null;
					} else if ( a is Obj_Item_Weapon_Wirecutters ) {
						new Obj_Item_Stack_CableCoil( GlobalFuncs.get_turf( this ), 2 );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Wirecutter.ogg", 50, 1 );
						GlobalFuncs.to_chat( b, "You cut the wires from the circuits." );
						this.state = 2;
						return null;
					}
					break;
			}

			if ( GlobalFuncs.is_type_in_list( a, this.possible_upgrades ) ) {
				
				if ( GlobalFuncs.is_type_in_list( a, this.upgrades ) ) {
					GlobalFuncs.to_chat( b, new Txt( "The assembly already has " ).a( a ).item().str( " inside!" ).ToString() );
					return null;
				}

				if ( a is Obj_Item_Stack ) {
					s = a;
					((Obj_Item_Stack)s).use( 1 );
					this.upgrades.Add( new Obj_Item_Stack_Sheet_Mineral_Plasma() );
				} else {
					
					if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
						return null;
					}
					this.upgrades.Add( a );
				}
				GlobalFuncs.to_chat( b, "You attach the " + a + " into the assembly inner circuits." );
				return null;
			} else if ( a is Obj_Item_Weapon_Crowbar && this.upgrades.len != 0 ) {
				U = Lang13.FindIn( typeof(Obj), this.upgrades );

				if ( Lang13.Bool( U ) ) {
					GlobalFuncs.to_chat( b, new Txt( "You unattach " ).the( U ).item().str( " from the assembly." ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
					U.loc = GlobalFuncs.get_turf( this );
					this.upgrades.Remove( U );
				}
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

	}

}
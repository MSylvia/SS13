// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Closet_Crate_Large : Obj_Structure_Closet_Crate {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.material_drop = typeof(Obj_Item_Stack_Sheet_Mineral_Wood);
			this.icon_state = "largecrate";
		}

		public Obj_Structure_Closet_Crate_Large ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: large.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic T = null;
			double i = 0;
			Ent_Dynamic AM = null;

			
			if ( A is Obj_Item_Weapon_Crowbar ) {
				T = GlobalFuncs.get_turf( this );

				if ( this.manifest != null ) {
					this.tear_manifest( user );
				}
				((Ent_Static)user).visible_message( new Txt().item( user ).str( " pries " ).the( this ).item().str( " open." ).ToString(), new Txt( "<span class='notice'>You pry open " ).the( this ).item().str( ".</span>" ).ToString(), "<span class='italics'>You hear splitting wood.</span>" );
				GlobalFuncs.playsound( this.loc, "sound/weapons/slashmiss.ogg", 75, 1 );

				foreach (dynamic _a in Lang13.IterateRange( 1, Rand13.Int( 2, 5 ) )) {
					i = _a;
					
					Lang13.Call( this.material_drop, this );
				}

				foreach (dynamic _b in Lang13.Enumerate( this.contents, typeof(Ent_Dynamic) )) {
					AM = _b;
					
					AM.forceMove( T );
				}
				GlobalFuncs.qdel( this );
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: large.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			this.add_fingerprint( a );

			if ( this.manifest != null ) {
				this.tear_manifest( a );
			} else {
				a.WriteMsg( "<span class='warning'>You need a crowbar to pry this open!</span>" );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Tile_Plasteel : Obj_Item_Stack_Tile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "floor tile";
			this.force = 6;
			this.starting_materials = new ByTable().Set( "$iron", 937.5 );
			this.w_type = 4;
			this.melt_temperature = 1783.1500244140625;
			this.throwforce = 15;
			this.throw_speed = 5;
			this.throw_range = 20;
			this.max_amount = 60;
			this.material = "metal";
			this.icon_state = "tile";
		}

		// Function from file: plasteel.dm
		public Obj_Item_Stack_Tile_Plasteel ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.pixel_x = Rand13.Int( 1, 14 );
			this.pixel_y = Rand13.Int( 1, 14 );
			return;
		}

		// Function from file: plasteel.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic T = null;
			dynamic L = null;
			Obj_Item_Stack_Tile_Plasteel S = null;

			
			if ( flag == true ) {
				
				if ( A is Tile || A is Obj_Structure_Lattice ) {
					T = GlobalFuncs.get_turf( A );
					S = this;

					switch ((int)( ((Tile)T).canBuildPlating() )) {
						case 1:
							L = Lang13.FindIn( typeof(Obj_Structure_Lattice), T );

							if ( !( L is Obj_Structure_Lattice ) ) {
								return false;
							}
							GlobalFuncs.qdel( L );
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/Genhit.ogg", 50, 1 );
							S.build( T );
							S.use( 1 );
							return false;
							break;
						case 2:
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/Genhit.ogg", 50, 1 );
							S.build( T );
							S.use( 1 );
							break;
						case 0:
							GlobalFuncs.to_chat( user, "<span class='warning'>The plating is going to need some support.</span>" );
							return false;
							break;
					}
				}
			}
			return false;
		}

		// Function from file: plasteel.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic WT = null;
			Game_Data M = null;
			Obj_Item_Stack_Tile_Plasteel R = null;
			bool replace = false;

			
			if ( a is Obj_Item_Weapon_Weldingtool ) {
				WT = a;

				if ( ( this.amount ??0) < 4 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You need at least four tiles to do this.</span>" );
					return null;
				}

				if ( Lang13.Bool( WT.remove_fuel( 0, b ) ) ) {
					M = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( Task13.User ) );
					((dynamic)M).amount = 1;
					((dynamic)M).add_to_stacks( Task13.User );
					((Ent_Static)b).visible_message( "<span class='warning'>" + this + " is shaped into metal by " + b.name + " with the weldingtool.</span>", "<span class='warning'>You shape the " + this + " into metal with the weldingtool.</span>", "<span class='warning'>You hear welding.</span>" );
					R = this;
					Task13.Source = null;
					replace = ((Mob)b).get_inactive_hand() == R;
					R.use( 4 );

					if ( !( R != null ) && replace ) {
						((Mob)b).put_in_hands( M );
					}
				}
				return 1;
			}
			return base.attackby( (object)(a), (object)(b), (object)(c) );
		}

		// Function from file: plasteel.dm
		public void build( dynamic S = null ) {
			
			if ( S is Tile_Space || S is Tile_Unsimulated ) {
				((Tile)S).ChangeTurf( typeof(Tile_Simulated_Floor_Plating_Airless) );
			} else {
				((Tile)S).ChangeTurf( typeof(Tile_Simulated_Floor_Plating) );
			}
			return;
		}

	}

}
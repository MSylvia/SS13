// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_AmShielding : Obj_Machinery {

		public Obj_Machinery_Power_AmControlUnit control_unit = null;
		public bool processing = false;
		public double stability = 100;
		public bool efficiency = true;
		public int coredirs = 0;
		public int dirs = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.use_power = 0;
			this.icon = "icons/obj/machines/new_ame.dmi";
			this.icon_state = "shield";
			this.dir = 1;
		}

		// Function from file: shielding.dm
		public Obj_Machinery_AmShielding ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.machines.Remove( this );
			GlobalVars.power_machines.Add( this );
			Task13.Schedule( 10, (Task13.Closure)(() => {
				this.controllerscan();
				return;
			}));
			return;
		}

		// Function from file: shielding.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !( a is Obj_Item ) || !Lang13.Bool( b ) ) {
				return null;
			}

			if ( Convert.ToDouble( a.force ) > 10 ) {
				this.stability -= Convert.ToDouble( a.force / 2 );
				this.check_stability();
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: shielding.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			dynamic direction = null;
			Tile T = null;
			Obj_Machinery machine = null;
			string prefix = null;
			int icondirs = 0;

			this.overlays.len = 0;
			this.coredirs = 0;
			this.dirs = 0;

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.alldirs )) {
				direction = _b;
				
				T = Map13.GetStep( this.loc, Convert.ToInt32( direction ) );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Machinery) )) {
					machine = _a;
					

					if ( machine is Obj_Machinery_AmShielding && ((dynamic)machine).control_unit == this.control_unit && Lang13.Bool( ((dynamic)machine).processing ) ) {
						this.coredirs |= Convert.ToInt32( direction );
					}
					Interface13.Stat( null, GlobalVars.cardinal.Contains( direction ) );

					if ( machine is Obj_Machinery_AmShielding && ((dynamic)machine).control_unit == this.control_unit && Lang13.Bool( ((dynamic)machine).processing ) ) {
						
						if ( machine is Obj_Machinery_AmShielding && ((dynamic)machine).control_unit == this.control_unit || machine is Obj_Machinery_Power_AmControlUnit && machine == this.control_unit ) {
							this.dirs |= Convert.ToInt32( direction );
						}
					}
				}
			}
			prefix = "";
			icondirs = this.dirs;

			if ( this.coredirs != 0 ) {
				prefix = "core";
			}
			this.icon_state = "" + prefix + "shield_" + icondirs;

			if ( this.core_check() ) {
				this.overlays.Add( "core" + ( this.control_unit != null && this.control_unit.active ) );

				if ( !this.processing ) {
					this.setup_core();
				}
			} else if ( this.processing ) {
				this.shutdown_core();
			}
			return null;
		}

		// Function from file: shielding.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj.flag != "bullet" ) {
				this.stability -= Convert.ToDouble( Proj.force / 2 );
			}
			return 0;
		}

		// Function from file: shielding.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					this.stability -= 80;
					break;
				case 2:
					this.stability -= 40;
					break;
				case 3:
					this.stability -= 20;
					break;
			}
			this.check_stability();
			return false;
		}

		// Function from file: shielding.dm
		public override bool blob_act( dynamic severity = null ) {
			this.stability -= 20;

			if ( Rand13.PercentChance( ((int)( 100 - this.stability )) ) ) {
				
				if ( Rand13.PercentChance( 10 ) ) {
					new Obj_Effect_Blob_Node( this.loc, 150 );
				} else {
					new Obj_Effect_Blob( this.loc );
				}
				GlobalFuncs.qdel( this );
				return false;
			}
			this.check_stability();
			return false;
		}

		// Function from file: shielding.dm
		public override dynamic emp_act( int severity = 0 ) {
			return 0;
		}

		// Function from file: shielding.dm
		public override dynamic process(  ) {
			dynamic _default = null;

			
			if ( !this.processing ) {
				_default = 26;
			}
			return _default;
		}

		// Function from file: shielding.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( air_group == true || height == 0 ) {
				return true;
			}
			return false;
		}

		// Function from file: shielding.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.control_unit != null ) {
				this.control_unit.remove_shielding( this );
			}

			if ( this.processing ) {
				this.shutdown_core();
			}
			this.visible_message( "<span class='warning'>The " + this.name + " melts!</span>" );
			GlobalVars.power_machines.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: shielding.dm
		public void recalc_efficiency( dynamic new_efficiency = null ) {
			
			if ( !( this.control_unit != null ) || !this.processing ) {
				return;
			}

			if ( this.stability < 50 ) {
				new_efficiency /= 2;
			}
			this.control_unit.reported_core_efficiency += Convert.ToDouble( new_efficiency - this.efficiency );
			this.efficiency = Lang13.Bool( new_efficiency );
			return;
		}

		// Function from file: shielding.dm
		public void check_stability( bool? injecting_fuel = null ) {
			injecting_fuel = injecting_fuel ?? false;

			
			if ( this.stability > 0 ) {
				return;
			}

			if ( injecting_fuel == true && this.control_unit != null ) {
				this.control_unit.exploding = true;
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: shielding.dm
		public void shutdown_core(  ) {
			this.processing = false;

			if ( !( this.control_unit != null ) ) {
				return;
			}
			this.control_unit.linked_cores.Remove( this );
			this.control_unit.reported_core_efficiency -= this.efficiency ?1:0;
			return;
		}

		// Function from file: shielding.dm
		public void setup_core(  ) {
			this.processing = true;
			GlobalVars.power_machines.Add( this );

			if ( !( this.control_unit != null ) ) {
				return;
			}
			this.control_unit.linked_cores.Add( this );
			this.control_unit.reported_core_efficiency += this.efficiency ?1:0;
			return;
		}

		// Function from file: shielding.dm
		public bool core_check(  ) {
			dynamic direction = null;
			bool found_am_device = false;
			Obj_Machinery machine = null;

			
			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.alldirs )) {
				direction = _b;
				
				found_am_device = false;

				foreach (dynamic _a in Lang13.Enumerate( Map13.GetStep( this.loc, Convert.ToInt32( direction ) ), typeof(Obj_Machinery) )) {
					machine = _a;
					

					if ( !( machine != null ) ) {
						continue;
					}

					if ( machine is Obj_Machinery_AmShielding || machine is Obj_Machinery_Power_AmControlUnit ) {
						found_am_device = true;
						break;
					}
				}

				if ( !found_am_device ) {
					return false;
				}
			}
			return true;
		}

		// Function from file: shielding.dm
		public bool link_control( Obj_Machinery_Power_AmControlUnit AMC = null ) {
			
			if ( !( AMC is Obj_Machinery_Power_AmControlUnit ) ) {
				return false;
			}

			if ( this.control_unit != null && this.control_unit != AMC ) {
				return false;
			}
			this.control_unit = AMC;
			this.control_unit.add_shielding( this, true );
			return true;
		}

		// Function from file: shielding.dm
		public void controllerscan( bool? priorscan = null ) {
			priorscan = priorscan ?? false;

			Obj_Machinery_AmShielding AMS = null;
			Obj_Machinery_AmShielding AMS2 = null;
			Obj_Machinery_Power_AmControlUnit AMC = null;

			
			if ( !( this.loc is Tile ) ) {
				GlobalFuncs.qdel( this );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.loc.contents, typeof(Obj_Machinery_AmShielding) )) {
				AMS = _a;
				

				if ( AMS == this ) {
					continue;
				}
				GlobalFuncs.qdel( this );
				return;
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.cardinalrange( this ), typeof(Obj_Machinery_AmShielding) )) {
				AMS2 = _b;
				

				if ( AMS2 != null && AMS2.control_unit != null && this.link_control( AMS2.control_unit ) ) {
					break;
				}
			}

			if ( !( this.control_unit != null ) ) {
				
				foreach (dynamic _c in Lang13.Enumerate( GlobalFuncs.cardinalrange( this ), typeof(Obj_Machinery_Power_AmControlUnit) )) {
					AMC = _c;
					

					if ( AMC.add_shielding( this ) ) {
						break;
					}
				}

				if ( !( priorscan == true ) ) {
					Task13.Sleep( 20 );
					this.controllerscan( true );
					return;
				}
				GlobalFuncs.qdel( this );
			}
			return;
		}

	}

}
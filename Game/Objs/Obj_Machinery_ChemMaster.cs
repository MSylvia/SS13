// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ChemMaster : Obj_Machinery {

		public dynamic beaker = null;
		public dynamic loaded_pill_bottle = null;
		public bool mode = false;
		public bool condi = false;
		public string windowtype = "chem_master";
		public dynamic useramount = 30;
		public string pillsprite = "1";
		public ByTable has_sprites = new ByTable();
		public Type chem_board = typeof(Obj_Item_Weapon_Circuitboard_Chemmaster3000);
		public dynamic max_bottle_size = 30;
		public dynamic max_pill_count = 20;
		public string targetMoveKey = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 20;
			this.light_color = "#6496FA";
			this.light_range_on = 3;
			this.light_power_on = 2;
			this.use_auto_lights = true;
			this.machine_flags = 30;
			this.icon = "icons/obj/chemical.dmi";
			this.icon_state = "mixer";
		}

		// Function from file: Chemistry-Machinery.dm
		public Obj_Machinery_ChemMaster ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 100 );
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_ConsoleScreen(), 
				new Obj_Item_Weapon_StockParts_ConsoleScreen()
			 });
			this.component_parts += Lang13.Call( this.chem_board );
			this.RefreshParts();
			this.update_icon();
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override void on_reagent_change(  ) {
			this.update_icon();
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			Image overlay = null;
			Image mixer_prongs = null;

			this.overlays.len = 0;

			if ( Lang13.Bool( this.beaker ) ) {
				this.beaker.pixel_x = -9;
				this.beaker.pixel_y = 5;
				this.beaker.update_icon();
				this.overlays.Add( this.beaker );
			}

			if ( Lang13.Bool( this.reagents.total_volume ) && !( ( this.stat & 3 ) != 0 ) ) {
				overlay = new Image( "icons/obj/chemical.dmi", this, "mixer_overlay" );
				overlay.icon += GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				this.overlays.Add( overlay );
			}
			mixer_prongs = new Image( "icons/obj/chemical.dmi", this, "mixer_prongs" );
			this.overlays.Add( mixer_prongs );
			return null;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			double i = 0;
			dynamic dat = null;
			Reagents R = null;
			Reagent G = null;
			Reagent N = null;
			Browser popup = null;

			_default = base.attack_hand( (object)(a), (object)(b), (object)(c) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}
			((Mob)a).set_machine( this );
			Interface13.Stat( null, this.has_sprites.Contains( a.client ) );

			if ( !Lang13.Bool( _default ) ) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					this.has_sprites.Add( a.client );

					foreach (dynamic _a in Lang13.IterateRange( 1, 20 )) {
						i = _a;
						
						Interface13.CacheBrowseResource( Task13.User, new Icon( "icons/obj/chemical.dmi", "pill" + String13.NumberToString( i ) ), "pill" + i + ".png" );
					}
					return;
				}));
			}
			dat = new ByTable();

			if ( !Lang13.Bool( this.beaker ) ) {
				dat += "Please insert a beaker.<BR>";

				if ( !this.condi ) {
					
					if ( Lang13.Bool( this.loaded_pill_bottle ) ) {
						dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";ejectp=1'>Eject Pill Bottle [" ).item( this.loaded_pill_bottle.contents.len ).str( "/" ).item( this.loaded_pill_bottle.storage_slots ).str( "]</A><BR><BR>" ).ToString();
					} else {
						dat += "No pill bottle inserted.<BR><BR>";
					}
				}
			} else {
				R = this.beaker.reagents;
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";eject=1'>Eject beaker and Clear Buffer</A><BR>" ).ToString();

				if ( Lang13.Bool( this.loaded_pill_bottle ) ) {
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";ejectp=1'>Eject Pill Bottle [" ).item( this.loaded_pill_bottle.contents.len ).str( "/" ).item( this.loaded_pill_bottle.storage_slots ).str( "]</A><BR><BR>" ).ToString();
				} else if ( this.windowtype == "chem_master" ) {
					dat += "No pill bottle inserted.<BR><BR>";
				}

				if ( !Lang13.Bool( R.total_volume ) ) {
					dat += "Beaker is empty.";
				} else {
					dat += "Add to buffer:<BR>";

					foreach (dynamic _b in Lang13.Enumerate( R.reagent_list, typeof(Reagent) )) {
						G = _b;
						
						dat += new Txt().item( G.name ).str( " , " ).item( G.volume ).str( " Units -\n					<A href='?src=" ).Ref( this ).str( ";analyze=1;desc=" ).item( G.description ).str( ";name=" ).item( G.name ).str( "'>(Analyze)</A>\n					<A href='?src=" ).Ref( this ).str( ";add=" ).item( G.id ).str( ";amount=1'>(1)</A>\n					<A href='?src=" ).Ref( this ).str( ";add=" ).item( G.id ).str( ";amount=5'>(5)</A>\n					<A href='?src=" ).Ref( this ).str( ";add=" ).item( G.id ).str( ";amount=10'>(10)</A>\n					<A href='?src=" ).Ref( this ).str( ";add=" ).item( G.id ).str( ";amount=" ).item( G.volume ).str( "'>(All)</A>\n					<A href='?src=" ).Ref( this ).str( ";addcustom=" ).item( G.id ).str( "'>(Custom)</A><BR>" ).ToString();
					}
				}
				dat += new Txt( "<HR>Transfer to <A href='?src=" ).Ref( this ).str( ";toggle=1'>" ).item( ( !this.mode ? "disposal" : "beaker" ) ).str( ":</A><BR>" ).ToString();

				if ( Lang13.Bool( this.reagents.total_volume ) ) {
					
					foreach (dynamic _c in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
						N = _c;
						
						dat += new Txt().item( N.name ).str( " , " ).item( N.volume ).str( " Units -\n					<A href='?src=" ).Ref( this ).str( ";analyze=1;desc=" ).item( N.description ).str( ";name=" ).item( N.name ).str( "'>(Analyze)</A>\n					<A href='?src=" ).Ref( this ).str( ";remove=" ).item( N.id ).str( ";amount=1'>(1)</A>\n					<A href='?src=" ).Ref( this ).str( ";remove=" ).item( N.id ).str( ";amount=5'>(5)</A>\n					<A href='?src=" ).Ref( this ).str( ";remove=" ).item( N.id ).str( ";amount=10'>(10)</A>\n					<A href='?src=" ).Ref( this ).str( ";remove=" ).item( N.id ).str( ";amount=" ).item( N.volume ).str( "'>(All)</A>\n					<A href='?src=" ).Ref( this ).str( ";removecustom=" ).item( N.id ).str( "'>(Custom)</A><BR>" ).ToString();
					}
				} else {
					dat += "Buffer is empty.<BR>";
				}

				if ( !this.condi ) {
					dat += new Txt( "<a href=\"?src=" ).Ref( this ).str( "&change_pill=1\"><img src=\"pill" ).item( this.pillsprite ).str( ".png\" /></a><BR>" ).ToString();
					dat += new Txt( "<HR><BR><A href='?src=" ).Ref( this ).str( ";createpill=1'>Create single pill (50 units max)</A><BR>\n					<A href='?src=" ).Ref( this ).str( ";createpill_multiple=1'>Create multiple pills (50 units max each; " ).item( this.max_pill_count ).str( " max)</A><BR>\n					<A href='?src=" ).Ref( this ).str( ";createpill_multiple=1;createempty=1'>Create empty pills</A><BR>\n					<A href='?src=" ).Ref( this ).str( ";createbottle=1'>Create bottle (" ).item( this.max_bottle_size ).str( " units max)</A><BR>\n					<A href='?src=" ).Ref( this ).str( ";createbottle_multiple=1'>Create multiple bottles (" ).item( this.max_bottle_size ).str( " units max each; 4 max)</A><BR>" ).ToString();
				} else {
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";createbottle=1'>Create bottle (50 units max)</A>" ).ToString();
				}
			}
			dat = GlobalFuncs.list2text( dat );
			popup = new Browser( a, "" + this.windowtype, "" + this.name, 575, 400, this );
			popup.set_content( dat );
			popup.open();
			GlobalFuncs.onclose( a, "" + this.windowtype );
			return _default;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			return this.attack_hand( user );
		}

		// Function from file: Chemistry-Machinery.dm
		public override void AltClick( Mob user = null ) {
			
			if ( !Task13.User.incapacitated() && this.Adjacent( Task13.User ) && Lang13.Bool( this.beaker ) && !( ( this.stat & 3 ) != 0 && Lang13.Bool( Task13.User.dexterity_check() ) ) ) {
				this.detach();
				return;
			}
			base.AltClick( user ); return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			Reagents R = null;
			dynamic dat = null;
			Reagent G = null;
			Reagent F = null;
			string A = null;
			dynamic B = null;
			dynamic C = null;
			Browser popup = null;
			dynamic id = null;
			double? amount = null;
			dynamic id2 = null;
			dynamic id3 = null;
			double? amount2 = null;
			dynamic id4 = null;
			dynamic count = null;
			double? amount_per_pill = null;
			dynamic name = null;
			Obj_Item_Weapon_ReagentContainers_Pill P = null;
			dynamic count2 = null;
			double? amount_per_bottle = null;
			dynamic name2 = null;
			Obj_Item_Weapon_ReagentContainers_Glass_Bottle P2 = null;
			Obj_Item_Weapon_ReagentContainers_Food_Condiment P3 = null;
			dynamic dat2 = null;
			double i = 0;
			Browser popup2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			}
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["ejectp"] ) ) {
				
				if ( Lang13.Bool( this.loaded_pill_bottle ) ) {
					this.loaded_pill_bottle.loc = this.loc;
					this.loaded_pill_bottle = null;
				}
				this.updateUsrDialog();
				return 1;
			} else if ( Lang13.Bool( href_list["close"] ) ) {
				Interface13.Browse( Task13.User, null, "window=" + this.windowtype );
				Task13.User.unset_machine();
				return 1;
			}

			if ( Lang13.Bool( this.beaker ) ) {
				R = this.beaker.reagents;

				if ( Lang13.Bool( href_list["analyze"] ) ) {
					dat = new ByTable();

					if ( !this.condi ) {
						
						if ( href_list["name"] == "Blood" ) {
							
							foreach (dynamic _a in Lang13.Enumerate( R.reagent_list, typeof(Reagent) )) {
								F = _a;
								

								if ( F.name == href_list["name"] ) {
									G = F;
									break;
								}
							}
							A = G.name;
							B = G.data["blood_type"];
							C = G.data["blood_DNA"];
							dat += new Txt( "Chemical infos:<BR><BR>Name:<BR>" ).item( A ).str( "<BR><BR>Description:<BR>Blood Type: " ).item( B ).str( "<br>DNA: " ).item( C ).str( "<BR><BR><BR><A href='?src=" ).Ref( this ).str( ";main=1'>(Back)</A>" ).ToString();
						} else {
							dat += new Txt( "Chemical infos:<BR><BR>Name:<BR>" ).item( href_list["name"] ).str( "<BR><BR>Description:<BR>" ).item( href_list["desc"] ).str( "<BR><BR><BR><A href='?src=" ).Ref( this ).str( ";main=1'>(Back)</A>" ).ToString();
						}
					} else {
						dat += new Txt( "Condiment infos:<BR><BR>Name:<BR>" ).item( href_list["name"] ).str( "<BR><BR>Description:<BR>" ).item( href_list["desc"] ).str( "<BR><BR><BR><A href='?src=" ).Ref( this ).str( ";main=1'>(Back)</A>" ).ToString();
					}
					dat = GlobalFuncs.list2text( dat );
					popup = new Browser( Task13.User, "" + this.windowtype, "" + this.name, 585, 400, this );
					popup.set_content( dat );
					popup.open();
					GlobalFuncs.onclose( Task13.User, "" + this.windowtype );
					return 1;
				} else if ( Lang13.Bool( href_list["add"] ) ) {
					
					if ( Lang13.Bool( href_list["amount"] ) ) {
						id = href_list["add"];
						amount = String13.ParseNumber( href_list["amount"] );

						if ( ( amount ??0) < 0 ) {
							return null;
						}
						R.trans_id_to( this, id, amount );
					}
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["addcustom"] ) ) {
					id2 = href_list["addcustom"];
					this.useramount = Interface13.Input( "Select the amount to transfer.", 30, this.useramount, null, null, InputType.Num );
					this.useramount = this.isgoodnumber( this.useramount );
					this.Topic( null, new ByTable().Set( "amount", "" + this.useramount ).Set( "add", "" + id2 ) );
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["remove"] ) ) {
					
					if ( Lang13.Bool( href_list["amount"] ) ) {
						id3 = href_list["remove"];
						amount2 = String13.ParseNumber( href_list["amount"] );

						if ( ( amount2 ??0) < 0 ) {
							return null;
						}

						if ( this.mode ) {
							((Reagents)this.reagents).trans_id_to( this.beaker, id3, amount2 );
						} else {
							((Reagents)this.reagents).remove_reagent( id3, amount2 );
						}
					}
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["removecustom"] ) ) {
					id4 = href_list["removecustom"];
					this.useramount = Interface13.Input( "Select the amount to transfer.", 30, this.useramount, null, null, InputType.Num );
					this.useramount = this.isgoodnumber( this.useramount );
					this.Topic( null, new ByTable().Set( "amount", "" + this.useramount ).Set( "remove", "" + id4 ) );
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["toggle"] ) ) {
					this.mode = !this.mode;
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["main"] ) ) {
					this.attack_hand( Task13.User );
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["eject"] ) ) {
					
					if ( Lang13.Bool( this.beaker ) ) {
						this.detach();
					}
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["createpill"] ) || Lang13.Bool( href_list["createpill_multiple"] ) ) {
					count = 1;

					if ( Lang13.Bool( href_list["createpill_multiple"] ) ) {
						count = this.isgoodnumber( Interface13.Input( "Select the number of pills to make.", 10, this.max_pill_count, null, null, InputType.Num ) );
					}
					count = Num13.MinInt( Convert.ToInt32( this.max_pill_count ), Convert.ToInt32( count ) );

					if ( !Lang13.Bool( count ) ) {
						return null;
					}
					amount_per_pill = ( this.reagents.total_volume ??0) / Convert.ToDouble( count );

					if ( ( amount_per_pill ??0) > 50 ) {
						amount_per_pill = 50;
					}

					if ( Lang13.Bool( href_list["createempty"] ) ) {
						amount_per_pill = 0;
					}
					name = GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Name:", "Name your pill!", "" + ((Reagents)this.reagents).get_master_reagent_name() + " (" + amount_per_pill + " units)", null, InputType.Str | InputType.Null ) );

					if ( !Lang13.Bool( name ) ) {
						return null;
					}

					while (Lang13.Bool( count-- )) {
						
						if ( ( amount_per_pill == 0 || this.reagents.total_volume == 0 ) && !Lang13.Bool( href_list["createempty"] ) ) {
							break;
						}
						P = new Obj_Item_Weapon_ReagentContainers_Pill( this.loc );

						if ( !Lang13.Bool( name ) ) {
							name = "" + ((Reagents)this.reagents).get_master_reagent_name() + " (" + amount_per_pill + " units)";
						}
						P.name = "" + name + " pill";
						P.pixel_x = Rand13.Int( -7, 7 );
						P.pixel_y = Rand13.Int( -7, 7 );
						P.icon_state = "pill" + this.pillsprite;
						((Reagents)this.reagents).trans_to( P, amount_per_pill );

						if ( Lang13.Bool( this.loaded_pill_bottle ) ) {
							
							if ( this.loaded_pill_bottle.contents.len < Convert.ToDouble( this.loaded_pill_bottle.storage_slots ) ) {
								P.loc = this.loaded_pill_bottle;
							}
						}
					}
					this.updateUsrDialog();
					return 1;
				} else if ( Lang13.Bool( href_list["createbottle"] ) || Lang13.Bool( href_list["createbottle_multiple"] ) ) {
					
					if ( !this.condi ) {
						count2 = 1;

						if ( Lang13.Bool( href_list["createbottle_multiple"] ) ) {
							count2 = this.isgoodnumber( Interface13.Input( "Select the number of bottles to make.", 10, count2, null, null, InputType.Num ) );
						}
						count2 = ( Convert.ToDouble( count2 ) <= 1 ? ((dynamic)( 1 )) : ( Convert.ToDouble( count2 ) >= 4 ? ((dynamic)( 4 )) : count2 ) );
						amount_per_bottle = ( ( this.reagents.total_volume ??0) > 0 ? ( this.reagents.total_volume ??0) / Convert.ToDouble( count2 ) : 0 );
						amount_per_bottle = Num13.MinInt( ((int)( amount_per_bottle ??0 )), Convert.ToInt32( this.max_bottle_size ) );
						name2 = GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Name:", "Name your bottle!", "" + ((Reagents)this.reagents).get_master_reagent_name() + " (" + amount_per_bottle + " units)", null, InputType.Str | InputType.Null ) );

						if ( !Lang13.Bool( name2 ) ) {
							return null;
						}

						while (Lang13.Bool( count2-- )) {
							P2 = new Obj_Item_Weapon_ReagentContainers_Glass_Bottle( this.loc, this.max_bottle_size );
							P2.name = "" + name2 + " bottle";
							P2.pixel_x = Rand13.Int( -7, 7 );
							P2.pixel_y = Rand13.Int( -7, 7 );
							((Reagents)this.reagents).trans_to( P2, amount_per_bottle );
						}
						this.updateUsrDialog();
						return 1;
					} else {
						P3 = new Obj_Item_Weapon_ReagentContainers_Food_Condiment( this.loc );
						((Reagents)this.reagents).trans_to( P3, 50 );
						this.updateUsrDialog();
						return 1;
					}
				} else if ( Lang13.Bool( href_list["change_pill"] ) ) {
					dat2 = new ByTable();
					dat2 += "<table>";

					foreach (dynamic _b in Lang13.IterateRange( 1, 20 )) {
						i = _b;
						

						if ( i % 4 == 1 ) {
							dat2 += "<tr>";
						}
						dat2 += new Txt( "<td><a href=\"?src=" ).Ref( this ).str( "&pill_sprite=" ).item( i ).str( "\"><img src=\"pill" ).item( i ).str( ".png\" /></a></td>" ).ToString();

						if ( i % 4 == 0 ) {
							dat2 += "</tr>";
						}
					}
					dat2 += "</table>";
					dat2 = GlobalFuncs.list2text( dat2 );
					popup2 = new Browser( Task13.User, "" + this.windowtype, "" + this.name, 585, 400, this );
					popup2.set_content( dat2 );
					popup2.open();
					GlobalFuncs.onclose( Task13.User, "" + this.windowtype );
					return 1;
				} else if ( Lang13.Bool( href_list["pill_sprite"] ) ) {
					this.pillsprite = href_list["pill_sprite"];
					this.updateUsrDialog();
					return 1;
				}
			}
			return null;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic R = null;

			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			} else if ( a is Obj_Item_Weapon_ReagentContainers_Glass ) {
				
				if ( Lang13.Bool( this.beaker ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>There already is a beaker loaded in the machine.</span>" );
					return null;
				}

				if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
					return null;
				}
				this.beaker = a;

				if ( b.type == typeof(Mob_Living_Silicon_Robot) ) {
					R = b;
					((Mob_Living_Silicon_Robot)R).uneq_active();
					this.targetMoveKey = R.on_moved.Add( this, "user_moved" );
				}
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You add the beaker into " ).the( this ).item().str( "!</span>" ).ToString() );
				this.updateUsrDialog();
				this.update_icon();
				return 1;
			} else if ( a is Obj_Item_Weapon_Storage_PillBottle ) {
				
				if ( this.windowtype != "chem_master" ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>This " + this.name + " does not come with a pill dispenser unit built-in.</span>" );
					return null;
				}

				if ( Lang13.Bool( this.loaded_pill_bottle ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>There already is a pill bottle loaded in the machine.</span>" );
					return null;
				}

				if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
					return null;
				}
				this.loaded_pill_bottle = a;
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You add the pill bottle into " ).the( this ).item().str( "'s dispenser slot!</span>" ).ToString() );
				this.updateUsrDialog();
				return 1;
			}
			return null;
		}

		// Function from file: Chemistry-Machinery.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: Chemistry-Machinery.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
			}
			return false;
		}

		// Function from file: Chemistry-Machinery.dm
		public dynamic isgoodnumber( dynamic num = null ) {
			
			if ( Lang13.Bool( Lang13.IsNumber( num ) ) ) {
				
				if ( Convert.ToDouble( num ) > 200 ) {
					num = 200;
				} else if ( Convert.ToDouble( num ) < 0 ) {
					num = 1;
				} else {
					num = Num13.Floor( Convert.ToDouble( num ) );
				}
				return num;
			} else {
				return 0;
			}
		}

		// Function from file: Chemistry-Machinery.dm
		public void detach(  ) {
			Ent_Static R = null;

			
			if ( Lang13.Bool( this.beaker ) ) {
				this.beaker.loc = this.loc;
				this.beaker.pixel_x = 0;
				this.beaker.pixel_y = 0;

				if ( this.beaker is Obj_Item_Weapon_ReagentContainers_Glass_Beaker_Large_Cyborg ) {
					R = this.beaker.holder.loc;

					if ( ((dynamic)R).module_state_1 == this.beaker || ((dynamic)R).module_state_2 == this.beaker || ((dynamic)R).module_state_3 == this.beaker ) {
						this.beaker.loc = R;
					} else {
						this.beaker.loc = this.beaker.holder;
					}
				}
				this.beaker = null;
				((Reagents)this.reagents).clear_reagents();
				this.update_icon();
			}
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public void user_moved( dynamic args = null ) {
			dynamic E = null;
			dynamic T = null;

			E = args["event"];

			if ( !Lang13.Bool( this.targetMoveKey ) ) {
				E.handlers.Remove( new Txt().Ref( this ).str( ":user_moved" ).ToString() );
				return;
			}
			T = args["loc"];

			if ( !this.Adjacent( T ) ) {
				
				if ( Lang13.Bool( E.holder ) ) {
					E.holder.on_moved.Remove( this.targetMoveKey );
				}
				this.detach();
			}
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public void handle_new_reservoir( double? newvol = null ) {
			
			if ( this.reagents.maximum_volume == newvol ) {
				return;
			}

			if ( Convert.ToDouble( this.reagents.maximum_volume ) > ( newvol ??0) ) {
				((Reagents)this.reagents).remove_any( this.reagents.maximum_volume - newvol );
			}
			this.reagents.maximum_volume = newvol;
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic RefreshParts(  ) {
			int scancount = 0;
			int lasercount = 0;
			int manipcount = 0;
			Obj_Item_Weapon_StockParts SP = null;

			scancount = 0;
			lasercount = 0;
			manipcount = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
				SP = _a;
				

				if ( SP is Obj_Item_Weapon_StockParts_Manipulator ) {
					manipcount += SP.rating - 1;
				}

				if ( SP is Obj_Item_Weapon_StockParts_ScanningModule ) {
					scancount += SP.rating - 1;
				}

				if ( SP is Obj_Item_Weapon_StockParts_MicroLaser ) {
					lasercount += SP.rating - 1;
				}
			}
			this.max_bottle_size = Lang13.Initial( this, "max_bottle_size" ) + lasercount * 5;
			this.max_pill_count = Lang13.Initial( this, "max_pill_count" ) + manipcount * 5;
			this.handle_new_reservoir( scancount * 25 + 100 );
			return null;
		}

	}

}
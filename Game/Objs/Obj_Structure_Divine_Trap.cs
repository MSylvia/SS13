// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Divine_Trap : Obj_Structure_Divine {

		public int last_trigger = 0;
		public int time_between_triggers = 600;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.alpha = 30;
			this.health = 20;
			this.maxhealth = 20;
			this.trap = true;
			this.autocolours = false;
			this.icon_state = "trap";
		}

		public Obj_Structure_Divine_Trap ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: traps.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( !( user is Mob_Living ) ) {
				return 0;
			}
			user.WriteMsg( "You reveal a trap!" );
			this.alpha = 200;
			Icon13.Animate( new ByTable().Set( 1, this ).Set( "alpha", 30 ).Set( "time", this.time_between_triggers ) );
			return 0;
		}

		// Function from file: traps.dm
		public virtual void trap_effect( Ent_Dynamic L = null ) {
			return;
		}

		// Function from file: traps.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic L = null;

			
			if ( this.last_trigger + this.time_between_triggers > Game13.time ) {
				return null;
			}
			this.alpha = 30;

			if ( O is Mob_Living ) {
				L = O;
				this.last_trigger = Game13.time;
				this.alpha = 200;
				this.trap_effect( L );
				Icon13.Animate( new ByTable().Set( 1, this ).Set( "alpha", 30 ).Set( "time", this.time_between_triggers ) );
			}
			return null;
		}

	}

}
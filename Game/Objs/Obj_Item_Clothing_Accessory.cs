// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Accessory : Obj_Item_Clothing {

		public int accessory_exclusion = 0;
		public Obj_Item_Clothing_Under has_suit = null;
		public Image inv_overlay = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "";
			this._color = "bluetie";
			this.w_class = 2;
			this.icon = "icons/obj/clothing/ties.dmi";
			this.icon_state = "bluetie";
		}

		// Function from file: accessory.dm
		public Obj_Item_Clothing_Accessory ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.inv_overlay = new Image( "icons/obj/clothing/ties_overlay.dmi", null, "" + ( Lang13.Bool( this._color ) ? "" + this._color : "" + this.icon_state ) );
			return;
		}

		// Function from file: accessory.dm
		public virtual int on_accessory_interact( dynamic user = null, bool? delayed = null ) {
			delayed = delayed ?? false;

			
			if ( !( this.has_suit != null ) ) {
				return 0;
			}

			if ( delayed == true ) {
				this.has_suit.remove_accessory( user, this );
				this.attack_hand( user );
				return 1;
			}
			return -1;
		}

		// Function from file: accessory.dm
		public virtual void on_removed( dynamic user = null ) {
			
			if ( !( this.has_suit != null ) ) {
				return;
			}
			this.has_suit.overlays.Remove( this.inv_overlay );
			this.has_suit = null;
			this.loc = GlobalFuncs.get_turf( user );
			((Mob)user).put_in_hands( this );
			this.add_fingerprint( user );
			return;
		}

		// Function from file: accessory.dm
		public virtual void on_attached( Obj_Item_Clothing_Under S = null, dynamic user = null ) {
			
			if ( !( S is Obj_Item_Clothing_Under ) ) {
				return;
			}
			this.has_suit = S;

			if ( Lang13.Bool( user ) ) {
				
				if ( Lang13.Bool( user.drop_item( this, this.has_suit ) ) ) {
					GlobalFuncs.to_chat( user, "<span class='notice'>You attach " + this + " to " + this.has_suit + ".</span>" );
					this.add_fingerprint( user );
				}
			} else {
				this.loc = this.has_suit;
			}
			this.has_suit.overlays.Add( this.inv_overlay );
			return;
		}

	}

}
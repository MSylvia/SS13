// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Ashtray : Obj_Item {

		public int max_butts = 0;
		public string empty_desc = "";
		public string icon_empty = "";
		public string icon_half = "";
		public string icon_full = "";
		public string icon_broken = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/ashtray.dmi";
		}

		// Function from file: ashtray.dm
		public Obj_Item_Ashtray ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.pixel_y = Rand13.Int( -5, 5 );
			this.pixel_x = Rand13.Int( -6, 6 );
			return;
		}

		// Function from file: ashtray.dm
		public virtual void die(  ) {
			Obj_Item O = null;

			this.visible_message( "<span class='warning'>" + this + " shatters spilling its contents!</span>" );

			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item) )) {
				O = _a;
				
				O.forceMove( this.loc );
			}
			this.icon_state = this.icon_broken;
			return;
		}

		// Function from file: ashtray.dm
		public override dynamic throw_impact( dynamic hit_atom = null, dynamic speed = null, Mob user = null ) {
			Obj_Item O = null;

			
			if ( this.health > 0 ) {
				this.health = Num13.MaxInt( 0, ((int)( this.health - 3 )) );

				if ( this.health < 1 ) {
					this.die();
					return null;
				}

				if ( this.contents.len != 0 ) {
					this.visible_message( "<span class='warning'>" + this + " slams into " + hit_atom + " spilling its contents!</span>" );
				}

				foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item) )) {
					O = _a;
					
					O.forceMove( this.loc );
				}
				this.icon_state = this.icon_empty;
			}
			return base.throw_impact( (object)(hit_atom), (object)(speed), user );
		}

		// Function from file: ashtray.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic cig = null;

			
			if ( this.health < 1 ) {
				return null;
			}

			if ( a is Obj_Item_Clothing_Mask_Cigarette || a is Obj_Item_Weapon_Match || a is Obj_Item_Weapon_Cigbutt ) {
				
				if ( Lang13.Bool( b ) ) {
					
					if ( this.contents.len >= this.max_butts ) {
						GlobalFuncs.to_chat( b, "This ashtray is full." );
						return null;
					}
					new ByTable().Set( 1, a ).Set( 2, this ).Set( "force_drop", 1 ).Apply( Lang13.BindFunc( b, "drop_item" ) );
					cig = a;

					if ( cig is Obj_Item_Weapon_Cigbutt ) {
						GlobalFuncs.to_chat( b, "You drop the " + cig + " into " + this + "." );
					}

					if ( a is Obj_Item_Clothing_Mask_Cigarette || a is Obj_Item_Weapon_Match ) {
						
						if ( Lang13.Bool( cig.lit ) == true ) {
							this.visible_message( "" + b + " crushes " + cig + " in " + this + ", putting it out." );
						} else if ( Lang13.Bool( cig.lit ) == false ) {
							GlobalFuncs.to_chat( b, "You place " + cig + " in " + this + " without even lighting it. Why would you do that?" );
						} else if ( Convert.ToInt32( cig.lit ) == -1 ) {
							this.visible_message( "" + b + " places " + cig + " in " + this + "." );
						}
					}
					this.add_fingerprint( b );

					if ( this.contents.len == this.max_butts ) {
						this.icon_state = this.icon_full;
						this.desc = this.empty_desc + " It's stuffed full.";
					} else if ( this.contents.len > this.max_butts / 2 ) {
						this.icon_state = this.icon_half;
						this.desc = this.empty_desc + " It's half-filled.";
					}
				}
			} else {
				this.health = Num13.MaxInt( 0, ((int)( this.health - Convert.ToDouble( a.force ) )) );
				GlobalFuncs.to_chat( b, "You hit " + this + " with " + a + "." );

				if ( this.health < 1 ) {
					this.die();
				}
			}
			return null;
		}

	}

}
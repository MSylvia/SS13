// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_MechBayRechargeFloor : Obj_Machinery {

		public dynamic recharge_port = null;
		public dynamic recharge_console = null;
		public Ent_Dynamic recharging_mecha = null;
		public dynamic capacitor_max = 0;
		public int capacitor_stored = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.machine_flags = 6;
			this.icon = "icons/mecha/mech_bay.dmi";
			this.icon_state = "recharge_floor";
			this.layer = 2.1;
		}

		// Function from file: mech_bay.dm
		public Obj_Machinery_MechBayRechargeFloor ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_MechBayRechargeStation(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor()
			 });
			return;
		}

		// Function from file: mech_bay.dm
		public void init_devices(  ) {
			this.recharge_console = Lang13.FindIn( typeof(Obj_Machinery_Computer_MechBayPowerConsole), Map13.FetchInRange( this, 1 ) );
			this.recharge_port = Lang13.FindIn( typeof(Obj_Machinery_MechBayRechargePort), Map13.GetStep( this, ((int)( GlobalVars.WEST )) ) );

			if ( Lang13.Bool( this.recharge_console ) ) {
				this.recharge_console.recharge_floor = this;

				if ( Lang13.Bool( this.recharge_port ) ) {
					this.recharge_console.recharge_port = this.recharge_port;
				}
			}

			if ( Lang13.Bool( this.recharge_port ) ) {
				this.recharge_port.recharge_floor = this;

				if ( Lang13.Bool( this.recharge_console ) ) {
					this.recharge_port.recharge_console = this.recharge_console;
				}
			}
			return;
		}

		// Function from file: mech_bay.dm
		public override dynamic Uncrossed( Ent_Dynamic O = null ) {
			dynamic _default = null;

			_default = base.Uncrossed( O );

			if ( O == this.recharging_mecha ) {
				this.recharging_mecha = null;

				if ( Lang13.Bool( this.recharge_console ) ) {
					((Obj_Machinery_Computer_MechBayPowerConsole)this.recharge_console).mecha_out();
				}
			}
			return _default;
		}

		// Function from file: mech_bay.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			dynamic _default = null;

			_default = base.Crossed( O, (object)(X) );

			if ( O is Obj_Mecha ) {
				((Obj_Mecha)O).occupant_message( "<b>Initializing power control devices.</b>" );
				this.init_devices();

				if ( Lang13.Bool( this.recharge_console ) && Lang13.Bool( this.recharge_port ) ) {
					this.recharging_mecha = O;
					((Obj_Machinery_Computer_MechBayPowerConsole)this.recharge_console).mecha_in( O );
					return _default;
				} else if ( !Lang13.Bool( this.recharge_console ) ) {
					((Obj_Mecha)O).occupant_message( "<span class='rose'>Control console not found. Terminating.</span>" );
				} else if ( !Lang13.Bool( this.recharge_port ) ) {
					((Obj_Mecha)O).occupant_message( "<span class='rose'>Power port not found. Terminating.</span>" );
				}
			}
			return _default;
		}

		// Function from file: mech_bay.dm
		public override dynamic process(  ) {
			int delta = 0;

			base.process();

			if ( this.recharging_mecha != null && this.capacitor_stored != 0 ) {
				((dynamic)this.recharging_mecha).give_power( this.capacitor_stored );
				this.capacitor_stored = 0;
			} else if ( this.capacitor_stored < Convert.ToDouble( this.capacitor_max ) && Lang13.Bool( this.recharge_port ) && !( this.recharging_mecha != null ) ) {
				delta = Num13.MinInt( ((int)( this.recharge_port.pr_recharger.max_charge ??0 )), Convert.ToInt32( this.capacitor_max - this.capacitor_stored ) );
				this.f_use_power( delta * 150 );
				this.capacitor_stored += delta;
			}
			return null;
		}

		// Function from file: mech_bay.dm
		public override dynamic RefreshParts(  ) {
			int capcount = 0;
			Obj_Item_Weapon_StockParts SP = null;

			capcount = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
				SP = _a;
				

				if ( SP is Obj_Item_Weapon_StockParts_Capacitor ) {
					capcount += SP.rating - 1;
				}
			}
			this.capacitor_max = Lang13.Initial( this, "capacitor_max" ) + capcount * 750;
			return null;
		}

	}

}
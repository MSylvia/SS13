// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Screen_Movable_ActionButton : Obj_Screen_Movable {

		public Action owner = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.screen_loc = "WEST,NORTH";
		}

		public Obj_Screen_Movable_ActionButton ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: action.dm
		public override bool MouseExited( dynamic loc = null, string control = null, string _params = null ) {
			GlobalFuncs.closeToolTip( Task13.User );
			return false;
		}

		// Function from file: action.dm
		public override bool MouseEntered( dynamic loc = null, string control = null, string _params = null ) {
			GlobalFuncs.openToolTip( Task13.User, this, _params, this.name, this.desc );
			return false;
		}

		// Function from file: action.dm
		public virtual void UpdateIcon(  ) {
			
			if ( !( this.owner != null ) ) {
				return;
			}
			this.icon = this.owner.button_icon;
			this.icon_state = this.owner.background_icon_state;
			this.owner.ApplyIcon( this );

			if ( !Lang13.Bool( this.owner.IsAvailable() ) ) {
				this.color = "#80000080";
			} else {
				this.color = "#ffffffff";
			}
			return;
		}

		// Function from file: action.dm
		public override bool Click( dynamic loc = null, string control = null, string _params = null ) {
			ByTable modifiers = null;

			modifiers = String13.ParseUrlParams( _params );

			if ( Lang13.Bool( modifiers["shift"] ) ) {
				this.moved = 0;
				return true;
			}

			if ( Task13.User.next_move >= Game13.time ) {
				return false;
			}
			this.owner.Trigger();
			return true;
		}

	}

}
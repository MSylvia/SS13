// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Changeling_SwapForm : Obj_Effect_ProcHolder_Changeling {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.helptext = "We will bring all our abilities with us, but we will lose our old form DNA in exchange for the new one. The process will seem suspicious to any observers.";
			this.chemical_cost = 40;
			this.dna_cost = 1;
			this.req_human = true;
		}

		public Obj_Effect_ProcHolder_Changeling_SwapForm ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: absorb.dm
		public override dynamic sting_action( Mob user = null, Ent_Static target = null ) {
			dynamic G = null;
			Mob_Living target2 = null;
			Changeling changeling = null;
			Mob_Dead_Observer ghost = null;

			G = user.get_active_hand();
			target2 = G.affecting;
			changeling = user.mind.changeling;
			user.WriteMsg( "<span class='notice'>We tighen our grip. We must hold still....</span>" );
			target2.do_jitter_animation( 500 );
			((Mob_Living)user).do_jitter_animation( 500 );

			if ( !GlobalFuncs.do_mob( user, target2, 20 ) ) {
				user.WriteMsg( "<span class='warning'>The body swap has been interrupted!</span>" );
				return null;
			}
			target2.WriteMsg( "<span class='userdanger'>" + user + " tightens their grip as a painful sensation invades your body.</span>" );

			if ( !changeling.has_dna( ((dynamic)target2).dna ) ) {
				changeling.add_new_profile( target2, user );
			}
			changeling.remove_profile( user );
			ghost = target2.ghostize( false );
			user.mind.transfer_to( target2 );

			if ( ghost != null ) {
				ghost.mind.transfer_to( user );

				if ( Lang13.Bool( ghost.key ) ) {
					user.key = ghost.key;
				}
			}
			user.Paralyse( 2 );
			target2.WriteMsg( "<span class='warning'>Our genes cry out as we swap our " + user + " form for " + target2 + ".</span>" );
			return null;
		}

		// Function from file: absorb.dm
		public override bool can_sting( Mob user = null, Ent_Static target = null ) {
			dynamic G = null;
			dynamic target2 = null;

			
			if ( !base.can_sting( user, target ) ) {
				return false;
			}
			G = user.get_active_hand();

			if ( !( G is Obj_Item_Weapon_Grab ) || Convert.ToDouble( G.state ) < 2 ) {
				user.WriteMsg( "<span class='warning'>We must have an aggressive grab on creature in our active hand to do this!</span>" );
				return false;
			}
			target2 = G.affecting;

			if ( Lang13.Bool( target2.disabilities & 128 ) || Lang13.Bool( target2.disabilities & 64 ) ) {
				user.WriteMsg( "<span class='warning'>DNA of " + target2 + " is ruined beyond usability!</span>" );
				return false;
			}

			if ( !( target2 is Mob_Living_Carbon_Human ) ) {
				user.WriteMsg( "<span class='warning'>" + target2 + " is not compatible with this ability.</span>" );
				return false;
			}
			return true;
		}

	}

}
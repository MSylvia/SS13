// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Button : Obj_Machinery {

		public string skin = "doorctrl";
		public dynamic device = null;
		public dynamic board = null;
		public Type device_type = null;
		public string id;
		public bool initialized = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.power_channel = 3;
			this.anchored = 1;
			this.idle_power_usage = 2;
			this.icon_state = "doorctrl";
		}

		// Function from file: buttons.dm
		public Obj_Machinery_Button ( dynamic loc = null, bool? ndir = null, bool? built = null ) : base( (object)(loc) ) {
			ndir = ndir ?? false;
			built = built ?? false;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( built == true ) {
				this.dir = ndir == true ?1:0;
				this.pixel_x = ( ( this.dir & 3 ) != 0 ? 0 : ( this.dir == 4 ? -24 : 24 ) );
				this.pixel_y = ( ( this.dir & 3 ) != 0 ? ( this.dir == 1 ? -24 : 24 ) : 0 );
				this.panel_open = 1;
				this.update_icon();
			}

			if ( !( built == true ) && !Lang13.Bool( this.device ) && this.device_type != null ) {
				this.device = Lang13.Call( this.device_type, this );
			}
			this.check_access( null );

			if ( this.req_access.len != 0 || this.req_one_access.len != 0 ) {
				this.board = new Obj_Item_Weapon_Electronics_Airlock( this );

				if ( this.req_access.len != 0 ) {
					this.board.accesses = this.req_access;
				} else {
					this.board.one_access = true;
					this.board.accesses = this.req_one_access;
				}
			}
			return;
		}

		// Function from file: buttons.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

		// Function from file: buttons.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !this.initialized ) {
				this.setup_device();
			}
			this.add_fingerprint( a );

			if ( Lang13.Bool( this.panel_open ) ) {
				
				if ( Lang13.Bool( this.device ) || Lang13.Bool( this.board ) ) {
					
					if ( Lang13.Bool( this.device ) ) {
						this.device.loc = GlobalFuncs.get_turf( this );
						this.device = null;
					}

					if ( Lang13.Bool( this.board ) ) {
						this.board.loc = GlobalFuncs.get_turf( this );
						this.req_access = new ByTable();
						this.req_one_access = new ByTable();
						this.board = null;
					}
					this.update_icon();
					a.WriteMsg( "<span class='notice'>You remove electronics from the button frame.</span>" );
				} else {
					
					if ( this.skin == "doorctrl" ) {
						this.skin = "launcher";
					} else {
						this.skin = "doorctrl";
					}
					a.WriteMsg( "<span class='notice'>You change the button frame's front panel.</span>" );
				}
				return null;
			}

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( Lang13.Bool( this.device ) && Lang13.Bool( this.device.cooldown ) ) {
				return null;
			}

			if ( !this.allowed( a ) ) {
				a.WriteMsg( "<span class='danger'>Access Denied</span>" );
				Icon13.Flick( "" + this.skin + "-denied", this );
				return null;
			}
			this.f_use_power( 5 );
			this.icon_state = "" + this.skin + "1";

			if ( Lang13.Bool( this.device ) ) {
				((Obj_Item_Device_Assembly)this.device).pulsed();
			}
			Task13.Schedule( 15, (Task13.Closure)(() => {
				this.update_icon();
				return;
			}));
			return null;
		}

		// Function from file: buttons.dm
		public virtual void setup_device(  ) {
			dynamic A = null;

			
			if ( this.id!=null && this.device is Obj_Item_Device_Assembly_Control ) {
				A = this.device;
				A.id = this.id;
			}
			this.initialized = true;
			return;
		}

		// Function from file: buttons.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.panel_open ) ) {
				return this.attack_hand( user );
			}
			return null;
		}

		// Function from file: buttons.dm
		public override bool emag_act( dynamic user = null ) {
			this.req_access = new ByTable();
			this.req_one_access = new ByTable();
			GlobalFuncs.playsound( this.loc, "sparks", 100, 1 );
			return false;
		}

		// Function from file: buttons.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Device_DetectiveScanner ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.panel_open ) || this.allowed( user ) ) {
					this.default_deconstruction_screwdriver( user, "button-open", "" + this.skin, A );
					this.update_icon();
				} else {
					user.WriteMsg( "<span class='danger'>Maintenance Access Denied</span>" );
					Icon13.Flick( "" + this.skin + "-denied", this );
				}
				return null;
			}

			if ( Lang13.Bool( this.panel_open ) ) {
				
				if ( !Lang13.Bool( this.device ) && A is Obj_Item_Device_Assembly ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						user.WriteMsg( new Txt( "<span class='warning'>" ).The( A ).item().str( " is stuck to you!</span>" ).ToString() );
						return null;
					}
					A.loc = this;
					this.device = A;
					user.WriteMsg( "<span class='notice'>You add " + A + " to the button.</span>" );
				}

				if ( !Lang13.Bool( this.board ) && A is Obj_Item_Weapon_Electronics_Airlock ) {
					
					if ( !((Mob)user).unEquip( A ) ) {
						user.WriteMsg( new Txt( "<span class='warning'>" ).The( A ).item().str( " is stuck to you!</span>" ).ToString() );
						return null;
					}
					A.loc = this;
					this.board = A;

					if ( this.board.one_access ) {
						this.req_one_access = this.board.accesses;
					} else {
						this.req_access = this.board.accesses;
					}
					user.WriteMsg( "<span class='notice'>You add " + A + " to the button.</span>" );
				}

				if ( !Lang13.Bool( this.device ) && !Lang13.Bool( this.board ) && A is Obj_Item_Weapon_Wrench ) {
					user.WriteMsg( "<span class='notice'>You start unsecuring the button frame...</span>" );
					GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );

					if ( GlobalFuncs.do_after( user, 40 / A.toolspeed, null, this ) ) {
						user.WriteMsg( "<span class='notice'>You unsecure the button frame.</span>" );
						this.transfer_fingerprints_to( new Obj_Item_Wallframe_Button( GlobalFuncs.get_turf( this ) ) );
						GlobalFuncs.playsound( this.loc, "sound/items/Deconstruct.ogg", 50, 1 );
						GlobalFuncs.qdel( this );
					}
				}
				this.update_icon();
				return null;
			}
			return this.attack_hand( user );
		}

		// Function from file: buttons.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();

			if ( Lang13.Bool( this.panel_open ) ) {
				this.icon_state = "button-open";

				if ( Lang13.Bool( this.device ) ) {
					this.overlays.Add( "button-device" );
				}

				if ( Lang13.Bool( this.board ) ) {
					this.overlays.Add( "button-board" );
				}
			} else if ( ( this.stat & 3 ) != 0 ) {
				this.icon_state = "" + this.skin + "-p";
			} else {
				this.icon_state = this.skin;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Tape : Obj_Item {

		public string icon_base = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/policetape.dmi";
		}

		public Obj_Item_Tape ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: policetape.dm
		public void breaktape( dynamic W = null, dynamic user = null ) {
			ByTable dir = null;
			string icon_dir = null;
			int? i = null;
			bool N = false;
			Tile cur = null;
			Obj_Item_Tape P = null;

			
			if ( user.a_intent == "help" && ( !Lang13.Bool( W ) || !Lang13.Bool( ((Obj)W).is_sharp() ) ) && !this.allowed( user ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>You can't break " + this + " " + ( Lang13.Bool( W ) ? new Txt( "with " ).the( W ).item().str( " " ).ToString() : "" ) + "unless you use force.</span>" );
				return;
			}
			((Ent_Static)user).visible_message( "<span class='warning'>" + user + " breaks " + this + "!</span>" );
			dir = new ByTable( 2 );
			icon_dir = this.icon_state;

			if ( icon_dir == "" + this.icon_base + "_h" ) {
				dir[1] = GlobalVars.EAST;
				dir[2] = GlobalVars.WEST;
			}

			if ( icon_dir == "" + this.icon_base + "_v" ) {
				dir[1] = GlobalVars.NORTH;
				dir[2] = GlobalVars.SOUTH;
			}
			i = null;
			i = 1;

			while (( i ??0) < 3) {
				N = false;
				cur = Map13.GetStep( this, Convert.ToInt32( dir[i] ) );

				while (!N) {
					N = true;

					foreach (dynamic _a in Lang13.Enumerate( cur, typeof(Obj_Item_Tape) )) {
						P = _a;
						

						if ( P.icon_state == icon_dir ) {
							N = false;
							Lang13.Delete( P );
							P = null;
						}
					}
					cur = Map13.GetStep( cur, Convert.ToInt32( dir[i] ) );
				}
				i++;
			}
			Lang13.Delete( this );
			Task13.Source = null;
			return;
		}

		// Function from file: policetape.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			this.breaktape( typeof(Obj_Item_Weapon_Wirecutters), a );
			return null;
		}

		// Function from file: policetape.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a.a_intent == "help" && this.allowed( a ) ) {
				
				if ( !this.density ) {
					((Ent_Static)a).visible_message( "<span class='notice'>" + a + " pulls " + this + " back down.</span>" );
					this.density = true;
				} else {
					((Ent_Static)a).visible_message( "<span class='notice'>" + a + " lifts " + this + ", allowing passage.</span>" );
					this.density = false;
				}
			} else {
				
				if ( !this.density ) {
					return null;
				}
				this.breaktape( null, a );
			}
			return null;
		}

		// Function from file: policetape.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.breaktape( a, b );
			return null;
		}

		// Function from file: policetape.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( !this.density ) {
				return true;
			}

			if ( air_group == true || height == 0 ) {
				return true;
			}

			if ( Lang13.Bool( mover.flags & 2 ) || mover is Obj_Effect_Meteor || mover.throwing == 1 ) {
				return true;
			} else {
				return false;
			}
		}

		// Function from file: policetape.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			dynamic T = null;
			Ent_Static A = null;

			
			if ( this.allowed( AM ) ) {
				T = GlobalFuncs.get_turf( this );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Static) )) {
					A = _a;
					

					if ( A.density ) {
						return false;
					}
				}
				AM.loc = T;
			}
			return false;
		}

	}

}
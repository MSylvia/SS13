// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bedsheetbin : Obj_Structure {

		public int amount = 20;
		public ByTable sheets = new ByTable();
		public dynamic hidden = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon_state = "linenbin-full";
		}

		public Obj_Structure_Bedsheetbin ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bedsheet_bin.dm
		public override void attack_tk( Mob user = null ) {
			Obj_Item_Weapon_Bedsheet B = null;

			
			if ( this.amount >= 1 ) {
				this.amount--;

				if ( this.sheets.len > 0 ) {
					B = this.sheets[this.sheets.len];
					this.sheets.Remove( B );
				} else {
					B = new Obj_Item_Weapon_Bedsheet( this.loc );
				}
				B.loc = this.loc;
				GlobalFuncs.to_chat( user, "<span class='notice'>You telekinetically remove " + B + " from " + this + ".</span>" );
				this.update_icon();

				if ( Lang13.Bool( this.hidden ) ) {
					this.hidden.loc = this.loc;
					this.hidden = null;
				}
			}
			this.add_fingerprint( user );
			return;
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Weapon_Bedsheet B = null;

			
			if ( this.amount >= 1 ) {
				this.amount--;

				if ( this.sheets.len > 0 ) {
					B = this.sheets[this.sheets.len];
					this.sheets.Remove( B );
				} else {
					B = new Obj_Item_Weapon_Bedsheet( this.loc );
				}
				B.loc = a.loc;
				((Mob)a).put_in_hands( B );
				GlobalFuncs.to_chat( a, "<span class='notice'>You take " + B + " out of " + this + ".</span>" );

				if ( Lang13.Bool( this.hidden ) ) {
					this.hidden.loc = a.loc;
					GlobalFuncs.to_chat( a, "<span class='notice'>" + this.hidden + " falls out of " + B + "!</span>" );
					this.hidden = null;
				}
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Bedsheet ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.sheets.Add( a );
					this.amount++;
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You put " ).the( a ).item().str( " in " ).the( this ).item().str( ".</span>" ).ToString() );
				}
			} else if ( this.amount != 0 && !Lang13.Bool( this.hidden ) && Convert.ToDouble( a.w_class ) < 4 ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.hidden = a;
					GlobalFuncs.to_chat( b, "<span class='notice'>You hide " + a + " among the sheets.</span>" );
				}
			}
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			dynamic _a = this.amount; // Was a switch-case, sorry for the mess.
			if ( 1<=_a&&_a<="~BADVAL~1" ) {
				this.icon_state = "linenbin-half";
			} else if ( _a==0 ) {
				this.icon_state = "linenbin-empty";
			} else {
				this.icon_state = "linenbin-full";
			}
			return null;
		}

		// Function from file: bedsheet_bin.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.amount == 0 ) {
				GlobalFuncs.to_chat( user, "<span class='info'>There are no bed sheets in the bin.</span>" );
			} else if ( this.amount == 1 ) {
				GlobalFuncs.to_chat( user, "<span class='info'>There is one bed sheet in the bin.</span>" );
			} else {
				GlobalFuncs.to_chat( user, "<span class='info'>There are " + this.amount + " bed sheets in the bin.</span>" );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Plastique : Obj_Item_Weapon {

		public Wires_Explosive_Plastic wires = null;
		public dynamic timer = 10;
		public dynamic target = null;
		public bool open_panel = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "plasticx";
			this.w_class = 2;
			this.origin_tech = "syndicate=2";
			this.icon = "icons/obj/assemblies.dmi";
			this.icon_state = "plastic-explosive0";
		}

		// Function from file: explosives.dm
		public Obj_Item_Weapon_Plastique ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.wires = new Wires_Explosive_Plastic( this );
			return;
		}

		// Function from file: explosives.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			return null;
		}

		// Function from file: explosives.dm
		public void explode( dynamic location = null ) {
			
			if ( !Lang13.Bool( this.target ) ) {
				this.target = GlobalFuncs.get_atom_on_turf( this );
			}

			if ( !Lang13.Bool( this.target ) ) {
				this.target = this;
			}

			if ( Lang13.Bool( location ) ) {
				GlobalFuncs.explosion( location, -1, -1, 2, 3 );
			}

			if ( Lang13.Bool( this.target ) ) {
				this.target.overlays -= new Image( "icons/obj/assemblies.dmi", "plastic-explosive2" );

				if ( !((Ent_Static)this.target).singuloCanEat() ) {
					GlobalFuncs.qdel( this );
					return;
				}

				if ( this.target is Tile_Simulated_Wall ) {
					((Tile)this.target).dismantle_wall( true );
				} else {
					((Ent_Static)this.target).ex_act( 1 );
				}

				if ( this.target is Obj ) {
					
					if ( Lang13.Bool( this.target ) ) {
						GlobalFuncs.qdel( this.target );
						this.target = null;
					}
				}
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: explosives.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			bool glue_act = false;
			dynamic M = null;

			
			if ( !( flag == true ) ) {
				return false;
			}

			if ( A is Tile_Unsimulated || A is Tile_Simulated_Shuttle || A is Obj_Item_Weapon_Storage ) {
				return false;
			}
			GlobalFuncs.to_chat( user, "Planting explosives..." );

			if ( A is Mob ) {
				user.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <font color='red'> " + user.real_name + " tried planting " + this.name + " on " + A.real_name + " (" + A.ckey + ")</font>" );
				GlobalFuncs.msg_admin_attack( "" + user.real_name + " (" + user.ckey + ") tried planting " + this.name + " on " + A.real_name + " (" + A.ckey + ") (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + user.x + ";Y=" + user.y + ";Z=" + user.z + "'>JMP</a>)" );
				((Ent_Static)user).visible_message( "<span class='warning'>" + user.name + " is trying to plant some kind of explosive on " + A.name + "!</span>" );
			}

			if ( GlobalFuncs.do_after( user, A, 50 ) && ((Ent_Static)user).Adjacent( A ) ) {
				glue_act = false;

				if ( Lang13.Bool( user.drop_item( this ) ) ) {
					this.target = A;
				} else {
					GlobalFuncs.to_chat( user, new Txt( "<span class='danger'>" ).The( this ).item().str( " are glued to your hands!</span>" ).ToString() );
					this.target = user;
					A = user;
					glue_act = true;
					new ByTable().Set( 1, this ).Set( "force_drop", 1 ).Apply( Lang13.BindFunc( user, "drop_item" ) );
				}
				this.loc = null;

				if ( A is Mob ) {
					M = A;
					A.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "]<font color='orange'> Had the " + this.name + " planted on them by " + user.real_name + " (" + user.ckey + ")</font>" );

					if ( !glue_act ) {
						((Ent_Static)user).visible_message( "<span class='warning'>" + user.name + " finished planting an explosive on " + A.name + "!</span>" );
					} else {
						((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " found " ).himself_herself_itself_themself().str( " unable to drop " ).the( this ).item().str( " after setting the timer on them!</span>" ).ToString() );
					}
					GlobalFuncs.playsound( GlobalFuncs.get_turf( A ), "sound/weapons/c4armed.ogg", 60, 1 );

					if ( !( user is Mob_Living_Carbon ) ) {
						M.LAssailant = null;
					} else {
						M.LAssailant = user;
					}
				}
				A.overlays += new Image( "icons/obj/assemblies.dmi", "plastic-explosive2" );
				GlobalFuncs.to_chat( user, "Bomb has been planted. Timer counting down from " + this.timer + "." );
				Task13.Schedule( Convert.ToInt32( this.timer * 10 ), (Task13.Closure)(() => {
					this.explode( GlobalFuncs.get_turf( A ) );
					return;
				}));
			}
			return false;
		}

		// Function from file: explosives.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic newtime = null;

			newtime = Interface13.Input( Task13.User, "Please set the timer.", "Timer", 10, null, InputType.Num );

			if ( Convert.ToDouble( newtime ) > 60000 ) {
				newtime = 60000;
			}
			this.timer = newtime;
			GlobalFuncs.to_chat( user, "Timer set for " + this.timer + " seconds." );
			return null;
		}

		// Function from file: explosives.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Screwdriver ) {
				this.open_panel = !this.open_panel;
				GlobalFuncs.to_chat( b, "<span class='notice'>You " + ( this.open_panel ? "open" : "close" ) + " the wire panel.</span>" );
			} else if ( a is Obj_Item_Weapon_Wirecutters || a is Obj_Item_Device_Multitool || a is Obj_Item_Device_Assembly_Signaler ) {
				this.wires.Interact( b );
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: explosives.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			dynamic _default = null;

			string message_say = null;
			string role = null;

			_default = 1;
			GlobalFuncs.to_chat( Map13.FetchViewers( null, user ), new Txt( "<span class='danger'>" ).item( user ).str( " activates the C4 and holds it above his head! It looks like " ).he_she_it_they().str( "'s going out with a bang!</span>" ).ToString() );
			message_say = "FOR NO RAISIN!";

			if ( user.mind != null ) {
				
				if ( Lang13.Bool( user.mind.special_role ) ) {
					role = String13.ToLower( user.mind.special_role );

					if ( role == "traitor" || role == "syndicate" ) {
						message_say = "FOR THE SYNDICATE!";
					} else if ( role == "changeling" ) {
						message_say = "FOR THE HIVE!";
					} else if ( role == "cultist" ) {
						message_say = "FOR NARSIE!";
					}
				}
			}
			user.say( message_say );
			this.target = user;
			this.explode( GlobalFuncs.get_turf( user ) );
			return _default;
		}

		// Function from file: explosives.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.wires != null ) {
				GlobalFuncs.qdel( this.wires );
				this.wires = null;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Telecomms_Receiver : Obj_Machinery_Telecomms {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 30;
			this.machinetype = 1;
			this.circuitboard = "/obj/item/weapon/circuitboard/telecomms/receiver";
			this.icon_state = "broadcast receiver";
		}

		// Function from file: receiver.dm
		public Obj_Machinery_Telecomms_Receiver ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_Telecomms_Receiver( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Subspace_Filter( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Subspace_Ansible( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MicroLaser_High( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.RefreshParts();
			return;
		}

		// Function from file: receiver.dm
		public bool check_receive_level( Signal signal = null ) {
			Obj_Machinery_Telecomms_Hub H = null;
			ByTable connected_levels = null;
			Obj_Machinery_Telecomms_Relay R = null;

			
			if ( Lang13.IntNullable( signal.data["level"] ) != this.listening_level ) {
				
				foreach (dynamic _b in Lang13.Enumerate( this.links, typeof(Obj_Machinery_Telecomms_Hub) )) {
					H = _b;
					
					connected_levels = new ByTable();

					foreach (dynamic _a in Lang13.Enumerate( H.links, typeof(Obj_Machinery_Telecomms_Relay) )) {
						R = _a;
						

						if ( R.can_receive( signal ) ) {
							connected_levels.Or( R.listening_level );
						}
					}

					if ( connected_levels.Contains( signal.data["level"] ) ) {
						return true;
					}
				}
				return false;
			}
			return true;
		}

		// Function from file: receiver.dm
		public override bool receive_signal( Signal signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			int? can_send = null;

			
			if ( !this.on ) {
				return false;
			}

			if ( !( signal != null ) ) {
				return false;
			}

			if ( !this.check_receive_level( signal ) ) {
				return false;
			}

			if ( signal.transmission_method == 2 ) {
				
				if ( this.is_freq_listening( signal ) ) {
					signal.data["level"] = new ByTable();
					can_send = this.relay_information( signal, "/obj/machinery/telecomms/hub" );

					if ( !Lang13.Bool( can_send ) ) {
						this.relay_information( signal, "/obj/machinery/telecomms/bus" );
					}
				}
			}
			return false;
		}

	}

}
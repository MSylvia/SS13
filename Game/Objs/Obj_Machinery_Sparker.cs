// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Sparker : Obj_Machinery {

		public dynamic id_tag = null;
		public bool disable = false;
		public int last_spark = 0;
		public string base_state = "migniter";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.ghost_read = false;
			this.icon_state = "migniter";
		}

		// Function from file: igniter.dm
		public Obj_Machinery_Sparker ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.igniters.Add( this );
			return;
		}

		// Function from file: igniter.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				base.emp_act( severity );
				return null;
			}
			this.spark();
			base.emp_act( severity );
			return null;
		}

		// Function from file: igniter.dm
		public bool spark(  ) {
			Effect_Effect_System_SparkSpread s = null;
			Ent_Static location = null;

			
			if ( !Lang13.Bool( this.powered() ) ) {
				return false;
			}

			if ( this.disable || this.last_spark != 0 && Game13.time < this.last_spark + 50 ) {
				return false;
			}
			Icon13.Flick( "" + this.base_state + "-spark", this );
			s = new Effect_Effect_System_SparkSpread();
			s.set_up( 2, 1, this );
			s.start();
			this.last_spark = Game13.time;
			this.f_use_power( 1000 );
			location = this.loc;

			if ( location is Tile ) {
				new ByTable().Set( 1, 1000 ).Set( 2, 500 ).Set( 3, 1 ).Set( "surfaces", 1 ).Apply( Lang13.BindFunc( location, "hotspot_expose" ) );
			}
			return true;
		}

		// Function from file: igniter.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				return this.spark();
			} else {
				return null;
			}
		}

		// Function from file: igniter.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Device_DetectiveScanner ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				this.add_fingerprint( b );
				this.disable = !this.disable;

				if ( this.disable ) {
					((Ent_Static)b).visible_message( "<span class='warning'>" + b + " has disabled the " + this + "!</span>", "<span class='warning'>You disable the connection to the " + this + ".</span>" );
					this.icon_state = "" + this.base_state + "-d";
				}

				if ( !this.disable ) {
					((Ent_Static)b).visible_message( "<span class='warning'>" + b + " has reconnected the " + this + "!</span>", "<span class='warning'>You fix the connection to the " + this + ".</span>" );

					if ( Lang13.Bool( this.powered() ) ) {
						this.icon_state = "" + this.base_state;
					} else {
						this.icon_state = "" + this.base_state + "-p";
					}
				}
			}
			return null;
		}

		// Function from file: igniter.dm
		public override dynamic power_change(  ) {
			
			if ( Lang13.Bool( this.powered() ) && !this.disable ) {
				this.stat &= 65533;
				this.icon_state = "" + this.base_state;
			} else {
				this.stat |= 65533;
				this.icon_state = "" + this.base_state + "-p";
			}
			return null;
		}

		// Function from file: igniter.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.igniters.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
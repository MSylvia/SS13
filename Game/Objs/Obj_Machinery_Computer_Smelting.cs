// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Smelting : Obj_Machinery_Computer {

		public int frequency = 1367;
		public dynamic smelter_tag = null;
		public RadioFrequency radio_connection = null;
		public dynamic smelter_data = null;
		public bool show_all_ores = false;
		public dynamic id = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/smeltcomp";
			this.light_color = "#64C864";
			this.icon_state = "computer_generic";
		}

		// Function from file: machine_processing.dm
		public Obj_Machinery_Computer_Smelting ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.ticker != null && GlobalVars.ticker.current_state == 3 ) {
				this.initialize();
			}
			return;
		}

		// Function from file: machine_processing.dm
		public override string multitool_menu( dynamic user = null, dynamic P = null ) {
			return new Txt( "\n	<ul>\n		<li><b>Frequency:</b> <a href=\"?src=" ).Ref( this ).str( ";set_freq=-1\">" ).item( GlobalFuncs.format_frequency( this.frequency ) ).str( " GHz</a> (<a href=\"?src=" ).Ref( this ).str( ";set_freq=" ).item( 1439 ).str( "\">Reset</a>)</li>\n		<li>" ).item( this.format_tag( "ID Tag", "smelter_tag" ) ).str( "</li>\n	</ul>\n	" ).ToString();
		}

		// Function from file: machine_processing.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			
			if ( ( this.stat & 3 ) != 0 || !( signal != null ) || !Lang13.Bool( ((dynamic)signal).data["tag"] ) || ((dynamic)signal).data["tag"] != this.smelter_tag ) {
				return false;
			}

			if ( ((dynamic)signal).data["type"] != "smelter" ) {
				return false;
			}
			this.smelter_data = ((dynamic)signal).data;
			this.updateUsrDialog();
			return false;
		}

		// Function from file: machine_processing.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			
			if ( a is Obj_Item_Weapon_Card_Id ) {
				
				if ( Lang13.Bool( this.smelter_data ) && Convert.ToInt32( this.smelter_data["credits"] ) == -1 ) {
					return 1;
				}

				if ( Lang13.Bool( this.id ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='notify'>There is already an ID in the console!</span>" );
					return 1;
				}

				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.id = a;
					this.updateUsrDialog();
					return 1;
				}
			}
			_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			return _default;
		}

		// Function from file: machine_processing.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic _default = null;

			dynamic I = null;

			_default = base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}
			Task13.User.set_machine( this );
			this.add_fingerprint( Task13.User );

			if ( Lang13.Bool( href_list["close"] ) ) {
				Task13.User.unset_machine(  );
				return 1;
			}

			if ( Lang13.Bool( href_list["toggle_power"] ) ) {
				this.send_signal( new ByTable().Set( "toggle_power", 1 ) );
				this.request_status();
				return 1;
			}

			if ( Lang13.Bool( href_list["toggle_ores"] ) ) {
				this.show_all_ores = !this.show_all_ores;
				return 1;
			}

			if ( Lang13.Bool( href_list["eject"] ) ) {
				
				if ( !Lang13.Bool( this.id ) ) {
					return _default;
				}
				((Ent_Dynamic)this.id).forceMove( GlobalFuncs.get_turf( this ) );

				if ( !Lang13.Bool( Task13.User.get_active_hand() ) ) {
					Task13.User.put_in_hands( this.id );
				}
				this.id = null;
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["claim"] ) ) {
				this.send_signal( new ByTable().Set( "claimcredits", this.get_card_account( this.id ) ) );
				this.request_status();
				return 1;
			}

			if ( Lang13.Bool( href_list["insert"] ) ) {
				
				if ( Lang13.Bool( this.smelter_data ) && Convert.ToInt32( this.smelter_data["credits"] ) == -1 ) {
					return 1;
				}

				if ( Lang13.Bool( this.id ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='notify'>There is already an ID in the console!</span>" );
					return 1;
				}
				I = Task13.User.get_active_hand();

				if ( I is Obj_Item_Weapon_Card_Id ) {
					
					if ( Task13.User.drop_item( I, this ) ) {
						this.id = I;
					}
				}
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["inc_priority"] ) ) {
				this.send_signal( new ByTable().Set( "inc_priority", String13.ParseNumber( href_list["inc_priority"] ) ) );
				this.updateUsrDialog();
				return 1;
			}

			if ( Lang13.Bool( href_list["dec_priority"] ) ) {
				this.send_signal( new ByTable().Set( "dec_priority", String13.ParseNumber( href_list["dec_priority"] ) ) );
				this.updateUsrDialog();
				return 1;
			}
			return _default;
		}

		// Function from file: machine_processing.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			dynamic ore_id = null;
			ByTable recipes = null;
			SmeltingRecipe R = null;
			dynamic idx = null;
			Browser popup = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				
				if ( user.machine == this ) {
					((Mob)user).unset_machine(  );
				}
				return null;
			}

			if ( !Lang13.Bool( this.smelter_data ) ) {
				this.request_status();

				if ( !Lang13.Bool( this.smelter_data ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>Unable to find an ore processing machine.</span>" );

					if ( user.machine == this ) {
						((Mob)user).unset_machine(  );
					}
					return null;
				}
			}
			((Mob)user).set_machine( this );
			dat = @"
	<table>
		<tr>
			<th>Mineral</th>
			<th>Amount</th>
			<th colspan=""2"">Controls</th>
		</tr>";

			foreach (dynamic _a in Lang13.Enumerate( this.smelter_data["ore"] )) {
				ore_id = _a;
				

				if ( !Lang13.Bool( this.smelter_data["ore"][ore_id]["amount"] ) && !this.show_all_ores ) {
					continue;
				}
				dat += "\n		<tr>\n			<td>" + this.smelter_data["ore"][ore_id]["name"] + "</td>\n			<td>" + this.smelter_data["ore"][ore_id]["amount"] + "</td>\n		</tr>\n		";
			}
			dat += "</table><br>";
			dat += new Txt( "Currently displaying " ).item( ( this.show_all_ores ? "all ore types" : "only available ore types" ) ).str( ". <A href='?src=" ).Ref( this ).str( ";toggle_ores=1'>[" ).item( ( this.show_all_ores ? "show less" : "show more" ) ).str( "]</a><hr>" ).ToString();
			dat += @"
	<b>Available recipes:</b><br>
	<table>
		<tr>
			<th>Output</th>
			<th colspan=""2"">Priority</th>
		</tr>
	";
			recipes = this.smelter_data["recipes"];

			foreach (dynamic _b in Lang13.Enumerate( recipes, typeof(SmeltingRecipe) )) {
				R = _b;
				
				idx = recipes.Find( R );
				dat += "\n		<tr>\n			<td>" + R.name + "</td>\n		";

				if ( idx != 1 ) {
					dat += new Txt( "\n			<td><a href='?src=" ).Ref( this ).str( ";inc_priority=" ).item( idx ).str( "'>+</a></td>\n			" ).ToString();
				}

				if ( idx != recipes.len ) {
					dat += new Txt( "\n			<td><a href='?src=" ).Ref( this ).str( ";dec_priority=" ).item( idx ).str( "'>-</a></td>\n			" ).ToString();
				}
				dat += "\n		</tr>\n		";
			}
			dat += new Txt( "\n	</table><hr>\n	The ore processor is currently <A href='?src=" ).Ref( this ).str( ";toggle_power=1' class='" ).item( ( Lang13.Bool( this.smelter_data["on"] ) ? "linkOn" : "linkDanger" ) ).str( "'>" ).item( ( Lang13.Bool( this.smelter_data["on"] ) ? "processing" : "disabled" ) ).str( "</a>\n	" ).ToString();

			if ( Convert.ToInt32( this.smelter_data["credits"] ) != -1 ) {
				dat += "<br>Current unclaimed credits: $" + GlobalFuncs.num2septext( this.smelter_data["credits"] ) + "<br>";

				if ( this.id is Obj_Item_Weapon_Card_Id ) {
					dat += new Txt( "You have " ).item( ((Obj_Item_Weapon_Card_Id)this.id).GetBalance( true ) ).str( " credits in your bank account. <A href='?src=" ).Ref( this ).str( ";eject=1'>Eject ID.</A><br>" ).ToString();
					dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";claim=1'>Claim points.</A><br>" ).ToString();
				} else {
					dat += new Txt( "No ID inserted.  <A href='?src=" ).Ref( this ).str( ";insert=1'>Insert ID.</A><br>" ).ToString();
				}
			} else if ( Lang13.Bool( this.id ) ) {
				dat += new Txt( "<br><A href='?src=" ).Ref( this ).str( ";eject=1'>Eject ID.</A>" ).ToString();
			}
			popup = new Browser( user, "console_processing_unit", this.name, 400, 500, this );
			popup.set_content( dat );
			popup.open();
			return null;
		}

		// Function from file: machine_processing.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.add_fingerprint( a );

			if ( ( this.stat & 3 ) != 0 && Lang13.Bool( this.id ) ) {
				((Ent_Dynamic)this.id).forceMove( GlobalFuncs.get_turf( this ) );

				if ( !Lang13.Bool( ((Mob)a).get_active_hand() ) ) {
					((Mob)a).put_in_hands( this.id );
				}
				GlobalFuncs.to_chat( a, new Txt( "<span class='notify'>You pry the ID card out of " ).the( this ).item().str( "</span>" ).ToString() );
				this.id = null;
			}
			this.interact( a );
			return null;
		}

		// Function from file: machine_processing.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			this.interact( user );
			return null;
		}

		// Function from file: machine_processing.dm
		public override dynamic process(  ) {
			this.updateUsrDialog();
			return null;
		}

		// Function from file: machine_processing.dm
		public void request_status(  ) {
			this.smelter_data = null;
			this.send_signal( new ByTable().Set( "sigtype", "status" ) );
			return;
		}

		// Function from file: machine_processing.dm
		public void send_signal( ByTable data = null ) {
			Game_Data signal = null;

			
			if ( !( this.frequency != 0 ) ) {
				return;
			}
			signal = GlobalFuncs.getFromPool( typeof(Signal) );
			((dynamic)signal).data["tag"] = this.smelter_tag;
			((dynamic)signal).transmission_method = 1;
			((dynamic)signal).source = this;
			((dynamic)signal).data += data;
			this.radio_connection.post_signal( this, signal );
			return;
		}

		// Function from file: machine_processing.dm
		public void set_frequency( int new_frequency = 0 ) {
			GlobalVars.radio_controller.remove_object( this, this.frequency );
			this.frequency = new_frequency;

			if ( this.frequency != 0 ) {
				this.radio_connection = GlobalVars.radio_controller.add_object( this, this.frequency );
			}
			return;
		}

		// Function from file: machine_processing.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			this.set_frequency( this.frequency );
			return false;
		}

	}

}
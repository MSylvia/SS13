// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Spray_Chemsprayer : Obj_Item_Weapon_ReagentContainers_Spray {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "chemsprayer";
			this.volume = 600;
			this.origin_tech = "combat=3;materials=3;engineering=3;syndicate=5";
			this.delay_spraying = false;
			this.icon = "icons/obj/gun.dmi";
			this.icon_state = "chemsprayer";
		}

		public Obj_Item_Weapon_ReagentContainers_Spray_Chemsprayer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: spray.dm
		public override void make_puff( dynamic target = null, dynamic user = null ) {
			string mix_color = null;
			ByTable Sprays = null;
			int? i = null;
			Game_Data D = null;
			int direction = 0;
			dynamic T = null;
			Tile T1 = null;
			Tile T2 = null;
			ByTable the_targets = null;
			int? i2 = null;
			Obj_Effect_Decal_ChemicalPuff D2 = null;
			dynamic my_target = null;
			int? j = null;

			mix_color = GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
			Sprays = new ByTable( 3 );
			i = null;
			i = 1;

			while (( i ??0) <= 3) {
				
				if ( ( this.reagents.total_volume ??0) < 1 ) {
					break;
				}
				D = GlobalFuncs.getFromPool( typeof(Obj_Effect_Decal_ChemicalPuff), GlobalFuncs.get_turf( this ), mix_color, this.amount_per_transfer_from_this );
				((Reagents)this.reagents).trans_to( D, this.amount_per_transfer_from_this );
				Sprays[i] = D;
				i++;
			}
			direction = Map13.GetDistance( this, target );
			T = GlobalFuncs.get_turf( target );
			T1 = Map13.GetStep( T, Num13.Rotate( direction, 90 ) );
			T2 = Map13.GetStep( T, Num13.Rotate( direction, -90 ) );
			the_targets = new ByTable(new object [] { T, T1, T2 });
			i2 = null;
			i2 = 1;

			while (( i2 ??0) <= Sprays.len) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					D2 = Sprays[i2];

					if ( !( D2 != null ) ) {
						
					} else {
						my_target = Rand13.PickFromTable( the_targets );
						the_targets.Remove( my_target );
						j = null;
						j = 1;

						while (( j ??0) <= Rand13.Int( 6, 8 )) {
							Map13.StepTowardsSimple( D2, my_target );
							D2.react( 0 );
							Task13.Sleep( 2 );
							j++;
						}
						GlobalFuncs.returnToPool( D2 );
						return;
					}
				}));
				i2++;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/spray2.ogg", 50, 1, -6 );
			return;
		}

	}

}
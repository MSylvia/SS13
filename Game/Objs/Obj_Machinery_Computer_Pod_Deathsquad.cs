// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Pod_Deathsquad : Obj_Machinery_Computer_Pod {

		public bool teleporter_dest = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.id_tags = new ByTable(new object [] { "ASSAULT0", "ASSAULT1", "ASSAULT2", "ASSAULT3" });
			this.circuit = typeof(Obj_Item_Weapon_Circuitboard_Pod_Deathsquad);
		}

		public Obj_Machinery_Computer_Pod_Deathsquad ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: pod.dm
		public override void launch_sequence( dynamic ident_tag = null ) {
			bool anydriver = false;
			Obj_Machinery_MassDriver M = null;
			Obj_Structure_DeathsquadTele D = null;
			Obj_Machinery_Door_Poddoor M2 = null;
			Obj_Machinery_MassDriver M3 = null;
			Obj_Machinery_Door_Poddoor M4 = null;
			Obj_Structure_DeathsquadTele D2 = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}
			anydriver = false;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mass_drivers, typeof(Obj_Machinery_MassDriver) )) {
				M = _a;
				

				if ( M.z != this.z ) {
					continue;
				}

				if ( M.id_tag == ident_tag ) {
					anydriver = true;
				}
			}

			if ( !anydriver ) {
				this.visible_message( "Cannot locate any mass driver of that ID. Cancelling firing sequence!" );
				return;
			}

			if ( this.icon_state != "old" ) {
				Icon13.Flick( "mass_drivers_timing", this );
			}

			if ( this.teleporter_dest ) {
				
				foreach (dynamic _b in Lang13.Enumerate( typeof(Game13), typeof(Obj_Structure_DeathsquadTele) )) {
					D = _b;
					

					if ( D.z != this.z ) {
						continue;
					}

					if ( D.id_tag == ident_tag ) {
						D.icon_state = "tele1";
						D.ztarget = this.teleporter_dest;
						D.density = true;
					}
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.poddoors, typeof(Obj_Machinery_Door_Poddoor) )) {
				M2 = _c;
				

				if ( M2.z != this.z ) {
					continue;
				}

				if ( M2.id_tag == ident_tag ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						M2.open();
						return;
					}));
				}
			}
			Task13.Sleep( 20 );

			foreach (dynamic _d in Lang13.Enumerate( GlobalVars.mass_drivers, typeof(Obj_Machinery_MassDriver) )) {
				M3 = _d;
				

				if ( M3.z != this.z ) {
					continue;
				}

				if ( M3.id_tag == ident_tag ) {
					M3.drive();
				}
			}
			Task13.Sleep( 50 );

			foreach (dynamic _e in Lang13.Enumerate( GlobalVars.poddoors, typeof(Obj_Machinery_Door_Poddoor) )) {
				M4 = _e;
				

				if ( M4.z != this.z ) {
					continue;
				}

				if ( M4.id_tag == ident_tag ) {
					Task13.Schedule( 0, (Task13.Closure)(() => {
						M4.close();
						return;
					}));
				}
			}

			foreach (dynamic _f in Lang13.Enumerate( typeof(Game13), typeof(Obj_Structure_DeathsquadTele) )) {
				D2 = _f;
				

				if ( D2.z != this.z ) {
					continue;
				}

				if ( D2.id_tag == ident_tag ) {
					D2.icon_state = "tele0";
					D2.density = false;
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Borgupload : Obj_Machinery_Computer {

		public dynamic current = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/borgupload";
			this.light_color = "#555555";
			this.icon_state = "command";
		}

		public Obj_Machinery_Computer_Borgupload ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: law.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Mob_Dead ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='rose'>Your ghostly hand goes right through!</span>" );
				return null;
			}

			if ( ( this.stat & 2 ) != 0 ) {
				GlobalFuncs.to_chat( Task13.User, "The upload computer has no power!" );
				return null;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				GlobalFuncs.to_chat( Task13.User, "The upload computer is broken!" );
				return null;
			}
			this.current = GlobalFuncs.freeborg();

			if ( !Lang13.Bool( this.current ) ) {
				GlobalFuncs.to_chat( Task13.User, "No free cyborgs detected." );
			} else {
				GlobalFuncs.to_chat( Task13.User, "" + this.current.name + " selected for law changes." );
			}
			return null;
		}

		// Function from file: law.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Mob_Living_Silicon_Robot_Mommi mommi = null;
			Mob_Living_Silicon_Robot_Mommi mommi2 = null;
			dynamic frame = null;
			bool failed = false;
			int? i = null;
			dynamic M = null;

			
			if ( a is Obj_Item_Weapon_AiModule ) {
				
				if ( this.current is Mob_Living_Silicon_Robot_Mommi ) {
					mommi = this.current;

					if ( mommi.keeper ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>" + this.current + " is operating in KEEPER mode and cannot be accessed via control signals.</span>" );
						return base.attackby( (object)(a), (object)(b), (object)(c) );
					}
				}
				this.install_module( a, b );
			} else if ( a is Obj_Item_Weapon_PlanningFrame ) {
				
				if ( ( this.stat & 2 ) != 0 ) {
					GlobalFuncs.to_chat( b, "The upload computer has no power!" );
					return null;
				}

				if ( ( this.stat & 1 ) != 0 ) {
					GlobalFuncs.to_chat( b, "The upload computer is broken!" );
					return null;
				}

				if ( !Lang13.Bool( this.current ) ) {
					GlobalFuncs.to_chat( b, "You haven't selected a robot to transmit laws to!" );
					return null;
				}

				if ( Convert.ToInt32( this.current.stat ) == 2 || Lang13.Bool( this.current.emagged ) ) {
					GlobalFuncs.to_chat( b, "Upload failed. No signal is being detected from the robot." );
					return null;
				}

				if ( this.current is Mob_Living_Silicon_Robot_Mommi ) {
					mommi2 = this.current;

					if ( mommi2.keeper ) {
						GlobalFuncs.to_chat( b, "Upload failed. No signal is being detected from the cyborg." );
						return null;
					}
				} else if ( Lang13.Bool( this.current.connected_ai ) ) {
					GlobalFuncs.to_chat( b, "Upload failed. The robot is slaved to an AI." );
				} else {
					frame = a;

					if ( frame.modules.len > 0 ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You load " ).the( frame ).item().str( " into " ).the( this ).item().str( "...</span>" ).ToString() );

						if ( GlobalFuncs.do_after( b, this, 50 ) ) {
							failed = false;
							i = null;
							i = 1;

							while (( i ??0) <= frame.modules.len) {
								M = frame.modules[i];
								GlobalFuncs.to_chat( b, "<span class='notice'>Running " + M + "...</span>" );

								if ( !this.install_module( M, b ) ) {
									failed = true;
									break;
								}
								i++;
							}

							if ( !failed ) {
								this.announce_law_changes();
							}
						}
					} else {
						GlobalFuncs.to_chat( b, "<span class='warning'>It's empty, doofus.</span>" );
					}
				}
			} else {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: law.dm
		public bool install_module( dynamic M = null, dynamic user = null ) {
			Mob_Living_Silicon_Robot_Mommi mommi = null;

			
			if ( ( this.stat & 2 ) != 0 ) {
				GlobalFuncs.to_chat( Task13.User, "The upload computer has no power!" );
				return false;
			}

			if ( ( this.stat & 1 ) != 0 ) {
				GlobalFuncs.to_chat( Task13.User, "The upload computer is broken!" );
				return false;
			}

			if ( !Lang13.Bool( this.current ) ) {
				GlobalFuncs.to_chat( Task13.User, "You haven't selected a robot to transmit laws to!" );
				return false;
			}

			if ( Convert.ToInt32( this.current.stat ) == 2 || Lang13.Bool( this.current.emagged ) ) {
				GlobalFuncs.to_chat( Task13.User, "Upload failed. No signal is being detected from the robot." );
				return false;
			}

			if ( this.current is Mob_Living_Silicon_Robot_Mommi ) {
				mommi = this.current;

				if ( mommi.keeper ) {
					GlobalFuncs.to_chat( Task13.User, "Upload failed. No signal is being detected from the cyborg." );
					return false;
				}
			} else if ( Lang13.Bool( this.current.connected_ai ) ) {
				GlobalFuncs.to_chat( Task13.User, "Upload failed. The robot is slaved to an AI." );
				return false;
			} else {
				
				if ( !Lang13.Bool( M.validate( this.current.laws, this.current, user ) ) ) {
					return false;
				}

				if ( !((Obj_Item_Weapon_AiModule)M).upload( this.current.laws, this.current, user ) ) {
					return false;
				}
				this.announce_law_changes();
			}
			return true;
		}

		// Function from file: law.dm
		public void announce_law_changes(  ) {
			GlobalFuncs.to_chat( this.current, "These are your laws now:" );
			this.current.show_laws();
			GlobalFuncs.to_chat( Task13.User, "<span class='notice'>Upload complete. The robot's laws have been modified.</span>" );
			return;
		}

	}

}
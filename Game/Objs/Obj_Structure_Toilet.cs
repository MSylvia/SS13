// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Toilet : Obj_Structure {

		public bool state = false;
		public int open = 0;
		public bool cistern = false;
		public double w_items = 0;
		public Ent_Static swirlie = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/watercloset.dmi";
			this.icon_state = "toilet00";
		}

		// Function from file: watercloset.dm
		public Obj_Structure_Toilet ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.open = Num13.Floor( Rand13.Int( 0, 1 ) );
			this.update_icon();
			return;
		}

		// Function from file: watercloset.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic R = null;
			Obj_Structure_Centrifuge C = null;
			dynamic G = null;
			Ent_Static GM = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You " ).item( ( Lang13.Bool( this.anchored ) ? "un" : "" ) ).str( "bolt " ).the( this ).item().str( "'s grounding lines.</span>" ).ToString() );
				this.anchored = !Lang13.Bool( this.anchored );
			}

			if ( this.anchored == 0 ) {
				return null;
			}

			if ( this.open != 0 && this.cistern && !this.state && a is Obj_Item_Stack_Rods ) {
				R = a;

				if ( Convert.ToDouble( R.amount ) < 2 ) {
					return null;
				}
				GlobalFuncs.to_chat( b, "<span class='notice'>You add the rods to the toilet, creating flood avenues.</span>" );
				R.use( 2 );
				this.state = true;
				return null;
			}

			if ( this.open != 0 && this.cistern && this.state && a is Obj_Item_Weapon_Paper ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You create a filter with the paper and insert it.</span>" );
				C = new Obj_Structure_Centrifuge( this.loc );
				C.dir = this.dir;
				GlobalFuncs.qdel( a );
				GlobalFuncs.qdel( this );
				return null;
			}

			if ( a is Obj_Item_Weapon_Crowbar ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You start to " + ( this.cistern ? "replace the lid on the cistern" : "lift the lid off the cistern" ) + ".</span>" );
				GlobalFuncs.playsound( this.loc, "sound/effects/stonedoor_openclose.ogg", 50, 1 );

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					((Ent_Static)b).visible_message( "<span class='notice'>" + b + " " + ( this.cistern ? "replaces the lid on the cistern" : "lifts the lid off the cistern" ) + "!</span>", "<span class='notice'>You " + ( this.cistern ? "replace the lid on the cistern" : "lift the lid off the cistern" ) + "!</span>", "You hear grinding porcelain." );
					this.cistern = !this.cistern;
					this.update_icon();
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Grab ) {
				G = a;

				if ( G.affecting is Mob_Living ) {
					GM = G.affecting;

					if ( Convert.ToDouble( G.state ) > 1 ) {
						
						if ( !( GM.loc != null ) == GlobalFuncs.get_turf( this ) ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>" + GM.name + " needs to be on the toilet.</span>" );
							return null;
						}

						if ( this.open != 0 && !( this.swirlie != null ) ) {
							((Ent_Static)b).visible_message( "<span class='danger'>" + b + " starts to give " + GM.name + " a swirlie!</span>", "<span class='notice'>You start to give " + GM.name + " a swirlie!</span>" );
							this.swirlie = GM;

							if ( GlobalFuncs.do_after( b, 30, 5, 0 ) ) {
								((Ent_Static)b).visible_message( "<span class='danger'>" + b + " gives " + GM.name + " a swirlie!</span>", "<span class='notice'>You give " + GM.name + " a swirlie!</span>", "You hear a toilet flushing." );

								if ( !Lang13.Bool( ((dynamic)GM).v_internal ) ) {
									((dynamic)GM).adjustOxyLoss( 5 );
								}
							}
							this.swirlie = null;
						} else {
							((Ent_Static)b).visible_message( "<span class='danger'>" + b + " slams " + GM.name + " into the " + this + "!</span>", "<span class='notice'>You slam " + GM.name + " into the " + this + "!</span>" );
							((dynamic)GM).adjustBruteLoss( 8 );
						}
					} else {
						GlobalFuncs.to_chat( b, "<span class='notice'>You need a tighter grip.</span>" );
					}
				}
			}

			if ( this.cistern ) {
				
				if ( Convert.ToDouble( a.w_class ) > 3 ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).The( a ).item().str( " does not fit.</span>" ).ToString() );
					return null;
				}

				if ( this.w_items + Convert.ToDouble( a.w_class ) > 5 ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>The cistern is full.</span>" );
					return null;
				}

				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.w_items += Convert.ToDouble( a.w_class );
					GlobalFuncs.to_chat( b, new Txt( "You carefully place " ).the( a ).item().str( " into the cistern." ).ToString() );
					return null;
				}
			}
			return null;
		}

		// Function from file: watercloset.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.icon_state = "toilet" + this.open + this.cistern;
			return null;
		}

		// Function from file: watercloset.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic I = null;

			
			if ( this.swirlie != null ) {
				Task13.User.visible_message( "<span class='danger'>" + a + " slams the toilet seat onto " + this.swirlie.name + "'s head!</span>", "<span class='notice'>You slam the toilet seat onto " + this.swirlie.name + "'s head!</span>", "You hear reverberating porcelain." );
				((dynamic)this.swirlie).adjustBruteLoss( 8 );
				return null;
			}

			if ( this.cistern && !( this.open != 0 ) ) {
				
				if ( !( this.contents.len != 0 ) ) {
					GlobalFuncs.to_chat( a, "<span class='notice'>The cistern is empty.</span>" );
					return null;
				} else {
					I = Rand13.PickFromTable( this.contents );

					if ( a is Mob_Living_Carbon_Human ) {
						((Mob)a).put_in_hands( I );
					} else {
						I.loc = GlobalFuncs.get_turf( this );
					}
					GlobalFuncs.to_chat( a, new Txt( "<span class='notice'>You find " ).a( I ).item().str( " in the cistern.</span>" ).ToString() );
					this.w_items -= Convert.ToDouble( I.w_class );
					return null;
				}
			}
			this.open = !( this.open != 0 ) ?1:0;
			this.update_icon();
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Switchtool : Obj_Item_Weapon {

		public ByTable stored_modules = new ByTable()
											.Set( "/obj/item/weapon/screwdriver:screwdriver", null )
											.Set( "/obj/item/weapon/wrench:wrench", null )
											.Set( "/obj/item/weapon/wirecutters:wirecutters", null )
											.Set( "/obj/item/weapon/crowbar:crowbar", null )
											.Set( "/obj/item/weapon/chisel:chisel", null )
											.Set( "/obj/item/device/multitool:multitool", null )
										;
		public Obj_Item deployed = null;
		public Type removing_item = typeof(Obj_Item_Weapon_Screwdriver);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 3;
			this.w_class = 2;
			this.throwforce = 6;
			this.throw_speed = 3;
			this.throw_range = 6;
			this.starting_materials = new ByTable().Set( "$iron", 15000 );
			this.w_type = 4;
			this.melt_temperature = 1783.1500244140625;
			this.origin_tech = "materials=9;bluespace=5";
			this.icon = "icons/obj/switchtool.dmi";
			this.icon_state = "switchtool";
		}

		// Function from file: switchtool.dm
		public Obj_Item_Weapon_Switchtool ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic module = null;
			Type new_type = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
				module = _a;
				
				new_type = Lang13.FindClass( this.get_module_type( module ) );
				this.stored_modules[module] = Lang13.Call( new_type, this );
			}
			return;
		}

		// Function from file: switchtool.dm
		public bool choose_deploy( dynamic user = null ) {
			ByTable potential_modules = null;
			dynamic module = null;
			dynamic chosen_module = null;
			dynamic true_module = null;
			dynamic checkmodule = null;

			potential_modules = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
				module = _a;
				

				if ( Lang13.Bool( this.stored_modules[module] ) ) {
					potential_modules.Add( this.get_module_name( module ) );
				}
			}

			if ( !( potential_modules.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "No modules to deploy." );
				return false;
			} else if ( potential_modules.len == 1 ) {
				this.deploy( potential_modules[1] );
				GlobalFuncs.to_chat( user, new Txt( "You deploy " ).the( potential_modules[1] ).item().ToString() );
				return true;
			} else {
				chosen_module = Interface13.Input( user, "What do you want to deploy?", "" + this, "Cancel", potential_modules, InputType.Any );

				if ( chosen_module != "Cancel" ) {
					true_module = "";

					foreach (dynamic _b in Lang13.Enumerate( this.stored_modules )) {
						checkmodule = _b;
						

						if ( this.get_module_name( checkmodule ) == chosen_module ) {
							true_module = checkmodule;
							break;
						}
					}
					this.deploy( true_module );
					GlobalFuncs.to_chat( user, new Txt( "You deploy " ).the( this.deployed ).item().str( "." ).ToString() );
					return true;
				}
				return false;
			}
			return false;
		}

		// Function from file: switchtool.dm
		public virtual void deploy( dynamic module = null ) {
			Interface13.Stat( null, this.stored_modules.Contains( module ) );

			if ( !false ) {
				return;
			}

			if ( !Lang13.Bool( this.stored_modules[module] ) ) {
				return;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/switchblade.ogg", 10, 1 );
			this.deployed = this.stored_modules[module];
			this.overlays.Add( this.get_module_name( module ) );
			this.w_class = Num13.MaxInt( Convert.ToInt32( this.w_class ), Convert.ToInt32( this.deployed.w_class ) );
			return;
		}

		// Function from file: switchtool.dm
		public virtual void undeploy(  ) {
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/switchblade.ogg", 10, 1 );
			this.deployed = null;
			this.overlays.len = 0;
			this.w_class = Lang13.Initial( this, "w_class" );
			return;
		}

		// Function from file: switchtool.dm
		public bool remove_module( dynamic user = null ) {
			dynamic module = null;

			this.deployed.loc = GlobalFuncs.get_turf( user );

			foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
				module = _a;
				

				if ( this.stored_modules[module] == this.deployed ) {
					this.stored_modules[module] = null;
					break;
				}
			}
			GlobalFuncs.to_chat( user, new Txt( "You successfully remove " ).the( this.deployed ).item().str( " from " ).the( this ).item().str( "." ).ToString() );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/screwdriver.ogg", 10, 1 );
			this.undeploy();
			return true;
		}

		// Function from file: switchtool.dm
		public bool add_module( dynamic used_item = null, dynamic user = null ) {
			dynamic module = null;
			Type type_path = null;

			
			if ( !Lang13.Bool( used_item ) || !Lang13.Bool( user ) ) {
				return false;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
				module = _a;
				
				type_path = Lang13.FindClass( this.get_module_type( module ) );

				if ( Lang13.Bool( ((dynamic)type_path).IsInstanceOfType( used_item ) ) ) {
					
					if ( Lang13.Bool( this.stored_modules[module] ) ) {
						GlobalFuncs.to_chat( user, new Txt().The( this ).item().str( " already has a " ).item( this.get_module_name( module ) ).str( "." ).ToString() );
						return false;
					} else if ( Lang13.Bool( user.drop_item( used_item, this ) ) ) {
						this.stored_modules[module] = used_item;
						GlobalFuncs.to_chat( user, new Txt( "You successfully load " ).the( used_item ).item().str( " into " ).the( this ).item().str( "'s " ).item( this.get_module_name( module ) ).str( " slot." ).ToString() );
						return true;
					}
				}
			}
			return false;
		}

		// Function from file: switchtool.dm
		public string get_formatted_modules(  ) {
			int counter = 0;
			string module_string = null;
			dynamic module = null;

			counter = 0;
			module_string = "";

			foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
				module = _a;
				
				counter++;

				if ( counter == this.stored_modules.len ) {
					module_string += new Txt( "and " ).a( this.get_module_name( module ) ).item().ToString();
				} else {
					module_string += new Txt().a( this.get_module_name( module ) ).item().str( ", " ).ToString();
				}
			}
			return module_string;
		}

		// Function from file: switchtool.dm
		public string get_module_name( dynamic module = null ) {
			return String13.SubStr( module, String13.FindIgnoreCase( module, ":", 1, 0 ) + 1, 0 );
		}

		// Function from file: switchtool.dm
		public string get_module_type( dynamic module = null ) {
			return String13.SubStr( module, 1, String13.FindIgnoreCase( module, ":", 1, 0 ) );
		}

		// Function from file: switchtool.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( ((dynamic)this.removing_item).IsInstanceOfType( a ) ) && this.deployed != null ) {
				return this.remove_module( b );
			}

			if ( this.add_module( a, b ) ) {
				return 1;
			} else {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}
		}

		// Function from file: switchtool.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !Lang13.Bool( user ) ) {
				return null;
			}

			if ( this.deployed != null ) {
				GlobalFuncs.to_chat( user, new Txt( "You store " ).the( this.deployed ).item().str( "." ).ToString() );
				this.undeploy();
			} else {
				this.choose_deploy( user );
			}
			return null;
		}

		// Function from file: switchtool.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( Task13.User, "This one is capable of holding " + this.get_formatted_modules() + "." );
			return null;
		}

		// Function from file: switchtool.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			dynamic module = null;

			
			if ( target is Obj_Item_Weapon_Storage ) {
				return false;
			}

			if ( this.deployed != null && proximity_flag == true ) {
				((Ent_Static)target).attackby( this.deployed, user );
				this.deployed.afterattack( target, user, proximity_flag, click_parameters );

				if ( this.deployed.loc != this ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.stored_modules )) {
						module = _a;
						

						if ( this.stored_modules[module] == this.deployed ) {
							this.stored_modules[module] = null;
						}
					}
					this.undeploy();
				}
				return true;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Anomaly_GasChromatography : Obj_Machinery_Anomaly {

		// Function from file: analysis_gas_chromatography.dm
		public Obj_Machinery_Anomaly_GasChromatography ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Anom_Gas(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: analysis_gas_chromatography.dm
		public override string ScanResults(  ) {
			string results = null;
			dynamic scanned_sample = null;
			string carrier = null;
			int num_reagents = 0;
			Reagent A = null;
			Reagent R = null;
			int specifity = 0;
			int num_found = 0;
			int? index = null;
			dynamic find = null;

			results = "The scan was inconclusive. Check sample integrity and carrier consistency.";
			num_reagents = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.held_container.reagents.reagent_list, typeof(Reagent) )) {
				A = _a;
				
				R = A;

				if ( R is Reagent_AnalysisSample ) {
					scanned_sample = R.data;
				} else {
					carrier = R.id;
				}
				num_reagents++;
			}

			if ( num_reagents == 2 && Lang13.Bool( scanned_sample ) ) {
				specifity = this.GetResultSpecifity( scanned_sample, carrier );
				results = "Chromatography partitioning analysis over carrier (" + carrier + ") indicates the following elements present (" + specifity * 100 + "% accuracy):<br><br>";
				num_found = 0;
				index = null;
				index = 1;

				while (( index ??0) <= scanned_sample.find_presence.len) {
					find = scanned_sample.find_presence[index];

					if ( Lang13.Bool( find ) && Rand13.PercentChance( specifity * 100 ) ) {
						results += " - " + GlobalVars.finds_as_strings[index] + "<br>";
						num_found++;
					}
					index++;
				}

				if ( !( num_found != 0 ) ) {
					results = "Chromatography partitioning results over carrier (" + carrier + ") to determine elemental makeup were inconclusive.<br>";
				}

				if ( !Lang13.Bool( carrier ) ) {
					results += "<br>No carrier detected, scan accuracy affected.<br>";
				}
			}
			return results;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Kitchen_Utensil_Knife : Obj_Item_Weapon_Kitchen_Utensil {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 10;
			this.throwforce = 10;
			this.sharpness = 1.2;
			this.melt_temperature = 1783.1500244140625;
			this.icon_state = "knife";
		}

		public Obj_Item_Weapon_Kitchen_Utensil_Knife ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: kitchen.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( Lang13.Bool( user.mutations.Contains( 5 ) ) && Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You accidentally cut yourself with the " + this + ".</span>" );
				((Mob_Living)user).take_organ_damage( 20 );
				return null;
			}
			GlobalFuncs.playsound( this.loc, "sound/weapons/bladeslice.ogg", 50, 1, -1 );
			return base.attack( (object)(M), (object)(user), def_zone, eat_override );
		}

		// Function from file: kitchen.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			GlobalFuncs.to_chat( Map13.FetchViewers( null, user ), Rand13.Pick(new object [] { new Txt( "<span class='danger'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " wrists with the " ).item( this.name ).str( "! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString(), new Txt( "<span class='danger'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " throat with the " ).item( this.name ).str( "! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString(), new Txt( "<span class='danger'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " stomach open with the " ).item( this.name ).str( "! It looks like " ).he_she_it_they().str( "'s trying to commit seppuku.</span>" ).ToString() }) );
			return 1;
		}

	}

}
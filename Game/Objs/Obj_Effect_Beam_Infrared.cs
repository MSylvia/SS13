// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Beam_Infrared : Obj_Effect_Beam {

		public dynamic limit = null;
		public bool visible = false;
		public dynamic left = null;
		public Obj_Item_Device_Assembly_Infra assembly = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 0;
			this.icon = "icons/obj/projectiles.dmi";
			this.icon_state = "ibeam";
		}

		public Obj_Effect_Beam_Infrared ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: infrared.dm
		public override dynamic spawn_child(  ) {
			dynamic B = null;

			B = base.spawn_child();

			if ( !Lang13.Bool( B ) ) {
				return null;
			}
			B.visible = this.visible;
			return B;
		}

		// Function from file: infrared.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			this.hit();
			base.Bumped( AM, (object)(yes) );
			return false;
		}

		// Function from file: infrared.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			base.Crossed( O, (object)(X) );

			if ( O != null && O.density && !( O is Obj_Effect_Beam ) ) {
				this.hit();
			}
			return null;
		}

		// Function from file: infrared.dm
		public void set_visible( bool v = false ) {
			dynamic B = null;

			this.visible = v;

			if ( Lang13.Bool( this.next ) ) {
				B = this.next;
				((Obj_Effect_Beam_Infrared)B).set_visible( v );
			}
			return;
		}

		// Function from file: infrared.dm
		public void hit(  ) {
			
			if ( this.assembly != null ) {
				this.assembly.trigger_beam();
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Mineral_LaborPointsChecker : Obj_Machinery_Mineral {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/machines/mining_machines.dmi";
			this.icon_state = "console";
		}

		public Obj_Machinery_Mineral_LaborPointsChecker ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: laborstacker.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic prisoner_id = null;

			
			if ( A is Obj_Item_Weapon_Card_Id ) {
				
				if ( A is Obj_Item_Weapon_Card_Id_Prisoner ) {
					prisoner_id = A;
					user.WriteMsg( "<span class='notice'><B>ID: " + prisoner_id.registered_name + "</B></span>" );
					user.WriteMsg( "<span class='notice'>Points Collected:" + prisoner_id.points + "</span>" );
					user.WriteMsg( "<span class='notice'>Point Quota: " + prisoner_id.goal + "</span>" );
					user.WriteMsg( "<span class='notice'>Collect points by bringing smelted minerals to the Labor Shuttle stacking machine. Reach your quota to earn your release.</span>" );
				} else {
					user.WriteMsg( "<span class='warning'>Error: Invalid ID</span>" );
				}
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: laborstacker.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			a.__CallVerb("Examine", this );
			return null;
		}

	}

}
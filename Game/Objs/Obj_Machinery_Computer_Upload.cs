// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Upload : Obj_Machinery_Computer {

		public dynamic current = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "command";
		}

		public Obj_Machinery_Computer_Upload ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: law.dm
		public virtual bool can_upload_to( dynamic S = null ) {
			
			if ( Convert.ToInt32( S.stat ) == 2 || S.syndicate ) {
				return false;
			}
			return true;
		}

		// Function from file: law.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic M = null;
			dynamic currentloc = null;

			
			if ( A is Obj_Item_Weapon_AiModule ) {
				M = A;

				if ( ( this.stat & 11 ) != 0 ) {
					return null;
				}

				if ( !Lang13.Bool( this.current ) ) {
					user.WriteMsg( "<span class='caution'>You haven't selected anything to transmit laws to!</span>" );
					return null;
				}

				if ( !this.can_upload_to( this.current ) ) {
					user.WriteMsg( "<span class='caution'>Upload failed!</span> Check to make sure " + this.current.name + " is functioning properly." );
					this.current = null;
					return null;
				}
				currentloc = GlobalFuncs.get_turf( this.current );

				if ( Lang13.Bool( currentloc ) && user.z != currentloc.z ) {
					user.WriteMsg( "<span class='caution'>Upload failed!</span> Unable to establish a connection to " + this.current.name + ". You're too far away!" );
					this.current = null;
					return null;
				}
				((Obj_Item_Weapon_AiModule)M).install( this.current.laws, user );
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

	}

}
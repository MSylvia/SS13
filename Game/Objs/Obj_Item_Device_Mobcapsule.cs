// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Mobcapsule : Obj_Item_Device {

		public bool storage_capacity = true;
		public Mob capsuleowner = null;
		public bool tripped = false;
		public int colorindex = 0;
		public dynamic contained_mob = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.throwforce = 0;
			this.throw_speed = 4;
			this.throw_range = 20;
			this.icon = "icons/obj/mobcap.dmi";
			this.icon_state = "mobcap0";
		}

		public Obj_Item_Device_Mobcapsule ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mine_items.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.colorindex += 1;

			if ( this.colorindex >= 6 ) {
				this.colorindex = 0;
			}
			this.icon_state = "mobcap" + this.colorindex;
			this.update_icon();
			return null;
		}

		// Function from file: mine_items.dm
		public override bool pickup( Mob user = null ) {
			this.tripped = false;
			this.capsuleowner = user;
			return false;
		}

		// Function from file: mine_items.dm
		public void take_contents( dynamic user = null ) {
			Mob_Living_SimpleAnimal AM = null;
			Mob_Living_SimpleAnimal M = null;
			Mob_Living_SimpleAnimal H = null;
			dynamic things = null;

			
			foreach (dynamic _b in Lang13.Enumerate( this.loc, typeof(Mob_Living_SimpleAnimal) )) {
				AM = _b;
				

				if ( AM is Mob_Living_SimpleAnimal ) {
					M = AM;
					H = M;

					if ( !( H is Mob_Living_SimpleAnimal_Hostile ) ) {
						continue;
					}

					foreach (dynamic _a in Lang13.Enumerate( ((dynamic)H).friends )) {
						things = _a;
						

						if ( Lang13.Bool( ((dynamic)H).friends.Contains( this.capsuleowner ) ) ) {
							
							if ( this.insert( AM, user ) == -1 ) {
								break;
							}
						}
					}
				}
			}
			return;
		}

		// Function from file: mine_items.dm
		public void dump_contents( dynamic user = null ) {
			
			if ( Lang13.Bool( this.contained_mob ) ) {
				this.contained_mob.loc = this.loc;

				if ( Lang13.Bool( this.contained_mob.client ) ) {
					this.contained_mob.client.eye = this.contained_mob.client.mob;
					this.contained_mob.client.perspective = GlobalVars.MOB_PERSPECTIVE ?1:0;
				}
				this.contained_mob = null;
			}
			return;
		}

		// Function from file: mine_items.dm
		public int insert( Mob_Living_SimpleAnimal AM = null, dynamic user = null ) {
			Mob_Living_SimpleAnimal L = null;

			
			if ( Lang13.Bool( this.contained_mob ) ) {
				return -1;
			}

			if ( AM is Mob_Living ) {
				L = AM;

				if ( Lang13.Bool( L.locked_to ) ) {
					return 0;
				}

				if ( L.client != null ) {
					L.client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
					L.client.eye = this;
				}
			} else if ( !( AM is Obj_Item ) && !( AM is Obj_Effect_Dummy_Chameleon ) ) {
				return 0;
			} else if ( AM.density || Lang13.Bool( AM.anchored ) ) {
				return 0;
			}
			AM.loc = this;
			this.contained_mob = AM;
			return 1;
		}

		// Function from file: mine_items.dm
		public override dynamic throw_impact( dynamic hit_atom = null, dynamic speed = null, Mob user = null ) {
			base.throw_impact( (object)(hit_atom), (object)(speed), user );

			if ( !this.tripped ) {
				
				if ( Lang13.Bool( this.contained_mob ) ) {
					this.dump_contents( speed );
					this.tripped = true;
				} else {
					this.take_contents( speed );
					this.tripped = true;
				}
			}
			return null;
		}

		// Function from file: mine_items.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string name = null;

			
			if ( a is Obj_Item_Weapon_Pen ) {
				
				if ( b != this.capsuleowner ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>" ).The( this ).item().str( " briefly flashes an error.</span>" ).ToString() );
					return 0;
				}
				Task13.Schedule( 0, (Task13.Closure)(() => {
					name = GlobalFuncs.sanitize( Interface13.Input( "Choose a name for your friend.", "Name your friend", this.contained_mob.name, null, null, InputType.Str | InputType.Null ) );

					if ( Lang13.Bool( name ) ) {
						this.contained_mob.name = name;
						GlobalFuncs.to_chat( b, "<span class='notice'>Renaming successful, say hello to " + this.contained_mob + "</span>" );
					}
					return;
				}));
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

	}

}
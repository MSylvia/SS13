// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Detective : Obj_Item_Weapon_Gun_Projectile {

		public bool perfect = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.max_shells = 6;
			this.caliber = new ByTable().Set( "38", 1 ).Set( "357", 1 );
			this.ammo_type = "/obj/item/ammo_casing/c38";
		}

		public Obj_Item_Weapon_Gun_Projectile_Detective ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: revolver.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic CK = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_Screwdriver || a is Obj_Item_Weapon_ConversionKit ) {
				
				if ( a is Obj_Item_Weapon_ConversionKit ) {
					CK = a;

					if ( !Lang13.Bool( CK.open ) ) {
						GlobalFuncs.to_chat( b, "<span class='notice'>This " + CK.name + " is useless unless you open it first. </span>" );
						return null;
					}
				}

				if ( Lang13.Bool( this.caliber["38"] ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>You begin to reinforce the barrel of " + this + ".</span>" );

					if ( this.getAmmo() != 0 ) {
						this.afterattack( b, b );
						GlobalFuncs.playsound( b, this.fire_sound, 50, 1 );
						((Ent_Static)b).visible_message( "<span class='danger'>" + this + " goes off!</span>", "<span class='danger'>" + this + " goes off in your face!</span>" );
						return null;
					}

					if ( GlobalFuncs.do_after( b, this, 30 ) ) {
						
						if ( this.getAmmo() != 0 ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>You can't modify it!</span>" );
							return null;
						}
						this.caliber["38"] = 0;
						this.desc = "The barrel and chamber assembly seems to have been modified.";
						GlobalFuncs.to_chat( b, "<span class='warning'>You reinforce the barrel of " + this + "! Now it will fire .357 rounds.</span>" );

						if ( Lang13.Bool( CK ) && CK is Obj_Item_Weapon_ConversionKit ) {
							this.perfect = true;
						}
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You begin to revert the modifications to " + this + ".</span>" );

					if ( this.getAmmo() != 0 ) {
						this.afterattack( b, b );
						GlobalFuncs.playsound( b, this.fire_sound, 50, 1 );
						((Ent_Static)b).visible_message( "<span class='danger'>" + this + " goes off!</span>", "<span class='danger'>" + this + " goes off in your face!</span>" );
						return null;
					}

					if ( GlobalFuncs.do_after( b, this, 30 ) ) {
						
						if ( this.getAmmo() != 0 ) {
							GlobalFuncs.to_chat( b, "<span class='notice'>You can't modify it!</span>" );
							return null;
						}
						this.caliber["38"] = 1;
						this.desc = Lang13.Initial( this, "desc" );
						GlobalFuncs.to_chat( b, "<span class='warning'>You remove the modifications on " + this + "! Now it will fire .38 rounds.</span>" );
						this.perfect = false;
					}
				}
			}
			return null;
		}

		// Function from file: revolver.dm
		public override bool special_check( dynamic M = null ) {
			dynamic AC = null;

			
			if ( this.getAmmo() != 0 ) {
				AC = this.loaded[1];

				if ( Lang13.Bool( this.caliber["38"] ) == false ) {
					return true;
				}

				if ( AC is Obj_Item_AmmoCasing_A357 && !this.perfect && Rand13.PercentChance( ((int)( 70 - this.getAmmo() * 10 )) ) ) {
					GlobalFuncs.to_chat( M, "<span class='danger'>" + this + " blows up in your face.</span>" );
					((Mob_Living)M).take_organ_damage( 0, 20 );
					new ByTable().Set( 1, this ).Set( "force_drop", 1 ).Apply( Lang13.BindFunc( M, "drop_item" ) );
					GlobalFuncs.qdel( this );
					return false;
				}
			}
			return true;
		}

		// Function from file: revolver.dm
		[Verb]
		[VerbInfo( name: "Name Gun", desc: "Click to rename your gun. If you're the detective.", group: "Object" )]
		public bool rename_gun(  ) {
			Mob M = null;
			dynamic input = null;

			M = Task13.User;

			if ( !( M.mind != null ) ) {
				return false;
			}

			if ( !Lang13.Bool( M.mind.assigned_role ) == "Detective" ) {
				GlobalFuncs.to_chat( M, "<span class='notice'>You don't feel cool enough to name this gun, chump.</span>" );
				return false;
			}
			input = GlobalFuncs.stripped_input( Task13.User, "What do you want to name the gun?", null, "", 26 );

			if ( this != null && Lang13.Bool( input ) && !Lang13.Bool( M.stat ) && GlobalFuncs.in_range( this, M ) ) {
				this.name = input;
				GlobalFuncs.to_chat( M, "You name the gun " + input + ". Say hello to your new friend." );
				return true;
			}
			return false;
		}

	}

}
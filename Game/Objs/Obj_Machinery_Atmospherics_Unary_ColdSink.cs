// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Atmospherics_Unary_ColdSink : Obj_Machinery_Atmospherics_Unary {

		public bool on = false;
		public double? current_temperature = 293.41;
		public int current_heat_capacity = 50000;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/atmospherics/cold_sink.dmi";
			this.icon_state = "on_cool";
		}

		public Obj_Machinery_Atmospherics_Unary_ColdSink ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cold_sink.dm
		public override dynamic process(  ) {
			dynamic _default = null;

			int air_heat_capacity = 0;
			int combined_heat_capacity = 0;
			double? old_temperature = null;
			double combined_energy = 0;

			_default = base.process();

			if ( !this.on || !( this.network != null ) ) {
				return _default;
			}
			air_heat_capacity = this.air_contents.heat_capacity();
			combined_heat_capacity = this.current_heat_capacity + air_heat_capacity;
			old_temperature = this.air_contents.temperature;

			if ( combined_heat_capacity > 0 ) {
				combined_energy = ( this.current_temperature ??0) * this.current_heat_capacity + air_heat_capacity * ( this.air_contents.temperature ??0);

				if ( ( this.air_contents.temperature ??0) > ( this.current_temperature ??0) ) {
					this.air_contents.temperature = combined_energy / combined_heat_capacity;
				}
			}

			if ( Math.Abs( ( old_temperature ??0) - ( this.air_contents.temperature ??0) ) > 1 ) {
				((dynamic)this.network).update = 1;
			}
			return 1;
		}

	}

}
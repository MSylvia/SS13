// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_ProcHolder_Changeling_Sting : Obj_Effect_ProcHolder_Changeling {

		public string sting_icon = null;

		public Obj_Effect_ProcHolder_Changeling_Sting ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tiny_prick.dm
		public override bool sting_feedback( Mob user = null, Ent_Static target = null ) {
			
			if ( !( target != null ) ) {
				return false;
			}
			user.WriteMsg( "<span class='notice'>We stealthily sting " + target.name + ".</span>" );

			if ( Lang13.Bool( ((dynamic)target).mind ) && ((dynamic)target).mind.changeling != null ) {
				((dynamic)target).WriteMsg( "<span class='warning'>You feel a tiny prick.</span>" );
			}
			return true;
		}

		// Function from file: tiny_prick.dm
		public override bool can_sting( Mob user = null, Ent_Static target = null ) {
			
			if ( !base.can_sting( user, target ) ) {
				return false;
			}

			if ( !( user.mind.changeling.chosen_sting != null ) ) {
				user.WriteMsg( "We haven't prepared our sting yet!" );
			}

			if ( !( target is Mob_Living_Carbon ) ) {
				return false;
			}

			if ( !( user.loc is Tile ) ) {
				return false;
			}

			if ( !Lang13.Bool( GlobalFuncs.AStar( user, target.loc, typeof(Tile).GetMethod( "Distance" ), user.mind.changeling.sting_range, null, null, null, null, null, false ) ) ) {
				return false;
			}

			if ( Lang13.Bool( ((dynamic)target).mind ) && ((dynamic)target).mind.changeling != null ) {
				this.sting_feedback( user, target );
				this.take_chemical_cost( user.mind.changeling );
				return false;
			}
			return true;
		}

		// Function from file: tiny_prick.dm
		public void unset_sting( Mob user = null ) {
			user.WriteMsg( "<span class='warning'>We retract our sting, we can't sting anyone for now.</span>" );
			user.mind.changeling.chosen_sting = null;
			user.hud_used.lingstingdisplay.icon_state = null;
			user.hud_used.lingstingdisplay.invisibility = 101;
			return;
		}

		// Function from file: tiny_prick.dm
		public void set_sting( Mob user = null ) {
			user.WriteMsg( "<span class='notice'>We prepare our sting, use alt+click or middle mouse button on target to sting them.</span>" );
			user.mind.changeling.chosen_sting = this;
			user.hud_used.lingstingdisplay.icon_state = this.sting_icon;
			user.hud_used.lingstingdisplay.invisibility = 0;
			return;
		}

		// Function from file: tiny_prick.dm
		public override bool Click( dynamic loc = null, string control = null, string _params = null ) {
			Mob user = null;

			user = Task13.User;

			if ( !( user != null ) || !( user.mind != null ) || !( user.mind.changeling != null ) ) {
				return false;
			}

			if ( !( user.mind.changeling.chosen_sting != null ) ) {
				this.set_sting( user );
			} else {
				this.unset_sting( user );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Projectile_Nikita : Obj_Item_Projectile {

		public Ent_Static mob = null;
		public Ent_Static nikita = null;
		public int steps_since_last_turn = 0;
		public int last_dir = 0;
		public bool emagged = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.damage = 50;
			this.stun = 5;
			this.weaken = 5;
			this.linear_movement = false;
			this.kill_count = 100;
			this.icon = "icons/obj/projectiles_experimental.dmi";
			this.icon_state = "nikita";
			this.layer = 13;
		}

		public Obj_Item_Projectile_Nikita ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: rocket.dm
		public void reset_view(  ) {
			
			if ( this.mob != null && Lang13.Bool( ((dynamic)this.mob).client ) ) {
				((dynamic)this.mob).client.eye = ((dynamic)this.mob).client.mob;
				((dynamic)this.mob).client.perspective = GlobalVars.MOB_PERSPECTIVE ?1:0;
				((dynamic)this.mob).orient_object = null;
				((dynamic)this.mob).canmove = 1;
				this.mob = null;
			}
			return;
		}

		// Function from file: rocket.dm
		public void detonate( dynamic explosion = null ) {
			explosion = explosion ?? this.loc;

			GlobalFuncs.explosion( explosion, -1, 1, 4, 8 );

			if ( this != null ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: rocket.dm
		public bool check_user(  ) {
			
			if ( !( this.mob != null ) || !Lang13.Bool( ((dynamic)this.mob).client ) ) {
				return false;
			}

			if ( Lang13.Bool( ((dynamic)this.mob).stat ) || ((Mob)this.mob).get_active_hand() != this ) {
				this.reset_view();
				return false;
			}
			return true;
		}

		// Function from file: rocket.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			return !this.density || !Lang13.Bool( height ) || air_group == true;
		}

		// Function from file: rocket.dm
		public override void process_step(  ) {
			Ent_Static C = null;
			Tile step = null;
			int sleeptime = 0;

			
			if ( !this.emagged && !this.check_user() ) {
				
				if ( this.nikita != null && this.nikita.loc is Mob_Living_Carbon ) {
					C = this.nikita.loc;

					if ( ((Mob)C).get_active_hand() == this.nikita ) {
						this.mob = C;
						((dynamic)this.mob).client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
						((dynamic)this.mob).client.eye = this;
						((dynamic)this.mob).orient_object = this;
						((dynamic)this.mob).canmove = 0;
					}
				}
			}

			if ( this.loc != null ) {
				step = Map13.GetStep( this, this.dir );

				if ( !( step != null ) ) {
					GlobalFuncs.qdel( this );
				}
				this.Move( step );
			}

			if ( this.mob != null ) {
				
				if ( this.emagged ) {
					this.mob.loc = this.loc;
					this.mob.dir = this.dir;
				} else {
					this.mob.dir = Map13.GetDistance( this.mob, this );
				}
			}

			if ( !this.emagged ) {
				this.kill_count--;
			}

			if ( !Lang13.Bool( this.kill_count ) ) {
				this.detonate();
			}

			if ( this.kill_count == Lang13.Initial( this, "kill_count" ) / 5 ) {
				((dynamic)this.mob).playsound_local( this.mob, "sound/machines/twobeep.ogg", 30, 1 );
				GlobalFuncs.to_chat( this.mob, "<span class='warning'>WARNING: 20% fuel left on missile before self-detonation.<span>" );
			}

			if ( this.dir != this.last_dir ) {
				this.last_dir = this.dir;
				this.steps_since_last_turn = 0;
			}
			sleeptime = Num13.MaxInt( 1, this.steps_since_last_turn * -1 + 5 );
			this.steps_since_last_turn++;
			Task13.Sleep( sleeptime );
			return;
		}

		// Function from file: rocket.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			
			if ( this.emagged && AM == this.mob ) {
				return false;
			}
			this.detonate();
			return false;
		}

		// Function from file: rocket.dm
		public override dynamic Bump(Ent_Static Obstacle = null, dynamic yes = null) {
			
			if ( this.bumped ) {
				return null;
			}

			if ( this.emagged && Obstacle == this.mob ) {
				return null;
			}
			this.bumped = true;
			this.detonate( GlobalFuncs.get_turf( Obstacle ) );
			return null;
		}

		// Function from file: rocket.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			this.reset_view();

			if ( this.nikita != null ) {
				((dynamic)this.nikita).fired = null;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: rocket.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj is Obj_Item_Projectile_Beam || Proj is Obj_Item_Projectile_Bullet || Proj is Obj_Item_Projectile_Ricochet ) {
				
				if ( !( Proj is Obj_Item_Projectile_Beam_Lastertag ) && !( Proj is Obj_Item_Projectile_Beam_Practice ) ) {
					this.detonate();
				}
			}
			return null;
		}

		// Function from file: rocket.dm
		public override dynamic emp_act( int severity = 0 ) {
			new Obj_Item_AmmoCasing_RocketRpg_Nikita( GlobalFuncs.get_turf( this ) );

			if ( this.nikita != null ) {
				((dynamic)this.nikita).fired = null;
			}
			GlobalFuncs.qdel( this );
			return null;
		}

		// Function from file: rocket.dm
		public override bool OnFired(  ) {
			Ent_Static C = null;
			Obj_Item W = null;

			this.nikita = this.shot_from;
			this.emagged = Lang13.Bool( ((dynamic)this.nikita).emagged );

			if ( this.nikita != null && this.nikita.loc is Mob_Living_Carbon ) {
				C = this.nikita.loc;

				if ( ((Mob)C).get_active_hand() == this.nikita ) {
					this.mob = C;
					((dynamic)this.mob).client.perspective = GlobalVars.EYE_PERSPECTIVE ?1:0;
					((dynamic)this.mob).client.eye = this;
					((dynamic)this.mob).orient_object = this;
					((dynamic)this.mob).canmove = 0;
				}
			}
			this.dir = ((int)( GlobalFuncs.get_dir_cardinal( this.starting, this.original ) ??0 ));
			this.last_dir = this.dir;

			if ( this.mob != null && this.emagged ) {
				
				foreach (dynamic _a in Lang13.Enumerate( ((Mob)this.mob).get_all_slots(), typeof(Obj_Item) )) {
					W = _a;
					
					((dynamic)this.mob).drop_from_inventory( W );
				}
			}
			return false;
		}

	}

}
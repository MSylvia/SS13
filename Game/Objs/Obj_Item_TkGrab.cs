// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_TkGrab : Obj_Item {

		public int last_throw = 0;
		public dynamic focus = null;
		public Mob host = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 132;
			this.w_class = 10;
			this.icon = "icons/obj/magic.dmi";
			this.icon_state = "2";
			this.layer = 20;
		}

		public Obj_Item_TkGrab ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: telekinesis.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( new Txt( "<span class='suicide'>" ).item( user ).str( " is using " ).his_her_its_their().str( " telekinesis to choke " ).himself_herself_itself_themself().str( "! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
			return 8;
		}

		// Function from file: telekinesis.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();

			if ( Lang13.Bool( this.focus ) && Lang13.Bool( this.focus.icon ) && Lang13.Bool( this.focus.icon_state ) ) {
				this.overlays.Add( new Icon( this.focus.icon, this.focus.icon_state ) );
			}
			return false;
		}

		// Function from file: telekinesis.dm
		public void apply_focus_overlay(  ) {
			Obj_Effect_Overlay O = null;

			
			if ( !Lang13.Bool( this.focus ) ) {
				return;
			}
			O = new Obj_Effect_Overlay( Map13.GetTile( Convert.ToInt32( this.focus.x ), Convert.ToInt32( this.focus.y ), Convert.ToInt32( this.focus.z ) ) );
			O.name = "sparkles";
			O.anchored = 1;
			O.density = false;
			O.layer = GlobalVars.FLY_LAYER;
			O.dir = Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) );
			O.icon = "icons/effects/effects.dmi";
			O.icon_state = "nothing";
			Icon13.Flick( "empdisable", O );
			Task13.Schedule( 5, (Task13.Closure)(() => {
				GlobalFuncs.qdel( O );
				return;
			}));
			return;
		}

		// Function from file: telekinesis.dm
		public void focus_object( dynamic target = null, dynamic user = null ) {
			
			if ( !( target is Obj ) ) {
				return;
			}

			if ( Lang13.Bool( target.anchored ) || !( target.loc is Tile ) ) {
				GlobalFuncs.qdel( this );
				return;
			}
			this.focus = target;
			this.update_icon();
			this.apply_focus_overlay();
			return;
		}

		// Function from file: telekinesis.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			return false;
		}

		// Function from file: telekinesis.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic I = null;
			dynamic resolved = null;

			
			if ( !Lang13.Bool( target ) || !Lang13.Bool( user ) ) {
				return false;
			}

			if ( this.last_throw + 3 > Game13.time ) {
				return false;
			}

			if ( !( this.host != null ) || this.host != user ) {
				GlobalFuncs.qdel( this );
				return false;
			}

			if ( !( ((Dna)user.dna).check_mutation( "Telekinesis" ) != 0 ) ) {
				GlobalFuncs.qdel( this );
				return false;
			}

			if ( target is Obj && !( target.loc is Tile ) ) {
				return false;
			}

			if ( !GlobalFuncs.tkMaxRangeCheck( user, target, this.focus ) ) {
				return false;
			}

			if ( !Lang13.Bool( this.focus ) ) {
				this.focus_object( target, user );
				return false;
			}

			if ( Lang13.Bool( this.focus.anchored ) ) {
				GlobalFuncs.qdel( this );
			}

			if ( target == this.focus ) {
				((Ent_Static)target).attack_self_tk( user );
				return false;
			}

			if ( !( target is Tile ) && this.focus is Obj_Item && ((Ent_Static)target).Adjacent( this.focus ) ) {
				I = this.focus;
				resolved = ((Ent_Static)target).attackby( I, user, click_parameters );

				if ( !Lang13.Bool( resolved ) && Lang13.Bool( target ) && Lang13.Bool( I ) ) {
					I.afterattack( target, user, 1 );
				}
			} else {
				this.apply_focus_overlay();
				((Ent_Dynamic)this.focus).throw_at( target, 10, 1, user );
				this.last_throw = Game13.time;
				((Mob)user).changeNext_move( 8 );
			}
			return false;
		}

		// Function from file: telekinesis.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Lang13.Bool( this.focus ) ) {
				((Ent_Static)this.focus).attack_self_tk( user );
			}
			return null;
		}

		// Function from file: telekinesis.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			
			if ( slot == 4 || slot == 5 ) {
				return;
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: telekinesis.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( Lang13.Bool( this.focus ) && Lang13.Bool( user ) && this.loc != user && this.loc != user.loc ) {
				
				if ( ((Ent_Static)this.focus).Adjacent( this.loc ) ) {
					this.focus.loc = this.loc;
				}
			}
			GlobalFuncs.qdel( this );
			return false;
		}

	}

}
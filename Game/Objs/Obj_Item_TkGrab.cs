// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_TkGrab : Obj_Item {

		public int last_throw = 0;
		public dynamic focus = null;
		public Mob host = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 4;
			this.w_class = 10;
			this.v_abstract = true;
			this.icon = "icons/obj/magic.dmi";
			this.icon_state = "2";
			this.layer = 20;
		}

		public Obj_Item_TkGrab ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: telekinesis.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( Lang13.Bool( this.focus ) && Lang13.Bool( this.focus.icon ) && Lang13.Bool( this.focus.icon_state ) ) {
				this.overlays.Add( new Icon( this.focus.icon, this.focus.icon_state ) );
			}
			return null;
		}

		// Function from file: telekinesis.dm
		public void apply_focus_overlay(  ) {
			Obj_Effect_Overlay O = null;

			
			if ( !Lang13.Bool( this.focus ) ) {
				return;
			}
			O = new Obj_Effect_Overlay( Map13.GetTile( Convert.ToInt32( this.focus.x ), Convert.ToInt32( this.focus.y ), Convert.ToInt32( this.focus.z ) ) );
			O.name = "sparkles";
			O.anchored = 1;
			O.density = false;
			O.layer = GlobalVars.FLY_LAYER;
			O.dir = Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) );
			O.icon = "icons/effects/effects.dmi";
			O.icon_state = "nothing";
			Icon13.Flick( "empdisable", O );
			Task13.Schedule( 5, (Task13.Closure)(() => {
				GlobalFuncs.qdel( O );
				return;
			}));
			return;
		}

		// Function from file: telekinesis.dm
		public void focus_object( dynamic target = null, dynamic user = null ) {
			
			if ( !( target is Obj ) ) {
				return;
			}

			if ( Lang13.Bool( target.anchored ) || !( target.loc is Tile ) ) {
				GlobalFuncs.qdel( this );
				return;
			}
			this.focus = target;
			this.update_icon();
			this.apply_focus_overlay();
			return;
		}

		// Function from file: telekinesis.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			return null;
		}

		// Function from file: telekinesis.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			int d = 0;
			dynamic I = null;
			dynamic resolved = null;

			
			if ( Lang13.Bool( user ) ) {
				((Mob)user).delayNextAttack( 8 );
			}

			if ( !Lang13.Bool( A ) || !Lang13.Bool( user ) ) {
				return false;
			}

			if ( this.last_throw + 3 > Game13.time ) {
				return false;
			}

			if ( !( this.host != null ) || this.host != user ) {
				GlobalFuncs.qdel( this );
				return false;
			}

			if ( !this.host.mutations.Contains( 1 ) ) {
				GlobalFuncs.qdel( this );
				return false;
			}

			if ( A is Obj && !( A.loc is Tile ) ) {
				return false;
			}
			d = Map13.GetDistance( user, A );

			if ( Lang13.Bool( this.focus ) ) {
				d = Num13.MaxInt( d, Map13.GetDistance( user, this.focus ) );
			}

			if ( d > GlobalVars.tk_maxrange ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Your mind won't reach that far.</span>" );
				return false;
			}

			if ( !Lang13.Bool( this.focus ) ) {
				this.focus_object( A, user );
				return false;
			}

			if ( A == this.focus ) {
				((Ent_Static)A).attack_self_tk( user );
				return false;
			}

			if ( !( A is Tile ) && this.focus is Obj_Item && ((Ent_Static)A).Adjacent( this.focus ) ) {
				I = this.focus;
				resolved = ((Ent_Static)A).attackby( I, user, _params );

				if ( !Lang13.Bool( resolved ) && Lang13.Bool( A ) && Lang13.Bool( I ) ) {
					I.afterattack( A, user, 1, _params );
				}
			} else {
				this.apply_focus_overlay();
				((Ent_Dynamic)this.focus).throw_at( A, 10, 1 );
				this.last_throw = Game13.time;
			}
			return false;
		}

		// Function from file: telekinesis.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Lang13.Bool( this.focus ) ) {
				((Ent_Static)this.focus).attack_self_tk( user );
			}
			return null;
		}

		// Function from file: telekinesis.dm
		public override dynamic equipped( dynamic user = null, dynamic slot = null ) {
			
			if ( slot == 4 || slot == 5 ) {
				return null;
			}
			GlobalFuncs.qdel( this );
			return null;
		}

		// Function from file: telekinesis.dm
		public override dynamic dropped( dynamic user = null ) {
			
			if ( Lang13.Bool( this.focus ) && Lang13.Bool( user ) && this.loc != user && this.loc != user.loc ) {
				
				if ( ((Ent_Static)this.focus).Adjacent( this.loc ) ) {
					this.focus.loc = this.loc;
				}
			}
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Meteor_Small_Flash : Obj_Effect_Meteor_Small {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "small_flash";
		}

		public Obj_Effect_Meteor_Small_Flash ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: meteors.dm
		public override dynamic Bump(Ent_Static Obstacle = null, dynamic yes = null) {
			Mob_Living M = null;
			dynamic eye_safety = null;
			int ear_safety = 0;
			Mob_Living C = null;
			Mob_Living H = null;

			this.visible_message( "<span class='danger'>BANG</span>" );
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/bang.ogg", 25, 1 );

			foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, this ), typeof(Mob_Living) )) {
				M = _c;
				
				eye_safety = 0;
				ear_safety = 0;

				if ( M is Mob_Living_Carbon ) {
					C = M;
					eye_safety = ((dynamic)C).eyecheck();

					if ( C is Mob_Living_Carbon_Human ) {
						H = C;

						if ( Lang13.Bool( ((dynamic)H).earprot() ) ) {
							ear_safety += 2;
						}

						if ( H.mutations.Contains( 4 ) ) {
							ear_safety += 1;
						}

						if ( ((dynamic)H).head is Obj_Item_Clothing_Head_Helmet ) {
							ear_safety += 1;
						}
					}
				}

				if ( Convert.ToDouble( eye_safety ) < 2 ) {
					Icon13.Flick( "e_flash", M.flash );

					dynamic _a = eye_safety; // Was a switch-case, sorry for the mess.
					if ( _a==1 ) {
						M.Stun( 2 );
					} else if ( _a==0 ) {
						M.Stun( 4 );
						M.Weaken( 10 );
					} else if ( _a==-1 ) {
						M.Stun( 7 );
						M.Weaken( 15 );
					}
				}

				if ( ear_safety < 2 ) {
					
					switch ((int)( ear_safety )) {
						case 1:
							M.ear_damage += Rand13.Int( 0, 3 );
							break;
						case 0:
							M.ear_damage += Rand13.Int( 5, 15 );
							M.ear_deaf = Num13.MaxInt( M.ear_deaf, 10 );
							break;
					}

					if ( Rand13.PercentChance( ((int)( M.ear_damage - 10 + 5 )) ) ) {
						GlobalFuncs.to_chat( M, "<span class='warning'>You can't hear anything!</span>" );
						M.sdisabilities |= 4;
					}
				}
			}
			base.Bump( Obstacle );
			return null;
		}

	}

}
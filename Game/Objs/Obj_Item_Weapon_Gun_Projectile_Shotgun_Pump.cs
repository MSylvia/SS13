// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Shotgun_Pump : Obj_Item_Weapon_Gun_Projectile_Shotgun {

		public bool recentpump = false;
		public bool pumped = false;
		public Ent_Static current_shell = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fire_sound = "sound/weapons/shotgun.ogg";
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guninhands_left.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guninhands_right.dmi" );
			this.max_shells = 4;
			this.w_class = 4;
			this.force = 10;
			this.slot_flags = 1024;
			this.caliber = new ByTable().Set( "shotgun", 1 ).Set( "flare", 1 );
			this.origin_tech = "combat=4;materials=2";
			this.ammo_type = "/obj/item/ammo_casing/shotgun/beanbag";
			this.gun_flags = 0;
			this.icon_state = "shotgun";
		}

		public Obj_Item_Weapon_Gun_Projectile_Shotgun_Pump ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: shotgun.dm
		public bool pump( dynamic M = null ) {
			dynamic AC = null;

			GlobalFuncs.playsound( M, "sound/weapons/shotgunpump.ogg", 60, 1 );
			this.pumped = false;

			if ( this.current_shell != null ) {
				this.current_shell.loc = GlobalFuncs.get_turf( this );
				this.current_shell = null;

				if ( Lang13.Bool( this.in_chamber ) ) {
					this.in_chamber = null;
				}
			}

			if ( !( this.getAmmo() != 0 ) ) {
				return false;
			}
			AC = this.loaded[1];
			this.loaded.Remove( AC );
			this.current_shell = AC;
			this.update_icon();
			return true;
		}

		// Function from file: shotgun.dm
		public override bool process_chambered(  ) {
			
			if ( Lang13.Bool( this.in_chamber ) ) {
				return true;
			} else if ( this.current_shell != null && Lang13.Bool( ((dynamic)this.current_shell).BB ) ) {
				this.in_chamber = ((dynamic)this.current_shell).BB;
				((dynamic)this.current_shell).BB.loc = this;
				((dynamic)this.current_shell).BB = null;
				this.current_shell.update_icon();
				return true;
			}
			return false;
		}

		// Function from file: shotgun.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.recentpump ) {
				return null;
			}
			this.pump( user );
			this.recentpump = true;
			Task13.Schedule( 10, (Task13.Closure)(() => {
				this.recentpump = false;
				return;
			}));
			return null;
		}

		// Function from file: shotgun.dm
		public override bool isHandgun(  ) {
			return false;
		}

	}

}
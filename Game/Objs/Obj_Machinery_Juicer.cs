// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Juicer : Obj_Machinery {

		public dynamic beaker = null;
		public dynamic allowed_items = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.idle_power_usage = 5;
			this.active_power_usage = 100;
			this.pass_flags = 1;
			this.icon = "icons/obj/kitchen.dmi";
			this.icon_state = "juicer1";
			this.layer = 2.9;
		}

		// Function from file: juicer.dm
		public Obj_Machinery_Juicer ( dynamic loc = null ) : base( (object)(loc) ) {
			this.beaker = new Obj_Item_Weapon_ReagentContainers_Glass_Beaker_Large( this );
			return;
		}

		// Function from file: juicer.dm
		public void juice(  ) {
			Obj_Item_Weapon_ReagentContainers_Food_Snacks O = null;
			dynamic r_id = null;

			this.power_change();

			if ( ( this.stat & 3 ) != 0 ) {
				return;
			}

			if ( !Lang13.Bool( this.beaker ) || ( this.beaker.reagents.total_volume ??0) >= Convert.ToDouble( this.beaker.reagents.maximum_volume ) ) {
				return;
			}
			GlobalFuncs.playsound( this.loc, "sound/machines/juicer.ogg", 50, 1 );

			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks) )) {
				O = _a;
				
				r_id = this.get_juice_id( O );
				this.beaker.reagents.add_reagent( r_id, this.get_juice_amount( O ) );
				GlobalFuncs.qdel( O );

				if ( ( this.beaker.reagents.total_volume ??0) >= Convert.ToDouble( this.beaker.reagents.maximum_volume ) ) {
					break;
				}
			}
			return;
		}

		// Function from file: juicer.dm
		public int get_juice_amount( Obj_Item_Weapon_ReagentContainers_Food_Snacks O = null ) {
			
			if ( !( O is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown ) ) {
				return 5;
			} else if ( O.potency == -1 ) {
				return 5;
			} else {
				return Num13.Floor( Math.Sqrt( O.potency ??0 ) * 5 );
			}
			return 0;
		}

		// Function from file: juicer.dm
		public dynamic get_juice_id( Obj_Item_Weapon_ReagentContainers_Food_Snacks O = null ) {
			dynamic i = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.allowed_items )) {
				i = _a;
				

				if ( Lang13.Bool( i.IsInstanceOfType( O ) ) ) {
					return GlobalVars.allowed_items[i];
				}
			}
			return null;
		}

		// Function from file: juicer.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}
			Task13.User.set_machine( this );

			dynamic _a = href_list["action"]; // Was a switch-case, sorry for the mess.
			if ( _a=="juice" ) {
				this.juice();
			} else if ( _a=="detach" ) {
				this.detach();
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: juicer.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			bool is_chamber_empty = false;
			bool is_beaker_ready = false;
			string processing_chamber = null;
			string beaker_contents = null;
			dynamic i = null;
			Obj_Item O = null;
			string dat = null;

			is_chamber_empty = false;
			is_beaker_ready = false;
			processing_chamber = "";
			beaker_contents = "";

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.allowed_items )) {
				i = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item) )) {
					O = _a;
					

					if ( !Lang13.Bool( i.IsInstanceOfType( O ) ) ) {
						continue;
					}
					processing_chamber += "some <B>" + O + "</B><BR>";
					break;
				}
			}

			if ( !Lang13.Bool( processing_chamber ) ) {
				is_chamber_empty = true;
				processing_chamber = "Nothing.";
			}

			if ( !Lang13.Bool( this.beaker ) ) {
				beaker_contents = new Txt().The( this ).item().str( " has no beaker attached." ).ToString();
			} else if ( !Lang13.Bool( this.beaker.reagents.total_volume ) ) {
				beaker_contents = new Txt().The( this ).item().str( "  has attached an empty beaker." ).ToString();
				is_beaker_ready = true;
			} else if ( ( this.beaker.reagents.total_volume ??0) < Convert.ToDouble( this.beaker.reagents.maximum_volume ) ) {
				beaker_contents = new Txt().The( this ).item().str( "  has attached a beaker with something." ).ToString();
				is_beaker_ready = true;
			} else {
				beaker_contents = new Txt().The( this ).item().str( "  has attached a beaker and the beaker is full!" ).ToString();
			}
			dat = "\n<b>Processing chamber contains:</b><br>\n" + processing_chamber + "<br>\n" + beaker_contents + "<hr>\n";

			if ( is_beaker_ready && !is_chamber_empty && !( ( this.stat & 3 ) != 0 ) ) {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";action=juice'>Turn on!<BR>" ).ToString();
			}

			if ( Lang13.Bool( this.beaker ) ) {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";action=detach'>Detach a beaker!<BR>" ).ToString();
			}
			Interface13.Browse( user, "<HEAD><TITLE>Juicer</TITLE></HEAD><TT>" + dat + "</TT>", "window=juicer" );
			GlobalFuncs.onclose( user, "juicer" );
			return null;
		}

		// Function from file: juicer.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			((Mob)a).set_machine( this );
			this.interact( a );
			return null;
		}

		// Function from file: juicer.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return 0;
		}

		// Function from file: juicer.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: juicer.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( this.default_unfasten_wrench( user, A ) ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_ReagentContainers_Glass || A is Obj_Item_Weapon_ReagentContainers_Food_Drinks_Drinkingglass ) {
				
				if ( Lang13.Bool( this.beaker ) ) {
					return 1;
				} else {
					
					if ( !((Mob)user).unEquip( A ) ) {
						user.WriteMsg( new Txt( "<span class='warning'>" ).the( A ).item().str( " is stuck to your hand, you cannot put it in " ).the( this ).item().str( "!</span>" ).ToString() );
						return 0;
					}
					A.loc = this;
					this.beaker = A;
					this.verbs.Add( typeof(Obj_Machinery_Juicer).GetMethod( "detach" ) );
					this.update_icon();
					this.updateUsrDialog();
					return 0;
				}
			}

			if ( !GlobalFuncs.is_type_in_list( A, GlobalVars.allowed_items ) ) {
				user.WriteMsg( "It looks as not containing any juice." );
				return 1;
			}

			if ( !((Mob)user).unEquip( A ) ) {
				user.WriteMsg( new Txt( "<span class='warning'>" ).the( A ).item().str( " is stuck to your hand, you cannot put it in " ).the( this ).item().str( "!</span>" ).ToString() );
				return 0;
			}
			A.loc = this;
			this.updateUsrDialog();
			return 0;
		}

		// Function from file: juicer.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.icon_state = "juicer" + String13.NumberToString( !( this.beaker == null ) ?1:0 );
			return false;
		}

		// Function from file: juicer.dm
		[Verb]
		[VerbInfo( name: "Detach Beaker from the juicer", group: "Object", access: VerbAccess.InViewExcludeThis, range: 1 )]
		public void detach(  ) {
			
			if ( Task13.User.stat != 0 || !Task13.User.canmove || Task13.User.restrained() ) {
				return;
			}

			if ( !Lang13.Bool( this.beaker ) ) {
				return;
			}
			this.verbs.Remove( typeof(Obj_Machinery_Juicer).GetMethod( "detach" ) );
			this.beaker.loc = this.loc;
			this.beaker = null;
			this.update_icon();
			return;
		}

	}

}
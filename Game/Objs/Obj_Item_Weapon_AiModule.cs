// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_AiModule : Obj_Item_Weapon {

		public dynamic law = null;
		public string modname = null;
		public string modtype = "AI Module";
		public int modflags = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "circuitboard";
			this.force = 5;
			this.w_class = 2;
			this.throwforce = 5;
			this.throw_speed = 3;
			this.throw_range = 15;
			this.origin_tech = "programming=3";
			this.starting_materials = new ByTable().Set( "$glass", 2000 );
			this.w_type = 5;
			this.melt_temperature = 1687;
			this.icon = "icons/obj/module.dmi";
			this.icon_state = "std_mod";
		}

		// Function from file: AI_modules.dm
		public Obj_Item_Weapon_AiModule ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.name = "'" + this.modname + "' " + this.modtype;
			this.updateLaw();
			return;
		}

		// Function from file: AI_modules.dm
		public virtual void updateLaw(  ) {
			this.law = "BUG: " + this.type + " doesn't override updateLaw()!";
			this.desc = new Txt().A( this.name ).item().str( ": '" ).item( this.law ).str( "'" ).ToString();
			return;
		}

		// Function from file: AI_modules.dm
		public virtual bool upload( dynamic laws = null, dynamic target = null, dynamic sender = null, bool? notify_target = null ) {
			string senderName = null;
			string targetName = null;
			dynamic M = null;
			string time = null;
			string log_entry = null;

			senderName = "Unknown";

			if ( Lang13.Bool( sender ) ) {
				senderName = sender.name;
			}
			targetName = new Txt().a( target.name ).item().ToString();

			if ( target is Mob ) {
				M = target;

				if ( ( this.modflags & 2 ) != 0 ) {
					GlobalFuncs.to_chat( target, new Txt( "<span class='danger'>[REDACTED] </span>has uploaded a change to the laws you must follow, using " ).a( this.name ).item().str( ". From now on: " ).ToString() );
				} else {
					GlobalFuncs.to_chat( target, new Txt().item( senderName ).str( " has uploaded a change to the laws you must follow, using " ).a( this.name ).item().str( ". From now on: " ).ToString() );
				}
				targetName = "" + this.fmtSubject( M ) + ")";
			}
			time = String13.FormatTime( Game13.realtime, "hh:mm:ss" );
			log_entry = "" + this.fmtSubject( sender ) + ") used " + this.name + " on " + targetName;
			GlobalVars.lawchanges.Add( "" + time + " : " + log_entry );
			GlobalFuncs.message_admins( log_entry );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + log_entry ) );
			return true;
		}

		// Function from file: AI_modules.dm
		public virtual bool validate( dynamic laws = null, Obj_Item_Weapon_PlanningFrame target = null, Mob sender = null ) {
			return true;
		}

		// Function from file: AI_modules.dm
		public string fmtSubject( dynamic target = null ) {
			dynamic M = null;

			
			if ( target is Mob ) {
				M = target;
				return "" + M.name + "(" + M.key + ")";
			} else {
				return new Txt().a( target.name ).item().ToString();
			}
		}

		// Function from file: AI_modules.dm
		public virtual dynamic copy(  ) {
			return Lang13.Call( this.type, this.loc );
		}

		// Function from file: AI_modules.dm
		public override dynamic attack_ai( dynamic user = null ) {
			
			if ( user is Mob_Living_Silicon_Robot_Mommi ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Your firmware prevents you from picking that up!</span>" );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Razor : Obj_Item_Weapon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 64;
			this.w_class = 1;
			this.icon_state = "razor";
		}

		public Obj_Item_Weapon_Razor ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cosmetics.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			dynamic H = null;
			string location = null;
			Ent_Static H_loc = null;
			Ent_Static H_loc2 = null;

			
			if ( M is Mob_Living_Carbon_Human ) {
				H = M;
				location = user.zone_selected;

				if ( location == "mouth" ) {
					
					if ( !( ( H.dna.species.specflags & 4 ) != null ) ) {
						user.WriteMsg( "<span class='warning'>There is no facial hair to shave!</span>" );
						return false;
					}

					if ( !GlobalFuncs.get_location_accessible( H, location ) ) {
						user.WriteMsg( "<span class='warning'>The mask is in the way!</span>" );
						return false;
					}

					if ( H.facial_hair_style == "Shaved" ) {
						user.WriteMsg( "<span class='warning'>Already clean-shaven!</span>" );
						return false;
					}

					if ( H == user ) {
						((Ent_Static)user).visible_message( "" + user + " starts to shave their facial hair with " + this + ".", "<span class='notice'>You take a moment to shave your facial hair with " + this + "...</span>" );

						if ( GlobalFuncs.do_after( user, 50, null, H ) ) {
							((Ent_Static)user).visible_message( "" + user + " shaves his facial hair clean with " + this + ".", "<span class='notice'>You finish shaving with " + this + ". Fast and clean!</span>" );
							this.shave( H, location );
						}
					} else {
						H_loc = H.loc;
						((Ent_Static)user).visible_message( "<span class='warning'>" + user + " tries to shave " + H + "'s facial hair with " + this + ".</span>", "<span class='notice'>You start shaving " + H + "'s facial hair...</span>" );

						if ( GlobalFuncs.do_after( user, 50, null, H ) ) {
							
							if ( H_loc == H.loc ) {
								((Ent_Static)user).visible_message( "<span class='warning'>" + user + " shaves off " + H + "'s facial hair with " + this + ".</span>", "<span class='notice'>You shave " + H + "'s facial hair clean off.</span>" );
								this.shave( H, location );
							}
						}
					}
				} else if ( location == "head" ) {
					
					if ( !( ( H.dna.species.specflags & 2 ) != null ) ) {
						user.WriteMsg( "<span class='warning'>There is no hair to shave!</span>" );
						return false;
					}

					if ( !GlobalFuncs.get_location_accessible( H, location ) ) {
						user.WriteMsg( "<span class='warning'>The headgear is in the way!</span>" );
						return false;
					}

					if ( H.hair_style == "Bald" || H.hair_style == "Balding Hair" || H.hair_style == "Skinhead" ) {
						user.WriteMsg( "<span class='warning'>There is not enough hair left to shave!</span>" );
						return false;
					}

					if ( H == user ) {
						((Ent_Static)user).visible_message( "" + user + " starts to shave their head with " + this + ".", "<span class='notice'>You start to shave your head with " + this + "...</span>" );

						if ( GlobalFuncs.do_after( user, 5, null, H ) ) {
							((Ent_Static)user).visible_message( "" + user + " shaves his head with " + this + ".", "<span class='notice'>You finish shaving with " + this + ".</span>" );
							this.shave( H, location );
						}
					} else {
						H_loc2 = H.loc;
						((Ent_Static)user).visible_message( "<span class='warning'>" + user + " tries to shave " + H + "'s head with " + this + "!</span>", "<span class='notice'>You start shaving " + H + "'s head...</span>" );

						if ( GlobalFuncs.do_after( user, 50, null, H ) ) {
							
							if ( H_loc2 == H.loc ) {
								((Ent_Static)user).visible_message( "<span class='warning'>" + user + " shaves " + H + "'s head bald with " + this + "!</span>", "<span class='notice'>You shave " + H + "'s head bald.</span>" );
								this.shave( H, location );
							}
						}
					}
				} else {
					base.attack( (object)(M), (object)(user), def_zone );
				}
			} else {
				base.attack( (object)(M), (object)(user), def_zone );
			}
			return false;
		}

		// Function from file: cosmetics.dm
		public void shave( dynamic H = null, string location = null ) {
			location = location ?? "mouth";

			
			if ( location == "mouth" ) {
				H.facial_hair_style = "Shaved";
			} else {
				H.hair_style = "Skinhead";
			}
			((Mob)H).update_hair();
			GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 20, 1 );
			return;
		}

	}

}
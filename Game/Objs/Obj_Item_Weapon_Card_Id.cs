// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Card_Id : Obj_Item_Weapon_Card {

		public double mining_points = 0;
		public dynamic access = new ByTable();
		public dynamic registered_name = null;
		public dynamic assignment = null;
		public bool dorm = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "card-id";
			this.slot_flags = 256;
			this.icon_state = "id";
		}

		public Obj_Item_Weapon_Card_Id ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cards_ids.dm
		public void update_label( dynamic newname = null, dynamic newjob = null ) {
			
			if ( Lang13.Bool( newname ) || Lang13.Bool( newjob ) ) {
				this.name = "" + ( !Lang13.Bool( newname ) ? "identification card" : "" + newname + "'s ID Card" ) + ( !Lang13.Bool( newjob ) ? "" : " (" + newjob + ")" );
				return;
			}
			this.name = "" + ( !Lang13.Bool( this.registered_name ) ? "identification card" : "" + this.registered_name + "'s ID Card" ) + ( !Lang13.Bool( this.assignment ) ? "" : " (" + this.assignment + ")" );
			return;
		}

		// Function from file: cards_ids.dm
		public override dynamic GetID(  ) {
			return this;
		}

		// Function from file: cards_ids.dm
		public override dynamic GetAccess(  ) {
			return this.access;
		}

		// Function from file: cards_ids.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.mining_points != 0 ) {
				user.WriteMsg( new Txt( "There's " ).item( this.mining_points ).str( " mining equipment redemption point" ).s().str( " loaded onto this card." ).ToString() );
			}
			return 0;
		}

		// Function from file: cards_ids.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " shows you: " ).icon( this ).str( " " ).item( this.name ).str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You show " ).the( this.name ).item().str( ".</span>" ).ToString() );
			this.add_fingerprint( user );
			return null;
		}

	}

}
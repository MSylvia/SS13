// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Borg_Upgrade_Tasercooler : Obj_Item_Borg_Upgrade {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.require_module = true;
			this.icon_state = "cyborg_upgrade3";
		}

		public Obj_Item_Borg_Upgrade_Tasercooler ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: robot_upgrades.dm
		public override bool action( Mob_Living_Silicon_Robot R = null ) {
			dynamic T = null;

			
			if ( base.action( R ) ) {
				return false;
			}

			if ( !( R.module is Obj_Item_Weapon_RobotModule_Security ) ) {
				GlobalFuncs.to_chat( R, "Upgrade mounting error!  No suitable hardpoint detected!" );
				GlobalFuncs.to_chat( Task13.User, "There's no mounting point for the module!" );
				return false;
			}
			T = Lang13.FindIn( typeof(Obj_Item_Weapon_Gun_Energy_Taser_Cyborg), R.module );

			if ( !Lang13.Bool( T ) ) {
				T = Lang13.FindIn( typeof(Obj_Item_Weapon_Gun_Energy_Taser_Cyborg), R.module.contents );
			}

			if ( !Lang13.Bool( T ) ) {
				T = Lang13.FindIn( typeof(Obj_Item_Weapon_Gun_Energy_Taser_Cyborg), R.module.modules );
			}

			if ( !Lang13.Bool( T ) ) {
				GlobalFuncs.to_chat( Task13.User, "This robot has had its taser removed!" );
				return false;
			}

			if ( Convert.ToDouble( T.recharge_time ) <= 2 ) {
				GlobalFuncs.to_chat( R, "Maximum cooling achieved for this hardpoint!" );
				GlobalFuncs.to_chat( Task13.User, "There's no room for another cooling unit!" );
				return false;
			} else {
				T.recharge_time = Num13.MaxInt( 2, Convert.ToInt32( T.recharge_time - 4 ) );
			}
			return true;
		}

	}

}
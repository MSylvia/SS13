// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Dominator : Obj_Machinery {

		public int maxhealth = 200;
		public double health = 200;
		public dynamic gang = null;
		public int operating = 0;
		public bool warned = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/machines/dominator.dmi";
			this.icon_state = "dominator";
			this.layer = 3.6;
		}

		// Function from file: dominator.dm
		public Obj_Machinery_Dominator ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.SetLuminosity( 2 );
			GlobalVars.poi_list.Or( this );
			return;
		}

		// Function from file: swarmer.dm
		public override void swarmer_act( Mob_Living_SimpleAnimal_Hostile_Swarmer S = null ) {
			S.WriteMsg( "<span class='warning'>This device is attempting to corrupt our entire network; attempting to interact with it is too risky. Aborting.</span>" );
			return;
		}

		// Function from file: dominator.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			return null;
		}

		// Function from file: dominator.dm
		public override bool attack_hulk( Mob_Living_Carbon_Human hulk = null, bool? do_attack_animation = null ) {
			GlobalFuncs.playsound( this, "sound/effects/bang.ogg", 50, 1 );
			hulk.visible_message( "<span class='danger'>" + hulk + " smashes " + this + ".</span>", "<span class='danger'>You punch " + this + ".</span>", "<span class='italics'>You hear metal being slammed.</span>" );
			this.healthcheck( 5 );
			return false;
		}

		// Function from file: dominator.dm
		public override bool mech_melee_attack( Obj_Mecha M = null ) {
			
			if ( M.damtype == "brute" ) {
				GlobalFuncs.playsound( this, "sound/effects/bang.ogg", 50, 1 );
				this.visible_message( "<span class='danger'>" + M.name + " has hit " + this + ".</span>" );
				this.healthcheck( M.force );
			}
			return false;
		}

		// Function from file: dominator.dm
		public override bool attack_animal( Mob_Living user = null ) {
			Mob_Living M = null;

			
			if ( !( user is Mob_Living_SimpleAnimal ) ) {
				return false;
			}
			M = user;
			M.do_attack_animation( this );

			if ( Convert.ToDouble( ((dynamic)M).melee_damage_upper ) <= 0 ) {
				return false;
			}
			this.healthcheck( ((dynamic)M).melee_damage_upper );
			return false;
		}

		// Function from file: dominator.dm
		public override bool attack_alien( dynamic user = null ) {
			((Ent_Dynamic)user).do_attack_animation( this );
			GlobalFuncs.playsound( this, "sound/effects/bang.ogg", 50, 1 );
			((Ent_Static)user).visible_message( "<span class='danger'>" + user + " smashes against " + this + " with its claws.</span>", "<span class='danger'>You smash against " + this + " with your claws.</span>", "<span class='italics'>You hear metal scraping.</span>" );
			this.healthcheck( 15 );
			return false;
		}

		// Function from file: dominator.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic tempgang = null;
			double time = 0;
			dynamic A = null;
			dynamic locname = null;
			Gang G = null;

			
			if ( this.operating != 0 ) {
				this.examine( a );
				return null;
			}

			if ( ((GameMode)GlobalVars.ticker.mode).get_all_gangsters().Contains( a.mind ) ) {
				tempgang = a.mind.gang_datum;
			} else {
				this.examine( a );
				return null;
			}

			if ( Lang13.Bool( Lang13.IsNumber( tempgang.dom_timer ) ) ) {
				a.WriteMsg( "<span class='warning'>Error: Hostile Takeover is already in progress.</span>" );
				return null;
			}

			if ( !( tempgang.dom_attempts != 0 ) ) {
				a.WriteMsg( "<span class='warning'>Error: Unable to breach station network. Firewall has logged our signature and is blocking all further attempts.</span>" );
				return null;
			}
			time = Num13.Round( GlobalFuncs.get_domination_time( tempgang ) / 60, 0.1 );

			if ( Interface13.Alert( a, "With " + Num13.Round( tempgang.territory.len / GlobalVars.start_state.num_territories * 100, 1 ) + "% station control, a takeover will require " + time + " minutes.\nYour gang will be unable to gain influence while it is active.\nThe entire station will likely be alerted to it once it starts.\nYou have " + tempgang.dom_attempts + " attempt(s) remaining. Are you ready?", "Confirm", "Ready", "Later" ) == "Ready" ) {
				
				if ( Lang13.Bool( Lang13.IsNumber( tempgang.dom_timer ) ) || !( tempgang.dom_attempts != 0 ) || !( Map13.GetDistance( this, a ) <= 1 ) || !( this.loc is Tile ) ) {
					return 0;
				}
				A = GlobalFuncs.get_area( this.loc );
				locname = Lang13.Initial( A, "name" );
				this.gang = tempgang;
				this.gang.dom_attempts--;
				GlobalFuncs.priority_announce( "Network breach detected in " + locname + ". The " + this.gang.name + " Gang is attempting to seize control of the station!", "Network Alert" );
				((Gang)this.gang).domination();
				this.name = "" + this.gang.name + " Gang " + this.name;
				this.healthcheck( 0 );
				this.operating = 1;
				GlobalVars.SSmachine.processing.Add( this );
				((Gang)this.gang).message_gangtools( "Hostile takeover in progress: Estimated " + time + " minutes until victory." + ( this.gang.dom_attempts != 0 ? "" : " This is your final attempt." ) );

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.gangs, typeof(Gang) )) {
					G = _a;
					

					if ( G != this.gang ) {
						G.message_gangtools( "Enemy takeover attempt detected in " + locname + ": Estimated " + time + " minutes until our defeat.", true, true );
					}
				}
			}
			return null;
		}

		// Function from file: dominator.dm
		public override bool blob_act( dynamic severity = null ) {
			this.healthcheck( 110 );
			return false;
		}

		// Function from file: dominator.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			dynamic damage = null;

			
			if ( Lang13.Bool( P.damage ) ) {
				
				if ( P.damage_type == "brute" || P.damage_type == "fire" ) {
					damage = P.damage;

					if ( P.forcedodge ) {
						damage *= 0.5;
					}
					GlobalFuncs.playsound( this, "sound/effects/bang.ogg", 50, 1 );
					this.visible_message( "<span class='danger'>" + this + " was hit by " + P + ".</span>" );
					this.healthcheck( damage );
				}
			}
			base.bullet_act( (object)(P), (object)(def_zone) );
			return null;
		}

		// Function from file: dominator.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			if ( target == this ) {
				GlobalFuncs.qdel( this );
				return false;
			}

			switch ((int?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					break;
				case 2:
					this.healthcheck( 120 );
					break;
				case 3:
					this.healthcheck( 30 );
					break;
			}
			return false;
		}

		// Function from file: dominator.dm
		public override double emp_act( int severity = 0 ) {
			this.healthcheck( 100 );
			base.emp_act( severity );
			return 0;
		}

		// Function from file: dominator.dm
		public override dynamic Destroy(  ) {
			
			if ( this.operating != -1 ) {
				this.set_broken();
			}
			GlobalVars.poi_list.Remove( this );
			return base.Destroy();
		}

		// Function from file: dominator.dm
		public void set_broken(  ) {
			bool takeover_in_progress = false;
			Gang G = null;

			
			if ( Lang13.Bool( this.gang ) ) {
				this.gang.dom_timer = "OFFLINE";
				takeover_in_progress = false;

				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.gangs, typeof(Gang) )) {
					G = _a;
					

					if ( Lang13.Bool( Lang13.IsNumber( G.dom_timer ) ) ) {
						takeover_in_progress = true;
						break;
					}
				}

				if ( !takeover_in_progress ) {
					GlobalVars.SSshuttle.emergencyNoEscape = false;

					if ( GlobalVars.SSshuttle.emergency.mode == 4 ) {
						GlobalVars.SSshuttle.emergency.mode = 3;
						GlobalVars.SSshuttle.emergency.timer = Game13.time;
						GlobalFuncs.priority_announce( "Hostile enviroment resolved. You have 3 minutes to board the Emergency Shuttle.", null, "sound/AI/shuttledock.ogg", "Priority" );
					} else {
						GlobalFuncs.priority_announce( "All hostile activity within station systems have ceased.", "Network Alert" );
					}

					if ( GlobalFuncs.get_security_level() == "delta" ) {
						GlobalFuncs.set_security_level( "red" );
					}
				}
				((Gang)this.gang).message_gangtools( "Hostile takeover cancelled: Dominator is no longer operational." + ( this.gang.dom_attempts != 0 ? " You have " + this.gang.dom_attempts + " attempt remaining." : " The station network will have likely blocked any more attempts by us." ), true, true );
			}
			this.SetLuminosity( 0 );
			this.icon_state = "dominator-broken";
			this.overlays.Cut();
			this.operating = -1;
			GlobalVars.SSmachine.processing.Remove( this );
			return;
		}

		// Function from file: dominator.dm
		public void healthcheck( dynamic damage = null ) {
			string iconname = null;
			EffectSystem_SparkSpread sparks = null;

			iconname = "dominator";

			if ( Lang13.Bool( this.gang ) ) {
				iconname += "-" + this.gang.color;
				this.SetLuminosity( 3 );
			}
			sparks = new EffectSystem_SparkSpread();
			this.health -= Convert.ToDouble( damage );

			if ( this.health > this.maxhealth / 2 ) {
				
				if ( Rand13.PercentChance( Convert.ToInt32( damage * 2 ) ) ) {
					sparks.set_up( 5, 1, this );
					sparks.start();
				}
			} else if ( this.operating >= 0 ) {
				sparks.set_up( 5, 1, this );
				sparks.start();
				this.overlays.Add( "damage" );
			}

			if ( this.operating != -1 ) {
				
				if ( this.health <= 0 ) {
					this.set_broken();
				} else {
					this.icon_state = iconname;
				}
			}

			if ( this.health <= -100 ) {
				new Obj_Item_Stack_Sheet_Plasteel( this.loc );
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: dominator.dm
		public override int? process( dynamic seconds = null ) {
			dynamic domloc = null;
			Gang G = null;

			base.process( (object)(seconds) );

			if ( Lang13.Bool( this.gang ) && Lang13.Bool( Lang13.IsNumber( this.gang.dom_timer ) ) ) {
				
				if ( Convert.ToDouble( this.gang.dom_timer ) > 0 ) {
					GlobalFuncs.playsound( this.loc, "sound/items/timer.ogg", 10, 0 );

					if ( !this.warned && Convert.ToDouble( this.gang.dom_timer ) < 180 ) {
						this.warned = true;
						domloc = GlobalFuncs.get_area( this.loc );
						((Gang)this.gang).message_gangtools( "Less than 3 minutes remain in hostile takeover. Defend your dominator at " + domloc.map_name + "!" );

						foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.gangs, typeof(Gang) )) {
							G = _a;
							

							if ( G != this.gang ) {
								G.message_gangtools( "WARNING: " + this.gang.name + " Gang takeover imminent. Their dominator at " + domloc.map_name + " must be destroyed!", true, true );
							}
						}
					}
				} else {
					GlobalVars.SSmachine.processing.Remove( this );
				}
			}
			return null;
		}

		// Function from file: dominator.dm
		public override double examine( dynamic user = null ) {
			int time = 0;

			base.examine( (object)(user) );

			if ( this.operating == -1 ) {
				user.WriteMsg( "<span class='danger'>It looks completely busted.</span>" );
				return 0;
			}

			if ( Lang13.Bool( this.gang ) && Lang13.Bool( Lang13.IsNumber( this.gang.dom_timer ) ) ) {
				time = Num13.MaxInt( Convert.ToInt32( this.gang.dom_timer ), 0 );

				if ( time > 0 ) {
					user.WriteMsg( "<span class='notice'>Hostile Takeover in progress. Estimated " + time + " seconds remain.</span>" );
				} else {
					user.WriteMsg( "<span class='notice'>Hostile Takeover of " + GlobalFuncs.station_name() + " successful. Have a great day.</span>" );
				}
			} else {
				user.WriteMsg( "<span class='notice'>System on standby.</span>" );
			}
			user.WriteMsg( "<span class='danger'>System Integrity: " + Num13.Round( this.health / this.maxhealth * 100, 1 ) + "%</span>" );
			return 0;
		}

		// Function from file: dominator.dm
		public override void tesla_act( double power = 0 ) {
			GlobalFuncs.qdel( this );
			return;
		}

	}

}
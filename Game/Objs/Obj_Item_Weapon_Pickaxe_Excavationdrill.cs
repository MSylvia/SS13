// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Pickaxe_Excavationdrill : Obj_Item_Weapon_Pickaxe {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/xenoarch.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/xenoarch.dmi" );
			this.item_state = "excavationdrill";
			this.excavation_amount = 0.5;
			this.digspeed = 30;
			this.drill_sound = "sound/weapons/thudswoosh.ogg";
			this.drill_verb = "drilling";
			this.w_class = 2;
			this.w_type = 5;
			this.attack_verb = new ByTable(new object [] { "drilled" });
			this.hitsound = "sound/weapons/circsawhit.ogg";
			this.icon = "icons/obj/xenoarchaeology.dmi";
			this.icon_state = "excavationdrill0";
		}

		public Obj_Item_Weapon_Pickaxe_Excavationdrill ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tools_excdrill.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic depth = null;

			base.examine( (object)(user), size );
			depth = this.excavation_amount * 2;
			GlobalFuncs.to_chat( user, "<span class='info'>It is currently set at " + depth + "cm.</span>" );
			return null;
		}

		// Function from file: tools_excdrill.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic depth = null;

			depth = Interface13.Input( "Put the desired depth (1-30 centimeters).", "Set Depth", this.excavation_amount * 2, null, null, InputType.Num );

			if ( Convert.ToDouble( depth ) > 30 || Convert.ToDouble( depth ) < 1 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Invalid depth.</span>" );
				return null;
			}
			this.excavation_amount = depth / 2;
			GlobalFuncs.to_chat( user, "<span class='notice'>You set the depth to " + depth + "cm.</span>" );

			if ( Convert.ToDouble( depth ) < 4 ) {
				this.icon_state = "excavationdrill0";
			} else if ( Convert.ToDouble( depth ) >= 4 && Convert.ToDouble( depth ) < 8 ) {
				this.icon_state = "excavationdrill1";
			} else if ( Convert.ToDouble( depth ) >= 8 && Convert.ToDouble( depth ) < 12 ) {
				this.icon_state = "excavationdrill2";
			} else if ( Convert.ToDouble( depth ) >= 12 && Convert.ToDouble( depth ) < 16 ) {
				this.icon_state = "excavationdrill3";
			} else if ( Convert.ToDouble( depth ) >= 16 && Convert.ToDouble( depth ) < 20 ) {
				this.icon_state = "excavationdrill4";
			} else if ( Convert.ToDouble( depth ) >= 20 && Convert.ToDouble( depth ) < 24 ) {
				this.icon_state = "excavationdrill5";
			} else if ( Convert.ToDouble( depth ) >= 24 && Convert.ToDouble( depth ) < 28 ) {
				this.icon_state = "excavationdrill6";
			} else {
				this.icon_state = "excavationdrill7";
			}
			return null;
		}

	}

}
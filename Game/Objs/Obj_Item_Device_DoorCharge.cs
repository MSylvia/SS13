// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_DoorCharge : Obj_Item_Device {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.w_class = 2;
			this.throw_range = 4;
			this.throw_speed = 1;
			this.force = 3;
			this.attack_verb = new ByTable(new object [] { "blown up", "exploded", "detonated" });
			this.materials = new ByTable().Set( "$metal", 50 ).Set( "$glass", 30 );
			this.origin_tech = "syndicate=3;combat=2";
			this.icon_state = "doorCharge";
		}

		public Obj_Item_Device_DoorCharge ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: doorCharge.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( GlobalVars.ticker.mode.traitors.Contains( user.mind ) ) {
				user.WriteMsg( "A small explosive device that can be used to sabotage airlocks to cause an explosion upon opening. To apply, remove the airlock's maintenance panel and place it within." );
			} else {
				user.WriteMsg( "A small, suspicious object that feels lukewarm when held." );
			}
			return 0;
		}

		// Function from file: doorCharge.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			
			switch ((int?)( severity )) {
				case 1:
					this.visible_message( "<span class='warning'>" + this + " detonates!</span>" );
					GlobalFuncs.explosion( this.loc, 0, 2, 1, null, null, null, 4 );
					GlobalFuncs.qdel( this );
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						this.ex_act( 1 );
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 25 ) ) {
						this.ex_act( 1 );
					}
					break;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Atmospherics_Trinary_Tvalve : Obj_Machinery_Atmospherics_Trinary {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.mirror = typeof(Obj_Machinery_Atmospherics_Trinary_Tvalve_Mirrored);
			this.icon = "icons/obj/atmospherics/valve.dmi";
			this.icon_state = "tvalve0";
		}

		public Obj_Machinery_Atmospherics_Trinary_Tvalve ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: t_valve.dm
		public override ByTable return_network_air( PipeNetwork reference = null ) {
			return null;
		}

		// Function from file: t_valve.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Mob_Dead_Observer && !GlobalFuncs.canGhostWrite( a, this, "toggles" ) ) {
				GlobalFuncs.to_chat( a, "<span class='warning'>Nope.</span>" );
				return null;
			}
			this.investigation_log( "atmos", "was " + ( Lang13.Bool( this.state ) ? "opened (straight)" : "closed (side)" ) + " by " + GlobalFuncs.key_name( Task13.User ) );
			this.add_fingerprint( Task13.User );
			this.update_icon( 0, 1 );
			Task13.Sleep( 10 );

			if ( Lang13.Bool( this.state ) ) {
				this.go_straight();
			} else {
				this.go_to_side();
			}
			return null;
		}

		// Function from file: t_valve.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: t_valve.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return null;
		}

		// Function from file: t_valve.dm
		public bool go_straight(  ) {
			
			if ( !Lang13.Bool( this.state ) ) {
				return false;
			}
			this.state = 0;
			this.update_icon();

			if ( this.network1 != null ) {
				GlobalFuncs.returnToPool( this.network1 );
			}

			if ( this.network2 != null ) {
				GlobalFuncs.returnToPool( this.network2 );
			}
			this.build_network();

			if ( this.network1 != null && this.network3 != null ) {
				((dynamic)this.network1).merge( this.network3 );
				this.network3 = this.network1;
			}

			if ( this.network1 != null ) {
				((dynamic)this.network1).update = 1;
			} else if ( this.network3 != null ) {
				((dynamic)this.network3).update = 1;
			}
			return true;
		}

		// Function from file: t_valve.dm
		public bool go_to_side(  ) {
			
			if ( Lang13.Bool( this.state ) ) {
				return false;
			}
			this.state = 1;
			this.update_icon();

			if ( this.network1 != null ) {
				GlobalFuncs.returnToPool( this.network1 );
			}

			if ( this.network3 != null ) {
				GlobalFuncs.returnToPool( this.network3 );
			}
			this.build_network();

			if ( this.network1 != null && this.network2 != null ) {
				((dynamic)this.network1).merge( this.network2 );
				this.network2 = this.network1;
			}

			if ( this.network1 != null ) {
				((dynamic)this.network1).update = 1;
			} else if ( this.network2 != null ) {
				((dynamic)this.network2).update = 1;
			}
			return true;
		}

		// Function from file: t_valve.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			base.initialize( suppress_icon_check );
			this.go_to_side();
			this.go_straight();
			return false;
		}

		// Function from file: t_valve.dm
		public override dynamic network_expand( PipeNetwork new_network = null, Obj_Machinery_Atmospherics reference = null ) {
			
			if ( reference == this.node1 ) {
				this.network1 = new_network;

				if ( Lang13.Bool( this.state ) ) {
					this.network2 = new_network;
				} else {
					this.network3 = new_network;
				}
			} else if ( reference == this.node2 ) {
				this.network2 = new_network;

				if ( Lang13.Bool( this.state ) ) {
					this.network1 = new_network;
				}
			} else if ( reference == this.node3 ) {
				this.network3 = new_network;

				if ( !Lang13.Bool( this.state ) ) {
					this.network1 = new_network;
				}
			}

			if ( new_network.normal_members.Find( this ) != 0 ) {
				return 0;
			}
			new_network.normal_members.Add( this );

			if ( Lang13.Bool( this.state ) ) {
				
				if ( reference == this.node1 ) {
					
					if ( this.node2 != null ) {
						return this.node2.network_expand( new_network, this );
					}
				} else if ( reference == this.node2 ) {
					
					if ( this.node1 != null ) {
						return this.node1.network_expand( new_network, this );
					}
				}
			} else if ( reference == this.node1 ) {
				
				if ( this.node3 != null ) {
					return this.node3.network_expand( new_network, this );
				}
			} else if ( reference == this.node3 ) {
				
				if ( this.node1 != null ) {
					return this.node1.network_expand( new_network, this );
				}
			}
			return null;
		}

		// Function from file: t_valve.dm
		public override string investigation_log( string subject = null, string message = null ) {
			this.activity_log += base.investigation_log( subject, message );
			return null;
		}

		// Function from file: t_valve.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( Lang13.Bool( target ) ) {
				Icon13.Flick( "tvalve" + this.state + !Lang13.Bool( this.state ), this );
			} else {
				this.icon_state = "tvalve" + this.state;
			}
			base.update_icon( (object)(location), (object)(target) );
			return null;
		}

	}

}
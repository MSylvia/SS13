// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_LightSwitch : Obj_Machinery {

		public bool on = true;
		public dynamic area = null;
		public dynamic otherarea = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/power.dmi";
			this.icon_state = "light1";
		}

		// Function from file: lightswitch.dm
		public Obj_Machinery_LightSwitch ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 5, (Task13.Closure)(() => {
				this.area = this.loc.loc;

				if ( Lang13.Bool( this.otherarea ) ) {
					this.area = Lang13.FindObj( Lang13.FindClass( "/area/" + this.otherarea ) );
				}

				if ( !Lang13.Bool( this.name ) ) {
					this.name = "light switch (" + this.area.name + ")";
				}
				this.on = this.area.lightswitch;
				this.updateicon();
				return;
			}));
			return;
		}

		// Function from file: lightswitch.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				base.emp_act( severity );
				return 0;
			}
			this.power_change();
			base.emp_act( severity );
			return 0;
		}

		// Function from file: lightswitch.dm
		public override void power_change(  ) {
			
			if ( !Lang13.Bool( this.otherarea ) ) {
				
				if ( Lang13.Bool( this.powered( 2 ) ) ) {
					this.stat &= 65533;
				} else {
					this.stat |= 2;
				}
				this.updateicon();
			}
			return;
		}

		// Function from file: lightswitch.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic A = null;
			Obj_Machinery_LightSwitch L = null;

			this.on = !this.on;

			foreach (dynamic _b in Lang13.Enumerate( this.area.master.related )) {
				A = _b;
				
				A.lightswitch = this.on;
				A.updateicon();

				foreach (dynamic _a in Lang13.Enumerate( A, typeof(Obj_Machinery_LightSwitch) )) {
					L = _a;
					
					L.on = this.on;
					L.updateicon();
				}
			}
			this.area.master.power_change();
			return null;
		}

		// Function from file: lightswitch.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			this.attack_hand( a );
			return null;
		}

		// Function from file: lightswitch.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "It is " + ( this.on ? "on" : "off" ) + "." );
			return 0;
		}

		// Function from file: lightswitch.dm
		public void updateicon(  ) {
			
			if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "light-p";
			} else if ( this.on ) {
				this.icon_state = "light1";
			} else {
				this.icon_state = "light0";
			}
			return;
		}

	}

}
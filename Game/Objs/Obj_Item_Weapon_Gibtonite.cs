// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gibtonite : Obj_Item_Weapon {

		public bool primed = false;
		public int det_time = 100;
		public int quality = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "Gibtonite ore";
			this.w_class = 4;
			this.throw_range = 0;
			this.anchored = 1;
			this.flags = 352;
			this.icon = "icons/obj/mining.dmi";
			this.icon_state = "Gibtonite ore";
		}

		public Obj_Item_Weapon_Gibtonite ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: ores_coins.dm
		public void GibtoniteReaction( dynamic user = null, bool? triggered_by_explosive = null ) {
			triggered_by_explosive = triggered_by_explosive ?? false;

			dynamic bombturf = null;
			dynamic A = null;
			int? notify_admins = null;

			
			if ( !this.primed ) {
				GlobalFuncs.playsound( this, "sound/effects/hit_on_shattered_glass.ogg", 50, 1 );
				this.primed = true;
				this.icon_state = "Gibtonite active";
				bombturf = GlobalFuncs.get_turf( this );
				A = GlobalFuncs.get_area( bombturf );
				notify_admins = 0;

				if ( this.z != 5 ) {
					notify_admins = 1;
				}

				if ( Lang13.Bool( notify_admins ) ) {
					
					if ( triggered_by_explosive == true ) {
						GlobalFuncs.message_admins( "An explosion has triggered a " + this.name + " to detonate at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + bombturf.x + ";Y=" + bombturf.y + ";Z=" + bombturf.z + "'>" + A.name + " (JMP)</a>." );
					} else {
						GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> has triggered a " ).item( this.name ).str( " to detonate at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
					}
				}

				if ( triggered_by_explosive == true ) {
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "An explosion has primed a " + this.name + " for detonation at " + A.name + "(" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")" ) ) );
				} else {
					((Ent_Static)user).visible_message( "<span class='warning'>" + user + " strikes the " + this + ", causing a chain reaction!</span>" );
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( Task13.User ) + " has primed a " + this.name + " for detonation at " + A.name + "(" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")" ) ) );
				}
				Task13.Schedule( this.det_time, (Task13.Closure)(() => {
					
					if ( this.primed ) {
						
						switch ((int)( this.quality )) {
							case 1:
								GlobalFuncs.explosion( this.loc, -1, 1, 3, null, notify_admins );
								break;
							case 2:
								GlobalFuncs.explosion( this.loc, 1, 2, 5, null, notify_admins );
								break;
							case 3:
								GlobalFuncs.explosion( this.loc, 2, 4, 9, null, notify_admins );
								break;
						}
						GlobalFuncs.qdel( this );
					}
					return;
				}));
			}
			return;
		}

		// Function from file: ores_coins.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			this.GibtoniteReaction( null, true );
			return false;
		}

		// Function from file: ores_coins.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj is Obj_Item_Projectile_Bullet ) {
				this.GibtoniteReaction( Proj.firer );
			}
			base.bullet_act( (object)(Proj), (object)(def_zone) );
			return null;
		}

		// Function from file: ores_coins.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Pickaxe || a is Obj_Item_Weapon_Resonator ) {
				this.GibtoniteReaction( b );
				return null;
			}

			if ( a is Obj_Item_Device_MiningScanner && this.primed ) {
				this.primed = false;
				((Ent_Static)b).visible_message( "<span class='notice'>The chain reaction was stopped! ...The ore's quality went down.</span>" );
				this.icon_state = "Gibtonite ore";
				this.quality = 1;
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

	}

}
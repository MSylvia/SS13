// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_Infra : Obj_Item_Device_Assembly {

		public bool on = false;
		public bool visible = false;
		public Obj_Effect_Beam_IBeam first = null;
		public Obj_Effect_Beam_IBeam last = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.materials = new ByTable().Set( "$metal", 1000 ).Set( "$glass", 500 );
			this.origin_tech = "magnets=2";
			this.icon_state = "infrared";
		}

		// Function from file: infrared.dm
		public Obj_Item_Device_Assembly_Infra ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.SSobj.processing.Or( this );
			return;
		}

		// Function from file: infrared.dm
		public override bool AltClick( Mob user = null ) {
			base.AltClick( user );

			if ( user.incapacitated() ) {
				user.WriteMsg( "<span class='warning'>You can't do that right now!</span>" );
				return false;
			}

			if ( !( Map13.GetDistance( this, user ) <= 1 ) ) {
				return false;
			} else {
				this.__CallVerb("Rotate Infrared Laser" );
			}
			return false;
		}

		// Function from file: infrared.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			base.Topic( href, href_list, (object)(hsrc) );

			if ( Task13.User.incapacitated() || !( Map13.GetDistance( this.loc, Task13.User ) <= 1 ) ) {
				Interface13.Browse( Task13.User, null, "window=infra" );
				GlobalFuncs.onclose( Task13.User, "infra" );
				return null;
			}

			if ( Lang13.Bool( href_list["state"] ) ) {
				this.on = !this.on;
				this.update_icon();
			}

			if ( Lang13.Bool( href_list["visible"] ) ) {
				this.visible = !this.visible;

				if ( this.first != null ) {
					this.first.vis_spread( this.visible );
				}
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				Interface13.Browse( Task13.User, null, "window=infra" );
				return null;
			}

			if ( Task13.User != null ) {
				this.attack_self( Task13.User );
			}
			return null;
		}

		// Function from file: infrared.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;

			
			if ( this.is_secured( user ) ) {
				((Mob)user).set_machine( this );
				dat = "<TT><B>Infrared Laser</B>\n<B>Status</B>: " + ( this.on ? new Txt( "<A href='?src=" ).Ref( this ).str( ";state=0'>On</A>" ).ToString() : new Txt( "<A href='?src=" ).Ref( this ).str( ";state=1'>Off</A>" ).ToString() ) + "<BR>\n<B>Visibility</B>: " + ( this.visible ? new Txt( "<A href='?src=" ).Ref( this ).str( ";visible=0'>Visible</A>" ).ToString() : new Txt( "<A href='?src=" ).Ref( this ).str( ";visible=1'>Invisible</A>" ).ToString() ) + "<BR>\n</TT>";
				dat += new Txt( "<BR><BR><A href='?src=" ).Ref( this ).str( ";refresh=1'>Refresh</A>" ).ToString();
				dat += new Txt( "<BR><BR><A href='?src=" ).Ref( this ).str( ";close=1'>Close</A>" ).ToString();
				Interface13.Browse( user, dat, "window=infra" );
				GlobalFuncs.onclose( user, "infra" );
				return null;
			}
			return null;
		}

		// Function from file: infrared.dm
		public bool trigger_beam(  ) {
			
			if ( !this.secured || !this.on || this.cooldown > 0 ) {
				return false;
			}
			this.pulse( false );
			this.audible_message( new Txt().icon( this ).str( " *beep* *beep*" ).ToString(), null, 3 );
			this.cooldown = 2;
			Task13.Schedule( 10, (Task13.Closure)(() => {
				this.process_cooldown();
				return;
			}));
			return false;
		}

		// Function from file: infrared.dm
		public override bool holder_movement(  ) {
			
			if ( !( this.holder != null ) ) {
				return false;
			}
			GlobalFuncs.qdel( this.first );
			return true;
		}

		// Function from file: infrared.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			int t = 0;

			t = this.dir;
			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			this.dir = t;
			GlobalFuncs.qdel( this.first );
			return false;
		}

		// Function from file: infrared.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			GlobalFuncs.qdel( this.first );
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: infrared.dm
		public override int? process( dynamic seconds = null ) {
			dynamic T = null;
			Obj_Effect_Beam_IBeam I = null;

			
			if ( !this.on ) {
				
				if ( this.first != null ) {
					GlobalFuncs.qdel( this.first );
				}
				return null;
			}

			if ( !this.secured ) {
				return null;
			}

			if ( this.first != null && this.last != null ) {
				this.last.process();
				return null;
			}
			T = GlobalFuncs.get_turf( this );

			if ( Lang13.Bool( T ) ) {
				I = new Obj_Effect_Beam_IBeam( T );
				I.master = this;
				I.density = true;
				I.dir = this.dir;
				this.first = I;
				Map13.Step( I, I.dir );

				if ( this.first != null ) {
					I.density = false;
					I.vis_spread( this.visible );
					I.limit = 8;
					I.process();
				}
			}
			return null;
		}

		// Function from file: infrared.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			this.overlays.Cut();
			this.attached_overlays = new ByTable();

			if ( this.on ) {
				this.overlays.Add( "infrared_on" );
				this.attached_overlays.Add( "infrared_on" );
			}

			if ( this.holder != null ) {
				this.holder.update_icon();
			}
			return false;
		}

		// Function from file: infrared.dm
		public override bool toggle_secure(  ) {
			this.secured = !this.secured;

			if ( this.secured ) {
				GlobalVars.SSobj.processing.Or( this );
			} else {
				this.on = false;

				if ( this.first != null ) {
					GlobalFuncs.qdel( this.first );
				}
				GlobalVars.SSobj.processing.Remove( this );
			}
			this.update_icon();
			return this.secured;
		}

		// Function from file: infrared.dm
		public override bool activate(  ) {
			
			if ( !base.activate() ) {
				return false;
			}
			this.on = !this.on;
			this.update_icon();
			return true;
		}

		// Function from file: infrared.dm
		public override string describe(  ) {
			return "The infrared trigger is " + ( this.on ? "on" : "off" ) + ".";
		}

		// Function from file: infrared.dm
		public override dynamic Destroy(  ) {
			
			if ( this.first != null ) {
				GlobalFuncs.qdel( this.first );
			}
			return base.Destroy();
		}

		// Function from file: infrared.dm
		[Verb]
		[VerbInfo( name: "Rotate Infrared Laser", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void rotate(  ) {
			
			if ( Task13.User.incapacitated() ) {
				return;
			}
			this.dir = Num13.Rotate( this.dir, 90 );
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Dummy_Chameleon : Obj_Effect_Dummy {

		public bool can_move = true;
		public Obj_Item_Device_Chameleon master = null;

		public Obj_Effect_Dummy_Chameleon ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: chameleonproj.dm
		public override dynamic Destroy(  ) {
			this.master.disrupt( false );
			return base.Destroy();
		}

		// Function from file: chameleonproj.dm
		public override bool relaymove( Mob user = null, int? direction = null ) {
			
			if ( this.loc is Tile_Space || !Lang13.Bool( direction ) ) {
				return false;
			}

			if ( this.can_move ) {
				this.can_move = false;

				dynamic _a = user.bodytemperature; // Was a switch-case, sorry for the mess.
				if ( 300<=_a&&_a<=Double.PositiveInfinity ) {
					Task13.Schedule( 10, (Task13.Closure)(() => {
						this.can_move = true;
						return;
					}));
				} else if ( 295<=_a&&_a<=300 ) {
					Task13.Schedule( 13, (Task13.Closure)(() => {
						this.can_move = true;
						return;
					}));
				} else if ( 280<=_a&&_a<=295 ) {
					Task13.Schedule( 16, (Task13.Closure)(() => {
						this.can_move = true;
						return;
					}));
				} else if ( 260<=_a&&_a<=280 ) {
					Task13.Schedule( 20, (Task13.Closure)(() => {
						this.can_move = true;
						return;
					}));
				} else {
					Task13.Schedule( 25, (Task13.Closure)(() => {
						this.can_move = true;
						return;
					}));
				}
				Map13.Step( this, direction ??0 );
			}
			return false;
		}

		// Function from file: chameleonproj.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			base.bullet_act( (object)(P), (object)(def_zone) );
			this.master.disrupt();
			return null;
		}

		// Function from file: chameleonproj.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			this.master.disrupt();
			return false;
		}

		// Function from file: chameleonproj.dm
		public override bool attack_alien( dynamic user = null ) {
			this.master.disrupt();
			return false;
		}

		// Function from file: chameleonproj.dm
		public override bool attack_slime( Mob_Living_SimpleAnimal_Slime user = null ) {
			this.master.disrupt();
			return false;
		}

		// Function from file: chameleonproj.dm
		public override bool attack_animal( Mob_Living user = null ) {
			this.master.disrupt();
			return false;
		}

		// Function from file: chameleonproj.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			this.master.disrupt();
			return null;
		}

		// Function from file: chameleonproj.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			this.master.disrupt();
			return null;
		}

		// Function from file: chameleonproj.dm
		public void activate( Mob M = null, dynamic saved_appearance = null, Obj_Item_Device_Chameleon C = null ) {
			this.appearance = saved_appearance;
			M.loc = this;
			this.master = C;
			this.master.active_dummy = this;
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Lipstick : Obj_Item_Weapon {

		public string colour = "red";
		public bool open = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.icon_state = "lipstick";
		}

		public Obj_Item_Weapon_Lipstick ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cosmetics.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic H = null;

			
			if ( !this.open ) {
				return null;
			}

			if ( !( M is Mob ) ) {
				return null;
			}

			if ( M is Mob_Living_Carbon_Human ) {
				H = M;

				if ( Lang13.Bool( H.lip_style ) ) {
					GlobalFuncs.to_chat( user, "<span class='notice'>You need to wipe off the old lipstick first!</span>" );
					return null;
				}

				if ( H == user ) {
					((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " does their lips with " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You take a moment to apply " ).the( this ).item().str( ". Perfect!</span>" ).ToString() );
					H.lip_style = this.colour;
					((Mob_Living_Carbon_Human)H).update_body();
				} else {
					((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " begins to do " ).item( H ).str( "'s lips with " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You begin to apply " ).the( this ).item().str( ".</span>" ).ToString() );

					if ( GlobalFuncs.do_after( user, H, 20 ) && GlobalFuncs.do_after( H, null, 20, 5, false ) ) {
						((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " does " ).item( H ).str( "'s lips with " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You apply " ).the( this ).item().str( ".</span>" ).ToString() );
						H.lip_style = this.colour;
						((Mob_Living_Carbon_Human)H).update_body();
					}
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='notice'>Where are the lips on that?</span>" );
			}
			return null;
		}

		// Function from file: cosmetics.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You twist " ).the( this ).item().str( " " ).item( ( this.open ? "closed" : "open" ) ).str( ".</span>" ).ToString() );
			this.open = !this.open;

			if ( this.open ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_" + this.colour;
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Firealarm : Obj_Machinery {

		public bool detecting = true;
		public int buildstage = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 2;
			this.active_power_usage = 6;
			this.power_channel = 3;
			this.icon = "icons/obj/monitors.dmi";
			this.icon_state = "fire0";
		}

		// Function from file: firealarm.dm
		public Obj_Machinery_Firealarm ( dynamic loc = null, int dir = 0, dynamic building = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( dir != 0 ) {
				this.dir = dir;
			}

			if ( Lang13.Bool( building ) ) {
				this.buildstage = 0;
				this.panel_open = 1;
				this.pixel_x = ( ( dir & 3 ) != 0 ? 0 : ( dir == 4 ? -24 : 24 ) );
				this.pixel_y = ( ( dir & 3 ) != 0 ? ( dir == 1 ? -24 : 24 ) : 0 );
			}
			this.update_icon();
			return;
		}

		// Function from file: firealarm.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			Obj_Item_Stack_CableCoil coil = null;
			dynamic coil2 = null;
			Obj_Item_Wallframe_Firealarm frame = null;

			this.add_fingerprint( user );

			if ( A is Obj_Item_Weapon_Screwdriver && this.buildstage == 2 ) {
				GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
				this.panel_open = !Lang13.Bool( this.panel_open ) ?1:0;
				user.WriteMsg( "<span class='notice'>The wires have been " + ( Lang13.Bool( this.panel_open ) ? "exposed" : "unexposed" ) + ".</span>" );
				this.update_icon();
				return null;
			}

			if ( Lang13.Bool( this.panel_open ) ) {
				
				switch ((int)( this.buildstage )) {
					case 2:
						
						if ( A is Obj_Item_Device_Multitool ) {
							this.detecting = !this.detecting;

							if ( this.detecting ) {
								((Ent_Static)user).visible_message( "" + user + " has reconnected " + this + "'s detecting unit!", "<span class='notice'>You reconnect " + this + "'s detecting unit.</span>" );
							} else {
								((Ent_Static)user).visible_message( "" + user + " has disconnected " + this + "'s detecting unit!", "<span class='notice'>You disconnect " + this + "'s detecting unit.</span>" );
							}
							return null;
						} else if ( A is Obj_Item_Weapon_Wirecutters ) {
							this.buildstage = 1;
							GlobalFuncs.playsound( this.loc, "sound/items/Wirecutter.ogg", 50, 1 );
							coil = new Obj_Item_Stack_CableCoil();
							coil.amount = 5;
							coil.loc = user.loc;
							user.WriteMsg( new Txt( "<span class='notice'>You cut the wires from " ).the( this ).item().str( ".</span>" ).ToString() );
							this.update_icon();
							return null;
						}
						break;
					case 1:
						
						if ( A is Obj_Item_Stack_CableCoil ) {
							coil2 = A;

							if ( ( ((Obj_Item_Stack)coil2).get_amount() ??0) < 5 ) {
								user.WriteMsg( "<span class='warning'>You need more cable for this!</span>" );
							} else {
								coil2.use( 5 );
								this.buildstage = 2;
								user.WriteMsg( new Txt( "<span class='notice'>You wire " ).the( this ).item().str( ".</span>" ).ToString() );
								this.update_icon();
							}
							return null;
						} else if ( A is Obj_Item_Weapon_Crowbar ) {
							GlobalFuncs.playsound( this.loc, "sound/items/Crowbar.ogg", 50, 1 );
							((Ent_Static)user).visible_message( "" + user.name + " removes the electronics from " + this.name + ".", "<span class='notice'>You start prying out the circuit...</span>" );

							if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
								
								if ( this.buildstage == 1 ) {
									
									if ( ( this.stat & 1 ) != 0 ) {
										user.WriteMsg( "<span class='notice'>You remove the destroyed circuit.</span>" );
									} else {
										user.WriteMsg( "<span class='notice'>You pry out the circuit.</span>" );
										new Obj_Item_Weapon_Electronics_Firealarm( user.loc );
									}
									this.buildstage = 0;
									this.update_icon();
								}
							}
							return null;
						}
						break;
					case 0:
						
						if ( A is Obj_Item_Weapon_Electronics_Firealarm ) {
							user.WriteMsg( "<span class='notice'>You insert the circuit.</span>" );
							GlobalFuncs.qdel( A );
							this.buildstage = 1;
							this.update_icon();
							return null;
						} else if ( A is Obj_Item_Weapon_Wrench ) {
							((Ent_Static)user).visible_message( "" + user + " removes the fire alarm assembly from the wall.", "<span class='notice'>You remove the fire alarm assembly from the wall.</span>" );
							frame = new Obj_Item_Wallframe_Firealarm();
							frame.loc = user.loc;
							GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
							GlobalFuncs.qdel( this );
							return null;
						}
						break;
				}
			}
			return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
		}

		// Function from file: firealarm.dm
		public override int? ui_act( string action = null, ByTable _params = null, Tgui ui = null, UiState state = null ) {
			int? _default = null;

			
			if ( Lang13.Bool( base.ui_act( action, _params, ui, state ) ) || this.buildstage != 2 ) {
				return _default;
			}

			switch ((string)( action )) {
				case "reset":
					this.reset();
					_default = GlobalVars.TRUE;
					break;
				case "alarm":
					this.alarm();
					_default = GlobalVars.TRUE;
					break;
			}
			return _default;
		}

		// Function from file: firealarm.dm
		public override ByTable ui_data( dynamic user = null ) {
			ByTable data = null;
			dynamic A = null;

			data = new ByTable();
			data["emagged"] = this.emagged;
			data["seclevel"] = GlobalFuncs.get_security_level();
			A = GlobalFuncs.get_area( this );
			data["alarm"] = A.fire;
			return data;
		}

		// Function from file: firealarm.dm
		public override int ui_interact( dynamic user = null, string ui_key = null, Tgui ui = null, bool? force_open = null, Tgui master_ui = null, UiState state = null ) {
			ui_key = ui_key ?? "main";
			force_open = force_open ?? false;
			state = state ?? GlobalVars.default_state;

			ui = GlobalVars.SStgui.try_update_ui( user, this, ui_key, ui, force_open );

			if ( !( ui != null ) ) {
				ui = new Tgui( user, this, ui_key, "firealarm", this.name, 300, 150, master_ui, state );
				ui.open();
			}
			return 0;
		}

		// Function from file: firealarm.dm
		public void reset_in( int time = 0 ) {
			GlobalFuncs.addtimer( this, "reset", time, GlobalVars.FALSE );
			return;
		}

		// Function from file: firealarm.dm
		public void reset(  ) {
			dynamic A = null;

			
			if ( !this.is_operational() ) {
				return;
			}
			A = GlobalFuncs.get_area( this );
			((Zone)A).firereset( this );
			return;
		}

		// Function from file: firealarm.dm
		public void alarm_in( int time = 0 ) {
			GlobalFuncs.addtimer( this, "alarm", time, GlobalVars.FALSE );
			return;
		}

		// Function from file: firealarm.dm
		public void alarm(  ) {
			dynamic A = null;

			
			if ( !this.is_operational() ) {
				return;
			}
			A = GlobalFuncs.get_area( this );
			((Zone)A).firealert( this );
			GlobalFuncs.playsound( this.loc, "sound/ambience/signal.ogg", 75, 0 );
			return;
		}

		// Function from file: firealarm.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			
			if ( !Lang13.Bool( this.emagged ) && this.detecting && Convert.ToDouble( exposed_temperature ) > 473.41 ) {
				this.alarm();
			}
			return null;
		}

		// Function from file: firealarm.dm
		public override bool emag_act( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.emagged ) ) {
				this.emagged = 1;

				if ( Lang13.Bool( user ) ) {
					((Ent_Static)user).visible_message( "<span class='warning'>Sparks fly out of the " + this + "!</span>", "<span class='notice'>You emag the " + this + ", disabling its thermal sensors.</span>" );
				}
				GlobalFuncs.playsound( this.loc, "sound/effects/sparks4.ogg", 50, 1 );
			}
			return false;
		}

		// Function from file: firealarm.dm
		public override double emp_act( int severity = 0 ) {
			
			if ( Rand13.PercentChance( ((int)( 50 / severity )) ) ) {
				this.alarm();
			}
			return 0;
		}

		// Function from file: firealarm.dm
		public override dynamic bullet_act( dynamic P = null, dynamic def_zone = null ) {
			
			if ( Rand13.PercentChance( 50 ) ) {
				this.alarm();
			}
			return null;
		}

		// Function from file: firealarm.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			Ent_Static A = null;

			this.overlays = new ByTable();
			A = this.loc;
			A = A.loc;

			if ( Lang13.Bool( this.panel_open ) ) {
				this.icon_state = "fire_b" + this.buildstage;
				return false;
			} else {
				this.icon_state = "fire0";

				if ( ( this.stat & 2 ) != 0 ) {
					return false;
				}

				if ( ( this.stat & 1 ) != 0 ) {
					this.icon_state = "firex";
					return false;
				}
				this.overlays.Add( "overlay_" + GlobalVars.security_level );

				if ( this.detecting ) {
					this.overlays.Add( "overlay_" + ( Lang13.Bool( ((dynamic)A).fire ) ? "fire" : "clear" ) );
				} else {
					this.overlays.Add( "overlay_fire" );
				}
			}
			return false;
		}

		// Function from file: firealarm.dm
		public override void power_change(  ) {
			base.power_change();
			this.update_icon();
			return;
		}

	}

}
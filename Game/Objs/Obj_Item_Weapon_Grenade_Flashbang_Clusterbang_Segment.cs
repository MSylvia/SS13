// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grenade_Flashbang_Clusterbang_Segment : Obj_Item_Weapon_Grenade_Flashbang_Clusterbang {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "clusterbang_segment";
		}

		// Function from file: flashbang.dm
		public Obj_Item_Weapon_Grenade_Flashbang_Clusterbang_Segment ( dynamic loc = null ) : base( (object)(loc) ) {
			int? stepdist = null;
			Ent_Static temploc = null;
			int dettime = 0;

			this.icon_state = "clusterbang_segment_active";
			this.active = true;
			this.banglet = true;
			stepdist = Rand13.Int( 1, 4 );
			temploc = this.loc;
			Map13.WalkAway( this, temploc, stepdist, 0 );
			dettime = Rand13.Int( 15, 60 );
			Task13.Schedule( dettime, (Task13.Closure)(() => {
				this.prime();
				return;
			}));
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: flashbang.dm
		public override void prime( dynamic L = null ) {
			int numspawned = 0;
			int? more = null;

			numspawned = Rand13.Int( 4, 8 );
			more = null;
			more = numspawned;

			while (( more ??0) > 0) {
				
				if ( Rand13.PercentChance( 35 ) ) {
					numspawned--;
				}
				more--;
			}

			while (numspawned > 0) {
				Task13.Schedule( 0, (Task13.Closure)(() => {
					new Obj_Item_Weapon_Grenade_Flashbang_Cluster( this.loc );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/armbomb.ogg", 75, 1, -3 );
					return;
				}));
				numspawned--;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				GlobalFuncs.qdel( this );
				return;
				return;
			}));
			return;
		}

	}

}
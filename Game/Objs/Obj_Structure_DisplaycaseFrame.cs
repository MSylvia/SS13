// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_DisplaycaseFrame : Obj_Structure {

		public dynamic circuit = null;
		public int state = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/stock_parts.dmi";
			this.icon_state = "box_glass";
		}

		public Obj_Structure_DisplaycaseFrame ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: displaycase.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			switch ((int)( this.state )) {
				case 1:
					this.icon_state = "box_glass_circuit";
					break;
				default:
					this.icon_state = "box_glass";
					break;
			}
			return null;
		}

		// Function from file: displaycase.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			int pstate = 0;
			dynamic T = null;
			Obj_Machinery_ConstructableFrame_MachineFrame MF = null;
			Obj_Structure_Displaycase C = null;

			pstate = this.state;
			T = GlobalFuncs.get_turf( this );

			switch ((int)( this.state )) {
				case 0:
					
					if ( a is Obj_Item_Weapon_Circuitboard_Airlock && a.icon_state != "door_electronics_smoked" ) {
						
						if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
							this.circuit = a;
							this.circuit.installed = 1;
							this.state++;
							GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
						}
					}

					if ( a is Obj_Item_Weapon_Crowbar ) {
						MF = new Obj_Machinery_ConstructableFrame_MachineFrame( T );
						MF.state = 1;
						MF.set_build_state( 1 );
						new Obj_Item_Stack_Sheet_Glass_Glass( T );
						GlobalFuncs.qdel( this );
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
						return null;
					}
					break;
				case 1:
					
					if ( a is Obj_Item_Weapon_Screwdriver ) {
						C = new Obj_Structure_Displaycase( T );

						if ( Lang13.Bool( this.circuit.one_access ) ) {
							C.req_access = null;
							C.req_one_access = this.circuit.conf_access;
						} else {
							C.req_access = this.circuit.conf_access;
							C.req_one_access = null;
						}
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
						GlobalFuncs.qdel( this );
						return null;
					}

					if ( a is Obj_Item_Weapon_Crowbar ) {
						this.circuit.loc = T;
						this.circuit.installed = 0;
						this.circuit = null;
						this.state--;
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
					}
					break;
			}

			if ( pstate != this.state ) {
				pstate = this.state;
				this.update_icon();
			}
			return null;
		}

		// Function from file: displaycase.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			base.Destroy( (object)(brokenup) );

			if ( Lang13.Bool( this.circuit ) ) {
				GlobalFuncs.qdel( this.circuit );
				this.circuit = null;
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_OrionShip : Obj_Item_Weapon {

		public bool active = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "ship";
		}

		public Obj_Item_Weapon_OrionShip ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: arcade.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.active ) {
				return null;
			}
			GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( Task13.User ) + " primed an explosive Orion ship for detonation." );
			GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " primed an explosive Orion ship for detonation." );
			user.WriteMsg( "<span class='warning'>You flip the switch on the underside of " + this + ".</span>" );
			this.active = true;
			this.visible_message( "<span class='notice'>" + this + " softly beeps and whirs to life!</span>" );
			GlobalFuncs.playsound( this.loc, "sound/machines/defib_saftyOn.ogg", 25, 1 );
			this.say( "This is ship ID #" + Rand13.Int( 1, 1000 ) + " to Orion Port Authority. We're coming in for landing, over." );
			Task13.Sleep( 20 );
			this.visible_message( "<span class='warning'>" + this + " begins to vibrate...</span>" );
			this.say( "Uh, Port? Having some issues with our reactor, could you check it out? Over." );
			Task13.Sleep( 30 );
			this.say( "Oh, God! Code Eight! CODE EIGHT! IT'S GONNA BL-" );
			GlobalFuncs.playsound( this.loc, "sound/machines/buzz-sigh.ogg", 25, 1 );
			Task13.Sleep( ((int)( 351 )) );
			this.visible_message( "<span class='userdanger'>" + this + " explodes!</span>" );
			GlobalFuncs.explosion( this.loc, 1, 2, 4, null, null, null, 3 );
			GlobalFuncs.qdel( this );
			return null;
		}

		// Function from file: arcade.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( !( Map13.GetDistance( user, this ) <= 1 ) ) {
				return 0;
			}

			if ( !this.active ) {
				user.WriteMsg( "<span class='notice'>There's a little switch on the bottom. It's flipped down.</span>" );
			} else {
				user.WriteMsg( "<span class='notice'>There's a little switch on the bottom. It's flipped up.</span>" );
			}
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Camera_Sepia : Obj_Item_Device_Camera {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "sepia-polaroid";
			this.icon_on = "sepia-camera";
			this.icon_off = "sepia-camera_off";
			this.mech_flags = 1;
			this.icon_state = "sepia-polaroid";
		}

		public Obj_Item_Device_Camera_Sepia ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photography.dm
		public override void printpicture( dynamic user = null, Icon temp = null, string mobs = null, bool? flag = null ) {
			Obj_Item_Weapon_Photo P = null;
			Icon small_img = null;
			Icon ic = null;
			Icon I1 = null;
			Icon I2 = null;

			P = new Obj_Item_Weapon_Photo();
			((Mob)user).put_in_hands( P );
			small_img = new Icon( temp );
			ic = new Icon( "icons/obj/items.dmi", "photo" );
			small_img.Scale( 8, 8 );
			ic.Blend( small_img, 3, 10, 13 );
			P.icon = ic;
			P.img = temp;
			P.info = mobs;
			P.pixel_x = Rand13.Int( -10, 10 );
			P.pixel_y = Rand13.Int( -10, 10 );

			if ( this.blueprints ) {
				P.blueprints = true;
				this.blueprints = false;
			}
			I1 = new Icon( P.icon, P.icon_state );
			I2 = new Icon( P.img );
			I1.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#704214" );
			I2.MapColors( "#4d4d4d", "#969696", "#1c1c1c", "#704214" );
			P.icon = I1;
			P.img = I2;
			return;
		}

		// Function from file: photography.dm
		public override string camera_get_mobs( dynamic the_turf = null ) {
			string mob_detail = null;
			Mob_Living_Carbon A = null;
			string holding = null;
			Mob_Living_SimpleAnimal S = null;
			Mob_Dead_Observer O = null;

			
			foreach (dynamic _a in Lang13.Enumerate( the_turf, typeof(Mob_Living_Carbon) )) {
				A = _a;
				
				holding = null;

				if ( Lang13.Bool( A.l_hand ) || Lang13.Bool( A.r_hand ) ) {
					
					if ( Lang13.Bool( A.l_hand ) ) {
						holding = new Txt( "They are holding " ).a( A.l_hand ).item().ToString();
					}

					if ( Lang13.Bool( A.r_hand ) ) {
						
						if ( Lang13.Bool( holding ) ) {
							holding += new Txt( " and " ).a( A.r_hand ).item().ToString();
						} else {
							holding = new Txt( "They are holding " ).a( A.r_hand ).item().ToString();
						}
					}
				}

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "You can see " + A + " on the photo" + ( Convert.ToDouble( A.health ) < 75 ? " - " + A + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ". ";
				} else {
					mob_detail += "You can also see " + A + " on the photo" + ( Convert.ToDouble( A.health ) < 75 ? " - " + A + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ".";
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( the_turf, typeof(Mob_Living_SimpleAnimal) )) {
				S = _b;
				

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "You can see " + S + " on the photo" + ( Convert.ToDouble( S.health ) < Convert.ToDouble( S.maxHealth / 2 ) ? " - " + S + " looks hurt" : "" ) + ".";
				} else {
					mob_detail += "You can also see " + S + " on the photo" + ( Convert.ToDouble( S.health ) < Convert.ToDouble( S.maxHealth / 2 ) ? " - " + S + " looks hurt" : "" ) + ".";
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( the_turf, typeof(Mob_Dead_Observer) )) {
				O = _c;
				

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "Wait...is that " + O + " on the photo? ";
				} else {
					mob_detail += "...wait a minute...isn't that " + O + " on the photo?";
				}
			}
			return mob_detail;
		}

		// Function from file: photography.dm
		public override Icon camera_get_icon( ByTable turfs = null, dynamic center = null ) {
			ByTable atoms = null;
			dynamic T = null;
			Ent_Dynamic A = null;
			ByTable sorted = null;
			int? j = null;
			double i = 0;
			dynamic c = null;
			dynamic c2 = null;
			Icon res = null;
			Ent_Static A2 = null;
			Icon img = null;
			double? offX = null;
			double? offY = null;

			atoms = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( turfs )) {
				T = _b;
				
				atoms.Add( T );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Dynamic) )) {
					A = _a;
					

					if ( A.invisibility != 0 ) {
						
						if ( A is Mob ) {
							atoms.Add( A );
						}
					} else {
						atoms.Add( A );
					}
				}
			}
			sorted = new ByTable();
			j = null;

			foreach (dynamic _c in Lang13.IterateRange( 1, atoms.len )) {
				i = _c;
				
				c = atoms[i];
				j = sorted.len;

				while (( j ??0) > 0) {
					c2 = sorted[j];

					if ( Convert.ToDouble( c2.layer ) <= Convert.ToDouble( c.layer ) ) {
						break;
					}
					j--;
				}
				sorted.Insert( ( j ??0) + 1, c );
			}
			res = new Icon( "icons/effects/96x96.dmi", "" );

			foreach (dynamic _d in Lang13.Enumerate( sorted, typeof(Ent_Static) )) {
				A2 = _d;
				
				img = GlobalFuncs.getFlatIcon( A2, A2.dir, 0 );

				if ( A2 is Mob_Living && Lang13.Bool( ((dynamic)A2).lying ) ) {
					img.Turn( Convert.ToDouble( ((dynamic)A2).lying ) );
				}
				offX = ( A2.x - Convert.ToDouble( center.x ) ) * 32 + A2.pixel_x + 33;
				offY = ( A2.y - Convert.ToDouble( center.y ) ) * 32 + A2.pixel_y + 33;

				if ( A2 is Ent_Dynamic ) {
					offX += Convert.ToDouble( ((dynamic)A2).step_x );
					offY += Convert.ToDouble( ((dynamic)A2).step_y );
				}
				res.Blend( img, GlobalFuncs.blendMode2iconMode( A2.blend_mode ), offX, offY );

				if ( A2 is Obj_Item_Blueprints ) {
					this.blueprints = true;
				}
			}
			return res;
		}

	}

}
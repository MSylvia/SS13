// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Crayon_Rainbow : Obj_Item_Toy_Crayon {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.paint_color = "#FFF000";
			this.colourName = "rainbow";
			this.uses = -1;
			this.icon_state = "crayonrainbow";
		}

		public Obj_Item_Toy_Crayon_Rainbow ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: crayons.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic temp = null;

			
			if ( Lang13.Bool( href_list["color"] ) ) {
				temp = Interface13.Input( Task13.User, "Please select colour.", "Crayon colour", null, null, InputType.Color );

				if ( Task13.User.restrained() || Task13.User.stat != 0 || Task13.User.get_active_hand() != this ) {
					return null;
				}
				this.paint_color = temp;
				this.update_window( Task13.User );
			} else {
				base.Topic( href, href_list, (object)(hsrc) );
			}
			return null;
		}

		// Function from file: crayons.dm
		public override void update_window( dynamic user = null ) {
			this.dat += new Txt( "<center><span style='border:1px solid #161616; background-color: " ).item( this.paint_color ).str( ";'>&nbsp;&nbsp;&nbsp;</span><a href='?src=" ).Ref( this ).str( ";color=1'>Change color</a></center>" ).ToString();
			base.update_window( (object)(user) );
			return;
		}

		// Function from file: crayons.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.update_window( user );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Gloves_Yellow_Power : Obj_Item_Clothing_Gloves_Yellow {

		public int next_shock = 0;

		public Obj_Item_Clothing_Gloves_Yellow_Power ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: color.dm
		public override bool Touch( Ent_Static A = null, Mob_Living user = null, bool proximity = false ) {
			int time = 0;
			dynamic T = null;
			dynamic U = null;
			dynamic cable = null;
			Powernet PN = null;
			Game_Data L = null;
			Effect_Effect_System_SparkSpread s = null;

			
			if ( !proximity && user.a_intent == "hurt" ) {
				time = 100;
				T = GlobalFuncs.get_turf( user );
				U = GlobalFuncs.get_turf( A );
				cable = Lang13.FindIn( typeof(Obj_Structure_Cable), T );

				if ( !Lang13.Bool( cable ) || !( cable is Obj_Structure_Cable ) ) {
					return false;
				}

				if ( Game13.time < this.next_shock ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>" + this + " aren't ready to shock again!</span>" );
					return false;
				}
				user.visible_message( "<span class='warning'>" + user.name + " fires an arc of electricity!</span>", "<span class='warning'>You fire an arc of electricity!</span>", "You hear the loud crackle of electricity!" );
				PN = ((Obj_Structure_Cable)cable).get_powernet();
				L = GlobalFuncs.getFromPool( typeof(Obj_Item_Projectile_Beam_Lightning), T );

				if ( PN != null ) {
					((dynamic)L).damage = PN.get_electrocute_damage();

					if ( Convert.ToDouble( ((dynamic)L).damage ) >= 200 ) {
						user.apply_damage( 15, "fire", ( user.hand == true ? "l_hand" : "r_hand" ) );
						time = 200;
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>" ).item( this ).str( " overload" ).s().str( " from the massive current, shocking you in the process!" ).ToString() );
					} else if ( Convert.ToDouble( ((dynamic)L).damage ) >= 100 ) {
						user.apply_damage( 5, "fire", ( user.hand == true ? "l_hand" : "r_hand" ) );
						time = 150;
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>" ).item( this ).str( " overload" ).s().str( " from the massive current, shocking you in the process!" ).ToString() );
					}
					s = new Effect_Effect_System_SparkSpread();
					s.set_up( 5, 1, user );
					s.start();
				}

				if ( Convert.ToDouble( ((dynamic)L).damage ) <= 0 ) {
					GlobalFuncs.returnToPool( L );
				}

				if ( L != null ) {
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/eleczap.ogg", 75, 1 );
					((dynamic)L).tang = GlobalFuncs.adjustAngle( GlobalFuncs.get_angle( U, T ) );
					((dynamic)L).icon = GlobalVars.midicon;
					((dynamic)L).icon_state = "" + ((dynamic)L).tang;
					((dynamic)L).firer = user;
					((dynamic)L).def_zone = user.get_organ_target();
					((dynamic)L).original = A;
					((dynamic)L).current = U;
					((dynamic)L).starting = U;
					((dynamic)L).yo = U.y - T.y;
					((dynamic)L).xo = U.x - T.x;
					Task13.Schedule( 0, (Task13.Closure)(() => {
						((Obj)L).process();
						return;
					}));
				}
				user.delayNextAttack( 12 );
				this.next_shock = Game13.time + time;
				return true;
			}
			return false;
		}

	}

}
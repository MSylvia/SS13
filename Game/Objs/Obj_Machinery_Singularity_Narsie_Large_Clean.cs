// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Singularity_Narsie_Large_Clean : Obj_Machinery_Singularity_Narsie_Large {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.narnar = false;
			this.icon = "icons/obj/mrclean.dmi";
		}

		public Obj_Machinery_Singularity_Narsie_Large_Clean ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			
		}

		// Function from file: narsie.dm
		public override void on_release(  ) {
			this.chained = false;
			this.move_self = true;
			return;
		}

		// Function from file: narsie.dm
		public override void on_capture(  ) {
			this.chained = true;
			this.move_self = false;
			return;
		}

		// Function from file: narsie.dm
		public override bool move( bool? force_move = null ) {
			force_move = force_move ?? false;

			dynamic movement_dir = null;

			
			if ( !this.move_self ) {
				return false;
			}
			movement_dir = Rand13.PickFromTable( GlobalVars.alldirs - this.last_failed_movement );

			if ( force_move == true ) {
				movement_dir = force_move;
			}

			if ( Lang13.Bool( this.target ) && Rand13.PercentChance( 60 ) ) {
				movement_dir = Map13.GetDistance( this, this.target );
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				return;
			}));
			Task13.Schedule( 1, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				return;
			}));
			return true;
		}

		// Function from file: narsie.dm
		public void pickuptrash(  ) {
			ByTable targets = null;
			Obj_Effect E = null;

			targets = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Obj_Effect) )) {
				E = _a;
				

				if ( GlobalFuncs.is_type_in_list( E, GlobalVars.mr_clean_targets ) && E.z == this.z ) {
					targets.Add( E );
				}
			}

			if ( targets.len != 0 ) {
				this.acquire( Rand13.PickFromTable( targets ) );
				return;
			}
			return;
		}

		// Function from file: narsie.dm
		public override bool consume( dynamic A = null ) {
			dynamic L = null;
			dynamic R = null;
			dynamic T = null;
			int dist = 0;
			Ent_Dynamic AM = null;

			
			if ( !((Ent_Static)A).singuloCanEat() ) {
				return false;
			}

			if ( A is Mob_Living ) {
				L = A;

				if ( Lang13.Bool( L.flags & 128 ) ) {
					return false;
				}

				if ( L is Mob_Living_Silicon_Robot ) {
					R = L;

					if ( Lang13.Bool( R.mmi ) ) {
						GlobalFuncs.qdel( R.mmi );
						R.mmi = null;
					}
				}
				GlobalFuncs.qdel( L );
			} else if ( GlobalFuncs.is_type_in_list( A, GlobalVars.mr_clean_targets ) ) {
				GlobalFuncs.qdel( A );
			} else if ( A is Tile ) {
				T = A;
				((Ent_Static)T).clean_blood();
				dist = Map13.GetDistance( T, this );

				foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Ent_Dynamic) )) {
					AM = _a;
					

					if ( AM == this ) {
						continue;
					}

					if ( dist <= this.consume_range ) {
						this.consume( AM );
						continue;
					}

					if ( dist > this.consume_range && this.canPull( AM ) ) {
						
						if ( !AM.singuloCanEat() ) {
							continue;
						}

						if ( 101 == AM.invisibility ) {
							continue;
						}
						Task13.Schedule( 0, (Task13.Closure)(() => {
							Map13.StepTowardsSimple( AM, this );
							return;
						}));
					}
				}
			}
			return false;
		}

		// Function from file: narsie.dm
		public override void acquire( dynamic food = null ) {
			base.acquire( (object)(food) );
			this.update_icon();
			return;
		}

		// Function from file: narsie.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays = 0;

			if ( Lang13.Bool( this.target ) && !( this.target is Tile ) ) {
				this.overlays.Add( "eyes" );
			}
			return null;
		}

		// Function from file: narsie.dm
		public override void mezzer(  ) {
			Mob_Living_Carbon M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( this, 8 ), typeof(Mob_Living_Carbon) )) {
				M = _a;
				

				if ( M.stat == 0 ) {
					
					if ( Lang13.Bool( M.flags & 128 ) ) {
						continue;
					}
					GlobalFuncs.to_chat( M, "<span class='warning'>You take a moment to admire " + this.name + " hard at work...</span>" );
					M.apply_effect( 3, "stun" );
				}
			}
			return;
		}

		// Function from file: narsie.dm
		public override dynamic process(  ) {
			this.eat();

			if ( !Lang13.Bool( this.target ) || Rand13.PercentChance( 5 ) ) {
				this.pickuptrash();
			}
			this.move();

			if ( Rand13.PercentChance( 25 ) ) {
				this.mezzer();
			}
			return null;
		}

	}

}
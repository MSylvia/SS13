// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Disk_Nuclear : Obj_Item_Weapon_Disk {

		public bool respawned = false;
		public ByTable watched_by = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "card-id";
			this.w_class = 1;
			this.icon_state = "nucleardisk";
		}

		public Obj_Item_Weapon_Disk_Nuclear ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: nuclearbomb.dm
		public void replace_disk(  ) {
			dynamic picked_turf = null;
			string picked_area = null;
			string log_message = null;

			
			if ( GlobalVars.blobstart.len > 0 && !this.respawned ) {
				picked_turf = GlobalFuncs.get_turf( Rand13.PickFromTable( GlobalVars.blobstart ) );
				picked_area = GlobalFuncs.formatLocation( picked_turf );
				log_message = "" + this.type + " has been destroyed. Creating one at";
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + log_message + " " + picked_area ) ) );
				GlobalFuncs.message_admins( "" + log_message + " " + GlobalFuncs.formatJumpTo( picked_turf, picked_area ) );
				new Obj_Item_Weapon_Disk_Nuclear( picked_turf );
				this.respawned = true;
			}
			return;
		}

		// Function from file: nuclearbomb.dm
		public override void Del(  ) {
			this.replace_disk();
			base.Del();
			return;
		}

		// Function from file: nuclearbomb.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Obj_Item_Weapon_Pinpointer pinpointers = null;

			base.Destroy( (object)(brokenup) );
			this.replace_disk();

			foreach (dynamic _a in Lang13.Enumerate( this.watched_by, typeof(Obj_Item_Weapon_Pinpointer) )) {
				pinpointers = _a;
				

				if ( pinpointers.the_disk == this ) {
					pinpointers.the_disk = null;
				}
			}
			this.watched_by = null;
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Analyzer : Obj_Item_Device {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.w_class = 2;
			this.flags = 64;
			this.slot_flags = 512;
			this.throw_speed = 3;
			this.materials = new ByTable().Set( "$metal", 30 ).Set( "$glass", 20 );
			this.origin_tech = "magnets=1;engineering=1";
			this.icon_state = "atmos";
		}

		public Obj_Item_Device_Analyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: scanners.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Ent_Static location = null;
			GasMixture environment = null;
			double pressure = 0;
			double total_moles = 0;
			ByTable env_gases = null;
			dynamic o2_concentration = null;
			dynamic n2_concentration = null;
			double co2_concentration = 0;
			double plasma_concentration = 0;
			dynamic id = null;
			dynamic gas_concentration = null;

			this.add_fingerprint( user );

			if ( Lang13.Bool( user.stat ) || user.eye_blind != 0 ) {
				return null;
			}
			location = user.loc;

			if ( !( location is Tile ) ) {
				return null;
			}
			environment = location.return_air();
			pressure = environment.return_pressure();
			total_moles = environment.total_moles();
			user.WriteMsg( "<span class='info'><B>Results:</B></span>" );

			if ( Math.Abs( pressure - 101.32499694824219 ) < 10 ) {
				user.WriteMsg( "<span class='info'>Pressure: " + Num13.Round( pressure, 0.1 ) + " kPa</span>" );
			} else {
				user.WriteMsg( "<span class='alert'>Pressure: " + Num13.Round( pressure, 0.1 ) + " kPa</span>" );
			}

			if ( total_moles != 0 ) {
				env_gases = environment.gases;
				GlobalVars.hardcoded_gases.Apply( Lang13.BindFunc( environment, "assert_gases" ) );
				o2_concentration = env_gases["o2"][1] / total_moles;
				n2_concentration = env_gases["n2"][1] / total_moles;
				co2_concentration = Convert.ToDouble( env_gases["co2"][1] / total_moles );
				plasma_concentration = Convert.ToDouble( env_gases["plasma"][1] / total_moles );
				environment.garbage_collect();

				if ( Math.Abs( Convert.ToDouble( n2_concentration - 0.79 ) ) < 20 ) {
					user.WriteMsg( "<span class='info'>Nitrogen: " + Num13.Floor( Convert.ToDouble( n2_concentration * 100 ) ) + " %</span>" );
				} else {
					user.WriteMsg( "<span class='alert'>Nitrogen: " + Num13.Floor( Convert.ToDouble( n2_concentration * 100 ) ) + " %</span>" );
				}

				if ( Math.Abs( Convert.ToDouble( o2_concentration - 0.01 ) ) < 2 ) {
					user.WriteMsg( "<span class='info'>Oxygen: " + Num13.Floor( Convert.ToDouble( o2_concentration * 100 ) ) + " %</span>" );
				} else {
					user.WriteMsg( "<span class='alert'>Oxygen: " + Num13.Floor( Convert.ToDouble( o2_concentration * 100 ) ) + " %</span>" );
				}

				if ( co2_concentration > 0.01 ) {
					user.WriteMsg( "<span class='alert'>CO2: " + Num13.Floor( co2_concentration * 100 ) + " %</span>" );
				} else {
					user.WriteMsg( "<span class='info'>CO2: " + Num13.Floor( co2_concentration * 100 ) + " %</span>" );
				}

				if ( plasma_concentration > 0.01 ) {
					user.WriteMsg( "<span class='info'>Plasma: " + Num13.Floor( plasma_concentration * 100 ) + " %</span>" );
				}

				foreach (dynamic _a in Lang13.Enumerate( env_gases )) {
					id = _a;
					

					if ( GlobalVars.hardcoded_gases.Contains( id ) ) {
						continue;
					}
					gas_concentration = env_gases[id][1] / total_moles;
					user.WriteMsg( "<span class='alert'>" + env_gases[id][3][2] + ": " + Num13.Floor( Convert.ToDouble( gas_concentration * 100 ) ) + " %</span>" );
				}
				user.WriteMsg( "<span class='info'>Temperature: " + Num13.Floor( Convert.ToDouble( environment.temperature - 273.41 ) ) + " &deg;C</span>" );
			}
			return null;
		}

	}

}
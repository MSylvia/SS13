// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Analyzer : Obj_Item_Device {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.w_class = 2;
			this.slot_flags = 512;
			this.throwforce = 5;
			this.throw_speed = 4;
			this.throw_range = 20;
			this.starting_materials = new ByTable().Set( "$iron", 30 ).Set( "$glass", 20 );
			this.w_type = 5;
			this.melt_temperature = 453.41;
			this.origin_tech = "magnets=1;engineering=1";
			this.icon_state = "atmos";
		}

		public Obj_Item_Device_Analyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: scanners.dm
		public string output_gas_scan( GasMixture scanned = null, dynamic container = null, bool? human_standard = null ) {
			human_standard = human_standard ?? true;

			dynamic pressure = null;
			dynamic total_moles = null;
			string message = null;
			dynamic o2_concentration = null;
			dynamic n2_concentration = null;
			dynamic co2_concentration = null;
			dynamic plasma_concentration = null;
			double unknown_concentration = 0;

			
			if ( !( scanned != null ) ) {
				return "<span class='warning'>No gas mixture found.</span>";
			}
			scanned.update_values();
			pressure = scanned.return_pressure();
			total_moles = scanned.f_total_moles();
			message = "";

			if ( !Lang13.Bool( container ) || container is Tile ) {
				message += "<span class='bnotice'>Results:</span>";
			} else {
				message += new Txt( "<span class='bnotice'><B> " ).icon( container ).str( " Results of " ).item( container ).str( " scan:</span>" ).ToString();
			}

			if ( Lang13.Bool( total_moles ) ) {
				message += "<br>" + ( human_standard == true && Math.Abs( Convert.ToDouble( pressure - 101.32499694824219 ) ) > 10 ? "<span class='bad'>" : "<span class='notice'>" ) + " Pressure: " + Num13.Round( Convert.ToDouble( pressure ), 0.1 ) + " kPa</span>";
				o2_concentration = scanned.oxygen / total_moles;
				n2_concentration = scanned.nitrogen / total_moles;
				co2_concentration = scanned.carbon_dioxide / total_moles;
				plasma_concentration = scanned.toxins / total_moles;
				unknown_concentration = 1 - Convert.ToDouble( o2_concentration + n2_concentration + co2_concentration + plasma_concentration );

				if ( Convert.ToDouble( n2_concentration ) > 0.01 ) {
					message += "<br>" + ( human_standard == true && Math.Abs( Convert.ToDouble( n2_concentration - 0.79 ) ) > 20 ? "<span class='bad'>" : "<span class='notice'>" ) + " Nitrogen: " + Num13.Round( Convert.ToDouble( scanned.nitrogen ), 0.1 ) + " mol, " + Num13.Floor( Convert.ToDouble( n2_concentration * 100 ) ) + "%</span>";
				}

				if ( Convert.ToDouble( o2_concentration ) > 0.01 ) {
					message += "<br>" + ( human_standard == true && Math.Abs( Convert.ToDouble( o2_concentration - 0.01 ) ) > 2 ? "<span class='bad'>" : "<span class='notice'>" ) + " Oxygen: " + Num13.Round( Convert.ToDouble( scanned.oxygen ), 0.1 ) + " mol, " + Num13.Floor( Convert.ToDouble( o2_concentration * 100 ) ) + "%</span>";
				}

				if ( Convert.ToDouble( co2_concentration ) > 0.01 ) {
					message += "<br>" + ( human_standard == true ? "<span class='bad'>" : "<span class='notice'>" ) + " CO2: " + Num13.Round( Convert.ToDouble( scanned.carbon_dioxide ), 0.1 ) + " mol, " + Num13.Floor( Convert.ToDouble( co2_concentration * 100 ) ) + "%</span>";
				}

				if ( Convert.ToDouble( plasma_concentration ) > 0.01 ) {
					message += "<br>" + ( human_standard == true ? "<span class='bad'>" : "<span class='notice'>" ) + " Plasma: " + Num13.Round( Convert.ToDouble( scanned.toxins ), 0.1 ) + " mol, " + Num13.Floor( Convert.ToDouble( plasma_concentration * 100 ) ) + "%</span>";
				}

				if ( unknown_concentration > 0.01 ) {
					message += "<br><span class='notice'>Unknown: " + Num13.Floor( unknown_concentration * 100 ) + "%</span>";
				}
				message += "<br>" + ( human_standard == true && !Map13.FetchInRange( 360.41, 220.41 ).Contains( scanned.temperature ) ? "<span class='bad'>" : "<span class='notice'>" ) + " Temperature: " + Num13.Floor( ( scanned.temperature ??0) - 273.41 ) + "&deg;C";
			} else {
				message += "<br><span class='warning'>No gasses detected" + ( Lang13.Bool( container ) && !( container is Tile ) ? new Txt( " in " ).the( container ).item().str( "." ).ToString() : "" ) + "!</span>";
			}
			return message;
		}

		// Function from file: scanners.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic _default = null;

			dynamic location = null;
			GasMixture environment = null;

			_default = base.attack_self( (object)(user), (object)(flag), emp );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}

			if ( !Lang13.Bool( user.dexterity_check() ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return _default;
			}
			location = GlobalFuncs.get_turf( user );

			if ( !Lang13.Bool( location ) ) {
				return _default;
			}
			environment = ((Ent_Static)location).return_air();
			user.WriteMsg( this.output_gas_scan( environment, location, true ) );
			this.add_fingerprint( user );
			return _default;
		}

	}

}
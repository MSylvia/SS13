// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Ordercomp : Obj_Machinery_Computer {

		public string temp = null;
		public int reqtime = 0;
		public string last_viewed_group = "categories";
		public MoneyAccount current_acct = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.circuit = "/obj/item/weapon/circuitboard/ordercomp";
			this.light_color = "#966432";
			this.icon_state = "request";
		}

		public Obj_Machinery_Computer_Ordercomp ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: supplyshuttle.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic supply_group_name = null;
			dynamic supply_name = null;
			dynamic N = null;
			dynamic V = null;
			SupplyPacks P = null;
			int timeout = 0;
			string reason = null;
			dynamic idname = null;
			dynamic idrank = null;
			MoneyAccount account = null;
			dynamic I = null;
			Obj_Item_Weapon_Paper reqform = null;
			SupplyOrder O = null;
			dynamic S = null;
			dynamic SO = null;
			dynamic S2 = null;
			dynamic SO2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( this.loc is Tile && ( GlobalFuncs.in_range( this, Task13.User ) || Task13.User is Mob_Living_Silicon ) ) {
				Task13.User.set_machine( this );
			}

			if ( Lang13.Bool( href_list["order"] ) ) {
				
				if ( href_list["order"] == "categories" ) {
					this.last_viewed_group = "categories";
					this.temp = new Txt( "<b>Bank account credits: " ).item( ( this.current_acct != null ? this.current_acct.fmtBalance() : "PANIC" ) ).str( "</b><BR>\n				<A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A><HR><BR><BR>\n				<b>Select a category</b><BR><BR>" ).ToString();

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.all_supply_groups )) {
						supply_group_name = _a;
						
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";order=" ).item( supply_group_name ).str( "'>" ).item( supply_group_name ).str( "</A><BR>" ).ToString();
					}
				} else {
					this.last_viewed_group = href_list["order"];
					this.temp = new Txt( "<b>Bank account credits: " ).item( ( this.current_acct != null ? this.current_acct.fmtBalance() : "PANIC" ) ).str( "</b><BR>\n				<A href='?src=" ).Ref( this ).str( ";order=categories'>Back to all categories</A><HR><BR><BR>\n				<b>Request from: " ).item( this.last_viewed_group ).str( "</b><BR><BR>" ).ToString();

					foreach (dynamic _b in Lang13.Enumerate( GlobalVars.supply_shuttle.supply_packs )) {
						supply_name = _b;
						
						N = GlobalVars.supply_shuttle.supply_packs[supply_name];

						if ( Lang13.Bool( N.hidden ) || Lang13.Bool( N.contraband ) || N.group != this.last_viewed_group ) {
							continue;
						}
						this.temp += new Txt( "<A href='?src=" ).Ref( this ).str( ";doorder=" ).item( supply_name ).str( "'>" ).item( supply_name ).str( "</A> Cost: $" ).item( GlobalFuncs.num2septext( N.cost ) ).str( "<BR>" ).ToString();
					}
				}
			} else if ( Lang13.Bool( href_list["doorder"] ) ) {
				
				if ( Game13.time < this.reqtime ) {
					
					foreach (dynamic _c in Lang13.Enumerate( Map13.FetchHearers( null, this ) )) {
						V = _c;
						
						V.show_message( "<b>" + this + "</b>'s monitor flashes, \"" + ( Game13.time - this.reqtime ) + " seconds remaining until another requisition form may be printed.\"" );
					}
					return null;
				}
				P = GlobalVars.supply_shuttle.supply_packs[href_list["doorder"]];

				if ( !( P is SupplyPacks ) ) {
					return null;
				}
				timeout = Game13.time + 600;
				reason = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( Task13.User, "Reason:", "Why do you require this item?", "", null, InputType.Str | InputType.Null ) ), 1, 1024 );

				if ( Game13.time > timeout ) {
					return null;
				}

				if ( !Lang13.Bool( reason ) ) {
					return null;
				}
				idname = "*None Provided*";
				idrank = "*None Provided*";
				account = null;

				if ( Task13.User is Mob_Living_Carbon_Human ) {
					I = Task13.User.get_id_card();

					if ( Lang13.Bool( I ) ) {
						idname = I.registered_name;
						idrank = ((Obj_Item_Weapon_Card_Id)I).GetJobName();
						account = this.get_card_account( I );
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Please wear an ID with an associated bank account.</span>" );
						return null;
					}
					GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='notice'>Your request has been saved. The transaction will be performed to your bank account when it has been accepted by cargo staff.</span>" ).ToString() );

					if ( account != null && ( account.money ??0) < ( P.cost ??0) ) {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>Your bank account doesn't have enough funds to order this pack. Your request will be on hold until you provide your bank account with the necessary funds.</span>" ).ToString() );
					}
				} else if ( Task13.User is Mob_Living_Silicon ) {
					idname = Task13.User.real_name;
					account = GlobalVars.station_account;
				}
				GlobalVars.supply_shuttle.ordernum++;
				reqform = new Obj_Item_Weapon_Paper( this.loc );
				reqform.name = "" + P.name + " Requisition Form - " + idname + ", " + idrank;
				reqform.info += "<h3>" + GlobalVars.station_name + " Supply Requisition Form</h3><hr>\n			INDEX: #" + GlobalVars.supply_shuttle.ordernum + "<br>\n			REQUESTED BY: " + idname + "<br>\n			RANK: " + idrank + "<br>\n			REASON: " + reason + "<br>\n			SUPPLY CRATE TYPE: " + P.name + "<br>\n			ACCESS RESTRICTION: " + GlobalFuncs.replacetext( GlobalFuncs.get_access_desc( P.access ) ) + "<br>\n			CONTENTS:<br>";
				reqform.info += P.manifest;
				reqform.info += "<hr>\n			STAMP BELOW TO APPROVE THIS REQUISITION:<br>";
				reqform.update_icon();
				this.reqtime = ( Game13.time + 5 ) % 100000;
				O = new SupplyOrder();
				O.ordernum = GlobalVars.supply_shuttle.ordernum;
				O.v_object = P;
				O.orderedby = idname;
				O.account = account;
				GlobalVars.supply_shuttle.requestlist.Add( O );
				GlobalVars.stat_collection.crates_ordered++;
				this.temp = new Txt( "Thanks for your request. The cargo team will process it as soon as possible.<BR>\n			<BR><A href='?src=" ).Ref( this ).str( ";order=" ).item( this.last_viewed_group ).str( "'>Back</A> <A href='?src=" ).Ref( this ).str( ";mainmenu=1'>Main Menu</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["vieworders"] ) ) {
				this.temp = "Current approved orders: <BR><BR>";

				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.supply_shuttle.shoppinglist )) {
					S = _d;
					
					SO = S;
					this.temp += "" + SO.v_object.name + " approved by " + SO.orderedby + " " + ( Lang13.Bool( SO.comment ) ? "(" + SO.comment + ")" : "" ) + "<BR>";
				}
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>OK</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["viewrequests"] ) ) {
				this.temp = "Current requests: <BR><BR>";

				foreach (dynamic _e in Lang13.Enumerate( GlobalVars.supply_shuttle.requestlist )) {
					S2 = _e;
					
					SO2 = S2;
					this.temp += "#" + SO2.ordernum + " - " + SO2.v_object.name + " requested by " + SO2.orderedby + "<BR>";
				}
				this.temp += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";mainmenu=1'>OK</A>" ).ToString();
			} else if ( Lang13.Bool( href_list["mainmenu"] ) ) {
				this.temp = null;
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			return null;
		}

		// Function from file: supplyshuttle.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}
			this.current_acct = ((Mob)a).get_worn_id_account();
			((Mob)a).set_machine( this );

			if ( Lang13.Bool( this.temp ) ) {
				dat = this.temp;
			} else {
				dat += new Txt( "<BR><B>Supply shuttle</B><HR>\n		Location: " ).item( ( GlobalVars.supply_shuttle.moving != 0 ? "Moving to station (" + GlobalVars.supply_shuttle.eta + " Mins.)" : ( GlobalVars.supply_shuttle.at_station ? "Station" : "Dock" ) ) ).str( "<BR>\n		<HR>Bank account credits: " ).item( ( this.current_acct != null ? this.current_acct.fmtBalance() : "PANIC" ) ).str( "<BR>\n		<BR>\n<A href='?src=" ).Ref( this ).str( ";order=categories'>Request items</A><BR><BR>\n		<A href='?src=" ).Ref( this ).str( ";vieworders=1'>View approved orders</A><BR><BR>\n		<A href='?src=" ).Ref( this ).str( ";viewrequests=1'>View requests</A><BR><BR>\n		<A href='?src=" ).Ref( a ).str( ";mach_close=computer'>Close</A>" ).ToString();
			}
			Interface13.Browse( a, dat, "window=computer;size=575x450" );
			GlobalFuncs.onclose( a, "computer" );
			return null;
		}

		// Function from file: supplyshuttle.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: supplyshuttle.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			return this.attack_hand( user );
		}

	}

}
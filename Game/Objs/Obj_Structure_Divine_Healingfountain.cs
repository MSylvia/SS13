// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Divine_Healingfountain : Obj_Structure_Divine {

		public int time_between_uses = 1800;
		public int last_process = 0;
		public bool cult_only = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.metal_cost = 10;
			this.glass_cost = 5;
			this.autocolours = false;
			this.icon_state = "fountain";
		}

		public Obj_Structure_Divine_Healingfountain ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: structures.dm
		public override void update_icons(  ) {
			
			if ( this.last_process + this.time_between_uses > Game13.time ) {
				this.icon_state = "fountain";
			} else {
				this.icon_state = "fountain-" + this.side;
			}
			return;
		}

		// Function from file: structures.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.last_process + this.time_between_uses > Game13.time ) {
				a.WriteMsg( "<span class='notice'>The fountain appears to be empty.</span>" );
				return null;
			}
			this.last_process = Game13.time;

			if ( !GlobalFuncs.is_handofgod_cultist( a ) && this.cult_only ) {
				a.WriteMsg( "<span class='danger'><B>The water burns!</b></spam>" );
				a.reagents.add_reagent( "hell_water", 20 );
			} else {
				a.WriteMsg( "<span class='notice'>The water feels warm and soothing as you touch it. The fountain immediately dries up shortly afterwards.</span>" );
				a.reagents.add_reagent( "godblood", 20 );
			}
			this.update_icons();
			Task13.Schedule( this.time_between_uses, (Task13.Closure)(() => {
				
				if ( this != null ) {
					this.update_icons();
				}
				return;
			}));
			return null;
		}

	}

}
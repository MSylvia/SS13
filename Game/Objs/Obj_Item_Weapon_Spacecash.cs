// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Spacecash : Obj_Item_Weapon {

		public ByTable access = new ByTable();
		public int worth = 1;
		public int? amount = 1;
		public string stack_color = "#4E054F";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 1;
			this.throw_speed = 1;
			this.throw_range = 2;
			this.w_class = 1;
			//this.access = 200;   // [This appeared to be unused and the types were incorrect. wtf?]
			this.autoignition_temperature = 519.1500244140625;
			this.icon = "icons/obj/money.dmi";
			this.icon_state = "cash1";
		}

		// Function from file: cash.dm
		public Obj_Item_Weapon_Spacecash ( dynamic new_loc = null, bool? new_amount = null ) : base( (object)(new_loc) ) {
			new_amount = new_amount ?? true;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.name = "" + this.worth + " credit chip";
			this.amount = Lang13.IntNullable( new_amount );
			this.update_icon();
			return;
		}

		// Function from file: cash.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic cash = null;
			int collected = 0;

			
			if ( A is Obj_Item_Weapon_Spacecash ) {
				cash = A;
				collected = this.collect_from( cash );

				if ( collected != 0 ) {
					this.update_icon();
					GlobalFuncs.to_chat( user, "<span class='notice'>You add " + collected + " " + this.name + ( ( this.amount ??0) > 1 ? "s" : "" ) + " to your stack of cash.</span>" );
				}
			}
			return false;
		}

		// Function from file: cash.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			int stacksize = 0;
			Image stack = null;

			this.icon_state = "cash" + this.worth;
			this.overlays = 0;
			stacksize = Num13.Floor( ( this.amount ??0) / 2.5 );
			this.pixel_x = Rand13.Int( -7, 7 );
			this.pixel_y = Rand13.Int( -14, 14 );

			if ( stacksize != 0 ) {
				stack = new Image( this.icon, null, "cashstack" + stacksize );
				stack.color = this.stack_color;
				this.overlays.Add( stack );
			}
			return null;
		}

		// Function from file: cash.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			
			if ( ( this.amount ??0) > 1 ) {
				this.setGender( GlobalVars.PLURAL );
				base.examine( (object)(user), size );
				GlobalFuncs.to_chat( user, "It's a stack holding " + this.amount + " chips." );
				GlobalFuncs.to_chat( user, "<span class='info'>It's worth " + this.worth * ( this.amount ??0) + " credits.</span>" );
			} else {
				this.setGender( GlobalVars.NEUTER );
				base.examine( (object)(user), size );
			}
			return null;
		}

		// Function from file: cash.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			dynamic S = null;
			int to_transfer = 0;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( this.can_stack_with( target ) ) {
				S = target;

				if ( ( this.amount ??0) >= 10 ) {
					GlobalFuncs.to_chat( user, new Txt().The( this ).item().str( " cannot hold anymore chips." ).ToString() );
					return true;
				}
				to_transfer = 1;

				if ( ((Mob)user).get_inactive_hand() != S ) {
					to_transfer = Num13.MinInt( Convert.ToInt32( S.amount ), 10 - ( this.amount ??0) );
				}
				this.amount += to_transfer;
				GlobalFuncs.to_chat( user, new Txt( "You add " ).item( to_transfer ).str( " chip" ).s().str( " to the stack. It now contains " ).item( this.amount ).str( " chips, worth " ).item( ( this.amount ??0) * this.worth ).str( " credits." ).ToString() );
				S.amount -= to_transfer;

				if ( Convert.ToDouble( S.amount ) <= 0 ) {
					GlobalFuncs.qdel( S );
				} else {
					S.update_icon();
				}
				this.update_icon();
				return true;
			}
			return base.preattack( (object)(target), (object)(user), proximity_flag, (object)(click_parameters) );
		}

		// Function from file: cash.dm
		public int collect_from( dynamic cash = null ) {
			int taking = 0;

			
			if ( Convert.ToInt32( cash.worth ) == this.worth ) {
				taking = Num13.MinInt( 10 - ( this.amount ??0), Convert.ToInt32( cash.amount ) );
				cash.amount -= taking;
				this.amount += taking;

				if ( Convert.ToDouble( cash.amount ) <= 0 ) {
					GlobalFuncs.qdel( cash );
				}
				return taking;
			}
			return 0;
		}

		// Function from file: cash.dm
		public bool can_stack_with( dynamic other_stack = null ) {
			return this.type == other_stack.type;
		}

		// Function from file: cash.dm
		public void copy_evidences( Obj_Item_Weapon_Spacecash from = null ) {
			this.blood_DNA = from.blood_DNA;
			this.fingerprints = from.fingerprints;
			this.fingerprintshidden = from.fingerprintshidden;
			this.fingerprintslast = from.fingerprintslast;
			return;
		}

		// Function from file: cash.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Weapon_Spacecash C = null;

			
			if ( ((Mob)a).get_inactive_hand() == this ) {
				C = new ByTable().Set( 1, a ).Set( "new_amount", 1 ).Apply( this.type );
				C.copy_evidences( this );
				((Mob)a).put_in_hands( C );
				this.add_fingerprint( a );
				C.add_fingerprint( a );
				this.amount--;

				if ( ( this.amount ??0) <= 0 ) {
					GlobalFuncs.qdel( this );
				} else {
					this.update_icon();
				}
			} else {
				return base.attack_hand( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_EmbeddedController_Radio_SimpleVentController : Obj_Machinery_EmbeddedController_Radio {

		public dynamic airpump_tag = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.frequency = 1229;
			this.power_channel = 3;
			this.icon = "icons/obj/airlock_machines.dmi";
			this.icon_state = "airlock_control_standby";
		}

		public Obj_Machinery_EmbeddedController_Radio_SimpleVentController ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: simple_vent_controller.dm
		public override string return_text(  ) {
			string state_options = null;
			string output = null;

			state_options = null;
			state_options = new Txt( "<A href='?src=" ).Ref( this ).str( ";command=vent_inactive'>Deactivate Vent</A><BR>\n<A href='?src=" ).Ref( this ).str( ";command=vent_pump'>Activate Vent / Pump</A><BR>\n<A href='?src=" ).Ref( this ).str( ";command=vent_clear'>Activate Vent / Clear</A><BR>" ).ToString();
			output = "<B>Vent Control Console</B><HR>\n" + state_options + "<HR>";
			return output;
		}

		// Function from file: simple_vent_controller.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.on && this.program != null ) {
				this.icon_state = "airlock_control_standby";
			} else {
				this.icon_state = "airlock_control_off";
			}
			return false;
		}

		// Function from file: simple_vent_controller.dm
		public override void initialize(  ) {
			Computer_File_EmbeddedProgram_SimpleVentController new_prog = null;

			base.initialize();
			new_prog = new Computer_File_EmbeddedProgram_SimpleVentController();
			new_prog.airpump_tag = this.airpump_tag;
			new_prog.master = this;
			this.program = new_prog;
			return;
		}

	}

}
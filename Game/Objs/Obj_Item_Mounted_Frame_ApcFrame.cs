// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Mounted_Frame_ApcFrame : Obj_Item_Mounted_Frame {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.mount_reqs = new ByTable(new object [] { "simfloor", "nospace" });
			this.icon = "icons/obj/apc_repair.dmi";
			this.icon_state = "apc_frame";
		}

		public Obj_Item_Mounted_Frame_ApcFrame ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: apc_frame.dm
		public override void do_build( dynamic on_wall = null, dynamic user = null ) {
			new Obj_Machinery_Power_Apc( GlobalFuncs.get_turf( this ), Map13.GetDistance( user, on_wall ), true );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: apc_frame.dm
		public override bool try_build( dynamic on_wall = null, dynamic user = null, bool? proximity_flag = null ) {
			dynamic turf_loc = null;
			Obj_Machinery_Power_Terminal T = null;
			Obj_Item_Stack_CableCoil C = null;

			
			if ( base.try_build( (object)(on_wall), (object)(user), proximity_flag ) ) {
				turf_loc = GlobalFuncs.get_turf( user );

				if ( this.areaMaster.areaapc != null ) {
					GlobalFuncs.to_chat( user, "<span class='rose'>This area already has an APC.</span>" );
					return false;
				}

				foreach (dynamic _a in Lang13.Enumerate( turf_loc, typeof(Obj_Machinery_Power_Terminal) )) {
					T = _a;
					

					if ( T.master != null ) {
						GlobalFuncs.to_chat( user, "<span class='rose'>There is another network terminal here.</span>" );
						return false;
					} else {
						C = new Obj_Item_Stack_CableCoil( turf_loc );
						C.amount = 10;
						GlobalFuncs.to_chat( user, "You cut the cables and disassemble the unused power terminal." );
						GlobalFuncs.qdel( T );
					}
				}
				return true;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Rcd_Matter : Obj_Item_Device_Rcd {

		public double matter = 0;
		public double max_matter = 30;

		public Obj_Item_Device_Rcd_Matter ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: RCD.dm
		public override double get_energy( dynamic user = null ) {
			return this.matter;
		}

		// Function from file: RCD.dm
		public override void use_energy( double amount = 0, dynamic user = null ) {
			this.matter -= amount;
			GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).the( this ).item().str( " currently holds " ).item( this.matter ).str( "/" ).item( this.max_matter ).str( " matter-units." ).ToString() );
			return;
		}

		// Function from file: RCD.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_RcdAmmo ) {
				
				if ( this.matter + 10 > this.max_matter ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).the( this ).item().str( " can't hold any more matter-units.</span>" ).ToString() );
					return 1;
				}
				GlobalFuncs.qdel( a );
				this.matter += 10;
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 20, 1 );
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).the( this ).item().str( " now holds " ).item( this.matter ).str( "/" ).item( this.max_matter ).str( " matter-units.</span>" ).ToString() );
				return 1;
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You unscrew the access panel and release the cartridge chamber.</span>" );

				while (this.matter >= 10) {
					new Obj_Item_Weapon_RcdAmmo( b.loc );
					this.matter -= 10;
				}
				return 1;
			}
			return null;
		}

		// Function from file: RCD.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "It currently holds " + this.matter + "/" + this.max_matter + " matter-units." );
			return null;
		}

		// Function from file: RCD.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !( this.selected != null ) || user.shown_schematics_background || !this.selected.show( user ) ) {
				user.hud_used.toggle_show_schematics_display( this.schematics["Construction"], false, this );
			}
			return null;
		}

	}

}
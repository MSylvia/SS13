// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_CellCharger : Obj_Machinery {

		public dynamic charging = null;
		public int transfer_rate = 200;
		public double transfer_efficiency = 061;
		public double transfer_rate_coeff = 1;
		public double transfer_efficiency_bonus = 0;
		public int chargelevel = -1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state_open = "ccharger_open";
			this.anchored = 1;
			this.idle_power_usage = 10;
			this.active_power_usage = 10;
			this.machine_flags = 31;
			this.ghost_read = false;
			this.icon = "icons/obj/power.dmi";
			this.icon_state = "ccharger0";
		}

		// Function from file: cell_charger.dm
		public Obj_Machinery_CellCharger ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_CellCharger(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: cell_charger.dm
		public override dynamic process(  ) {
			
			if ( !Lang13.Bool( this.charging ) || ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				return null;
			}

			if ( this.emagged != 0 ) {
				this.f_use_power( this.transfer_rate * this.transfer_rate_coeff * 10 );
				((Obj_Item_Weapon_Cell)this.charging).give( this.transfer_rate * this.transfer_rate_coeff * ( this.transfer_efficiency + this.transfer_efficiency_bonus ) * 0.25 );
			} else {
				this.f_use_power( this.transfer_rate * this.transfer_rate_coeff );
				((Obj_Item_Weapon_Cell)this.charging).give( this.transfer_rate * this.transfer_rate_coeff * ( this.transfer_efficiency + this.transfer_efficiency_bonus ) );
			}
			this.updateicon();
			return null;
		}

		// Function from file: cell_charger.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}

			if ( Lang13.Bool( this.charging ) ) {
				this.charging.emp_act( severity );
			}
			base.emp_act( severity );
			return null;
		}

		// Function from file: cell_charger.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return null;
		}

		// Function from file: cell_charger.dm
		public override int wrenchAnchor( dynamic user = null ) {
			
			if ( Lang13.Bool( this.charging ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Remove the cell first!</span>" );
				return 0;
			}
			base.wrenchAnchor( (object)(user) );
			return 0;
		}

		// Function from file: cell_charger.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Effect_Effect_System_SparkSpread s = null;

			
			if ( Lang13.Bool( this.charging ) ) {
				
				if ( this.emagged != 0 ) {
					s = new Effect_Effect_System_SparkSpread();
					s.set_up( 5, 1, this );
					s.start();
					Task13.Schedule( 15, (Task13.Closure)(() => {
						GlobalFuncs.explosion( this.loc, -1, 1, 3, null, 0 );
						this.Destroy( this );
						return;
					}));
					return null;
				}
				Task13.User.put_in_hands( this.charging );
				((Ent_Static)this.charging).add_fingerprint( a );
				this.charging.updateicon();
				this.charging = null;
				((Ent_Static)a).visible_message( "<span class='notice'>" + a + " removes the cell from " + this + ".</span>", "<span class='notice'>You remove the cell from " + this + ".</span>" );
				this.chargelevel = -1;
				this.updateicon();
			}
			return null;
		}

		// Function from file: cell_charger.dm
		public override dynamic attack_robot( Mob_Living_Silicon_Robot user = null ) {
			
			if ( user is Mob_Living_Silicon_Robot_Mommi && this.Adjacent( user ) ) {
				return this.attack_hand( user );
			}
			return null;
		}

		// Function from file: cell_charger.dm
		public override int emag( dynamic user = null ) {
			
			if ( !( this.emagged != 0 ) ) {
				this.emagged = 1;
				((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " swipes a card into " ).the( this ).item().str( "'s charging port.</span>" ).ToString(), new Txt( "<span class='warning'>You hear fizzling coming from " ).the( this ).item().str( " and a wire turns red hot as you swipe the electromagnetic card. Better not use it anymore.</span>" ).ToString() );
				return 0;
			}
			return 0;
		}

		// Function from file: cell_charger.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				return null;
			}

			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}

			if ( a is Obj_Item_Weapon_Cell && Lang13.Bool( this.anchored ) ) {
				
				if ( Lang13.Bool( this.charging ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>There is already a cell in " + this + ".</span>" );
					return null;
				} else {
					
					if ( !this.areaMaster.power_equip ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>" + this + " blinks red as you try to insert the cell!</span>" );
						return null;
					}

					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.charging = a;
						((Ent_Static)b).visible_message( "<span class='notice'>" + b + " inserts a cell into " + this + ".</span>", "<span class='notice'>You insert a cell into " + this + ".</span>" );
						this.chargelevel = -1;
					}
				}
				this.updateicon();
			}
			return null;
		}

		// Function from file: cell_charger.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "There's " + ( Lang13.Bool( this.charging ) ? "a" : "no" ) + " cell in the charger." );

			if ( Lang13.Bool( this.charging ) ) {
				GlobalFuncs.to_chat( user, "Current charge: " + this.charging.charge );
			}
			return null;
		}

		// Function from file: cell_charger.dm
		public void updateicon(  ) {
			int newlevel = 0;

			this.icon_state = "ccharger" + ( Lang13.Bool( this.charging ) ? true : false );

			if ( Lang13.Bool( this.charging ) && !( ( this.stat & 3 ) != 0 ) ) {
				newlevel = Num13.Floor( ((Obj_Item_Weapon_Cell)this.charging).percent() * 4 / 99 );

				if ( this.chargelevel != newlevel ) {
					this.overlays.len = 0;
					this.overlays.Add( "ccharger-o" + newlevel );
					this.chargelevel = newlevel;
				}
			} else {
				this.overlays.len = 0;
			}
			return;
		}

		// Function from file: cell_charger.dm
		public override dynamic RefreshParts(  ) {
			double T = 0;
			Obj_Item_Weapon_StockParts_ScanningModule SM = null;
			Obj_Item_Weapon_StockParts_Capacitor CA = null;

			T = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_ScanningModule) )) {
				SM = _a;
				
				T = ( SM.rating - 1 ) * 0.1;
			}
			this.transfer_efficiency_bonus = T;
			T = 0;

			foreach (dynamic _b in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_Capacitor) )) {
				CA = _b;
				
				T += CA.rating;
			}
			this.transfer_rate_coeff = T / 2;
			T = 0;
			return null;
		}

		// Function from file: trash_machinery.dm
		public override dynamic cultify(  ) {
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
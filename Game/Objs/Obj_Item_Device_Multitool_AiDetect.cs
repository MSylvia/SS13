// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Multitool_AiDetect : Obj_Item_Device_Multitool {

		public int detected = 0;

		// Function from file: multitool.dm
		public Obj_Item_Device_Multitool_AiDetect ( dynamic loc = null ) : base( (object)(loc) ) {
			Task13.Schedule( 0, (Task13.Closure)(() => {
				this.ticker();
				return;
			}));
			return;
		}

		// Function from file: multitool.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.detected != 0 ) {
				user.WriteMsg( "<span class='info'>The screen displays:</span>" );
				GlobalFuncs.to_chat( user, "<span class='info'>AI detected</span>" );
				GlobalFuncs.to_chat( user, "<span class='info'>pAI detected></span>" );
				GlobalFuncs.to_chat( user, "<span class='info'>Tape recorder detected</span>" );
				GlobalFuncs.to_chat( user, "<span class='info'>Voice analyzer detected</span>" );
			}
			return null;
		}

		// Function from file: multitool.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.detected != 0 ) {
				
				if ( ( this.detected & 1 ) != 0 ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_red";
				} else if ( ( this.detected & 2 ) != 0 ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_orange";
				} else if ( ( this.detected & 4 ) != 0 ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_yellow";
				} else if ( ( this.detected & 8 ) != 0 ) {
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_blue";
				}
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			return null;
		}

		// Function from file: multitool.dm
		public bool findComponent( Type pathToFind = null, dynamic thingToSearch = null ) {
			Obj_Item_Device_AssemblyHolder assembly = null;
			Obj_Item_Device_TransferValve valve = null;
			Mob_Living_Carbon mob = null;

			
			if ( Lang13.Bool( Lang13.FindIn( pathToFind, thingToSearch.contents ) ) ) {
				return true;
			}

			foreach (dynamic _a in Lang13.Enumerate( thingToSearch, typeof(Obj_Item_Device_AssemblyHolder) )) {
				assembly = _a;
				

				if ( this.findComponent( pathToFind, assembly ) ) {
					return true;
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( thingToSearch, typeof(Obj_Item_Device_TransferValve) )) {
				valve = _b;
				

				if ( this.findComponent( pathToFind, valve ) ) {
					return true;
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( thingToSearch, typeof(Mob_Living_Carbon) )) {
				mob = _c;
				

				if ( this.findComponent( pathToFind, mob ) ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: multitool.dm
		public bool findItem( Type pathToFind = null, dynamic thingToSearch = null ) {
			Mob_Living_Carbon mob = null;

			
			if ( Lang13.Bool( Lang13.FindIn( pathToFind, thingToSearch.contents ) ) ) {
				return true;
			}

			foreach (dynamic _a in Lang13.Enumerate( thingToSearch, typeof(Mob_Living_Carbon) )) {
				mob = _a;
				

				if ( this.findItem( pathToFind, mob ) ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: multitool.dm
		public void ticker(  ) {
			dynamic M = null;
			ByTable range = null;
			dynamic our_turf = null;
			dynamic T = null;
			Camerachunk chunk = null;

			
			while (this != null && !Lang13.Bool( this.gcDestroyed )) {
				this.detected = 0;
				our_turf = GlobalFuncs.get_turf( this );
				range = Map13.FetchInRange( our_turf, 8 );

				if ( Lang13.Bool( GlobalVars.cameranet.chunkGenerated( Lang13.IntNullable( our_turf.x ), Lang13.IntNullable( our_turf.y ), Convert.ToInt32( our_turf.z ) ) ) ) {
					chunk = GlobalVars.cameranet.getCameraChunk( Lang13.IntNullable( our_turf.x ), Lang13.IntNullable( our_turf.y ), Convert.ToInt32( our_turf.z ) );

					if ( chunk != null && chunk.seenby.len != 0 ) {
						
						foreach (dynamic _a in Lang13.Enumerate( chunk.seenby )) {
							M = _a;
							

							if ( Map13.GetDistance( this, M ) < 8 ) {
								this.detected |= 1;
								break;
							}
						}
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( range )) {
					T = _b;
					

					if ( this.findItem( typeof(Mob_Living_Silicon_Pai), T ) ) {
						this.detected |= 2;
						break;
					}
				}

				foreach (dynamic _c in Lang13.Enumerate( range )) {
					T = _c;
					

					if ( this.findItem( typeof(Obj_Item_Device_Taperecorder), T ) ) {
						this.detected |= 4;
						break;
					}
				}

				foreach (dynamic _d in Lang13.Enumerate( range )) {
					T = _d;
					

					if ( this.findComponent( typeof(Obj_Item_Device_Assembly_Voice), T ) ) {
						this.detected |= 8;
						break;
					}
				}
				this.update_icon();
				Task13.Sleep( 10 );
			}
			return;
		}

	}

}
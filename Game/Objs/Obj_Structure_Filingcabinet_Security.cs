// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Filingcabinet_Security : Obj_Structure_Filingcabinet {

		public bool virgin = true;

		public Obj_Structure_Filingcabinet_Security ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: filingcabinet.dm
		public override void attack_tk( Mob_Living_Carbon_Human user = null ) {
			this.populate();
			base.attack_tk( user );
			return;
		}

		// Function from file: filingcabinet.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			this.populate();
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: filingcabinet.dm
		public void populate(  ) {
			Data_Record G = null;
			Data_Record S = null;
			Obj_Item_Weapon_Paper P = null;
			int counter = 0;

			
			if ( this.virgin ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.data_core.general, typeof(Data_Record) )) {
					G = _a;
					
					S = GlobalFuncs.find_record( "name", G.fields["name"], GlobalVars.data_core.security );

					if ( !( S != null ) ) {
						continue;
					}
					P = new Obj_Item_Weapon_Paper( this );
					P.info = "<CENTER><B>Security Record</B></CENTER><BR>";
					P.info += "Name: " + G.fields["name"] + " ID: " + G.fields["id"] + "<BR>\nSex: " + G.fields["sex"] + "<BR>\nAge: " + G.fields["age"] + "<BR>\nFingerprint: " + G.fields["fingerprint"] + "<BR>\nPhysical Status: " + G.fields["p_stat"] + "<BR>\nMental Status: " + G.fields["m_stat"] + "<BR>";
					P.info += "<BR>\n<CENTER><B>Security Data</B></CENTER><BR>\nCriminal Status: " + S.fields["criminal"] + "<BR>\n<BR>\nMinor Crimes: " + S.fields["mi_crim"] + "<BR>\nDetails: " + S.fields["mi_crim_d"] + "<BR>\n<BR>\nMajor Crimes: " + S.fields["ma_crim"] + "<BR>\nDetails: " + S.fields["ma_crim_d"] + "<BR>\n<BR>\nImportant Notes:<BR>\n	" + S.fields["notes"] + "<BR>\n<BR>\n<CENTER><B>Comments/Log</B></CENTER><BR>";
					counter = 1;

					while (Lang13.Bool( S.fields["com_" + counter] )) {
						P.info += "" + S.fields["com_" + counter] + "<BR>";
						counter++;
					}
					P.info += "</TT>";
					P.name = "paper - '" + G.fields["name"] + "'";
					this.virgin = false;
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Seeds : Obj_Item {

		public string seed_type = null;
		public Seed seed = null;
		public int modified = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.icon = "icons/obj/seeds.dmi";
			this.icon_state = "seed";
		}

		// Function from file: seeds.dm
		public Obj_Item_Seeds ( dynamic loc = null ) : base( (object)(loc) ) {
			
			while (!( GlobalVars.plant_controller != null )) {
				Task13.Sleep( 30 );
			}
			this.update_seed();
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.pixel_x = Rand13.Int( -3, 3 );
			this.pixel_y = Rand13.Int( -3, 3 );
			return;
		}

		// Function from file: seeds.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.seed != null && !this.seed.roundstart ) {
				GlobalFuncs.to_chat( user, "It's tagged as variety <span class='info'>#" + this.seed.uid + ".</span>" );
			} else {
				GlobalFuncs.to_chat( user, "Plant Yield: <span class='info'>" + ( this.seed.yield != -1 ? ((dynamic)( this.seed.yield )) : ((dynamic)( "<span class='warning'> ERROR</span>" )) ) + "</span>" );
				GlobalFuncs.to_chat( user, "Plant Potency: <span class='info'>" + ( this.seed.potency != -1 ? ((dynamic)( this.seed.potency )) : ((dynamic)( "<span class='warning'> ERROR</span>" )) ) + "</span>" );
			}
			return null;
		}

		// Function from file: seeds.dm
		public virtual void update_appearance(  ) {
			
			if ( !( this.seed != null ) ) {
				return;
			}
			this.icon_state = this.seed.packet_icon;
			this.name = "packet of " + this.seed.seed_name + " " + this.seed.seed_noun;
			this.desc = "It has a picture of " + this.seed.display_name + " on the front.";
			return;
		}

		// Function from file: seeds.dm
		public void update_seed(  ) {
			
			if ( !( this.seed != null ) && Lang13.Bool( this.seed_type ) && !( GlobalVars.plant_controller.seeds == null ) && Lang13.Bool( GlobalVars.plant_controller.seeds[this.seed_type] ) ) {
				this.seed = GlobalVars.plant_controller.seeds[this.seed_type];
			}
			this.update_appearance();
			return;
		}

	}

}
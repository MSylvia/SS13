// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_HandTele : Obj_Item_Weapon {

		public ByTable portals = new ByTable();
		public int charge = 45;
		public bool recharging = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.throwforce = 5;
			this.w_class = 2;
			this.throw_speed = 3;
			this.throw_range = 5;
			this.starting_materials = new ByTable().Set( "$iron", 10000 ).Set( "$gold", 500 ).Set( "$phazon", 50 );
			this.w_type = 5;
			this.origin_tech = "magnets=1;bluespace=3";
			this.icon = "icons/obj/device.dmi";
			this.icon_state = "hand_tele";
		}

		public Obj_Item_Weapon_HandTele ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: teleportation.dm
		public override dynamic process(  ) {
			this.charge = Num13.MinInt( 45, this.charge + 1 );

			if ( this.charge >= 45 ) {
				GlobalVars.processing_objects.Remove( this );
				this.recharging = false;
			}
			return 1;
		}

		// Function from file: teleportation.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic current_location = null;
			ByTable L = null;
			Obj_Machinery_Computer_Teleporter R = null;
			Obj_Machinery_Teleport_Hub com = null;
			ByTable turfs = null;
			dynamic T = null;
			dynamic t1 = null;
			Tile T2 = null;
			dynamic U = null;
			Obj_Effect_Portal P1 = null;
			Obj_Effect_Portal P2 = null;

			current_location = GlobalFuncs.get_turf( user );

			if ( !Lang13.Bool( current_location ) || Convert.ToInt32( current_location.z ) == 2 || Convert.ToDouble( current_location.z ) >= 7 ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " is malfunctioning.</span>" ).ToString() );
				return null;
			}
			L = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Teleporter) )) {
				R = _b;
				

				foreach (dynamic _a in Lang13.Enumerate( Map13.GetTile( R.x + 2, R.y, R.z ), typeof(Obj_Machinery_Teleport_Hub) )) {
					com = _a;
					

					if ( Lang13.Bool( R.locked ) && !R.one_time_use ) {
						
						if ( com.engaged ) {
							L["" + R.id + " (Active)"] = R.locked;
						} else {
							L["" + R.id + " (Inactive)"] = R.locked;
						}
					}
				}
			}
			turfs = new ByTable();

			foreach (dynamic _c in Lang13.Enumerate( GlobalFuncs.trange( 10, user ) )) {
				T = _c;
				

				if ( Convert.ToDouble( T.x ) > Game13.map_size_x - 8 || Convert.ToDouble( T.x ) < 8 ) {
					continue;
				}

				if ( Convert.ToDouble( T.y ) > Game13.map_size_y - 8 || Convert.ToDouble( T.y ) < 8 ) {
					continue;
				}
				turfs.Add( T );
			}

			if ( turfs.len != 0 ) {
				L["None (Dangerous)"] = Rand13.PickFromTable( turfs );
			}
			turfs = null;
			t1 = Interface13.Input( user, "Please select a teleporter to lock in on.", "Hand Teleporter", null, L, InputType.Any );

			if ( ((Mob)user).get_active_hand() != this || Lang13.Bool( user.stat ) || ((Mob)user).restrained() ) {
				return null;
			}

			if ( this.charge < 15 ) {
				user.show_message( new Txt( "<span class='notice'>" ).The( this ).item().str( " is recharging!</span>" ).ToString() );
				return null;
			}
			T2 = L[t1];

			if ( t1 == "None (Dangerous)" && Rand13.PercentChance( 5 ) ) {
				T2 = Map13.GetTile( Rand13.Int( 7, Game13.map_size_x - 7 ), Rand13.Int( 7, Game13.map_size_y - 7 ), GlobalVars.map.zTCommSat );
			}
			U = GlobalFuncs.get_turf( this );
			((Ent_Static)U).visible_message( "<span class='notice'>Locked In.</span>" );
			P1 = new Obj_Effect_Portal( U );
			P2 = new Obj_Effect_Portal( GlobalFuncs.get_turf( T2 ) );
			P1.target = P2;
			P2.target = P1;
			P2.icon_state = "portal1";
			P1.creator = this;
			P2.creator = this;
			P1.blend_icon( P2 );
			P2.blend_icon( P1 );
			this.portals.Add( P1 );
			this.portals.Add( P2 );
			this.add_fingerprint( user );
			this.charge = Num13.MaxInt( this.charge - 15, 0 );

			if ( !this.recharging ) {
				this.recharging = true;
				GlobalVars.processing_objects.Add( this );
			}
			return null;
		}

	}

}
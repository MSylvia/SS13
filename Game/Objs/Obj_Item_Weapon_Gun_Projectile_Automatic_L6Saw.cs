// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Automatic_L6Saw : Obj_Item_Weapon_Gun_Projectile_Automatic {

		public bool cover_open = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns.dmi" );
			this.item_state = "l6closedmag";
			this.w_class = 4;
			this.max_shells = 50;
			this.burst_count = 5;
			this.caliber = new ByTable().Set( "a762", 1 );
			this.origin_tech = "combat=5;materials=1;syndicate=2";
			this.ammo_type = "/obj/item/ammo_casing/a762";
			this.mag_type = "/obj/item/ammo_storage/magazine/a762";
			this.fire_sound = "sound/weapons/Gunshot_smg.ogg";
			this.icon_state = "l6closed100";
		}

		public Obj_Item_Weapon_Gun_Projectile_Automatic_L6Saw ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: automatic.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !this.cover_open ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>" + this + "'s cover is closed! You can't insert a new mag!</span>" );
				return null;
			} else if ( this.cover_open ) {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: automatic.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.loc != a ) {
				base.attack_hand( (object)(a), (object)(b), (object)(c) );
				return null;
			}

			if ( !this.cover_open ) {
				base.attack_hand( (object)(a), (object)(b), (object)(c) );
			} else if ( this.cover_open && Lang13.Bool( this.stored_magazine ) ) {
				this.RemoveMag( a );
				GlobalFuncs.to_chat( a, "<span class='notice'>You remove the magazine from " + this + ".</span>" );
			}
			return null;
		}

		// Function from file: automatic.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( this.cover_open ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>" + this + "'s cover is open! Close it before firing!</span>" );
			} else {
				base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
				this.update_icon();
			}
			return false;
		}

		// Function from file: automatic.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.icon_state = "l6" + ( this.cover_open ? "open" : "closed" ) + ( Lang13.Bool( this.stored_magazine ) ? ((dynamic)( Num13.Round( this.getAmmo(), 25 ) )) : ((dynamic)( "-empty" )) );
			return null;
		}

		// Function from file: automatic.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.cover_open = !this.cover_open;
			GlobalFuncs.to_chat( user, "<span class='notice'>You " + ( this.cover_open ? "open" : "close" ) + " " + this + "'s cover.</span>" );
			this.update_icon();
			return null;
		}

		// Function from file: automatic.dm
		[Verb]
		[VerbInfo( name: "Remove Magazine", group: "Object", access: VerbAccess.InRange, range: 0 )]
		public override void force_removeMag(  ) {
			
			if ( this.cover_open && Lang13.Bool( this.stored_magazine ) ) {
				this.RemoveMag( Task13.User );
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You remove the magazine from " + this + ".</span>" );
			} else if ( Lang13.Bool( this.stored_magazine ) ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='rose'>The " + this + "'s cover has to be open to do that!</span>" );
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='rose'>There is no magazine to remove!</span>" );
			}
			return;
		}

	}

}
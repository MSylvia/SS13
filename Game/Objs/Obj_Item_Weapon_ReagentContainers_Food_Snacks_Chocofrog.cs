// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Chocofrog : Obj_Item_Weapon_ReagentContainers_Food_Snacks {

		public bool jump_cd = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 1;
			this.food_flags = 4;
			this.icon = "icons/obj/wiz_cards.dmi";
			this.icon_state = "frog";
		}

		// Function from file: snacks.dm
		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Chocofrog ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			((Reagents)this.reagents).add_reagent( "nutriment", 2 );
			((Reagents)this.reagents).add_reagent( "hyperzine", 1 );
			return;
		}

		// Function from file: snacks.dm
		public override bool pickup( Mob user = null ) {
			Mob H = null;

			H = user;

			if ( !( H != null ) ) {
				return true;
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				Interface13.Stat( null, H.mutations.Contains( 5 ) );

				if ( false || Rand13.PercentChance( 25 ) ) {
					
					if ( H.drop_item() ) {
						user.visible_message( "<span class='warning'>" + this + " escapes from " + H + "'s hands!</span>", "<span class='warning'>" + this + " escapes from your grasp!</span>" );
						this.jump();
					}
				}
				return;
			}));
			return true;
		}

		// Function from file: snacks.dm
		public bool jump(  ) {
			ByTable escape_paths = null;
			dynamic T = null;
			dynamic T2 = null;

			
			if ( !( this.loc is Tile ) ) {
				return false;
			}
			this.jump_cd = true;
			Task13.Schedule( 50, (Task13.Closure)(() => {
				this.jump_cd = false;
				return;
			}));
			escape_paths = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInView( this, 7 ) )) {
				T = _a;
				
				escape_paths.Or( T );
			}
			T2 = Rand13.PickFromTable( escape_paths );
			this.throw_at( T2, 10, 2 );
			return true;
		}

		// Function from file: snacks.dm
		public override bool HasProximity( dynamic AM = null ) {
			
			if ( !this.jump_cd ) {
				this.jump();
			}
			return base.HasProximity( (object)(AM) );
		}

	}

}
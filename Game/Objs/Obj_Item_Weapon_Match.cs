// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Match : Obj_Item_Weapon {

		public int lit = 0;
		public int smoketime = 5;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.origin_tech = "materials=1";
			this.heat = 1000;
			this.icon = "icons/obj/cigarettes.dmi";
			this.icon_state = "match_unlit";
		}

		public Obj_Item_Weapon_Match ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cigs_lighters.dm
		public override int is_hot(  ) {
			return this.lit * this.heat;
		}

		// Function from file: cigs_lighters.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			dynamic cig = null;

			
			if ( !( M is Mob_Living ) ) {
				return false;
			}
			M.IgniteMob();
			cig = this.help_light_cig( M, user );

			if ( this.lit != 0 && Lang13.Bool( cig ) && user.a_intent == "help" ) {
				
				if ( Lang13.Bool( cig.lit ) ) {
					user.WriteMsg( "<span class='notice'>The " + cig.name + " is already lit.</span>" );
				}

				if ( M == user ) {
					((Ent_Static)cig).attackby( this, user );
				} else {
					((Obj_Item_Clothing_Mask_Cigarette)cig).f_light( "<span class='notice'>" + user + " holds the " + this.name + " out for " + M + ", and lights the " + cig.name + ".</span>" );
				}
			} else {
				base.attack( (object)(M), (object)(user), def_zone );
			}
			return false;
		}

		// Function from file: cigs_lighters.dm
		public override bool dropped( dynamic user = null ) {
			this.matchburnout();
			return base.dropped( (object)(user) );
		}

		// Function from file: cigs_lighters.dm
		public void matchburnout(  ) {
			
			if ( this.lit == 1 ) {
				this.lit = -1;
				this.damtype = "brute";
				this.force = Lang13.Initial( this, "force" );
				this.icon_state = "match_burnt";
				this.item_state = "cigoff";
				this.name = "burnt match";
				this.desc = "A match. This one has seen better days.";
				this.attack_verb = null;
				GlobalVars.SSobj.processing.Remove( this );
			}
			return;
		}

		// Function from file: cigs_lighters.dm
		public void matchignite(  ) {
			
			if ( this.lit == 0 ) {
				this.lit = 1;
				this.icon_state = "match_lit";
				this.damtype = "fire";
				this.force = 3;
				this.hitsound = "sound/items/welder.ogg";
				this.item_state = "cigon";
				this.name = "lit match";
				this.desc = "A match. This one is lit.";
				this.attack_verb = new ByTable(new object [] { "burnt", "singed" });
				GlobalVars.SSobj.processing.Or( this );
				this.update_icon();
			}
			return;
		}

		// Function from file: cigs_lighters.dm
		public override bool fire_act( bool? air = null, dynamic exposed_temperature = null, double? exposed_volume = null ) {
			this.matchignite();
			return false;
		}

		// Function from file: cigs_lighters.dm
		public override int? process( dynamic seconds = null ) {
			dynamic location = null;

			location = GlobalFuncs.get_turf( this );
			this.smoketime--;

			if ( this.smoketime < 1 ) {
				this.matchburnout();
				return null;
			}

			if ( Lang13.Bool( location ) ) {
				((Tile)location).hotspot_expose( 700, 5 );
				return null;
			}
			return null;
		}

	}

}
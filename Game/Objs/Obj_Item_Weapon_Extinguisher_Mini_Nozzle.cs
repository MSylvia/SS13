// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Extinguisher_Mini_Nozzle : Obj_Item_Weapon_Extinguisher_Mini {

		public dynamic tank = null;
		public int nozzle_mode = 0;
		public int metal_synthesis_cooldown = 0;
		public bool nanofrost_cooldown = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "nozzleatmos";
			this.safety = false;
			this.max_water = 200;
			this.power = 8;
			this.precision = true;
			this.cooling_power = 5;
			this.w_class = 5;
			this.flags = 2;
			this.icon = "icons/obj/hydroponics/equipment.dmi";
			this.icon_state = "atmos_nozzle";
		}

		// Function from file: watertank.dm
		public Obj_Item_Weapon_Extinguisher_Mini_Nozzle ( dynamic parent_tank = null ) : base( (object)(parent_tank) ) {
			
			if ( GlobalFuncs.check_tank_exists( parent_tank, this ) ) {
				this.tank = parent_tank;
				this.reagents = this.tank.reagents;
				this.max_water = Convert.ToDouble( this.tank.volume );
				this.loc = this.tank;
			}
			return;
		}

		// Function from file: watertank.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			bool Adj = false;
			Reagents R = null;
			Obj_Effect_NanofrostContainer A = null;
			int? a = null;
			dynamic F = null;

			
			if ( this.nozzle_mode == 0 ) {
				base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
				return false;
			}
			Adj = ((Ent_Static)user).Adjacent( target );

			if ( Adj ) {
				this.AttemptRefill( target, user );
			}

			if ( this.nozzle_mode == 1 ) {
				
				if ( Adj ) {
					return false;
				}
				R = this.reagents;

				if ( ( R.total_volume ??0) < 100 ) {
					user.WriteMsg( "<span class='warning'>You need at least 100 units of water to use the nanofrost launcher!</span>" );
					return false;
				}

				if ( this.nanofrost_cooldown ) {
					user.WriteMsg( "<span class='warning'>Nanofrost launcher is still recharging...</span>" );
					return false;
				}
				this.nanofrost_cooldown = true;
				R.remove_any( 100 );
				A = new Obj_Effect_NanofrostContainer( GlobalFuncs.get_turf( this ) );
				GlobalFuncs.log_game( "" + user.ckey + " (" + user.name + ") used Nanofrost at " + GlobalFuncs.get_area( user ) + " (" + user.x + ", " + user.y + ", " + user.z + ")." );
				GlobalFuncs.playsound( this, "sound/items/syringeproj.ogg", 40, 1 );
				a = null;
				a = 0;

				while (( a ??0) < 5) {
					Map13.StepTowardsSimple( A, target );
					Task13.Sleep( 2 );
					a++;
				}
				A.Smoke();
				Task13.Schedule( 100, (Task13.Closure)(() => {
					
					if ( this != null ) {
						this.nanofrost_cooldown = false;
					}
					return;
				}));
				return false;
			}

			if ( this.nozzle_mode == 2 ) {
				
				if ( !Adj || !( target is Tile ) ) {
					return false;
				}

				if ( this.metal_synthesis_cooldown < 5 ) {
					F = GlobalFuncs.PoolOrNew( typeof(Obj_Effect_ParticleEffect_Foam_Metal), GlobalFuncs.get_turf( target ) );
					F.amount = 0;
					this.metal_synthesis_cooldown++;
					Task13.Schedule( 100, (Task13.Closure)(() => {
						this.metal_synthesis_cooldown--;
						return;
					}));
				} else {
					user.WriteMsg( "<span class='warning'>Metal foam mix is still being synthesized...</span>" );
					return false;
				}
			}
			return false;
		}

		// Function from file: watertank.dm
		public override bool dropped( dynamic user = null ) {
			user.WriteMsg( "<span class='notice'>The nozzle snaps back onto the tank!</span>" );
			this.tank.on = 0;
			this.loc = this.tank;
			return false;
		}

		// Function from file: watertank.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			switch ((int)( this.nozzle_mode )) {
				case 0:
					this.nozzle_mode = 1;
					this.tank.icon_state = "waterbackpackatmos_1";
					user.WriteMsg( "Swapped to nanofrost launcher" );
					return null;
					break;
				case 1:
					this.nozzle_mode = 2;
					this.tank.icon_state = "waterbackpackatmos_2";
					user.WriteMsg( "Swapped to metal foam synthesizer" );
					return null;
					break;
				case 2:
					this.nozzle_mode = 0;
					this.tank.icon_state = "waterbackpackatmos_0";
					user.WriteMsg( "Swapped to water extinguisher" );
					return null;
					break;
			}
			return null;
		}

		// Function from file: watertank.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			base.Move( (object)(NewLoc), Dir, step_x, step_y );

			if ( this.loc != this.tank.loc ) {
				this.loc = this.tank;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Pizzabox : Obj_Item {

		public bool open = false;
		public bool ismessy = false;
		public dynamic pizza = null;
		public ByTable boxes = new ByTable();
		public string boxtag = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.starting_materials = new ByTable().Set( "$cardboard", 3750 );
			this.w_type = 1;
			this.icon = "icons/obj/food.dmi";
			this.icon_state = "pizzabox1";
		}

		public Obj_Item_Pizzabox ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: snacks.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic box = null;
			ByTable boxestoadd = null;
			Obj_Item_Pizzabox i = null;
			dynamic t = null;
			Obj_Item_Pizzabox boxtotagto = null;

			
			if ( a is Obj_Item_Pizzabox ) {
				box = a;

				if ( !Lang13.Bool( box.open ) && !this.open ) {
					boxestoadd = new ByTable();
					boxestoadd.Add( box );

					foreach (dynamic _a in Lang13.Enumerate( box.boxes, typeof(Obj_Item_Pizzabox) )) {
						i = _a;
						
						boxestoadd.Add( i );
					}

					if ( this.boxes.len + boxestoadd.len + 1 <= 5 ) {
						
						if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
							box.boxes = new ByTable();
							this.boxes.Add( boxestoadd );
							box.update_icon();
							this.update_icon();
							GlobalFuncs.to_chat( b, "<span class='notice'>You put the " + box + " ontop of the " + this + "!</span>" );
						}
					} else {
						GlobalFuncs.to_chat( b, "<span class='warning'>The stack is too high!</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>Close the " + box + " first!</span>" );
				}
				return null;
			}

			if ( a is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Sliceable_Pizza ) {
				
				if ( Lang13.Bool( this.pizza ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>" + this + " already has a pizza in it.</span>" );
				} else if ( this.open ) {
					
					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.pizza = a;
						this.update_icon();
						GlobalFuncs.to_chat( b, "<span class='notice'>You put " + a + " in " + this + ".</span>" );
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>Open " + this + " first.</span>" );
				}
				return null;
			}

			if ( a is Obj_Item_Weapon_Pen ) {
				
				if ( this.open ) {
					return null;
				}
				t = Interface13.Input( "Enter what you want to add to the tag:", "Write", null, null, null, InputType.Str );

				if ( !this.Adjacent( b ) || Lang13.Bool( b.stat ) ) {
					return null;
				}
				boxtotagto = this;

				if ( this.boxes.len > 0 ) {
					boxtotagto = this.boxes[this.boxes.len];
				}
				boxtotagto.boxtag = String13.SubStr( "" + boxtotagto.boxtag + t, 1, 30 );
				this.update_icon();
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: snacks.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.boxes.len > 0 ) {
				return null;
			}
			this.open = !this.open;

			if ( this.open && Lang13.Bool( this.pizza ) ) {
				this.ismessy = true;
			}
			this.update_icon();
			return null;
		}

		// Function from file: snacks.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic box = null;

			
			if ( this.open && Lang13.Bool( this.pizza ) ) {
				((Mob)a).put_in_hands( this.pizza );
				GlobalFuncs.to_chat( a, "<span class='notice'>You take the " + this.pizza + " out of the " + this + ".</span>" );
				this.pizza = null;
				this.update_icon();
				return null;
			}

			if ( this.boxes.len > 0 ) {
				
				if ( ((Mob)a).get_inactive_hand() != this ) {
					base.attack_hand( (object)(a), (object)(b), (object)(c) );
					return null;
				}
				box = this.boxes[this.boxes.len];
				this.boxes.Remove( box );
				((Mob)a).put_in_hands( box );
				GlobalFuncs.to_chat( a, "<span class='warning'>You remove the topmost " + this + " from your hand.</span>" );
				box.update_icon();
				this.update_icon();
				return null;
			}
			base.attack_hand( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: snacks.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			Obj_Item_Pizzabox topbox = null;
			string toptag = null;
			Image pizzaimg = null;
			bool doimgtag = false;
			Obj_Item_Pizzabox topbox2 = null;
			Image tagimg = null;

			this.overlays = new ByTable();

			if ( this.open && Lang13.Bool( this.pizza ) ) {
				this.desc = "A box suited for pizzas. It appears to have a " + this.pizza.name + " inside.";
			} else if ( this.boxes.len > 0 ) {
				this.desc = "A pile of boxes suited for pizzas. There appears to be " + ( this.boxes.len + 1 ) + " boxes in the pile.";
				topbox = this.boxes[this.boxes.len];
				toptag = topbox.boxtag;

				if ( toptag != "" ) {
					this.desc = "" + this.desc + " The box on top has a tag, it reads: '" + toptag + "'.";
				}
			} else {
				this.desc = "A box suited for pizzas.";

				if ( this.boxtag != "" ) {
					this.desc = "" + this.desc + " The box has a tag, it reads: '" + this.boxtag + "'.";
				}
			}

			if ( this.open ) {
				
				if ( this.ismessy ) {
					this.icon_state = "pizzabox_messy";
				} else {
					this.icon_state = "pizzabox_open";
				}

				if ( Lang13.Bool( this.pizza ) ) {
					pizzaimg = new Image( "food.dmi", null, this.pizza.icon_state );
					pizzaimg.pixel_y = -3;
					this.overlays.Add( pizzaimg );
				}
				return null;
			} else {
				doimgtag = false;

				if ( this.boxes.len > 0 ) {
					topbox2 = this.boxes[this.boxes.len];

					if ( topbox2.boxtag != "" ) {
						doimgtag = true;
					}
				} else if ( this.boxtag != "" ) {
					doimgtag = true;
				}

				if ( doimgtag ) {
					tagimg = new Image( "food.dmi", null, "pizzabox_tag" );
					tagimg.pixel_y = this.boxes.len * 3;
					this.overlays.Add( tagimg );
				}
			}
			this.icon_state = "pizzabox" + ( this.boxes.len + 1 );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Singularity_Narsie : Obj_Machinery_Singularity {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.pixel_x = -236;
			this.pixel_y = -256;
			this.current_size = 9;
			this.contained = false;
			this.dissipate = false;
			this.grav_pull = 10;
			this.consume_range = 3;
			this.icon = "icons/obj/narsie.dmi";
			this.icon_state = "narsie-small";
		}

		// Function from file: narsie.dm
		public Obj_Machinery_Singularity_Narsie ( dynamic loc = null, int? starting_energy = null, bool? temp = null ) : base( (object)(loc), starting_energy, temp ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.narsie_list.Add( this );
			return;
		}

		// Function from file: narsie.dm
		public override dynamic cultify(  ) {
			return null;
		}

		// Function from file: narsie.dm
		public override void on_release(  ) {
			this.chained = false;
			this.move_self = true;
			this.icon_state = "narsie-small";
			return;
		}

		// Function from file: narsie.dm
		public override void on_capture(  ) {
			this.chained = true;
			this.move_self = false;
			this.icon_state = "narsie-small-chains";
			return;
		}

		// Function from file: narsie.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			return false;
		}

		// Function from file: narsie.dm
		public override bool consume( dynamic A = null ) {
			dynamic C2 = null;
			dynamic B = null;
			int dist = 0;
			Ent_Dynamic AM2 = null;
			dynamic T2 = null;

			
			if ( !((Ent_Static)A).singuloCanEat() ) {
				return false;
			}

			if ( A is Mob_Living ) {
				C2 = A;

				if ( Lang13.Bool( C2.flags & 128 ) ) {
					return false;
				}
				((Mob)C2).dust();
			} else if ( A is Obj ) {
				
				if ( A is Obj_Machinery_Bot ) {
					B = A;

					if ( Lang13.Bool( B.flags & 128 ) ) {
						return false;
					}
				}
				GlobalFuncs.qdel( A );

				if ( Lang13.Bool( A ) ) {
					GlobalFuncs.qdel( A );
				}
			} else if ( A is Tile ) {
				dist = Map13.GetDistance( A, this );

				foreach (dynamic _a in Lang13.Enumerate( A.contents, typeof(Ent_Dynamic) )) {
					AM2 = _a;
					

					if ( AM2 == this ) {
						continue;
					}

					if ( dist <= this.consume_range ) {
						this.consume( AM2 );
						continue;
					}

					if ( dist > this.consume_range && this.canPull( AM2 ) ) {
						
						if ( !AM2.singuloCanEat() ) {
							continue;
						}

						if ( 101 == AM2.invisibility ) {
							continue;
						}
						Task13.Schedule( 0, (Task13.Closure)(() => {
							Map13.StepTowardsSimple( AM2, this );
							return;
						}));
					}
				}

				if ( dist <= this.consume_range && !Lang13.Bool( GlobalFuncs.get_base_turf( A.z ).IsInstanceOfType( A ) ) ) {
					T2 = A;
					((Tile)T2).ChangeTurf( GlobalFuncs.get_base_turf( T2.z ) );
				}
			}
			return false;
		}

		// Function from file: narsie.dm
		public virtual void acquire( dynamic food = null ) {
			string capname = null;

			capname = String13.ToUpper( this.name );
			GlobalFuncs.to_chat( this.target, "<span class='notice'><b>" + capname + " HAS LOST INTEREST IN YOU.</b></span>" );
			this.target = food;

			if ( this.target is Mob_Living_Carbon_Human ) {
				GlobalFuncs.to_chat( this.target, "<span class='danger'>" + capname + " HUNGERS FOR YOUR SOUL.</span>" );
			} else {
				GlobalFuncs.to_chat( this.target, "<span class='danger'>" + capname + " HAS CHOSEN YOU TO LEAD HIM TO HIS NEXT MEAL.</span>" );
			}
			return;
		}

		// Function from file: narsie.dm
		public virtual void pickcultist(  ) {
			ByTable cultists = null;
			Mind cult_nh_mind = null;
			dynamic pos = null;
			Mob_Living_Carbon_Human food = null;
			dynamic pos2 = null;
			Mob_Dead_Observer ghost = null;
			dynamic pos3 = null;

			cultists = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.cult, typeof(Mind) )) {
				cult_nh_mind = _a;
				

				if ( !Lang13.Bool( cult_nh_mind.current ) ) {
					continue;
				}

				if ( Lang13.Bool( cult_nh_mind.current.stat ) ) {
					continue;
				}
				pos = GlobalFuncs.get_turf( cult_nh_mind.current );

				if ( Convert.ToInt32( pos.z ) != this.z ) {
					continue;
				}
				cultists.Add( cult_nh_mind.current );
			}

			if ( cultists.len != 0 ) {
				this.acquire( Rand13.PickFromTable( cultists ) );
				return;
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.living_mob_list, typeof(Mob_Living_Carbon_Human) )) {
				food = _b;
				

				if ( Lang13.Bool( food.stat ) ) {
					continue;
				}
				pos2 = GlobalFuncs.get_turf( food );

				if ( Convert.ToInt32( pos2.z ) != this.z ) {
					continue;
				}
				cultists.Add( food );
			}

			if ( cultists.len != 0 ) {
				this.acquire( Rand13.PickFromTable( cultists ) );
				return;
			}

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
				ghost = _c;
				

				if ( !( ghost.client != null ) ) {
					continue;
				}
				pos3 = GlobalFuncs.get_turf( ghost );

				if ( Convert.ToInt32( pos3.z ) != this.z ) {
					continue;
				}
				cultists.Add( ghost );
			}

			if ( cultists.len != 0 ) {
				this.acquire( Rand13.PickFromTable( cultists ) );
				return;
			}
			return;
		}

		// Function from file: narsie.dm
		public void narsiewall( Ent_Static T = null ) {
			T.desc = "An opening has been made on that wall, but who can say if what you seek truly lies on the other side?";
			T.icon = "icons/turf/walls.dmi";
			T.icon_state = "cult-narsie";
			T.opacity = false;
			T.density = false;
			this.luminosity = 1;
			return;
		}

		// Function from file: narsie.dm
		public void narsiefloor( dynamic T = null ) {
			
			if ( !( T is Tile_Simulated_Wall_Cult || T is Tile_Space ) ) {
				
				if ( T.icon_state != "cult-narsie" ) {
					T.desc = "something that goes beyond your understanding went this way";
					T.icon_state = "cult-narsie";
					T.luminosity = 1;
				}
			}
			return;
		}

		// Function from file: narsie.dm
		public override bool move( bool? force_move = null ) {
			force_move = force_move ?? false;

			dynamic movement_dir = null;

			
			if ( !this.move_self ) {
				return false;
			}
			movement_dir = Rand13.PickFromTable( GlobalVars.alldirs - this.last_failed_movement );

			if ( force_move == true ) {
				movement_dir = force_move;
			}

			if ( Lang13.Bool( this.target ) && Rand13.PercentChance( 60 ) ) {
				movement_dir = Map13.GetDistance( this, this.target );
			}
			Task13.Schedule( 0, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				return;
			}));
			Task13.Schedule( 1, (Task13.Closure)(() => {
				Map13.Step( this, Convert.ToInt32( movement_dir ) );
				return;
			}));
			return true;
		}

		// Function from file: narsie.dm
		public override void mezzer(  ) {
			Mob_Living_Carbon M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewersExcludeThis( this, 8 ), typeof(Mob_Living_Carbon) )) {
				M = _a;
				

				if ( M.stat == 0 ) {
					
					if ( Lang13.Bool( M.flags & 128 ) ) {
						continue;
					}

					if ( !GlobalFuncs.iscultist( M ) ) {
						GlobalFuncs.to_chat( M, "<span class='danger'>You feel your sanity crumble away in an instant as you gaze upon " + this.name + "...</span>" );
						M.apply_effect( 3, "stun" );
					}
				}
			}
			return;
		}

		// Function from file: narsie.dm
		public override dynamic process(  ) {
			this.eat();

			if ( !Lang13.Bool( this.target ) || Rand13.PercentChance( 5 ) ) {
				this.pickcultist();
			}
			this.move();

			if ( Rand13.PercentChance( 25 ) ) {
				this.mezzer();
			}
			return null;
		}

		// Function from file: narsie.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.narsie_list.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Candle : Obj_Item {

		public int wax = 200;
		public bool lit = false;
		public bool infinite = false;
		public bool start_lit = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "candle1";
			this.w_class = 1;
			this.heat = 1000;
			this.icon = "icons/obj/candle.dmi";
			this.icon_state = "candle1";
		}

		// Function from file: candle.dm
		public Obj_Item_Candle ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.start_lit ) {
				this.f_light();
			}
			return;
		}

		// Function from file: candle.dm
		public override int is_hot(  ) {
			return ( this.lit ?1:0) * this.heat;
		}

		// Function from file: candle.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.lit ) {
				((Ent_Static)user).AddLuminosity( -2 );
				this.SetLuminosity( 2 );
			}
			return false;
		}

		// Function from file: candle.dm
		public override bool pickup( dynamic user = null ) {
			
			if ( this.lit ) {
				this.SetLuminosity( 0 );
				((Ent_Static)user).AddLuminosity( 2 );
			}
			return false;
		}

		// Function from file: candle.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.lit ) {
				this.lit = false;
				this.update_icon();
				this.SetLuminosity( 0 );
				((Ent_Static)user).AddLuminosity( -2 );
			}
			return null;
		}

		// Function from file: candle.dm
		public override int? process( dynamic seconds = null ) {
			Ent_Static M = null;
			Ent_Static T = null;

			
			if ( !this.lit ) {
				return null;
			}
			this.wax--;

			if ( !( this.wax != 0 ) ) {
				new Obj_Item_Trash_Candle( this.loc );

				if ( this.loc is Mob ) {
					M = this.loc;
					((Mob)M).unEquip( this, 1 );
				}
				GlobalFuncs.qdel( this );
			}
			this.update_icon();

			if ( this.loc is Tile ) {
				T = this.loc;
				((dynamic)T).hotspot_expose( 700, 5 );
			}
			return null;
		}

		// Function from file: candle.dm
		[VerbInfo( name: "light" )]
		public void f_light( string flavor_text = null ) {
			flavor_text = flavor_text ?? "<span class='danger'>" + Task13.User + " lights the " + this.name + ".</span>";

			
			if ( !this.lit ) {
				this.lit = true;
				Task13.User.visible_message( flavor_text );
				this.SetLuminosity( 2 );

				if ( !this.infinite ) {
					GlobalVars.SSobj.processing.Or( this );
				}
				this.update_icon();
			}
			return;
		}

		// Function from file: candle.dm
		public override bool fire_act( bool? air = null, dynamic exposed_temperature = null, double? exposed_volume = null ) {
			
			if ( !this.lit ) {
				this.f_light();
			}
			return false;
		}

		// Function from file: candle.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;
			dynamic L = null;
			dynamic M = null;
			dynamic C = null;
			dynamic M2 = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				if ( ((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
					this.f_light( "<span class='danger'>" + user + " casually lights the " + this.name + " with " + A + ", what a badass.</span>" );
				}
			} else if ( A is Obj_Item_Weapon_Lighter ) {
				L = A;

				if ( Lang13.Bool( L.lit ) ) {
					this.f_light();
				}
			} else if ( A is Obj_Item_Weapon_Match ) {
				M = A;

				if ( Lang13.Bool( M.lit ) ) {
					this.f_light();
				}
			} else if ( A is Obj_Item_Candle ) {
				C = A;

				if ( Lang13.Bool( C.lit ) ) {
					this.f_light();
				}
			} else if ( A is Obj_Item_Clothing_Mask_Cigarette ) {
				M2 = A;

				if ( Lang13.Bool( M2.lit ) ) {
					this.f_light();
				}
			}
			return null;
		}

		// Function from file: candle.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			int i = 0;

			
			if ( this.wax > 150 ) {
				i = 1;
			} else if ( this.wax > 80 ) {
				i = 2;
			} else {
				i = 3;
			}
			this.icon_state = "candle" + i + ( this.lit ? "_lit" : "" );
			return false;
		}

	}

}
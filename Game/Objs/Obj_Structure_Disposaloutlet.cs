// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Disposaloutlet : Obj_Structure {

		public bool active = false;
		public Tile target = null;
		public dynamic trunk = null;
		public Obj_Structure_Disposalconstruct stored = null;
		public bool mode = false;
		public int start_eject = 0;
		public double? eject_range = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/atmospherics/pipes/disposal.dmi";
			this.icon_state = "outlet";
		}

		// Function from file: disposal-structures.dm
		public Obj_Structure_Disposaloutlet ( dynamic loc = null, Obj_Structure_Disposalconstruct make_from = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( make_from != null ) {
				this.dir = make_from.dir;
				make_from.loc = this;
				this.stored = make_from;
			} else {
				this.stored = new Obj_Structure_Disposalconstruct( this, 7, this.dir );
			}
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.target = GlobalFuncs.get_ranged_target_turf( this, this.dir, 10 );
				this.trunk = Lang13.FindIn( typeof(Obj_Structure_Disposalpipe_Trunk), this.loc );

				if ( Lang13.Bool( this.trunk ) ) {
					this.trunk.linked = this;
				}
				return;
			}));
			return;
		}

		// Function from file: disposal-structures.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic W = null;

			
			if ( !Lang13.Bool( A ) || !Lang13.Bool( user ) ) {
				return null;
			}
			this.add_fingerprint( user );

			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				if ( !this.mode ) {
					this.mode = true;
					GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
					user.WriteMsg( "<span class='notice'>You remove the screws around the power connection.</span>" );
					return null;
				} else if ( this.mode ) {
					this.mode = false;
					GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
					user.WriteMsg( "<span class='notice'>You attach the screws around the power connection.</span>" );
					return null;
				}
			} else if ( A is Obj_Item_Weapon_Weldingtool && this.mode ) {
				W = A;

				if ( ((Obj_Item_Weapon_Weldingtool)W).remove_fuel( 0, user ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 100, 1 );
					user.WriteMsg( new Txt( "<span class='notice'>You start slicing the floorweld off " ).the( this ).item().str( "...</span>" ).ToString() );

					if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
						
						if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)W).isOn() ) {
							return null;
						}
						user.WriteMsg( new Txt( "<span class='notice'>You slice the floorweld off " ).the( this ).item().str( ".</span>" ).ToString() );
						this.stored.loc = this.loc;
						this.transfer_fingerprints_to( this.stored );
						this.stored.update();
						this.stored.anchored = 0;
						this.stored.density = true;
						GlobalFuncs.qdel( this );
					}
					return null;
				} else {
					return null;
				}
			}
			return null;
		}

		// Function from file: disposal-structures.dm
		public void expel( Obj_Structure_Disposalholder H = null ) {
			dynamic T = null;
			Ent_Dynamic AM = null;

			T = GlobalFuncs.get_turf( this );
			Icon13.Flick( "outlet-open", this );

			if ( this.start_eject + 30 < Game13.time ) {
				this.start_eject = Game13.time;
				GlobalFuncs.playsound( this, "sound/machines/warning-buzzer.ogg", 50, 0, 0 );
				Task13.Sleep( 20 );
				GlobalFuncs.playsound( this, "sound/machines/hiss.ogg", 50, 0, 0 );
			} else {
				Task13.Sleep( 20 );
			}

			if ( H != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( H, typeof(Ent_Dynamic) )) {
					AM = _a;
					
					AM.forceMove( T );
					AM.pipe_eject( this.dir );
					AM.throw_at_fast( this.target, this.eject_range, 1 );
				}
				H.vent_gas( T );
				GlobalFuncs.qdel( H );
			}
			return;
		}

		// Function from file: disposal-structures.dm
		public override dynamic Destroy(  ) {
			
			if ( Lang13.Bool( this.trunk ) ) {
				this.trunk.linked = null;
			}
			return base.Destroy();
		}

	}

}
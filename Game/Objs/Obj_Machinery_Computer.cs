// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer : Obj_Machinery {

		public dynamic circuit = null;
		public bool processing = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 300;
			this.active_power_usage = 300;
			this.machine_flags = 1179;
			this.use_auto_lights = true;
			this.light_power_on = 1;
			this.light_range_on = 3;
			this.icon = "icons/obj/computer.dmi";
		}

		// Function from file: computer.dm
		public Obj_Machinery_Computer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.ticker != null ) {
				this.initialize();
			}
			return;
		}

		// Function from file: computer.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			} else {
				this.attack_hand( b );
			}
			return null;
		}

		// Function from file: computer.dm
		public override int togglePanelOpen( dynamic toggleitem = null, dynamic user = null, dynamic CC = null ) {
			Obj_Structure_Computerframe A = null;
			Obj C = null;

			
			if ( !Lang13.Bool( this.circuit ) ) {
				return 0;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Screwdriver.ogg", 50, 1 );
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " begins to unscrew " ).the( this ).item().str( "'s monitor." ).ToString(), "You begin to unscrew the monitor..." );

			if ( GlobalFuncs.do_after( user, this, 20 ) && ( Lang13.Bool( this.circuit ) || Lang13.Bool( CC ) ) ) {
				A = new Obj_Structure_Computerframe( this.loc );

				if ( !Lang13.Bool( CC ) ) {
					CC = Lang13.Call( this.circuit, A );
				} else {
					CC.loc = A;
				}
				A.circuit = CC;
				A.anchored = 1;

				foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj) )) {
					C = _a;
					
					C.loc = this.loc;
				}

				if ( ( this.stat & 1 ) != 0 ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).icon( this ).str( " The broken glass falls out.</span>" ).ToString() );
					GlobalFuncs.getFromPool( typeof(Obj_Item_Weapon_Shard), this.loc );
					A.state = 3;
					A.icon_state = "3";
				} else {
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).icon( this ).str( " You disconnect the monitor.</span>" ).ToString() );
					A.state = 4;
					A.icon_state = "4";
				}
				this.circuit = null;
				this.Destroy( this );
				return 1;
			} else {
				return 1;
			}
		}

		// Function from file: computer.dm
		public virtual void set_broken(  ) {
			this.stat |= 1;
			this.update_icon();
			return;
		}

		// Function from file: computer.dm
		public override dynamic power_change(  ) {
			dynamic _default = null;

			_default = base.power_change();
			this.update_icon();
			return _default;
		}

		// Function from file: computer.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			base.update_icon( (object)(location), (object)(target) );
			this.icon_state = Lang13.Initial( this, "icon_state" );

			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "b";
			} else if ( ( this.stat & 2 ) != 0 ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "0";
			}
			return null;
		}

		// Function from file: computer.dm
		public override bool blob_act( dynamic severity = null ) {
			dynamic x = null;

			
			if ( Rand13.PercentChance( 75 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.verbs )) {
					x = _a;
					
					this.verbs.Remove( x );
				}
				this.set_broken();
				this.density = false;
			}
			return false;
		}

		// Function from file: computer.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Rand13.PercentChance( Convert.ToInt32( Proj.damage ) ) ) {
				this.set_broken();
			}
			base.bullet_act( (object)(Proj), (object)(def_zone) );
			return null;
		}

		// Function from file: computer.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			dynamic x = null;
			dynamic x2 = null;

			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 25 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}

					if ( Rand13.PercentChance( 50 ) ) {
						
						foreach (dynamic _a in Lang13.Enumerate( this.verbs )) {
							x = _a;
							
							this.verbs.Remove( x );
						}
						this.set_broken();
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 25 ) ) {
						
						foreach (dynamic _b in Lang13.Enumerate( this.verbs )) {
							x2 = _b;
							
							this.verbs.Remove( x2 );
						}
						this.set_broken();
					}
					break;
			}
			return false;
		}

		// Function from file: computer.dm
		public override dynamic emp_act( int severity = 0 ) {
			
			if ( Rand13.PercentChance( ((int)( 20 / severity )) ) ) {
				this.set_broken();
			}
			base.emp_act( severity );
			return null;
		}

		// Function from file: computer.dm
		public override dynamic process(  ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return 0;
			}
			return 1;
		}

		// Function from file: computer.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			base.initialize( suppress_icon_check );
			this.power_change();
			return false;
		}

		// Function from file: computer.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( mover is Ent_Dynamic && ((Ent_Static)mover).checkpass( 16 ) != 0 ) {
				return true;
			}
			return base.CanPass( (object)(mover), (object)(target), height, air_group );
		}

		// Function from file: computer.dm
		public override dynamic cultify(  ) {
			new Obj_Structure_Cult_Tome( this.loc );
			base.cultify();
			return null;
		}

	}

}
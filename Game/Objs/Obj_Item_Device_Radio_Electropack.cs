// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Radio_Electropack : Obj_Item_Device_Radio {

		public double code = 2;
		public RadioFrequency radio_connection = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electropack";
			this.origin_tech = "materials=1;powerstorage=2";
			this.frequency = 1449;
			this.slot_flags = 1024;
			this.w_class = 5;
			this.starting_materials = new ByTable().Set( "$iron", 10000 ).Set( "$glass", 2500 );
			this.icon_state = "electropack0";
		}

		// Function from file: electropack.dm
		public Obj_Item_Device_Radio_Electropack (  ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.radio_controller != null ) {
				this.initialize();
			} else {
				Task13.Schedule( 50, (Task13.Closure)(() => {
					
					if ( GlobalVars.radio_controller != null ) {
						this.initialize();
					}
					return;
				}));
			}
			return;
		}

		// Function from file: electropack.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;

			
			if ( !( user is Mob_Living_Carbon_Human ) ) {
				return null;
			}
			((Mob)user).set_machine( this );
			dat = new Txt( "<TT>\n<A href='?src=" ).Ref( this ).str( ";power=1'>Turn " ).item( ( Lang13.Bool( this.on ) ? "Off" : "On" ) ).str( "</A><BR>\n<B>Frequency/Code</B> for electropack:<BR>\nFrequency:\n<A href='byond://?src=" ).Ref( this ).str( ";freq=-10'>-</A>\n<A href='byond://?src=" ).Ref( this ).str( ";freq=-2'>-</A> " ).item( GlobalFuncs.format_frequency( this.frequency ) ).str( "\n<A href='byond://?src=" ).Ref( this ).str( ";freq=2'>+</A>\n<A href='byond://?src=" ).Ref( this ).str( ";freq=10'>+</A><BR>\n\nCode:\n<A href='byond://?src=" ).Ref( this ).str( ";code=-5'>-</A>\n<A href='byond://?src=" ).Ref( this ).str( ";code=-1'>-</A> " ).item( this.code ).str( "\n<A href='byond://?src=" ).Ref( this ).str( ";code=1'>+</A>\n<A href='byond://?src=" ).Ref( this ).str( ";code=5'>+</A><BR>\n</TT>" ).ToString();
			Interface13.Browse( user, dat, "window=radio" );
			GlobalFuncs.onclose( user, "radio" );
			return null;
		}

		// Function from file: electropack.dm
		public override bool receive_signal( Game_Data signal = null, bool? receive_method = null, dynamic receive_param = null ) {
			Ent_Static R = null;
			Ent_Static M = null;
			Ent_Static T = null;
			Effect_Effect_System_SparkSpread s = null;

			
			if ( !( signal != null ) || Convert.ToDouble( ((dynamic)signal).encryption ) != this.code ) {
				return false;
			}

			if ( this.loc is Obj_Mecha && Lang13.Bool( this.on ) ) {
				R = this.loc;
				((dynamic)R).shock_n_boot();
			} else if ( this.loc is Mob && Lang13.Bool( this.on ) ) {
				M = this.loc;
				T = M.loc;

				if ( T is Tile ) {
					
					if ( !Lang13.Bool( ((dynamic)M).moved_recently ) && Lang13.Bool( ((dynamic)M).last_move ) ) {
						((dynamic)M).moved_recently = 1;
						Map13.Step( (Ent_Dynamic)(M), Convert.ToInt32( ((dynamic)M).last_move ) );
						Task13.Schedule( 50, (Task13.Closure)(() => {
							
							if ( M != null ) {
								((dynamic)M).moved_recently = 0;
							}
							return;
						}));
					}
				}
				GlobalFuncs.to_chat( M, "<span class='danger'>You feel a sharp shock!</span>" );
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 3, 1, M );
				s.start();
				((dynamic)M).Weaken( 10 );
			}

			if ( Lang13.Bool( this.master ) && this.isWireCut( 1 ) != 0 ) {
				this.master.receive_signal();
			}
			return false;
		}

		// Function from file: electropack.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic new_frequency = null;
			dynamic M = null;
			dynamic M2 = null;

			
			if ( Lang13.Bool( Task13.User.stat ) || Task13.User.restrained() ) {
				return null;
			}

			if ( Task13.User is Mob_Living_Carbon_Human && ( !( GlobalVars.ticker != null ) || GlobalVars.ticker != null && GlobalVars.ticker.mode != "monkey" ) && Task13.User.contents.Find( this ) != 0 || Task13.User.contents.Find( this.master ) != 0 || GlobalFuncs.in_range( this, Task13.User ) && this.loc is Tile ) {
				Task13.User.set_machine( this );

				if ( Lang13.Bool( href_list["freq"] ) ) {
					new_frequency = GlobalFuncs.sanitize_frequency( this.frequency + String13.ParseNumber( href_list["freq"] ) );
					this.set_frequency( new_frequency );
				} else if ( Lang13.Bool( href_list["code"] ) ) {
					this.code += String13.ParseNumber( href_list["code"] ) ??0;
					this.code = Num13.Floor( this.code );
					this.code = Num13.MinInt( 100, ((int)( this.code )) );
					this.code = Num13.MaxInt( 1, ((int)( this.code )) );
				} else if ( Lang13.Bool( href_list["power"] ) ) {
					this.on = !Lang13.Bool( this.on );
					this.icon_state = "electropack" + this.on;
				}

				if ( !Lang13.Bool( this.master ) ) {
					
					if ( this.loc is Mob ) {
						this.attack_self( this.loc );
					} else {
						
						foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( this, 1 ) )) {
							M = _a;
							

							if ( Lang13.Bool( M.client ) ) {
								this.attack_self( M );
							}
						}
					}
				} else if ( this.master.loc is Mob ) {
					this.attack_self( this.master.loc );
				} else {
					
					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( this.master, 1 ) )) {
						M2 = _b;
						

						if ( Lang13.Bool( M2.client ) ) {
							this.attack_self( M2 );
						}
					}
				}
			} else {
				Interface13.Browse( Task13.User, null, "window=radio" );
				return null;
			}
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Assembly_ShockKit A = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Clothing_Head_Helmet ) {
				
				if ( !this.b_stat ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " is not ready to be attached!</span>" );
					return null;
				}
				A = new Obj_Item_Assembly_ShockKit( b );
				A.icon = "icons/obj/assemblies.dmi";
				((Mob)b).drop_from_inventory( a );
				a.loc = A;
				a.master = A;
				A.part1 = a;
				((Mob)b).drop_from_inventory( this );
				this.loc = A;
				this.master = A;
				A.part2 = this;
				((Mob)b).put_in_hands( A );
				A.add_fingerprint( b );
			}
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Ent_Static S = null;

			
			if ( this.loc is Obj_Item_Assembly_ShockKit ) {
				S = this.loc;

				if ( ((dynamic)S).part1 == this ) {
					((dynamic)S).part1 = null;
				} else if ( ((dynamic)S).part2 == this ) {
					((dynamic)S).part2 = null;
				}
				this.master = null;
			}

			if ( GlobalVars.radio_controller != null ) {
				GlobalVars.radio_controller.remove_object( this, this.frequency );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: electropack.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this == a.back ) {
				GlobalFuncs.to_chat( a, "<span class='notice'>You need help taking this off!</span>" );
				return null;
			}
			base.attack_hand( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: electropack.dm
		public override void set_frequency( dynamic new_frequency = null ) {
			GlobalVars.radio_controller.remove_object( this, this.frequency );
			this.frequency = new_frequency;
			this.radio_connection = GlobalVars.radio_controller.add_object( this, this.frequency );
			return;
		}

		// Function from file: electropack.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			
			if ( Convert.ToDouble( this.frequency ) < 1200 || Convert.ToDouble( this.frequency ) > 1600 ) {
				this.frequency = GlobalFuncs.sanitize_frequency( this.frequency );
			}
			this.set_frequency( this.frequency );
			return false;
		}

	}

}
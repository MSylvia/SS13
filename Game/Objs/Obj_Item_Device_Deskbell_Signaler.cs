// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Deskbell_Signaler : Obj_Item_Device_Deskbell {

		public RadioFrequency radio_connection = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=1;magnets=1";
			this.icon_state = "deskbell_2alt";
		}

		// Function from file: deskbell.dm
		public Obj_Item_Device_Deskbell_Signaler ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 40, (Task13.Closure)(() => {
				
				if ( !( GlobalVars.radio_controller != null ) ) {
					Task13.Schedule( 20, (Task13.Closure)(() => {
						
						if ( !( GlobalVars.radio_controller != null ) ) {
							this.visible_message( "Cannot initialize the radio_controller, this is a bug, tell a coder" );
							return;
						} else {
							GlobalVars.radio_controller.remove_object( this, this.frequency );
							this.radio_connection = GlobalVars.radio_controller.add_object( this, this.frequency, GlobalVars.RADIO_CHAT );
						}
						return;
					}));
				} else {
					GlobalVars.radio_controller.remove_object( this, this.frequency );
					this.radio_connection = GlobalVars.radio_controller.add_object( this, this.frequency, GlobalVars.RADIO_CHAT );
				}
				return;
			}));
			return;
		}

		// Function from file: deskbell.dm
		public static int get_new_bellfreq(  ) {
			int i = 0;

			i = Rand13.Int( 1200, 1600 );

			if ( i % 2 == 0 ) {
				i += 1;
			}

			while ( GlobalVars.deskbell_default_frequencies.Find(i) > 0 ) {
				i = Rand13.Int( 1200, 1600 );

				if ( i % 2 == 0 ) {
					i += 1;
				}
			}
			GlobalVars.deskbell_default_frequencies.Add( i );
			return i;
		}

		// Function from file: deskbell.dm
		public override bool ring(  ) {
			Obj_Item_Device ring_pda = null;
			dynamic ringerdatum = null;
			dynamic T = null;
			Game_Data signal = null;
			string time = null;
			dynamic T2 = null;
			Mob user = null;

			
			if ( base.ring() ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.PDAs, typeof(Obj_Item_Device_Pda) )) {
					ring_pda = _a;
					

					if ( !Lang13.Bool( ((dynamic)ring_pda).owner ) || ring_pda == this || Lang13.Bool( ((dynamic)ring_pda).hidden ) ) {
						continue;
					}
					ringerdatum = Lang13.FindIn( typeof(PdaApp_Ringer), ((dynamic)ring_pda).applications );

					if ( !Lang13.Bool( ringerdatum ) || !Lang13.Bool( ringerdatum.status ) ) {
						continue;
					}

					if ( this.frequency == Convert.ToDouble( ringerdatum.frequency ) ) {
						T = GlobalFuncs.get_turf( ring_pda );
						GlobalFuncs.playsound( T, "sound/machines/notify.ogg", 50, 1 );
						((Ent_Static)T).visible_message( new Txt().icon( ring_pda ).str( " *" ).item( this.name ).str( "*" ).ToString() );
					}
				}

				if ( !( this.radio_connection != null ) ) {
					return false;
				}
				signal = GlobalFuncs.getFromPool( typeof(Signal) );
				((dynamic)signal).source = this;
				((dynamic)signal).encryption = this.code;
				((dynamic)signal).data["message"] = "ACTIVATE";
				this.radio_connection.post_signal( this, signal );
				time = String13.FormatTime( Game13.realtime, "hh:mm:ss" );
				T2 = GlobalFuncs.get_turf( this );

				if ( Task13.User != null ) {
					user = Task13.User;

					if ( user != null ) {
						GlobalVars.lastsignalers.Add( "" + time + " <B>:</B> " + user.key + " used " + this + " @ location (" + T2.x + "," + T2.y + "," + T2.z + ") <B>:</B> " + GlobalFuncs.format_frequency( this.frequency ) + "/" + this.code );
					} else {
						GlobalVars.lastsignalers.Add( "" + time + " <B>:</B> (<span class='danger'>NO USER FOUND</span>) used " + this + " @ location (" + T2.x + "," + T2.y + "," + T2.z + ") <B>:</B> " + GlobalFuncs.format_frequency( this.frequency ) + "/" + this.code );
					}
				}
				return false;
			}
			return false;
		}

		// Function from file: deskbell.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Device_DeskbellAssembly A = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				((Ent_Static)b).visible_message( new Txt().item( b ).str( " begins to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts." ).ToString(), new Txt( "You begin to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts..." ).ToString() );
				GlobalFuncs.playsound( this.loc, "sound/items/Ratchet.ogg", 50, 1 );

				if ( this.wrenching ) {
					return null;
				}
				this.wrenching = true;

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					
					if ( this != null ) {
						this.anchored = !Lang13.Bool( this.anchored );
						((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( "es " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( "</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( " " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( ".</span>" ).ToString(), "<span class='notice'>You hear a ratchet.</span>" );
					}
				}
				this.wrenching = false;
				return null;
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.anchored ) ) {
					GlobalFuncs.to_chat( b, new Txt( "You need to unwrench " ).the( this ).item().str( " first." ).ToString() );
					return null;
				}
				A = new Obj_Item_Device_DeskbellAssembly( GlobalFuncs.get_turf( this ) );
				A.frequency = this.frequency;
				A.code = this.code;
				A.has_signaler = true;
				A.build_step = 1;
				A.update_icon();
				GlobalVars.radio_controller.remove_object( this, this.frequency );
				GlobalFuncs.qdel( this );
				return null;
			}
			this.ring(  );
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Under : Obj_Item_Clothing {

		public ByTable accessories = new ByTable();
		public int has_sensor = 1;
		public int sensor_mode = 0;
		public bool displays_id = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.body_parts_covered = 414;
			this.permeability_coefficient = 081;
			this.slot_flags = 2;
			this.heat_conductivity = 0.4;
			this.armor = new ByTable().Set( "melee", 0 ).Set( "bullet", 0 ).Set( "laser", 0 ).Set( "energy", 0 ).Set( "bomb", 0 ).Set( "bio", 0 ).Set( "rad", 0 );
			this.species_restricted = new ByTable(new object [] { "exclude", "Muton" });
			this.icon = "icons/obj/clothing/uniforms.dmi";
		}

		public Obj_Item_Clothing_Under ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: clothing.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			string mode = null;
			Obj_Item_Clothing_Accessory A = null;

			base.examine( (object)(user), size );

			switch ((int)( this.sensor_mode )) {
				case 0:
					mode = "Its sensors appear to be disabled.";
					break;
				case 1:
					mode = "Its binary life sensors appear to be enabled.";
					break;
				case 2:
					mode = "Its vital tracker appears to be enabled.";
					break;
				case 3:
					mode = "Its vital tracker and tracking beacon appear to be enabled.";
					break;
			}
			GlobalFuncs.to_chat( user, "<span class='info'>" + mode + "</span>" );

			foreach (dynamic _b in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory) )) {
				A = _b;
				
				GlobalFuncs.to_chat( user, new Txt( "<span class='info'>" ).A( A ).item().str( " is clipped to it.</span>" ).ToString() );
			}
			return null;
		}

		// Function from file: clothing.dm
		public bool set_sensors( Mob usr = null ) {
			Mob M = null;
			ByTable modes = null;
			dynamic switchMode = null;

			M = usr;

			if ( M is Mob_Dead ) {
				return false;
			}

			if ( Lang13.Bool( usr.stat ) || usr.restrained() ) {
				return false;
			}

			if ( this.has_sensor >= 2 ) {
				GlobalFuncs.to_chat( usr, "<span class='warning'>The controls are locked.</span>" );
				return false;
			}

			if ( this.has_sensor <= 0 ) {
				GlobalFuncs.to_chat( usr, "<span class='warning'>This suit does not have any sensors.</span>" );
				return false;
			}
			modes = new ByTable(new object [] { "Off", "Binary sensors", "Vitals tracker", "Tracking beacon" });
			switchMode = Interface13.Input( "Select a sensor mode:", "Suit Sensor Mode", modes[this.sensor_mode + 1], null, modes, InputType.Any );

			if ( Map13.GetDistance( usr, this ) > 1 ) {
				GlobalFuncs.to_chat( usr, "<span class='warning'>You have moved too far away.</span>" );
				return false;
			}
			this.sensor_mode = modes.Find( switchMode ) - 1;

			switch ((int)( this.sensor_mode )) {
				case 0:
					GlobalFuncs.to_chat( usr, "<span class='notice'>You disable your suit's remote sensing equipment.</span>" );
					break;
				case 1:
					GlobalFuncs.to_chat( usr, "<span class='notice'>Your suit will now report whether you are live or dead.</span>" );
					break;
				case 2:
					GlobalFuncs.to_chat( usr, "<span class='notice'>Your suit will now report your vital lifesigns.</span>" );
					break;
				case 3:
					GlobalFuncs.to_chat( usr, "<span class='notice'>Your suit will now report your vital lifesigns as well as your coordinate position.</span>" );
					break;
			}
			return false;
		}

		// Function from file: clothing.dm
		public void remove_accessory( dynamic user = null, dynamic accessory = null ) {
			dynamic H = null;

			
			if ( !Lang13.Bool( accessory ) || !this.accessories.Contains( accessory ) ) {
				return;
			}
			((Obj_Item_Clothing_Accessory)accessory).on_removed( user );
			this.accessories.Remove( accessory );

			if ( user is Mob_Living_Carbon_Human ) {
				H = user;
				((Mob)H).update_inv_w_uniform();
			}
			return;
		}

		// Function from file: clothing.dm
		public bool can_attach_accessory( dynamic accessory = null ) {
			Obj_Item_Clothing_Accessory A = null;

			
			if ( !Lang13.Bool( accessory ) ) {
				return false;
			}

			if ( !( this.accessories.len != 0 ) ) {
				return true;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory) )) {
				A = _a;
				

				if ( ( A.accessory_exclusion & accessory.accessory_exclusion ) != 0 ) {
					return false;
				}
			}
			return true;
		}

		// Function from file: clothing.dm
		public ByTable priority_accessories(  ) {
			ByTable unorg = null;
			ByTable prioritized = null;
			Obj_Item_Clothing_Accessory_Holster H = null;
			Obj_Item_Clothing_Accessory_Storage S = null;
			Obj_Item_Clothing_Accessory_Armband A = null;

			
			if ( !( this.accessories.len != 0 ) ) {
				return new ByTable();
			}
			unorg = this.accessories;
			prioritized = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory_Holster) )) {
				H = _a;
				
				prioritized.Add( H );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory_Storage) )) {
				S = _b;
				
				prioritized.Add( S );
			}

			foreach (dynamic _c in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory_Armband) )) {
				A = _c;
				
				prioritized.Add( A );
			}
			prioritized.Or( unorg );
			return prioritized;
		}

		// Function from file: clothing.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			ByTable delayed = null;
			Obj_Item_Clothing_Accessory A = null;
			Obj_Item_Clothing_Accessory A2 = null;

			
			if ( this.accessories.len != 0 && this.loc == a ) {
				delayed = new ByTable();

				foreach (dynamic _b in Lang13.Enumerate( this.priority_accessories(), typeof(Obj_Item_Clothing_Accessory) )) {
					A = _b;
					

					switch ((int)( A.on_accessory_interact( a, false ) )) {
						case 1:
							return 1;
							break;
						case -1:
							delayed.Add( A );
							break;
						default:
							continue;
							break;
					}
				}

				foreach (dynamic _c in Lang13.Enumerate( delayed, typeof(Obj_Item_Clothing_Accessory) )) {
					A2 = _c;
					

					if ( A2.on_accessory_interact( a, true ) != 0 ) {
						return 1;
					}
				}
				return null;
			}
			return base.attack_hand( (object)(a), (object)(b), (object)(c) );
		}

		// Function from file: clothing.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic A = null;
			Ent_Static H = null;
			Obj_Item_Clothing_Accessory accessory = null;

			
			if ( a is Obj_Item_Clothing_Accessory ) {
				A = a;

				if ( this.can_attach_accessory( A ) ) {
					
					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.accessories.Add( A );
						((Obj_Item_Clothing_Accessory)A).on_attached( this, b );

						if ( this.loc is Mob_Living_Carbon_Human ) {
							H = this.loc;
							((dynamic)H).update_inv_w_uniform();
						}
						return null;
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You cannot attach more accessories of this type to " + this + "</span>" );
					return null;
				}
			}

			foreach (dynamic _a in Lang13.Enumerate( this.priority_accessories(), typeof(Obj_Item_Clothing_Accessory) )) {
				accessory = _a;
				

				if ( Lang13.Bool( accessory.attackby( a, b ) ) ) {
					return null;
				}
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: clothing.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Obj_Machinery_Computer_Crew C = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Computer_Crew) )) {
				C = _a;
				

				if ( C.tracked.Contains( C != null && this != null ) ) {
					C.tracked.Remove( this );
				}
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: clothing.dm
		public override dynamic emp_act( int severity = 0 ) {
			Obj_Item_Clothing_Accessory accessory = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.accessories, typeof(Obj_Item_Clothing_Accessory) )) {
				accessory = _a;
				
				accessory.emp_act( severity );
			}
			base.emp_act( severity );
			return null;
		}

		// Function from file: clothing.dm
		[Verb]
		[VerbInfo( name: "Remove Accessory", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void removetie(  ) {
			dynamic A = null;

			
			if ( !( Task13.User is Mob_Living ) ) {
				return;
			}

			if ( Task13.User.isUnconscious() ) {
				return;
			}

			if ( !( this.accessories.len != 0 ) ) {
				return;
			}

			if ( this.accessories.len > 1 ) {
				A = Interface13.Input( "Select an accessory to remove from " + this, null, null, null, this.accessories, InputType.Any );
			} else {
				A = this.accessories[1];
			}
			this.remove_accessory( Task13.User, A );
			return;
		}

		// Function from file: clothing.dm
		[Verb]
		[VerbInfo( name: "Toggle Suit Sensors", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void toggle(  ) {
			this.set_sensors( Task13.User );
			Lang13.SuperCall();
			return;
		}

	}

}
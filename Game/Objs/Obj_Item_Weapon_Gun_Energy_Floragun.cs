// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Energy_Floragun : Obj_Item_Weapon_Gun_Energy {

		public int charge_tick = 0;
		public int mode = 0;
		public dynamic mutstrength = 10;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guninhands_left.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guninhands_right.dmi" );
			this.fire_sound = "sound/effects/stealthoff.ogg";
			this.projectile_type = "/obj/item/projectile/energy/floramut";
			this.origin_tech = "materials=2;biotech=3;powerstorage=3";
			this.modifystate = "floramut";
			this.icon_state = "floramut100";
		}

		// Function from file: special.dm
		public Obj_Item_Weapon_Gun_Energy_Floragun ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.processing_objects.Add( this );
			return;
		}

		// Function from file: special.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic tray = null;

			
			if ( flag == true && A is Obj_Machinery_PortableAtmospherics_Hydroponics ) {
				tray = A;

				if ( this.process_chambered() ) {
					((Ent_Static)user).visible_message( new Txt( "<span class='danger'> " ).The( user ).item().str( " fires " ).the( this ).item().str( " into " ).the( tray ).item().str( "!</span>" ).ToString() );
					this.Fire( A, user );
				}
				return false;
			}
			base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
			return false;
		}

		// Function from file: special.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Card_Emag || a is Obj_Item_Weapon_Solder ) {
				
				if ( this.mode == 2 ) {
					GlobalFuncs.to_chat( b, "The safeties are already de-activated." );
				} else {
					this.mode = 2;
					this.mutstrength = 25;
					this.charge_cost = this.mutstrength * 10;
					this.projectile_type = "/obj/item/projectile/energy/floramut/emag";
					GlobalFuncs.to_chat( b, "<span class='warning'>You short out the safety limit of the " + this.name + "!</span>" );
					this.desc += " It seems to have it's safety features de-activated.";
					GlobalFuncs.playsound( GlobalFuncs.get_turf( b ), "sound/effects/sparks4.ogg", 50, 1 );
					this.modifystate = "floraemag";
					this.update_icon();
				}
			}
			return null;
		}

		// Function from file: special.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			switch ((int)( this.mode )) {
				case 0:
					this.mode = 1;
					this.charge_cost = 100;
					GlobalFuncs.to_chat( user, "<span class='warning'>The " + this.name + " is now set to improve harvests.</span>" );
					this.projectile_type = "/obj/item/projectile/energy/florayield";
					this.modifystate = "florayield";
					break;
				case 1:
					this.mode = 0;
					this.charge_cost = this.mutstrength * 10;
					GlobalFuncs.to_chat( user, "<span class='warning'>The " + this.name + " is now set to induce mutations.</span>" );
					this.projectile_type = "/obj/item/projectile/energy/floramut";
					this.modifystate = "floramut";
					break;
				case 2:
					GlobalFuncs.to_chat( user, "<span class='warning'>The " + this.name + " appears to be locked into one mode.</span>" );
					return null;
					break;
			}
			this.update_icon();
			return null;
		}

		// Function from file: special.dm
		public override bool process_chambered(  ) {
			bool _default = false;

			dynamic P = null;

			_default = base.process_chambered();

			if ( this.in_chamber is Obj_Item_Projectile_Energy_Floramut ) {
				P = this.in_chamber;
				P.mutstrength = this.mutstrength;
			}
			return _default;
		}

		// Function from file: special.dm
		public override dynamic process(  ) {
			this.charge_tick++;

			if ( this.charge_tick < 4 ) {
				return 0;
			}
			this.charge_tick = 0;

			if ( !Lang13.Bool( this.power_supply ) ) {
				return 0;
			}
			((Obj_Item_Weapon_Cell)this.power_supply).give( 100 );
			this.update_icon();
			return 1;
		}

		// Function from file: special.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.processing_objects.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: special.dm
		[Verb]
		[VerbInfo( name: "Set mutation strength", group: "Object" )]
		public void SetMutationStrength(  ) {
			
			if ( this.mode == 2 ) {
				this.mutstrength = Interface13.Input( Task13.User, "Enter new mutation strength level (15-25):", "Somatoray Gamma Ray Threshold", this.mutstrength, null, InputType.Num );
				this.mutstrength = ( Num13.Floor( Convert.ToDouble( this.mutstrength ) ) <= 15 ? 15 : ( Num13.Floor( Convert.ToDouble( this.mutstrength ) ) >= 25 ? 25 : Num13.Floor( Convert.ToDouble( this.mutstrength ) ) ) );
			} else {
				this.mutstrength = Interface13.Input( Task13.User, "Enter new mutation strength level (1-15):", "Somatoray Alpha Ray Threshold", this.mutstrength, null, InputType.Num );
				this.mutstrength = ( Num13.Floor( Convert.ToDouble( this.mutstrength ) ) <= 1 ? 1 : ( Num13.Floor( Convert.ToDouble( this.mutstrength ) ) >= 15 ? 15 : Num13.Floor( Convert.ToDouble( this.mutstrength ) ) ) );
			}
			return;
		}

	}

}
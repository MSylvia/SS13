// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_RustCore : Obj_Machinery_Power {

		public Obj_Effect_RustEmField owned_field = null;
		public int field_strength = 1;
		public int field_frequency = 1;
		public double id_tag = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.light_power_on = 2;
			this.light_range_on = 3;
			this.light_color = "#6496FA";
			this.idle_power_usage = 50;
			this.active_power_usage = 500;
			this.machine_flags = 217;
			this.icon = "code/WorkInProgress/Cael_Aislinn/Rust/rust.dmi";
			this.icon_state = "core0";
		}

		// Function from file: core_gen.dm
		public Obj_Machinery_Power_RustCore ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( GlobalVars.ticker != null ) {
				this.initialize();
			}
			return;
		}

		// Function from file: core_gen.dm
		public override string multitool_menu( dynamic user = null, dynamic P = null ) {
			return "\n		<ul>\n			<li>" + this.format_tag( "ID Tag", "id_tag" ) + "</li>\n		</ul>\n	";
		}

		// Function from file: core_gen.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			int? _default = null;

			
			if ( this.owned_field != null ) {
				_default = this.owned_field.bullet_act( Proj );
			}
			return _default;
		}

		// Function from file: core_gen.dm
		public void set_frequency( int value = 0 ) {
			value = ( value <= 1 ? 1 : ( value >= 1000 ? 1000 : value ) );
			this.field_frequency = value;

			if ( this.owned_field != null ) {
				this.owned_field.ChangeFieldFrequency( value );
			}
			return;
		}

		// Function from file: core_gen.dm
		public void set_strength( int value = 0 ) {
			value = ( value <= 1 ? 1 : ( value >= 1000 ? 1000 : value ) );
			this.field_strength = value;
			this.active_power_usage = value * 5;

			if ( this.owned_field != null ) {
				this.owned_field.ChangeFieldStrength( value );
			}
			return;
		}

		// Function from file: core_gen.dm
		public bool AddParticles( dynamic name = null, bool? quantity = null ) {
			quantity = quantity ?? true;

			bool _default = false;

			
			if ( this.owned_field != null ) {
				this.owned_field.AddParticles( name, quantity );
				_default = true;
			}
			return _default;
		}

		// Function from file: core_gen.dm
		public void Shutdown(  ) {
			
			if ( this.owned_field != null ) {
				this.icon_state = "core0";
				GlobalFuncs.qdel( this.owned_field );
				this.use_power = 1;
				this.set_light( 0 );
			}
			return;
		}

		// Function from file: core_gen.dm
		public bool Startup(  ) {
			bool _default = false;

			
			if ( this.owned_field != null ) {
				return _default;
			}
			this.owned_field = new Obj_Effect_RustEmField( this.loc, this );
			this.owned_field.ChangeFieldStrength( this.field_strength );
			this.owned_field.ChangeFieldFrequency( this.field_frequency );
			this.set_light( this.light_range_on, this.light_power_on );
			this.icon_state = "core1";
			this.use_power = 2;
			_default = true;
			return _default;
		}

		// Function from file: core_gen.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			double? dif = null;
			double? dif2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			}

			if ( Lang13.Bool( href_list["str"] ) ) {
				dif = String13.ParseNumber( href_list["str"] );
				this.field_strength = Num13.MinInt( Num13.MaxInt( ((int)( this.field_strength + ( dif ??0) )), 1 ), 1000 );
				this.active_power_usage = this.field_strength * 5;

				if ( this.owned_field != null ) {
					this.owned_field.ChangeFieldStrength( this.field_strength );
				}
			}

			if ( Lang13.Bool( href_list["freq"] ) ) {
				dif2 = String13.ParseNumber( href_list["freq"] );
				this.field_frequency = Num13.MinInt( Num13.MaxInt( ((int)( this.field_frequency + ( dif2 ??0) )), 1 ), 1000 );

				if ( this.owned_field != null ) {
					this.owned_field.ChangeFieldFrequency( this.field_frequency );
				}
			}
			return null;
		}

		// Function from file: core_gen.dm
		public override int weldToFloor( dynamic WT = null, dynamic user = null ) {
			
			if ( this.owned_field != null ) {
				GlobalFuncs.to_chat( user, user << new Txt( "<span class='warning'>Turn " ).the( this ).item().str( " off first!</span>" ).ToString() );
				return -1;
			}

			if ( base.weldToFloor( (object)(WT), (object)(user) ) == 1 ) {
				
				dynamic _a = this.state; // Was a switch-case, sorry for the mess.
				if ( _a==1 ) {
					this.disconnect_from_network();
				} else if ( _a==2 ) {
					this.connect_to_network();
				}
				return 1;
			}
			return -1;
		}

		// Function from file: core_gen.dm
		public override dynamic process(  ) {
			
			if ( ( this.stat & 1 ) != 0 || !Lang13.Bool( this.powernet ) ) {
				this.Shutdown();
			}
			return null;
		}

		// Function from file: core_gen.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			
			if ( !( this.id_tag != 0 ) ) {
				this.assign_uid();
				this.id_tag = this.uid;
			}
			return false;
		}

	}

}
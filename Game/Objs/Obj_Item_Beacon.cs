// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Beacon : Obj_Item {

		public string code = "electronic";
		public dynamic frequency = 1459;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "signaler";
			this.origin_tech = "bluespace=1";
			this.icon = "icons/obj/radio.dmi";
			this.icon_state = "beacon";
		}

		// Function from file: beacon.dm
		public Obj_Item_Beacon ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.beacons.Add( this );
			return;
		}

		// Function from file: beacon.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic newfreq = null;

			base.attack_self( (object)(user), (object)(flag), emp );
			newfreq = Interface13.Input( user, "Input a new frequency for the beacon", "Frequency", null, null, InputType.Num );

			if ( !Lang13.Bool( newfreq ) ) {
				return null;
			}
			this.frequency = GlobalFuncs.sanitize_frequency( GlobalFuncs.format_frequency( newfreq ) );
			return null;
		}

		// Function from file: beacon.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			base.Destroy( (object)(brokenup) );
			GlobalVars.beacons.Remove( this );
			return null;
		}

		// Function from file: beacon.dm
		[Verb]
		[VerbInfo( name: "Alter Beacon's Signal", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		[VerbArg( 1, InputType.Str )]
		public void alter_signal( dynamic t = null ) {
			
			if ( Task13.User.canmove && !Task13.User.restrained() ) {
				this.code = t;
			}

			if ( !Lang13.Bool( this.code ) ) {
				this.code = "beacon";
			}
			this.add_fingerprint( Task13.User );
			return;
		}

	}

}
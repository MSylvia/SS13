// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Chempack : Obj_Item_Weapon_ReagentContainers {

		public bool safety = false;
		public bool primed = false;
		public int stage = 0;
		public bool auxiliary = false;
		public dynamic beaker = null;
		public ByTable possible_fill_amounts = new ByTable(new object [] { 5, 10, 15, 25, 30, 50, 100, 200, 500, 1000 });
		public dynamic fill_amount = 10;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/chempack.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/chempack.dmi" );
			this.flags = 4352;
			this.slot_flags = 1024;
			this.throwforce = 3;
			this.w_class = 4;
			this.origin_tech = "bluespace=3;materials=3;engineering=5";
			this.volume = 1200;
			this.possible_transfer_amounts = null;
			this.icon_state = "chempack";
		}

		public Obj_Item_Weapon_ReagentContainers_Chempack ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: chempack.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			dynamic B = null;
			dynamic C2 = null;

			
			if ( a is Obj_Item_Weapon_ReagentContainers_Glass ) {
				
				if ( this.safety && this.auxiliary ) {
					
					if ( this.stage != 0 ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>You need to secure the maintenance panel before you can insert a beaker!</span>" );
						return null;
					}

					if ( b.type == typeof(Mob_Living_Silicon_Robot) ) {
						return null;
					}

					if ( Lang13.Bool( this.beaker ) ) {
						GlobalFuncs.to_chat( b, new Txt( "There is already a beaker loaded into " ).the( this ).item().str( "." ).ToString() );
						return null;
					} else if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						this.beaker = a;
						GlobalFuncs.to_chat( b, new Txt( "You add the beaker to " ).the( this ).item().str( "'s auxiliary chamber!" ).ToString() );

						if ( Lang13.Bool( b.wear_mask ) && b.wear_mask is Obj_Item_Clothing_Mask_Chemmask ) {
							C = b.wear_mask;
							C.update_verbs();
						}
						return 1;
					}
				} else {
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Wrench ) {
				
				if ( this.stage != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You need to secure the maintenance panel before you can access the auxiliary chamber bolts!</span>" );
					return null;
				}

				if ( !this.auxiliary && !Lang13.Bool( this.beaker ) ) {
					this.auxiliary = true;
					GlobalFuncs.to_chat( b, new Txt( "You loosen the bolts of " ).the( this ).item().str( "'s auxiliary chamber." ).ToString() );
					return null;
				} else if ( !this.auxiliary ) {
					this.auxiliary = true;
					GlobalFuncs.to_chat( b, new Txt( "You loosen the bolts of " ).the( this ).item().str( "'s auxiliary chamber. The beaker can now be removed." ).ToString() );
					return null;
				} else if ( this.auxiliary && Lang13.Bool( this.beaker ) ) {
					this.auxiliary = false;
					GlobalFuncs.to_chat( b, new Txt( "You tighten the bolts of " ).the( this ).item().str( "'s auxiliary chamber, securing the beaker in place." ).ToString() );
					return null;
				} else {
					this.auxiliary = false;
					GlobalFuncs.to_chat( b, new Txt( "You tighten the bolts of " ).the( this ).item().str( "'s auxiliary chamber." ).ToString() );
					return null;
				}
			}

			switch ((int)( this.stage )) {
				case 0:
					
					if ( a is Obj_Item_Weapon_Screwdriver && b.back == this ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You can't perform maintenance on " ).the( this ).item().str( " while you're wearing it!</span>" ).ToString() );
						return null;
					} else {
						
						if ( a is Obj_Item_Weapon_Crowbar && Lang13.Bool( this.beaker ) && this.auxiliary ) {
							B = this.beaker;

							if ( ((Mob)b).get_inactive_hand() == this || b.back == this ) {
								B.loc = b.loc;
							} else {
								B.loc = this.loc;
							}
							this.beaker = null;
							GlobalFuncs.to_chat( b, new Txt( "You pry the beaker out of " ).the( this ).item().str( "." ).ToString() );

							if ( Lang13.Bool( b.wear_mask ) && b.wear_mask is Obj_Item_Clothing_Mask_Chemmask ) {
								C2 = b.wear_mask;
								C2.update_verbs();
							}
							return null;
						} else if ( a is Obj_Item_Weapon_Crowbar && Lang13.Bool( this.beaker ) && !this.auxiliary ) {
							GlobalFuncs.to_chat( b, "<span class='warning'>The beaker is held tight by the bolts of the auxiliary chamber!</span>" );
							return null;
						}

						if ( a is Obj_Item_Weapon_Screwdriver && Lang13.Bool( this.beaker ) ) {
							GlobalFuncs.to_chat( b, "<span class='warning'>You can't reach the maintenance panel with the beaker in the way!</span>" );
							return null;
						} else if ( a is Obj_Item_Weapon_Screwdriver ) {
							this.stage = 1;
							this.slot_flags = null;
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You unscrew the maintenance panel of " ).the( this ).item().str( ".</span>" ).ToString() );
							this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "3";
							((Mob)b).update_inv_r_hand();
							((Mob)b).update_inv_l_hand();
							return null;
						}
					}
					break;
				case 1:
					
					if ( a is Obj_Item_Weapon_Crowbar ) {
						
						if ( !this.primed ) {
							this.stage = 2;
						} else {
							this.stage = 3;
						}
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You pry open the maintenance panel of " ).the( this ).item().str( ".</span>" ).ToString() );
						this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "2";
						((Mob)b).update_inv_r_hand();
						((Mob)b).update_inv_l_hand();
						return null;
					} else if ( a is Obj_Item_Weapon_Screwdriver ) {
						this.stage = 0;
						this.slot_flags = 1024;
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You secure the maintenance panel of " ).the( this ).item().str( ".</span>" ).ToString() );

						if ( !this.safety ) {
							this.icon_state = "" + Lang13.Initial( this, "icon_state" );
							((Mob)b).update_inv_r_hand();
							((Mob)b).update_inv_l_hand();
						} else {
							this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "1";
							((Mob)b).update_inv_r_hand();
							((Mob)b).update_inv_l_hand();
						}
						return null;
					}
					break;
				case 2:
					
					if ( a is Obj_Item_Weapon_Wirecutters ) {
						this.stage = 3;
						this.primed = true;
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You reroute the connections within " ).the( this ).item().str( ".</span>" ).ToString() );
						return null;
					} else if ( a is Obj_Item_Weapon_Crowbar ) {
						this.stage = 1;
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You close the maintenance panel of " ).the( this ).item().str( ".</span>" ).ToString() );
						this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "3";
						((Mob)b).update_inv_r_hand();
						((Mob)b).update_inv_l_hand();
						return null;
					}
					break;
				case 3:
					
					if ( a is Obj_Item_Device_Multitool ) {
						
						if ( !this.safety ) {
							GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You activate the manual safety override of " ).the( this ).item().str( "!</span>" ).ToString() );
							GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>The bolts for the auxiliary chamber of " ).the( this ).item().str( " have been exposed!</span>" ).ToString() );
							this.safety = true;
						} else if ( this.safety ) {
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You reactivate the safety restrictions of " ).the( this ).item().str( ".</span>" ).ToString() );
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>The bolts for the auxiliary chamber of " ).the( this ).item().str( " are now hidden.</span>" ).ToString() );
							this.safety = false;
						}
						return null;
					} else if ( a is Obj_Item_Weapon_Crowbar ) {
						this.stage = 1;
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You close the maintenance panel of " ).the( this ).item().str( ".</span>" ).ToString() );
						this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "3";
						((Mob)b).update_inv_r_hand();
						((Mob)b).update_inv_l_hand();
						return null;
					}
					break;
			}
			return null;
		}

		// Function from file: chempack.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic tx_amount = null;

			
			if ( A is Obj_Structure_ReagentDispensers && flag == true ) {
				tx_amount = GlobalFuncs.transfer_sub( A, this, this.fill_amount, user );

				if ( Convert.ToDouble( tx_amount ) > 0 ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You fill " ).the( this ).item().item( ( this.is_full() ? " to the brim" : "" ) ).str( " with " ).item( tx_amount ).str( " units of the contents of " ).the( A ).item().str( ".</span>" ).ToString() );
					return false;
				}
			}
			return false;
		}

		// Function from file: chempack.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			Ent_Static H = null;
			Image filling = null;
			Image fillingback = null;
			Image fillinghandr = null;
			Image fillinghandl = null;
			int percent = 0;

			H = this.loc;
			this.overlays.len = 0;

			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				filling = new Image( "icons/obj/chempackfillings.dmi", this, "" + Lang13.Initial( this, "icon_state" ) + "10" );
				fillingback = new Image( "icons/obj/chempackfillings.dmi", this, "" + Lang13.Initial( this, "icon_state" ) + "10b" );
				fillinghandr = new Image( "icons/obj/chempackfillings.dmi", this, "" + Lang13.Initial( this, "icon_state" ) + "10rh" );
				fillinghandl = new Image( "icons/obj/chempackfillings.dmi", this, "" + Lang13.Initial( this, "icon_state" ) + "10lh" );
				percent = Num13.Floor( ( this.reagents.total_volume ??0) / Convert.ToDouble( this.volume ) * 100 );

				dynamic _a = percent; // Was a switch-case, sorry for the mess.
				if ( 0<=_a&&_a<=9 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-10";
				} else if ( 10<=_a&&_a<=24 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "10";
				} else if ( 25<=_a&&_a<=49 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "25";
				} else if ( 50<=_a&&_a<=74 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "50";
				} else if ( 75<=_a&&_a<=79 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "75";
				} else if ( 80<=_a&&_a<=90 ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "80";
				} else if ( 91<=_a&&_a<=Double.PositiveInfinity ) {
					filling.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "100";
				}
				filling.icon += GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				filling.alpha = Convert.ToInt32( GlobalFuncs.mix_alpha_from_reagents( this.reagents.reagent_list ) );
				fillingback.icon_state = "" + filling.icon_state + "b";
				fillinghandr.icon_state = "" + filling.icon_state + "rh";
				fillinghandl.icon_state = "" + filling.icon_state + "lh";
				fillingback.icon += GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				fillingback.alpha = Convert.ToInt32( GlobalFuncs.mix_alpha_from_reagents( this.reagents.reagent_list ) );
				fillinghandr.icon += GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				fillinghandr.alpha = Convert.ToInt32( GlobalFuncs.mix_alpha_from_reagents( this.reagents.reagent_list ) );
				fillinghandl.icon += GlobalFuncs.mix_color_from_reagents( this.reagents.reagent_list );
				fillinghandl.alpha = Convert.ToInt32( GlobalFuncs.mix_alpha_from_reagents( this.reagents.reagent_list ) );
				this.dynamic_overlay["" + 13] = fillingback;
				this.dynamic_overlay["" + 21] = fillinghandl;
				this.dynamic_overlay["" + 22] = fillinghandr;
				this.overlays.Add( filling );

				if ( this.loc is Mob_Living_Carbon_Human ) {
					((dynamic)H).update_inv_back();
					((dynamic)H).update_inv_r_hand();
					((dynamic)H).update_inv_l_hand();
				}
			} else {
				this.dynamic_overlay = null;

				if ( this.loc is Mob_Living_Carbon_Human ) {
					((dynamic)H).update_inv_back();
					((dynamic)H).update_inv_r_hand();
					((dynamic)H).update_inv_l_hand();
				}
			}
			return null;
		}

		// Function from file: chempack.dm
		public override void on_reagent_change(  ) {
			this.update_icon();
			return;
		}

		// Function from file: chempack.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic B = null;
			Reagent R = null;

			base.examine( (object)(user), size );

			if ( Lang13.Bool( this.beaker ) ) {
				GlobalFuncs.to_chat( user, new Txt().icon( this.beaker ).str( " There is " ).a( this.beaker ).item().str( " in " ).the( this ).item().str( "'s auxiliary chamber." ).ToString() );
				GlobalFuncs.to_chat( user, "It contains:" );
				B = this.beaker;

				if ( B.reagents.reagent_list.len != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( B.reagents.reagent_list, typeof(Reagent) )) {
						R = _a;
						
						GlobalFuncs.to_chat( user, "<span class='info'>" + R.volume + " units of " + R.name + "</span>" );
					}
				} else {
					GlobalFuncs.to_chat( user, "<span class='info'>Nothing.</span>" );
				}
			}
			return null;
		}

		// Function from file: chempack.dm
		public bool can_use_verbs( Mob user = null ) {
			Mob M = null;

			M = user;

			if ( M.stat == 2 ) {
				GlobalFuncs.to_chat( user, "You can't do that while you're dead!" );
				return false;
			} else if ( M.stat == 1 ) {
				GlobalFuncs.to_chat( user, "You must be conscious to do this!" );
				return false;
			} else if ( Lang13.Bool( ((dynamic)M).handcuffed ) ) {
				GlobalFuncs.to_chat( user, "You can't reach the controls while you're restrained!" );
				return false;
			} else {
				return true;
			}
			return false;
		}

		// Function from file: chempack.dm
		public override dynamic equipped( dynamic user = null, dynamic slot = null ) {
			dynamic H = null;
			dynamic C = null;

			H = user;

			if ( H.back == this ) {
				
				if ( Lang13.Bool( H.wear_mask ) && H.wear_mask is Obj_Item_Clothing_Mask_Chemmask ) {
					C = H.wear_mask;
					C.update_verbs();
				}
			}
			return null;
		}

		// Function from file: chempack.dm
		[Verb]
		[VerbInfo( name: "Set fill amount", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void set_fill(  ) {
			dynamic N = null;

			
			if ( !this.can_use_verbs( Task13.User ) ) {
				return;
			}
			N = Interface13.Input( "Fill amount for this:", "" + this, null, null, this.possible_fill_amounts, InputType.Null | InputType.Any );

			if ( Lang13.Bool( N ) ) {
				this.fill_amount = N;
			}
			return;
		}

		// Function from file: chempack.dm
		[Verb]
		[VerbInfo( name: "Flush chemical tanks", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void flush_tanks(  ) {
			
			if ( !this.can_use_verbs( Task13.User ) ) {
				return;
			}
			((Reagents)this.reagents).clear_reagents();
			GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>You flush the contents of " ).the( this ).item().str( ".</span>" ).ToString() );
			this.update_icon();
			return;
		}

	}

}
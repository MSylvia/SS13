// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Gravitywell : Obj_Item_Weapon_Gun {

		public int charge = 100;
		public int maxcharge = 100;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "gravitywell";
			this.origin_tech = "materials=7;bluespace=5;magnets=5";
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns_experimental.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns_experimental.dmi" );
			this.fire_delay = 0;
			this.fire_sound = "sound/weapons/wave.ogg";
			this.icon = "icons/obj/gun_experimental.dmi";
			this.icon_state = "gravitywell";
		}

		public Obj_Item_Weapon_Gun_Gravitywell ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: gravitywell.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.charge == this.maxcharge ) {
				this.icon_state = "gravitywell";
				this.item_state = "gravitywell";
			} else {
				this.icon_state = "gravitywell0";
				this.item_state = "gravitywell0";
			}
			return null;
		}

		// Function from file: gravitywell.dm
		public override dynamic process(  ) {
			Ent_Static M = null;

			this.charge = Num13.MinInt( this.maxcharge, this.charge + 1 );

			if ( this.charge >= this.maxcharge ) {
				this.update_icon();

				if ( this.loc is Mob ) {
					M = this.loc;
					((dynamic)M).regenerate_icons();
				}
				GlobalVars.processing_objects.Remove( this );
			}
			return 1;
		}

		// Function from file: gravitywell.dm
		public override bool process_chambered(  ) {
			
			if ( Lang13.Bool( this.in_chamber ) ) {
				return true;
			}

			if ( this.charge >= this.maxcharge ) {
				this.charge = 0;
				this.update_icon();
				this.in_chamber = new Obj_Item_Projectile_Gravitywell();
				GlobalVars.processing_objects.Add( this );
				return true;
			}
			return false;
		}

		// Function from file: gravitywell.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.charge < this.maxcharge ) {
				GlobalVars.processing_objects.Remove( this );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: gravitywell.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>Charge = " + this.charge + "%</span>" );
			return null;
		}

	}

}
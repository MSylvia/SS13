// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_ToyXeno : Obj_Item_Toy {

		public int cooldown = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "toy_xeno";
		}

		public Obj_Item_Toy_ToyXeno ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: toys.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			ByTable possible_sounds = null;
			dynamic chosen_sound = null;

			
			if ( this.cooldown <= Game13.time ) {
				this.cooldown = Game13.time + 50;
				((Ent_Static)user).visible_message( "<span class='notice'>" + user + " pulls back the string on " + this + ".</span>" );
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "_used";
				Task13.Sleep( 5 );
				this.audible_message( new Txt( "<span class='danger'>" ).icon( this ).str( " Hiss!</span>" ).ToString() );
				possible_sounds = new ByTable(new object [] { "sound/voice/hiss1.ogg", "sound/voice/hiss2.ogg", "sound/voice/hiss3.ogg", "sound/voice/hiss4.ogg" });
				chosen_sound = Rand13.PickFromTable( possible_sounds );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), chosen_sound, 50, 1 );
				Task13.Schedule( 45, (Task13.Closure)(() => {
					
					if ( this != null ) {
						this.icon_state = "" + Lang13.Initial( this, "icon_state" );
					}
					return;
				}));
			} else {
				user.WriteMsg( "<span class='warning'>The string on " + this + " hasn't rewound all the way!</span>" );
				return null;
			}
			return null;
		}

	}

}
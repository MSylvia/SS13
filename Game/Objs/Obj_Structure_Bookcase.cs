// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bookcase : Obj_Structure {

		public int state = 0;
		public ByTable allowed_books = new ByTable(new object [] { typeof(Obj_Item_Weapon_Book), typeof(Obj_Item_Weapon_Spellbook), typeof(Obj_Item_Weapon_Storage_Book) });

		protected override void __FieldInit() {
			base.__FieldInit();

			this.burn_state = 0;
			this.burntime = 30;
			this.icon = "icons/obj/library.dmi";
			this.icon_state = "bookempty";
		}

		public Obj_Structure_Bookcase ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: lib_items.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.contents.len < 5 ) {
				this.icon_state = "book-" + this.contents.len;
			} else {
				this.icon_state = "book-5";
			}
			return false;
		}

		// Function from file: lib_items.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			Obj_Item_Weapon_Book b = null;

			base.ex_act( severity, (object)(target) );

			if ( !Lang13.Bool( this.gc_destroyed ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_Book) )) {
					b = _a;
					
					b.loc = GlobalFuncs.get_turf( this );
				}

				if ( Rand13.PercentChance( 50 ) ) {
					GlobalFuncs.qdel( this );
				}
			}
			return false;
		}

		// Function from file: lib_items.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			dynamic choice = null;

			
			if ( this.contents.len != 0 ) {
				choice = Interface13.Input( "Which book would you like to remove from the shelf?", null, null, null, this.contents, InputType.Obj | InputType.Null );

				if ( Lang13.Bool( choice ) ) {
					
					if ( !Task13.User.canmove || Task13.User.stat != 0 || Task13.User.restrained() || !( Map13.GetDistance( this.loc, Task13.User ) <= 1 ) ) {
						return null;
					}

					if ( a is Mob_Living_Carbon_Human ) {
						
						if ( !Lang13.Bool( ((Mob)a).get_active_hand() ) ) {
							((Mob)a).put_in_hands( choice );
						}
					} else {
						choice.loc = GlobalFuncs.get_turf( this );
					}
					this.update_icon();
				}
			}
			return null;
		}

		// Function from file: lib_items.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic W = null;
			dynamic B = null;
			Obj_Item T = null;
			string newname = null;

			
			switch ((int)( this.state )) {
				case 0:
					
					if ( A is Obj_Item_Weapon_Wrench ) {
						GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 100, 1 );

						if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
							user.WriteMsg( "<span class='notice'>You wrench the frame into place.</span>" );
							this.anchored = 1;
							this.state = 1;
						}
					}

					if ( A is Obj_Item_Weapon_Crowbar ) {
						GlobalFuncs.playsound( this.loc, "sound/items/Crowbar.ogg", 100, 1 );

						if ( GlobalFuncs.do_after( user, 20 / A.toolspeed, null, this ) ) {
							user.WriteMsg( "<span class='notice'>You pry the frame apart.</span>" );
							new Obj_Item_Stack_Sheet_Mineral_Wood( this.loc, 4 );
							GlobalFuncs.qdel( this );
						}
					}
					break;
				case 1:
					
					if ( A is Obj_Item_Stack_Sheet_Mineral_Wood ) {
						W = A;

						if ( ( ((Obj_Item_Stack)W).get_amount() ??0) >= 2 ) {
							W.use( 2 );
							user.WriteMsg( "<span class='notice'>You add a shelf.</span>" );
							this.state = 2;
							this.icon_state = "book-0";
						}
					}

					if ( A is Obj_Item_Weapon_Wrench ) {
						GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 100, 1 );
						user.WriteMsg( "<span class='notice'>You unwrench the frame.</span>" );
						this.anchored = 0;
						this.state = 0;
					}
					break;
				case 2:
					
					if ( GlobalFuncs.is_type_in_list( A, this.allowed_books ) ) {
						
						if ( !Lang13.Bool( user.drop_item() ) ) {
							return null;
						}
						A.loc = this;
						this.update_icon();
					} else if ( A is Obj_Item_Weapon_Storage_Bag_Books ) {
						B = A;

						foreach (dynamic _a in Lang13.Enumerate( B.contents, typeof(Obj_Item) )) {
							T = _a;
							

							if ( T is Obj_Item_Weapon_Book || T is Obj_Item_Weapon_Spellbook ) {
								((Obj_Item_Weapon_Storage)B).remove_from_storage( T, this );
							}
						}
						user.WriteMsg( new Txt( "<span class='notice'>You empty " ).the( A ).item().str( " into " ).the( this ).item().str( ".</span>" ).ToString() );
						this.update_icon();
					} else if ( A is Obj_Item_Weapon_Pen ) {
						newname = GlobalFuncs.stripped_input( Task13.User, "What would you like to title this bookshelf?" );

						if ( !Lang13.Bool( newname ) ) {
							return null;
						} else {
							this.name = "bookcase (" + GlobalFuncs.sanitize( newname ) + ")";
						}
					} else if ( A is Obj_Item_Weapon_Crowbar ) {
						
						if ( this.contents.len != 0 ) {
							user.WriteMsg( "<span class='warning'>You need to remove the books first!</span>" );
						} else {
							GlobalFuncs.playsound( this.loc, "sound/items/Crowbar.ogg", 100, 1 );
							user.WriteMsg( "<span class='notice'>You pry the shelf out.</span>" );
							new Obj_Item_Stack_Sheet_Mineral_Wood( this.loc, 2 );
							this.state = 1;
							this.icon_state = "bookempty";
						}
					} else {
						base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
					}
					break;
			}
			return null;
		}

		// Function from file: lib_items.dm
		public override void initialize(  ) {
			Obj_Item I = null;

			this.state = 2;
			this.icon_state = "book-0";
			this.anchored = 1;

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Item) )) {
				I = _a;
				

				if ( I is Obj_Item_Weapon_Book ) {
					I.loc = this;
				}
			}
			this.update_icon();
			return;
		}

	}

}
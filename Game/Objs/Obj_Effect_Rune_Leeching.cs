// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune_Leeching : Obj_Effect_Rune {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.cultist_name = "Drain Life";
			this.cultist_desc = "Drains the life of the target on the rune, restoring it to the user.";
			this.invocation = null;
			this.icon_state = "2";
		}

		public Obj_Effect_Rune_Leeching ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: runes.dm
		public override void invoke( dynamic user = null ) {
			dynamic T = null;
			ByTable potential_targets = null;
			Mob_Living_Carbon M = null;
			dynamic target = null;
			int drained_amount = 0;

			T = GlobalFuncs.get_turf( this );
			potential_targets = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Mob_Living_Carbon) )) {
				M = _a;
				

				if ( M.stat != 2 && M != user ) {
					potential_targets.Add( M );
				}
			}

			if ( !( potential_targets.len != 0 ) ) {
				user.WriteMsg( "<span class='cultitalic'>There must be a valid target on the rune!</span>" );
				this.fail_invoke();
				GlobalFuncs.log_game( "Leeching rune failed - no valid targets" );
				return;
			}
			target = Rand13.PickFromTable( potential_targets );
			drained_amount = Rand13.Int( 5, 25 );
			((Ent_Dynamic)user).say( "Yu'gular faras desdae. Umathar uf'kal thenar!" );
			target.apply_damage( drained_amount, "brute", "chest" );
			((Mob_Living)user).adjustBruteLoss( -drained_amount );
			((Ent_Static)user).Beam( target, "drainbeam", "icons/effects/effects.dmi", 3 );
			target.WriteMsg( "<span class='cultitalic'>You feel extremely weak.</span>" );
			((Ent_Static)user).visible_message( "<span class='warning'>Blood flows from the rune into " + user + "!</span>", "<span class='cult'>" + target + "'s blood flows into you, healing your wounds and revitalizing your spirit.</span>" );
			return;
		}

	}

}
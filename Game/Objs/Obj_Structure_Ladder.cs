// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Ladder : Obj_Structure {

		public dynamic id = null;
		public int height = 0;
		public Obj_Structure_Ladder down = null;
		public Obj_Structure_Ladder up = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "ladder11";
		}

		// Function from file: ladders.dm
		public Obj_Structure_Ladder ( dynamic loc = null ) : base( (object)(loc) ) {
			Obj_Structure_Ladder L = null;

			Task13.Schedule( 8, (Task13.Closure)(() => {
				
				foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Obj_Structure_Ladder) )) {
					L = _a;
					

					if ( L.id == this.id ) {
						
						if ( L.height == this.height - 1 ) {
							this.down = L;
							continue;
						}

						if ( L.height == this.height + 1 ) {
							this.up = L;
							continue;
						}
					}

					if ( this.up != null && this.down != null ) {
						break;
					}
				}
				this.update_icon();
				return;
			}));
			return;
		}

		// Function from file: ladders.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( b );
		}

		// Function from file: ladders.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: ladders.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.up != null && this.down != null ) {
				
				switch ((string)( Interface13.Alert( "Go up or down the ladder?", "Ladder", "Up", "Down", "Cancel" ) )) {
					case "Up":
						((Ent_Static)a).visible_message( new Txt( "<span class='notice'>" ).item( a ).str( " climbs up " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You climb up " ).the( this ).item().str( "!</span>" ).ToString() );
						a.loc = GlobalFuncs.get_turf( this.up );
						this.up.add_fingerprint( a );
						break;
					case "Down":
						((Ent_Static)a).visible_message( new Txt( "<span class='notice'>" ).item( a ).str( " climbs down " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You climb down " ).the( this ).item().str( "!</span>" ).ToString() );
						a.loc = GlobalFuncs.get_turf( this.down );
						this.down.add_fingerprint( a );
						break;
					case "Cancel":
						return null;
						break;
				}
			} else if ( this.up != null ) {
				((Ent_Static)a).visible_message( new Txt( "<span class='notice'>" ).item( a ).str( " climbs up " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You climb up " ).the( this ).item().str( "!</span>" ).ToString() );
				a.loc = GlobalFuncs.get_turf( this.up );
				this.up.add_fingerprint( a );
			} else if ( this.down != null ) {
				((Ent_Static)a).visible_message( new Txt( "<span class='notice'>" ).item( a ).str( " climbs down " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>You climb down " ).the( this ).item().str( "!</span>" ).ToString() );
				a.loc = GlobalFuncs.get_turf( this.down );
				this.down.add_fingerprint( a );
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: ladders.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.up != null && this.down != null ) {
				this.icon_state = "ladder11";
			} else if ( this.up != null ) {
				this.icon_state = "ladder10";
			} else if ( this.down != null ) {
				this.icon_state = "ladder01";
			} else {
				this.icon_state = "ladder00";
			}
			return null;
		}

	}

}
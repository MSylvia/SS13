// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_RND : Obj_Machinery {

		public bool busy = false;
		public bool hacked = false;
		public bool disabled = false;
		public bool shocked = false;
		public dynamic linked_console = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/machines/research.dmi";
		}

		// Function from file: rdmachines.dm
		public Obj_Machinery_RND ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.wires = new Wires_RND( this );
			return;
		}

		// Function from file: rdmachines.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( this.shocked ) {
				this.shock( a, 50 );
			}

			if ( Lang13.Bool( this.panel_open ) ) {
				((Wires)this.wires).interact( a );
			}
			return null;
		}

		// Function from file: rdmachines.dm
		public bool shock( dynamic user = null, int prb = 0 ) {
			EffectSystem_SparkSpread s = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return false;
			}

			if ( !Rand13.PercentChance( prb ) ) {
				return false;
			}
			s = new EffectSystem_SparkSpread();
			s.set_up( 5, 1, this );
			s.start();

			if ( Lang13.Bool( GlobalFuncs.electrocute_mob( user, GlobalFuncs.get_area( this ), this, 061 ) ) ) {
				return true;
			} else {
				return false;
			}
		}

		// Function from file: rdmachines.dm
		public override dynamic Destroy(  ) {
			GlobalFuncs.qdel( this.wires );
			this.wires = null;
			return base.Destroy();
		}

	}

}
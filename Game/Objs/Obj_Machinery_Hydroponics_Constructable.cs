// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Hydroponics_Constructable : Obj_Machinery_Hydroponics {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "hydrotray3";
		}

		// Function from file: hydroponics.dm
		public Obj_Machinery_Hydroponics_Constructable ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_Hydroponics( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MatterBin( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_MatterBin( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_ConsoleScreen( null ) );
			this.RefreshParts();
			return;
		}

		// Function from file: hydroponics.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( this.default_deconstruction_screwdriver( user, "hydrotray3", "hydrotray3", A ) ) {
				return null;
			}

			if ( this.exchange_parts( user, A ) ) {
				return null;
			}

			if ( this.default_pry_open( A ) ) {
				return null;
			}

			if ( this.default_unfasten_wrench( user, A ) ) {
				return null;
			}

			if ( A is Obj_Item_Weapon_Crowbar ) {
				
				if ( this.anchored == 2 ) {
					user.WriteMsg( "Unscrew the hoses first!" );
					return null;
				}
				this.default_deconstruction_crowbar( A, true );
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: hydroponics.dm
		public override void RefreshParts(  ) {
			double tmp_capacity = 0;
			Obj_Item_Weapon_StockParts_MatterBin M = null;
			Obj_Item_Weapon_StockParts_Manipulator M2 = null;

			tmp_capacity = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_MatterBin) )) {
				M = _a;
				
				tmp_capacity += Convert.ToDouble( M.rating );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts_Manipulator) )) {
				M2 = _b;
				
				this.rating = M2.rating;
			}
			this.maxwater = tmp_capacity * 50;
			this.maxnutri = tmp_capacity * 5;
			this.waterlevel = this.maxwater;
			this.nutrilevel = 3;
			return;
		}

	}

}
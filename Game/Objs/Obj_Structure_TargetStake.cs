// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_TargetStake : Obj_Structure {

		public dynamic pinned_target = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 0;
			this.siemens_coefficient = 1;
			this.icon = "icons/obj/objects.dmi";
			this.icon_state = "target_stake";
		}

		public Obj_Structure_TargetStake ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: target_stake.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.pinned_target ) ) {
				this.density = true;
				this.pinned_target.density = false;
				this.pinned_target.layer = GlobalVars.OBJ_LAYER;
				this.pinned_target.loc = a.loc;

				if ( a is Mob_Living_Carbon_Human ) {
					
					if ( !Lang13.Bool( ((Mob)a).get_active_hand() ) ) {
						((Mob)a).put_in_hands( this.pinned_target );
						GlobalFuncs.to_chat( a, "You take the target out of the stake." );
					}
				} else {
					this.pinned_target.loc = GlobalFuncs.get_turf( a );
					GlobalFuncs.to_chat( a, "You take the target out of the stake." );
				}
				this.pinned_target = null;
			}
			return null;
		}

		// Function from file: target_stake.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.pinned_target ) ) {
				return null;
			}

			if ( a is Obj_Item_Target ) {
				
				if ( Lang13.Bool( b.drop_item( a, this.loc ) ) ) {
					this.density = false;
					a.density = true;
					a.layer = 301;
					this.pinned_target = a;
					GlobalFuncs.to_chat( b, "You slide the target into the stake." );
				}
			}
			return null;
		}

		// Function from file: target_stake.dm
		public override bool Move( dynamic NewLoc = null, int? Dir = null, int step_x = 0, int step_y = 0 ) {
			base.Move( (object)(NewLoc), Dir, step_x, step_y );
			Interface13.Stat( null, Map13.FetchInView( this, 3 ).Contains( this.pinned_target ) );

			if ( false ) {
				this.pinned_target.loc = this.loc;
			} else {
				this.pinned_target = null;
				this.density = true;
			}
			return false;
		}

	}

}
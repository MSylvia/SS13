// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Clipboard : Obj_Item_Weapon {

		public dynamic haspen = null;
		public dynamic toppaper = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "clipboard";
			this.throwforce = 0;
			this.w_class = 2;
			this.throw_speed = 3;
			this.throw_range = 10;
			this.slot_flags = 512;
			this.icon = "icons/obj/bureaucracy.dmi";
			this.icon_state = "clipboard";
		}

		// Function from file: clipboard.dm
		public Obj_Item_Weapon_Clipboard ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.update_icon();
			return;
		}

		// Function from file: clipboard.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic W = null;
			dynamic P = null;
			dynamic P2 = null;
			string message = null;
			dynamic newtop = null;
			dynamic P3 = null;
			dynamic P4 = null;
			dynamic P5 = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( Task13.User.stat ) || Task13.User.restrained() ) {
				return null;
			}

			if ( Task13.User.contents.Find( this ) != 0 ) {
				
				if ( Lang13.Bool( href_list["pen"] ) ) {
					
					if ( Lang13.Bool( this.haspen ) ) {
						this.haspen.loc = Task13.User.loc;
						Task13.User.put_in_hands( this.haspen );
						this.haspen = null;
					}
				}

				if ( Lang13.Bool( href_list["addpen"] ) ) {
					
					if ( !Lang13.Bool( this.haspen ) ) {
						
						if ( Task13.User.get_active_hand() is Obj_Item_Weapon_Pen ) {
							W = Task13.User.get_active_hand();

							if ( Task13.User.drop_item( W, this ) ) {
								this.haspen = W;
								GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>You slot the pen into " ).the( this ).item().str( ".</span>" ).ToString() );
							}
						}
					}
				}

				if ( Lang13.Bool( href_list["write"] ) ) {
					P = Lang13.FindObj( href_list["write"] );

					if ( Lang13.Bool( P ) && P.loc == this ) {
						
						if ( Lang13.Bool( Task13.User.get_active_hand() ) ) {
							((Ent_Static)P).attackby( Task13.User.get_active_hand(), Task13.User );
						}
					}
				}

				if ( Lang13.Bool( href_list["remove"] ) ) {
					P2 = Lang13.FindObj( href_list["remove"] );

					if ( !( P2.loc == this ) ) {
						message = "<span class='warning'>" + Task13.User + "(" + Task13.User.key + ") has tried to remove something it shouldn't from the clipboard<span>";
						GlobalFuncs.message_admins( message );
						message += "" + P2;
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + message ) );
						GlobalVars.admin_log.Add( message );
						return null;
					}

					if ( Lang13.Bool( P2 ) ) {
						P2.loc = Task13.User.loc;
						Task13.User.put_in_hands( P2 );

						if ( P2 == this.toppaper ) {
							this.toppaper = null;
							newtop = Lang13.FindIn( typeof(Obj_Item_Weapon_Paper), this );

							if ( Lang13.Bool( newtop ) && newtop != P2 ) {
								this.toppaper = newtop;
							} else {
								this.toppaper = null;
							}
						}
					}
				}

				if ( Lang13.Bool( href_list["read"] ) ) {
					P3 = Lang13.FindObj( href_list["read"] );

					if ( Lang13.Bool( P3 ) ) {
						
						if ( !( Task13.User is Mob_Living_Carbon_Human || Task13.User is Mob_Dead_Observer || Task13.User is Mob_Living_Silicon ) ) {
							Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P3.name + "</TITLE></HEAD><BODY" + ( Lang13.Bool( P3.color ) ? " bgcolor=" + P3.color : "" ) + ">" + GlobalFuncs.stars( P3.info ) + P3.stamps + "</BODY></HTML>", "window=" + P3.name );
							GlobalFuncs.onclose( Task13.User, "" + P3.name );
						} else {
							Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P3.name + "</TITLE></HEAD><BODY" + ( Lang13.Bool( P3.color ) ? " bgcolor=" + P3.color : "" ) + ">" + P3.info + P3.stamps + "</BODY></HTML>", "window=" + P3.name );
							GlobalFuncs.onclose( Task13.User, "" + P3.name );
						}
					}
				}

				if ( Lang13.Bool( href_list["look"] ) ) {
					P4 = Lang13.FindObj( href_list["look"] );

					if ( Lang13.Bool( P4 ) ) {
						((Obj_Item_Weapon_Photo)P4).show( Task13.User );
					}
				}

				if ( Lang13.Bool( href_list["top"] ) ) {
					P5 = Lang13.FindObj( href_list["top"] );

					if ( Lang13.Bool( P5 ) && P5.loc == this ) {
						this.toppaper = P5;
						GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You move " + P5.name + " to the top.</span>" );
					}
				}
				this.attack_self( Task13.User );
				this.update_icon();
			}
			return null;
		}

		// Function from file: clipboard.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;
			dynamic P = null;
			Obj_Item_Weapon_Paper P2 = null;
			Obj_Item_Weapon_Photo Ph = null;

			dat = "<title>Clipboard</title>";

			if ( Lang13.Bool( this.haspen ) ) {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";pen=1'>Remove Pen</A><BR><HR>" ).ToString();
			} else {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";addpen=1'>Add Pen</A><BR><HR>" ).ToString();
			}

			if ( Lang13.Bool( this.toppaper ) ) {
				P = this.toppaper;
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";write=" ).Ref( P ).str( "'>Write</A> <A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( P ).str( "'>Remove</A> - <A href='?src=" ).Ref( this ).str( ";read=" ).Ref( P ).str( "'>" ).item( P.name ).str( "</A><BR><HR>" ).ToString();
			}

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Paper) )) {
				P2 = _a;
				

				if ( P2 == this.toppaper ) {
					continue;
				}
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( P2 ).str( "'>Remove</A> - <A href='?src=" ).Ref( this ).str( ";read=" ).Ref( P2 ).str( "'>" ).item( P2.name ).str( "</A><BR>" ).ToString();
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Photo) )) {
				Ph = _b;
				
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( Ph ).str( "'>Remove</A> - <A href='?src=" ).Ref( this ).str( ";look=" ).Ref( Ph ).str( "'>" ).item( Ph.name ).str( "</A><BR>" ).ToString();
			}
			Interface13.Browse( user, dat, "window=clipboard" );
			GlobalFuncs.onclose( user, "clipboard" );
			this.add_fingerprint( Task13.User );
			return null;
		}

		// Function from file: clipboard.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Paper || a is Obj_Item_Weapon_Photo ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					
					if ( a is Obj_Item_Weapon_Paper ) {
						this.toppaper = a;
					}
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You clip the " ).item( a ).str( " onto " ).the( this ).item().str( ".</span>" ).ToString() );
					this.update_icon();
				}
			} else if ( Lang13.Bool( this.toppaper ) ) {
				((Ent_Static)this.toppaper).attackby( Task13.User.get_active_hand(), Task13.User );
				this.update_icon();
			}
			return null;
		}

		// Function from file: clipboard.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.overlays.len = 0;

			if ( Lang13.Bool( this.toppaper ) ) {
				this.overlays.Add( this.toppaper.icon_state );
				this.overlays.Add( this.toppaper.overlays );
			}

			if ( Lang13.Bool( this.haspen ) ) {
				this.overlays.Add( "clipboard_pen" );
			}
			this.overlays.Add( "clipboard_over" );
			return null;
		}

		// Function from file: clipboard.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			Mob M = null;

			
			if ( Task13.User is Mob_Living_Carbon_Human ) {
				M = Task13.User;

				if ( !( over_object is Obj_Screen ) ) {
					return base.MouseDrop( over_object, (object)(src_location), over_location, (object)(src_control), (object)(over_control), _params );
				}

				if ( !M.incapacitated() ) {
					
					switch ((string)( over_object.name )) {
						case "r_hand":
							M.u_equip( this, false );
							M.put_in_r_hand( this );
							break;
						case "l_hand":
							M.u_equip( this, false );
							M.put_in_l_hand( this );
							break;
					}
					this.add_fingerprint( Task13.User );
					return null;
				}
			}
			return null;
		}

	}

}
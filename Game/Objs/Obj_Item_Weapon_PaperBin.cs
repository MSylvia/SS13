// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_PaperBin : Obj_Item_Weapon {

		public int amount = 30;
		public dynamic papers = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "sheet-metal";
			this.throw_speed = 3;
			this.pressure_resistance = 10;
			this.autoignition_temperature = 519.1500244140625;
			this.icon = "icons/obj/bureaucracy.dmi";
			this.icon_state = "paper_bin1";
		}

		public Obj_Item_Weapon_PaperBin ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: paperbin.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			dynamic P = null;

			
			if ( this.amount > 0 ) {
				
				if ( this.papers.len > 0 ) {
					P = this.papers[this.papers.len];

					if ( P is Obj_Item_Weapon_Paper_Talisman ) {
						this.icon_state = "paper_bin3";
					} else if ( Lang13.Bool( P.info ) ) {
						this.icon_state = "paper_bin2";
					} else {
						this.icon_state = "paper_bin1";
					}
				} else {
					this.icon_state = "paper_bin1";
				}
			} else {
				this.icon_state = "paper_bin0";
			}
			return null;
		}

		// Function from file: paperbin.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic P = null;
			Obj_Item_Weapon_Paper_Talisman T = null;

			base.examine( (object)(user), size );

			if ( this.amount != 0 ) {
				GlobalFuncs.to_chat( user, "<span class='info'>There " + ( this.amount > 1 ? "are " + this.amount + " papers" : "is one paper" ) + " in the bin.</span>" );

				if ( this.papers.len > 0 ) {
					P = this.papers[this.papers.len];

					if ( P is Obj_Item_Weapon_Paper_Talisman ) {
						
						if ( GlobalFuncs.iscultist( user ) || user is Mob_Dead_Observer ) {
							T = P;

							dynamic _a = T.imbue; // Was a switch-case, sorry for the mess.
							if ( _a=="newtome" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Spawn Arcane Tome talisman on top.</span>" );
							} else if ( _a=="armor" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Cult Armor talisman on top.</span>" );
							} else if ( _a=="emp" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot an EMP talisman on top.</span>" );
							} else if ( _a=="conceal" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot an Hide Runes talisman on top.</span>" );
							} else if ( _a=="revealrunes" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Reveal Runes talisman on top.</span>" );
							} else if ( _a=="ire" || _a=="ego" || _a=="nahlizet" || _a=="certum" || _a=="veri" || _a=="jatkaa" || _a=="balaq" || _a=="mgar" || _a=="karazet" || _a=="geeri" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Teleport talisman on top, linked to <i>" + T.imbue + "</i></span>" );
							} else if ( _a=="communicate" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Communicate talisman on top.</span>" );
							} else if ( _a=="deafen" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Deafen talisman on top.</span>" );
							} else if ( _a=="blind" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Blind talisman on top.</span>" );
							} else if ( _a=="runestun" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Stun talisman on top.</span>" );
							} else if ( _a=="supply" ) {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a Supply talisman on top.</span>" );
							} else {
								GlobalFuncs.to_chat( user, "<span class='info'>You spot a weird talisman on top.</span>" );
							}
						} else {
							GlobalFuncs.to_chat( user, "<span class='info'>The paper on top has some bloody markings on it.</span>" );
						}
					} else if ( Lang13.Bool( P.info ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='info'>You notice some writings on the top paper. <a HREF='?src=" ).Ref( user ).str( ";lookitem=" ).Ref( P ).str( "'>Take a closer look.</a></span>" ).ToString() );
					}
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='info'>There are no papers in the bin.</span>" );
			}
			return null;
		}

		// Function from file: paperbin.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !( a is Obj_Item_Weapon_Paper ) ) {
				return null;
			}

			if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You put " + a + " in " + this + ".</span>" );
				this.papers.Add( a );
				this.amount++;
				this.update_icon();
			}
			return null;
		}

		// Function from file: paperbin.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Weapon_Paper P = null;

			
			if ( this.amount >= 1 ) {
				this.amount--;

				if ( this.papers.len > 0 ) {
					P = this.papers[this.papers.len];
					this.papers.Remove( P );
				} else {
					P = new Obj_Item_Weapon_Paper();

					if ( GlobalVars.Holiday == "April Fool's Day" ) {
						
						if ( Rand13.PercentChance( 30 ) ) {
							P.info = "<font face=\"MS Comic Sans\" color=\"red\"><b>HONK HONK HONK HONK HONK HONK HONK<br>HOOOOOOOOOOOOOOOOOOOOOONK<br>APRIL FOOLS</b></font>";
							P.rigged = true;
							P.updateinfolinks();
						}
					}
				}
				this.update_icon();
				P.loc = a.loc;
				((Mob)a).put_in_hands( P );
				GlobalFuncs.to_chat( a, "<span class='notice'>You take " + P + " out of the " + this + ".</span>" );
			} else {
				GlobalFuncs.to_chat( a, "<span class='notice'>" + this + " is empty!</span>" );
			}
			this.add_fingerprint( a );
			return null;
		}

		// Function from file: paperbin.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: paperbin.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			Mob O = null;

			
			if ( !Task13.User.incapacitated() && ( Task13.User.contents.Find( this ) != 0 || this.Adjacent( Task13.User ) ) ) {
				
				if ( !( Task13.User is Mob_Living_Carbon_Slime ) && !( Task13.User is Mob_Living_SimpleAnimal ) ) {
					
					if ( over_object is Obj_Screen ) {
						O = over_object;

						switch ((string)( O.name )) {
							case "r_hand":
								Task13.User.u_equip( this, false );
								Task13.User.put_in_r_hand( this );
								break;
							case "l_hand":
								Task13.User.u_equip( this, false );
								Task13.User.put_in_l_hand( this );
								break;
						}
					} else if ( over_object is Mob_Living ) {
						
						if ( Task13.User == over_object ) {
							
							if ( !Lang13.Bool( Task13.User.get_active_hand() ) ) {
								Task13.User.put_in_hands( this );
								Task13.User.visible_message( "<span class='notice'>" + Task13.User + " picks up the " + this + ".</span>", new Txt( "<span class='notice'>You pick up " ).the( this ).item().str( ".</span>" ).ToString() );
							}
						}
					}
				}
			}
			return null;
		}

		// Function from file: paperbin.dm
		public override double? getFireFuel(  ) {
			return this.amount;
		}

		// Function from file: paperbin.dm
		public override void ashify(  ) {
			Lang13.Call( this.ashtype, this.loc );
			this.papers = 0;
			this.amount = 0;
			this.update_icon();
			return;
		}

	}

}
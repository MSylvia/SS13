// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Electrolyzer : Obj_Item_Weapon {

		public ByTable beakers = new ByTable();
		public ByTable allowed_containers = new ByTable(new object [] { typeof(Obj_Item_Weapon_ReagentContainers_Glass), typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks_SodaCans) });
		public Effect_Effect_System_SparkSpread spark_system = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "chemg_wired";
			this.w_class = 2;
			this.force = 2;
			this.icon = "icons/obj/chemical.dmi";
			this.icon_state = "chemg_wired";
		}

		// Function from file: Chemistry-Machinery.dm
		public Obj_Item_Weapon_Electrolyzer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.spark_system = new Effect_Effect_System_SparkSpread();
			this.spark_system.set_up( 5, 0, this );
			this.spark_system.attach( this );
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public void insert_beaker( dynamic W = null, dynamic user = null ) {
			
			if ( Lang13.Bool( user.drop_item( W, this ) ) ) {
				W.loc = this;
				this.beakers.Add( W );
			} else {
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You can't let go of " ).the( W ).item().str( "!</span>" ).ToString() );
				return;
			}
			return;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic T = null;
			dynamic G = null;
			dynamic other = null;
			dynamic C = null;
			Obj_Item_Weapon_ReagentContainers active = null;
			Obj_Item_Weapon_ReagentContainers empty = null;
			dynamic unreaction = null;
			Obj_Item_Weapon_ReagentContainers B = null;
			dynamic target = null;
			dynamic R = null;
			dynamic check = null;
			int total_reactions = 0;
			bool primary = false;
			dynamic E = null;

			
			if ( a is Obj_Item_Weapon_Wirecutters ) {
				
				if ( this.beakers.len != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The electrolyzer contains beakers!</span>" );
					return null;
				} else {
					GlobalFuncs.to_chat( b, "<span class='notice'>You disassemble the electrolyzer.</span>" );
					T = GlobalFuncs.get_turf( this );
					new Obj_Item_Stack_CableCoil( T, 2 );
					new Obj_Item_Weapon_Grenade_ChemGrenade( T );
					GlobalFuncs.qdel( this );
					return null;
				}
			} else if ( GlobalFuncs.is_type_in_list( a, this.allowed_containers ) ) {
				G = a;

				if ( G.reagents.reagent_list.len > 1 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>That mixture is too complex!</span>" );
					return null;
				}

				if ( this.beakers.len == 2 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The grenade can not hold more containers.</span>" );
					return null;
				} else if ( this.beakers.len == 1 ) {
					other = this.beakers[1];

					if ( Lang13.Bool( other.reagents.total_volume ) && !Lang13.Bool( G.reagents.total_volume ) ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You add " ).the( G ).item().str( " to the electrolyzer as the empty container.</span>" ).ToString() );
						this.insert_beaker( G, b );
					} else if ( !Lang13.Bool( other.reagents.total_volume ) && Lang13.Bool( G.reagents.total_volume ) ) {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You add " ).the( G ).item().str( " to the electrolyzer as the active container.</span>" ).ToString() );
						this.insert_beaker( G, b );
					} else {
						GlobalFuncs.to_chat( b, "<span class='warning'>The electrolyzer requires one active beaker and one empty beaker!</span>" );
						return null;
					}
				} else {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You add " ).the( G ).item().str( " to the electrolyzer as the " ).item( ( Lang13.Bool( G.reagents.total_volume ) ? "active" : "empty" ) ).str( " container.</span>" ).ToString() );
					this.insert_beaker( G, b );
				}
			} else if ( a is Obj_Item_Weapon_Cell ) {
				
				if ( this.beakers.len < 2 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>The electrolyzer requires one active beaker and one empty beaker!</span>" );
					return null;
				}
				C = a;
				active = null;
				empty = null;
				unreaction = null;

				foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj_Item_Weapon_ReagentContainers) )) {
					B = _a;
					

					if ( B.reagents.reagent_list.len > 1 ) {
						GlobalFuncs.to_chat( b, "<span class='warning'>That mixture is too complex!</span>" );
						return null;
					} else if ( B.reagents.reagent_list.len == 1 ) {
						active = B;
					} else if ( !( B.reagents.reagent_list.len != 0 ) ) {
						empty = B;
					} else {
						GlobalFuncs.to_chat( b, "<span class='warning'>An error has occured. Your beaker had between 0 and 1 reagents. Please report this message.</span>" );
					}
				}

				if ( !( active != null ) || !( empty != null ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>There must be both an empty and active beaker.</span>" );
					return null;
				}
				target = active.reagents.reagent_list[1];

				foreach (dynamic _b in Lang13.Enumerate( Lang13.GetTypes( typeof(ChemicalReaction) ) )) {
					R = _b;
					
					check = Lang13.Call( R );

					if ( check.id == target.id ) {
						unreaction = check;
						break;
					}
				}

				if ( !Lang13.Bool( unreaction ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>The system didn't react...</span>" );
					return null;
				}
				total_reactions = Num13.Floor( ( active.reagents.total_volume ??0) / Convert.ToDouble( unreaction.result_amount ) );
				primary = true;

				if ( Convert.ToDouble( C.charge ) < total_reactions * 30 ) {
					total_reactions = Num13.Floor( Convert.ToDouble( C.charge / 30 ) );
				}
				C.charge -= total_reactions * 30;
				((Reagents)active.reagents).remove_reagent( unreaction.result, total_reactions * Convert.ToDouble( unreaction.result_amount ) );

				foreach (dynamic _c in Lang13.Enumerate( unreaction.required_reagents )) {
					E = _c;
					

					if ( primary ) {
						((Reagents)active.reagents).add_reagent( E, unreaction.required_reagents[E] * total_reactions );
						primary = false;
					} else {
						((Reagents)empty.reagents).add_reagent( E, unreaction.required_reagents[E] * total_reactions );
					}
				}
				GlobalFuncs.to_chat( b, "<span class='warning'>The system electrolyzes!</span>" );
				this.spark_system.start();
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Obj B = null;

			
			if ( this.beakers.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.beakers, typeof(Obj) )) {
					B = _a;
					

					if ( B is Obj ) {
						this.beakers.Remove( B );
						((Mob)user).put_in_hands( B );
					}
				}
			}
			GlobalFuncs.to_chat( user, "<span class='notice'>You remove the containers from the electrolyzer.</span>" );
			return null;
		}

		// Function from file: Chemistry-Machinery.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			dynamic _default = null;

			GlobalFuncs.qdel( this.spark_system );
			this.spark_system = null;
			_default = base.Destroy( (object)(brokenup) );
			return _default;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Gps : Obj_Item_Device {

		public dynamic gpstag = "COM0";
		public bool emped = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "locator";
			this.w_class = 2;
			this.slot_flags = 512;
			this.origin_tech = "bluespace=2;magnets=2";
			this.icon = "icons/obj/telescience.dmi";
			this.icon_state = "gps-c";
		}

		// Function from file: gps.dm
		public Obj_Item_Device_Gps ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.overlays.Add( "working" );
			this.handle_list();
			return;
		}

		// Function from file: gps.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic a = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( href_list["tag"] ) ) {
				
				if ( Task13.User is Mob_Dead_Observer ) {
					GlobalFuncs.to_chat( Task13.User, "No way." );
					return null;
				}

				if ( Task13.User.get_active_hand() != this || Lang13.Bool( Task13.User.stat ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class = 'caution'>You need to have the GPS in your hand to do that!</span>" );
					return null;
				}
				a = Interface13.Input( "Please enter desired tag.", this.name, this.gpstag, null, null, InputType.Str | InputType.Null );

				if ( !Lang13.Bool( a ) ) {
					return null;
				}

				if ( Task13.User.get_active_hand() != this || Lang13.Bool( Task13.User.stat ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class = 'caution'>The GPS needs to be kept in your active hand!</span>" );
					return null;
				}
				a = String13.SubStr( GlobalFuncs.sanitize( a ), 1, 20 );

				if ( Lang13.Length( a ) != 4 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class = 'caution'>The tag must be four letters long!</span>" );
					return null;
				} else {
					this.gpstag = a;
					this.name = "global positioning system (" + this.gpstag + ")";
					return null;
				}
			}
			return null;
		}

		// Function from file: gps.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			
			if ( this.Adjacent( user ) || user is Mob_Dead_Observer ) {
				this.attack_self( user );
			} else {
				base.examine( (object)(user), size );
			}
			return null;
		}

		// Function from file: tools.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );
			GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).icon( this ).str( " " ).item( this ).str( " flashes <i>" ).item( T.x - GlobalVars.WORLD_X_OFFSET[T.z] ).str( "." ).item( Rand13.Int( 0, 9 ) ).str( ":" ).item( T.y - GlobalVars.WORLD_Y_OFFSET[T.z] ).str( "." ).item( Rand13.Int( 0, 9 ) ).str( ":" ).item( T.z ).str( "." ).item( Rand13.Int( 0, 9 ) ).str( "</i>.</span>" ).ToString() );
			return null;
		}

		// Function from file: gps.dm
		public override dynamic emp_act( int severity = 0 ) {
			this.emped = true;
			this.overlays.Remove( "working" );
			this.overlays.Add( "emp" );
			Task13.Schedule( 300, (Task13.Closure)(() => {
				this.emped = false;
				this.overlays.Remove( "emp" );
				this.overlays.Add( "working" );
				return;
			}));
			return null;
		}

		// Function from file: gps.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this is Obj_Item_Device_Gps_Secure ) {
				GlobalVars.SPS_list.Remove( this );
			} else {
				GlobalVars.GPS_list.Remove( this );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: gps.dm
		public virtual void handle_list(  ) {
			GlobalVars.GPS_list.Add( this );
			this.name = "global positioning system (" + this.gpstag + ")";
			return;
		}

	}

}
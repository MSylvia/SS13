// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Screen_Movable_SpellMaster : Obj_Screen_Movable {

		public ByTable spell_objects = new ByTable();
		public bool showing = false;
		public string open_state = "master_open";
		public string closed_state = "master_closed";
		public Mob spell_holder = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.screen_loc = "EAST-1:16,NORTH-1:16";
			this.globalscreen = true;
			this.icon = "icons/mob/screen_spells.dmi";
			this.icon_state = "wiz_spell_ready";
		}

		public Obj_Screen_Movable_SpellMaster ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: spell_screen_objects.dm
		public void update_spells( bool? forced = null, Mob user = null ) {
			forced = forced ?? false;

			Obj_Screen_Spell spell = null;

			
			if ( user != null && user.client != null ) {
				
				if ( !user.client.screen.Contains( this ) ) {
					user.client.screen.Add( this );
				}
			}

			foreach (dynamic _a in Lang13.Enumerate( this.spell_objects, typeof(Obj_Screen_Spell) )) {
				spell = _a;
				
				spell.update_charge( forced );
			}
			return;
		}

		// Function from file: spell_screen_objects.dm
		public void silence_spells( int? amount = null ) {
			Obj_Screen_Spell spell = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.spell_objects, typeof(Obj_Screen_Spell) )) {
				spell = _a;
				
				spell.spell.silenced = amount;
				spell.update_charge( true );
			}
			return;
		}

		// Function from file: spell_screen_objects.dm
		public void remove_spell( Spell spell = null ) {
			GlobalFuncs.returnToPool( spell.connected_button );
			spell.connected_button = null;

			if ( this.spell_objects.len != 0 ) {
				this.toggle_open( ( this.showing ?1:0) + 1 );
			} else {
				GlobalFuncs.returnToPool( this );
			}
			return;
		}

		// Function from file: spell_screen_objects.dm
		public void add_spell( dynamic spell = null ) {
			Game_Data newscreen = null;

			
			if ( !Lang13.Bool( spell ) ) {
				return;
			}

			if ( spell.connected_button != null ) {
				
				if ( this.spell_objects.Contains( spell.connected_button ) ) {
					return;
				} else {
					this.spell_objects.Add( spell.connected_button );
					this.toggle_open( 2 );
					return;
				}
			}

			if ( ( spell.spell_flags & 512 ) != 0 ) {
				return;
			}
			newscreen = GlobalFuncs.getFromPool( typeof(Obj_Screen_Spell) );
			((dynamic)newscreen).spellmaster = this;
			((dynamic)newscreen).spell = spell;
			spell.connected_button = newscreen;

			if ( !Lang13.Bool( spell.override_base ) ) {
				
				if ( ( spell.spell_flags & 256 ) != 0 ) {
					((dynamic)newscreen).spell_base = "const";
				} else {
					((dynamic)newscreen).spell_base = "wiz";
				}
			} else {
				((dynamic)newscreen).spell_base = spell.override_base;
			}
			((dynamic)newscreen).name = spell.name;
			((dynamic)newscreen).update_charge( 1 );
			this.spell_objects.Add( newscreen );
			this.toggle_open( 2 );
			return;
		}

		// Function from file: spell_screen_objects.dm
		public void open_spellmaster(  ) {
			ByTable screen_loc_xy = null;
			ByTable screen_loc_X = null;
			dynamic x_position = null;
			dynamic x_pix = null;
			ByTable screen_loc_Y = null;
			dynamic y_position = null;
			dynamic y_pix = null;
			int? i = null;
			Base_Dynamic S = null;
			dynamic xpos = null;
			dynamic ypos = null;

			screen_loc_xy = GlobalFuncs.text2list( this.screen_loc, "," );
			screen_loc_X = GlobalFuncs.text2list( screen_loc_xy[1], ":" );
			x_position = this.decode_screen_X( screen_loc_X[1] );
			x_pix = screen_loc_X[2];
			screen_loc_Y = GlobalFuncs.text2list( screen_loc_xy[2], ":" );
			y_position = this.decode_screen_Y( screen_loc_Y[1] );
			y_pix = screen_loc_Y[2];
			i = null;
			i = 1;

			while (( i ??0) <= this.spell_objects.len) {
				S = this.spell_objects[i];
				xpos = x_position + ( Convert.ToDouble( x_position ) < 8 ? 1 : -1 ) * ( ( i ??0) % 7 );
				ypos = y_position + ( Convert.ToDouble( y_position ) < 8 ? Num13.Floor( ( i ??0) / 7 ) : -Num13.Floor( ( i ??0) / 7 ) );
				S.screen_loc = "" + this.encode_screen_X( xpos ) + ":" + x_pix + "," + this.encode_screen_Y( ypos ) + ":" + y_pix;

				if ( this.spell_holder != null && this.spell_holder.client != null ) {
					this.spell_holder.client.screen.Add( S );
					((dynamic)S).handle_icon_updates = 1;
				}
				i++;
			}
			return;
		}

		// Function from file: spell_screen_objects.dm
		public void toggle_open( int? forced_state = null ) {
			forced_state = forced_state ?? 0;

			Obj_Screen_Spell O = null;

			
			if ( this.showing && forced_state != 2 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.spell_objects, typeof(Obj_Screen_Spell) )) {
					O = _a;
					

					if ( this.spell_holder != null && this.spell_holder.client != null ) {
						this.spell_holder.client.screen.Remove( O );
					}
					O.handle_icon_updates = false;
				}
				this.showing = false;
				this.overlays.len = 0;
				this.overlays.Add( this.closed_state );
			} else if ( forced_state != 1 ) {
				this.open_spellmaster();
				this.update_spells( true );
				this.showing = true;
				this.overlays.len = 0;
				this.overlays.Add( this.open_state );
			}
			return;
		}

		// Function from file: spell_screen_objects.dm
		public override bool Click( dynamic loc = null, string control = null, string _params = null ) {
			
			if ( !( this.spell_objects.len != 0 ) ) {
				GlobalFuncs.returnToPool( this );
				return false;
			}
			this.toggle_open();
			return false;
		}

		// Function from file: spell_screen_objects.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			
			if ( this.showing ) {
				return null;
			}
			return base.MouseDrop( over_object, (object)(src_location), over_location, (object)(src_control), (object)(over_control), _params );
		}

		// Function from file: spell_screen_objects.dm
		public override dynamic resetVariables( string args = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { args } ).Extend(_);

			base.resetVariables( "spell_objects", (object)(_args) );
			this.spell_objects = new ByTable();
			return null;
		}

		// Function from file: spell_screen_objects.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Obj_Screen_Spell spells = null;

			base.Destroy( (object)(brokenup) );

			foreach (dynamic _a in Lang13.Enumerate( this.spell_objects, typeof(Obj_Screen_Spell) )) {
				spells = _a;
				
				spells.spellmaster = null;
			}
			this.spell_objects = null;

			if ( this.spell_holder != null ) {
				this.spell_holder.spell_masters.Remove( this );

				if ( this.spell_holder.client != null && this.spell_holder.client.screen != null ) {
					this.spell_holder.client.screen.Remove( this );
				}
				this.spell_holder = null;
			}
			return null;
		}

		// Function from file: movable_screen_objects.dm
		public override dynamic get_view_size(  ) {
			dynamic _default = null;

			
			if ( this.spell_holder != null && this.spell_holder.client != null ) {
				_default = this.spell_holder.client.view;
			} else if ( Task13.User != null && Task13.User.client != null ) {
				_default = Task13.User.client.view;
			} else {
				_default = Game13.view;
			}
			return _default;
		}

	}

}
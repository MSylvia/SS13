// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Twohanded_Spear_GreyTide : Obj_Item_Weapon_Twohanded_Spear {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force_unwielded = 15;
			this.force_wielded = 25;
			this.attack_verb = new ByTable(new object [] { "gored" });
		}

		public Obj_Item_Weapon_Twohanded_Spear_GreyTide ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: twohanded.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic L = null;
			Mob_Living_SimpleAnimal_Hostile_Illusion M = null;

			base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );

			if ( !( proximity_flag == true ) ) {
				return false;
			}
			user.faction |= new Txt( "greytide(" ).Ref( user ).str( ")" ).ToString();

			if ( target is Mob_Living ) {
				L = target;

				if ( L is Mob_Living_SimpleAnimal_Hostile_Illusion ) {
					return false;
				}

				if ( !Lang13.Bool( L.stat ) && Rand13.PercentChance( 50 ) ) {
					M = new Mob_Living_SimpleAnimal_Hostile_Illusion( user.loc );
					M.faction = user.faction.Copy();
					M.Copy_Parent( user, 100, user.health / 2.5, 12, 30 );
					M.GiveTarget( L );
				}
			}
			return false;
		}

	}

}
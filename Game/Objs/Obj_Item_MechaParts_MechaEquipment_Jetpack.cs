// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_Jetpack : Obj_Item_MechaParts_MechaEquipment {

		public bool wait = false;
		public Effect_Effect_System_Trail ion_trail = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=5;engineering=5;magnets=4";
			this.equip_cooldown = 5;
			this.energy_drain = 75;
			this.icon_state = "mecha_jetpack";
		}

		public Obj_Item_MechaParts_MechaEquipment_Jetpack ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tools.dm
		public override bool do_after_cooldown( dynamic target = null, double? delay_mult = null ) {
			Task13.Sleep( ((int)( this.equip_cooldown )) );
			this.wait = false;
			return true;
		}

		// Function from file: tools.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			base.Topic( href, href_list, (object)(hclient) );

			if ( Lang13.Bool( href_list["toggle"] ) ) {
				this.toggle();
			}
			return null;
		}

		// Function from file: tools.dm
		public override string get_equip_info(  ) {
			
			if ( !( this.chassis != null ) ) {
				return null;
			}
			return new Txt( "<span style=\"color:" ).item( ( this.equip_ready ? "#0f0" : "#f00" ) ).str( ";\">*</span>&nbsp;" ).item( this.name ).str( " [<a href=\"?src=" ).Ref( this ).str( ";toggle=1\">Toggle</a>]" ).ToString();
		}

		// Function from file: tools.dm
		public override bool action_checks( dynamic target = null ) {
			
			if ( this.equip_ready || this.wait ) {
				return false;
			}

			if ( this.energy_drain != 0 && !this.chassis.has_charge( this.energy_drain ) ) {
				return false;
			}

			if ( this.crit_fail ) {
				return false;
			}

			if ( this.chassis.check_for_support() ) {
				return false;
			}
			return true;
		}

		// Function from file: tools.dm
		public bool dyndomove( double? direction = null ) {
			bool? move_result = null;
			Obj_Effect_SpeechBubble B = null;

			
			if ( !this.action_checks() ) {
				return this.chassis.dyndomove( direction );
			}
			move_result = false;

			if ( this.chassis.hasInternalDamage( 16 ) != 0 ) {
				Map13.StepRandom( this.chassis );
				move_result = null;
			} else if ( this.chassis.dir != direction ) {
				this.chassis.dir = ((int)( direction ??0 ));
				move_result = true;
			} else {
				Map13.Step( this.chassis, ((int)( direction ??0 )) );
				move_result = this.chassis.dir != direction;

				if ( this.chassis.occupant != null ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this.chassis, 1 ), typeof(Obj_Effect_SpeechBubble) )) {
						B = _a;
						

						if ( B.parent == this.chassis.occupant ) {
							B.loc = this.chassis.loc;
						}
					}
				}
			}

			if ( move_result == true ) {
				this.wait = true;
				this.chassis.use_power( this.energy_drain );

				if ( !this.chassis.pr_inertial_movement.active() ) {
					this.chassis.pr_inertial_movement.start( new ByTable(new object [] { this.chassis, direction }) );
				} else {
					this.chassis.pr_inertial_movement.set_process_args( new ByTable(new object [] { this.chassis, direction }) );
				}
				this.do_after_cooldown();
				return true;
			}
			return false;
		}

		// Function from file: tools.dm
		public void turn_off(  ) {
			this.set_ready_state( true );
			this.chassis.proc_res["dyndomove"] = null;
			this.ion_trail.stop();
			this.occupant_message( "Jetpack Deactivated." );
			this.log_message( "Jetpack Deactivated." );
			return;
		}

		// Function from file: tools.dm
		public void turn_on(  ) {
			this.set_ready_state( false );
			this.chassis.proc_res["dyndomove"] = this;
			this.ion_trail.start();
			this.occupant_message( "Jetpack Activated." );
			this.log_message( "Jetpack Activated." );
			return;
		}

		// Function from file: tools.dm
		public bool toggle(  ) {
			
			if ( !( this.chassis != null ) ) {
				return false;
			}
			if ( !this.equip_ready ) this.turn_off(); else this.turn_on();
			return this.equip_ready;
		}

		// Function from file: tools.dm
		public override void attach( Obj_Mecha M = null ) {
			base.attach( M );

			if ( !( this.ion_trail != null ) ) {
				this.ion_trail = new Effect_Effect_System_Trail();
			}
			this.ion_trail.set_up( this.chassis );
			return;
		}

		// Function from file: tools.dm
		public override void detach( dynamic moveto = null ) {
			base.detach( (object)(moveto) );
			this.chassis.proc_res["dyndomove"] = null;
			return;
		}

		// Function from file: tools.dm
		public override bool can_attach( Obj_Mecha M = null ) {
			
			if ( !Lang13.Bool( Lang13.FindIn( this.type, M.equipment ) ) && !Lang13.Bool( M.proc_res["dyndomove"] ) ) {
				return base.can_attach( M );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Dnascrambler : Obj_Item_Weapon {

		public bool used = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "syringe_0";
			this.icon = "icons/obj/syringe.dmi";
			this.icon_state = "b10";
		}

		public Obj_Item_Weapon_Dnascrambler ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: dnascrambler.dm
		public void injected( dynamic target = null, dynamic user = null ) {
			((Mob)target).generate_name();
			target.real_name = target.name;
			GlobalFuncs.scramble( true, target, 100 );
			GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "" + GlobalFuncs.key_name( user ) + " injected " + GlobalFuncs.key_name( target ) + " with the " + this.name ) ) );
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name_admin( user ) + " injected " + GlobalFuncs.key_name_admin( target ) + " with the " + this.name ) ) );
			this.used = true;
			this.update_icon();
			this.name = "used " + this.name;
			return;
		}

		// Function from file: dnascrambler.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( !Lang13.Bool( M ) || !Lang13.Bool( user ) ) {
				return null;
			}

			if ( !( M is Mob_Living_Carbon_Human ) || !( user is Mob_Living_Carbon_Human ) ) {
				return null;
			}

			if ( this.used ) {
				return null;
			}

			if ( M == user ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='danger'>" ).item( user.name ).str( " injects " ).himself_herself_itself_themself().str( " with " ).item( this ).str( "!</span>" ).ToString() );
				this.injected( user, user );
			} else {
				((Ent_Static)user).visible_message( "<span class='danger'>" + user.name + " is trying to inject " + M.name + " with " + this + "!</span>" );

				if ( GlobalFuncs.do_mob( user, M, 30 ) ) {
					((Ent_Static)user).visible_message( "<span class='danger'>" + user.name + " injects " + M.name + " with " + this + ".</span>" );
					this.injected( M, user );
				} else {
					GlobalFuncs.to_chat( user, "<span class='warning'>You failed to inject " + M.name + ".</span>" );
				}
			}
			return null;
		}

		// Function from file: dnascrambler.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.used ) {
				this.icon_state = "b0";
			} else {
				this.icon_state = "b10";
			}
			return null;
		}

	}

}
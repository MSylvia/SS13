// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Head_Helmet_Space_Hardsuit_Rd : Obj_Item_Clothing_Head_Helmet_Space_Hardsuit {

		public bool onboard_hud_enabled = false;
		public Obj_Machinery_DopplerArray_Integrated bomb_radar = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_color = "rd";
			this.unacidable = true;
			this.max_heat_protection_temperature = 30000;
			this.armor = new ByTable().Set( "melee", 30 ).Set( "bullet", 5 ).Set( "laser", 10 ).Set( "energy", 5 ).Set( "bomb", 100 ).Set( "bio", 100 ).Set( "rad", 60 );
			this.scan_reagents = true;
			this.icon_state = "hardsuit0-rd";
		}

		// Function from file: hardsuit.dm
		public Obj_Item_Clothing_Head_Helmet_Space_Hardsuit_Rd ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.bomb_radar = new Obj_Machinery_DopplerArray_Integrated( this );
			return;
		}

		// Function from file: hardsuit.dm
		public override bool dropped( dynamic user = null ) {
			AtomHud DHUD = null;

			base.dropped( (object)(user) );
			user.scanner.devices = Num13.MaxInt( 0, Convert.ToInt32( user.scanner.devices - 1 ) );

			if ( this.onboard_hud_enabled && !( Lang13.Bool( user.glasses ) && user.glasses is Obj_Item_Clothing_Glasses_Hud_Diagnostic ) ) {
				DHUD = GlobalVars.huds[5];
				DHUD.remove_hud_from( user );
			}
			return false;
		}

		// Function from file: hardsuit.dm
		public override void equipped( Mob user = null, dynamic slot = null ) {
			AtomHud DHUD = null;

			base.equipped( user, (object)(slot) );
			user.scanner.Grant( user );
			user.scanner.devices += 1;

			if ( Lang13.Bool( ((dynamic)user).glasses ) && ((dynamic)user).glasses is Obj_Item_Clothing_Glasses_Hud_Diagnostic ) {
				user.WriteMsg( "<span class='warning'>Your " + ((dynamic)user).glasses + " prevents you using " + this + "'s diagnostic visor HUD.</span>" );
			} else {
				this.onboard_hud_enabled = true;
				DHUD = GlobalVars.huds[5];
				DHUD.add_hud_to( user );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_ConveyorConstruct : Obj_Item {

		public string id = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 4;
			this.icon = "icons/obj/recycling.dmi";
			this.icon_state = "conveyor0";
		}

		public Obj_Item_ConveyorConstruct ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: conveyor2.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			double? cdir = null;
			Obj_Machinery_Conveyor C = null;

			
			if ( !( proximity_flag == true ) || Lang13.Bool( user.stat ) || !( target is Tile_Simulated_Floor ) || target is Zone_Shuttle ) {
				return false;
			}
			cdir = Map13.GetDistance( target, user );

			if ( target == user.loc ) {
				user.WriteMsg( "<span class='notice'>You cannot place a conveyor belt under yourself.</span>" );
				return false;
			}
			C = new Obj_Machinery_Conveyor( target, cdir );
			C.id = this.id;
			this.transfer_fingerprints_to( C );
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: conveyor2.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic C = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_ConveyorSwitchConstruct ) {
				user.WriteMsg( "<span class='notice'>You link the switch to the conveyor belt assembly.</span>" );
				C = A;
				this.id = C.id;
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Toy_Balloon : Obj_Item_Toy {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "balloon-empty";
			this.icon = "icons/obj/toy.dmi";
			this.icon_state = "waterballoon-e";
		}

		// Function from file: toys.dm
		public Obj_Item_Toy_Balloon ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 10 );
			return;
		}

		// Function from file: toys.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( ( this.reagents.total_volume ??0) >= 1 ) {
				this.icon_state = "waterballoon";
				this.item_state = "balloon";
			} else {
				this.icon_state = "waterballoon-e";
				this.item_state = "balloon-empty";
			}
			return null;
		}

		// Function from file: toys.dm
		public override dynamic throw_impact( dynamic hit_atom = null, dynamic speed = null, Mob user = null ) {
			Ent_Static A = null;

			
			if ( ( this.reagents.total_volume ??0) >= 1 ) {
				this.visible_message( "<span class = 'danger'>The " + this + " bursts!</span>", "You hear a pop and a splash." );
				((Reagents)this.reagents).reaction( GlobalFuncs.get_turf( hit_atom ) );

				foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_turf( hit_atom ), typeof(Ent_Static) )) {
					A = _a;
					
					((Reagents)this.reagents).reaction( A );
				}
				this.icon_state = "burst";
				Task13.Schedule( 5, (Task13.Closure)(() => {
					
					if ( this != null ) {
						GlobalFuncs.qdel( this );
					}
					return;
				}));
			}
			return null;
		}

		// Function from file: toys.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_ReagentContainers_Glass ) {
				
				if ( Lang13.Bool( a.reagents ) ) {
					
					if ( ( a.reagents.total_volume ??0) < 1 ) {
						GlobalFuncs.to_chat( b, "The " + a + " is empty." );
					} else if ( ( a.reagents.total_volume ??0) >= 1 ) {
						
						if ( ((Reagents)a.reagents).has_reagent( "pacid", 1 ) ) {
							GlobalFuncs.to_chat( b, "The acid chews through the balloon!" );
							((Reagents)a.reagents).reaction( b );
							GlobalFuncs.qdel( this );
							return null;
						} else {
							this.desc = "A translucent balloon with some form of liquid sloshing around in it.";
							GlobalFuncs.to_chat( b, "<span class = 'info'>You fill the balloon with the contents of " + a + ".</span>" );
							((Reagents)a.reagents).trans_to( this, 10 );
						}
					}
				}
			}
			this.update_icon();
			return null;
		}

		// Function from file: toys.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( A is Obj_Structure_ReagentDispensers_Watertank && Map13.GetDistance( this, A ) <= 1 ) {
				((Reagents)A.reagents).trans_to( this, 10 );
				GlobalFuncs.to_chat( user, "<span class = 'notice'>You fill the balloon with the contents of " + A + ".</span>" );
				this.desc = "A translucent balloon with some form of liquid sloshing around in it.";
				this.update_icon();
			}
			return false;
		}

		// Function from file: toys.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			return null;
		}

	}

}
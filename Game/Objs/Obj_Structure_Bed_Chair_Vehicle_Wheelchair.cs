// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bed_Chair_Vehicle_Wheelchair : Obj_Structure_Bed_Chair_Vehicle {

		public Image wheel_overlay = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.nick = "cripplin' ride";
			this.movement_delay = 6;
			this.health = 50;
			this.max_health = 50;
			this.icon = "icons/obj/objects.dmi";
			this.icon_state = "wheelchair";
		}

		// Function from file: wheelchair.dm
		public Obj_Structure_Bed_Chair_Vehicle_Wheelchair ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.wheel_overlay = new Image( "icons/obj/objects.dmi", "" + this.icon_state + "_overlay", 401 );
			return;
		}

		// Function from file: wheelchair.dm
		public override void die(  ) {
			GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ), 4 );
			GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Rods), GlobalFuncs.get_turf( this ), 2 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: wheelchair.dm
		public override void update_mob(  ) {
			
			if ( Lang13.Bool( this.occupant ) ) {
				this.occupant.pixel_x = 0;
				this.occupant.pixel_y = 3;
			}
			return;
		}

		// Function from file: wheelchair.dm
		public override dynamic emp_act( int severity = 0 ) {
			return null;
		}

		// Function from file: wheelchair.dm
		public override bool check_key( Mob user = null ) {
			
			if ( this.check_hands( user ) != 0 ) {
				return true;
			}
			return false;
		}

		// Function from file: wheelchair.dm
		public override void handle_layer(  ) {
			
			if ( this.dir == GlobalVars.NORTH ) {
				this.layer = GlobalVars.FLY_LAYER;
			} else {
				this.layer = GlobalVars.OBJ_LAYER;
			}
			return;
		}

		// Function from file: wheelchair.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			
			if ( !this.check_key( M ) ) {
				GlobalFuncs.to_chat( M, "<span class='warning'>You need at least one hand to use " + this + "!</span>" );
				return 0;
			}
			return base.relaymove( M, direction );
		}

		// Function from file: wheelchair.dm
		public override double getMovementDelay(  ) {
			int hands = 0;

			hands = this.check_hands( this.occupant );

			if ( hands <= 0 ) {
				return 0;
			}
			return this.movement_delay * ( 4 / hands );
		}

		// Function from file: wheelchair.dm
		public int check_hands( dynamic user = null ) {
			dynamic M = null;
			int left_hand_exists = 0;
			int right_hand_exists = 0;
			dynamic H = null;
			dynamic left_hand = null;
			dynamic right_hand = null;

			M = user;

			if ( !Lang13.Bool( M ) ) {
				return 0;
			}
			left_hand_exists = 1;
			right_hand_exists = 1;

			if ( Lang13.Bool( M.handcuffed ) ) {
				return 0;
			}

			if ( M is Mob_Living_Carbon_Human ) {
				H = user;

				if ( H.l_hand == null ) {
					left_hand_exists++;
				}
				left_hand = ((Mob_Living_Carbon_Human)H).get_organ( "l_hand" );

				if ( !Lang13.Bool( left_hand ) ) {
					left_hand_exists = 0;
				} else if ( Lang13.Bool( left_hand.status & 64 ) ) {
					left_hand_exists = 0;
				}

				if ( H.r_hand == null ) {
					right_hand_exists++;
				}
				right_hand = ((Mob_Living_Carbon_Human)H).get_organ( "r_hand" );

				if ( !Lang13.Bool( right_hand ) ) {
					right_hand_exists = 0;
				} else if ( Lang13.Bool( right_hand.status & 64 ) ) {
					right_hand_exists = 0;
				}
			} else if ( M is Mob_Living_Carbon_Monkey || M is Mob_Living_Carbon_Alien ) {
				left_hand_exists = 0;

				if ( user.l_hand == null ) {
					left_hand_exists++;
				}
				right_hand_exists = 0;

				if ( user.r_hand == null ) {
					right_hand_exists++;
				}
			}
			return left_hand_exists + right_hand_exists;
		}

		// Function from file: wheelchair.dm
		public override bool can_buckle( Mob M = null, Mob user = null ) {
			
			if ( M != user || !this.Adjacent( user ) || !( user is Mob_Living_Carbon_Human ) && !( user is Mob_Living_Carbon_Alien ) && !( user is Mob_Living_Carbon_Monkey ) || user.restrained() || Lang13.Bool( user.stat ) || Lang13.Bool( user.locked_to ) || this.destroyed || Lang13.Bool( this.occupant ) ) {
				return false;
			}
			return true;
		}

		// Function from file: wheelchair.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			base.update_icon( (object)(location), (object)(target) );

			if ( Lang13.Bool( this.occupant ) ) {
				this.overlays.Or( this.wheel_overlay );
			} else {
				this.overlays.Remove( this.wheel_overlay );
			}
			return null;
		}

		// Function from file: wheelchair.dm
		public override bool lock_atom( dynamic AM = null ) {
			bool _default = false;

			_default = base.lock_atom( (object)(AM) );
			this.density = false;
			((dynamic)this).animate_movement = 3;
			this.update_icon();
			return _default;
		}

		// Function from file: wheelchair.dm
		public override bool unlock_atom( dynamic AM = null ) {
			bool _default = false;

			_default = base.unlock_atom( (object)(AM) );
			this.density = true;
			((dynamic)this).animate_movement = Lang13.Initial( this, "animate_movement" );
			this.update_icon();
			return _default;
		}

	}

}
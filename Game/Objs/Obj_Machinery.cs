// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery : Obj {

		public Obj_Machinery_AccountDatabase linked_db = null;
		public MoneyAccount linked_account = null;
		public string icon_state_open = "";
		public int stat = 0;
		public double emagged = 0;
		public int use_power = 1;
		public dynamic idle_power_usage = 0;
		public dynamic active_power_usage = 0;
		public int? power_channel = 1;
		public dynamic component_parts = null;
		public double uid = 0;
		public bool manual = false;
		public bool gl_uid = true;
		public bool custom_aghost_alerts = false;
		public bool panel_open = false;
		public dynamic state = 0;
		public int light_range_on = 0;
		public double light_power_on = 0;
		public bool use_auto_lights = false;
		public int? machine_flags = 0;
		public int emag_cost = 1;
		public bool inMachineList = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/stationobjs.dmi";
		}

		// Function from file: machinery.dm
		public Obj_Machinery ( dynamic loc = null ) : base( (object)(loc) ) {
			GlobalVars.machines.Add( this );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: requests_console.dm
		public override string say_quote( dynamic text = null ) {
			string ending = null;

			ending = String13.SubStr( text, Lang13.Length( text ) - 2, 0 );

			if ( ending == "!!!" ) {
				return "blares, " + text;
			}
			return "beeps, " + text;
		}

		// Function from file: machinery.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic E = null;
			dynamic M = null;

			
			if ( a is Obj_Item_Weapon_Card_Emag && ( ( this.machine_flags ??0) & 1 ) != 0 ) {
				E = a;

				if ( ((Obj_Item_Weapon_Card_Emag)E).canUse( b, this ) ) {
					this.emag( b );
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Wrench && ( ( this.machine_flags ??0) & 8 ) != 0 ) {
				
				if ( !this.panel_open ) {
					return this.wrenchAnchor( b );
				} else {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>" ).The( this ).item().str( "'s maintenance panel must be closed first!</span>" ).ToString() );
					return -1;
				}
			}

			if ( a is Obj_Item_Weapon_Screwdriver && ( ( this.machine_flags ??0) & 2 ) != 0 ) {
				return this.togglePanelOpen( a, b );
			}

			if ( a is Obj_Item_Weapon_Weldingtool && ( ( this.machine_flags ??0) & 64 ) != 0 ) {
				return this.weldToFloor( a, b );
			}

			if ( a is Obj_Item_Weapon_Crowbar && ( ( this.machine_flags ??0) & 4 ) != 0 ) {
				
				if ( this.panel_open ) {
					
					if ( this.crowbarDestroy( b ) == 1 ) {
						GlobalFuncs.qdel( this );
						return 1;
					} else {
						return -1;
					}
				}
			}

			if ( a is Obj_Item_Device_Multitool && ( ( this.machine_flags ??0) & 128 ) != 0 ) {
				this.update_multitool_menu( b );
				return 1;
			}

			if ( !Lang13.Bool( this.anchored ) && ( ( this.machine_flags ??0) & 16 ) != 0 ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>" ).The( this ).item().str( " must be anchored first!</span>" ).ToString() ); return null;
			}

			if ( a is Obj_Item_Device_Paicard && ( ( this.machine_flags ??0) & 512 ) != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( a )) {
					M = _a;
					
					this.wirejack( M );
				}
				return 1;
			}

			if ( a is Obj_Item_Weapon_Storage_Bag_Gadgets_PartReplacer ) {
				return this.exchange_parts( b, a );
			}
			return null;
		}

		// Function from file: machinery.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			b = b ?? 0;

			dynamic H = null;

			
			if ( ( this.stat & 11 ) != 0 ) {
				return 1;
			}

			if ( a.lying == true || Lang13.Bool( a.stat ) && !GlobalFuncs.canGhostRead( a ) ) {
				return 1;
			}

			if ( a is Mob_Dead_Observer ) {
				return 0;
			}

			if ( !Lang13.Bool( a.dexterity_check() ) ) {
				GlobalFuncs.to_chat( a, "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return 1;
			}

			if ( a is Mob_Living_Carbon_Human && !Lang13.Bool( b ) ) {
				H = a;

				if ( ((Mob_Living)H).getBrainLoss() >= 60 ) {
					this.visible_message( "<span class='warning'>" + H + " stares cluelessly at " + this + " and drools.</span>" );
					return 1;
				} else if ( Rand13.PercentChance( ((Mob_Living)H).getBrainLoss() ) || ((Mob_Living)H).undergoing_hypothermia() == 2 && Rand13.PercentChance( 25 ) ) {
					GlobalFuncs.to_chat( a, "<span class='warning'>You momentarily forget how to use " + this + ".</span>" );
					return 1;
				}
			}
			this.add_fingerprint( a );
			return 0;
		}

		// Function from file: machinery.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: machinery.dm
		public override dynamic attack_ghost( Mob_Dead_Observer user = null ) {
			int? ghost_flags = null;

			this.add_hiddenprint( user );
			ghost_flags = 0;

			if ( this.ghost_read ) {
				ghost_flags |= 1;
			}

			if ( GlobalFuncs.canGhostRead( Task13.User, this, ghost_flags ) ) {
				return this.attack_ai( user );
			}
			return null;
		}

		// Function from file: machinery.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );

			if ( user is Mob_Living_Silicon_Robot ) {
				
				if ( Lang13.Bool( user.client ) && user.client.eye == user ) {
					return this.attack_hand( user );
				}
			} else {
				return this.attack_hand( user );
			}
			return null;
		}

		// Function from file: machinery.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			int? ghost_flags = null;
			dynamic T = null;

			base.Topic( href, href_list, (object)(hclient) );

			if ( ( this.stat & 3 ) != 0 ) {
				return 1;
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				return null;
			}
			ghost_flags = 0;

			if ( this.ghost_write ) {
				ghost_flags |= 1;
			}

			if ( !GlobalFuncs.canGhostWrite( Task13.User, this, "", ghost_flags ) ) {
				
				if ( Task13.User.restrained() || Task13.User.lying == true || Lang13.Bool( Task13.User.stat ) ) {
					return 1;
				}

				if ( !Lang13.Bool( Task13.User.dexterity_check() ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You don't have the dexterity to do this!</span>" );
					return 1;
				}
				T = GlobalFuncs.get_turf( Task13.User );

				if ( !( Task13.User is Mob_Living_Silicon_Ai ) && Convert.ToInt32( T.z ) != this.z ) {
					
					if ( Task13.User.z != 2 ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='warning'>WARNING: Unable to interface with " ).the( this.name ).item().str( ".</span>" ).ToString() );
						return 1;
					}
				}

				if ( ( !GlobalFuncs.in_range( this, Task13.User ) || !( this.loc is Tile ) ) && !( Task13.User is Mob_Living_Silicon ) ) {
					return 1;
				}
			} else if ( !this.custom_aghost_alerts ) {
				GlobalFuncs.log_adminghost( "" + GlobalFuncs.key_name( Task13.User ) + " screwed with " + this + " (" + href + ")!" );
			}
			this.add_fingerprint( Task13.User );
			this.add_hiddenprint( Task13.User );
			this.handle_multitool_topic( href, href_list, Task13.User );
			return 0;
		}

		// Function from file: machinery.dm
		public override bool blob_act( dynamic severity = null ) {
			
			if ( Rand13.PercentChance( 50 ) ) {
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: machinery.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((double?)( severity )) {
				case 1:
					GlobalFuncs.qdel( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 25 ) ) {
						GlobalFuncs.qdel( this );
						return false;
					}
					break;
			}
			return false;
		}

		// Function from file: machinery.dm
		public override dynamic emp_act( int severity = 0 ) {
			Obj_Effect_Overlay pulse2 = null;

			
			if ( this.use_power != 0 && this.stat == 0 ) {
				this.f_use_power( 7500 / severity );
				pulse2 = new Obj_Effect_Overlay( this.loc );
				pulse2.icon = "icons/effects/effects.dmi";
				pulse2.icon_state = "empdisable";
				pulse2.name = "emp sparks";
				pulse2.anchored = 1;
				pulse2.dir = Convert.ToInt32( Rand13.PickFromTable( GlobalVars.cardinal ) );
				Task13.Schedule( 10, (Task13.Closure)(() => {
					GlobalFuncs.qdel( pulse2 );
					return;
				}));
			}
			base.emp_act( severity );
			return null;
		}

		// Function from file: machinery.dm
		public override dynamic process(  ) {
			return 26;
		}

		// Function from file: machinery.dm
		public override int projectile_check(  ) {
			return 4;
		}

		// Function from file: machinery.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.machines.Remove( this );
			GlobalVars.power_machines.Remove( this );
			GlobalVars.atmos_machines.Remove( this );
			GlobalVars.fast_machines.Remove( this );
			this.component_parts = null;
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: machinery.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.panel_open ) {
				GlobalFuncs.to_chat( user, "<span class='info'>Its maintenance panel is open.</span>" );
			}
			return null;
		}

		// Function from file: machinery.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			
			if ( ( ( this.machine_flags ??0) & 256 ) != 0 ) {
				this.reconnect_database();
				this.linked_account = GlobalVars.vendor_account;
			}
			return false;
		}

		// Function from file: machinery.dm
		public override dynamic cultify(  ) {
			ByTable random_structure = null;
			dynamic I = null;

			random_structure = new ByTable(new object [] { typeof(Obj_Structure_Cult_Talisman), typeof(Obj_Structure_Cult_Forge), typeof(Obj_Structure_Cult_Tome) });
			I = Rand13.PickFromTable( random_structure );
			Lang13.Call( I, this.loc );
			base.cultify();
			return null;
		}

		// Function from file: power.dm
		public void removeStaticPower( int value = 0, int powerchannel = 0 ) {
			this.addStaticPower( -value, powerchannel );
			return;
		}

		// Function from file: power.dm
		public void addStaticPower( int value = 0, int powerchannel = 0 ) {
			
			if ( !Lang13.Bool( this.areaMaster ) ) {
				return;
			}
			((Zone)this.areaMaster).addStaticPower( value, powerchannel );
			return;
		}

		// Function from file: power.dm
		public virtual dynamic power_change(  ) {
			
			if ( Lang13.Bool( this.powered( this.power_channel ) ) ) {
				this.stat &= 65533;

				if ( !this.use_auto_lights ) {
					return null;
				}
				this.set_light( this.light_range_on, this.light_power_on );
			} else {
				this.stat |= 2;

				if ( !this.use_auto_lights ) {
					return null;
				}
				this.set_light( 0 );
			}
			return null;
		}

		// Function from file: power.dm
		[VerbInfo( name: "use power" )]
		public bool f_use_power( dynamic amount = null, int? chan = null ) {
			chan = chan ?? this.power_channel;

			
			if ( this.areaMaster == null || !Lang13.Bool( this.areaMaster ) ) {
				return false;
			}

			if ( !Lang13.Bool( this.powered( chan ) ) ) {
				return false;
			}
			this.areaMaster.use_power( amount, chan );
			return false;
		}

		// Function from file: power.dm
		public dynamic powered( int? chan = null ) {
			chan = chan ?? this.power_channel;

			
			if ( !( this.loc != null ) ) {
				return 0;
			}

			if ( !( this.use_power != 0 ) ) {
				return 1;
			}

			if ( this.areaMaster == null || !Lang13.Bool( this.areaMaster ) ) {
				return 0;
			}

			if ( ( ( this.machine_flags ??0) & 16 ) != 0 && !Lang13.Bool( this.anchored ) ) {
				return 0;
			}
			return this.areaMaster.powered( chan );
		}

		// Function from file: machinery.dm
		public bool exchange_parts( dynamic user = null, dynamic W = null ) {
			bool shouldplaysound = false;
			dynamic CB = null;
			dynamic P = null;
			Obj_Item A = null;
			dynamic D = null;
			Obj_Item B = null;
			Obj_Item C = null;

			shouldplaysound = false;

			if ( Lang13.Bool( this.component_parts ) ) {
				
				if ( this.panel_open ) {
					CB = Lang13.FindIn( typeof(Obj_Item_Weapon_Circuitboard), this.component_parts );

					foreach (dynamic _c in Lang13.Enumerate( this.component_parts, typeof(Obj_Item) )) {
						A = _c;
						

						foreach (dynamic _a in Lang13.Enumerate( CB.req_components )) {
							D = _a;
							
							D = Lang13.FindClass( D );

							if ( Lang13.Bool( ((dynamic)A.type).IsSubclassOf( D ) ) ) {
								P = D;
								break;
							}
						}

						foreach (dynamic _b in Lang13.Enumerate( W.contents, typeof(Obj_Item) )) {
							B = _b;
							

							if ( Lang13.Bool( P.IsInstanceOfType( B ) ) && Lang13.Bool( P.IsInstanceOfType( A ) ) ) {
								
								if ( Convert.ToDouble( B.get_rating() ) > Convert.ToDouble( A.get_rating() ) ) {
									((Obj_Item_Weapon_Storage)W).remove_from_storage( B, this );
									((Obj_Item_Weapon_Storage)W).handle_item_insertion( A, true );
									this.component_parts -= A;
									this.component_parts += B;
									B.loc = null;
									GlobalFuncs.to_chat( user, "<span class='notice'>" + A.name + " replaced with " + B.name + ".</span>" );
									shouldplaysound = true;
									break;
								}
							}
						}
					}
					this.RefreshParts();
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>Following parts detected in the machine:</span>" );

					foreach (dynamic _d in Lang13.Enumerate( this.component_parts, typeof(Obj_Item) )) {
						C = _d;
						
						GlobalFuncs.to_chat( user, "<span class='notice'>    " + C.name + "</span>" );
					}
				}

				if ( shouldplaysound ) {
					((Obj_Item_Weapon_Storage_Bag_Gadgets_PartReplacer)W).play_rped_sound();
				}
				return true;
			}
			return false;
		}

		// Function from file: machinery.dm
		public virtual bool check_rebuild(  ) {
			return false;
		}

		// Function from file: machinery.dm
		public void alert_noise( string notice_state = null ) {
			notice_state = notice_state ?? "ping";

			
			switch ((string)( notice_state )) {
				case "ping":
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).The( this ).item().str( " pings.</span>" ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/notify.ogg", 50, 0 );
					break;
				case "beep":
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).The( this ).item().str( " beeps.</span>" ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/twobeep.ogg", 50, 0 );
					break;
				case "buzz":
					this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).The( this ).item().str( " buzzes.</span>" ).ToString() );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/buzz-two.ogg", 50, 0 );
					break;
			}
			return;
		}

		// Function from file: machinery.dm
		public void hiOnHide( dynamic hclient = null ) {
			
			if ( Lang13.Bool( hclient.client.mob ) && hclient.client.mob.machine == this ) {
				((Mob)hclient.client.mob).unset_machine();
			}
			return;
		}

		// Function from file: machinery.dm
		public virtual bool? hiIsValidClient( dynamic hclient = null, dynamic hi = null ) {
			
			if ( Lang13.Bool( hclient.client.mob ) && ( Lang13.Bool( hclient.client.mob.stat ) == false || hclient.client.mob is Mob_Dead_Observer ) ) {
				
				if ( hclient.client.mob is Mob_Living_Silicon_Ai ) {
					return true;
				}

				if ( hclient.client.mob.machine == this ) {
					return ((Mob)hclient.client.mob).html_mob_check( this.type );
				}
			}
			return GlobalVars.FALSE;
		}

		// Function from file: machinery.dm
		public virtual bool shock( dynamic user = null, int? prb = null, double? siemenspassed = null ) {
			siemenspassed = siemenspassed ?? -1;

			Effect_Effect_System_SparkSpread s = null;

			
			if ( ( this.stat & 3 ) != 0 ) {
				return false;
			}

			if ( !Rand13.PercentChance( prb ??0 ) ) {
				return false;
			}
			s = new Effect_Effect_System_SparkSpread();
			s.set_up( 5, 1, this );
			s.start();

			if ( siemenspassed == -1 ) {
				siemenspassed = 061;
			}

			if ( Lang13.Bool( GlobalFuncs.electrocute_mob( user, GlobalFuncs.get_area( this ), this, siemenspassed ) ) ) {
				return true;
			} else {
				return false;
			}
		}

		// Function from file: machinery.dm
		public virtual bool wirejack( dynamic P = null ) {
			
			if ( !( ( ( this.machine_flags ??0) & 512 ) != 0 ) ) {
				return false;
			}

			if ( !((Mob_Living_Silicon_Pai)P).hackloop( this ) ) {
				return false;
			}
			return true;
		}

		// Function from file: machinery.dm
		public int getEmagCost( dynamic user = null, Obj_Item_Weapon_Card_Emag emag = null ) {
			return this.emag_cost;
		}

		// Function from file: machinery.dm
		public virtual int emag( dynamic user = null ) {
			this.machine_flags &= 65534;
			new Obj_Effect_Effect_Sparks( GlobalFuncs.get_turf( this ) );
			GlobalFuncs.playsound( this.loc, "sparks", 50, 1 );
			return 0;
		}

		// Function from file: machinery.dm
		public virtual int weldToFloor( dynamic WT = null, dynamic user = null ) {
			
			if ( !Lang13.Bool( this.anchored ) ) {
				this.state = 0;
				GlobalFuncs.to_chat( user, new Txt( "You need to secure " ).the( this ).item().str( " before it can be welded." ).ToString() );
				return -1;
			}

			if ( Lang13.Bool( WT.remove_fuel( 0, user ) ) ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/welder2.ogg", 50, 1 );
				((Ent_Static)user).visible_message( "" + user.name + " starts to " + ( Lang13.Bool( this.state - 1 ) ? "unweld" : "weld" ) + " the " + this + " " + ( Lang13.Bool( this.state - 1 ) ? "from" : "to" ) + " the floor.", "You start to " + ( Lang13.Bool( this.state - 1 ) ? "unweld" : "weld" ) + " the " + this + " " + ( Lang13.Bool( this.state - 1 ) ? "from" : "to" ) + " the floor.", "You hear welding." );

				if ( GlobalFuncs.do_after( user, this, 20 ) ) {
					
					if ( !( this != null ) || !((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
						return -1;
					}

					dynamic _a = this.state; // Was a switch-case, sorry for the mess.
					if ( _a==0 ) {
						GlobalFuncs.to_chat( user, new Txt( "You have to keep " ).the( this ).item().str( " secure before it can be welded down." ).ToString() );
						return -1;
					} else if ( _a==1 ) {
						this.state = 2;
					} else if ( _a==2 ) {
						this.state = 1;
					}
					((Ent_Static)user).visible_message( new Txt().item( user.name ).str( " " ).item( ( Lang13.Bool( this.state - 1 ) ? "weld" : "unweld" ) ).str( "s " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.state - 1 ) ? "to" : "from" ) ).str( " the floor." ).ToString(), new Txt( " " ).icon( this ).str( " You " ).item( ( Lang13.Bool( this.state - 1 ) ? "weld" : "unweld" ) ).str( " " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.state - 1 ) ? "to" : "from" ) ).str( " the floor." ).ToString() );
					return 1;
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='rose'>You need more welding fuel to complete this task.</span>" );
				return -1;
			}
			return 0;
		}

		// Function from file: machinery.dm
		public virtual int wrenchAnchor( dynamic user = null ) {
			Obj_Machinery other = null;

			
			if ( this.state == 2 && ( ( this.machine_flags ??0) & 64 ) != 0 ) {
				GlobalFuncs.to_chat( user, new Txt().The( this ).item().str( " has to be unwelded from the floor first." ).ToString() );
				return -1;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Machinery) )) {
				other = _a;
				

				if ( other.anchored == 1 && other.density && this.density && !Lang13.Bool( this.anchored ) ) {
					GlobalFuncs.to_chat( user, new Txt().The( other ).item().str( " is already anchored in this location." ).ToString() );
					return -1;
				}
			}

			if ( !Lang13.Bool( this.anchored ) ) {
				
				if ( !( this.loc is Tile_Simulated_Floor ) ) {
					
					if ( !( this.loc is Tile_Simulated_Shuttle && ( ( this.machine_flags ??0) & 1024 ) != 0 ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>You can't secure " ).the( this ).item().str( " to " ).item( ( this.loc is Tile_Space ? "space" : "this" ) ).str( "!</span>" ).ToString() );
						return 0;
					}
				}
			}
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " begins to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts." ).ToString(), new Txt( "You begin to " ).item( ( Lang13.Bool( this.anchored ) ? "undo" : "wrench" ) ).str( " " ).the( this ).item().str( "'s securing bolts..." ).ToString() );
			GlobalFuncs.playsound( this.loc, "sound/items/Ratchet.ogg", 50, 1 );

			if ( GlobalFuncs.do_after( user, this, 30 ) ) {
				this.anchored = !Lang13.Bool( this.anchored );

				if ( ( ( this.machine_flags ??0) & 16 ) != 0 ) {
					this.power_change();
				}
				this.state = this.anchored;
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( "es " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( "</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( " " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( ".</span>" ).ToString(), "<span class='notice'>You hear a ratchet.</span>" );
				return 1;
			}
			return -1;
		}

		// Function from file: machinery.dm
		public virtual int togglePanelOpen( dynamic toggleitem = null, dynamic user = null, dynamic CC = null ) {
			this.panel_open = !this.panel_open;

			if ( !Lang13.Bool( this.icon_state_open ) ) {
				this.icon_state_open = this.icon_state;
			}

			if ( this.panel_open ) {
				this.icon_state = this.icon_state_open;
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).icon( this ).str( " You " ).item( ( this.panel_open ? "open" : "close" ) ).str( " the maintenance hatch of " ).the( this ).item().str( ".</span>" ).ToString() );

			if ( toggleitem is Obj_Item_Weapon_Screwdriver ) {
				GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
			}
			this.update_icon();
			return 1;
		}

		// Function from file: machinery.dm
		public virtual void smashDestroy( int? destroy_chance = null ) {
			destroy_chance = destroy_chance ?? 50;

			GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Sheet_Metal), GlobalFuncs.get_turf( this ), 2 );
			this.spillContents( destroy_chance );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: machinery.dm
		public virtual int crowbarDestroy( dynamic user = null ) {
			((Ent_Static)user).visible_message( new Txt().item( user ).str( " begins to pry out the circuitboard from " ).the( this ).item().str( "." ).ToString(), new Txt( "You begin to pry out the circuitboard from " ).the( this ).item().str( "..." ).ToString() );

			if ( GlobalFuncs.do_after( user, this, 40 ) ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Crowbar.ogg", 50, 1 );
				this.dropFrame();
				this.spillContents();
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " successfully pries out the circuitboard from " ).the( this ).item().str( "!</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You successfully pry out the circuitboard from " ).the( this ).item().str( "!</span>" ).ToString() );
				return 1;
			}
			return -1;
		}

		// Function from file: machinery.dm
		public void spillContents( int? destroy_chance = null ) {
			destroy_chance = destroy_chance ?? 0;

			Obj I = null;
			Ent_Dynamic I2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj) )) {
				I = _a;
				

				if ( Rand13.PercentChance( destroy_chance ??0 ) ) {
					GlobalFuncs.qdel( I );
				} else {
					
					if ( I is Obj_Item_Weapon_ReagentContainers_Glass_Beaker && Lang13.Bool( this.reagents ) && Lang13.Bool( this.reagents.total_volume ) ) {
						((Reagents)this.reagents).trans_to( I, this.reagents.total_volume );
					}

					if ( I.reliability != 100 && this.crit_fail ) {
						I.crit_fail = true;
					}
					I.forceMove( this.loc );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( this, typeof(Ent_Dynamic) )) {
				I2 = _b;
				

				if ( !Rand13.PercentChance( destroy_chance ??0 ) && ( ( this.machine_flags ??0) & 32 ) != 0 ) {
					I2.forceMove( this.loc );
				} else {
					GlobalFuncs.qdel( I2 );
				}
			}
			return;
		}

		// Function from file: machinery.dm
		public virtual void dropFrame(  ) {
			Obj_Machinery_ConstructableFrame_MachineFrame M = null;

			M = new Obj_Machinery_ConstructableFrame_MachineFrame( this.loc );
			M.set_build_state( 2 );
			M.state = 1;
			return;
		}

		// Function from file: machinery.dm
		public void assign_uid(  ) {
			this.uid = GlobalVars.gl_uid;
			GlobalVars.gl_uid++;
			return;
		}

		// Function from file: machinery.dm
		public virtual dynamic RefreshParts(  ) {
			return null;
		}

		// Function from file: machinery.dm
		public virtual bool handle_multitool_topic( string href = null, ByTable href_list = null, Mob user = null ) {
			dynamic P = null;
			bool update_mt_menu = false;
			bool re_init = false;
			string newid = null;
			dynamic current_tag = null;
			string newid2 = null;
			double? idx = null;
			Base_Data O = null;
			Base_Data O2 = null;
			int ret = 0;

			P = GlobalFuncs.get_multitool( Task13.User );

			if ( Lang13.Bool( P ) && P is Obj_Item_Device_Multitool ) {
				update_mt_menu = false;
				re_init = false;
				Interface13.Stat( null, href_list.Contains( "set_tag" ) );

				if ( false ) {
					Interface13.Stat( null, GlobalVars.multitool_var_whitelist.Contains( href_list["set_tag"] ) );

					if ( !false ) {
						newid = String13.SubStr( GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Specify the new ID tag", this, null, null, InputType.Str | InputType.Null ) ), 1, 1024 );
						GlobalFuncs.log_admin( "" + Task13.User + " (" + GlobalFuncs.formatPlayerPanel( Task13.User, Task13.User.ckey ) + ") attempted to modify variable(var = " + href_list["set_tag"] + ", value = " + newid + ") using multitool - " + GlobalFuncs.formatJumpTo( Task13.User ) );
						GlobalFuncs.message_admins( "" + Task13.User + " (" + GlobalFuncs.formatPlayerPanel( Task13.User, Task13.User.ckey ) + ") attempted to modify variable(var = " + href_list["set_tag"] + ", value = " + newid + ") using multitool - " + GlobalFuncs.formatJumpTo( Task13.User ) );
						return false;
					}
					Interface13.Stat( null, this.vars.Contains( href_list["set_tag"] ) );

					if ( !( !false ) ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Something went wrong: Unable to find " + href_list["set_tag"] + " in vars!</span>" );
						return true;
					}
					current_tag = this.vars[href_list["set_tag"]];
					newid2 = String13.SubStr( GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Specify the new ID tag", this, current_tag, null, InputType.Str | InputType.Null ) ), 1, 1024 );

					if ( Lang13.Bool( newid2 ) ) {
						this.vars[href_list["set_tag"]] = newid2;
						re_init = true;
					}
					update_mt_menu = true;
				}
				Interface13.Stat( null, href_list.Contains( "unlink" ) );

				if ( false ) {
					idx = String13.ParseNumber( href_list["unlink"] );

					if ( !Lang13.Bool( idx ) ) {
						return true;
					}
					O = this.getLink( idx );

					if ( !( O != null ) ) {
						return true;
					}

					if ( this.unlinkFrom( Task13.User, O ) ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='confirm'>A green light flashes on " ).the( P ).item().str( ", confirming the link was removed.</span>" ).ToString() );
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='attack'>A red light flashes on " ).the( P ).item().str( ".  It appears something went wrong when unlinking the two devices.</span>" ).ToString() );
					}
					update_mt_menu = true;
				}
				Interface13.Stat( null, href_list.Contains( "link" ) );

				if ( false ) {
					O2 = P.buffer;

					if ( !( O2 != null ) ) {
						return true;
					}

					if ( !this.canLink( O2, href_list ) ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You can't link with that device.</span>" );
						return true;
					}

					if ( this.isLinkedWith( O2 ) == true ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='attack'>A red light flashes on " ).the( P ).item().str( ". The two devices are already linked.</span>" ).ToString() );
						return true;
					}

					if ( this.linkWith( Task13.User, O2, href_list ) ) {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='confirm'>A green light flashes on " ).the( P ).item().str( ", confirming the link has been created.</span>" ).ToString() );
					} else {
						GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='attack'>A red light flashes on " ).the( P ).item().str( ".  It appears something went wrong when linking the two devices.</span>" ).ToString() );
					}
					update_mt_menu = true;
				}
				Interface13.Stat( null, href_list.Contains( "buffer" ) );

				if ( false ) {
					
					if ( this is Obj_Machinery_Telecomms ) {
						
						if ( !GlobalFuncs.hasvar( this, "id" ) ) {
							GlobalFuncs.to_chat( Task13.User, "<span class='danger'>A red light flashes and nothing changes.</span>" );
							return false;
						}
					} else if ( !GlobalFuncs.hasvar( this, "id_tag" ) ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='danger'>A red light flashes and nothing changes.</span>" );
						return false;
					}
					P.buffer = this;
					GlobalFuncs.to_chat( Task13.User, "<span class='confirm'>A green light flashes, and the device appears in the multitool buffer.</span>" );
					update_mt_menu = true;
				}
				Interface13.Stat( null, href_list.Contains( "flush" ) );

				if ( false ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='confirm'>A green light flashes, and the device disappears from the multitool buffer.</span>" );
					P.buffer = null;
					update_mt_menu = true;
				}
				ret = this.multitool_topic( Task13.User, href_list, P.buffer );

				if ( ret == -1 ) {
					return true;
				}

				if ( ( ret & 1 ) != 0 ) {
					update_mt_menu = true;
				}

				if ( ( ret & 2 ) != 0 ) {
					re_init = true;
				}

				if ( re_init ) {
					this.initialize();
				}

				if ( update_mt_menu ) {
					this.update_multitool_menu( Task13.User );
					return true;
				}
			}
			return false;
		}

		// Function from file: machinery.dm
		public virtual int multitool_topic( Mob user = null, ByTable href_list = null, dynamic O = null ) {
			string newid = null;
			dynamic newfreq = null;

			Interface13.Stat( null, href_list.Contains( "set_id" ) );

			if ( false ) {
				Interface13.Stat( null, this.vars.Contains( "id_tag" ) );

				if ( !false ) {
					Game13.log.WriteMsg( "## WARNING: " + ( "set_id: " + this.type + " has no id_tag var." ) );
				}
				newid = String13.SubStr( GlobalFuncs.reject_bad_text( Interface13.Input( Task13.User, "Specify the new ID tag for this machine", this, ((dynamic)this).id_tag, null, InputType.Str | InputType.Null ) ), 1, 1024 );

				if ( Lang13.Bool( newid ) ) {
					((dynamic)this).id_tag = newid;
					return 3;
				}
			}
			Interface13.Stat( null, href_list.Contains( "set_freq" ) );

			if ( false ) {
				Interface13.Stat( null, this.vars.Contains( "frequency" ) );

				if ( !false ) {
					Game13.log.WriteMsg( "## WARNING: " + ( "set_freq: " + this.type + " has no frequency var." ) );
					return 0;
				}
				newfreq = ((dynamic)this).frequency;

				if ( href_list["set_freq"] != "-1" ) {
					newfreq = String13.ParseNumber( href_list["set_freq"] );
				} else {
					newfreq = Interface13.Input( Task13.User, "Specify a new frequency (GHz). Decimals assigned automatically.", this, ((dynamic)this).frequency, null, InputType.Num | InputType.Null );
				}

				if ( Lang13.Bool( newfreq ) ) {
					
					if ( String13.FindIgnoreCase( String13.NumberToString( Convert.ToDouble( newfreq ) ), ".", 1, 0 ) != 0 ) {
						newfreq *= 10;
					}

					if ( Convert.ToDouble( newfreq ) < 10000 ) {
						((dynamic)this).frequency = newfreq;
						return 3;
					}
				}
			}
			return 0;
		}

		// Function from file: machinery.dm
		public bool auto_use_power(  ) {
			
			if ( !Lang13.Bool( this.powered( this.power_channel ) ) ) {
				return false;
			}

			switch ((int)( this.use_power )) {
				case 1:
					this.f_use_power( this.idle_power_usage, this.power_channel );
					break;
				case 2:
					this.f_use_power( this.active_power_usage, this.power_channel );
					break;
			}
			return true;
		}

		// Function from file: buynsell.dm
		public virtual bool connect_account( Mob user = null, dynamic W = null, dynamic appdatum = null ) {
			dynamic I = null;

			
			if ( W is Obj_Item_Weapon_Card ) {
				
				if ( !( this.linked_db != null ) ) {
					this.reconnect_database();
				}

				if ( this.linked_db != null ) {
					
					if ( this.linked_account != null ) {
						I = W;
						this.scan_card( I );
					} else {
						GlobalFuncs.to_chat( user, new Txt().icon( this ).str( "<span class='warning'>Unable to connect to linked account.</span>" ).ToString() );
					}
				} else {
					GlobalFuncs.to_chat( user, new Txt().icon( this ).str( "<span class='warning'>Unable to connect to accounts database.</span>" ).ToString() );
				}
			}
			return false;
		}

		// Function from file: buynsell.dm
		public virtual bool scan_card( dynamic user = null, dynamic C = null, dynamic appdatum = null ) {
			return false;
		}

		// Function from file: buynsell.dm
		public void reconnect_database(  ) {
			Obj_Machinery_AccountDatabase DB = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.account_DBs, typeof(Obj_Machinery_AccountDatabase) )) {
				DB = _a;
				

				if ( DB.z == this.z || DB.z == 1 ) {
					
					if ( DB.stat == 0 ) {
						this.linked_db = DB;
						break;
					}
				}
			}
			return;
		}

	}

}
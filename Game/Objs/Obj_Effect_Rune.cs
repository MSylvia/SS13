// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Rune : Obj_Effect {

		public int visibility = 0;
		public bool dead = false;
		public dynamic word1 = null;
		public dynamic word2 = null;
		public dynamic word3 = null;
		public Image blood_image = null;
		public Dynamic_Overlay c_animation = null;
		public bool nullblock = false;
		public Mob ajourn = null;
		public bool summoning = false;
		public ByTable summonturfs = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.unacidable = true;
			this.icon = "icons/obj/rune.dmi";
			this.icon_state = "1";
		}

		// Function from file: ritual.dm
		public Obj_Effect_Rune ( dynamic loc = null ) : base( (object)(loc) ) {
			Mob_Living_Silicon_Ai AI = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.blood_image = new Image( null, this );
			this.blood_image.v_override = true;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Silicon_Ai) )) {
				AI = _a;
				

				if ( AI.client != null ) {
					AI.client.images.Add( this.blood_image );
				}
			}
			GlobalVars.rune_list.Add( this );
			GlobalVars.stat_collection.cult.runes_written++;
			return;
		}

		// Function from file: runes.dm
		public override dynamic cultify(  ) {
			return null;
		}

		// Function from file: runes.dm
		public void armor(  ) {
			Mob user = null;
			dynamic mode_ticker = null;
			Mob K = null;
			Obj_Item_Clothing_Monkeyclothes_Cultrobes CR = null;
			Obj_Item_Clothing_Head_Culthood_Alt CH = null;
			Mob_Living M = null;
			dynamic mode_ticker2 = null;
			Mob_Living K2 = null;
			Obj_Item_Clothing_Monkeyclothes_Cultrobes CR2 = null;
			Obj_Item_Clothing_Head_Culthood_Alt CH2 = null;
			dynamic construct_class = null;
			ByTable construct_types = null;
			Mob_Living_SimpleAnimal_Construct_Armoured C = null;
			Mob_Living_SimpleAnimal_Construct_Wraith C2 = null;
			Mob_Living_SimpleAnimal_Construct_Builder C3 = null;
			Mob_Living_SimpleAnimal_Construct_Harvester C4 = null;
			ByTable construct_types2 = null;
			Mob_Living_SimpleAnimal_Construct_Armoured C5 = null;
			Mob_Living_SimpleAnimal_Construct_Wraith C6 = null;
			Mob_Living_SimpleAnimal_Construct_Builder C7 = null;

			user = Task13.User;

			if ( !( this is Obj_Effect_Rune ) ) {
				Task13.User.__CallVerb("Whisper", "Sa tatha najin" );

				if ( user is Mob_Living_Carbon_Human ) {
					Task13.User.visible_message( "<span class='warning'> In flash of red light, a set of armor appears on " + Task13.User + "...</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that you are now wearing a set of armor.</span>" );
					mode_ticker = GlobalVars.ticker.mode;

					if ( mode_ticker is GameMode_Cult && mode_ticker.narsie_condition_cleared || GlobalVars.universe.name == "Hell Rising" ) {
						user.equip_to_slot_or_del( new Obj_Item_Clothing_Head_Helmet_Space_Cult( user ), 11 );
						user.equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Space_Cult( user ), 13 );
					} else {
						user.equip_to_slot_or_del( new Obj_Item_Clothing_Head_Culthood_Alt( user ), 11 );
						user.equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Cultrobes_Alt( user ), 13 );
					}
					user.equip_to_slot_or_del( new Obj_Item_Clothing_Shoes_Cult( user ), 12 );
					user.equip_to_slot_or_del( new Obj_Item_Weapon_Storage_Backpack_Cultpack( user ), 1 );
					user.put_in_hands( new Obj_Item_Weapon_Melee_Cultblade( user ) );
				} else if ( user is Mob_Living_Carbon_Monkey ) {
					K = user;
					K.visible_message( "<span class='warning'> The rune disappears with a flash of red light, " + K + " now looks like the cutest of all followers of Nar-Sie...</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that you are now wearing a set of armor. Might not offer much protection due to its size though.</span>" );

					if ( !( ((dynamic)K).uniform is Obj_Item_Clothing_Monkeyclothes_Cultrobes ) ) {
						CR = new Obj_Item_Clothing_Monkeyclothes_Cultrobes( user.loc );
						((Mob_Living_Carbon_Monkey)K).wearclothes( CR );
					}

					if ( !( ((dynamic)K).hat is Obj_Item_Clothing_Head_Culthood_Alt ) ) {
						CH = new Obj_Item_Clothing_Head_Culthood_Alt( user.loc );
						((Mob_Living_Carbon_Monkey)K).wearhat( CH );
					}
					K.equip_to_slot_or_del( new Obj_Item_Weapon_Storage_Backpack_Cultpack( K ), 1 );
					K.put_in_hands( new Obj_Item_Weapon_Melee_Cultblade( K ) );
				}
				return;
			} else {
				Task13.User.say( "Sa tatha najin" );

				foreach (dynamic _c in Lang13.Enumerate( this.loc, typeof(Mob_Living) )) {
					M = _c;
					

					if ( GlobalFuncs.iscultist( M ) ) {
						
						if ( M is Mob_Living_Carbon_Human ) {
							M.visible_message( "<span class='warning'> In flash of red light, and a set of armor appears on " + M + "...</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that you are now wearing a set of armor.</span>" );
							mode_ticker2 = GlobalVars.ticker.mode;

							if ( mode_ticker2 is GameMode_Cult && mode_ticker2.narsie_condition_cleared || GlobalVars.universe.name == "Hell Rising" ) {
								M.equip_to_slot_or_del( new Obj_Item_Clothing_Head_Helmet_Space_Cult( M ), 11 );
								M.equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Space_Cult( M ), 13 );
							} else {
								M.equip_to_slot_or_del( new Obj_Item_Clothing_Head_Culthood_Alt( M ), 11 );
								M.equip_to_slot_or_del( new Obj_Item_Clothing_Suit_Cultrobes_Alt( M ), 13 );
							}
							M.equip_to_slot_or_del( new Obj_Item_Clothing_Shoes_Cult( M ), 12 );
							M.equip_to_slot_or_del( new Obj_Item_Weapon_Storage_Backpack_Cultpack( M ), 1 );
							M.put_in_hands( new Obj_Item_Weapon_Melee_Cultblade( M ) );
						} else if ( M is Mob_Living_Carbon_Monkey ) {
							K2 = M;
							K2.visible_message( "<span class='warning'> The rune disappears with a flash of red light, " + K2 + " now looks like the cutest of all followers of Nar-Sie...</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that you are now wearing a set of armor. Might not offer much protection due to its size though.</span>" );
							CR2 = new Obj_Item_Clothing_Monkeyclothes_Cultrobes( this.loc );
							((Mob_Living_Carbon_Monkey)K2).wearclothes( CR2 );
							CH2 = new Obj_Item_Clothing_Head_Culthood_Alt( this.loc );
							((Mob_Living_Carbon_Monkey)K2).wearhat( CH2 );
							K2.equip_to_slot_or_del( new Obj_Item_Weapon_Storage_Backpack_Cultpack( K2 ), 1 );
							K2.put_in_hands( new Obj_Item_Weapon_Melee_Cultblade( K2 ) );
						} else if ( M is Mob_Living_SimpleAnimal_Construct ) {
							construct_class = null;

							if ( GlobalVars.universe.name == "Hell Rising" ) {
								construct_types = new ByTable(new object [] { "Artificer", "Wraith", "Juggernaut", "Harvester" });
								construct_class = Interface13.Input( "Please choose which type of construct you wish " + M + " to become.", "Construct Transformation", null, null, construct_types, InputType.Any );

								dynamic _a = construct_class; // Was a switch-case, sorry for the mess.
								if ( _a=="Juggernaut" ) {
									C = new Mob_Living_SimpleAnimal_Construct_Armoured( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C, "<B>You are now a Juggernaut. Though slow, your shell can withstand extreme punishment, create temporary walls and even deflect energy weapons, and rip apart enemies and walls alike.</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C.mind );
								} else if ( _a=="Wraith" ) {
									C2 = new Mob_Living_SimpleAnimal_Construct_Wraith( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C2 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C2, "<B>You are a now Wraith. Though relatively fragile, you are fast, deadly, and even able to phase through walls.</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C2.mind );
								} else if ( _a=="Artificer" ) {
									C3 = new Mob_Living_SimpleAnimal_Construct_Builder( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C3 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C3, "<B>You are now an Artificer. You are incredibly weak and fragile, but you are able to construct new floors and walls, to break some walls apart, to repair allied constructs (by clicking on them), </B><I>and most important of all create new constructs</I><B> (Use your Artificer spell to summon a new construct shell and Summon Soulstone to create a new soulstone).</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C3.mind );
								} else if ( _a=="Harvester" ) {
									C4 = new Mob_Living_SimpleAnimal_Construct_Harvester( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C4 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C4, "<B>You are now an Harvester. You are as fast and powerful as Wraiths, but twice as durable.<br>No living (or dead) creature can hide from your eyes, and no door or wall shall place itself between you and your victims.<br>Your role consists of neutralizing any non-cultist living being in the area and transport them to Nar-Sie. To do so, place yourself above an incapacited target and use your \"Harvest\" spell." );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C4.mind );
								}
							} else {
								construct_types2 = new ByTable(new object [] { "Artificer", "Wraith", "Juggernaut" });
								construct_class = Interface13.Input( "Please choose which type of construct you wish " + M + " to become.", "Construct Transformation", null, null, construct_types2, InputType.Any );

								dynamic _b = construct_class; // Was a switch-case, sorry for the mess.
								if ( _b=="Juggernaut" ) {
									C5 = new Mob_Living_SimpleAnimal_Construct_Armoured( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C5 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C5, "<B>You are now a Juggernaut. Though slow, your shell can withstand extreme punishment, create temporary walls and even deflect energy weapons, and rip apart enemies and walls alike.</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C5.mind );
								} else if ( _b=="Wraith" ) {
									C6 = new Mob_Living_SimpleAnimal_Construct_Wraith( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C6 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C6, "<B>You are a now Wraith. Though relatively fragile, you are fast, deadly, and even able to phase through walls.</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C6.mind );
								} else if ( _b=="Artificer" ) {
									C7 = new Mob_Living_SimpleAnimal_Construct_Builder( GlobalFuncs.get_turf( this.loc ) );
									M.mind.transfer_to( C7 );
									GlobalFuncs.qdel( M );
									M = null;
									GlobalFuncs.to_chat( C7, "<B>You are now an Artificer. You are incredibly weak and fragile, but you are able to construct new floors and walls, to break some walls apart, to repair allied constructs (by clicking on them), </B><I>and most important of all create new constructs</I><B> (Use your Artificer spell to summon a new construct shell and Summon Soulstone to create a new soulstone).</B>" );
									((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( C7.mind );
								}
							}
						}
						GlobalFuncs.qdel( this );
						return;
					} else {
						GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Only the followers of Nar-Sie may be given their armor.</span>" );
						GlobalFuncs.to_chat( M, "<span class='warning'>Only the followers of Nar-Sie may be given their armor.</span>" );
					}
				}
			}
			GlobalFuncs.to_chat( user, "<span class='note'>You have to be standing on top of the rune.</span>" );
			return;
		}

		// Function from file: runes.dm
		public void runestun( dynamic T = null ) {
			Mob_Living L = null;
			dynamic TU = null;
			Mob_Living C = null;
			Mob_Living S = null;

			Task13.User.say( "Fuu ma" + Rand13.Pick(new object [] { "'", "`" }) + "jin!" );

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ), typeof(Mob_Living) )) {
				L = _b;
				
				this.nullblock = false;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, L ) )) {
					TU = _a;
					
					this.findNullRod( TU );
				}

				if ( !this.nullblock ) {
					
					if ( L is Mob_Living_Carbon ) {
						C = L;
						Icon13.Flick( "e_flash", C.flash );

						if ( Convert.ToDouble( C.stuttering ) < 1 && !C.mutations.Contains( 4 ) ) {
							C.stuttering = 1;
						}
						C.Weaken( 1 );
						C.Stun( 1 );
						C.visible_message( "<span class='warning'>The rune explodes in a bright flash.</span>" );
					} else if ( L is Mob_Living_Silicon ) {
						S = L;
						S.Weaken( 5 );
						S.visible_message( "<span class='warning'>BZZZT... The rune has exploded in a bright flash.</span>" );
					}
				}
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: runes.dm
		public void burningblood(  ) {
			int culcount = 0;
			Mob_Living_Carbon C = null;
			Obj_Effect_Rune R = null;
			Mob_Living M = null;
			dynamic T = null;
			Obj_Effect_Decal_Cleanable_Blood B = null;
			Mob_Living M2 = null;
			dynamic T2 = null;

			culcount = 0;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living_Carbon) )) {
				C = _a;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					culcount++;
				}
			}

			if ( culcount >= 5 ) {
				
				foreach (dynamic _c in Lang13.Enumerate( GlobalVars.rune_list, typeof(Obj_Effect_Rune) )) {
					R = _c;
					

					if ( R.blood_DNA == this.blood_DNA ) {
						
						foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( R, 2 ), typeof(Mob_Living) )) {
							M = _b;
							
							M.take_overall_damage( 0, 15 );

							if ( R.invisibility > M.see_invisible ) {
								GlobalFuncs.to_chat( M, "<span class='warning'>Aargh it burns!</span>" );
							} else {
								GlobalFuncs.to_chat( M, "<span class='warning'>The rune suddenly ignites, burning you!</span>" );
							}
							T = GlobalFuncs.get_turf( R );
							((Tile)T).hotspot_expose( 700, 125, null, true );
						}
					}
				}

				foreach (dynamic _e in Lang13.Enumerate( typeof(Game13), typeof(Obj_Effect_Decal_Cleanable_Blood) )) {
					B = _e;
					

					if ( B.blood_DNA == this.blood_DNA ) {
						
						foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( B, 1 ), typeof(Mob_Living) )) {
							M2 = _d;
							
							M2.take_overall_damage( 0, 5 );
							GlobalFuncs.to_chat( M2, "<span class='warning'>The blood suddenly ignites, burning you!</span>" );
							T2 = GlobalFuncs.get_turf( B );
							((Tile)T2).hotspot_expose( 700, 125, null, true );
							GlobalFuncs.qdel( B );
						}
					}
				}
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: runes.dm
		public void bloodboil(  ) {
			int culcount = 0;
			Mob_Living C = null;
			Mob_Living_Carbon M = null;
			dynamic T = null;
			Obj_Effect_Rune R = null;
			Mob_Living_Carbon_Human C2 = null;

			culcount = 0;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				C = _a;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					culcount++;
				}
			}

			if ( culcount >= 3 ) {
				
				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, Task13.User ), typeof(Mob_Living_Carbon) )) {
					M = _c;
					

					if ( GlobalFuncs.iscultist( M ) ) {
						continue;
					}
					this.nullblock = false;

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( 1, M ) )) {
						T = _b;
						
						this.findNullRod( T );
					}

					if ( this.nullblock ) {
						continue;
					}
					M.take_overall_damage( 51, 51 );
					GlobalFuncs.to_chat( M, "<span class='warning'>Your blood boils!</span>" );

					if ( Rand13.PercentChance( 5 ) ) {
						Task13.Schedule( 5, (Task13.Closure)(() => {
							M.gib();
							return;
						}));
					}
				}

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInView( null, this ), typeof(Obj_Effect_Rune) )) {
					R = _d;
					

					if ( Rand13.PercentChance( 10 ) ) {
						GlobalFuncs.explosion( R.loc, -1, 0, 1, 5 );
					}
				}

				foreach (dynamic _e in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living_Carbon_Human) )) {
					C2 = _e;
					

					if ( GlobalFuncs.iscultist( C2 ) && !Lang13.Bool( C2.stat ) ) {
						C2.say( "Dedo ol" + Rand13.Pick(new object [] { "'", "`" }) + "btoh!" );
						C2.take_overall_damage( 15, 0 );
					}
				}
				GlobalFuncs.qdel( this );
			} else {
				this.fizzle(); return;
			}
			return;
		}

		// Function from file: runes.dm
		public void blind(  ) {
			int affected = 0;
			Mob_Living_Carbon C = null;
			dynamic T = null;

			affected = 0;

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ), typeof(Mob_Living_Carbon) )) {
				C = _b;
				

				if ( GlobalFuncs.iscultist( C ) ) {
					continue;
				}
				this.nullblock = false;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, C ) )) {
					T = _a;
					
					this.findNullRod( T );
				}

				if ( this.nullblock ) {
					continue;
				}
				C.eye_blurry += 50;
				C.eye_blind += 20;

				if ( Rand13.PercentChance( 5 ) ) {
					C.disabilities |= 1;

					if ( Rand13.PercentChance( 10 ) ) {
						C.sdisabilities |= 1;
					}
				}
				GlobalFuncs.to_chat( C, "<span class='warning'>Suddenly you see red flash that blinds you.</span>" );
				affected++;
			}

			if ( affected != 0 ) {
				Task13.User.say( "Sti" + Rand13.Pick(new object [] { "'", "`" }) + " kaliesin!" );
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The rune flashes, blinding those who not follow the Nar-Sie, and dissipates into fine dust.</span>" );
				GlobalFuncs.qdel( this );
			} else {
				this.fizzle(); return;
			}
			return;
		}

		// Function from file: runes.dm
		public void deafen(  ) {
			int affected = 0;
			Mob_Living_Carbon C = null;
			dynamic T = null;

			affected = 0;

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( this, 7 ), typeof(Mob_Living_Carbon) )) {
				C = _b;
				

				if ( GlobalFuncs.iscultist( C ) ) {
					continue;
				}
				this.nullblock = false;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, C ) )) {
					T = _a;
					
					this.findNullRod( T );
				}

				if ( this.nullblock ) {
					continue;
				}
				C.ear_deaf += 50;
				C.show_message( "<span class='warning'>The world around you suddenly becomes quiet.</span>" );
				affected++;

				if ( Rand13.PercentChance( 1 ) ) {
					C.sdisabilities |= 4;
				}
			}

			if ( affected != 0 ) {
				Task13.User.say( "Sti" + Rand13.Pick(new object [] { "'", "`" }) + " kaliedir!" );
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The world becomes quiet as the deafening rune dissipates into fine dust.</span>" );
				GlobalFuncs.qdel( this );
			} else {
				this.fizzle(); return;
			}
			return;
		}

		// Function from file: runes.dm
		public void cultsummon(  ) {
			Mob user = null;
			ByTable cultists = null;
			Mind H = null;
			ByTable users = null;
			Mob_Living C = null;
			dynamic cultist = null;
			dynamic T = null;
			Mob_Living_Carbon_Human C2 = null;
			string text = null;
			Mob_Living L = null;

			user = Task13.User;
			cultists = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.cult, typeof(Mind) )) {
				H = _a;
				

				if ( H.current is Mob_Living_Carbon ) {
					cultists.Add( H.current );
				}
			}
			users = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				C = _b;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					users.Add( C );
				}
			}

			if ( users.len >= 3 ) {
				cultist = Interface13.Input( "Choose the one who you want to summon", "Followers of Geometer", null, null, cultists - user, InputType.Null | InputType.Any );

				if ( !Lang13.Bool( cultist ) ) {
					this.fizzle(); return;
				}

				if ( cultist == user ) {
					return;
				}

				if ( Lang13.Bool( cultist.locked_to ) || Lang13.Bool( cultist.handcuffed ) || !( cultist.loc is Tile ) && !( cultist.loc is Obj_Structure_Closet ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>You cannot summon the " + cultist + ", for his shackles of blood are strong</span>" );
					this.fizzle(); return;
				}
				T = GlobalFuncs.get_turf( cultist );
				((Tile)T).turf_animation( "icons/effects/effects.dmi", "rune_teleport" );
				cultist.loc = this.loc;
				cultist.lying = true;
				((Mob)cultist).regenerate_icons();
				GlobalFuncs.to_chat( T, this.visible_message( "<span class='warning'>" + cultist + " suddenly disappears in a flash of red light!</span>" ) );

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living_Carbon_Human) )) {
					C2 = _c;
					

					if ( GlobalFuncs.iscultist( C2 ) && !Lang13.Bool( C2.stat ) ) {
						C2.say( "N'ath reth sh'yro eth d" + Rand13.Pick(new object [] { "'", "`" }) + "rekkathnor!" );
						C2.take_overall_damage( 15, 0 );

						if ( C2 != cultist ) {
							GlobalFuncs.to_chat( C2, "<span class='warning'>Your body take its toll as you drag your fellow cultist through dimensions.</span>" );
						} else {
							GlobalFuncs.to_chat( C2, "<span class='warning'>You feel a sharp pain as your body gets dragged through dimensions.</span>" );
						}
					}
				}
				user.visible_message( "<span class='warning'>The rune disappears with a flash of red light, and in its place now a body lies.</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that now instead of the rune there's a body.</span>", "<span class='warning'>You hear a pop and smell ozone.</span>" );
				GlobalFuncs.qdel( this );
			} else {
				text = "<span class='sinister'>The following individuals are living and conscious followers of the Geometer of Blood:</span>";

				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living) )) {
					L = _d;
					

					if ( L.stat != 2 ) {
						
						if ( Lang13.Bool( GlobalVars.ticker.mode.cult.Contains( L.mind ) ) ) {
							text += "<br><b>" + L + "</b>";
						}
					}
				}
				GlobalFuncs.to_chat( user, text );
				user.say( "N'ath reth!" );
				return;
			}
			this.fizzle(); return;
		}

		// Function from file: runes.dm
		public void freedom(  ) {
			Mob user = null;
			ByTable cultists = null;
			Mind H = null;
			ByTable users = null;
			Mob_Living C = null;
			ByTable possible_targets = null;
			Mob_Living_Carbon cultistarget = null;
			Ent_Static closet = null;
			Ent_Static secure_closet = null;
			Ent_Static dna_scannernew = null;
			dynamic cultist = null;
			Ent_Static closet2 = null;
			Ent_Static secure_closet2 = null;
			Ent_Static dna_scannernew2 = null;
			Mob_Living_Carbon C2 = null;
			string text = null;
			Mob_Living_Carbon cultist2 = null;

			user = Task13.User;
			cultists = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.cult, typeof(Mind) )) {
				H = _a;
				

				if ( H.current is Mob_Living_Carbon ) {
					cultists.Add( H.current );
				}
			}
			users = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				C = _b;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					users.Add( C );
				}
			}
			possible_targets = new ByTable();

			foreach (dynamic _c in Lang13.Enumerate( cultists - users, typeof(Mob_Living_Carbon) )) {
				cultistarget = _c;
				

				if ( Lang13.Bool( cultistarget.handcuffed ) ) {
					possible_targets.Add( cultistarget );
				} else if ( Lang13.Bool( cultistarget.legcuffed ) ) {
					possible_targets.Add( cultistarget );
				} else if ( cultistarget.wear_mask is Obj_Item_Clothing_Mask_Muzzle ) {
					possible_targets.Add( cultistarget );
				} else if ( cultistarget.loc is Obj_Structure_Closet ) {
					closet = cultistarget.loc;

					if ( Lang13.Bool( ((dynamic)closet).welded ) ) {
						possible_targets.Add( cultistarget );
					}
				} else if ( cultistarget.loc is Obj_Structure_Closet_SecureCloset ) {
					secure_closet = cultistarget.loc;

					if ( Lang13.Bool( ((dynamic)secure_closet).locked ) ) {
						possible_targets.Add( cultistarget );
					}
				} else if ( cultistarget.loc is Obj_Machinery_DnaScannernew ) {
					dna_scannernew = cultistarget.loc;

					if ( Lang13.Bool( ((dynamic)dna_scannernew).locked ) ) {
						possible_targets.Add( cultistarget );
					}
				}
			}

			if ( !( possible_targets.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>None of the cultists are currently under restraints.</span>" );
				this.fizzle(); return;
			}

			if ( users.len >= 3 ) {
				cultist = Interface13.Input( "Choose the one who you want to free", "Followers of Geometer", null, null, possible_targets, InputType.Null | InputType.Any );

				if ( !Lang13.Bool( cultist ) ) {
					this.fizzle(); return;
				}

				if ( cultist == user ) {
					return;
				}

				if ( !( Lang13.Bool( cultist.locked_to ) || Lang13.Bool( cultist.handcuffed ) || cultist.wear_mask is Obj_Item_Clothing_Mask_Muzzle || cultist.loc is Obj_Structure_Closet && Lang13.Bool( ((dynamic)cultist.loc).welded ) || cultist.loc is Obj_Structure_Closet_SecureCloset && Lang13.Bool( ((dynamic)cultist.loc).locked ) || cultist.loc is Obj_Machinery_DnaScannernew && Lang13.Bool( ((dynamic)cultist.loc).locked ) ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>The " + cultist + " is already free.</span>" );
					return;
				}
				((Ent_Dynamic)cultist).unlock_from();

				if ( Lang13.Bool( cultist.handcuffed ) ) {
					cultist.handcuffed.loc = cultist.loc;
					cultist.handcuffed = null;
					((Mob)cultist).update_inv_handcuffed();
				}

				if ( Lang13.Bool( cultist.legcuffed ) ) {
					cultist.legcuffed.loc = cultist.loc;
					cultist.legcuffed = null;
					((Mob)cultist).update_inv_legcuffed();
				}

				if ( cultist.wear_mask is Obj_Item_Clothing_Mask_Muzzle ) {
					((Mob)cultist).u_equip( cultist.wear_mask, true );
				}

				if ( cultist.loc is Obj_Structure_Closet ) {
					closet2 = cultist.loc;

					if ( Lang13.Bool( ((dynamic)closet2).welded ) ) {
						((dynamic)closet2).welded = 0;
					}
				}

				if ( cultist.loc is Obj_Structure_Closet_SecureCloset ) {
					secure_closet2 = cultist.loc;

					if ( Lang13.Bool( ((dynamic)secure_closet2).locked ) ) {
						((dynamic)secure_closet2).locked = 0;
					}
				}

				if ( cultist.loc is Obj_Machinery_DnaScannernew ) {
					dna_scannernew2 = cultist.loc;

					if ( Lang13.Bool( ((dynamic)dna_scannernew2).locked ) ) {
						((dynamic)dna_scannernew2).locked = 0;
					}
				}

				foreach (dynamic _d in Lang13.Enumerate( users, typeof(Mob_Living_Carbon) )) {
					C2 = _d;
					
					((dynamic)user).take_overall_damage( 10, 0 );
					C2.say( "Khari" + Rand13.Pick(new object [] { "'", "`" }) + "d! Gual'te nikka!" );
				}
				GlobalFuncs.to_chat( cultist, "<span class='warning'>You feel a tingle as you find yourself freed from your restraints.</span>" );
				GlobalFuncs.qdel( this );
			} else {
				text = "<span class='sinister'>The following cultists are currently under restraints:</span>";

				foreach (dynamic _e in Lang13.Enumerate( possible_targets, typeof(Mob_Living_Carbon) )) {
					cultist2 = _e;
					
					text += "<br><b>" + cultist2 + "</b>";
				}
				GlobalFuncs.to_chat( user, text );
				user.say( "Khari" + Rand13.Pick(new object [] { "'", "`" }) + "d!" );
				return;
			}
			this.fizzle(); return;
		}

		// Function from file: runes.dm
		public void wall(  ) {
			Mob user = null;

			Task13.User.say( "Khari" + Rand13.Pick(new object [] { "'", "`" }) + "d! Eske'te tannin!" );
			this.density = !this.density;
			user = Task13.User;
			((dynamic)user).take_organ_damage( 2, 0 );

			if ( this.density ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Your blood flows into the rune, and you feel that the very space over the rune thickens.</span>" );
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Your blood flows into the rune, and you feel as the rune releases its grasp on space.</span>" );
			}
			return;
		}

		// Function from file: runes.dm
		public void revealrunes( Obj_Effect_Rune W = null ) {
			bool go = false;
			int rad = 0;
			bool S = false;
			Obj_Effect_Rune R = null;
			dynamic V = null;
			dynamic V2 = null;

			go = false;
			S = false;

			if ( W is Obj_Effect_Rune ) {
				rad = 6;
				go = true;
			}

			if ( W is Obj_Item_Weapon_Paper_Talisman ) {
				rad = 4;
				go = true;
			}

			if ( W is Obj_Item_Weapon_Nullrod ) {
				rad = 1;
				go = true;
			}

			if ( go ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, rad ), typeof(Obj_Effect_Rune) )) {
					R = _a;
					

					if ( R != this ) {
						R.visibility = 15;
					}
					S = true;
				}
			}

			if ( S ) {
				
				if ( W is Obj_Item_Weapon_Nullrod ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Arcane markings suddenly glow from underneath a thin layer of dust!</span>" );
					return;
				}

				if ( W is Obj_Effect_Rune ) {
					Task13.User.say( "Nikt" + Rand13.Pick(new object [] { "'", "`" }) + "o barada kla'atu!" );

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
						V = _b;
						
						V.show_message( "<span class='warning'>The rune turns into red dust, revealing the surrounding runes.</span>", 1 );
					}
					GlobalFuncs.qdel( this );
					return;
				}

				if ( W is Obj_Item_Weapon_Paper_Talisman ) {
					Task13.User.__CallVerb("Whisper", "Nikt" + Rand13.Pick(new object [] { "'", "`" }) + "o barada kla'atu!" );
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Your talisman turns into red dust, revealing the surrounding runes.</span>" );

					foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( Task13.User.loc, 1 ) )) {
						V2 = _c;
						

						if ( V2 != Task13.User ) {
							V2.show_message( "<span class='warning'>Red dust emanates from " + Task13.User + "'s hands for a moment.</span>", 1 );
						}
					}
					return;
				}
				return;
			}

			if ( W is Obj_Effect_Rune ) {
				this.fizzle(); return;
			}

			if ( W is Obj_Item_Weapon_Paper_Talisman ) {
				Lang13.Call( typeof(Obj_Effect_Rune).GetMethod( "fizzle" ) );
				return;
			}
			return;
		}

		// Function from file: runes.dm
		public void sacrifice(  ) {
			ByTable cultsinrange = null;
			string ritualresponse = null;
			bool sacrificedone = false;
			Mob_Living C = null;
			dynamic T = null;
			dynamic cult_round = null;
			Ent_Static A = null;
			int satisfaction = 0;
			Ent_Static M = null;
			Ent_Static B = null;
			dynamic O = null;
			Ent_Static I = null;
			dynamic N = null;
			Ent_Static R = null;
			dynamic N2 = null;
			Ent_Static D = null;
			dynamic T2 = null;
			Mob_Living C2 = null;
			Mob_Living C3 = null;

			cultsinrange = new ByTable();
			ritualresponse = "";
			sacrificedone = false;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				C = _a;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					cultsinrange.Add( C );
					C.say( "Barhah hra zar" + Rand13.Pick(new object [] { "'", "`" }) + "garis!" );
				}
			}
			this.nullblock = false;

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( 1, this ) )) {
				T = _b;
				
				this.findNullRod( T );
			}

			if ( this.nullblock ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The presence of a null rod is perturbing the ritual.</span>" );
				return;
			}
			cult_round = GlobalFuncs.find_active_mode( "cult" );

			foreach (dynamic _d in Lang13.Enumerate( this.loc, typeof(Ent_Static) )) {
				A = _d;
				

				if ( GlobalFuncs.iscultist( A ) ) {
					continue;
				}
				satisfaction = 0;

				if ( A is Mob_Living_Carbon || A is Mob_Living_SimpleAnimal ) {
					M = A;

					if ( Lang13.Bool( cult_round ) && ((dynamic)M).mind == cult_round.sacrifice_target ) {
						
						if ( cultsinrange.len >= 3 ) {
							cult_round.sacrificed.Add( ((dynamic)M).mind );
							((dynamic)M).gib();
							sacrificedone = true;
							this.invocation( "rune_sac" );
							ritualresponse += "The Geometer of Blood gladly accepts this sacrifice, your objective is now complete.";
							Task13.Schedule( 10, (Task13.Closure)(() => {
								((GameMode_Cult)cult_round).additional_phase();
								return;
							}));
						} else {
							ritualresponse += "You need more cultists to perform the ritual and complete your objective.";
						}
					} else if ( Convert.ToInt32( ((dynamic)M).stat ) != 2 ) {
						
						if ( cultsinrange.len >= 3 ) {
							
							if ( Lang13.Bool( ((dynamic)M).mind ) ) {
								ritualresponse += "The Geometer of Blood gladly accepts this sacrifice.";
								satisfaction = 100;
							} else {
								ritualresponse += "The Geometer of Blood accepts this being in sacrifice. Somehow you get the feeling that beings with souls would make a better offering.";
								satisfaction = 50;
							}
							sacrificedone = true;
							this.invocation( "rune_sac" );
							((dynamic)M).gib();
						} else {
							ritualresponse += "The victim is still alive, you will need more cultists chanting for the sacrifice to succeed.";
						}
					} else {
						
						if ( Lang13.Bool( ((dynamic)M).mind ) ) {
							ritualresponse += "The Geometer of Blood accepts this sacrifice.";
							satisfaction = 50;
						} else {
							ritualresponse += "The Geometer of Blood accepts your meager sacrifice.";
							satisfaction = 10;
						}
						sacrificedone = true;
						this.invocation( "rune_sac" );
						((dynamic)M).gib();
					}
				} else if ( A is Mob_Living_Silicon_Robot ) {
					B = A;
					O = Lang13.FindIn( typeof(Obj_Item_Device_Mmi), B );

					if ( Lang13.Bool( O ) ) {
						
						if ( Lang13.Bool( cult_round ) && O.brainmob.mind == cult_round.sacrifice_target ) {
							
							if ( cultsinrange.len >= 3 ) {
								cult_round.sacrificed.Add( O.brainmob.mind );
								ritualresponse += "The Geometer of Blood accepts this sacrifice, your objective is now complete.";
								sacrificedone = true;
								this.invocation( "rune_sac" );
								((dynamic)B).dust();
								Task13.Schedule( 10, (Task13.Closure)(() => {
									((GameMode_Cult)cult_round).additional_phase();
									return;
								}));
							} else {
								ritualresponse += "You need more cultists to perform the ritual and complete your objective.";
							}
						} else if ( Convert.ToInt32( ((dynamic)B).stat ) != 2 ) {
							
							if ( cultsinrange.len >= 3 ) {
								ritualresponse += "The Geometer of Blood accepts to destroy that pile of machinery.";
								sacrificedone = true;
								this.invocation( "rune_sac" );
								((dynamic)B).dust();
							} else {
								ritualresponse += "That machine is still working, you will need more cultists chanting for the sacrifice to destroy it.";
							}
						} else {
							ritualresponse += "The Geometer of Blood accepts to destroy that pile of machinery.";
							sacrificedone = true;
							this.invocation( "rune_sac" );
							((dynamic)B).dust();
						}
					}
				} else if ( A is Obj_Item_Device_Mmi ) {
					I = A;
					N = ((dynamic)I).brainmob;

					if ( Lang13.Bool( N ) ) {
						
						if ( Lang13.Bool( cult_round ) && N.mind == cult_round.sacrifice_target ) {
							ritualresponse += "You need to place that brain back inside a body before you can complete your objective.";
						} else {
							ritualresponse += "The Geometer of Blood accepts to destroy that pile of machinery.";
							sacrificedone = true;
							this.invocation( "rune_sac" );
							I.on_fire = true;
							I.ashify();
						}
					}
				} else if ( A is Obj_Item_Organ_Brain ) {
					R = A;
					N2 = ((dynamic)R).brainmob;

					if ( Lang13.Bool( N2 ) ) {
						
						if ( Lang13.Bool( cult_round ) && N2.mind == cult_round.sacrifice_target ) {
							ritualresponse += "You need to place that brain back inside a body before you can complete your objective.";
						} else {
							ritualresponse += "The Geometer of Blood accepts to destroy that brain.";
							sacrificedone = true;
							this.invocation( "rune_sac" );
							R.on_fire = true;
							R.ashify();
						}
					}
				} else if ( A is Obj_Item_Device_Aicard ) {
					D = A;
					T2 = Lang13.FindIn( typeof(Mob_Living_Silicon_Ai), D );

					if ( Lang13.Bool( T2 ) ) {
						
						if ( Lang13.Bool( cult_round ) && T2.mind == cult_round.sacrifice_target ) {
							cult_round.sacrificed.Add( T2.mind );
							ritualresponse += "With a sigh, the Geometer of Blood accepts this sacrifice, your objective is now complete.";
							Task13.Schedule( 10, (Task13.Closure)(() => {
								((GameMode_Cult)cult_round).additional_phase();
								return;
							}));
						} else {
							ritualresponse += "The Geometer of Blood accepts to destroy that piece of technological garbage.";
						}
						sacrificedone = true;
						this.invocation( "rune_sac" );
						D.on_fire = true;
						D.ashify();
					}
				} else {
					continue;
				}

				foreach (dynamic _c in Lang13.Enumerate( cultsinrange, typeof(Mob_Living) )) {
					C2 = _c;
					

					if ( ritualresponse != "" ) {
						GlobalFuncs.to_chat( C2, "<span class='sinister'>" + ritualresponse + "</span>" );

						if ( Rand13.PercentChance( satisfaction ) ) {
							((GameMode)GlobalVars.ticker.mode).grant_runeword( C2 );
						}
					}
				}
			}

			if ( !sacrificedone ) {
				
				foreach (dynamic _e in Lang13.Enumerate( cultsinrange, typeof(Mob_Living) )) {
					C3 = _e;
					
					GlobalFuncs.to_chat( C3, "<span class='warning'>There is nothing fit for sacrifice on the rune.</span>" );
				}
			}
			return;
		}

		// Function from file: runes.dm
		public bool communicate(  ) {
			bool _default = false;

			Mob user = null;
			dynamic input = null;
			Mind H = null;
			Mob_Dead_Observer O = null;

			_default = true;
			user = Task13.User;
			input = GlobalFuncs.stripped_input( user, "Please choose a message to tell to the other acolytes.", "Voice of Blood", "" );

			if ( !Lang13.Bool( input ) ) {
				
				if ( this is Obj_Effect_Rune ) {
					this.fizzle();
					return false;
				} else {
					return false;
				}
			}

			if ( this is Obj_Effect_Rune ) {
				user.say( "O bidai nabora se" + Rand13.Pick(new object [] { "'", "`" }) + "sma!" );
			} else {
				user.__CallVerb("Whisper", "O bidai nabora se" + Rand13.Pick(new object [] { "'", "`" }) + "sma!" );
			}

			if ( this is Obj_Effect_Rune ) {
				user.say( "" + input );
			} else {
				user.__CallVerb("Whisper", "" + input );
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ticker.mode.cult, typeof(Mind) )) {
				H = _a;
				

				if ( Lang13.Bool( H.current ) ) {
					GlobalFuncs.to_chat( H.current, "<span class='game say'><b>" + user.real_name + "</b>'s voice echoes in your head, <B><span class='sinister'>" + input + "</span></B></span>" );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
				O = _b;
				
				GlobalFuncs.to_chat( O, "<span class='game say'><b>" + user.real_name + "</b> communicates, <span class='sinister'>" + input + "</span></span>" );
			}
			GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]CULT: " + ( "" + GlobalFuncs.key_name( user ) + " Cult Communicate Rune: " + input ) ) );
			GlobalFuncs.qdel( this );
			return true;
		}

		// Function from file: runes.dm
		public void mend(  ) {
			Mob user = null;

			user = Task13.User;
			Task13.Source = null;
			user.say( "Uhrast ka'hfa heldsagen ver" + Rand13.Pick(new object [] { "'", "`" }) + "lot!" );
			((dynamic)user).take_overall_damage( 200, 0 );
			GlobalVars.runedec += 10;
			user.visible_message( "<span class='warning'>" + user + " keels over dead, his blood glowing blue as it escapes his body and dissipates into thin air.</span>", "<span class='warning'>In the last moment of your humble life, you feel an immense pain as fabric of reality mends... with your blood.</span>", "<span class='warning'>You hear faint rustle.</span>" );

			while (user.stat == 2) {
				Task13.Sleep( 600 );

				if ( !( user != null ) ) {
					return;
				}
			}
			GlobalVars.runedec -= 10;
			return;
		}

		// Function from file: runes.dm
		public void talisman(  ) {
			Obj_Item_Weapon_Paper newtalisman = null;
			bool unsuitable_newtalisman = false;
			Obj_Item_Weapon_Paper P = null;
			Obj_Effect_Rune imbued_from = null;
			Obj_Item_Weapon_Paper_Talisman T = null;
			Obj_Effect_Rune R = null;
			dynamic V = null;

			unsuitable_newtalisman = false;

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Item_Weapon_Paper) )) {
				P = _a;
				

				if ( !Lang13.Bool( P.info ) ) {
					newtalisman = P;
					break;
				} else {
					unsuitable_newtalisman = true;
				}
			}

			if ( !( newtalisman != null ) ) {
				
				if ( unsuitable_newtalisman ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The blank is tainted. It is unsuitable.</span>" );
				}
				this.fizzle(); return;
			}

			if ( newtalisman is Obj_Item_Weapon_Paper_Nano ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>This piece of technologically advanced paper is unsuitable.</span>" );
				this.fizzle(); return;
			}
			imbued_from = null;
			T = null;

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Obj_Effect_Rune) )) {
				R = _b;
				

				if ( R == this ) {
					continue;
				}

				if ( R.word1 == GlobalVars.cultwords["travel"] && R.word2 == GlobalVars.cultwords["self"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "" + R.word3;
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["see"] && R.word2 == GlobalVars.cultwords["blood"] && R.word3 == GlobalVars.cultwords["hell"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "newtome";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["destroy"] && R.word2 == GlobalVars.cultwords["see"] && R.word3 == GlobalVars.cultwords["technology"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "emp";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["blood"] && R.word2 == GlobalVars.cultwords["see"] && R.word3 == GlobalVars.cultwords["destroy"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "conceal";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["hell"] && R.word2 == GlobalVars.cultwords["destroy"] && R.word3 == GlobalVars.cultwords["other"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "armor";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["blood"] && R.word2 == GlobalVars.cultwords["see"] && R.word3 == GlobalVars.cultwords["hide"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "revealrunes";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["hide"] && R.word2 == GlobalVars.cultwords["other"] && R.word3 == GlobalVars.cultwords["see"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "deafen";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["destroy"] && R.word2 == GlobalVars.cultwords["see"] && R.word3 == GlobalVars.cultwords["other"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "blind";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["self"] && R.word2 == GlobalVars.cultwords["other"] && R.word3 == GlobalVars.cultwords["technology"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "communicate";
					imbued_from = R;
					break;
				}

				if ( R.word1 == GlobalVars.cultwords["join"] && R.word2 == GlobalVars.cultwords["hide"] && R.word3 == GlobalVars.cultwords["technology"] ) {
					T = new Obj_Item_Weapon_Paper_Talisman( this.loc );
					T.imbue = "runestun";
					imbued_from = R;
					break;
				}
			}

			if ( imbued_from != null ) {
				
				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					V = _c;
					
					V.show_message( "<span class='warning'>The runes turn into dust, which then forms into an arcane image on the paper.</span>", 1 );
				}
				Task13.User.say( "H'drak v" + Rand13.Pick(new object [] { "'", "`" }) + "loso, mir'kanas verbot!" );
				GlobalFuncs.qdel( imbued_from );
				GlobalFuncs.qdel( newtalisman );
				this.invocation( "rune_imbue" );
			} else {
				Task13.User.say( "H'drak v" + Rand13.Pick(new object [] { "'", "`" }) + "loso, mir'kanas verbot!" );
				Task13.User.show_message( "&lt;span class='warning'>The markings pulse with a small burst of light, then fall dark.</span>", 1, "<span class='warning'>You hear a faint fizzle.</span>", 2 );
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You remembered the words correctly, but the rune isn't working properly. Maybe you're missing something in the ritual.</span>" );
			}
			return;
		}

		// Function from file: runes.dm
		public void manifest(  ) {
			Obj_Effect_Rune this_rune = null;
			Mob_Dead_Observer ghost = null;
			Mob_Dead_Observer O = null;
			Mob_Living_Carbon_Human_Manifested D = null;
			Dynamic_Overlay animation = null;
			bool chose_name = false;
			Obj_Item_Weapon_Paper P = null;
			dynamic cult_round = null;
			Mob user = null;

			this_rune = this;
			Task13.Source = null;

			if ( Task13.User.loc != this_rune.loc ) {
				this_rune.fizzle(); return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this_rune.loc, typeof(Mob_Dead_Observer) )) {
				O = _a;
				

				if ( !( O.client != null ) ) {
					continue;
				}

				if ( O.mind != null && Lang13.Bool( O.mind.current ) && Convert.ToInt32( O.mind.current.stat ) != 2 ) {
					continue;
				}
				ghost = O;
				break;
			}

			if ( !( ghost != null ) ) {
				this_rune.fizzle(); return;
			}

			if ( Lang13.Bool( GlobalFuncs.jobban_isbanned( ghost, "cultist" ) ) ) {
				this_rune.fizzle(); return;
			}
			Task13.User.say( "Gal'h'rfikk harfrandid mud" + Rand13.Pick(new object [] { "'", "`" }) + "gib!" );
			D = new Mob_Living_Carbon_Human_Manifested( this_rune.loc );
			D.key = ghost.key;
			D.icon = null;
			D.invisibility = 101;
			D.canmove = false;
			animation = null;
			Task13.User.visible_message( "<span class='warning'> A shape forms in the center of the rune. A shape of... a man.<BR>The world feels blury as your soul permeates this temporary body.</span>", "<span class='warning'> A shape forms in the center of the rune. A shape of... a man.</span>", "<span class='warning'>You hear liquid flowing.</span>" );
			animation = new Dynamic_Overlay( D.loc );
			animation.layer = Task13.User.layer + 1;
			animation.icon_state = "blank";
			animation.icon = "icons/mob/mob.dmi";
			animation.master = this_rune;
			Icon13.Flick( "appear-hm", animation );
			Task13.Sleep( 5 );
			D.invisibility = 0;
			Task13.Sleep( 10 );
			D.real_name = "Unknown";
			chose_name = false;

			foreach (dynamic _b in Lang13.Enumerate( this_rune.loc, typeof(Obj_Item_Weapon_Paper) )) {
				P = _b;
				

				if ( Lang13.Bool( P.info ) ) {
					D.real_name = String13.SubStr( P.info, 1, 26 );
					chose_name = true;
					break;
				}
			}

			if ( !chose_name ) {
				D.real_name = "" + Rand13.PickFromTable( GlobalVars.first_names_male ) + " " + Rand13.PickFromTable( GlobalVars.last_names );
			}
			D.status_flags &= 61439;
			cult_round = GlobalFuncs.find_active_mode( "cult" );

			if ( Lang13.Bool( cult_round ) ) {
				((GameMode)cult_round).add_cultist( D.mind );
			} else {
				GlobalVars.ticker.mode.cult += D.mind;
			}
			((GameMode)GlobalVars.ticker.mode).update_cult_icons_added( D.mind );
			D.canmove = true;
			animation.master = null;
			GlobalFuncs.qdel( animation );
			D.mind.special_role = "Cultist";
			GlobalFuncs.to_chat( D, "<span class='sinister'>Your blood pulses. Your head throbs. The world goes red. All at once you are aware of a horrible, horrible truth. The veil of reality has been ripped away and in the festering wound left behind something sinister takes root.</span>" );
			GlobalFuncs.to_chat( D, "<span class='sinister'>Assist your new compatriots in their dark dealings. Their goal is yours, and yours is theirs. You serve the Dark One above all else. Bring It back.</span>" );
			GlobalFuncs.to_chat( D, "<span class='sinister'>You can now speak and understand the forgotten tongue of the occult.</span>" );
			D.add_language( "Cult" );
			user = Task13.User;

			while (this_rune != null && user != null && user.stat == 0 && user.client != null && user.loc == this_rune.loc) {
				((dynamic)user).take_organ_damage( 1, 0 );
				Task13.Sleep( 30 );
			}

			if ( D != null ) {
				D.visible_message( "<span class='warning'>" + D + " slowly dissipates into dust and bones.</span>", "<span class='warning'>You feel pain, as bonds formed between your soul and this homunculus break.</span>", "<span class='warning'>You hear faint rustle.</span>" );
				D.dust();
			}
			return;
		}

		// Function from file: runes.dm
		public void ajourney(  ) {
			Mob L = null;

			
			if ( Task13.User.loc == this.loc ) {
				L = Task13.User;
				Task13.User.say( "Fwe" + Rand13.Pick(new object [] { "'", "`" }) + "sh mah erl nyag r'ya!" );
				Task13.User.visible_message( new Txt( "<span class='warning'>" ).item( Task13.User ).str( "'s eyes glow blue as " ).he_she_it_they().str( " freezes in place, absolutely motionless.</span>" ).ToString(), "<span class='warning'>The shadow that is your spirit separates itself from your body. You are now in the realm beyond. While this is a great sight, being here strains your mind and body. Hurry...</span>", "<span class='warning'>You hear only complete silence for a moment.</span>" );
				Task13.User.ghostize( true );
				L.ajourn = this;
				this.ajourn = L;

				while (L != null) {
					
					if ( Lang13.Bool( L.key ) ) {
						L.ajourn = null;
						this.ajourn = null;
						return;
					} else {
						((dynamic)L).take_organ_damage( 10, 0 );
					}
					Task13.Sleep( 100 );
				}
			}
			this.fizzle(); return;
		}

		// Function from file: runes.dm
		public void obscure( int rad = 0 ) {
			bool S = false;
			Obj_Effect_Rune R = null;
			dynamic V = null;
			dynamic V2 = null;

			S = false;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, rad ), typeof(Obj_Effect_Rune) )) {
				R = _a;
				

				if ( R != this ) {
					R.invisibility = 60;
				}
				S = true;
			}

			if ( S ) {
				
				if ( this is Obj_Effect_Rune ) {
					Task13.User.say( "Kla" + Rand13.Pick(new object [] { "'", "`" }) + "atu barada nikt'o!" );

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
						V = _b;
						
						V.show_message( "<span class='warning'>The rune turns into gray dust, veiling the surrounding runes.</span>" );
					}
					GlobalFuncs.qdel( this );
				} else {
					Task13.User.__CallVerb("Whisper", "Kla" + Rand13.Pick(new object [] { "'", "`" }) + "atu barada nikt'o!" );
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>Your talisman turns into gray dust, veiling the surrounding runes.</span>" );

					foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ) )) {
						V2 = _c;
						

						if ( V2 != Task13.User ) {
							V2.show_message( "<span class='warning'>Dust emanates from " + Task13.User + "'s hands for a moment.</span>" );
						}
					}
				}
				return;
			}

			if ( this is Obj_Effect_Rune ) {
				this.fizzle(); return;
			} else {
				Lang13.Call( typeof(Obj_Effect_Rune).GetMethod( "fizzle" ) );
				return;
			}
		}

		// Function from file: runes.dm
		public void raise(  ) {
			Mob_Living_Carbon_Human corpse_to_raise = null;
			Mob_Living_Carbon_Human body_to_sacrifice = null;
			dynamic cult_round = null;
			bool is_sacrifice_target = false;
			Mob_Living_Carbon_Human M = null;
			Obj_Effect_Rune R = null;
			Mob_Living_Carbon_Human N = null;
			dynamic T = null;
			Mob_Dead_Observer ghost = null;
			Mob_Dead_Observer O = null;

			cult_round = GlobalFuncs.find_active_mode( "cult" );
			is_sacrifice_target = false;

			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Mob_Living_Carbon_Human) )) {
				M = _a;
				

				if ( M.stat == 2 ) {
					
					if ( Lang13.Bool( cult_round ) && M.mind == cult_round.sacrifice_target ) {
						is_sacrifice_target = true;
					} else {
						corpse_to_raise = M;

						if ( Lang13.Bool( M.key ) ) {
							M.ghostize( true );
						}
						break;
					}
				}
			}

			if ( !( corpse_to_raise != null ) ) {
				
				if ( is_sacrifice_target ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The Geometer of blood wants this mortal for himself.</span>" );
				}
				this.fizzle(); return;
			}
			is_sacrifice_target = false;

			foreach (dynamic _d in Lang13.Enumerate( GlobalVars.rune_list, typeof(Obj_Effect_Rune) )) {
				R = _d;
				

				if ( R.word1 == GlobalVars.cultwords["blood"] && R.word2 == GlobalVars.cultwords["join"] && R.word3 == GlobalVars.cultwords["hell"] ) {
					string _loop_ctrl_1 = null;

					foreach (dynamic _c in Lang13.Enumerate( R.loc, typeof(Mob_Living_Carbon_Human) )) {
						N = _c;
						

						if ( Lang13.Bool( cult_round ) && N.mind != null && N.mind == cult_round.sacrifice_target ) {
							is_sacrifice_target = true;
						} else if ( N.stat != 2 ) {
							this.nullblock = false;

							foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRange( 1, N ) )) {
								T = _b;
								
								this.findNullRod( T );
							}

							if ( this.nullblock ) {
								this.fizzle(); return;
							} else {
								body_to_sacrifice = N;
								_loop_ctrl_1 = "break";
								break;
							}
						}
					}

					if ( _loop_ctrl_1 == "break" ) {
						break;
					} else if ( _loop_ctrl_1 == "continue" ) {
						continue;
					}
				}
			}

			if ( !( body_to_sacrifice != null ) ) {
				
				if ( is_sacrifice_target ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The Geometer of blood wants that corpse for himself.</span>" );
				} else {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The sacrifical corpse is not dead. You must free it from this world of illusions before it may be used.</span>" );
				}
				this.fizzle(); return;
			}
			ghost = null;

			foreach (dynamic _e in Lang13.Enumerate( this.loc, typeof(Mob_Dead_Observer) )) {
				O = _e;
				

				if ( !( O.client != null ) ) {
					continue;
				}

				if ( O.mind != null && Lang13.Bool( O.mind.current ) && Convert.ToInt32( O.mind.current.stat ) != 2 ) {
					continue;
				}
				ghost = O;
				break;
			}

			if ( !( ghost != null ) ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You require a restless spirit which clings to this world. Beckon their prescence with the sacred chants of Nar-Sie.</span>" );
				this.fizzle(); return;
			}
			corpse_to_raise.revive();
			corpse_to_raise.key = ghost.key;
			Task13.User.say( "Pasnar val'keriam usinar. Savrae ines amutan. Yam'toth remium il'tarat!" );
			corpse_to_raise.visible_message( "<span class='warning'>" + corpse_to_raise + "'s eyes glow with a faint red as he stands up, slowly starting to breathe again.</span>", "<span class='warning'>Life... I am alive again...</span>", "<span class='warning'>You hear a faint, slightly familiar whisper.</span>" );
			body_to_sacrifice.visible_message( "<span class='warning'>" + body_to_sacrifice + " is torn apart, a black smoke swiftly dissipating from his remains!</span>", "<span class='warning'>You feel as your blood boils, tearing you apart.</span>", "<span class='warning'>You hear a thousand voices, all crying in pain.</span>" );
			body_to_sacrifice.gib();
			GlobalFuncs.to_chat( corpse_to_raise, "<span class='sinister'>Your blood pulses. Your head throbs. The world goes red. All at once you are aware of a horrible, horrible truth. The veil of reality has been ripped away and in the festering wound left behind something sinister takes root.</span>" );
			GlobalFuncs.to_chat( corpse_to_raise, "<span class='sinister'>Assist your new compatriots in their dark dealings. Their goal is yours, and yours is theirs. You serve the Dark One above all else. Bring It back.</span>" );
			return;
		}

		// Function from file: runes.dm
		public void seer(  ) {
			
			if ( Task13.User.loc == this.loc ) {
				
				if ( Task13.User.seer ) {
					Task13.User.say( "Rash'tla sektath mal" + Rand13.Pick(new object [] { "'", "`" }) + "zua. Zasan therium viortia." );
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The world beyond fades from your vision.</span>" );
					Task13.User.see_invisible = 25;
					Task13.User.seer = false;
				} else if ( Task13.User.see_invisible != 25 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The world beyond flashes your eyes but disappears quickly, as if something is disrupting your vision.</span>" );
					Task13.User.see_invisible = 60;
					Task13.User.seer = false;
				} else {
					Task13.User.say( "Rash'tla sektath mal" + Rand13.Pick(new object [] { "'", "`" }) + "zua. Zasan therium vivira. Itonis al'ra matum!" );
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The world beyond opens to your eyes.</span>" );
					Task13.User.see_invisible = 60;
					Task13.User.seer = true;
				}
				return;
			}
			Task13.User.say( "Rash'tla sektath mal" + Rand13.Pick(new object [] { "'", "`" }) + "zua. Zasan therium vivira. Itonis al'ra matum!" );
			Task13.User.show_message( "&lt;span class='warning'>The markings pulse with a small burst of light, then fall dark.</span>", 1, "<span class='warning'>You hear a faint fizzle.</span>", 2 );
			GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You remembered the words correctly, but the rune isn't reacting. Maybe you should position yourself differently.</span>" );
			return;
		}

		// Function from file: runes.dm
		public void drain(  ) {
			int drain = 0;
			Obj_Effect_Rune R = null;
			Mob_Living_Carbon D = null;
			dynamic T = null;
			int bdrain = 0;
			Mob user = null;

			drain = 0;

			foreach (dynamic _c in Lang13.Enumerate( GlobalVars.rune_list, typeof(Obj_Effect_Rune) )) {
				R = _c;
				

				if ( R.word1 == GlobalVars.cultwords["travel"] && R.word2 == GlobalVars.cultwords["blood"] && R.word3 == GlobalVars.cultwords["self"] ) {
					
					foreach (dynamic _b in Lang13.Enumerate( R.loc, typeof(Mob_Living_Carbon) )) {
						D = _b;
						

						if ( D.stat != 2 ) {
							this.nullblock = false;

							foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, D ) )) {
								T = _a;
								
								this.findNullRod( T );
							}

							if ( !this.nullblock ) {
								bdrain = Rand13.Int( 1, 25 );
								GlobalFuncs.to_chat( D, "<span class='warning'>You feel weakened.</span>" );
								D.take_overall_damage( bdrain, 0 );
								drain += bdrain;
							}
						}
					}
				}
			}

			if ( !( drain != 0 ) ) {
				this.fizzle(); return;
			}
			Task13.User.say( "Yu" + Rand13.Pick(new object [] { "'", "`" }) + "gular faras desdae. Havas mithum javara. Umathar uf'kal thenar!" );
			Task13.User.visible_message( "<span class='warning'>Blood flows from the rune into " + Task13.User + "!</span>", "<span class='warning'>The blood starts flowing from the rune and into your frail mortal body. You feel... empowered.</span>", "<span class='warning'>You hear a liquid flowing.</span>" );
			user = Task13.User;

			if ( user.bhunger != 0 ) {
				user.bhunger = Num13.MaxInt( user.bhunger - drain * 2, 0 );
			}

			if ( drain >= 50 ) {
				user.visible_message( "<span class='warning'>" + user + "'s eyes give off eerie red glow!</span>", "<span class='warning'>...but it wasn't nearly enough. You crave, crave for more. The hunger consumes you from within.</span>", "<span class='warning'>You hear a heartbeat.</span>" );
				user.bhunger += drain;
				Task13.Source = user;
				Task13.Schedule( 0, (Task13.Closure)(() => {
					
					while (user.bhunger > 0) {
						Task13.Sleep( 50 );
						((dynamic)user).take_overall_damage( 3, 0 );
						user.bhunger--;
					}
					return;
				}));
				return;
			}
			((dynamic)user).heal_organ_damage( drain % 5, 0 );
			drain -= drain % 5;

			while (drain > 0) {
				Task13.Sleep( 2 );
				((dynamic)user).heal_organ_damage( 5, 0 );
				drain -= 5;
			}
			return;
		}

		// Function from file: runes.dm
		public void emp( Ent_Static U = null, int range_red = 0 ) {
			dynamic T = null;
			Obj_Effect_Rune rune = null;

			
			if ( this is Obj_Effect_Rune ) {
				Task13.User.say( "Ta'gh fara" + Rand13.Pick(new object [] { "'", "`" }) + "qha fel d'amar det!" );
			} else {
				Task13.User.__CallVerb("Whisper", "Ta'gh fara" + Rand13.Pick(new object [] { "'", "`" }) + "qha fel d'amar det!" );
			}
			GlobalFuncs.playsound( U, "sound/items/welder2.ogg", 25, 1 );
			T = GlobalFuncs.get_turf( U );

			if ( Lang13.Bool( T ) ) {
				((Tile)T).hotspot_expose( 700, 125, null, true );
			}
			rune = this;
			GlobalFuncs.empulse( U, range_red - 2, range_red );
			GlobalFuncs.qdel( rune );
			return;
		}

		// Function from file: runes.dm
		public void updatetear( int currentCountdown = 0 ) {
			ByTable active_cultists = null;
			dynamic M = null;
			dynamic T = null;
			Obj_Effect_Summoning S = null;
			dynamic M2 = null;
			dynamic M3 = null;
			dynamic M4 = null;
			dynamic M5 = null;

			
			if ( !this.summoning ) {
				this.summonturfs = new ByTable();
				return;
			}
			this.summonturfs = new ByTable();
			active_cultists = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 1 ) )) {
				M = _a;
				

				if ( GlobalFuncs.iscultist( M ) && !Lang13.Bool( M.stat ) ) {
					active_cultists.Add( M );
					T = GlobalFuncs.get_turf( M );
					this.summonturfs.Add( T );

					if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Effect_Summoning), T ) ) ) {
						S = new Obj_Effect_Summoning( T );
						S.init( this );
					}
				}
			}

			if ( active_cultists.len < 9 ) {
				this.summoning = false;
				this.summonturfs = new ByTable();

				foreach (dynamic _b in Lang13.Enumerate( active_cultists )) {
					M2 = _b;
					
					GlobalFuncs.to_chat( M2, "<span class='warning'>The ritual has been disturbed. All summoners need to stay by the rune.</span>" );
				}
				return;
			}

			if ( currentCountdown <= 0 ) {
				
				if ( this.z != GlobalVars.map.zMainStation ) {
					
					foreach (dynamic _c in Lang13.Enumerate( active_cultists )) {
						M3 = _c;
						
						((Ent_Dynamic)M3).say( "Tok-lyr rqa'nap g" + Rand13.Pick(new object [] { "'", "`" }) + "lt-ulotf!" );
					}
					this.summonturfs = new ByTable();
					this.summoning = false;

					foreach (dynamic _d in Lang13.Enumerate( active_cultists )) {
						M4 = _d;
						
						GlobalFuncs.to_chat( M4, "<span class='sinister'>THE GEOMETER OF BLOOD IS HIGHLY DISAPOINTED WITH YOUR INABILITY TO PERFORM THE RITUAL IN ITS REQUESTED LOCATION.</span>" );
						((Mob)M4).gib();
					}
				} else {
					
					foreach (dynamic _e in Lang13.Enumerate( active_cultists )) {
						M5 = _e;
						
						((Ent_Dynamic)M5).say( "Tok-lyr rqa'nap g" + Rand13.Pick(new object [] { "'", "`" }) + "lt-ulotf!" );
					}
					GlobalVars.ticker.mode.eldergod = false;
					this.summonturfs = new ByTable();
					this.summoning = false;
					new Obj_Machinery_Singularity_Narsie_Large( this.loc );
					GlobalVars.stat_collection.cult.narsie_summoned = true;
				}
				return;
			}
			currentCountdown--;
			Task13.Sleep( 10 );
			this.updatetear( currentCountdown );
			return;
		}

		// Function from file: runes.dm
		public void tearreality(  ) {
			ByTable active_cultists = null;
			int ghostcount = 0;
			dynamic M = null;
			dynamic M2 = null;
			dynamic cult_round = null;
			dynamic M3 = null;
			dynamic M4 = null;
			dynamic M5 = null;

			
			if ( this.summoning ) {
				return;
			}
			active_cultists = new ByTable();
			ghostcount = 0;

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 1 ) )) {
				M = _a;
				

				if ( GlobalFuncs.iscultist( M ) && !Lang13.Bool( M.stat ) ) {
					active_cultists.Add( M );

					if ( M is Mob_Living_Carbon_Human_Manifested ) {
						ghostcount++;
					}
				}
			}

			if ( GlobalVars.universe.name == "Hell Rising" ) {
				
				foreach (dynamic _b in Lang13.Enumerate( active_cultists )) {
					M2 = _b;
					
					GlobalFuncs.to_chat( M2, "<span class='warning'>This plane of reality has already been torn into Nar-Sie's realm.</span>" );
				}
				return;
			}
			cult_round = GlobalFuncs.find_active_mode( "cult" );

			if ( GlobalVars.ticker.mode.eldergod ) {
				
				if ( !Lang13.Bool( cult_round ) || cult_round.narsie_condition_cleared ) {
					
					if ( active_cultists.len >= 9 ) {
						
						if ( this.z != GlobalVars.map.zMainStation ) {
							
							foreach (dynamic _c in Lang13.Enumerate( active_cultists )) {
								M3 = _c;
								
								GlobalFuncs.to_chat( M3, "<span class='danger'>YOU HAVE A TERRIBLE FEELING. IS SOMETHING WRONG WITH THE RITUAL?</span>" );
							}
						}
						this.summoning = true;
						GlobalFuncs.log_admin( "NAR-SIE SUMMONING: " + active_cultists.len + " are summoning Nar-Sie at (" + this.x + "," + this.y + "," + this.z + " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>JMP</a>). " + ( ghostcount * 5 + 6 ) + " seconds remaining." );
						GlobalFuncs.message_admins( "NAR-SIE SUMMONING: " + active_cultists.len + " are summoning Nar-Sie at (" + this.x + "," + this.y + "," + this.z + " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>JMP</a>). " + ( ghostcount * 5 + 6 ) + " seconds remaining." );
						this.updatetear( ghostcount * 5 + 6 );
						return;
					}
				} else {
					
					foreach (dynamic _d in Lang13.Enumerate( active_cultists )) {
						M4 = _d;
						
						GlobalFuncs.to_chat( M4, "<span class='sinister'>The Geometer of Blood has required of you to perform a certain task. This place cannot welcome him until this task has been cleared.</span>" );
					}
					return;
				}
			} else {
				
				foreach (dynamic _e in Lang13.Enumerate( active_cultists )) {
					M5 = _e;
					
					GlobalFuncs.to_chat( M5, "<span class='danger'>Nar-Sie has lost interest in this world.</span>" );
				}
				return;
			}
			this.fizzle(); return;
		}

		// Function from file: runes.dm
		public bool convert(  ) {
			dynamic cult_round = null;
			Mob_Living_Carbon M = null;
			dynamic T = null;
			dynamic T2 = null;

			cult_round = GlobalFuncs.find_active_mode( "cult" );

			foreach (dynamic _b in Lang13.Enumerate( this.loc, typeof(Mob_Living_Carbon) )) {
				M = _b;
				

				if ( GlobalFuncs.iscultist( M ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You cannot convert what is already a follower of Nar-Sie.</span>" );
					return false;
				}

				if ( M.stat == 2 ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You cannot convert the dead.</span>" );
					return false;
				}

				if ( !( M.mind != null ) ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>You cannot convert that which has no soul</span>" );
					return false;
				}

				if ( Lang13.Bool( cult_round ) && M.mind == cult_round.sacrifice_target ) {
					GlobalFuncs.to_chat( Task13.User, "<span class='warning'>The Geometer of blood wants this mortal for himself.</span>" );
					return false;
				}
				Task13.User.say( "Mah" + Rand13.Pick(new object [] { "'", "`" }) + "weyh pleggh at e'ntrath!" );
				this.nullblock = false;

				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( 1, M ) )) {
					T = _a;
					
					this.findNullRod( T );
				}

				if ( this.nullblock ) {
					Task13.User.visible_message( "<span class='warning'>Something is blocking the conversion!</span>" );
					return false;
				}
				this.invocation( "rune_convert" );
				M.visible_message( "<span class='warning'>" + M + " writhes in pain as the markings below him glow a bloody red.</span>", "<span class='danger'>AAAAAAHHHH!.</span>", "<span class='warning'>You hear an anguished scream.</span>" );

				if ( GlobalFuncs.is_convertable_to_cult( M.mind ) && !Lang13.Bool( GlobalFuncs.jobban_isbanned( M, "cultist" ) ) ) {
					((GameMode)GlobalVars.ticker.mode).add_cultist( M.mind );
					M.mind.special_role = "Cultist";
					GlobalFuncs.to_chat( M, "<span class='sinister'>Your blood pulses. Your head throbs. The world goes red. All at once you are aware of a horrible, horrible truth. The veil of reality has been ripped away and in the festering wound left behind something sinister takes root.</span>" );
					GlobalFuncs.to_chat( M, "<span class='sinister'>Assist your new compatriots in their dark dealings. Their goal is yours, and yours is theirs. You serve the Dark One above all else. Bring It back.</span>" );
					GlobalFuncs.to_chat( M, "<span class='sinister'>You can now speak and understand the forgotten tongue of the occult.</span>" );
					M.add_language( "Cult" );
					GlobalFuncs.log_admin( "" + Task13.User + "(" + String13.CKey( Task13.User.key ) + ") has converted " + M + " (" + String13.CKey( M.key ) + ") to the cult at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + M.loc.x + ";Y=" + M.loc.y + ";Z=" + M.loc.z + "'>(" + M.loc.x + ", " + M.loc.y + ", " + M.loc.z + ")</a>" );
					GlobalVars.stat_collection.cult.converted++;

					if ( M.client != null ) {
						Task13.Schedule( 600, (Task13.Closure)(() => {
							
							if ( M != null && !( M.client != null ) ) {
								T2 = GlobalFuncs.get_turf( M );
								GlobalFuncs.message_admins( "" + M + " (" + String13.CKey( M.key ) + ") ghosted/disconnected less than a minute after having been converted to the cult! (" + T2.x + "," + T2.y + "," + T2.z + " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + T2.x + ";Y=" + T2.y + ";Z=" + T2.z + "'>JMP</a>)" );
								GlobalFuncs.log_admin( "" + M + "(" + String13.CKey( M.key ) + ") ghosted/disconnected less than a minute after having been converted to the cult! (" + T2.x + "," + T2.y + "," + T2.z + " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + T2.x + ";Y=" + T2.y + ";Z=" + T2.z + "'>JMP</a>)" );
							}
							return;
						}));
					}
					return true;
				} else {
					
					if ( Lang13.Bool( GlobalFuncs.jobban_isbanned( M, "cultist" ) ) ) {
						M.Sleeping( 300 );
						GlobalFuncs.to_chat( Task13.User, "<span class='danger'>The ritual didn't work! Looks like this person just isn't suited to be part of our cult.</span>" );
						GlobalFuncs.to_chat( Task13.User, "<span class='notice'>It appears that the ritual at least put the target to sleep. Try to figure a way to deal with them before they wake up.</span>" );
					} else if ( M.weakened != 0 ) {
						GlobalFuncs.to_chat( Task13.User, "<span class='danger'>The ritual didn't work, either something is disrupting it, or this person just isn't suited to be part of our cult.</span>" );
						GlobalFuncs.to_chat( Task13.User, "<span class='danger'>You have to restrain him before the talisman's effects wear off!</span>" );
					}
					GlobalFuncs.to_chat( M, "<span class='sinister'>Your blood pulses. Your head throbs. The world goes red. All at once you are aware of a horrible, horrible truth. The veil of reality has been ripped away and in the festering wound left behind something sinister takes root.</span>" );
					GlobalFuncs.to_chat( M, "<span class='danger'>And you were able to force it out of your mind. You now know the truth, there's something horrible out there, stop it and its minions at all costs.</span>" );
					return false;
				}
			}
			Task13.User.say( "Mah" + Rand13.Pick(new object [] { "'", "`" }) + "weyh pleggh at e'ntrath!" );
			Task13.User.show_message( "<span class='warning'>The markings pulse with a small burst of light, then fall dark.</span>", 1, "<span class='warning'>You hear a faint fizzle.</span>", 2 );
			GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You remembered the words correctly, but the rune isn't working. Maybe your ritual is missing something important.</span>" );
			return false;
		}

		// Function from file: runes.dm
		public void tomesummon(  ) {
			
			if ( this is Obj_Effect_Rune ) {
				Task13.User.say( "N" + Rand13.Pick(new object [] { "'", "`" }) + "ath reth sh'yro eth d'raggathnor!" );
			} else {
				Task13.User.__CallVerb("Whisper", "N" + Rand13.Pick(new object [] { "'", "`" }) + "ath reth sh'yro eth d'raggathnor!" );
			}
			Task13.User.visible_message( "<span class='warning'>Rune disappears with a flash of red light, and in its place now a book lies.</span>", "<span class='warning'>You are blinded by the flash of red light! After you're able to see again, you see that now instead of the rune there's a book.</span>", "<span class='warning'>You hear a pop and smell ozone.</span>" );

			if ( this is Obj_Effect_Rune ) {
				new Obj_Item_Weapon_Tome( this.loc );
				this.invocation( "tome_spawn" );
			} else {
				new Obj_Item_Weapon_Tome( Task13.User.loc );
			}
			GlobalFuncs.qdel( this );
			GlobalVars.stat_collection.cult.tomes_created++;
			return;
		}

		// Function from file: runes.dm
		public void itemport( dynamic key = null ) {
			int culcount = 0;
			int runecount = 0;
			Obj_Effect_Rune IP = null;
			Mob user = null;
			dynamic swapping = null;
			Obj_Effect_Rune R = null;
			Mob_Living C = null;
			dynamic T1 = null;
			dynamic T2 = null;
			Obj O = null;
			dynamic M = null;
			Obj O2 = null;
			dynamic M2 = null;
			Obj O3 = null;
			dynamic M3 = null;

			culcount = 0;
			runecount = 0;
			IP = null;
			user = Task13.User;
			swapping = null;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.rune_list, typeof(Obj_Effect_Rune) )) {
				R = _a;
				

				if ( R == this ) {
					continue;
				}

				if ( R.word1 == GlobalVars.cultwords["travel"] && R.word2 == GlobalVars.cultwords["other"] && R.word3 == key ) {
					IP = R;
					runecount++;
				}
			}

			if ( runecount >= 2 ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You feel pain, as rune disappears in reality shift caused by too much wear of space-time fabric</span>" );

				if ( user is Mob_Living ) {
					((dynamic)user).take_overall_damage( 5, 0 );
				}
				GlobalFuncs.qdel( this );
			}

			foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Mob_Living) )) {
				C = _b;
				

				if ( GlobalFuncs.iscultist( C ) && !Lang13.Bool( C.stat ) ) {
					culcount++;
				}
			}

			if ( culcount >= 3 ) {
				user.say( "Sas" + Rand13.Pick(new object [] { "'", "`" }) + "so c'arta forbici tarem!" );
				this.nullblock = false;

				foreach (dynamic _c in Lang13.Enumerate( Map13.FetchInRange( 1, this ) )) {
					T1 = _c;
					
					this.findNullRod( T1 );
				}

				if ( this.nullblock ) {
					user.visible_message( "<span class='warning'>A nearby null rod seems to be blocking the transfer.</span>" );
					return;
				}

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInRange( 1, IP ) )) {
					T2 = _d;
					
					this.findNullRod( T2 );
				}

				if ( this.nullblock ) {
					user.visible_message( "<span class='warning'>A null rod seems to be blocking the transfer on the other side.</span>" );
					return;
				}
				user.visible_message( "<span class='warning'>You feel air moving from the rune - like as it was swapped with somewhere else.</span>", "<span class='warning'>You feel air moving from the rune - like as it was swapped with somewhere else.</span>", "<span class='warning'>You smell ozone.</span>" );
				swapping = new ByTable();

				foreach (dynamic _e in Lang13.Enumerate( IP.loc, typeof(Obj) )) {
					O = _e;
					

					if ( !Lang13.Bool( O.anchored ) ) {
						swapping += O;
					}
				}

				foreach (dynamic _f in Lang13.Enumerate( IP.loc )) {
					M = _f;
					
					swapping += M;
				}

				foreach (dynamic _g in Lang13.Enumerate( this.loc, typeof(Obj) )) {
					O2 = _g;
					

					if ( !Lang13.Bool( O2.anchored ) ) {
						O2.loc = IP.loc;
					}
				}

				foreach (dynamic _h in Lang13.Enumerate( this.loc )) {
					M2 = _h;
					
					M2.loc = IP.loc;
				}

				foreach (dynamic _i in Lang13.Enumerate( swapping, typeof(Obj) )) {
					O3 = _i;
					
					O3.loc = this.loc;
				}

				foreach (dynamic _j in Lang13.Enumerate( swapping )) {
					M3 = _j;
					
					M3.loc = this.loc;
				}
				swapping = 0;
				return;
			}
			this.fizzle(); return;
		}

		// Function from file: runes.dm
		public void teleport( dynamic key = null ) {
			Mob user = null;
			ByTable allrunesloc = null;
			int index = 0;
			Obj_Effect_Rune R = null;

			user = Task13.User;
			allrunesloc = new ByTable();
			index = 0;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.rune_list, typeof(Obj_Effect_Rune) )) {
				R = _a;
				

				if ( R == this ) {
					continue;
				}

				if ( R.word1 == GlobalVars.cultwords["travel"] && R.word2 == GlobalVars.cultwords["self"] && R.word3 == key && R.z != 2 ) {
					index++;
					allrunesloc.len = index;
					allrunesloc[index] = R.loc;
				}
			}

			if ( index >= 5 ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You feel pain, as rune disappears in reality shift caused by too much wear of space-time fabric</span>" );

				if ( user is Mob_Living ) {
					((dynamic)user).take_overall_damage( 5, 0 );
				}
				GlobalFuncs.qdel( this );
			}

			if ( allrunesloc != null && index != 0 ) {
				
				if ( this is Obj_Effect_Rune ) {
					user.say( "Sas" + Rand13.Pick(new object [] { "'", "`" }) + "so c'arta forbici!" );
				} else {
					user.__CallVerb("Whisper", "Sas" + Rand13.Pick(new object [] { "'", "`" }) + "so c'arta forbici!" );
				}

				if ( GlobalVars.universe.name != "Hell Rising" ) {
					user.visible_message( "<span class='warning'> " + user + " disappears in a flash of red light!</span>", "<span class='warning'>You feel as your body gets dragged through the dimension of Nar-Sie!</span>", "<span class='warning'>You hear a sickening crunch and sloshing of viscera.</span>" );
				} else {
					user.visible_message( "<span class='warning'> " + user + " disappears in a flash of red light!</span>", "<span class='warning'>You feel as your body gets dragged through a tunnel of viscera !</span>", "<span class='warning'>You hear a sickening crunch and sloshing of viscera.</span>" );
				}

				if ( this is Obj_Effect_Rune ) {
					this.invocation( "rune_teleport" );
				}
				user.loc = allrunesloc[Rand13.Int( 1, index )];
				return;
			}

			if ( this is Obj_Effect_Rune ) {
				this.fizzle(); return;
			} else {
				Lang13.Call( typeof(Obj_Effect_Rune).GetMethod( "fizzle" ) );
				return;
			}
		}

		// Function from file: runes.dm
		public void invocation( string animation_icon = null ) {
			this.c_animation = new Dynamic_Overlay( this.loc );
			this.c_animation.name = "cultification";
			this.c_animation.density = false;
			this.c_animation.anchored = 1;
			this.c_animation.icon = "icons/effects/effects.dmi";
			this.c_animation.layer = 5;
			this.c_animation.master = this.loc;
			this.c_animation.icon_state = "" + animation_icon;
			Icon13.Flick( "cultification", this.c_animation );
			Task13.Schedule( 10, (Task13.Closure)(() => {
				
				if ( this.c_animation != null ) {
					this.c_animation.master = null;
					GlobalFuncs.qdel( this.c_animation );
					this.c_animation = null;
				}
				return;
			}));
			return;
		}

		// Function from file: runes.dm
		public bool findNullRod( dynamic target = null ) {
			dynamic T = null;
			Ent_Static A = null;

			
			if ( target is Obj_Item_Weapon_Nullrod ) {
				T = GlobalFuncs.get_turf( target );
				this.nullblock = true;
				((Tile)T).turf_animation( "icons/effects/96x96.dmi", "nullding", -32, -32, 5, "sound/piano/Ab7.ogg" );
				return true;
			} else if ( Lang13.Bool( target.contents ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( target.contents, typeof(Ent_Static) )) {
					A = _a;
					
					this.findNullRod( A );
				}
			}
			return false;
		}

		// Function from file: ritual.dm
		public void check_icon(  ) {
			this.icon = GlobalFuncs.get_uristrune_cult( this.word1, this.word2, this.word3 );
			return;
		}

		// Function from file: ritual.dm
		public void fizzle(  ) {
			dynamic V = null;

			GlobalVars.stat_collection.cult.runes_fumbled++;

			if ( this is Obj_Effect_Rune ) {
				Task13.User.say( Rand13.Pick(new object [] { "B'ADMINES SP'WNIN SH'T", "IC'IN O'OC", "RO'SHA'M I'SA GRI'FF'N ME'AI", "TOX'IN'S O'NM FI'RAH", "IA BL'AME TOX'IN'S", "FIR'A NON'AN RE'SONA", "A'OI I'RS ROUA'GE", "LE'OAN JU'STA SP'A'C Z'EE SH'EF", "IA PT'WOBEA'RD, IA A'DMI'NEH'LP" }) );
			} else {
				Task13.User.__CallVerb("Whisper", Rand13.Pick(new object [] { "B'ADMINES SP'WNIN SH'T", "IC'IN O'OC", "RO'SHA'M I'SA GRI'FF'N ME'AI", "TOX'IN'S O'NM FI'RAH", "IA BL'AME TOX'IN'S", "FIR'A NON'AN RE'SONA", "A'OI I'RS ROUA'GE", "LE'OAN JU'STA SP'A'C Z'EE SH'EF", "IA PT'WOBEA'RD, IA A'DMI'NEH'LP" }) );
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
				V = _a;
				
				V.show_message( "<span class='warning'>The markings pulse with a small burst of light, then fall dark.</span>", 1, "<span class='warning'>You hear a faint fizzle.</span>", 2 );
			}
			return;
		}

		// Function from file: ritual.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( !GlobalFuncs.iscultist( a ) ) {
				GlobalFuncs.to_chat( a, "You can't mouth the arcane scratchings without fumbling over them." );
				return null;
			}

			if ( a.wear_mask is Obj_Item_Clothing_Mask_Muzzle ) {
				GlobalFuncs.to_chat( a, "You are unable to speak the words of the rune." );
				return null;
			}

			if ( !Lang13.Bool( this.word1 ) || !Lang13.Bool( this.word2 ) || !Lang13.Bool( this.word3 ) || Rand13.PercentChance( ((Mob_Living)a).getBrainLoss() ) ) {
				this.fizzle(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["travel"] && this.word2 == GlobalVars.cultwords["self"] ) {
				this.teleport( this.word3 ); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["see"] && this.word2 == GlobalVars.cultwords["blood"] && this.word3 == GlobalVars.cultwords["hell"] ) {
				this.tomesummon(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hell"] && this.word2 == GlobalVars.cultwords["destroy"] && this.word3 == GlobalVars.cultwords["other"] ) {
				this.armor(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["join"] && this.word2 == GlobalVars.cultwords["blood"] && this.word3 == GlobalVars.cultwords["self"] ) {
				return this.convert();
			}

			if ( this.word1 == GlobalVars.cultwords["hell"] && this.word2 == GlobalVars.cultwords["join"] && this.word3 == GlobalVars.cultwords["self"] ) {
				this.tearreality(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["destroy"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["technology"] ) {
				this.emp( this.loc, 3 ); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["travel"] && this.word2 == GlobalVars.cultwords["blood"] && this.word3 == GlobalVars.cultwords["self"] ) {
				this.drain(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["see"] && this.word2 == GlobalVars.cultwords["hell"] && this.word3 == GlobalVars.cultwords["join"] ) {
				this.seer(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["blood"] && this.word2 == GlobalVars.cultwords["join"] && this.word3 == GlobalVars.cultwords["hell"] ) {
				this.raise(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hide"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["blood"] ) {
				this.obscure( 4 ); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hell"] && this.word2 == GlobalVars.cultwords["travel"] && this.word3 == GlobalVars.cultwords["self"] ) {
				this.ajourney(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["blood"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["travel"] ) {
				this.manifest(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hell"] && this.word2 == GlobalVars.cultwords["technology"] && this.word3 == GlobalVars.cultwords["join"] ) {
				this.talisman(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hell"] && this.word2 == GlobalVars.cultwords["blood"] && this.word3 == GlobalVars.cultwords["join"] ) {
				this.sacrifice(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["blood"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["hide"] ) {
				this.revealrunes( this ); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["destroy"] && this.word2 == GlobalVars.cultwords["travel"] && this.word3 == GlobalVars.cultwords["self"] ) {
				this.wall(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["travel"] && this.word2 == GlobalVars.cultwords["technology"] && this.word3 == GlobalVars.cultwords["other"] ) {
				this.freedom(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["join"] && this.word2 == GlobalVars.cultwords["other"] && this.word3 == GlobalVars.cultwords["self"] ) {
				this.cultsummon(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["hide"] && this.word2 == GlobalVars.cultwords["other"] && this.word3 == GlobalVars.cultwords["see"] ) {
				this.deafen(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["destroy"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["other"] ) {
				this.blind(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["destroy"] && this.word2 == GlobalVars.cultwords["see"] && this.word3 == GlobalVars.cultwords["blood"] ) {
				this.bloodboil(); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["self"] && this.word2 == GlobalVars.cultwords["other"] && this.word3 == GlobalVars.cultwords["technology"] ) {
				return this.communicate();
			}

			if ( this.word1 == GlobalVars.cultwords["travel"] && this.word2 == GlobalVars.cultwords["other"] ) {
				this.itemport( this.word3 ); return null;
			}

			if ( this.word1 == GlobalVars.cultwords["join"] && this.word2 == GlobalVars.cultwords["hide"] && this.word3 == GlobalVars.cultwords["technology"] ) {
				this.runestun(); return null;
			} else {
				this.fizzle(); return null;
			}
		}

		// Function from file: ritual.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Mob_Living_Carbon_Monkey ) {
				this.attack_hand( a );
			}
			return null;
		}

		// Function from file: ritual.dm
		public override dynamic attack_animal( Mob_Living user = null ) {
			
			if ( user is Mob_Living_SimpleAnimal_Construct_Harvester ) {
				this.attack_hand( user );
			}
			return null;
		}

		// Function from file: ritual.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Tome && GlobalFuncs.iscultist( b ) ) {
				GlobalFuncs.to_chat( b, "You retrace your steps, carefully undoing the lines of the rune." );
				GlobalFuncs.qdel( this );
				return null;
			} else if ( a is Obj_Item_Weapon_Nullrod ) {
				GlobalFuncs.to_chat( b, "<span class='notice'>You disrupt the vile magic with the deadening field of the null rod!</span>" );
				GlobalFuncs.qdel( this );
				GlobalVars.stat_collection.cult.runes_nulled++;
				return null;
			}
			return null;
		}

		// Function from file: ritual.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			string rune_name = null;

			base.examine( (object)(user), size );

			if ( GlobalFuncs.iscultist( user ) || user is Mob_Dead_Observer ) {
				rune_name = GlobalFuncs.get_uristrune_name( this.word1, this.word2, this.word3 );
				GlobalFuncs.to_chat( user, "A spell circle drawn in blood. It reads: <i>" + this.word1 + " " + this.word2 + " " + this.word3 + "</i>." + ( Lang13.Bool( rune_name ) ? new Txt( " From " ).item( Rand13.Pick(new object [] { "your intuition, you are pretty sure that", "deep memories, you determine that", "the rune's energies, you deduct that", "Nar-Sie's murmurs, you know that" }) ).str( " this is " ).a( rune_name ).str( "<b>" ).item().str( "</b> rune." ).ToString() : "" ) );
			}
			return null;
		}

		// Function from file: ritual.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Mob_Living_Silicon_Ai AI = null;

			
			if ( this.ajourn is Mob_Living ) {
				this.ajourn.ajourn = null;
			}
			this.ajourn = null;

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Living_Silicon_Ai) )) {
				AI = _a;
				

				if ( AI.client != null ) {
					AI.client.images.Remove( this.blood_image );
				}
			}
			GlobalFuncs.qdel( this.blood_image );
			this.blood_image = null;
			GlobalVars.rune_list.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
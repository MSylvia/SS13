// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Camera : Obj_Item_Device {

		public int pictures_max = 10;
		public int pictures_left = 10;
		public bool on = true;
		public string icon_on = "camera";
		public string icon_off = "camera_off";
		public bool blueprints = false;
		public ByTable aipictures = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "polaroid";
			this.w_class = 2;
			this.slot_flags = 512;
			this.origin_tech = "materials=1;programming=1";
			this.starting_materials = new ByTable().Set( "$iron", 2000 );
			this.w_type = 5;
			this.min_harm_label = 3;
			this.harm_label_examine = new ByTable(new object [] { "<span class='info'>A tiny label is on the lens.</span>", "<span class='warning'>A label covers the lens!</span>" });
			this.icon_state = "polaroid";
		}

		public Obj_Item_Device_Camera ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photography.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( !this.on || !( this.pictures_left != 0 ) || Map13.GetDistance( this, A ) < 1 ) {
				return false;
			}
			this.captureimage( A, user, flag );
			GlobalFuncs.playsound( this.loc, "polaroid", 75, 1, -3 );
			this.pictures_left--;
			GlobalFuncs.to_chat( user, "<span class='notice'>" + this.pictures_left + " photos left.</span>" );
			this.icon_state = this.icon_off;
			this.on = false;

			if ( this.pictures_left > 0 ) {
				Task13.Schedule( 64, (Task13.Closure)(() => {
					this.icon_state = this.icon_on;
					this.on = true;
					return;
				}));
			}
			return false;
		}

		// Function from file: photography.dm
		public void injectaialbum( Icon icon = null, Icon img = null, string info = null, int pixel_x = 0, int pixel_y = 0, bool blueprintsinject = false ) {
			Picture P = null;

			P = new Picture();
			P.fields["name"] = new Txt().Ref( P ).ToString();
			P.fields["icon"] = icon;
			P.fields["img"] = img;
			P.fields["info"] = info;
			P.fields["pixel_x"] = pixel_x;
			P.fields["pixel_y"] = pixel_y;
			P.fields["blueprints"] = blueprintsinject;
			this.aipictures.Add( P );
			return;
		}

		// Function from file: photography.dm
		public void aipicture( dynamic user = null, Icon temp = null, string mobs = null ) {
			Icon small_img = null;
			Icon ic = null;
			Icon icon = null;
			Icon img = null;
			string info = null;
			int pixel_x = 0;
			int pixel_y = 0;
			bool injectblueprints = false;

			small_img = new Icon( temp );
			ic = new Icon( "icons/obj/items.dmi", "photo" );
			small_img.Scale( 8, 8 );
			ic.Blend( small_img, 3, 10, 13 );
			icon = ic;
			img = temp;
			info = mobs;
			pixel_x = Rand13.Int( -10, 10 );
			pixel_y = Rand13.Int( -10, 10 );
			injectblueprints = true;

			if ( this.blueprints ) {
				injectblueprints = true;
				this.blueprints = false;
			}
			this.injectaialbum( icon, img, info, pixel_x, pixel_y, injectblueprints );
			return;
		}

		// Function from file: photography.dm
		public virtual void printpicture( dynamic user = null, Icon temp = null, string mobs = null, bool? flag = null ) {
			Obj_Item_Weapon_Photo P = null;
			Icon small_img = null;
			Icon ic = null;

			P = new Obj_Item_Weapon_Photo();
			((Mob)user).put_in_hands( P );
			small_img = new Icon( temp );
			ic = new Icon( "icons/obj/items.dmi", "photo" );
			small_img.Scale( 8, 8 );
			ic.Blend( small_img, 3, 10, 13 );
			P.icon = ic;
			P.img = temp;
			P.info = mobs;
			P.pixel_x = Rand13.Int( -10, 10 );
			P.pixel_y = Rand13.Int( -10, 10 );

			if ( this.blueprints ) {
				P.blueprints = true;
				this.blueprints = false;
			}
			return;
		}

		// Function from file: photography.dm
		public void captureimage( dynamic target = null, dynamic user = null, bool? flag = null ) {
			string mobs = null;
			ByTable seen = null;
			ByTable turfs = null;
			dynamic T = null;
			Icon temp = null;

			
			if ( this.min_harm_label != 0 && this.harm_labeled >= this.min_harm_label ) {
				this.printpicture( user, new Icon( "icons/effects/96x96.dmi", "blocked" ), "You can't see a thing.", flag );
				return;
			}
			mobs = "";

			if ( !( user is Mob_Living_Silicon_Ai ) ) {
				
				if ( Lang13.Bool( user.client ) ) {
					seen = GlobalFuncs.get_hear( Game13.view, user.client.eye );
				} else {
					seen = GlobalFuncs.get_hear( Game13.view, user );
				}
			} else {
				seen = GlobalFuncs.get_hear( Game13.view, target );
			}
			turfs = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( target, 1 ) )) {
				T = _a;
				

				if ( seen.Contains( T ) ) {
					
					if ( user is Mob_Living_Silicon_Ai && !GlobalVars.cameranet.checkTurfVis( T ) ) {
						continue;
					} else {
						turfs.Add( T );
						mobs += this.camera_get_mobs( T );
					}
				}
			}
			temp = new Icon( "icons/effects/96x96.dmi", "" );
			temp.Blend( "#000", 3 );
			temp.Blend( this.camera_get_icon( turfs, target ), 3 );

			if ( !( user is Mob_Living_Silicon_Ai ) ) {
				this.printpicture( user, temp, mobs, flag );
			} else {
				this.aipicture( user, temp, mobs );
			}
			return;
		}

		// Function from file: photography.dm
		public virtual string camera_get_mobs( dynamic the_turf = null ) {
			string mob_detail = null;
			Mob_Living_Carbon A = null;
			string holding = null;
			Mob_Living_SimpleAnimal S = null;
			Mob_Dead_Observer O = null;

			
			foreach (dynamic _a in Lang13.Enumerate( the_turf, typeof(Mob_Living_Carbon) )) {
				A = _a;
				

				if ( A.invisibility != 0 ) {
					continue;
				}
				holding = null;

				if ( Lang13.Bool( A.l_hand ) || Lang13.Bool( A.r_hand ) ) {
					
					if ( Lang13.Bool( A.l_hand ) ) {
						holding = new Txt( "They are holding " ).a( A.l_hand ).item().ToString();
					}

					if ( Lang13.Bool( A.r_hand ) ) {
						
						if ( Lang13.Bool( holding ) ) {
							holding += new Txt( " and " ).a( A.r_hand ).item().ToString();
						} else {
							holding = new Txt( "They are holding " ).a( A.r_hand ).item().ToString();
						}
					}
				}

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "You can see " + A + " on the photo" + ( Convert.ToDouble( A.health ) < 75 ? " - " + A + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ". ";
				} else {
					mob_detail += "You can also see " + A + " on the photo" + ( Convert.ToDouble( A.health ) < 75 ? " - " + A + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ".";
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( the_turf, typeof(Mob_Living_SimpleAnimal) )) {
				S = _b;
				

				if ( S.invisibility != 0 ) {
					continue;
				}

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "You can see " + S + " on the photo" + ( Convert.ToDouble( S.health ) < Convert.ToDouble( S.maxHealth / 2 ) ? " - " + S + " looks hurt" : "" ) + ".";
				} else {
					mob_detail += "You can also see " + S + " on the photo" + ( Convert.ToDouble( S.health ) < Convert.ToDouble( S.maxHealth / 2 ) ? " - " + S + " looks hurt" : "" ) + ".";
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( the_turf, typeof(Mob_Dead_Observer) )) {
				O = _c;
				

				if ( O.invisibility != 0 ) {
					continue;
				}

				if ( !Lang13.Bool( mob_detail ) ) {
					mob_detail = "Wait...is that " + O + " on the photo? ";
				} else {
					mob_detail += "...wait a minute...isn't that " + O + " on the photo?";
				}
			}
			return mob_detail;
		}

		// Function from file: photography.dm
		public virtual Icon camera_get_icon( ByTable turfs = null, dynamic center = null ) {
			ByTable atoms = null;
			dynamic T = null;
			Ent_Dynamic A = null;
			ByTable sorted = null;
			int? j = null;
			double i = 0;
			dynamic c = null;
			dynamic c2 = null;
			Icon res = null;
			Ent_Static A2 = null;
			Icon img = null;
			double? offX = null;
			double? offY = null;

			atoms = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( turfs )) {
				T = _b;
				
				atoms.Add( T );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Dynamic) )) {
					A = _a;
					

					if ( A.invisibility != 0 ) {
						continue;
					}
					atoms.Add( A );
				}
			}
			sorted = new ByTable();
			j = null;

			foreach (dynamic _c in Lang13.IterateRange( 1, atoms.len )) {
				i = _c;
				
				c = atoms[i];
				j = sorted.len;

				while (( j ??0) > 0) {
					c2 = sorted[j];

					if ( Convert.ToDouble( c2.layer ) <= Convert.ToDouble( c.layer ) ) {
						break;
					}
					j--;
				}
				sorted.Insert( ( j ??0) + 1, c );
			}
			res = new Icon( "icons/effects/96x96.dmi", "" );

			foreach (dynamic _d in Lang13.Enumerate( sorted, typeof(Ent_Static) )) {
				A2 = _d;
				
				img = GlobalFuncs.getFlatIcon( A2, A2.dir, 0 );

				if ( A2 is Mob_Living && Lang13.Bool( ((dynamic)A2).lying ) ) {
					img.Turn( Convert.ToDouble( ((dynamic)A2).lying ) );
				}
				offX = ( A2.x - Convert.ToDouble( center.x ) ) * 32 + A2.pixel_x + 33;
				offY = ( A2.y - Convert.ToDouble( center.y ) ) * 32 + A2.pixel_y + 33;

				if ( A2 is Ent_Dynamic ) {
					offX += Convert.ToDouble( ((dynamic)A2).step_x );
					offY += Convert.ToDouble( ((dynamic)A2).step_y );
				}
				res.Blend( img, GlobalFuncs.blendMode2iconMode( A2.blend_mode ), offX, offY );

				if ( A2 is Obj_Item_Blueprints ) {
					this.blueprints = true;
				}
			}
			return res;
		}

		// Function from file: photography.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Device_CameraFilm ) {
				
				if ( this.pictures_left != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " still has some film in it!</span>" );
					return null;
				}

				if ( Lang13.Bool( b.drop_item( a ) ) ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>You insert " + a + " into " + this + ".</span>" );
					GlobalFuncs.qdel( a );
					this.pictures_left = this.pictures_max;
					this.icon_state = this.icon_on;
					this.on = true;
					return null;
				}
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: photography.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			return null;
		}

		// Function from file: photography.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>It has " + this.pictures_left + " photos left.</span>" );
			return null;
		}

	}

}
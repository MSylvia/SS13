// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Camera : Obj_Item_Device {

		public int pictures_max = 10;
		public int pictures_left = 10;
		public bool on = true;
		public bool blueprints = false;
		public ByTable aipictures = new ByTable();
		public bool see_ghosts = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electropack";
			this.w_class = 2;
			this.flags = 64;
			this.slot_flags = 512;
			this.materials = new ByTable().Set( "$metal", 2000 );
			this.icon_state = "camera";
		}

		public Obj_Item_Device_Camera ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photography.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			ByTable bad_targets = null;

			
			if ( !this.on || !( this.pictures_left != 0 ) || target.loc is Mob || !( target.loc is Tile ) ) {
				return false;
			}

			if ( ((Ent_Static)user).Adjacent( target ) ) {
				bad_targets = new ByTable(new object [] { typeof(Obj_Structure), typeof(Obj_Item_Weapon_Storage) });

				if ( GlobalFuncs.is_type_in_list( target, bad_targets ) ) {
					return false;
				}
			}
			this.captureimage( target, user, proximity_flag );
			GlobalFuncs.playsound( this.loc, Rand13.Pick(new object [] { "sound/items/polaroid1.ogg", "sound/items/polaroid2.ogg" }), 75, 1, -3 );
			this.pictures_left--;
			user.WriteMsg( "<span class='notice'>" + this.pictures_left + " photos left.</span>" );
			this.icon_state = "camera_off";
			this.on = false;
			Task13.Schedule( 64, (Task13.Closure)(() => {
				this.icon_state = "camera";
				this.on = true;
				return;
			}));
			return false;
		}

		// Function from file: photography.dm
		public void injectmasteralbum( Icon icon = null, Icon img = null, string desc = null, int pixel_x = 0, int pixel_y = 0, bool blueprintsinject = false ) {
			int numberer = 0;
			Ent_Static C = null;
			Game_Data picture = null;
			Picture P = null;

			numberer = 1;
			C = this.loc;

			if ( Lang13.Bool( ((dynamic)C).connected_ai ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( ((dynamic)C).connected_ai.aicamera.aipictures, typeof(Game_Data) )) {
					picture = _a;
					
					numberer++;
				}
				P = new Picture();
				P.fields["name"] = "Image " + numberer + " (taken by " + this.loc.name + ")";
				P.fields["icon"] = icon;
				P.fields["img"] = img;
				P.fields["desc"] = desc;
				P.fields["pixel_x"] = pixel_x;
				P.fields["pixel_y"] = pixel_y;
				P.fields["blueprints"] = blueprintsinject;
				((dynamic)C).connected_ai.aicamera.aipictures.Add( P );
				Task13.User.WriteMsg( "<span class='unconscious'>Image recorded and saved to remote database</span>" );
			} else {
				this.injectaialbum( icon, img, desc, pixel_x, pixel_y, blueprintsinject );
			}
			return;
		}

		// Function from file: photography.dm
		public void injectaialbum( Icon icon = null, Icon img = null, string desc = null, int pixel_x = 0, int pixel_y = 0, bool blueprintsinject = false ) {
			int numberer = 0;
			Game_Data picture = null;
			Picture P = null;

			numberer = 1;

			foreach (dynamic _a in Lang13.Enumerate( this.aipictures, typeof(Game_Data) )) {
				picture = _a;
				
				numberer++;
			}
			P = new Picture();
			P.fields["name"] = "Image " + numberer + " (taken by " + this.loc.name + ")";
			P.fields["icon"] = icon;
			P.fields["img"] = img;
			P.fields["desc"] = desc;
			P.fields["pixel_x"] = pixel_x;
			P.fields["pixel_y"] = pixel_y;
			P.fields["blueprints"] = blueprintsinject;
			this.aipictures.Add( P );
			Task13.User.WriteMsg( "<span class='unconscious'>Image recorded</span>" );
			return;
		}

		// Function from file: photography.dm
		public void aipicture( dynamic user = null, Icon temp = null, string mobs = null, bool isAi = false ) {
			Icon small_img = null;
			Icon ic = null;
			Icon icon = null;
			Icon img = null;
			string desc = null;
			int pixel_x = 0;
			int pixel_y = 0;
			bool injectblueprints = false;

			small_img = new Icon( temp );
			ic = new Icon( "icons/obj/items.dmi", "photo" );
			small_img.Scale( 8, 8 );
			ic.Blend( small_img, 3, 10, 13 );
			icon = ic;
			img = temp;
			desc = mobs;
			pixel_x = Rand13.Int( -10, 10 );
			pixel_y = Rand13.Int( -10, 10 );
			injectblueprints = true;

			if ( this.blueprints ) {
				injectblueprints = true;
				this.blueprints = false;
			}

			if ( isAi ) {
				this.injectaialbum( icon, img, desc, pixel_x, pixel_y, injectblueprints );
			} else {
				this.injectmasteralbum( icon, img, desc, pixel_x, pixel_y, injectblueprints );
			}
			return;
		}

		// Function from file: photography.dm
		public void printpicture( dynamic user = null, Icon temp = null, string mobs = null, bool? flag = null ) {
			Obj_Item_Weapon_Photo P = null;
			Icon small_img = null;
			Icon ic = null;

			P = new Obj_Item_Weapon_Photo( GlobalFuncs.get_turf( this ) );

			if ( this.Adjacent( user ) ) {
				((Mob)user).put_in_hands( P );
			}
			small_img = new Icon( temp );
			ic = new Icon( "icons/obj/items.dmi", "photo" );
			small_img.Scale( 8, 8 );
			ic.Blend( small_img, 3, 10, 13 );
			P.icon = ic;
			P.img = temp;
			P.desc = mobs;
			P.pixel_x = Rand13.Int( -10, 10 );
			P.pixel_y = Rand13.Int( -10, 10 );

			if ( this.blueprints ) {
				P.blueprints = true;
				this.blueprints = false;
			}
			return;
		}

		// Function from file: photography.dm
		public void captureimage( dynamic target = null, dynamic user = null, bool? flag = null ) {
			string mobs = null;
			bool isAi = false;
			ByTable seen = null;
			ByTable turfs = null;
			dynamic T = null;
			Icon temp = null;

			mobs = "";
			isAi = user is Mob_Living_Silicon_Ai;

			if ( !isAi ) {
				
				if ( Lang13.Bool( user.client ) ) {
					seen = GlobalFuncs.get_hear( Game13.view, user.client.eye );
				} else {
					seen = GlobalFuncs.get_hear( Game13.view, user );
				}
			} else {
				seen = GlobalFuncs.get_hear( Game13.view, target );
			}
			turfs = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( target, 1 ) )) {
				T = _a;
				

				if ( seen.Contains( T ) ) {
					
					if ( isAi && !GlobalVars.cameranet.checkTurfVis( T ) ) {
						continue;
					} else {
						turfs.Add( T );
						mobs += this.camera_get_mobs( T );
					}
				}
			}
			temp = new Icon( "icons/effects/96x96.dmi", "" );
			temp.Blend( "#000", 3 );
			temp.Blend( this.camera_get_icon( turfs, target ), 3 );

			if ( !( user is Mob_Living_Silicon ) ) {
				this.printpicture( user, temp, mobs, flag );
			} else {
				this.aipicture( user, temp, mobs, isAi );
			}
			return;
		}

		// Function from file: photography.dm
		public string camera_get_mobs( dynamic the_turf = null ) {
			string mob_detail = null;
			dynamic M = null;
			dynamic O = null;
			string holding = null;
			dynamic L = null;

			
			foreach (dynamic _a in Lang13.Enumerate( the_turf )) {
				M = _a;
				

				if ( Lang13.Bool( M.invisibility ) ) {
					
					if ( this.see_ghosts && M is Mob_Dead_Observer ) {
						O = M;

						if ( Lang13.Bool( O.orbiting ) ) {
							continue;
						}

						if ( !Lang13.Bool( mob_detail ) ) {
							mob_detail = "You can see a g-g-g-g-ghooooost! ";
						} else {
							mob_detail += "You can also see a g-g-g-g-ghooooost!";
						}
					} else {
						continue;
					}
				}
				holding = null;

				if ( M is Mob_Living ) {
					L = M;

					if ( Lang13.Bool( L.l_hand ) || Lang13.Bool( L.r_hand ) ) {
						
						if ( Lang13.Bool( L.l_hand ) ) {
							holding = new Txt( "They are holding " ).a( L.l_hand ).item().ToString();
						}

						if ( Lang13.Bool( L.r_hand ) ) {
							
							if ( Lang13.Bool( holding ) ) {
								holding += new Txt( " and " ).a( L.r_hand ).item().ToString();
							} else {
								holding = new Txt( "They are holding " ).a( L.r_hand ).item().ToString();
							}
						}
					}

					if ( !Lang13.Bool( mob_detail ) ) {
						mob_detail = "You can see " + L + " on the photo" + ( Convert.ToDouble( L.health ) < 75 ? " - " + L + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ". ";
					} else {
						mob_detail += "You can also see " + L + " on the photo" + ( Convert.ToDouble( L.health ) < 75 ? " - " + L + " looks hurt" : "" ) + "." + ( Lang13.Bool( holding ) ? " " + holding : "." ) + ".";
					}
				}
			}
			return mob_detail;
		}

		// Function from file: photography.dm
		public Icon camera_get_icon( ByTable turfs = null, dynamic center = null ) {
			ByTable atoms = null;
			dynamic T = null;
			Ent_Dynamic A = null;
			Ent_Dynamic O = null;
			ByTable sorted = null;
			int? j = null;
			double i = 0;
			dynamic c = null;
			dynamic c2 = null;
			Icon res = null;
			Ent_Static A2 = null;
			Icon img = null;
			double? offX = null;
			double? offY = null;
			dynamic T2 = null;

			atoms = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( turfs )) {
				T = _b;
				
				atoms.Add( T );

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Dynamic) )) {
					A = _a;
					

					if ( A.invisibility != 0 ) {
						
						if ( this.see_ghosts ) {
							
							if ( A is Mob_Dead_Observer ) {
								O = A;

								if ( Lang13.Bool( O.orbiting ) ) {
									continue;
								}
							}
						} else {
							continue;
						}
					}
					atoms.Add( A );
				}
			}
			sorted = new ByTable();
			j = null;

			foreach (dynamic _c in Lang13.IterateRange( 1, atoms.len )) {
				i = _c;
				
				c = atoms[i];
				j = sorted.len;

				while (( j ??0) > 0) {
					c2 = sorted[j];

					if ( Convert.ToDouble( c2.layer ) <= Convert.ToDouble( c.layer ) ) {
						break;
					}
					j--;
				}
				sorted.Insert( ( j ??0) + 1, c );
			}
			res = new Icon( "icons/effects/96x96.dmi", "" );

			foreach (dynamic _d in Lang13.Enumerate( sorted, typeof(Ent_Static) )) {
				A2 = _d;
				
				img = GlobalFuncs.getFlatIcon( A2 );

				if ( A2 is Mob_Living && Lang13.Bool( ((dynamic)A2).lying ) ) {
					img.Turn( ((dynamic)A2).lying );
				}
				offX = ( A2.x - Convert.ToDouble( center.x ) ) * 32 + A2.pixel_x + 33;
				offY = ( A2.y - Convert.ToDouble( center.y ) ) * 32 + A2.pixel_y + 33;

				if ( A2 is Ent_Dynamic ) {
					offX += Convert.ToDouble( ((dynamic)A2).step_x );
					offY += Convert.ToDouble( ((dynamic)A2).step_y );
				}
				res.Blend( img, GlobalFuncs.blendMode2iconMode( Lang13.BoolNullable( A2.blend_mode ) ), offX, offY );

				if ( A2 is Obj_Item_Areaeditor_Blueprints ) {
					this.blueprints = true;
				}
			}

			foreach (dynamic _e in Lang13.Enumerate( turfs )) {
				T2 = _e;
				
				res.Blend( GlobalFuncs.getFlatIcon( T2.loc ), GlobalFuncs.blendMode2iconMode( Lang13.BoolNullable( T2.blend_mode ) ), Lang13.DoubleNullable( ( T2.x - center.x ) * 32 + 33 ), Lang13.DoubleNullable( ( T2.y - center.y ) * 32 + 33 ) );
			}
			return res;
		}

		// Function from file: photography.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "It has " + this.pictures_left + " photos left." );
			return 0;
		}

		// Function from file: photography.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Device_CameraFilm ) {
				
				if ( this.pictures_left != 0 ) {
					user.WriteMsg( "<span class='notice'>" + this + " still has some film in it!</span>" );
					return null;
				}

				if ( !((Mob)user).unEquip( A ) ) {
					return null;
				}
				user.WriteMsg( "<span class='notice'>You insert " + A + " into " + this + ".</span>" );
				GlobalFuncs.qdel( A );
				this.pictures_left = this.pictures_max;
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: photography.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			return false;
		}

		// Function from file: photography.dm
		public override void CheckParts( Game_Data holder = null ) {
			dynamic C = null;

			C = Lang13.FindIn( typeof(Obj_Item_Device_Camera), this.contents );

			if ( Lang13.Bool( C ) ) {
				this.pictures_max = C.pictures_max;
				this.pictures_left = C.pictures_left;
				this.visible_message( "" + C + " has been imbued with godlike power!" );
				GlobalFuncs.qdel( C );
			}
			return;
		}

	}

}
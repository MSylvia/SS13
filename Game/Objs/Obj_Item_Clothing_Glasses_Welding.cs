// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Clothing_Glasses_Welding : Obj_Item_Clothing_Glasses {

		public bool up = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "welding-g";
			this.origin_tech = "engineering=1;materials=2";
			this.action_button_name = "Toggle Welding Goggles";
			this.eyeprot = 3;
			this.species_fit = new ByTable(new object [] { "Vox" });
			this.icon_state = "welding-g";
		}

		public Obj_Item_Clothing_Glasses_Welding ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: glasses.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			this.__CallVerb("Adjust welding goggles" );
			return null;
		}

		// Function from file: glasses.dm
		public virtual ByTable getMask(  ) {
			return GlobalVars.global_hud.darkMask;
		}

		// Function from file: glasses.dm
		[Verb]
		[VerbInfo( name: "Adjust welding goggles", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void toggle(  ) {
			Ent_Static C = null;

			C = Task13.User;

			if ( !( Task13.User != null ) ) {
				
				if ( !( this.loc is Mob ) ) {
					return;
				}
				C = this.loc;
			}

			if ( !Lang13.Bool( ((dynamic)C).incapacitated() ) ) {
				
				if ( this.up ) {
					this.up = !this.up;
					this.eyeprot = 2;
					this.body_parts_covered |= 2048;
					this.icon_state = Lang13.Initial( this, "icon_state" );
					GlobalFuncs.to_chat( C, "You flip the " + this + " down to protect your eyes." );
				} else {
					this.up = !this.up;
					this.eyeprot = 0;
					this.body_parts_covered &= 63487;
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "up";
					GlobalFuncs.to_chat( C, "You push the " + this + " up out of your face." );
				}
				((dynamic)C).update_inv_glasses();
			}
			return;
		}

	}

}
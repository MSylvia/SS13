// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Automatic_M90 : Obj_Item_Weapon_Gun_Projectile_Automatic {

		public Obj_Item_Weapon_Gun_Projectile_Revolver_Grenadelauncher underbarrel = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "m90";
			this.origin_tech = "combat=5;materials=2;syndicate=8";
			this.mag_type = typeof(Obj_Item_AmmoBox_Magazine_M556);
			this.fire_sound = "sound/weapons/gunshot_smg.ogg";
			this.pin = typeof(Obj_Item_Device_FiringPin_Implant_Pindicate);
			this.icon_state = "m90";
		}

		// Function from file: automatic.dm
		public Obj_Item_Weapon_Gun_Projectile_Automatic_M90 ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.underbarrel = new Obj_Item_Weapon_Gun_Projectile_Revolver_Grenadelauncher( this );
			this.update_icon();
			return;
		}

		// Function from file: automatic.dm
		public override void burst_select(  ) {
			Mob user = null;

			user = Task13.User;

			switch ((int)( this.select )) {
				case 0:
					this.select = 1;
					this.burst_size = Lang13.Initial( this, "burst_size" );
					this.fire_delay = Lang13.Initial( this, "fire_delay" );
					user.WriteMsg( "<span class='notice'>You switch to " + this.burst_size + "-rnd burst.</span>" );
					break;
				case 1:
					this.select = 2;
					user.WriteMsg( "<span class='notice'>You switch to grenades.</span>" );
					break;
				case 2:
					this.select = 0;
					this.burst_size = 1;
					this.fire_delay = 0;
					user.WriteMsg( "<span class='notice'>You switch to semi-auto.</span>" );
					break;
			}
			GlobalFuncs.playsound( user, "sound/weapons/empty.ogg", 100, 1 );
			this.update_icon();
			return;
		}

		// Function from file: automatic.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );
			this.overlays.Cut();

			switch ((int)( this.select )) {
				case 0:
					this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "semi" );
					break;
				case 1:
					this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "burst" );
					break;
				case 2:
					this.overlays.Add( "" + Lang13.Initial( this, "icon_state" ) + "gren" );
					break;
			}
			this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + ( Lang13.Bool( this.magazine ) ? "" : "-e" );
			return false;
		}

		// Function from file: automatic.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_AmmoCasing ) {
				
				if ( Lang13.Bool( this.underbarrel.magazine.ammo_type.IsInstanceOfType( A ) ) ) {
					this.underbarrel.attack_self();
					this.underbarrel.attackby( A, user, _params );
				}
			} else {
				base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}
			return null;
		}

		// Function from file: automatic.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( this.select == 2 ) {
				this.underbarrel.afterattack( target, user, proximity_flag, click_parameters );
			} else {
				base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
				return false;
			}
			return false;
		}

	}

}
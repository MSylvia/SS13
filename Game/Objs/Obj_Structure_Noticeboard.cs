// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Noticeboard : Obj_Structure {

		public int notices = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/stationobjs.dmi";
			this.icon_state = "nboard00";
		}

		public Obj_Structure_Noticeboard ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: noticeboard.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			dynamic P = null;
			dynamic P2 = null;
			dynamic P3 = null;

			base.Topic( href, href_list, (object)(hsrc) );
			Task13.User.set_machine( this );

			if ( Lang13.Bool( href_list["remove"] ) ) {
				
				if ( Task13.User.stat != 0 || Task13.User.restrained() ) {
					return null;
				}
				P = Lang13.FindObj( href_list["remove"] );

				if ( Lang13.Bool( P ) && P.loc == this ) {
					P.loc = GlobalFuncs.get_turf( this );
					((Ent_Static)P).add_fingerprint( Task13.User );
					this.add_fingerprint( Task13.User );
					this.notices--;
					this.icon_state = "nboard0" + this.notices;
				}
			}

			if ( Lang13.Bool( href_list["write"] ) ) {
				
				if ( Task13.User.stat != 0 || Task13.User.restrained() ) {
					return null;
				}
				P2 = Lang13.FindObj( href_list["write"] );

				if ( Lang13.Bool( P2 ) && P2.loc == this ) {
					
					if ( Task13.User.r_hand is Obj_Item_Weapon_Pen ) {
						this.add_fingerprint( Task13.User );
						((Ent_Static)P2).attackby( Task13.User.r_hand, Task13.User );
					} else if ( Task13.User.l_hand is Obj_Item_Weapon_Pen ) {
						this.add_fingerprint( Task13.User );
						((Ent_Static)P2).attackby( Task13.User.l_hand, Task13.User );
					} else {
						Task13.User.WriteMsg( "<span class='notice'>You'll need something to write with!</span>" );
					}
				}
			}

			if ( Lang13.Bool( href_list["read"] ) ) {
				P3 = Lang13.FindObj( href_list["read"] );

				if ( Lang13.Bool( P3 ) && P3.loc == this ) {
					
					if ( !( Task13.User is Mob_Living_Carbon_Human ) ) {
						Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P3.name + "</TITLE></HEAD><BODY><TT>" + GlobalFuncs.stars( P3.info ) + "</TT></BODY></HTML>", "window=" + P3.name );
						GlobalFuncs.onclose( Task13.User, "" + P3.name );
					} else {
						Interface13.Browse( Task13.User, "<HTML><HEAD><TITLE>" + P3.name + "</TITLE></HEAD><BODY><TT>" + P3.info + "</TT></BODY></HTML>", "window=" + P3.name );
						GlobalFuncs.onclose( Task13.User, "" + P3.name );
					}
				}
			}
			return null;
		}

		// Function from file: noticeboard.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			Obj_Item_Weapon_Paper P = null;

			dat = "<B>Noticeboard</B><BR>";

			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Obj_Item_Weapon_Paper) )) {
				P = _a;
				
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";read=" ).Ref( P ).str( "'>" ).item( P.name ).str( "</A> <A href='?src=" ).Ref( this ).str( ";write=" ).Ref( P ).str( "'>Write</A> <A href='?src=" ).Ref( this ).str( ";remove=" ).Ref( P ).str( "'>Remove</A><BR>" ).ToString();
			}
			Interface13.Browse( a, "<HEAD><TITLE>Notices</TITLE></HEAD>" + dat, "window=noticeboard" );
			GlobalFuncs.onclose( a, "noticeboard" );
			return null;
		}

		// Function from file: noticeboard.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Paper ) {
				
				if ( this.notices < 5 ) {
					
					if ( !Lang13.Bool( user.drop_item() ) ) {
						return null;
					}
					((Ent_Static)A).add_fingerprint( user );
					this.add_fingerprint( user );
					A.loc = this;
					this.notices++;
					this.icon_state = "nboard0" + this.notices;
					user.WriteMsg( "<span class='notice'>You pin the paper to the noticeboard.</span>" );
				} else {
					user.WriteMsg( "<span class='notice'>You reach to pin your paper to the board but hesitate. You are certain your paper will not be seen among the many others already attached.</span>" );
				}
			}
			return null;
		}

		// Function from file: noticeboard.dm
		public override void initialize(  ) {
			Obj_Item I = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.loc, typeof(Obj_Item) )) {
				I = _a;
				

				if ( this.notices > 4 ) {
					break;
				}

				if ( I is Obj_Item_Weapon_Paper ) {
					I.loc = this;
					this.notices++;
				}
			}
			this.icon_state = "nboard0" + this.notices;
			return;
		}

	}

}
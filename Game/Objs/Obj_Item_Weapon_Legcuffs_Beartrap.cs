// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Legcuffs_Beartrap : Obj_Item_Weapon_Legcuffs {

		public bool armed = false;
		public dynamic IED = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.throw_range = 1;
			this.icon_state = "beartrap0";
		}

		public Obj_Item_Weapon_Legcuffs_Beartrap ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: weapon.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic L = null;
			dynamic bombturf = null;
			dynamic A = null;
			string log_str = null;
			Ent_Dynamic H = null;
			Ent_Dynamic SA = null;

			
			if ( this.armed && O is Mob_Living && this.loc is Tile ) {
				L = O;

				if ( Lang13.Bool( ((dynamic)L).on_foot() ) ) {
					
					if ( Lang13.Bool( this.IED ) && this.loc is Tile ) {
						this.IED.active = 1;
						this.IED.overlays -= new Image( "icons/obj/grenade.dmi", null, "improvised_grenade_filled" );
						this.IED.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
						this.IED.assembled = 3;
						bombturf = GlobalFuncs.get_turf( this );
						A = GlobalFuncs.get_area( bombturf );
						log_str = new Txt().item( GlobalFuncs.key_name( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( O ).str( "'>?</A> has triggered an IED-rigged " ).item( this.name ).str( " at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString();
						GlobalFuncs.message_admins( log_str );
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + log_str ) );
						Task13.Schedule( Convert.ToInt32( this.IED.det_time ), (Task13.Closure)(() => {
							((Obj_Item_Weapon_Grenade)this.IED).prime();
							this.desc = Lang13.Initial( this, "desc" );
							return;
						}));
					}

					if ( L is Mob_Living_Carbon_Human ) {
						H = O;

						if ( ((dynamic)H).m_intent == "run" ) {
							this.armed = false;
							((dynamic)H).legcuffed = this;
							this.loc = H;
							((dynamic)H).update_inv_legcuffed();
							GlobalFuncs.feedback_add_details( "handcuffs", "B" );
							H.visible_message( new Txt( "<span class='danger'>" ).item( H ).str( " steps on " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='danger'>You step on " ).the( this ).item().str( "!" ).item( ( Lang13.Bool( this.IED ) && Lang13.Bool( this.IED.active ) ? " The explosive device attached to it activates." : "" ) ).str( "</span>" ).ToString(), "<span class='notice'>You hear a sudden snapping sound!", "<span class='danger'>A terrifying crocodile snaps at " + H + "!</span>", "<span class='danger'>A " + ( Lang13.Bool( this.IED ) && Lang13.Bool( this.IED.active ) ? "crocodile" : "horrifying fiery dragon" ) + " attempts to bite your leg off!</span>" );
						}
					} else if ( O is Mob_Living_SimpleAnimal ) {
						this.armed = false;
						SA = O;
						((dynamic)SA).health -= 20;
					}
					this.update_icon();
				}
			}
			base.Crossed( O, (object)(X) );
			return null;
		}

		// Function from file: weapon.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic bombturf = null;
			dynamic A = null;
			string log_str = null;

			
			if ( a is Obj_Item_Weapon_Grenade_Iedcasing ) {
				
				if ( Lang13.Bool( this.IED ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>This beartrap already has an IED hooked up to it!</span>" );
					return null;
				}
				this.IED = a;

				dynamic _a = this.IED.assembled; // Was a switch-case, sorry for the mess.
				if ( _a==0 || _a==1 ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You haven't prepared this IED yet!</span>" );
					this.IED = null;
					return null;
				} else if ( _a==2 || _a==3 ) {
					
					if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
						bombturf = GlobalFuncs.get_turf( this );
						A = GlobalFuncs.get_area( bombturf );
						log_str = new Txt().item( GlobalFuncs.key_name( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( b ).str( "'>?</A> has rigged a beartrap with an IED at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString();
						GlobalFuncs.message_admins( log_str );
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + log_str ) );
						GlobalFuncs.to_chat( b, "<span class='notice'>You sneak the " + this.IED + " underneath the pressure plate and connect the trigger wire.</span>" );
						this.desc = "A trap used to catch bears and other legged creatures. <span class='warning'>There is an IED hooked up to it.</span>";
					}
				} else {
					GlobalFuncs.to_chat( b, "<span class='danger'>You shouldn't be reading this message! Contact a coder or someone, something broke!</span>" );
					this.IED = null;
					return null;
				}
			}

			if ( a is Obj_Item_Weapon_Screwdriver ) {
				
				if ( Lang13.Bool( this.IED ) ) {
					this.IED.loc = GlobalFuncs.get_turf( this.loc );
					this.IED = null;
					GlobalFuncs.to_chat( b, "<span class='notice'>You remove the IED from the " + this + ".</span>" );
					return null;
				}
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: weapon.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			base.attack_self( (object)(user), (object)(flag), emp );

			if ( user is Mob_Living_Carbon_Human && !Lang13.Bool( user.stat ) && !((Mob)user).restrained() ) {
				this.armed = !this.armed;
				this.update_icon();
				GlobalFuncs.to_chat( user, "<span class='notice'>" + this + " is now " + ( this.armed ? "armed" : "disarmed" ) + "</span>" );
				GlobalFuncs.playsound( user.loc, "sound/weapons/handcuffs.ogg", 30, 1, -3 );

				if ( this.armed && Lang13.Bool( this.IED ) ) {
					GlobalFuncs.message_admins( "" + GlobalFuncs.key_name( Task13.User ) + " has armed a beartrap rigged with an IED at " + GlobalFuncs.formatJumpTo( GlobalFuncs.get_turf( this ) ) + "!" );
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( Task13.User ) + " has armed a beartrap rigged with an IED at " + GlobalFuncs.formatJumpTo( GlobalFuncs.get_turf( this ) ) + "!" ) ) );
				}
			}
			return null;
		}

		// Function from file: weapon.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			this.icon_state = "beartrap" + this.armed;
			return null;
		}

		// Function from file: weapon.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			GlobalFuncs.to_chat( Map13.FetchViewers( null, user ), new Txt( "<span class='danger'>" ).item( user ).str( " is putting the " ).item( this.name ).str( " on " ).his_her_its_their().str( " head! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
			return 1;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Projectile_Rocketlauncher : Obj_Item_Weapon_Gun_Projectile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fire_sound = "sound/weapons/rocket.ogg";
			this.item_state = "rpg";
			this.max_shells = 1;
			this.w_class = 4;
			this.starting_materials = new ByTable().Set( "$iron", 5000 );
			this.force = 10;
			this.recoil = 5;
			this.throw_range = 3;
			this.fire_delay = 5;
			this.slot_flags = 1024;
			this.caliber = new ByTable().Set( "rpg", 1 );
			this.origin_tech = "combat=4;materials=2;syndicate=2";
			this.ammo_type = "/obj/item/ammo_casing/rocket_rpg";
			this.attack_verb = new ByTable(new object [] { "struck", "hit", "bashed" });
			this.gun_flags = 0;
			this.icon_state = "rpg";
		}

		public Obj_Item_Weapon_Gun_Projectile_Rocketlauncher ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: rocketlauncher.dm
		public override dynamic suicide_act( Mob_Living_Carbon_Human user = null ) {
			
			if ( !this.process_chambered() ) {
				user.visible_message( new Txt( "<span class='danger'>" ).item( user ).str( " jams down " ).the( this ).item().str( "'s trigger before noticing it isn't loaded and starts bashing " ).his_her_its_their().str( " head in with it! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
				return 1;
			} else {
				user.visible_message( new Txt( "<span class='danger'>" ).item( user ).str( " fiddles with " ).the( this ).item().str( "'s safeties and suddenly aims it at " ).his_her_its_their().str( " feet! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() );
				Task13.Schedule( 10, (Task13.Closure)(() => {
					GlobalFuncs.explosion( this.loc, -1, 1, 4, 8 );

					if ( this != null ) {
						GlobalFuncs.qdel( this );
					}
					return;
					return;
				}));
			}
			return null;
		}

		// Function from file: rocketlauncher.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			
			if ( M == user && ((dynamic)user.zone_sel).selecting == "mouth" ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='warning'>" ).item( user ).str( " tries to fit " ).the( this ).item().str( " into " ).his_her_its_their().str( " mouth but quickly reconsiders it</span>" ).ToString(), new Txt( "<span class='warning'>You try to fit " ).the( this ).item().str( " into your mouth. You feel silly and pull it out</span>" ).ToString() );
				return null;
			}
			base.attack( (object)(M), (object)(user), def_zone, eat_override );
			return null;
		}

		// Function from file: rocketlauncher.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( !( this.getAmmo() != 0 ) ) {
				this.icon_state = "rpg_e";
				this.item_state = "rpg_e";
			} else {
				this.icon_state = "rpg";
				this.item_state = "rpg";
			}
			return null;
		}

		// Function from file: rocketlauncher.dm
		public override bool isHandgun(  ) {
			return false;
		}

	}

}
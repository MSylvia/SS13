// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Hookshot : Obj_Item_Weapon_Gun {

		public int? maxlength = 14;
		public Obj_Item_Projectile_Hookshot hook = null;
		public ByTable links = new ByTable();
		public Chain chain_datum = null;
		public bool rewinding = false;
		public bool clockwerk = false;
		public Ent_Static firer = null;
		public dynamic extremity = null;
		public bool panic = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "hookshot";
			this.origin_tech = "materials=2;engineering=3;magnets=2";
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/guns_experimental.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/guns_experimental.dmi" );
			this.fire_delay = 0;
			this.fire_sound = "sound/weapons/hookshot_fire.ogg";
			this.icon = "icons/obj/gun_experimental.dmi";
			this.icon_state = "hookshot";
		}

		// Function from file: hookshot.dm
		public Obj_Item_Weapon_Gun_Hookshot ( dynamic loc = null ) : base( (object)(loc) ) {
			int? i = null;
			Obj_Effect_Overlay_Hookchain HC = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			i = null;
			i = 0;

			while (( i ??0) <= ( this.maxlength ??0)) {
				HC = new Obj_Effect_Overlay_Hookchain( this );
				HC.shot_from = this;
				this.links["" + i] = HC;
				i++;
			}
			return;
		}

		// Function from file: hookshot.dm
		public void clockwerk_chain( int? length = null ) {
			int? i = null;
			Ent_Static HC = null;
			Ent_Static oldLoc = null;
			int bckp = 0;

			
			if ( this.clockwerk ) {
				return;
			}
			this.clockwerk = true;
			i = null;
			i = 1;

			while (( i ??0) <= ( length ??0)) {
				HC = this.links["" + i];

				if ( !( HC.loc is Tile ) || this.loc != this.firer ) {
					this.cancel_chain();
					break;
				}
				oldLoc = this.firer.loc;
				bckp = this.firer.pass_flags;
				this.firer.pass_flags = 1;
				((dynamic)this.firer).Move( HC.loc, Map13.GetDistance( this.firer, HC.loc ) );
				this.firer.pass_flags = bckp;

				if ( this.firer.loc == oldLoc ) {
					this.clockwerk = false;
					this.rewind_chain();
					return;
				}
				HC.loc = this;
				Task13.Sleep( 1 );
				i++;
			}
			this.clockwerk = false;
			this.update_icon();
			return;
		}

		// Function from file: hookshot.dm
		public void cancel_chain(  ) {
			int? j = null;
			Obj_Effect_Overlay_Hookchain HC = null;

			j = null;
			j = 1;

			while (( j ??0) <= ( this.maxlength ??0)) {
				HC = this.links["" + j];

				if ( HC != null ) {
					HC.loc = this;
				} else {
					HC = new Obj_Effect_Overlay_Hookchain( this );
					HC.shot_from = this;
					this.links["" + j] = HC;
				}
				j++;
			}
			this.rewinding = false;
			this.clockwerk = false;
			this.update_icon();
			return;
		}

		// Function from file: hookshot.dm
		public void rewind_chain(  ) {
			int? j = null;
			int pause = 0;
			int? i = null;
			Ent_Static HC = null;
			Ent_Static HC0 = null;

			
			if ( this.rewinding ) {
				return;
			}
			this.rewinding = true;
			j = null;
			j = 1;

			while (( j ??0) <= ( this.maxlength ??0)) {
				pause = 0;
				i = null;
				i = this.maxlength;

				while (( i ??0) > 0) {
					HC = this.links["" + i];

					if ( !( HC != null ) ) {
						this.cancel_chain();
						return;
					}

					if ( HC.loc == this ) {
						
					} else {
						pause = 1;
						HC0 = this.links["" + ( ( i ??0) - 1 )];

						if ( !( HC0 != null ) ) {
							this.cancel_chain();
							return;
						}
						HC.loc = HC0.loc;
						HC.pixel_x = HC0.pixel_x;
						HC.pixel_y = HC0.pixel_y;
					}
					i--;
				}
				Task13.Sleep( pause );
				j++;
			}
			this.rewinding = false;
			this.update_icon();
			return;
		}

		// Function from file: hookshot.dm
		public bool check_tether(  ) {
			Ent_Static L = null;
			Chain tether_datum = null;

			
			if ( this.chain_datum != null && this.loc is Mob_Living ) {
				L = this.loc;

				if ( Lang13.Bool( ((dynamic)L).tether ) ) {
					tether_datum = ((dynamic)L).tether.chain_datum;

					if ( tether_datum == this.chain_datum ) {
						return true;
					}
				}
			}
			return false;
		}

		// Function from file: hookshot.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Ent_Dynamic C = null;

			
			if ( this.chain_datum != null && this.chain_datum.extremity_A == this ) {
				
				if ( a.tether != null ) {
					return null;
				} else {
					C = this.tether;
					((dynamic)C).extremity_A = a;
					a.tether = C;
					this.chain_datum.extremity_A = a;
					((Obj_Effect_Overlay_Chain)C).follow( a, Map13.GetStep( a, Map13.GetDistance( a, C ) ) );
					this.tether = null;
				}
			}
			base.attack_hand( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: hookshot.dm
		public override dynamic dropped( dynamic user = null ) {
			Chain tether_datum = null;
			Obj_Effect_Overlay_Chain C = null;
			Ent_Static AM = null;

			
			if ( !this.clockwerk && !this.rewinding ) {
				this.rewind_chain();
			}

			if ( user.tether != null ) {
				tether_datum = ((dynamic)user.tether).chain_datum;

				if ( tether_datum == this.chain_datum ) {
					Task13.Schedule( 1, (Task13.Closure)(() => {
						
						if ( this.loc is Tile ) {
							user.tether = null;
							this.chain_datum.extremity_A = this;
							C = this.chain_datum.links["1"];
							C.extremity_A = this;
							C.follow( this, Map13.GetStep( this.loc, Map13.GetDistance( this.loc, C ) ) );
							this.tether = C;
						} else {
							AM = this.chain_datum.extremity_B;

							if ( AM != null ) {
								((dynamic)AM).tether = null;
							}
							this.chain_datum.extremity_B = null;
							this.chain_datum.rewind_chain();
						}
						return;
					}));
				}
			}
			base.dropped( (object)(user) );
			return null;
		}

		// Function from file: hookshot.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			struggle = struggle ?? false;

			Ent_Static C = null;

			
			if ( flag == true ) {
				return false;
			}

			if ( this.check_tether() ) {
				
				if ( this.chain_datum.extremity_B is Mob_Living_Carbon ) {
					C = this.chain_datum.extremity_B;
					GlobalFuncs.to_chat( C, new Txt( "<span class='warning'>" ).The( this ).item().str( " reels you in!</span>" ).ToString() );
				}
				this.chain_datum.rewind_chain();
				return false;
			}
			base.afterattack( (object)(A), (object)(user), flag, (object)(_params), struggle );
			return false;
		}

		// Function from file: hookshot.dm
		public override bool process_chambered(  ) {
			int? i = null;
			Obj_Effect_Overlay_Hookchain HC = null;

			
			if ( Lang13.Bool( this.in_chamber ) ) {
				return true;
			}

			if ( this.panic ) {
				i = null;
				i = 0;

				while (( i ??0) <= ( this.maxlength ??0)) {
					HC = this.links["" + i];

					if ( !( HC != null ) ) {
						HC = new Obj_Effect_Overlay_Hookchain( this );
						HC.shot_from = this;
						this.links["" + i] = HC;
					} else {
						HC.loc = this;
					}
					i++;
				}
				this.panic = false;
			}

			if ( !( this.hook != null ) && !this.rewinding && !this.clockwerk && !this.check_tether() ) {
				this.hook = new Obj_Item_Projectile_Hookshot( this );
				this.in_chamber = this.hook;
				this.firer = this.loc;
				this.update_icon();
				return true;
			}
			return false;
		}

		// Function from file: hookshot.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Ent_Static AM = null;

			
			if ( this.check_tether() ) {
				AM = this.chain_datum.extremity_B;

				if ( AM != null ) {
					((dynamic)AM).tether = null;
				}
				this.chain_datum.extremity_B = null;
				this.chain_datum.rewind_chain();
			}
			return null;
		}

		// Function from file: hookshot.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			int? i = null;
			dynamic HC = null;

			
			if ( this.chain_datum != null ) {
				this.chain_datum.Delete_Chain();
			}
			i = null;
			i = 0;

			while (( i ??0) <= ( this.maxlength ??0)) {
				HC = this.links["" + i];
				GlobalFuncs.qdel( HC );
				this.links["" + i] = null;
				i++;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: hookshot.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			Ent_Static M = null;

			
			if ( this.hook != null || this.chain_datum != null ) {
				this.icon_state = "hookshot0";
				this.item_state = "hookshot0";
			} else {
				this.icon_state = "hookshot";
				this.item_state = "hookshot";
			}

			if ( this.loc is Mob ) {
				M = this.loc;
				((dynamic)M).regenerate_icons();
			}
			return null;
		}

	}

}
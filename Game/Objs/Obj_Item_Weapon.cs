// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon : Obj_Item {

		public ByTable heard_words = null;
		public int lastsaid = 0;
		public bool listening_to_players = false;
		public bool speaking_to_players = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/weapons.dmi";
		}

		public Obj_Item_Weapon ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: finds_talkingitem.dm
		public void SaySomething( dynamic word = null ) {
			string msg = null;
			int? limit = null;
			dynamic text = null;
			string cap = null;
			bool q = false;
			int? ya = null;
			dynamic w = null;
			ByTable listening = null;
			dynamic M = null;
			dynamic M2 = null;

			limit = Rand13.Int( Num13.MaxInt( 5, ((int)( this.heard_words.len / 2 )) ) ) + 3;

			if ( !Lang13.Bool( word ) ) {
				text = "" + Rand13.PickFromTable( this.heard_words );
			} else {
				text = Rand13.PickFromTable( GlobalFuncs.text2list( word, " " ) );
			}

			if ( Lang13.Length( text ) == 1 ) {
				text = String13.ToUpper( text );
			} else {
				cap = String13.SubStr( text, 1, 2 );
				cap = String13.ToUpper( cap );
				cap += String13.SubStr( text, 2, Lang13.Length( text ) + 1 );
				text = cap;
			}
			q = false;
			msg += text;

			if ( ( ( msg == "What" ?1:0) | ( msg == "Who" ?1:0) | ( msg == "How" ?1:0) | ( msg == "Why" ?1:0) | ( msg == "Are" ?1:0) ) != 0 ) {
				q = true;
			}
			text = String13.ToLower( text );
			ya = null;

			while (( ya ??0) <= ( limit ??0)) {
				
				if ( this.heard_words.Find( "" + text ) != 0 ) {
					w = this.heard_words["" + text];
					text = Rand13.PickFromTable( w );
				} else {
					text = "" + Rand13.PickFromTable( this.heard_words );
				}
				msg += " " + text;
				ya++;
			}

			if ( q ) {
				msg += "?";
			} else if ( Rand13.Int( 0, 10 ) != 0 ) {
				msg += ".";
			} else {
				msg += "!";
			}
			listening = Map13.FetchViewers( null, this );

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				

				if ( !Lang13.Bool( M.client ) ) {
					continue;
				}

				if ( M is Mob_NewPlayer ) {
					continue;
				}

				if ( Convert.ToInt32( M.stat ) == 2 && Lang13.Bool( M.client.prefs.toggles & 64 ) ) {
					listening.Or( M );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( listening )) {
				M2 = _b;
				
				GlobalFuncs.to_chat( M2, "<b>" + this + "</b> reverberates, <span class='warning'>\"" + msg + "\"</span>" );
			}
			this.lastsaid = Game13.timeofday + Rand13.Int( 300, 800 );
			return;
		}

		// Function from file: finds_talkingitem.dm
		public void catchMessage( string msg = null, dynamic source = null ) {
			ByTable seperate = null;
			int? Xa = null;
			int next = 0;
			dynamic w = null;
			dynamic O = null;

			
			if ( this.speaking_to_players ) {
				seperate = new ByTable();

				if ( String13.FindIgnoreCase( msg, "((", 1, 0 ) != 0 ) {
					return;
				} else if ( String13.FindIgnoreCase( msg, "))", 1, 0 ) != 0 ) {
					return;
				} else if ( String13.FindIgnoreCase( msg, " ", 1, 0 ) == 0 ) {
					return;
				} else {
					seperate = GlobalFuncs.text2list( msg, " " );
				}
				Xa = null;
				Xa = 1;

				while (( Xa ??0) < seperate.len) {
					next = ( Xa ??0) + 1;

					if ( this.heard_words.len > Rand13.Int( 10, 20 ) + 20 ) {
						this.heard_words.Remove( this.heard_words[1] );
					}

					if ( !Lang13.Bool( this.heard_words["" + String13.ToLower( seperate[Xa] )] ) ) {
						this.heard_words["" + String13.ToLower( seperate[Xa] )] = new ByTable();
					}
					w = this.heard_words["" + String13.ToLower( seperate[Xa] )];

					if ( Lang13.Bool( w ) ) {
						w.Add( "" + String13.ToLower( seperate[next] ) );
					}
					Xa++;
				}

				if ( !( Rand13.Int( 0, 5 ) != 0 ) ) {
					Task13.Schedule( 2, (Task13.Closure)(() => {
						this.SaySomething( Rand13.PickFromTable( seperate ) );
						return;
					}));
				}
			}

			if ( Rand13.PercentChance( 30 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchViewers( null, this ) )) {
					O = _a;
					
					O.show_message( "<span class='notice'>" + this + " hums for bit then stops...</span>", 1 );
				}
			}
			return;
		}

		// Function from file: finds_talkingitem.dm
		public override dynamic process(  ) {
			
			if ( !this.speaking_to_players ) {
				GlobalVars.processing_objects.Remove( this );
				return null;
			}

			if ( Rand13.PercentChance( 10 ) && Game13.timeofday >= this.lastsaid && this.heard_words.len >= 1 ) {
				this.SaySomething();
			}
			return null;
		}

		// Function from file: vgstation13.dme
		public override dynamic Bump( Obj Obstacle = null, dynamic yes = null ) {
			Task13.Schedule( 0, (Task13.Closure)(() => {
				base.Bump( Obstacle );
				return;
			}));
			return null;
		}

	}

}
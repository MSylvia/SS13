// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Organ_Internal_Heart : Obj_Item_Organ_Internal {

		public bool beating = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.slot = "heart";
			this.origin_tech = "biotech=3";
			this.vital = true;
			this.icon_state = "heart-on";
		}

		public Obj_Item_Organ_Internal_Heart ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: organ_internal.dm
		public override Obj_Item_Weapon_ReagentContainers_Food_Snacks_Organ prepare_eat(  ) {
			Obj_Item_Weapon_ReagentContainers_Food_Snacks_Organ S = null;

			S = base.prepare_eat();
			S.icon_state = "heart-off";
			return S;
		}

		// Function from file: organ_internal.dm
		public override void Remove( dynamic M = null, bool? special = null ) {
			special = special ?? false;

			base.Remove( (object)(M), special );
			Task13.Schedule( 120, (Task13.Closure)(() => {
				this.beating = false;
				this.update_icon();
				return;
			}));
			return;
		}

		// Function from file: organ_internal.dm
		public override void Insert( dynamic M = null, int? special = null ) {
			special = special ?? 0;

			base.Insert( (object)(M), special );
			this.beating = true;
			this.update_icon();
			return;
		}

		// Function from file: organ_internal.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.beating ) {
				this.icon_state = "heart-on";
			} else {
				this.icon_state = "heart-off";
			}
			return false;
		}

	}

}
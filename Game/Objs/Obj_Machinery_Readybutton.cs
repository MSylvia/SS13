// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Readybutton : Obj_Machinery {

		public bool ready = false;
		public dynamic currentarea = null;
		public bool eventstarted = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 2;
			this.active_power_usage = 6;
			this.power_channel = 3;
			this.icon = "icons/obj/monitors.dmi";
			this.icon_state = "auth_off";
		}

		// Function from file: HolodeckControl.dm
		public Obj_Machinery_Readybutton ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: HolodeckControl.dm
		public void begin_event(  ) {
			Obj_Structure_Holowindow W = null;
			dynamic M = null;

			this.eventstarted = true;

			foreach (dynamic _a in Lang13.Enumerate( this.currentarea, typeof(Obj_Structure_Holowindow) )) {
				W = _a;
				
				GlobalFuncs.qdel( W );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.currentarea )) {
				M = _b;
				
				GlobalFuncs.to_chat( M, "FIGHT!" );
			}
			return;
		}

		// Function from file: HolodeckControl.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.ready ) {
				this.icon_state = "auth_on";
			} else {
				this.icon_state = "auth_off";
			}
			return null;
		}

		// Function from file: HolodeckControl.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			int numbuttons = 0;
			int numready = 0;
			Obj_Machinery_Readybutton button = null;

			
			if ( Lang13.Bool( a.stat ) || ( this.stat & 3 ) != 0 ) {
				GlobalFuncs.to_chat( a, "This device is not powered." );
				return null;
			}
			this.currentarea = GlobalFuncs.get_area( this.loc );

			if ( !Lang13.Bool( this.currentarea ) ) {
				GlobalFuncs.qdel( this );
			}

			if ( this.eventstarted ) {
				GlobalFuncs.to_chat( Task13.User, "The event has already begun!" );
				return null;
			}
			this.ready = !this.ready;
			this.update_icon();
			numbuttons = 0;
			numready = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.currentarea, typeof(Obj_Machinery_Readybutton) )) {
				button = _a;
				
				numbuttons++;

				if ( button.ready ) {
					numready++;
				}
			}

			if ( numbuttons == numready ) {
				this.begin_event();
			}
			return null;
		}

		// Function from file: HolodeckControl.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			GlobalFuncs.to_chat( b, "The device is a solid button, there's nothing you can do with it!" );
			return null;
		}

		// Function from file: HolodeckControl.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			GlobalFuncs.to_chat( a, "You are too primitive to use this device" );
			return null;
		}

		// Function from file: HolodeckControl.dm
		public override dynamic attack_ai( dynamic user = null ) {
			GlobalFuncs.to_chat( user, "The station AI is not to interact with these devices" );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Radio_Uplink : Obj_Item_Device_Radio {

		// Function from file: uplink.dm
		public Obj_Item_Device_Radio_Uplink ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_state = "radio";
			this.hidden_uplink = new Obj_Item_Device_Uplink( this );
			this.hidden_uplink.active = GlobalVars.TRUE;
			this.hidden_uplink.lockable = GlobalVars.FALSE;
			return;
		}

		// Function from file: uplink.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic item = null;
			dynamic UI = null;
			dynamic path = null;
			dynamic cost = null;
			dynamic refundable = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( typeof(UplinkItem) ) - typeof(UplinkItem) )) {
				item = _a;
				
				UI = item;
				path = Lang13.Initial( UI, "item" );
				cost = Lang13.Initial( UI, "cost" );
				refundable = Lang13.Initial( UI, "refundable" );

				if ( A.type == path && Lang13.Bool( refundable ) ) {
					this.hidden_uplink.telecrystals += cost;
					this.hidden_uplink.spent_telecrystals -= Convert.ToDouble( cost );
					user.WriteMsg( "<span class='notice'>" + A + " refunded.</span>" );
					GlobalFuncs.qdel( A );
					return null;
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

	}

}
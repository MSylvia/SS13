// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Twohanded_Spear : Obj_Item_Weapon_Twohanded {

		public dynamic explosive = null;
		public string war_cry = "AAAAARGH!!!";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.force = 10;
			this.w_class = 4;
			this.slot_flags = 1024;
			this.force_unwielded = 10;
			this.force_wielded = 18;
			this.throwforce = 20;
			this.throw_speed = 4;
			this.embedded_impact_pain_multiplier = 3;
			this.armour_penetration = 10;
			this.hitsound = "sound/weapons/bladeslice.ogg";
			this.attack_verb = new ByTable(new object [] { "attacked", "poked", "jabbed", "torn", "gored" });
			this.sharpness = 1;
			this.icon_state = "spearglass0";
		}

		public Obj_Item_Weapon_Twohanded_Spear ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: twohanded.dm
		public override void CheckParts( Game_Data holder = null ) {
			dynamic G = null;
			dynamic C4 = null;
			Obj_Item_Weapon_Grenade_C4 C42 = null;

			
			if ( Lang13.Bool( this.explosive ) ) {
				this.explosive.loc = GlobalFuncs.get_turf( this.loc );
				this.explosive = null;
			}
			G = Lang13.FindIn( typeof(Obj_Item_Weapon_Grenade), this.contents );

			if ( Lang13.Bool( G ) ) {
				this.explosive = G;
				this.name = "explosive lance";
				this.desc = "A makeshift spear with " + G + " attached to it. Alt+click on the spear to set your war cry!";
				return;
			}
			C4 = Lang13.FindIn( typeof(Obj_Item_Weapon_C4), this.contents );

			if ( Lang13.Bool( C4 ) ) {
				C42 = new Obj_Item_Weapon_Grenade_C4( this );
				GlobalFuncs.qdel( C4 );
				this.explosive = C42;
				this.desc = "A makeshift spear with " + C42 + " attached to it. Alt+click on the spear to set your war cry!";
			}
			this.update_icon();
			return;
		}

		// Function from file: twohanded.dm
		public override bool AltClick( Mob user = null ) {
			Ent_Static M = null;
			string input = null;

			base.AltClick( user );

			if ( !Lang13.Bool( this.explosive ) ) {
				return false;
			}

			if ( this.loc is Mob ) {
				M = this.loc;
				input = GlobalFuncs.stripped_input( M, "What do you want your war cry to be? You will shout it when you hit someone in melee.", null, "", 50 );

				if ( Lang13.Bool( input ) ) {
					this.war_cry = input;
				}
			}
			return false;
		}

		// Function from file: twohanded.dm
		public override bool throw_impact( dynamic target = null, Mob_Living_Carbon thrower = null ) {
			bool _default = false;

			_default = base.throw_impact( (object)(target), thrower );

			if ( Lang13.Bool( this.explosive ) ) {
				((Obj_Item_Weapon_Grenade)this.explosive).prime();
				GlobalFuncs.qdel( this );
			}
			return _default;
		}

		// Function from file: twohanded.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			if ( target is Tile_Simulated_Floor ) {
				return false;
			}

			if ( target is Tile_Space ) {
				return false;
			}

			if ( Lang13.Bool( this.explosive ) && this.wielded ) {
				((Ent_Dynamic)user).say( "" + this.war_cry );
				this.explosive.loc = target;
				((Obj_Item_Weapon_Grenade)this.explosive).prime();
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: twohanded.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( Lang13.Bool( this.explosive ) ) {
				this.icon_state = "spearbomb" + this.wielded;
			} else {
				this.icon_state = "spearglass" + this.wielded;
			}
			return false;
		}

	}

}
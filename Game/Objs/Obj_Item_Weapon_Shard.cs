// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Shard : Obj_Item_Weapon {

		public int cooldown = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.force = 5;
			this.throwforce = 10;
			this.item_state = "shard-glass";
			this.materials = new ByTable().Set( "$glass", 2000 );
			this.attack_verb = new ByTable(new object [] { "stabbed", "slashed", "sliced", "cut" });
			this.hitsound = "sound/weapons/bladeslice.ogg";
			this.sharpness = 1;
			this.icon = "icons/obj/shards.dmi";
			this.icon_state = "large";
		}

		// Function from file: glass.dm
		public Obj_Item_Weapon_Shard ( dynamic loc = null ) : base( (object)(loc) ) {
			this.icon_state = Rand13.Pick(new object [] { "large", "medium", "small" });

			switch ((string)( this.icon_state )) {
				case "small":
					this.pixel_x = Rand13.Int( -12, 12 );
					this.pixel_y = Rand13.Int( -12, 12 );
					break;
				case "medium":
					this.pixel_x = Rand13.Int( -8, 8 );
					this.pixel_y = Rand13.Int( -8, 8 );
					break;
				case "large":
					this.pixel_x = Rand13.Int( -5, 5 );
					this.pixel_y = Rand13.Int( -5, 5 );
					break;
			}
			return;
		}

		// Function from file: glass.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic H = null;

			
			if ( O is Mob && GlobalFuncs.has_gravity( this.loc ) ) {
				GlobalFuncs.playsound( this.loc, "sound/effects/glass_step.ogg", 50, 1 );

				if ( O is Mob_Living_Carbon_Human ) {
					H = O;

					if ( ((dynamic)H).dna.species.specflags.Contains( 8192 ) ) {
						return 0;
					}

					if ( !Lang13.Bool( ((dynamic)H).shoes ) ) {
						((dynamic)H).apply_damage( 5, "brute", Rand13.Pick(new object [] { "l_leg", "r_leg" }) );
						((dynamic)H).Weaken( 3 );

						if ( this.cooldown < Game13.time - 10 ) {
							H.visible_message( "<span class='danger'>" + H + " steps in the broken glass!</span>", "<span class='userdanger'>You step in the broken glass!</span>" );
							this.cooldown = Game13.time;
						}
					}
				}
			}
			return null;
		}

		// Function from file: glass.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic WT = null;
			Obj_Item_Stack_Sheet_Glass NG = null;
			Obj_Item_Stack_Sheet_Glass G = null;

			
			if ( A is Obj_Item_Weapon_Weldingtool ) {
				WT = A;

				if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
					NG = new Obj_Item_Stack_Sheet_Glass( user.loc );

					foreach (dynamic _a in Lang13.Enumerate( user.loc, typeof(Obj_Item_Stack_Sheet_Glass) )) {
						G = _a;
						

						if ( G == NG ) {
							continue;
						}

						if ( ( G.amount ??0) >= ( G.max_amount ??0) ) {
							continue;
						}
						G.attackby( NG, user );
					}
					user.WriteMsg( new Txt( "<span class='notice'>You add the newly-formed glass to the stack. It now contains " ).item( NG.amount ).str( " sheet" ).s().str( ".</span>" ).ToString() );
					GlobalFuncs.qdel( this );
				}
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: glass.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic H = null;
			string organ = null;
			dynamic affecting = null;
			dynamic M = null;

			
			if ( !( proximity_flag == true ) || !Lang13.Bool( user.Contains( this ) ) ) {
				return false;
			}

			if ( target is Tile ) {
				return false;
			}

			if ( target is Obj_Item_Weapon_Storage ) {
				return false;
			}

			if ( user is Mob_Living_Carbon_Human ) {
				H = user;

				if ( !Lang13.Bool( H.gloves ) && !H.dna.species.specflags.Contains( 8192 ) ) {
					H.WriteMsg( "<span class='warning'>" + this + " cuts into your hand!</span>" );
					organ = ( H.hand ? "l_" : "r_" ) + "arm";
					affecting = ((Mob_Living_Carbon_Human)H).get_organ( organ );

					if ( ((Obj_Item_Organ_Limb)affecting).take_damage( this.force / 2 ) ) {
						((Mob_Living)H).update_damage_overlays(  );
					}
				}
			} else if ( user is Mob_Living_Carbon_Monkey ) {
				M = user;
				M.WriteMsg( "<span class='warning'>" + this + " cuts into your hand!</span>" );
				((Mob_Living)M).adjustBruteLoss( this.force / 2 );
			}
			return false;
		}

		// Function from file: glass.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( Rand13.Pick(new object [] { new Txt( "<span class='suicide'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " wrists with the shard of glass! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString(), new Txt( "<span class='suicide'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " throat with the shard of glass! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() }) );
			return 1;
		}

	}

}
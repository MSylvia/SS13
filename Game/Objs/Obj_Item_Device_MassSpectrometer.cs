// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_MassSpectrometer : Obj_Item_Device {

		public bool details = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "analyzer";
			this.w_class = 2;
			this.flags = 4352;
			this.slot_flags = 512;
			this.throwforce = 5;
			this.throw_speed = 4;
			this.throw_range = 20;
			this.starting_materials = new ByTable().Set( "$iron", 30 ).Set( "$glass", 20 );
			this.w_type = 5;
			this.origin_tech = "magnets=2;biotech=2";
			this.icon_state = "spectrometer";
		}

		// Function from file: scanners.dm
		public Obj_Item_Device_MassSpectrometer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.create_reagents( 5 );
			return;
		}

		// Function from file: scanners.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic _default = null;

			ByTable blood_traces = null;
			Reagent R = null;
			string dat = null;
			dynamic R2 = null;

			_default = base.attack_self( (object)(user), (object)(flag), emp );

			if ( Lang13.Bool( _default ) ) {
				return _default;
			}

			if ( !Lang13.Bool( user.dexterity_check() ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You don't have the dexterity to do this!</span>" );
				return _default;
			}

			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				blood_traces = new ByTable();

				foreach (dynamic _a in Lang13.Enumerate( this.reagents.reagent_list, typeof(Reagent) )) {
					R = _a;
					

					if ( R.id != "blood" ) {
						((Reagents)this.reagents).clear_reagents();
						GlobalFuncs.to_chat( user, "<span class='warning'>The sample was contaminated! Please insert another sample.</span>" );
						return _default;
					} else {
						blood_traces = String13.ParseUrlParams( R.data["trace_chem"] );
						break;
					}
				}
				dat = null;

				if ( blood_traces.len != 0 ) {
					dat = "Trace Chemicals Found:";

					foreach (dynamic _b in Lang13.Enumerate( blood_traces )) {
						R2 = _b;
						
						dat += "<br>" + R2 + " " + ( this.details ? "(" + blood_traces[R2] + " units)" : "" );
					}
				} else {
					dat = "No trace chemicals found in the sample.";
				}
				GlobalFuncs.to_chat( user, "<span class='notice'>" + dat + "</span>" );
				((Reagents)this.reagents).clear_reagents();
			}
			return _default;
		}

		// Function from file: scanners.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic C = null;
			dynamic B = null;

			
			if ( !Lang13.Bool( M.reagents ) ) {
				return null;
			}

			if ( M is Mob_Living_Carbon ) {
				C = M;

				if ( Lang13.Bool( this.reagents.total_volume ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>This device already has a blood sample!</span>" );
					return null;
				}

				if ( !Lang13.Bool( user.dexterity_check() ) ) {
					GlobalFuncs.to_chat( user, "<span class='warning'>You don't have the dexterity to do this!</span>" );
					return null;
				}

				if ( !Lang13.Bool( C.dna ) ) {
					return null;
				}
				Interface13.Stat( null, C.mutations.Contains( 8 ) );

				if ( !Lang13.Bool( C.dna ) ) {
					return null;
				}
				B = ((Mob_Living_Carbon)C).take_blood( this, this.reagents.maximum_volume );

				if ( Lang13.Bool( B ) ) {
					this.reagents.reagent_list |= B;
					((Reagents)this.reagents).update_total();
					this.on_reagent_change();
					((Reagents)this.reagents).handle_reactions();
					this.update_icon();
					((Ent_Static)user).visible_message( "<span class='warning'>" + user + " takes a blood sample from " + C + ".</span>", "<span class='notice'>You take a blood sample from " + C + "</span>" );
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/hypospray.ogg", 50, 1 );
				}
			}
			return null;
		}

		// Function from file: scanners.dm
		public override void on_reagent_change(  ) {
			
			if ( Lang13.Bool( this.reagents.total_volume ) ) {
				this.icon_state = Lang13.Initial( this, "icon_state" ) + "_s";
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Storage_ComponentExchanger : Obj_Item_Weapon_Storage {

		public bool emagged = false;
		public bool working = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.slot_flags = 512;
			this.w_class = 2;
			this.item_state = "electronic";
			this.w_type = 5;
			this.origin_tech = "magnets=2;engineering=4;materials=5;programming=3";
			this.allow_quick_gather = true;
			this.use_to_pickup = true;
			this.allow_quick_empty = true;
			this.storage_slots = 21;
			this.can_hold = new ByTable(new object [] { "/obj/item/weapon/stock_parts" });
			this.icon = "icons/obj/device.dmi";
			this.icon_state = "comp_exchanger";
		}

		public Obj_Item_Weapon_Storage_ComponentExchanger ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: component_exchanger.dm
		public void perform_indiv_replace( Obj_Item_Weapon_StockParts P = null, Obj_Item_Weapon_StockParts R = null, dynamic M = null ) {
			M.component_parts -= P;
			this.handle_item_insertion( P, true );
			this.remove_from_storage( R, M );
			M.component_parts += R;
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/Deconstruct.ogg", 50, 1 );
			return;
		}

		// Function from file: component_exchanger.dm
		public void component_interaction( dynamic M = null, dynamic user = null ) {
			string interactoption = null;
			dynamic ratingpool = null;
			int componentamount = 0;
			Obj_Item_Weapon_StockParts P = null;
			Obj_Item_Weapon_StockParts P2 = null;
			Obj_Item_Weapon_StockParts_Capacitor R = null;
			Obj_Item_Weapon_StockParts_ScanningModule R2 = null;
			Obj_Item_Weapon_StockParts_Manipulator R3 = null;
			Obj_Item_Weapon_StockParts_MicroLaser R4 = null;
			Obj_Item_Weapon_StockParts_MatterBin R5 = null;

			
			if ( !((Ent_Static)M).Adjacent( user ) ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>A blue screen suddenly flashes on " ).the( this ).item().str( "'s HUD. It appears the critical failure was caused by suddenly yanking it out of " ).the( M ).item().str( "'s maintenance hatch.</span>" ).ToString() );
				this.working = false;
				return;
			}
			interactoption = Interface13.Alert( "Select desired operation", "RMCE V.12 Ready", "Output Information", "Replace Component", "Finish Operation" );

			if ( interactoption == "Finish Operation" ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " pulls " ).the( this ).item().str( " out of " ).the( M ).item().str( "'s maintenance hatch.</span>" ).ToString(), new Txt( "<span class='notice'>A fancy log-out screen appears and " ).the( this ).item().str( "'s systems shut down. You pull it out of " ).the( M ).item().str( " carefully.</span>" ).ToString() );
				this.working = false;
				return;
			}

			if ( interactoption == "Output Information" ) {
				GlobalFuncs.to_chat( user, new Txt( "<span class='notice'><B>Scanning results for " ).the( M ).item().str( " :</B></span>" ).ToString() );

				if ( M.component_parts.len != 0 ) {
					
					foreach (dynamic _a in Lang13.Enumerate( M.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
						P = _a;
						
						Task13.Sleep( 5 );
						GlobalFuncs.to_chat( user, "<span class='notice'><B>Detected :</B> " + P + " of effective quality rating " + P.rating + ".</span>" );
						ratingpool += P.rating;
						componentamount++;
					}

					if ( Lang13.Bool( ratingpool ) ) {
						Task13.Sleep( 5 );
						GlobalFuncs.to_chat( user, "<span class='notice'><B>Effective quality rating of machine components : " + ratingpool / componentamount + ".<B></span>" );
					}
				} else {
					Task13.Sleep( 5 );
					GlobalFuncs.to_chat( user, "<span class='warning'>No components detected. Please ensure the scanning unit is still functional.</span>" );
				}
				Task13.Sleep( 5 );
				GlobalFuncs.to_chat( user, "<span class='info'>Note : You will be returned to the input menu shortly.</span>" );
				Task13.Schedule( 5, (Task13.Closure)(() => {
					this.component_interaction( M, user );
					return;
				}));
				return;
			}

			if ( interactoption == "Replace Component" ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " carefully fits " ).the( this ).item().str( " into " ).the( M ).item().str( " as it rattles and starts replacing components.</span>" ).ToString(), new Txt( "<span class='notice'>" ).The( this ).item().str( "'s HUD flashes, a message appears stating it has started scanning and replacing " ).the( M ).item().str( "'s components.</span>" ).ToString() );

				foreach (dynamic _g in Lang13.Enumerate( M.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
					P2 = _g;
					

					if ( !this.Adjacent( user ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>A blue screen suddenly flashes on " ).the( this ).item().str( "'s HUD. It appears the critical failure was caused by suddenly yanking it out of " ).the( M ).item().str( "'s maintenance hatch.</span>" ).ToString() );
						return;
					}

					if ( P2 is Obj_Item_Weapon_StockParts_Capacitor ) {
						
						foreach (dynamic _b in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_StockParts_Capacitor) )) {
							R = _b;
							

							if ( Lang13.Bool( M.component_parts.Contains( R.rating > P2.rating && P2 != null ) ) ) {
								Task13.Sleep( 5 );
								this.perform_indiv_replace( P2, R, M );
							}
						}
					}

					if ( P2 is Obj_Item_Weapon_StockParts_ScanningModule ) {
						
						foreach (dynamic _c in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_StockParts_ScanningModule) )) {
							R2 = _c;
							

							if ( Lang13.Bool( M.component_parts.Contains( R2.rating > P2.rating && P2 != null ) ) ) {
								Task13.Sleep( 5 );
								this.perform_indiv_replace( P2, R2, M );
							}
						}
					}

					if ( P2 is Obj_Item_Weapon_StockParts_Manipulator ) {
						
						foreach (dynamic _d in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_StockParts_Manipulator) )) {
							R3 = _d;
							

							if ( Lang13.Bool( M.component_parts.Contains( R3.rating > P2.rating && P2 != null ) ) ) {
								Task13.Sleep( 5 );
								this.perform_indiv_replace( P2, R3, M );
							}
						}
					}

					if ( P2 is Obj_Item_Weapon_StockParts_MicroLaser ) {
						
						foreach (dynamic _e in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_StockParts_MicroLaser) )) {
							R4 = _e;
							

							if ( Lang13.Bool( M.component_parts.Contains( R4.rating > P2.rating && P2 != null ) ) ) {
								Task13.Sleep( 5 );
								this.perform_indiv_replace( P2, R4, M );
							}
						}
					}

					if ( P2 is Obj_Item_Weapon_StockParts_MatterBin ) {
						
						foreach (dynamic _f in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_StockParts_MatterBin) )) {
							R5 = _f;
							

							if ( Lang13.Bool( M.component_parts.Contains( R5.rating > P2.rating && P2 != null ) ) ) {
								Task13.Sleep( 5 );
								this.perform_indiv_replace( P2, R5, M );
							}
						}
					}
				}
				((Obj_Machinery)M).RefreshParts();
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( "'s " ).item( this.name ).str( " stops rattling as it finishes working on " ).the( M ).item().str( "'s components.</span>" ).ToString(), new Txt( "<span class='notice'>A message flashes on " ).the( this ).item().str( "'s HUD stating it has finished replacing " ).item( M ).str( "'s components and will return to the input screen shortly.</span>" ).ToString() );
				Task13.Schedule( 5, (Task13.Closure)(() => {
					this.component_interaction( M, user );
					return;
				}));
			}
			return;
		}

		// Function from file: component_exchanger.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			dynamic M = null;

			
			if ( !this.Adjacent( user ) ) {
				return false;
			}

			if ( target is Obj_Machinery ) {
				M = target;

				if ( !M.panel_open ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>The maintenance hatch of " ).the( M ).item().str( " is closed, you can't just stab " ).the( this ).item().str( " into it and hope it'll work.</span>" ).ToString() );
					return false;
				}

				if ( this.working ) {
					GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>You are aleady using " ).the( this ).item().str( " on another machine. You'll have to pull it out or wait.</span>" ).ToString() );
					return false;
				}
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " starts setting up " ).the( this ).item().str( " in " ).the( M ).item().str( "'s maintenance hatch</span>" ).ToString(), new Txt( "<span class='notice'>You carefully insert " ).the( this ).item().str( " through " ).the( M ).item().str( "'s maintenance hatch, it starts scanning the machine's components.</span>" ).ToString() );
				this.working = true;

				if ( GlobalFuncs.do_after( user, target, 20 ) ) {
					
					if ( !((Ent_Static)M).Adjacent( user ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>An error message flashes on " ).the( this ).item().str( "'s HUD, stating its scan was disrupted.</span>" ).ToString() );
						this.working = false;
						return false;
					}

					if ( !Lang13.Bool( M.component_parts ) ) {
						GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>A massive error dump scrolls through " ).the( this ).item().str( "'s HUD. It looks like " ).the( M ).item().str( " has yet to be made compatible with this tool.</span>" ).ToString() );
						this.working = false;
						return false;
					}
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/Ping.ogg", 50, 1 );
					GlobalFuncs.to_chat( user, new Txt( "<span class='notice'>" ).The( this ).item().str( " pings softly. A small message appears on its HUD, instructing to not move until finished." ).ToString() );
					this.component_interaction( M, user );
					return false;
				} else {
					GlobalFuncs.to_chat( user, new Txt( "<span class='warning'>An error message flashes on " ).the( this ).item().str( "'s HUD, stating its scan was disrupted.</span>" ).ToString() );
					this.working = false;
					return false;
				}
			}
			return false;
		}

		// Function from file: component_exchanger.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic _default = null;

			dynamic G = null;
			Obj_Item_Weapon_StockParts S = null;

			
			if ( a is Obj_Item_Weapon_Storage_Bag_Gadgets ) {
				G = a;

				if ( !( this.contents != null ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>" ).The( G ).item().str( " is empty.</span>" ).ToString() );
				}

				foreach (dynamic _a in Lang13.Enumerate( G.contents, typeof(Obj_Item_Weapon_StockParts) )) {
					S = _a;
					

					if ( this.contents.len < ( this.storage_slots ??0) ) {
						this.contents.Add( S );
					} else {
						GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You fill " ).the( this ).item().str( " to its capacity with " ).the( G ).item().str( "'s contents.</span>" ).ToString() );
						return _default;
					}
				}
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You fill up " ).the( this ).item().str( " with " ).the( G ).item().str( "'s contents.</span>" ).ToString() );
				return 1;
			} else {
				_default = base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return _default;
		}

	}

}
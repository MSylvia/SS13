// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_DetectiveScanner : Obj_Item_Device {

		public double amount = 20;
		public ByTable stored = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.slot_flags = 512;
			this.icon_state = "forensic1";
		}

		public Obj_Item_Device_DetectiveScanner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: detective_scanner.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			ByTable blood_DNA_found = null;
			ByTable fingerprints_found = null;
			ByTable fibers_found = null;
			dynamic T = null;
			Ent_Static O = null;
			ByTable complete_prints = null;
			dynamic i = null;
			string print = null;
			dynamic i2 = null;
			dynamic blood = null;

			
			if ( !GlobalFuncs.in_range( A, user ) ) {
				return false;
			}

			if ( this.loc != user ) {
				return false;
			}

			if ( A is Obj_Machinery_Computer_ForensicScanning ) {
				return false;
			}

			if ( A is Obj_Item_Weapon_FCard ) {
				GlobalFuncs.to_chat( user, "The scanner displays on the screen: \"ERROR 43: Object on Excluded Object List.\"" );
				return false;
			}
			this.add_fingerprint( user );
			blood_DNA_found = this.extract_blood( A );
			fingerprints_found = this.extract_fingerprints( A );
			fibers_found = this.extract_fibers( A );

			if ( A is Tile ) {
				T = A;

				foreach (dynamic _a in Lang13.Enumerate( T, typeof(Ent_Static) )) {
					O = _a;
					

					if ( O is Obj_Effect_Decal_Cleanable_Blood || O is Obj_Effect_Rune ) {
						blood_DNA_found.Add( this.extract_blood( O ) );
					}
				}
			}

			if ( fingerprints_found.len == 0 && blood_DNA_found.len == 0 && fibers_found.len == 0 ) {
				((Ent_Static)user).visible_message( new Txt().The( user ).item().str( " scans " ).the( A ).item().str( " with " ).a( this ).item().str( ", the air around " ).item( ( user.gender == GlobalVars.MALE ? "him" : "her" ) ).str( " humming" ).item( ( Rand13.PercentChance( 70 ) ? " gently." : "." ) ).ToString(), "<span class='notice'>Unable to locate any fingerprints, materials, fibers, or blood on " + A + "!</span>", "You hear a faint hum of electrical equipment." );
				return false;
			}

			if ( this.add_data( A, blood_DNA_found, fingerprints_found, fibers_found ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Object already in internal memory. Consolidating data...</span>" );
				return false;
			}

			if ( fingerprints_found.len > 0 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Isolated " + fingerprints_found.len + " fingerprints: Data Stored: Scan with Hi-Res Forensic Scanner to retrieve.</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/detscan.ogg", 50, 1 );
				complete_prints = new ByTable();

				foreach (dynamic _b in Lang13.Enumerate( fingerprints_found )) {
					i = _b;
					
					print = fingerprints_found[i];

					if ( GlobalFuncs.stringpercent( print ) <= GlobalVars.FINGERPRINT_COMPLETE ) {
						complete_prints.Add( print );
					}
				}

				if ( complete_prints.len < 1 ) {
					GlobalFuncs.to_chat( user, "<span class='notice'>&nbsp;&nbsp;No intact prints found</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>&nbsp;&nbsp;Found " + complete_prints.len + " intact prints</span>" );

					foreach (dynamic _c in Lang13.Enumerate( complete_prints )) {
						i2 = _c;
						
						GlobalFuncs.to_chat( user, "<span class='notice'>&nbsp;&nbsp;&nbsp;&nbsp;" + i2 + "</span>" );
					}
				}
			}

			if ( fibers_found.len != 0 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Fibers/Materials Data Stored: Scan with Hi-Res Forensic Scanner to retrieve.</span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/detscan.ogg", 50, 1 );
			}

			if ( blood_DNA_found.len != 0 ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Blood found on " + A + ". Analysing...</span>" );
				Task13.Schedule( 15, (Task13.Closure)(() => {
					
					foreach (dynamic _d in Lang13.Enumerate( blood_DNA_found )) {
						blood = _d;
						
						GlobalFuncs.to_chat( user, "Blood type: <span class='warning'>" + blood_DNA_found[blood] + " 	 </span>DNA: <span class='warning'>" + blood + "</span>" );
					}
					return;
				}));
			}

			if ( Rand13.PercentChance( 80 ) || !( fingerprints_found.len != 0 ) ) {
				((Ent_Static)user).visible_message( new Txt().The( user ).item().str( " scans " ).the( A ).item().str( " with " ).a( this ).item().str( ", the air around " ).item( ( user.gender == GlobalVars.MALE ? "him" : "her" ) ).str( " humming" ).item( ( Rand13.PercentChance( 70 ) ? " gently." : "." ) ).ToString(), new Txt( "You finish scanning " ).the( A ).item().str( "." ).ToString(), "You hear a faint hum of electrical equipment." );
				return false;
			} else {
				((Ent_Static)user).visible_message( new Txt().The( user ).item().str( " scans " ).the( A ).item().str( " with " ).a( this ).item().str( ", the air around " ).item( ( user.gender == GlobalVars.MALE ? "him" : "her" ) ).str( " humming" ).item( ( Rand13.PercentChance( 70 ) ? " gently." : "." ) ).str( "\n" ).item( ( user.gender == GlobalVars.MALE ? "He" : "She" ) ).str( " seems to perk up slightly at the readout." ).ToString(), "The results of the scan pique your interest.", "You hear a faint hum of electrical equipment, and someone making a thoughtful noise." );
				return false;
			}
		}

		// Function from file: detective_scanner.dm
		public virtual bool add_data( dynamic A = null, ByTable blood_DNA_found = null, ByTable fingerprints_found = null, ByTable fibers_found = null ) {
			ByTable data_entry = null;
			dynamic data_prints = null;
			dynamic print = null;
			dynamic merged_print = null;
			ByTable fibers = null;
			int? j = null;
			ByTable blood = null;
			dynamic main_blood = null;
			ByTable sum_list = null;

			data_entry = this.stored[new Txt( " " ).Ref( A ).ToString()];

			if ( GlobalFuncs.islist( data_entry ) ) {
				data_prints = data_entry[1];

				foreach (dynamic _a in Lang13.Enumerate( fingerprints_found )) {
					print = _a;
					
					merged_print = data_prints[print];

					if ( !Lang13.Bool( merged_print ) ) {
						data_prints[print] = A.fingerprints[print];
					} else {
						data_prints[print] = GlobalFuncs.stringmerge( data_prints[print], A.fingerprints[print] );
					}
				}
				fibers = data_entry[2];

				if ( !( fibers != null ) ) {
					fibers = new ByTable();
				}

				if ( fibers_found.len != 0 ) {
					j = null;
					j = 1;

					while (( j ??0) <= fibers_found.len) {
						
						if ( !( fibers.Find( fibers_found[j] ) != 0 ) ) {
							fibers.Add( fibers_found[j] );
						}
						j++;
					}
				}
				blood = data_entry[3];

				if ( !( blood != null ) ) {
					blood = new ByTable();
				}

				if ( blood_DNA_found.len != 0 ) {
					
					foreach (dynamic _b in Lang13.Enumerate( A.blood_DNA )) {
						main_blood = _b;
						

						if ( !Lang13.Bool( blood[main_blood] ) ) {
							blood[main_blood] = A.blood_DNA[blood];
						}
					}
				}
				return true;
			}
			sum_list = null;
			sum_list = new ByTable( 4 );
			sum_list[1] = fingerprints_found.Copy();
			sum_list[2] = fibers_found.Copy();
			sum_list[3] = blood_DNA_found.Copy();
			sum_list[4] = new Txt().The( A ).item().str( " in " ).the( GlobalFuncs.get_area( A ) ).item().ToString();
			this.stored[new Txt( " " ).Ref( A ).ToString()] = sum_list;
			return false;
		}

		// Function from file: detective_scanner.dm
		public ByTable extract_fibers( dynamic A = null ) {
			ByTable extracted_fibers = null;
			dynamic fiber = null;

			extracted_fibers = new ByTable();

			if ( A.suit_fibers != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( A.suit_fibers )) {
					fiber = _a;
					
					extracted_fibers[fiber] = A.suit_fibers[fiber];
				}
			}
			return extracted_fibers;
		}

		// Function from file: detective_scanner.dm
		public ByTable extract_blood( dynamic A = null ) {
			ByTable extracted_blood = null;
			dynamic blood = null;

			extracted_blood = new ByTable();

			if ( A.blood_DNA != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( A.blood_DNA )) {
					blood = _a;
					
					extracted_blood[blood] = A.blood_DNA[blood];
				}
			}
			return extracted_blood;
		}

		// Function from file: detective_scanner.dm
		public ByTable extract_fingerprints( dynamic A = null ) {
			ByTable extracted_prints = null;
			dynamic i = null;

			extracted_prints = new ByTable();

			if ( !( A.fingerprints != null ) || !( A.fingerprints.len != 0 ) ) {
				
				if ( A.fingerprints != null ) {
					Lang13.Delete( A.fingerprints );
					A.fingerprints = null;
				}
			} else {
				
				foreach (dynamic _a in Lang13.Enumerate( A.fingerprints )) {
					i = _a;
					
					extracted_prints[i] = A.fingerprints[i];
				}
			}
			return extracted_prints;
		}

		// Function from file: detective_scanner.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			Obj_Item_Weapon_FCard F = null;
			dynamic blood = null;

			
			if ( !( M is Mob_Living_Carbon_Human ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>" + M + " is not human and cannot have the fingerprints.</span>" );
				return false;
			}

			if ( !( M.dna is Dna ) || Lang13.Bool( M.gloves ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>No fingerprints found on " + M + "</span>" );
				return false;
			} else {
				
				if ( this.amount < 1 ) {
					GlobalFuncs.to_chat( user, "<span class='notice'>Fingerprints scanned on " + M + ". Need more cards to print.</span>" );
				} else {
					this.amount--;
					F = new Obj_Item_Weapon_FCard( user.loc );
					F.amount = 1;
					F.add_fingerprint( M );
					F.icon_state = "fingerprint1";
					F.name = "FPrintC- '" + M.name + "'";
					GlobalFuncs.to_chat( user, "<span class='notice'>Done printing.</span>" );
				}
				GlobalFuncs.to_chat( user, "<span class='notice'>" + M + "'s Fingerprints: " + Num13.Md5( M.dna.uni_identity ) + "</span>" );
			}

			if ( !( M.blood_DNA != null ) || !( M.blood_DNA.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>No blood found on " + M + "</span>" );

				if ( M.blood_DNA != null ) {
					Lang13.Delete( M.blood_DNA );
					M.blood_DNA = null;
				}
			} else {
				GlobalFuncs.to_chat( user, "<span class='notice'>Blood found on " + M + ". Analysing...</span>" );
				Task13.Schedule( 15, (Task13.Closure)(() => {
					
					foreach (dynamic _a in Lang13.Enumerate( M.blood_DNA )) {
						blood = _a;
						
						GlobalFuncs.to_chat( user, "<span class='notice'>Blood type: " + M.blood_DNA[blood] + "\nDNA: " + blood + "</span>" );
					}
					return;
				}));
			}
			return null;
		}

		// Function from file: detective_scanner.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_FCard ) {
				
				if ( a.fingerprints != null ) {
					return null;
				}

				if ( this.amount == 20 ) {
					return null;
				}

				if ( Convert.ToDouble( a.amount + this.amount ) > 20 ) {
					this.amount = 20;
					a.amount = a.amount + this.amount - 20;
				} else {
					this.amount += Convert.ToDouble( a.amount );
					GlobalFuncs.qdel( a );
					a = null;
				}
				this.add_fingerprint( b );

				if ( Lang13.Bool( a ) ) {
					((Ent_Static)a).add_fingerprint( b );
				}
			}
			return null;
		}

	}

}
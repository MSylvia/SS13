// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Sheet_Metal : Obj_Item_Stack_Sheet {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "metal sheet";
			this.starting_materials = new ByTable().Set( "$iron", 3750 );
			this.w_type = 4;
			this.throwforce = 14;
			this.melt_temperature = 1783.1500244140625;
			this.icon_state = "sheet-metal";
		}

		// Function from file: sheet_types.dm
		public Obj_Item_Stack_Sheet_Metal ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			this.recipes = GlobalVars.metal_recipes;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: sheet_types.dm
		public override double singularity_act( double? current_size = null, Obj_Machinery_Singularity S = null ) {
			GlobalFuncs.returnToPool( this );
			return 2;
		}

		// Function from file: sheet_types.dm
		public override bool blob_act( dynamic severity = null ) {
			GlobalFuncs.returnToPool( this );
			return false;
		}

		// Function from file: sheet_types.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {

			switch ((int?)(severity)) {
				case 1:
					GlobalFuncs.returnToPool( this );
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.returnToPool( this );
						return false;
					}
					break;
				case 3:
					
					if ( Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.returnToPool( this );
						return false;
					}
					break;
			}
			return false;
		}

		// Function from file: sheet_types.dm
		public override dynamic resetVariables( string args = null, params object[] _ ) {
			ByTable _args = new ByTable( new object[] { args } ).Extend(_);

			return base.resetVariables( "recipes", "pixel_x", "pixel_y" );
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ParticleAccelerator_ControlBox : Obj_Machinery_ParticleAccelerator {

		public int? strength_upper_limit = 2;
		public bool interface_control = true;
		public ByTable connected_parts = null;
		public bool assembled = false;
		public dynamic parts = null;
		public Wires_ParticleAcc_ControlBox wires = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.reference = "control_box";
			this.idle_power_usage = 500;
			this.active_power_usage = 10000;
			this.light_color = "#6496FA";
			this.icon_state = "control_box";
			this.dir = 1;
		}

		// Function from file: particle_control.dm
		public Obj_Machinery_ParticleAccelerator_ControlBox ( dynamic loc = null ) : base( (object)(loc) ) {
			this.wires = new Wires_ParticleAcc_ControlBox( this );
			this.connected_parts = new ByTable();
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: vgstation13.dme
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			Browser popup = null;

			
			if ( Map13.GetDistance( this, user ) > 1 || ( this.stat & 3 ) != 0 ) {
				
				if ( !( user is Mob_Living_Silicon ) && !GlobalFuncs.isAdminGhost( user ) ) {
					
					if ( !Lang13.Bool( user.mutations ) || user.mutations.len != 0 || !false ) {
						((Mob)user).unset_machine();
						Interface13.Browse( user, null, "window=pacontrol" );
						return null;
					}
				}
			}
			((Mob)user).set_machine( this );
			dat = "";
			dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";close=1'>Close</A><BR><BR>" ).ToString();
			dat += "<h3>Status</h3>";

			if ( !this.assembled ) {
				dat += "Unable to detect all parts!<BR>";
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";scan=1'>Run Scan</A><BR><BR>" ).ToString();
			} else {
				dat += "All parts in place.<BR><BR>";
				dat += "Power:";

				if ( this.active ) {
					dat += "On<BR>";
				} else {
					dat += "Off <BR>";
				}
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";togglep=1'>Toggle Power</A><BR><BR>" ).ToString();
				dat += "Particle Strength: " + this.strength + " ";
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";strengthdown=1'>--</A>|<A href='?src=" ).Ref( this ).str( ";strengthup=1'>++</A><BR><BR>" ).ToString();
			}
			popup = new Browser( user, "pacontrol", this.name, 420, 500 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)user).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: particle_control.dm
		public override dynamic process(  ) {
			Obj_Structure_ParticleAccelerator_ParticleEmitter PE = null;

			
			if ( this.active ) {
				
				if ( Lang13.Length( this.connected_parts ) < 6 ) {
					this.investigation_log( "singulo", "lost a connected part; It <font color='red'>powered down</font>." );
					this.toggle_power();
					return null;
				}

				foreach (dynamic _a in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator_ParticleEmitter) )) {
					PE = _a;
					

					if ( PE != null ) {
						PE.emit_particle( this.strength );
					}
				}
			}
			return null;
		}

		// Function from file: particle_control.dm
		public override dynamic power_change(  ) {
			Obj_Structure_ParticleAccelerator part = null;

			base.power_change();

			if ( ( this.stat & 2 ) != 0 ) {
				this.active = false;
				this.use_power = 0;
			} else if ( !( this.stat != 0 ) && this.construction_state <= 3 ) {
				this.use_power = 1;
			}
			this.update_icon();

			foreach (dynamic _a in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator) )) {
				part = _a;
				
				part.strength = null;
				part.powered = false;
				part.update_icon();
			}
			return null;
		}

		// Function from file: particle_control.dm
		public bool toggle_power(  ) {
			Obj_Structure_ParticleAccelerator part = null;
			Obj_Structure_ParticleAccelerator part2 = null;

			this.active = !this.active;
			this.investigation_log( "singulo", "turned " + ( this.active ? "<font color='red'>ON</font>" : "<font color='green'>OFF</font>" ) + " by " + ( Task13.User != null ? Task13.User.key : "outside forces" ) );

			if ( this.active ) {
				GlobalFuncs.message_admins( new Txt( "PA Control Computer turned ON by " ).item( GlobalFuncs.key_name( Task13.User, Task13.User.client ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A>) in (" ).item( this.x ).str( "," ).item( this.y ).str( "," ).item( this.z ).str( " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.x ).str( ";Y=" ).item( this.y ).str( ";Z=" ).item( this.z ).str( "'>JMP</a>)" ).ToString() );
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "PA Control Computer turned ON by " + Task13.User.ckey + "(" + Task13.User + ") in (" + this.x + "," + this.y + "," + this.z + ")" ) ) );
			}

			if ( this.active ) {
				this.use_power = 2;

				foreach (dynamic _a in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator) )) {
					part = _a;
					
					part.strength = this.strength;
					part.powered = true;
					part.update_icon();
				}
			} else {
				this.use_power = 1;

				foreach (dynamic _b in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator) )) {
					part2 = _b;
					
					part2.strength = null;
					part2.powered = false;
					part2.update_icon();
				}
			}
			return true;
		}

		// Function from file: particle_control.dm
		public bool check_part( Ent_Static T = null, Type type = null ) {
			dynamic PA = null;

			
			if ( !( T != null ) || !( type != null ) ) {
				return false;
			}
			PA = Lang13.FindIn( typeof(Obj_Structure_ParticleAccelerator), T );

			if ( Lang13.Bool( ((dynamic)type).IsInstanceOfType( PA ) ) ) {
				
				if ( ((Obj_Structure_ParticleAccelerator)PA).connect_master( this ) ) {
					
					if ( ((Obj_Structure_ParticleAccelerator)PA).report_ready( this ) ) {
						this.connected_parts.Add( PA );
						return true;
					}
				}
			}
			return false;
		}

		// Function from file: particle_control.dm
		public bool part_scan(  ) {
			Obj_Structure_ParticleAccelerator_FuelChamber F = null;
			int tally = 0;
			int ldir = 0;
			int rdir = 0;
			int odir = 0;
			Ent_Static T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( this, 1 ), typeof(Obj_Structure_ParticleAccelerator_FuelChamber) )) {
				F = _a;
				
				this.dir = F.dir;
			}
			this.connected_parts = new ByTable();
			tally = 0;
			ldir = Num13.Rotate( this.dir, -90 );
			rdir = Num13.Rotate( this.dir, 90 );
			odir = Num13.Rotate( this.dir, 180 );
			T = this.loc;
			T = Map13.GetStep( T, rdir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_FuelChamber) ) ) {
				tally++;
			}
			T = Map13.GetStep( T, odir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_EndCap) ) ) {
				tally++;
			}
			T = Map13.GetStep( T, this.dir );
			T = Map13.GetStep( T, this.dir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_PowerBox) ) ) {
				tally++;
			}
			T = Map13.GetStep( T, this.dir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_ParticleEmitter_Center) ) ) {
				tally++;
			}
			T = Map13.GetStep( T, ldir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_ParticleEmitter_Left) ) ) {
				tally++;
			}
			T = Map13.GetStep( T, rdir );
			T = Map13.GetStep( T, rdir );

			if ( this.check_part( T, typeof(Obj_Structure_ParticleAccelerator_ParticleEmitter_Right) ) ) {
				tally++;
			}

			if ( tally >= 6 ) {
				this.assembled = true;
				return true;
			} else {
				this.assembled = false;
				return false;
			}
		}

		// Function from file: particle_control.dm
		public void remove_strength( dynamic s = null ) {
			
			if ( this.assembled ) {
				this.strength--;

				if ( ( this.strength ??0) < 0 ) {
					this.strength = 0;
				} else {
					this.investigation_log( "singulo", "decreased to <font color='green'>" + this.strength + "</font> by " + Task13.User.key );
				}
				this.strength_change();
			}
			return;
		}

		// Function from file: particle_control.dm
		public void add_strength( dynamic s = null ) {
			
			if ( this.assembled ) {
				this.strength++;

				if ( ( this.strength ??0) > ( this.strength_upper_limit ??0) ) {
					this.strength = this.strength_upper_limit;
				} else {
					GlobalFuncs.message_admins( new Txt( "PA Control Computer increased to " ).item( this.strength ).str( " by " ).item( GlobalFuncs.key_name( Task13.User, Task13.User.client ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A>) in (" ).item( this.x ).str( "," ).item( this.y ).str( "," ).item( this.z ).str( " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.x ).str( ";Y=" ).item( this.y ).str( ";Z=" ).item( this.z ).str( "'>JMP</a>)" ).ToString() );
					GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "PA Control Computer increased to " + this.strength + " by " + Task13.User.ckey + "(" + Task13.User + ") in (" + this.x + "," + this.y + "," + this.z + ")" ) ) );
					this.investigation_log( "singulo", "increased to <font color='red'>" + this.strength + "</font> by " + Task13.User.key );
				}
				this.strength_change();
			}
			return;
		}

		// Function from file: particle_control.dm
		public void strength_change(  ) {
			Obj_Structure_ParticleAccelerator part = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator) )) {
				part = _a;
				
				part.strength = this.strength;
				part.update_icon();
			}
			return;
		}

		// Function from file: particle_control.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}

			if ( !this.interface_control ) {
				GlobalFuncs.to_chat( Task13.User, "<span class='error'>ERROR: Request timed out. Check wire contacts.</span>" );
				return null;
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				Interface13.Browse( Task13.User, null, "window=pacontrol" );
				Task13.User.unset_machine();
				return null;
			}

			if ( Lang13.Bool( href_list["togglep"] ) ) {
				
				if ( !( this.wires.IsIndexCut( GlobalVars.PARTICLE_TOGGLE_WIRE ) != 0 ) ) {
					this.toggle_power();
				}
			} else if ( Lang13.Bool( href_list["scan"] ) ) {
				this.part_scan();
			} else if ( Lang13.Bool( href_list["strengthup"] ) ) {
				
				if ( !( this.wires.IsIndexCut( GlobalVars.PARTICLE_STRENGTH_WIRE ) != 0 ) ) {
					this.add_strength();
				}
			} else if ( Lang13.Bool( href_list["strengthdown"] ) ) {
				
				if ( !( this.wires.IsIndexCut( GlobalVars.PARTICLE_STRENGTH_WIRE ) != 0 ) ) {
					this.remove_strength();
				}
			}
			this.updateDialog();
			this.update_icon();
			return null;
		}

		// Function from file: particle_control.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( this.active ) {
				this.icon_state = "" + this.reference + "p1";
			} else {
				
				if ( ( this.stat & 2 ) != 0 ) {
					this.icon_state = "" + this.reference + "w";
					return null;
				}

				if ( this.use_power != 0 ) {
					
					if ( this.assembled ) {
						this.icon_state = "" + this.reference + "p";
					} else {
						this.icon_state = "u" + this.reference + "p";
					}
				} else {
					
					switch ((int)( this.construction_state )) {
						case 0:
							this.icon_state = "" + this.reference;
							break;
						case 1:
							this.icon_state = "" + this.reference;
							break;
						case 2:
							this.icon_state = "" + this.reference + "w";
							break;
						default:
							this.icon_state = "" + this.reference + "c";
							break;
					}
				}
			}
			return null;
		}

		// Function from file: particle_control.dm
		public override bool update_state(  ) {
			Obj_Structure_ParticleAccelerator part = null;

			
			if ( this.construction_state < 3 ) {
				this.use_power = 0;
				this.assembled = false;
				this.active = false;

				foreach (dynamic _a in Lang13.Enumerate( this.connected_parts, typeof(Obj_Structure_ParticleAccelerator) )) {
					part = _a;
					
					part.strength = null;
					part.powered = false;
					part.update_icon();
				}
				this.connected_parts = new ByTable();
				return false;
			}

			if ( !this.part_scan() ) {
				this.use_power = 1;
				this.active = false;
				this.connected_parts = new ByTable();
			}
			return false;
		}

		// Function from file: particle_control.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Wirecutters || a is Obj_Item_Device_Multitool ) {
				this.attack_hand( b );
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: particle_control.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.construction_state >= 3 ) {
				this.interact( a );
			} else if ( this.construction_state == 2 ) {
				this.wires.Interact( a );
			}
			return null;
		}

		// Function from file: particle_control.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.active ) {
				this.toggle_power();
			}

			if ( this.wires != null ) {
				GlobalFuncs.qdel( this.wires );
				this.wires = null;
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
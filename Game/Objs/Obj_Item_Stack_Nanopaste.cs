// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Nanopaste : Obj_Item_Stack {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "nanite paste";
			this.origin_tech = "materials=4;engineering=3";
			this.amount = 10;
			this.icon = "icons/obj/nanopaste.dmi";
			this.icon_state = "tube";
		}

		public Obj_Item_Stack_Nanopaste ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: nanopaste.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic R = null;
			dynamic H = null;
			dynamic affecting = null;

			
			if ( !( M is Mob_Living ) || !( user is Mob ) ) {
				return false;
			}

			if ( M is Mob_Living_Silicon_Robot ) {
				R = M;

				if ( ((Mob_Living)R).getBruteLoss() != 0 || ((Mob_Living)R).getFireLoss() != 0 ) {
					((Mob_Living)R).adjustBruteLoss( Rand13.Int( -15, -20 ) );
					((Mob_Living)R).adjustFireLoss( Rand13.Int( -15, -20 ) );
					((Mob_Living)R).updatehealth();
					this.use( 1 );
					((Ent_Static)user).visible_message( "<span class='notice'>" + user + " applies some " + this + " to " + R + "'s damaged areas.</span>", "<span class='notice'>You apply some " + this + " to " + R + "'s damaged areas.</span>" );
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>All " + R + "'s systems are nominal.</span>" );
				}
			}

			if ( M is Mob_Living_Carbon_Human ) {
				H = M;
				affecting = ((Mob_Living_Carbon_Human)H).get_organ( ((dynamic)user.zone_sel).selecting );

				if ( Lang13.Bool( affecting.open ) == true ) {
					
					if ( Lang13.Bool( affecting ) && Lang13.Bool( affecting.status & 128 ) ) {
						
						if ( Lang13.Bool( affecting.get_damage() ) ) {
							new ByTable().Set( 1, Rand13.Int( 15, 20 ) ).Set( 2, Rand13.Int( 15, 20 ) ).Set( "robo_repair", 1 ).Apply( Lang13.BindFunc( affecting, "heal_damage" ) );
							((Mob_Living)H).updatehealth();
							this.use( 1 );
							((Ent_Static)user).visible_message( "<span class='notice'>" + user + " applies some " + this + " to " + ( user != M ? "" + M + "'s" : "their" ) + " " + affecting.display_name + ".</span>", "<span class='notice'>You apply some " + this + " to " + ( user != M ? "" + M + "'s" : "your" ) + " " + affecting.display_name + ".</span>" );
						} else {
							GlobalFuncs.to_chat( user, "<span class='notice'>Nothing to fix here.</span>" );
						}
					}
				} else if ( GlobalFuncs.can_operate( H ) ) {
					
					if ( GlobalFuncs.do_surgery( H, user, this ) ) {
						return null;
					}
				} else {
					GlobalFuncs.to_chat( user, "<span class='notice'>Nothing to fix in here.</span>" );
				}
			}
			return null;
		}

	}

}
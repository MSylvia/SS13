// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Gun_Energy : Obj_Item_Weapon_Gun {

		public dynamic power_supply = null;
		public dynamic charge_cost = 100;
		public string cell_type = "/obj/item/weapon/cell";
		public dynamic projectile_type = "/obj/item/projectile/beam/practice";
		public string modifystate = null;
		public bool charge_states = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.fire_sound = "sound/weapons/Taser.ogg";
			this.icon_state = "energy";
		}

		// Function from file: energy.dm
		public Obj_Item_Weapon_Gun_Energy ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( Lang13.Bool( this.cell_type ) ) {
				this.power_supply = Lang13.Call( this.cell_type, this );
			} else {
				this.power_supply = new Obj_Item_Weapon_Cell( this );
			}
			((Obj_Item_Weapon_Cell)this.power_supply).give( this.power_supply.maxcharge );
			return;
		}

		// Function from file: energy.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			dynamic ratio = null;

			ratio = 0;

			if ( Lang13.Bool( this.power_supply ) && Convert.ToDouble( this.power_supply.maxcharge ) > 0 ) {
				ratio = this.power_supply.charge / this.power_supply.maxcharge;
			}
			ratio *= 100;
			ratio = ( Convert.ToDouble( ratio ) <= 0 ? ((dynamic)( 0 )) : ( Convert.ToDouble( ratio ) >= 100 ? ((dynamic)( 100 )) : ratio ) );

			if ( Convert.ToDouble( ratio ) >= 50 ) {
				ratio = GlobalFuncs.Floor( ratio, 25 );
			} else {
				ratio = GlobalFuncs.Ceiling( ratio, 25 );
			}

			if ( Lang13.Bool( this.modifystate ) && this.charge_states ) {
				this.icon_state = "" + this.modifystate + ratio;
			} else if ( this.charge_states ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + ratio;
			}
			return null;
		}

		// Function from file: energy.dm
		public override bool process_chambered(  ) {
			
			if ( Lang13.Bool( this.in_chamber ) ) {
				return true;
			}

			if ( !Lang13.Bool( this.power_supply ) ) {
				return false;
			}

			if ( !Lang13.Bool( this.power_supply.use( this.charge_cost ) ) ) {
				return false;
			}

			if ( !Lang13.Bool( this.projectile_type ) ) {
				return false;
			}
			this.in_chamber = Lang13.Call( this.projectile_type, this );
			return true;
		}

		// Function from file: energy.dm
		public override dynamic emp_act( int severity = 0 ) {
			((Obj_Item_Weapon_Cell)this.power_supply).use( Num13.Floor( Convert.ToDouble( this.power_supply.maxcharge / severity ) ) );
			this.update_icon();
			base.emp_act( severity );
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Beam_Emitter : Obj_Effect_Beam {

		public string base_state = "emitter";
		public int? power = 1;
		public _Event power_change = new _Event();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 0;
			this.damage = 30;
			this.icon = "icons/effects/beam.dmi";
			this.icon_state = "emitter_1";
		}

		public Obj_Effect_Beam_Emitter ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: emitter.dm
		public override int get_damage(  ) {
			return this.damage * ( this.power ??0);
		}

		// Function from file: emitter.dm
		public override Image get_machine_underlay( int mdir = 0 ) {
			int visible_power = 0;

			visible_power = ( Num13.Floor( ( this.power ??0) / 3 ) + 1 <= 1 ? 1 : ( Num13.Floor( ( this.power ??0) / 3 ) + 1 >= 3 ? 3 : Num13.Floor( ( this.power ??0) / 3 ) + 1 ) );
			return new Image( this.icon, null, "" + this.base_state + "_" + visible_power + " underlay", null, mdir );
		}

		// Function from file: emitter.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			int visible_power = 0;

			
			if ( !( this.master != null ) ) {
				this.invisibility = 101;
				return null;
			}
			visible_power = ( Num13.Floor( ( this.power ??0) / 3 ) + 1 <= 1 ? 1 : ( Num13.Floor( ( this.power ??0) / 3 ) + 1 >= 3 ? 3 : Num13.Floor( ( this.power ??0) / 3 ) + 1 ) );
			this.icon_state = "" + this.base_state + "_" + visible_power;
			return null;
		}

		// Function from file: emitter.dm
		public override dynamic spawn_child(  ) {
			dynamic beam = null;

			beam = base.spawn_child();

			if ( !Lang13.Bool( beam ) ) {
				return null;
			}
			beam.power = this.power;
			return beam;
		}

		// Function from file: emitter.dm
		public void set_power( int? newpower = null ) {
			newpower = newpower ?? 1;

			dynamic next_beam = null;

			this.power = newpower;

			if ( Lang13.Bool( this.next ) ) {
				next_beam = this.next;
				((Obj_Effect_Beam_Emitter)next_beam).set_power( this.power );
			}
			this.update_icon();

			if ( !( this.master != null ) ) {
				
				if ( this.power_change is _Event ) {
					this.power_change.Invoke( new ByTable().Set( "beam", this ) );
				}
			}
			return;
		}

		// Function from file: beam.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			Obj_Machinery_Power_Emitter E = null;
			Obj_Machinery_Prism P = null;
			Obj_Machinery_Mirror M = null;
			dynamic thing = null;

			base.Destroy( (object)(brokenup) );

			if ( Lang13.Bool( this.sources ) && this.sources.len != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.sources, typeof(Obj_Machinery_Power_Emitter) )) {
					E = _a;
					

					if ( E.beam == this ) {
						E.beam = null;
					}
				}

				foreach (dynamic _b in Lang13.Enumerate( this.sources, typeof(Obj_Machinery_Prism) )) {
					P = _b;
					

					if ( P.beam == this ) {
						P.beam = null;
					}
				}

				foreach (dynamic _d in Lang13.Enumerate( this.sources, typeof(Obj_Machinery_Mirror) )) {
					M = _d;
					

					foreach (dynamic _c in Lang13.Enumerate( M.emitted_beams )) {
						thing = _c;
						

						if ( thing == this ) {
							M.emitted_beams.Remove( thing );
						}
					}
				}
			}
			return null;
		}

	}

}
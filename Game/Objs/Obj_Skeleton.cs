// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Skeleton : Obj {

		public int bnum = 1;
		public int breq = 0;
		public bool bstate = false;
		public string plaque_contents = "Unnamed alien creature";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/xenoarchaeology.dmi";
			this.icon_state = "uskel";
		}

		// Function from file: finds_fossils.dm
		public Obj_Skeleton ( dynamic loc = null ) : base( (object)(loc) ) {
			this.breq = Rand13.Int( 6 ) + 3;
			this.desc = "An incomplete skeleton, looks like it could use " + ( this.breq - this.bnum ) + " more bones.";
			return;
		}

		// Function from file: finds_fossils.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_Fossil_Bone ) {
				
				if ( !this.bstate ) {
					this.bnum++;
					this.contents.Add( new Obj_Item_Weapon_Fossil_Bone() );
					GlobalFuncs.qdel( a );
					a = null;

					if ( this.bnum == this.breq ) {
						Task13.User = b;
						this.icon_state = "skel";
						this.bstate = true;
						this.density = true;
						this.name = "alien skeleton display";

						if ( this.contents.Find( typeof(Obj_Item_Weapon_Fossil_Skull_Horned) ) != 0 ) {
							this.desc = "A creature made of " + ( this.contents.len - 1 ) + " assorted bones and a horned skull. The plaque reads '" + this.plaque_contents + "'.";
						} else {
							this.desc = "A creature made of " + ( this.contents.len - 1 ) + " assorted bones and a skull. The plaque reads '" + this.plaque_contents + "'.";
						}
					} else {
						this.desc = "Incomplete skeleton, looks like it could use " + ( this.breq - this.bnum ) + " more bones.";
						GlobalFuncs.to_chat( b, "Looks like it could use " + ( this.breq - this.bnum ) + " more bones." );
					}
				} else {
					base.attackby( (object)(a), (object)(b), (object)(c) );
				}
			} else if ( a is Obj_Item_Weapon_Pen ) {
				this.plaque_contents = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( b, "What would you like to write on the plaque?", "Skeleton plaque", null, null, InputType.Str | InputType.Null ) ), 1, 1648 );

				if ( !Lang13.Bool( this.plaque_contents ) || !this.Adjacent( b ) || Lang13.Bool( b.stat ) ) {
					return null;
				}
				((Ent_Static)b).visible_message( "" + b + " writes something on the base of " + this + ".", new Txt( "You relabel the plaque on the base of " ).icon( this ).str( " " ).item( this ).str( "." ).ToString() );

				if ( this.contents.Find( typeof(Obj_Item_Weapon_Fossil_Skull_Horned) ) != 0 ) {
					this.desc = "A creature made of " + ( this.contents.len - 1 ) + " assorted bones and a horned skull. The plaque reads '" + this.plaque_contents + "'.";
				} else {
					this.desc = "A creature made of " + ( this.contents.len - 1 ) + " assorted bones and a skull. The plaque reads '" + this.plaque_contents + "'.";
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
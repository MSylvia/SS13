// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Mecha : Obj_Machinery_Computer {

		public ByTable located = new ByTable();
		public bool screen = false;
		public dynamic stored_data = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "mecha";
			this.icon_keyboard = "tech_key";
			this.req_access = new ByTable(new object [] { 29 });
			this.circuit = "/obj/item/weapon/circuitboard/mecha_control";
		}

		public Obj_Machinery_Computer_Mecha ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			
		}

		// Function from file: mecha_control_console.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			TopicInput filter = null;
			dynamic MT = null;
			string message = null;
			dynamic M = null;
			dynamic MT2 = null;
			dynamic MT3 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}
			filter = new TopicInput( href, href_list );

			if ( Lang13.Bool( href_list["send_message"] ) ) {
				MT = filter.getObj( "send_message" );
				message = GlobalFuncs.stripped_input( Task13.User, "Input message", "Transmit message" );
				M = ((Obj_Item_MechaParts_MechaTracking)MT).in_mecha();

				if ( Lang13.Bool( GlobalFuncs.trim( message ) ) && Lang13.Bool( M ) ) {
					((Obj_Mecha)M).occupant_message( message );
				}
				return null;
			}

			if ( Lang13.Bool( href_list["shock"] ) ) {
				MT2 = filter.getObj( "shock" );
				MT2.shock();
			}

			if ( Lang13.Bool( href_list["get_log"] ) ) {
				MT3 = filter.getObj( "get_log" );
				this.stored_data = ((Obj_Item_MechaParts_MechaTracking)MT3).get_mecha_log();
				this.screen = true;
			}

			if ( Lang13.Bool( href_list["return"] ) ) {
				this.screen = false;
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: mecha_control_console.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			Obj_Item_MechaParts_MechaTracking TR = null;
			dynamic answer = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return null;
			}
			((Mob)a).set_machine( this );
			dat = "<html><head><title>" + this.name + "</title><style>h3 {margin: 0px; padding: 0px;}</style></head><body>";

			if ( !this.screen ) {
				dat += "<h3>Tracking beacons data</h3>";

				foreach (dynamic _a in Lang13.Enumerate( typeof(Game13), typeof(Obj_Item_MechaParts_MechaTracking) )) {
					TR = _a;
					
					answer = TR.get_mecha_info();

					if ( Lang13.Bool( answer ) ) {
						dat += new Txt( "<hr>" ).item( answer ).str( "<br/>\n						  <a href='?src=" ).Ref( this ).str( ";send_message=" ).Ref( TR ).str( "'>Send message</a><br/>\n						  <a href='?src=" ).Ref( this ).str( ";get_log=" ).Ref( TR ).str( "'>Show exosuit log</a> | <a style='color: #f00;' href='?src=" ).Ref( this ).str( ";shock=" ).Ref( TR ).str( "'>(EMP pulse)</a><br>" ).ToString();
					}
				}
			}

			if ( this.screen ) {
				dat += "<h3>Log contents</h3>";
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";return=1'>Return</a><hr>" ).ToString();
				dat += "" + this.stored_data;
			}
			dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";refresh=1'>(Refresh)</A><BR>" ).ToString();
			dat += "</body></html>";
			Interface13.Browse( a, dat, "window=computer;size=400x500" );
			GlobalFuncs.onclose( a, "computer" );
			return null;
		}

	}

}
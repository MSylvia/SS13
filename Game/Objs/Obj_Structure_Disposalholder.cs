// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Disposalholder : Obj_Structure {

		public GasMixture gas = null;
		public bool active = false;
		public int count = 1000;
		public bool has_fat_guy = false;
		public string destinationTag = "DISPOSALS";
		public bool tomail = false;
		public bool hasmob = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.invisibility = 101;
		}

		public Obj_Structure_Disposalholder ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: disposal.dm
		public override dynamic relaymove( Mob M = null, double? direction = null ) {
			dynamic M2 = null;

			
			if ( Lang13.Bool( M.stat ) ) {
				return null;
			}

			if ( this.loc != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( null, this.loc.loc ) )) {
					M2 = _a;
					
					GlobalFuncs.to_chat( M2, "<FONT size=" + Num13.MaxInt( 0, 5 - Map13.GetDistance( this, M2 ) ) + ">CLONG, clong!</FONT>" );
				}
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/clang.ogg", 50, 0, 0 );
			return null;
		}

		// Function from file: disposal.dm
		public void vent_gas( Ent_Static location = null ) {
			location.assume_air( this.gas );
			return;
		}

		// Function from file: disposal.dm
		public void merge( dynamic other = null ) {
			Ent_Dynamic AM = null;
			Ent_Dynamic M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( other, typeof(Ent_Dynamic) )) {
				AM = _a;
				
				AM.forceMove( this );

				if ( AM is Mob ) {
					M = AM;

					if ( Lang13.Bool( ((dynamic)M).client ) ) {
						((dynamic)M).client.eye = this;
					}
				}
			}

			if ( other.has_fat_guy ) {
				this.has_fat_guy = true;
			}
			GlobalFuncs.qdel( other );
			return;
		}

		// Function from file: disposal.dm
		public Obj_Structure_Disposalpipe findpipe( Tile T = null ) {
			int fdir = 0;
			Obj_Structure_Disposalpipe P = null;

			
			if ( !( T != null ) ) {
				return null;
			}
			fdir = Num13.Rotate( this.dir, 180 );

			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Structure_Disposalpipe) )) {
				P = _a;
				

				if ( ( fdir & P.dpdir ) != 0 ) {
					return P;
				}
			}
			return null;
		}

		// Function from file: disposal.dm
		public Tile nextloc(  ) {
			return Map13.GetStep( this.loc, this.dir );
		}

		// Function from file: disposal.dm
		public void move(  ) {
			Ent_Static last = null;
			Mob_Living_Carbon_Human H = null;
			Ent_Static curr = null;

			
			while (this.active) {
				
				if ( this.has_fat_guy && Rand13.PercentChance( 2 ) ) {
					this.active = false;

					foreach (dynamic _a in Lang13.Enumerate( this, typeof(Mob_Living_Carbon_Human) )) {
						H = _a;
						
					}
					break;
				}
				Task13.Sleep( 1 );

				if ( !( this.loc != null ) || this.loc == null ) {
					GlobalFuncs.qdel( this );
					return;
				}
				curr = this.loc;
				last = curr;
				curr = ((Obj_Structure_Disposalpipe)curr).transfer( this );

				if ( !( curr != null ) ) {
					((Obj_Structure_Disposalpipe)last).expel( this, this.loc, this.dir );
				}

				if ( !( this.count-- != 0 ) ) {
					this.active = false;
				}
			}
			return;
		}

		// Function from file: disposal.dm
		public void start( Obj_Machinery_Disposal D = null ) {
			
			if ( !Lang13.Bool( D.trunk ) ) {
				D.expel( this );
				return;
			}
			this.forceMove( D.trunk );
			this.active = true;
			this.dir = GlobalVars.DOWN;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				this.move();
				return;
			}));
			return;
		}

		// Function from file: disposal.dm
		public void init( Obj_Machinery_Disposal D = null ) {
			Mob_Living M = null;
			Obj O = null;
			Mob_Living M2 = null;
			Ent_Dynamic AM = null;
			Ent_Dynamic H = null;
			Ent_Dynamic T = null;
			Ent_Dynamic T2 = null;

			this.gas = D.air_contents;

			foreach (dynamic _a in Lang13.Enumerate( D, typeof(Mob_Living) )) {
				M = _a;
				

				if ( M != null && M.stat != 2 ) {
					this.hasmob = true;
				}
			}

			foreach (dynamic _c in Lang13.Enumerate( D, typeof(Obj) )) {
				O = _c;
				

				if ( O.contents != null ) {
					
					foreach (dynamic _b in Lang13.Enumerate( O.contents, typeof(Mob_Living) )) {
						M2 = _b;
						

						if ( M2 != null && M2.stat != 2 ) {
							this.hasmob = true;
						}
					}
				}
			}

			foreach (dynamic _d in Lang13.Enumerate( D, typeof(Ent_Dynamic) )) {
				AM = _d;
				
				AM.forceMove( this );

				if ( AM is Mob_Living_Carbon_Human ) {
					H = AM;
					Interface13.Stat( null, ((dynamic)H).mutations.Contains( 6 ) );

					if ( false && Lang13.Bool( ((dynamic)H).species ) && Lang13.Bool( ((dynamic)H).species.flags & 8192 ) ) {
						this.has_fat_guy = true;
					}
				}

				if ( AM is Obj_Item_Delivery_Large && !this.hasmob ) {
					T = AM;
					this.destinationTag = ((dynamic)T).sortTag;
				}

				if ( AM is Obj_Item_Delivery && !this.hasmob ) {
					T2 = AM;
					this.destinationTag = ((dynamic)T2).sortTag;
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Survivalcapsule : Obj_Item_Weapon {

		public int? used = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.icon = "icons/obj/mining.dmi";
			this.icon_state = "capsule";
		}

		public Obj_Item_Weapon_Survivalcapsule ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mine_items.dm
		public void load(  ) {
			ByTable blacklist = null;
			dynamic start_turf = null;
			Tile cur_turf = null;
			int? x_size = null;
			int? y_size = null;
			ByTable walltypes = null;
			Type floor_type = null;
			ByTable room = null;
			Obj_Structure_Bed_Chair_Comfy C = null;
			Obj_Machinery_Sleeper S = null;
			Zone_Survivalpod L = null;
			Tile threshhold = null;
			dynamic ZZ = null;
			dynamic turfs = null;
			Tile_Simulated_Floor A = null;
			dynamic Z = null;

			blacklist = new ByTable(new object [] { typeof(Zone_Shuttle) });
			start_turf = GlobalFuncs.get_turf( this.loc );
			x_size = 5;
			y_size = 5;
			walltypes = new ByTable(new object [] { typeof(Tile_Simulated_Wall) });
			floor_type = typeof(Tile_Simulated_Floor_Wood);
			start_turf = Map13.GetTile( Convert.ToInt32( start_turf.x - 2 ), Convert.ToInt32( start_turf.y - 2 ), Convert.ToInt32( start_turf.z ) );
			room = GlobalFuncs.spawn_room( start_turf, x_size, y_size, walltypes, floor_type, "Emergency Shelter" );
			start_turf = GlobalFuncs.get_turf( this.loc );
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x ), Convert.ToInt32( start_turf.y - 2 ), Convert.ToInt32( start_turf.z ) );
			new Obj_Machinery_Door_Airlock_Glass( cur_turf );
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x + 1 ), Convert.ToInt32( start_turf.y ), Convert.ToInt32( start_turf.z ) );
			new Obj_Structure_Table_Wood( cur_turf );
			new Obj_Item_Weapon_Storage_PillBottle_Dice( cur_turf );
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x + 1 ), Convert.ToInt32( start_turf.y - 1 ), Convert.ToInt32( start_turf.z ) );
			C = new Obj_Structure_Bed_Chair_Comfy( cur_turf );
			C.dir = 1;
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x + 1 ), Convert.ToInt32( start_turf.y + 1 ), Convert.ToInt32( start_turf.z ) );
			new Obj_Structure_Bed_Chair_Comfy( cur_turf );
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x - 1 ), Convert.ToInt32( start_turf.y - 1 ), Convert.ToInt32( start_turf.z ) );
			S = new Obj_Machinery_Sleeper( cur_turf );
			S.dir = 4;
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x - 1 ), Convert.ToInt32( start_turf.y ), Convert.ToInt32( start_turf.z ) );
			new Obj_Structure_Table_Wood( cur_turf );
			new Obj_Item_Weapon_Storage_Box_Donkpockets( cur_turf );
			cur_turf = Map13.GetTile( Convert.ToInt32( start_turf.x - 1 ), Convert.ToInt32( start_turf.y + 1 ), Convert.ToInt32( start_turf.z ) );
			new Obj_Structure_Table_Wood( cur_turf );
			new Obj_Machinery_Microwave( cur_turf );
			L = new Zone_Survivalpod();
			threshhold = Map13.GetTile( Convert.ToInt32( start_turf.x ), Convert.ToInt32( start_turf.y - 2 ), Convert.ToInt32( start_turf.z ) );
			threshhold.ChangeTurf( typeof(Tile_Simulated_Floor_Wood) );
			threshhold.blocks_air = true;
			threshhold.oxygen = 21;
			threshhold.temperature = 293.41;
			threshhold.nitrogen = 82;
			threshhold.carbon_dioxide = false;
			threshhold.toxins = false;
			ZZ = GlobalFuncs.get_area( threshhold );

			if ( !GlobalFuncs.is_type_in_list( ZZ, blacklist ) ) {
				L.contents.Add( threshhold );
			}
			threshhold.overlays.Cut();
			turfs = room["floors"];

			foreach (dynamic _a in Lang13.Enumerate( turfs, typeof(Tile_Simulated_Floor) )) {
				A = _a;
				
				GlobalVars.SSair.remove_from_active( A );
				A.oxygen = 21;
				A.temperature = 293.41;
				A.nitrogen = 82;
				A.carbon_dioxide = false;
				A.toxins = false;
				A.air.copy_from_turf( A );
				GlobalVars.SSair.add_to_active( A );
				A.overlays.Cut();
				Z = GlobalFuncs.get_area( A );

				if ( !GlobalFuncs.is_type_in_list( Z, blacklist ) ) {
					L.contents.Add( A );
				}
			}
			return;
		}

		// Function from file: mine_items.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.used == GlobalVars.FALSE ) {
				this.loc.visible_message( "The " + this + " begins to shake. Stand back!" );
				this.used = GlobalVars.TRUE;
				Task13.Sleep( 50 );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/phasein.ogg", 100, 1 );
				GlobalFuncs.PoolOrNew( typeof(Obj_Effect_ParticleEffect_Smoke), this.loc );
				this.load();
				GlobalFuncs.qdel( this );
			}
			return null;
		}

	}

}
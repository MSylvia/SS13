// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grenade : Obj_Item_Weapon {

		public bool active = false;
		public double? det_time = 50;
		public bool display_timer = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.item_state = "flashbang";
			this.throw_speed = 3;
			this.flags = 64;
			this.slot_flags = 512;
			this.burn_state = 0;
			this.burntime = 5;
			this.icon = "icons/obj/grenade.dmi";
			this.icon_state = "grenade";
		}

		public Obj_Item_Weapon_Grenade ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: grenade.dm
		public override bool hit_reaction( Mob_Living_Carbon owner = null, string attack_text = null, int? final_block_chance = null, dynamic damage = null, int? attack_type = null ) {
			
			if ( Lang13.Bool( damage ) && attack_type == 3 && Rand13.PercentChance( 15 ) ) {
				owner.visible_message( "<span class='danger'>" + attack_text + " hits " + owner + "'s " + this + ", setting it off! What a shot!</span>" );
				this.prime();
				return true;
			}
			return false;
		}

		// Function from file: grenade.dm
		public override dynamic attack_paw( dynamic a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: grenade.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			Map13.Walk( this, 0, 0 );
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: grenade.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Weapon_Screwdriver ) {
				
				switch ((int?)( this.det_time )) {
					case 1:
						this.det_time = 10;
						user.WriteMsg( "<span class='notice'>You set the " + this.name + " for 1 second detonation time.</span>" );
						break;
					case 10:
						this.det_time = 30;
						user.WriteMsg( "<span class='notice'>You set the " + this.name + " for 3 second detonation time.</span>" );
						break;
					case 30:
						this.det_time = 50;
						user.WriteMsg( "<span class='notice'>You set the " + this.name + " for 5 second detonation time.</span>" );
						break;
					case 50:
						this.det_time = 1;
						user.WriteMsg( "<span class='notice'>You set the " + this.name + " for instant detonation.</span>" );
						break;
				}
				this.add_fingerprint( user );
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: grenade.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic bombturf = null;
			dynamic A = null;
			dynamic C = null;

			
			if ( !this.active ) {
				
				if ( this.clown_check( user ) ) {
					user.WriteMsg( "<span class='warning'>You prime the " + this.name + "! " + ( this.det_time ??0) / 10 + " seconds!</span>" );
					GlobalFuncs.playsound( user.loc, "sound/weapons/armbomb.ogg", 60, 1 );
					this.active = true;
					this.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
					this.add_fingerprint( user );
					bombturf = GlobalFuncs.get_turf( this );
					A = GlobalFuncs.get_area( bombturf );
					GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( Task13.User ).str( "'>FLW</A>) has primed a " ).item( this.name ).str( " for detonation at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " has primed a " + this.name + " for detonation at " + A.name + " (" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")." );

					if ( user is Mob_Living_Carbon ) {
						C = user;
						((Mob_Living_Carbon)C).throw_mode_on();
					}
					Task13.Schedule( ((int)( this.det_time ??0 )), (Task13.Closure)(() => {
						this.prime();
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: grenade.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.display_timer ) {
				
				if ( ( this.det_time ??0) > 1 ) {
					user.WriteMsg( new Txt( "The timer is set to " ).item( ( this.det_time ??0) / 10 ).str( " second" ).s().str( "." ).ToString() );
				} else {
					user.WriteMsg( new Txt().The( this ).item().str( " is set for instant detonation." ).ToString() );
				}
			}
			return 0;
		}

		// Function from file: grenade.dm
		public void update_mob(  ) {
			Ent_Static M = null;

			
			if ( this.loc is Mob ) {
				M = this.loc;
				((Mob)M).unEquip( this );
			}
			return;
		}

		// Function from file: grenade.dm
		public virtual void prime(  ) {
			return;
		}

		// Function from file: grenade.dm
		public bool clown_check( dynamic user = null ) {
			
			if ( Lang13.Bool( user.disabilities & 256 ) && Rand13.PercentChance( 50 ) ) {
				user.WriteMsg( "<span class='warning'>Huh? How does this thing work?</span>" );
				this.active = true;
				this.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
				GlobalFuncs.playsound( this.loc, "sound/weapons/armbomb.ogg", 75, 1, -3 );
				Task13.Schedule( 5, (Task13.Closure)(() => {
					
					if ( Lang13.Bool( user ) ) {
						user.drop_item();
					}
					this.prime();
					return;
				}));
				return false;
			}
			return true;
		}

		// Function from file: grenade.dm
		public override void burn(  ) {
			this.prime();
			base.burn();
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom_Walkingmushroom : Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.seed = typeof(Obj_Item_Seeds_Walkingmushroommycelium);
			this.filling_color = "#9370DB";
			this.icon_state = "walkingmushroom";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Mushroom_Walkingmushroom ( dynamic newloc = null, int? new_potency = null ) : base( (object)(newloc), new_potency ) {
			
		}

		// Function from file: grown.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			Mob_Living_SimpleAnimal_Hostile_Mushroom M = null;

			
			if ( user.loc is Tile_Space ) {
				return null;
			}
			M = new Mob_Living_SimpleAnimal_Hostile_Mushroom( user.loc );
			M.maxHealth += Num13.Floor( this.endurance / 4 );
			M.melee_damage_lower += Num13.Floor( ( this.potency ??0) / 20 );
			M.melee_damage_upper += Num13.Floor( ( this.potency ??0) / 20 );
			M.move_to_delay -= Num13.Floor( ( this.production ?1:0) / 50 );
			M.health = M.maxHealth;
			GlobalFuncs.qdel( this );
			user.WriteMsg( "<span class='notice'>You plant the walking mushroom.</span>" );
			return null;
		}

		// Function from file: grown.dm
		public override bool add_juice( dynamic loc = null, int? potency = null ) {
			base.add_juice( (object)(loc), potency );
			this.reagents.add_reagent( "nutriment", Num13.Round( ( this.potency ??0) / 10, 1 ) + 2 );
			this.bitesize = Num13.Round( ( this.reagents.total_volume ??0) / 2, 1 ) + 1;
			return false;
		}

	}

}
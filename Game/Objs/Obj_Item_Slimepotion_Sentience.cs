// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Slimepotion_Sentience : Obj_Item_Slimepotion {

		public ByTable not_interested = new ByTable();
		public bool being_used = false;
		public bool sentience_type = true;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "biotech=5";
			this.icon = "icons/obj/chemical.dmi";
			this.icon_state = "bottle19";
		}

		public Obj_Item_Slimepotion_Sentience ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: xenobiology.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			dynamic SM = null;
			ByTable candidates = null;
			dynamic theghost = null;

			
			if ( this.being_used || !( target is Mob ) ) {
				return false;
			}

			if ( !( target is Mob_Living_SimpleAnimal ) || Lang13.Bool( target.ckey ) ) {
				user.WriteMsg( "<span class='warning'>" + target + " is already too intelligent for this to work!</span>" );
				return base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			}

			if ( Lang13.Bool( target.stat ) ) {
				user.WriteMsg( "<span class='warning'>" + target + " is dead!</span>" );
				return base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			}
			SM = target;

			if ( Lang13.Bool( SM.sentience_type ) != this.sentience_type ) {
				user.WriteMsg( "<span class='warning'>The potion won't work on " + SM + ".</span>" );
				return base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			}
			user.WriteMsg( "<span class='notice'>You offer the sentience potion to " + SM + "...</span>" );
			this.being_used = true;
			candidates = GlobalFuncs.pollCandidates( "Do you want to play as " + SM.name + "?", "xenomorph", null, "xenomorph", 50 );
			theghost = null;

			if ( candidates.len != 0 ) {
				theghost = Rand13.PickFromTable( candidates );
				SM.key = theghost.key;
				SM.languages |= 1;
				SM.faction = user.faction;
				((Mob_Living_SimpleAnimal)SM).sentience_act();
				SM.WriteMsg( "<span class='warning'>All at once it makes sense: you know what you are and who you are! Self awareness is yours!</span>" );
				SM.WriteMsg( "<span class='userdanger'>You are grateful to be self aware and owe " + user + " a great debt. Serve " + user + ", and assist them in completing their goals at any cost.</span>" );
				user.WriteMsg( "<span class='notice'>" + SM + " accepts the potion and suddenly becomes attentive and aware. It worked!</span>" );
				GlobalFuncs.qdel( this );
			} else {
				user.WriteMsg( "<span class='notice'>" + SM + " looks interested for a moment, but then looks back down. Maybe you should try again later.</span>" );
				this.being_used = false;
				base.afterattack( (object)(target), (object)(user), proximity_flag, click_parameters );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ShieldGen : Obj_Machinery {

		public bool active = false;
		public double field_radius = 3;
		public ByTable field = null;
		public bool locked = false;
		public double average_field_strength = 0;
		public double strengthen_rate = 0.2;
		public double max_strengthen_rate = 0.2;
		public bool v_powered = false;
		public bool check_powered = true;
		public Obj_Machinery_ShieldCapacitor owned_capacitor = null;
		public double max_field_strength = 10;
		public int time_since_fail = 100;
		public double energy_conversion_rate = 0.01;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 20;
			this.active_power_usage = 100;
			this.ghost_read = false;
			this.machine_flags = 25;
			this.icon = "code/WorkInProgress/Cael_Aislinn/ShieldGen/shielding.dmi";
			this.icon_state = "generator0";
		}

		// Function from file: shield_gen.dm
		public Obj_Machinery_ShieldGen ( dynamic loc = null ) : base( (object)(loc) ) {
			Obj_Machinery_ShieldCapacitor possible_cap = null;

			Task13.Schedule( 10, (Task13.Closure)(() => {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 1 ), typeof(Obj_Machinery_ShieldCapacitor) )) {
					possible_cap = _a;
					

					if ( Map13.GetDistance( possible_cap, this ) == possible_cap.dir ) {
						this.owned_capacitor = possible_cap;
						break;
					}
				}
				return;
			}));
			this.field = new ByTable();
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: shield_gen.dm
		public virtual ByTable get_shielded_turfs(  ) {
			ByTable _out = null;
			dynamic T = null;

			_out = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, this.field_radius ) )) {
				T = _a;
				

				if ( Map13.GetDistance( this, T ) == this.field_radius ) {
					_out.Add( T );
				}
			}
			return _out;
		}

		// Function from file: shield_gen.dm
		public void toggle(  ) {
			ByTable covered_turfs = null;
			dynamic T = null;
			dynamic O = null;
			Obj_Effect_EnergyField E = null;
			dynamic M = null;
			Obj_Effect_EnergyField D = null;
			dynamic M2 = null;

			this.active = !this.active;
			this.power_change();

			if ( this.active ) {
				covered_turfs = this.get_shielded_turfs();
				T = GlobalFuncs.get_turf( this );

				if ( covered_turfs.Contains( T ) ) {
					covered_turfs.Remove( T );
				}

				foreach (dynamic _a in Lang13.Enumerate( covered_turfs )) {
					O = _a;
					
					E = new Obj_Effect_EnergyField( O );
					this.field.Add( E );
				}
				Lang13.Delete( covered_turfs );
				covered_turfs = null;

				foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInView( this, 5 ) )) {
					M = _b;
					
					GlobalFuncs.to_chat( M, new Txt().icon( this ).str( " You hear heavy droning start up." ).ToString() );
				}
			} else {
				
				foreach (dynamic _c in Lang13.Enumerate( this.field, typeof(Obj_Effect_EnergyField) )) {
					D = _c;
					
					this.field.Remove( D );
					GlobalFuncs.qdel( D );
					D = null;
				}

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchInView( this, 5 ) )) {
					M2 = _d;
					
					GlobalFuncs.to_chat( M2, new Txt().icon( this ).str( " You hear heavy droning fade out." ).ToString() );
				}
			}
			return;
		}

		// Function from file: shield_gen.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			if ( this.active ) {
				this.toggle();
			}
			return base.ex_act( severity, (object)(child) );
		}

		// Function from file: shield_gen.dm
		public override dynamic power_change(  ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				this.icon_state = "broke";
			} else if ( Lang13.Bool( this.powered() ) ) {
				
				if ( this.active ) {
					this.icon_state = "generator1";
				} else {
					this.icon_state = "generator0";
				}
				this.stat &= 65533;
			} else {
				Task13.Schedule( Rand13.Int( 0, 15 ), (Task13.Closure)(() => {
					this.icon_state = "generator0";
					this.stat |= 2;
					return;
				}));

				if ( this.active ) {
					this.toggle();
				}
			}
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( !( Task13.User is Mob_Living_Silicon_Ai ) && Task13.User.z != this.z ) {
				return 1;
			}

			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			}

			if ( Lang13.Bool( href_list["close"] ) ) {
				Interface13.Browse( Task13.User, null, "window=shield_generator" );
				Task13.User.unset_machine();
				return null;
			} else if ( Lang13.Bool( href_list["toggle"] ) ) {
				this.toggle();
			} else if ( Lang13.Bool( href_list["change_radius"] ) ) {
				this.field_radius += String13.ParseNumber( href_list["change_radius"] ) ??0;

				if ( this.field_radius > 200 ) {
					this.field_radius = 200;
				} else if ( this.field_radius < 0 ) {
					this.field_radius = 0;
				}
			} else if ( Lang13.Bool( href_list["strengthen_rate"] ) ) {
				this.strengthen_rate += String13.ParseNumber( href_list["strengthen_rate"] ) ??0;

				if ( this.strengthen_rate > 1 ) {
					this.strengthen_rate = 1;
				} else if ( this.strengthen_rate < 0 ) {
					this.strengthen_rate = 0;
				}
			} else if ( Lang13.Bool( href_list["max_field_strength"] ) ) {
				this.max_field_strength += String13.ParseNumber( href_list["max_field_strength"] ) ??0;

				if ( this.max_field_strength > 1000 ) {
					this.max_field_strength = 1000;
				} else if ( this.max_field_strength < 0 ) {
					this.max_field_strength = 0;
				}
			}
			this.updateDialog();
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic process(  ) {
			double stored_renwicks = 0;
			double target_field_strength = 0;
			double required_energy = 0;
			int assumed_charge = 0;
			Obj_Effect_EnergyField E = null;
			double strength_change = 0;

			
			if ( this.active && this.field.len != 0 ) {
				stored_renwicks = 0;
				target_field_strength = Num13.MinInt( ((int)( this.strengthen_rate + Num13.MaxInt( ((int)( this.average_field_strength )), 0 ) )), ((int)( this.max_field_strength )) );

				if ( this.owned_capacitor != null ) {
					required_energy = this.field.len * target_field_strength / this.energy_conversion_rate;
					assumed_charge = Num13.MinInt( ((int)( this.owned_capacitor.stored_charge )), ((int)( required_energy )) );
					stored_renwicks = assumed_charge * this.energy_conversion_rate;
					this.owned_capacitor.stored_charge -= assumed_charge;
				}
				this.time_since_fail++;
				this.average_field_strength = 0;
				target_field_strength = stored_renwicks / this.field.len;

				foreach (dynamic _a in Lang13.Enumerate( this.field, typeof(Obj_Effect_EnergyField) )) {
					E = _a;
					

					if ( stored_renwicks != 0 ) {
						strength_change = target_field_strength - E.strength;

						if ( strength_change > stored_renwicks ) {
							strength_change = stored_renwicks;
						}

						if ( E.strength < 0 ) {
							E.strength = 0;
						} else {
							E.Strengthen( strength_change );
						}
						stored_renwicks -= strength_change;
						this.average_field_strength += E.strength;
					} else {
						E.Strengthen( -E.strength );
					}
				}
				this.average_field_strength /= this.field.len;

				if ( this.average_field_strength < 0 ) {
					this.time_since_fail = 0;
				}
			} else {
				this.average_field_strength = 0;
			}
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string t = null;

			
			if ( Map13.GetDistance( this, user ) > 1 || ( this.stat & 3 ) != 0 ) {
				
				if ( !( user is Mob_Living_Silicon ) ) {
					((Mob)user).unset_machine();
					Interface13.Browse( user, null, "window=shield_generator" );
					return null;
				}
			}
			t = "<B>Shield Generator Control Console</B><BR><br>";

			if ( this.locked ) {
				t += "<i>Swipe your ID card to begin.</i>";
			} else {
				t += new Txt().item( ( this.owned_capacitor != null ? "<font color=green>Charge capacitor connected.</font>" : "<font color=red>Unable to locate charge capacitor!</font>" ) ).str( "<br>\n			This generator is: " ).item( ( this.active ? "<font color=green>Online</font>" : "<font color=red>Offline</font>" ) ).str( " <a href='?src=" ).Ref( this ).str( ";toggle=1'>" ).item( ( this.active ? "[Deactivate]" : "[Activate]" ) ).str( "</a><br>\n			" ).item( ( this.time_since_fail > 2 ? "<font color=green>Field is stable.</font>" : "<font color=red>Warning, field is unstable!</font>" ) ).str( "<br>\n			Coverage radius (restart required):\n		<a href='?src=" ).Ref( this ).str( ";change_radius=-5'>--</a>\n		<a href='?src=" ).Ref( this ).str( ";change_radius=-1'>-</a>\n		" ).item( this.field_radius * 2 ).str( "m\n		<a href='?src=" ).Ref( this ).str( ";change_radius=1'>+</a>\n		<a href='?src=" ).Ref( this ).str( ";change_radius=5'>++</a><br>\n		Overall field strength: " ).item( this.average_field_strength ).str( " Renwicks (" ).item( ( this.max_field_strength != 0 ? ((dynamic)( this.average_field_strength * 100 / this.max_field_strength )) : ((dynamic)( "NA" )) ) ).str( "%)<br>\n		Charge rate: <a href='?src=" ).Ref( this ).str( ";strengthen_rate=-0.1'>--</a>\n		<a href='?src=" ).Ref( this ).str( ";strengthen_rate=-0.01'>-</a>\n		" ).item( this.strengthen_rate ).str( " Renwicks/sec <a href='?src=" ).Ref( this ).str( ";strengthen_rate=0.01'>+</a>\n		<a href='?src=" ).Ref( this ).str( ";strengthen_rate=0.1'>++</a><br>\n		Upkeep energy: " ).item( this.field.len * this.average_field_strength / this.energy_conversion_rate ).str( " Watts/sec<br>\n		Additional energy required to charge: " ).item( this.field.len * this.strengthen_rate / this.energy_conversion_rate ).str( " Watts/sec<br>\n		Maximum field strength:\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=-100'>[min]</a>\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=-10'>--</a>\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=-1'>-</a>\n		" ).item( this.max_field_strength ).str( " Renwicks\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=1'>+</a>\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=10'>++</a>\n		<a href='?src=" ).Ref( this ).str( ";max_field_strength=100'>[max]</a><br>" ).ToString();
			}
			t += new Txt( "<hr>\n		<A href='?src=" ).Ref( this ).str( "'>Refresh</A>\n		<A href='?src=" ).Ref( this ).str( ";close=1'>Close</A><BR>" ).ToString();
			Interface13.Browse( user, t, "window=shield_generator;size=500x800" );
			((Mob)user).set_machine( this );
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic attack_ghost( Mob_Dead_Observer user = null ) {
			
			if ( GlobalFuncs.isAdminGhost( user ) ) {
				this.attack_hand( user );
			}
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.interact( a );
			return null;
		}

		// Function from file: shield_gen.dm
		public override dynamic attack_ai( dynamic user = null ) {
			this.add_hiddenprint( user );
			return this.attack_hand( user );
		}

		// Function from file: shield_gen.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: shield_gen.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;

			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			} else if ( a is Obj_Item_Weapon_Card_Id ) {
				C = a;

				if ( Lang13.Bool( C.access.Contains( ((dynamic)( Lang13.Bool( C.access ) || GlobalVars.access_engine != 0 )).Contains( ((dynamic)( Lang13.Bool( C.access ) || GlobalVars.access_security )).Contains( GlobalVars.access_captain ) ) ) ) ) {
					this.locked = !this.locked;
					GlobalFuncs.to_chat( b, "Controls are now " + ( this.locked ? "locked." : "unlocked." ) );
					this.updateDialog();
				} else {
					GlobalFuncs.to_chat( b, "<span class='warning'>Access denied.</span>" );
				}
			}
			return null;
		}

		// Function from file: shield_gen.dm
		public override int wrenchAnchor( dynamic user = null ) {
			Obj_Machinery_ShieldCapacitor cap = null;

			
			if ( base.wrenchAnchor( (object)(user) ) != 0 ) {
				
				foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 1 ), typeof(Obj_Machinery_ShieldCapacitor) )) {
					cap = _a;
					

					if ( !Lang13.Bool( this.anchored ) && this.owned_capacitor == cap ) {
						this.owned_capacitor = null;
						break;
					} else if ( Lang13.Bool( this.anchored ) && !( this.owned_capacitor != null ) ) {
						this.owned_capacitor = cap;
						break;
					}
					cap.updateDialog();
					this.updateDialog();
				}
				return 1;
			}
			return 0;
		}

		// Function from file: shield_gen.dm
		public override int emag( dynamic user = null ) {
			Effect_Effect_System_SparkSpread s = null;

			
			if ( Rand13.PercentChance( 75 ) ) {
				this.locked = !this.locked;
				GlobalFuncs.to_chat( user, "Controls are now " + ( this.locked ? "locked." : "unlocked." ) );
				this.updateDialog();
				s = new Effect_Effect_System_SparkSpread();
				s.set_up( 5, 1, this );
				s.start();
				return 1;
			}
			GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/sparks4.ogg", 75, 1 );
			return 0;
		}

	}

}
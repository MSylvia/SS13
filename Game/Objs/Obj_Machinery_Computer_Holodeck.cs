// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Holodeck : Obj_Machinery_Computer {

		public dynamic linked = null;
		public dynamic program = null;
		public dynamic last_program = null;
		public dynamic offline_program = typeof(Zone_Holodeck_RecCenter_Offline);
		public ByTable program_cache = new ByTable();
		public ByTable emag_programs = new ByTable();
		public Type holodeck_type = typeof(Zone_Holodeck_RecCenter);
		public Type program_type = typeof(Zone_Holodeck_RecCenter);
		public dynamic init_program = null;
		public bool random_program = false;
		public bool? active = false;
		public bool damaged = false;
		public dynamic spawned = new ByTable();
		public ByTable effects = new ByTable();
		public int last_change = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_screen = "holocontrol";
			this.idle_power_usage = 10;
			this.active_power_usage = 50;
		}

		// Function from file: computer.dm
		public Obj_Machinery_Computer_Holodeck ( dynamic location = null, dynamic C = null ) : base( (object)(location), (object)(C) ) {
			dynamic AS = null;

			
			if ( Lang13.Bool( ((dynamic)this.holodeck_type).IsSubclassOf( typeof(Zone) ) ) ) {
				this.linked = Lang13.FindObj( this.holodeck_type );
			}

			if ( Lang13.Bool( this.offline_program.IsSubclassOf( typeof(Zone) ) ) ) {
				this.offline_program = Lang13.FindObj( this.offline_program );
			}
			AS = GlobalFuncs.get_area( this );

			if ( AS is Zone_Holodeck ) {
				Game13.log.WriteMsg( "### MAPPING ERROR" );
				Game13.log.WriteMsg( "Holodeck computer cannot be in a holodeck." );
				Game13.log.WriteMsg( "This would cause circular power dependency." );
				GlobalFuncs.qdel( this );
				return;
			} else {
				this.linked.linked = this;
			}

			if ( GlobalVars.ticker != null && GlobalVars.ticker.current_state >= 3 ) {
				this.initialize();
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: computer_funcs.dm
		public override dynamic attack_ai( dynamic user = null ) {
			string dat = null;
			dynamic A = null;
			dynamic A2 = null;
			Browser popup = null;

			dat = "<h3>Current Loaded Programs</h3>";
			dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( this.offline_program.type ).str( "'>Power Off</a><br>" ).ToString();

			foreach (dynamic _a in Lang13.Enumerate( this.program_cache )) {
				A = _a;
				
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( A.type ).str( "'>" ).item( A.name ).str( "</a><br>" ).ToString();
			}

			if ( this.emag_programs.len != 0 ) {
				dat += "<br>";

				if ( Lang13.Bool( this.emagged ) ) {
					dat += new Txt( "Safety protocol: <span class='bad'>Offline</span> <a href='?" ).Ref( this ).str( ";safety=1'>Engage</a><br>" ).ToString();

					foreach (dynamic _b in Lang13.Enumerate( this.emag_programs )) {
						A2 = _b;
						
						dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( A2.type ).str( "'>" ).item( A2.name ).str( "</a><br>" ).ToString();
					}
				} else {
					dat += new Txt( "Safety protocol: <span class='good'>Online</span> <a href='?" ).Ref( this ).str( ";safety=0'>Disengage</a><br>" ).ToString();
				}
			}
			popup = new Browser( user, "computer", this.name, 400, 500 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)user).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: computer_funcs.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string dat = null;
			dynamic A = null;
			dynamic A2 = null;
			Browser popup = null;

			((Mob)a).set_machine( this );
			dat = "<h3>Current Loaded Programs</h3>";
			dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( this.offline_program.type ).str( "'>Power Off</a><br>" ).ToString();

			foreach (dynamic _a in Lang13.Enumerate( this.program_cache )) {
				A = _a;
				
				dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( A.type ).str( "'>" ).item( A.name ).str( "</a><br>" ).ToString();
			}

			if ( Lang13.Bool( this.emagged ) && this.emag_programs.len != 0 ) {
				dat += "<span class='warning'>SUPERVISOR ACCESS - SAFETY PROTOCOLS DISABLED - CAUTION: EMITTER ANOMALY</span><br>";

				foreach (dynamic _b in Lang13.Enumerate( this.emag_programs )) {
					A2 = _b;
					
					dat += new Txt( "<a href='?src=" ).Ref( this ).str( ";loadarea=" ).item( A2.type ).str( "'>" ).item( A2.name ).str( "</a><br>" ).ToString();
				}
			}
			popup = new Browser( a, "computer", this.name, 400, 500 );
			popup.set_content( dat );
			popup.set_title_image( ((Mob)a).browse_rsc_icon( this.icon, this.icon_state ) );
			popup.open();
			return null;
		}

		// Function from file: computer.dm
		public override bool blob_act( dynamic severity = null ) {
			this.emergency_shutdown();
			base.blob_act( (object)(severity) );
			return false;
		}

		// Function from file: computer.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			this.emergency_shutdown();
			base.ex_act( severity, (object)(target) );
			return false;
		}

		// Function from file: computer.dm
		public override double emp_act( int severity = 0 ) {
			this.emergency_shutdown();
			base.emp_act( severity );
			return 0;
		}

		// Function from file: computer.dm
		public override dynamic Destroy(  ) {
			this.emergency_shutdown();
			base.Destroy();
			return null;
		}

		// Function from file: computer.dm
		public override bool emag_act( dynamic user = null ) {
			
			if ( !Lang13.Bool( this.emagged ) ) {
				
				if ( !( this.emag_programs.len != 0 ) ) {
					user.WriteMsg( "" + this + " does not seem to have a card swipe port.  It must be an inferior model." );
					return false;
				}
				GlobalFuncs.playsound( this.loc, "sound/effects/sparks4.ogg", 75, 1 );
				this.emagged = 1;
				user.WriteMsg( "<span class='warning'>You vastly increase projector power and override the safety and security protocols.</span>" );
				user.WriteMsg( "Warning.  Automatic shutoff and derezing protocols have been corrupted.  Please call Nanotrasen maintenance and do not use the simulator." );
				GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " emagged the Holodeck Control Console" );
				this.updateUsrDialog();
				this.nerf( !Lang13.Bool( this.emagged ) ?1:0 );
			}
			return false;
		}

		// Function from file: computer.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Type areapath = null;
			dynamic area = null;
			double? safe = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( !this.Adjacent( Task13.User ) && !( Task13.User is Mob_Living_Silicon ) ) {
				return null;
			}
			Task13.User.set_machine( this );
			this.add_fingerprint( Task13.User );

			if ( Lang13.Bool( href_list["loadarea"] ) ) {
				areapath = Lang13.FindClass( href_list["loadarea"] );

				if ( !Lang13.Bool( ((dynamic)areapath).IsSubclassOf( typeof(Zone_Holodeck) ) ) ) {
					return null;
				}
				area = Lang13.FindObj( areapath );

				if ( !( area is Zone_Holodeck ) ) {
					return null;
				}

				if ( area == this.offline_program || this.program_cache.Contains( area ) || Lang13.Bool( this.emagged ) && this.emag_programs.Contains( area ) ) {
					this.load_program( area );
				}
			} else if ( href_list.Contains( "safety" ) ) {
				safe = String13.ParseNumber( href_list["safety"] );
				this.emagged = !Lang13.Bool( safe ) ?1:0;

				if ( !Lang13.Bool( this.program ) ) {
					return null;
				}

				if ( Lang13.Bool( safe ) && this.emag_programs.Contains( this.program ) ) {
					this.emergency_shutdown();
				}
				this.nerf( safe );
			}
			this.updateUsrDialog();
			return null;
		}

		// Function from file: computer.dm
		public override int? process( dynamic seconds = null ) {
			Tile_Simulated T = null;
			EffectSystem_SparkSpread s = null;
			dynamic M = null;
			dynamic T2 = null;
			EffectSystem_SparkSpread s2 = null;
			dynamic item = null;
			Obj_Effect_HolodeckEffect HE = null;

			
			if ( this.damaged ) {
				
				if ( Rand13.PercentChance( 10 ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( this.linked, typeof(Tile_Simulated) )) {
						T = _a;
						

						if ( Rand13.PercentChance( 5 ) ) {
							s = new EffectSystem_SparkSpread();
							s.set_up( 2, 1, T );
							s.start();
							return null;
						}
					}
				}
			}

			if ( !Lang13.Bool( base.process( (object)(seconds) ) ) || !( this.active == true ) ) {
				return null;
			}

			if ( !this.floorcheck() ) {
				this.emergency_shutdown();
				this.damaged = true;

				foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.ultra_range( 10, this ) )) {
					M = _b;
					
					M.show_message( "The holodeck overloads!" );
				}

				foreach (dynamic _c in Lang13.Enumerate( this.linked )) {
					T2 = _c;
					

					if ( Rand13.PercentChance( 30 ) ) {
						s2 = new EffectSystem_SparkSpread();
						s2.set_up( 2, 1, T2 );
						s2.start();
					}
					((Ent_Static)T2).ex_act( 3 );
					((Tile)T2).hotspot_expose( 1000, 500, true );
				}
			}

			if ( !Lang13.Bool( this.emagged ) ) {
				
				foreach (dynamic _d in Lang13.Enumerate( this.spawned )) {
					item = _d;
					

					if ( !Lang13.Bool( this.linked.Contains( GlobalFuncs.get_turf( item ) ) ) ) {
						this.derez( item, false );
					}
				}
			}

			foreach (dynamic _e in Lang13.Enumerate( this.effects, typeof(Obj_Effect_HolodeckEffect) )) {
				HE = _e;
				
				HE.tick();
			}
			this.active_power_usage = this.spawned.len * 3 + this.effects.len * 5 + 50;
			return null;
		}

		// Function from file: computer_funcs.dm
		public void derez( dynamic obj = null, bool? silent = null, bool? forced = null ) {
			silent = silent ?? true;
			forced = forced ?? false;

			dynamic T = null;
			Ent_Dynamic AM = null;
			Ent_Static M = null;
			dynamic M2 = null;
			dynamic oldobj = null;

			
			if ( Lang13.Bool( obj ) && Lang13.Bool( this.emagged ) && !( this.stat != 0 ) && !( forced == true ) ) {
				
				if ( ( obj is Mob || obj.loc is Mob ) && Rand13.PercentChance( 50 ) ) {
					Task13.Schedule( 50, (Task13.Closure)(() => {
						this.derez( obj, silent );
						return;
					}));
					return;
				}
			}
			this.spawned.Remove( obj );

			if ( !Lang13.Bool( obj ) ) {
				return;
			}
			T = GlobalFuncs.get_turf( obj );

			foreach (dynamic _a in Lang13.Enumerate( obj.contents, typeof(Ent_Dynamic) )) {
				AM = _a;
				
				AM.loc = T;
			}

			if ( obj is Obj ) {
				M = obj.loc;

				if ( M is Mob ) {
					((Mob)M).unEquip( obj, 1 );
				}
			}

			foreach (dynamic _b in Lang13.Enumerate( obj.contents )) {
				M2 = _b;
				
				M2.loc = obj.loc;
				silent = false;
			}

			if ( !( silent == true ) ) {
				oldobj = obj;
				this.visible_message( "The " + oldobj.name + " fades away!" );
			}
			GlobalFuncs.qdel( obj );
			return;
		}

		// Function from file: computer_funcs.dm
		public void load_program( dynamic A = null, bool? force = null, bool? delay = null ) {
			force = force ?? false;
			delay = delay ?? false;

			Obj_Effect_HolodeckEffect HE = null;
			dynamic item = null;
			Obj_Machinery M = null;
			Obj_Structure S = null;
			ByTable added = null;
			Obj_Effect_HolodeckEffect HE2 = null;
			dynamic x = null;
			Obj_Machinery M2 = null;
			Obj_Structure S2 = null;

			
			if ( this.stat != 0 ) {
				A = this.offline_program;
				force = true;
				delay = false;
			}

			if ( this.program == A ) {
				return;
			}

			if ( Game13.time < this.last_change + ( this.damaged ? 500 : 0 ) + 25 && !( force == true ) ) {
				
				if ( delay == true ) {
					Task13.Sleep( 25 );
				} else {
					
					if ( Game13.time < this.last_change + 15 ) {
						return;
					}

					if ( Map13.GetDistance( Task13.User, this ) <= 3 ) {
						Task13.User.WriteMsg( "<span class='warning'>ERROR. Recalibrating projection apparatus.</span>" );
						return;
					}
				}
			}
			this.last_change = Game13.time;
			this.active = A != this.offline_program;
			this.use_power = ( this.active == true ?1:0) + 1;

			foreach (dynamic _a in Lang13.Enumerate( this.effects, typeof(Obj_Effect_HolodeckEffect) )) {
				HE = _a;
				
				HE.deactivate( this );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.spawned )) {
				item = _b;
				
				this.derez( item, null, force );
			}
			this.program = A;
			this.spawned = ((Zone)A).copy_contents_to( this.linked, true, !Lang13.Bool( this.emagged ) );

			foreach (dynamic _c in Lang13.Enumerate( this.spawned, typeof(Obj_Machinery) )) {
				M = _c;
				
				M.flags |= 128;
			}

			foreach (dynamic _d in Lang13.Enumerate( this.spawned, typeof(Obj_Structure) )) {
				S = _d;
				
				S.flags |= 128;
			}
			this.effects = new ByTable();
			Task13.Schedule( 30, (Task13.Closure)(() => {
				added = new ByTable();

				foreach (dynamic _e in Lang13.Enumerate( this.spawned, typeof(Obj_Effect_HolodeckEffect) )) {
					HE2 = _e;
					
					this.effects.Add( HE2 );
					this.spawned -= HE2;
					x = HE2.activate( this );

					if ( x is Ent_Static || x is ByTable ) {
						this.spawned += x;
						added.Add( x );
					}
				}

				foreach (dynamic _f in Lang13.Enumerate( added, typeof(Obj_Machinery) )) {
					M2 = _f;
					
					M2.flags |= 128;
				}

				foreach (dynamic _g in Lang13.Enumerate( added, typeof(Obj_Structure) )) {
					S2 = _g;
					
					S2.flags |= 128;
				}
				return;
			}));
			return;
		}

		// Function from file: computer.dm
		public void nerf( double? active = null ) {
			Obj_Item I = null;
			Obj_Effect_HolodeckEffect HE = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.spawned, typeof(Obj_Item) )) {
				I = _a;
				
				I.damtype = ( Lang13.Bool( active ) ? ((dynamic)( "stamina" )) : Lang13.Initial( I, "damtype" ) );
			}

			foreach (dynamic _b in Lang13.Enumerate( this.effects, typeof(Obj_Effect_HolodeckEffect) )) {
				HE = _b;
				
				HE.safety( active );
			}
			return;
		}

		// Function from file: computer.dm
		public bool floorcheck(  ) {
			dynamic T = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.linked )) {
				T = _a;
				

				if ( !T.intact || T is Tile_Space ) {
					return false;
				}
			}
			return true;
		}

		// Function from file: computer.dm
		public void emergency_shutdown(  ) {
			this.last_program = this.program;
			this.load_program( this.offline_program, true );
			this.active = false;
			return;
		}

		// Function from file: computer.dm
		public void toggle_power( bool? toggleOn = null ) {
			toggleOn = toggleOn ?? false;

			
			if ( this.active == toggleOn ) {
				return;
			}

			if ( toggleOn == true ) {
				
				if ( Lang13.Bool( this.last_program ) && this.last_program != this.offline_program ) {
					this.load_program( this.last_program, null, true );
				}
				this.active = true;
			} else {
				this.last_program = this.program;
				this.load_program( this.offline_program, true );
				this.active = false;
			}
			return;
		}

		// Function from file: computer.dm
		public override void power_change(  ) {
			base.power_change();
			this.toggle_power( !( this.stat != 0 ) );
			return;
		}

		// Function from file: computer.dm
		public override void initialize(  ) {
			dynamic typekey = null;
			dynamic A = null;

			this.program_cache = new ByTable();
			this.emag_programs = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( Lang13.GetTypes( this.program_type ) - this.program_type )) {
				typekey = _a;
				
				A = Lang13.FindObj( typekey );

				if ( !Lang13.Bool( A ) || A.Equals(this.offline_program) ) {
					continue;
				}

				if ( A.contents.len == 0 ) {
					continue;
				}

				if ( A.restricted ) {
					this.emag_programs.Add( A );
				} else {
					this.program_cache.Add( A );
				}

				if ( typekey == this.init_program ) {
					this.load_program( A, true );
				}
			}

			if ( this.random_program && this.program_cache.len != 0 && this.init_program == null ) {
				this.load_program( Rand13.PickFromTable( this.program_cache ), true );
			} else if ( !Lang13.Bool( this.program ) ) {
				this.load_program( this.offline_program );
			}
			return;
		}

	}

}
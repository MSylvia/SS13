// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_SpaceDust : Obj_Effect {

		public double? strength = 2;
		public int life = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/meteor.dmi";
			this.icon_state = "space_dust";
		}

		// Function from file: dust.dm
		public Obj_Effect_SpaceDust ( dynamic loc = null ) : base( (object)(loc) ) {
			int startx = 0;
			int starty = 0;
			int endy = 0;
			int endx = 0;
			dynamic startside = null;
			Tile goal = null;

			startx = 0;
			starty = 0;
			endy = 0;
			endx = 0;
			startside = Rand13.PickFromTable( GlobalVars.cardinal );

			dynamic _a = startside; // Was a switch-case, sorry for the mess.
			if ( _a==1 ) {
				starty = Game13.map_size_y - 8;
				startx = Rand13.Int( 8, Game13.map_size_x - 8 );
				endy = 7;
				endx = Rand13.Int( 7, Game13.map_size_x - 7 );
			} else if ( _a==4 ) {
				starty = Rand13.Int( 8, Game13.map_size_y - 8 );
				startx = Game13.map_size_x - 8;
				endy = Rand13.Int( 7, Game13.map_size_y - 7 );
				endx = 7;
			} else if ( _a==2 ) {
				starty = 8;
				startx = Rand13.Int( 8, Game13.map_size_x - 8 );
				endy = Game13.map_size_y - 7;
				endx = Rand13.Int( 7, Game13.map_size_x - 7 );
			} else if ( _a==8 ) {
				starty = Rand13.Int( 8, Game13.map_size_y - 8 );
				startx = 8;
				endy = Rand13.Int( 7, Game13.map_size_y - 7 );
				endx = Game13.map_size_x - 7;
			}
			goal = Map13.GetTile( endx, endy, 1 );
			this.x = startx;
			this.y = starty;
			this.z = 1;
			Task13.Schedule( 0, (Task13.Closure)(() => {
				Map13.WalkTowardsSimple( this, goal, 1 );
				return;
			}));
			return;
		}

		// Function from file: dust.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			GlobalFuncs.qdel( this );
			return false;
		}

		// Function from file: dust.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			this.Bump( AM );
			return false;
		}

		// Function from file: dust.dm
		public override dynamic Bump( Ent_Static Obstacle = null, dynamic yes = null) {
			dynamic M = null;

			Task13.Schedule( 0, (Task13.Closure)(() => {
				
				if ( Rand13.PercentChance( 50 ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRange( this, 10 ) )) {
						M = _a;
						

						if ( !Lang13.Bool( M.stat ) && !( M is Mob_Living_Silicon_Ai ) ) {
							GlobalFuncs.shake_camera( M, 3, 1 );
						}
					}
				}

				if ( Obstacle != null ) {
					GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/meteorimpact.ogg", 40, 1 );

					if ( Obstacle is Mob ) {
						Obstacle.ex_act( this.strength );
					} else if ( !( Obstacle is Obj_Machinery_Power_Emitter ) && !( Obstacle is Obj_Machinery_FieldGenerator ) ) {
						Obstacle.ex_act( this.strength );
					}
					this.life--;

					if ( this.life <= 0 ) {
						Map13.Walk( this, 0, 0 );
						Task13.Schedule( 1, (Task13.Closure)(() => {
							GlobalFuncs.qdel( this );
							return;
						}));
						return;
					}
				}
				return;
			}));
			return null;
		}

	}

}
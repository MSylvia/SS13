// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Stack_Tile_Wood : Obj_Item_Stack_Tile {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.singular_name = "wood floor tile";
			this.force = 1;
			this.throw_speed = 5;
			this.throw_range = 20;
			this.max_amount = 60;
			this.material = "wood";
			this.icon_state = "tile-wood";
		}

		public Obj_Item_Stack_Tile_Wood ( dynamic loc = null, int? amount = null ) : base( (object)(loc), amount ) {
			
		}

		// Function from file: tile_types.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic T = null;
			dynamic L = null;
			Obj_Item_Stack_Tile_Wood S = null;

			
			if ( flag == true ) {
				
				if ( A is Tile || A is Obj_Structure_Lattice_Wood ) {
					T = GlobalFuncs.get_turf( A );
					L = Lang13.FindIn( typeof(Obj_Structure_Lattice_Wood), T );

					if ( !( L is Obj_Structure_Lattice ) ) {
						return false;
					}
					S = this;

					if ( !( ((Tile)T).canBuildPlating( S ) != 0 ) ) {
						GlobalFuncs.to_chat( user, "<span class='warning'>You can't get that deck up without some support!</span>" );
						return false;
					}

					if ( S.use( 1 ) ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/weapons/Genhit.ogg", 50, 1 );
						S.build( T );

						if ( ((Tile)T).canBuildPlating( S ) == 1 ) {
							GlobalFuncs.qdel( L );
						}
					}
				}
			}
			return false;
		}

		// Function from file: tile_types.dm
		public void build( dynamic S = null ) {
			
			if ( S is Tile_Unsimulated_Floor_Asteroid ) {
				((Tile)S).ChangeTurf( typeof(Tile_Simulated_Floor_Plating_Deck_Airless) );
			} else {
				((Tile)S).ChangeTurf( typeof(Tile_Simulated_Floor_Plating_Deck) );
			}
			return;
		}

	}

}
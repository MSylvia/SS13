// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Staff_Necro : Obj_Item_Weapon_Staff {

		public int charge_tick = 0;
		public int charges = 3;
		public int raisetype = 0;
		public int next_change = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "necrostaff";
			this.icon_state = "necrostaff";
		}

		// Function from file: artefact.dm
		public Obj_Item_Weapon_Staff_Necro ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			GlobalVars.processing_objects.Add( this );
			return;
		}

		// Function from file: artefact.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			this.afterattack( M, user, true );
			return null;
		}

		// Function from file: artefact.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			dynamic H = null;

			
			if ( !( A is Mob_Living_Carbon_Human ) || !( this.charges != 0 ) || Map13.GetDistance( A, user ) > 7 ) {
				return false;
			}
			H = A;

			if ( !Lang13.Bool( H.stat ) || Convert.ToDouble( H.health ) > Convert.ToDouble( GlobalVars.config.health_threshold_crit ) ) {
				return false;
			}

			switch ((int)( this.raisetype )) {
				case 0:
					new Mob_Living_SimpleAnimal_Hostile_Necro_Zombie( GlobalFuncs.get_turf( A ), user, H.mind );
					break;
				case 1:
					new Mob_Living_SimpleAnimal_Hostile_Necro_Skeleton( GlobalFuncs.get_turf( A ), user, H.mind );
					break;
			}
			((Mob)H).gib();
			this.charges--;
			return false;
		}

		// Function from file: artefact.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.next_change > Game13.timeofday ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>You must wait longer to decide on a minion type.</span>" );
				return null;
			}
			this.raisetype = !( this.raisetype != 0 ) ?1:0;
			GlobalFuncs.to_chat( user, "<span class='notice'>You will now raise " + ( this.raisetype < 2 ? ( this.raisetype != 0 ? "skeletal" : "zombified" ) : "unknown" ) + " minions from corpses.</span>" );
			this.next_change = Game13.timeofday + 30;
			return null;
		}

		// Function from file: artefact.dm
		public override dynamic process(  ) {
			this.charge_tick++;

			if ( this.charge_tick < 4 ) {
				return 0;
			}
			this.charge_tick = 0;
			this.charges++;
			return 1;
		}

		// Function from file: artefact.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.processing_objects.Remove( this );
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
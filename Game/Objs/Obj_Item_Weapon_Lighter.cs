// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Lighter : Obj_Item_Weapon {

		public int brightness_on = 2;
		public ByTable lightersound = new ByTable(new object [] { "sound/items/lighter1.ogg", "sound/items/lighter2.ogg" });
		public int fuel = 20;
		public int? fueltime = null;
		public bool lit = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "lighter-g";
			this.w_class = 1;
			this.throwforce = 4;
			this.heat_production = 1500;
			this.slot_flags = 512;
			this.attack_verb = new ByTable(new object [] { "burnt", "singed" });
			this.light_color = "#FAA019";
			this.icon_state = "lighter-g";
		}

		public Obj_Item_Weapon_Lighter ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: cigs_lighters.dm
		public override dynamic process(  ) {
			dynamic location = null;

			location = GlobalFuncs.get_turf( this );

			if ( Lang13.Bool( location ) ) {
				((Tile)location).hotspot_expose( 700, 5, null, this.loc is Tile );
			}

			if ( !Lang13.Bool( this.fueltime ) ) {
				this.fueltime = Game13.time + 100;
			}

			if ( Game13.time > ( this.fueltime ??0) ) {
				this.fueltime = Game13.time + 100;
				this.fuel--;

				if ( !( this.fuel != 0 ) ) {
					this.lit = false;
					this.update_brightness();
					this.visible_message( new Txt( "<span class='warning'>Without warning, " ).the( this ).item().str( " suddenly shuts off.</span>" ).ToString() );
					this.fueltime = null;
				}
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic cig = null;

			
			if ( M.wear_mask is Obj_Item_Clothing_Mask_Cigarette && ((dynamic)user.zone_sel).selecting == "mouth" && this.lit ) {
				cig = M.wear_mask;

				if ( M == user ) {
					((Ent_Static)cig).attackby( this, user );
				} else if ( this is Obj_Item_Weapon_Lighter_Zippo ) {
					cig.light( new Txt( "<span class='rose'>" ).item( user ).str( " whips " ).his_her_its_their().str( " " ).item( this.name ).str( " out and holds it for " ).item( M ).str( ". Their arm is as steady as the unflickering flame they light " ).the( cig ).item().str( " with.</span>" ).ToString() );
				} else {
					cig.light( new Txt( "<span class='notice'>" ).item( user ).str( " holds " ).his_her_its_their().str( " " ).item( this.name ).str( " out for " ).item( M ).str( " and lights " ).the( cig ).item().str( ".</span>" ).ToString() );
				}
			} else {
				return base.attack( (object)(M), (object)(user), def_zone, eat_override );
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		public override double? is_hot(  ) {
			
			if ( this.lit ) {
				return this.heat_production;
			}
			return 0;
		}

		// Function from file: cigs_lighters.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			((Mob)user).delayNextAttack( 5 );

			if ( !( this.fuel != 0 ) ) {
				((Ent_Static)user).visible_message( new Txt( "<span class='rose'>" ).item( user ).str( " attempts to light " ).the( this ).item().str( " to no avail.</span>" ).ToString(), new Txt( "<span class='notice'>" ).The( this ).item().str( " doesn't have enough fuel to ignite</span>" ).ToString() );
				return null;
			}

			if ( !this.lit ) {
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), Rand13.PickFromTable( this.lightersound ), 50, 1 );

				if ( this.fuel >= Convert.ToDouble( Lang13.Initial( this, "fuel" ) - 5 ) || Rand13.PercentChance( ((int)( this.fuel / Convert.ToDouble( Lang13.Initial( this, "fuel" ) ) * 100 )) ) ) {
					((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " manages to light " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You manage to light " ).the( this ).item().str( ".</span>" ).ToString() );
					this.lit = !this.lit;
					this.update_brightness();
					this.fuel--;
					return null;
				} else {
					((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " tries to light " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You try to light " ).the( this ).item().str( ".</span>" ).ToString() );
					return null;
				}
			} else {
				this.fueltime = null;
				this.lit = !this.lit;
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " quietly shuts off " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You quietly shut off " ).the( this ).item().str( ".</span>" ).ToString() );
				this.update_brightness();
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( !( flag == true ) ) {
				return false;
			}

			if ( A is Obj_Structure_ReagentDispensers_Fueltank ) {
				this.fuel += ((Reagents)A.reagents).remove_any( Lang13.Initial( this, "fuel" ) - this.fuel ) ??0;
				((Ent_Static)user).visible_message( new Txt( "<span class='notice'>" ).item( user ).str( " refuels " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>You refuel " ).the( this ).item().str( ".</span>" ).ToString() );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/refill.ogg", 50, 1, -6 );
				return false;
			}
			return false;
		}

		// Function from file: cigs_lighters.dm
		public void update_brightness(  ) {
			
			if ( this.lit ) {
				GlobalVars.processing_objects.Add( this );
				this.set_light( this.brightness_on );
			} else {
				GlobalVars.processing_objects.Remove( this );
				this.set_light( 0 );
			}
			this.update_icon();
			return;
		}

		// Function from file: cigs_lighters.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			switch ( this.lit ) {
				case true:
					this.name = "lit " + Lang13.Initial( this, "name" );
					this.item_state = "" + Lang13.Initial( this, "item_state" ) + "on";
					this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-on";
					this.damtype = "fire";
					break;
				case false:
					this.name = "" + Lang13.Initial( this, "name" );
					this.item_state = "" + Lang13.Initial( this, "item_state" ) + "off";
					this.icon_state = "" + Lang13.Initial( this, "icon_state" );
					this.damtype = "brute";
					break;
			}
			return null;
		}

		// Function from file: cigs_lighters.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "The lighter is " + ( this.lit ? "" : "un" ) + "lit" );
			return null;
		}

	}

}
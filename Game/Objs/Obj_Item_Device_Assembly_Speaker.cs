// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_Speaker : Obj_Item_Device_Assembly {

		public string real_name = "speaker";
		public string message = "Thank you for using NanoSpeaker!";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "speaker";
			this.starting_materials = new ByTable().Set( "$iron", 800 ).Set( "$glass", 100 );
			this.accessible_values = new ByTable().Set( "Message", "message;text" );
			this.icon_state = "speaker";
		}

		public Obj_Item_Device_Assembly_Speaker ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: speaker.dm
		public override bool can_speak( dynamic message = null ) {
			return true;
		}

		// Function from file: speaker.dm
		public override bool say( dynamic message = null, string speaking = null, Ent_Dynamic radio = null ) {
			radio = radio ?? this;

			Ent_Static F = null;

			
			if ( this.loc is Obj_Item_Device_AssemblyFrame ) {
				F = this.loc;
				((dynamic)F).say( message, speaking, radio );
			} else {
				return base.say( (object)(message), speaking, radio );
			}
			return false;
		}

		// Function from file: speaker.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string new_name = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_Pen ) {
				new_name = GlobalFuncs.sanitize( Interface13.Input( b, "Enter new name for the " + this, "NanoSpeaker Settings", this.name, null, InputType.Any ) );

				if ( new_name != "" ) {
					this.name = "" + this.real_name + " (" + new_name + ")";
				} else {
					this.name = this.real_name;
				}
			}
			return null;
		}

		// Function from file: speaker.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string new_msg = null;
			string language = null;

			new_msg = GlobalFuncs.sanitize( Interface13.Input( user, "Enter new message for the " + this, "NanoSpeaker Settings", this.message, null, InputType.Any ) );

			if ( !this.Adjacent( user ) ) {
				return null;
			}
			this.message = new_msg;

			if ( Convert.ToInt32( user.stat ) == 2 ) {
				language = GlobalVars.all_languages["Spooky"];
			}
			this.say( "New message: " + this.message, language );
			return null;
		}

		// Function from file: speaker.dm
		public override bool activate(  ) {
			this.say( this.message );
			return false;
		}

	}

}
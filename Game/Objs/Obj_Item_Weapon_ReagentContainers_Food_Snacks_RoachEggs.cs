// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_RoachEggs : Obj_Item_Weapon_ReagentContainers_Food_Snacks {

		public int amount_grown = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.food_flags = 2;
			this.icon_state = "roach_eggs1";
		}

		// Function from file: roach.dm
		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_RoachEggs ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			((Reagents)this.reagents).add_reagent( "nutriment", 2 );
			((Reagents)this.reagents).add_reagent( "toxin", 0.2 );
			this.bitesize = 1.1;
			this.icon_state = "roach_eggs" + Rand13.Int( 1, 3 );
			GlobalVars.cockroach_egg_amount++;
			return;
		}

		// Function from file: roach.dm
		public void die(  ) {
			GlobalVars.processing_objects.Remove( this );
			this.amount_grown = 0;
			return;
		}

		// Function from file: roach.dm
		public void fertilize(  ) {
			GlobalVars.processing_objects.Add( this );
			this.amount_grown = 1;
			return;
		}

		// Function from file: roach.dm
		public void hatch(  ) {
			new Mob_Living_SimpleAnimal_Cockroach( GlobalFuncs.get_turf( this ) );
			GlobalVars.processing_objects.Remove( this );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: roach.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( this.amount_grown != 0 ) {
				this.die();
			}
			GlobalVars.cockroach_egg_amount--;
			return base.Destroy( (object)(brokenup) );
		}

		// Function from file: roach.dm
		public override dynamic process(  ) {
			
			if ( this.loc is Tile ) {
				this.amount_grown += Rand13.Int( 1, 2 );

				if ( this.amount_grown >= 41 ) {
					
					if ( Convert.ToDouble( GlobalVars.animal_count[typeof(Mob_Living_SimpleAnimal_Cockroach)] ) < GlobalVars.ANIMAL_CHILD_CAP ) {
						this.hatch();
					} else {
						this.die();
					}
				}
			} else {
				this.die();
			}
			return null;
		}

	}

}
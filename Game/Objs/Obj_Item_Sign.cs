// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Sign : Obj_Item {

		public string sign_state = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/decals.dmi";
		}

		public Obj_Item_Sign ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: signs.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic direction = null;
			Obj_Structure_Sign S = null;

			
			if ( a is Obj_Item_Weapon_Screwdriver && b.loc is Tile ) {
				direction = Interface13.Input( "In which direction?", "Select direction.", null, null, new ByTable(new object [] { "North", "East", "South", "West", "Cancel" }), InputType.Any );

				if ( direction == "Cancel" ) {
					return null;
				}
				S = new Obj_Structure_Sign( b.loc );

				dynamic _a = direction; // Was a switch-case, sorry for the mess.
				if ( _a=="North" ) {
					S.pixel_y = 32;
				} else if ( _a=="East" ) {
					S.pixel_x = 32;
				} else if ( _a=="South" ) {
					S.pixel_y = -32;
				} else if ( _a=="West" ) {
					S.pixel_x = -32;
				} else {
					return null;
				}
				S.name = this.name;
				S.desc = this.desc;
				S.icon_state = this.sign_state;
				GlobalFuncs.to_chat( b, new Txt( "You fasten " ).the( S ).item().str( " with your " ).item( a ).str( "." ).ToString() );
				GlobalFuncs.qdel( this );
				return null;
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

	}

}
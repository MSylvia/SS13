// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_GravityGenerator_Main : Obj_Machinery_GravityGenerator {

		public bool on = true;
		public bool breaker = true;
		public ByTable parts = new ByTable();
		public Obj_Machinery_GravityGenerator_Part middle = null;
		public int charging_state = 0;
		public int charge_count = 100;
		public string current_overlay = null;
		public int broken_state = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.active_power_usage = 3000;
			this.power_channel = 3;
			this.sprite_number = 8;
			this.interact_offline = true;
			this.icon_state = "on_8";
		}

		public Obj_Machinery_GravityGenerator_Main ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: gravitygenerator.dm
		public override int? process( dynamic seconds = null ) {
			string overlay_state = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				return null;
			}

			if ( this.charging_state != ( GlobalVars.POWER_IDLE ?1:0) ) {
				
				if ( this.charging_state == ( GlobalVars.POWER_UP ?1:0) && this.charge_count >= 100 ) {
					this.set_state( true );
				} else if ( this.charging_state == GlobalVars.POWER_DOWN && this.charge_count <= 0 ) {
					this.set_state( false );
				} else {
					
					if ( this.charging_state == ( GlobalVars.POWER_UP ?1:0) ) {
						this.charge_count += 2;
					} else if ( this.charging_state == GlobalVars.POWER_DOWN ) {
						this.charge_count -= 2;
					}

					if ( this.charge_count % 4 == 0 && Rand13.PercentChance( 75 ) ) {
						GlobalFuncs.playsound( this.loc, "sound/effects/EMPulse.ogg", 100, 1 );
					}
					this.updateDialog();

					if ( Rand13.PercentChance( 25 ) ) {
						this.pulse_radiation();
					}
					overlay_state = null;

					dynamic _a = this.charge_count; // Was a switch-case, sorry for the mess.
					if ( 0<=_a&&_a<=20 ) {
						overlay_state = null;
					} else if ( 21<=_a&&_a<=40 ) {
						overlay_state = "startup";
					} else if ( 41<=_a&&_a<=60 ) {
						overlay_state = "idle";
					} else if ( 61<=_a&&_a<=80 ) {
						overlay_state = "activating";
					} else if ( 81<=_a&&_a<=100 ) {
						overlay_state = "activated";
					}

					if ( overlay_state != this.current_overlay ) {
						
						if ( this.middle != null ) {
							this.middle.overlays.Cut();

							if ( Lang13.Bool( overlay_state ) ) {
								this.middle.overlays.Add( overlay_state );
							}
							this.current_overlay = overlay_state;
						}
					}
				}
			}
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			Obj O = null;

			base.update_icon( (object)(new_state), (object)(new_icon), new_px, new_py );

			foreach (dynamic _a in Lang13.Enumerate( this.parts, typeof(Obj) )) {
				O = _a;
				
				O.update_icon();
			}
			return false;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic get_status(  ) {
			
			if ( ( this.stat & 1 ) != 0 ) {
				return "fix" + Num13.MinInt( this.broken_state, 3 );
			}
			return ( this.on || this.charging_state != ( GlobalVars.POWER_IDLE ?1:0) ? "on" : "off" );
		}

		// Function from file: gravitygenerator.dm
		public override void power_change(  ) {
			base.power_change();
			this.investigate_log( "has " + ( ( this.stat & 2 ) != 0 ? "lost" : "regained" ) + " power.", "gravity" );
			this.set_power();
			return;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hsrc) ) ) ) {
				return null;
			}

			if ( Lang13.Bool( href_list["gentoggle"] ) ) {
				this.breaker = !this.breaker;
				this.investigate_log( "was toggled " + ( this.breaker ? "<font color='green'>ON</font>" : "<font color='red'>OFF</font>" ) + " by " + Task13.User.key + ".", "gravity" );
				this.set_power();
				this.updateUsrDialog();
			}
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic interact( dynamic user = null, bool? flag1 = null ) {
			string dat = null;
			Browser popup = null;

			
			if ( ( this.stat & 1 ) != 0 ) {
				return null;
			}
			dat = "Gravity Generator Breaker: ";

			if ( this.breaker ) {
				dat += new Txt( "<span class='linkOn'>ON</span> <A href='?src=" ).Ref( this ).str( ";gentoggle=1'>OFF</A>" ).ToString();
			} else {
				dat += new Txt( "<A href='?src=" ).Ref( this ).str( ";gentoggle=1'>ON</A> <span class='linkOn'>OFF</span> " ).ToString();
			}
			dat += "<br>Generator Status:<br><div class='statusDisplay'>";

			if ( this.charging_state != ( GlobalVars.POWER_IDLE ?1:0) ) {
				dat += "<font class='bad'>WARNING</font> Radiation Detected. <br>" + ( this.charging_state == ( GlobalVars.POWER_UP ?1:0) ? "Charging..." : "Discharging..." );
			} else if ( this.on ) {
				dat += "Powered.";
			} else {
				dat += "Unpowered.";
			}
			dat += "<br>Gravity Charge: " + this.charge_count + "%</div>";
			popup = new Browser( user, "gravgen", this.name );
			popup.set_content( dat );
			popup.open();
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			
			if ( !Lang13.Bool( base.attack_hand( (object)(a), b, c ) ) ) {
				return this.interact( a );
			}
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			int old_broken_state = 0;
			dynamic WT = null;
			dynamic PS = null;

			old_broken_state = this.broken_state;

			switch ((int)( this.broken_state )) {
				case 0:
					
					if ( A is Obj_Item_Weapon_Screwdriver ) {
						user.WriteMsg( "<span class='notice'>You secure the screws of the framework.</span>" );
						GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 50, 1 );
						this.broken_state++;
					}
					break;
				case 1:
					
					if ( A is Obj_Item_Weapon_Weldingtool ) {
						WT = A;

						if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 1, user ) ) {
							user.WriteMsg( "<span class='notice'>You mend the damaged framework.</span>" );
							GlobalFuncs.playsound( this.loc, "sound/items/welder2.ogg", 50, 1 );
							this.broken_state++;
						} else if ( ((Obj_Item_Weapon_Weldingtool)WT).isOn() ) {
							user.WriteMsg( "<span class='warning'>You don't have enough fuel to mend the damaged framework!</span>" );
						}
					}
					break;
				case 2:
					
					if ( A is Obj_Item_Stack_Sheet_Plasteel ) {
						PS = A;

						if ( Convert.ToDouble( PS.amount ) >= 10 ) {
							PS.use( 10 );
							user.WriteMsg( "<span class='notice'>You add the plating to the framework.</span>" );
							GlobalFuncs.playsound( this.loc, "sound/machines/click.ogg", 75, 1 );
							this.broken_state++;
						} else {
							user.WriteMsg( "<span class='warning'>You need 10 sheets of plasteel!</span>" );
						}
					}
					break;
				case 3:
					
					if ( A is Obj_Item_Weapon_Wrench ) {
						user.WriteMsg( "<span class='notice'>You secure the plating to the framework.</span>" );
						GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 75, 1 );
						this.set_fix();
					}
					break;
				default:
					base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
					break;
			}

			if ( old_broken_state != this.broken_state ) {
				this.update_icon();
			}
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override void set_fix(  ) {
			Obj_Machinery_GravityGenerator M = null;

			base.set_fix();

			foreach (dynamic _a in Lang13.Enumerate( this.parts, typeof(Obj_Machinery_GravityGenerator) )) {
				M = _a;
				

				if ( ( M.stat & 1 ) != 0 ) {
					M.set_fix();
				}
			}
			this.broken_state = 0;
			this.update_icon();
			this.set_power();
			return;
		}

		// Function from file: gravitygenerator.dm
		public override void set_broken(  ) {
			Obj_Machinery_GravityGenerator M = null;

			base.set_broken();

			foreach (dynamic _a in Lang13.Enumerate( this.parts, typeof(Obj_Machinery_GravityGenerator) )) {
				M = _a;
				

				if ( !( ( M.stat & 1 ) != 0 ) ) {
					M.set_broken();
				}
			}
			this.middle.overlays.Cut();
			this.charge_count = 0;
			this.breaker = false;
			this.set_power();
			this.set_state( false );
			this.investigate_log( "has broken down.", "gravity" );
			return;
		}

		// Function from file: gravitygenerator.dm
		public void update_list(  ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this.loc );

			if ( Lang13.Bool( T ) ) {
				
				if ( !Lang13.Bool( GlobalVars.gravity_generators["" + T.z] ) ) {
					GlobalVars.gravity_generators["" + T.z] = new ByTable();
				}

				if ( this.on ) {
					GlobalVars.gravity_generators["" + T.z] |= this;
				} else {
					GlobalVars.gravity_generators["" + T.z] -= this;
				}
			}
			return;
		}

		// Function from file: gravitygenerator.dm
		public int gravity_in_level(  ) {
			dynamic T = null;

			T = GlobalFuncs.get_turf( this );

			if ( !Lang13.Bool( T ) ) {
				return 0;
			}

			if ( Lang13.Bool( GlobalVars.gravity_generators["" + T.z] ) ) {
				return Lang13.Length( GlobalVars.gravity_generators["" + T.z] );
			}
			return 0;
		}

		// Function from file: gravitygenerator.dm
		public void shake_everyone(  ) {
			dynamic T = null;
			dynamic M = null;

			T = GlobalFuncs.get_turf( this );

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.mob_list )) {
				M = _a;
				

				if ( Convert.ToInt32( M.z ) != this.z ) {
					continue;
				}
				((Mob)M).update_gravity( ((Mob)M).mob_has_gravity() );

				if ( Lang13.Bool( M.client ) ) {
					GlobalFuncs.shake_camera( M, 15, 1 );
					((Ent_Static)M).playsound_local( T, "sound/effects/alert.ogg", 100, 1, 0.5 );
				}
			}
			return;
		}

		// Function from file: gravitygenerator.dm
		public void pulse_radiation(  ) {
			GlobalFuncs.radiation_pulse( GlobalFuncs.get_turf( this ), 3, 7, 20 );
			return;
		}

		// Function from file: gravitygenerator.dm
		public void set_state( bool new_state = false ) {
			bool alert = false;
			dynamic area = null;

			this.charging_state = GlobalVars.POWER_IDLE ?1:0;
			this.on = new_state;
			this.use_power = ( this.on ? 2 : 1 );
			alert = false;
			area = GlobalFuncs.get_area( this );

			if ( this.on && GlobalVars.ticker != null && GlobalVars.ticker.current_state == 3 ) {
				
				if ( this.gravity_in_level() == 0 ) {
					alert = true;
					this.investigate_log( "was brought online and is now producing gravity for this level.", "gravity" );
					GlobalFuncs.message_admins( "The gravity generator was brought online. (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>" + area.name + "</a>)" );
				}
			} else if ( this.gravity_in_level() == 1 ) {
				alert = true;
				this.investigate_log( "was brought offline and there is now no gravity for this level.", "gravity" );
				GlobalFuncs.message_admins( "The gravity generator was brought offline with no backup generator. (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>" + area.name + "</a>)" );
			}
			this.update_icon();
			this.update_list();
			this.updateUsrDialog();

			if ( alert ) {
				this.shake_everyone();
			}
			return;
		}

		// Function from file: gravitygenerator.dm
		public void set_power(  ) {
			bool new_state = false;

			new_state = false;

			if ( ( this.stat & 3 ) != 0 || !this.breaker ) {
				new_state = false;
			} else if ( this.breaker ) {
				new_state = true;
			}
			this.charging_state = ( new_state ? GlobalVars.POWER_UP ?1:0 : GlobalVars.POWER_DOWN );
			this.investigate_log( "is now " + ( this.charging_state == ( GlobalVars.POWER_UP ?1:0) ? "charging" : "discharging" ) + ".", "gravity" );
			this.update_icon();
			return;
		}

		// Function from file: gravitygenerator.dm
		public bool connected_parts(  ) {
			return this.parts.len == 8;
		}

		// Function from file: gravitygenerator.dm
		public void setup_parts(  ) {
			dynamic our_turf = null;
			ByTable spawn_turfs = null;
			int count = 0;
			dynamic T = null;
			Obj_Machinery_GravityGenerator_Part part = null;

			our_turf = GlobalFuncs.get_turf( this );
			spawn_turfs = Map13.FetchInBlock( Map13.GetTile( Convert.ToInt32( our_turf.x - 1 ), Convert.ToInt32( our_turf.y + 2 ), Convert.ToInt32( our_turf.z ) ), Map13.GetTile( Convert.ToInt32( our_turf.x + 1 ), Convert.ToInt32( our_turf.y ), Convert.ToInt32( our_turf.z ) ) );
			count = 10;

			foreach (dynamic _a in Lang13.Enumerate( spawn_turfs )) {
				T = _a;
				
				count--;

				if ( T == our_turf ) {
					continue;
				}
				part = new Obj_Machinery_GravityGenerator_Part( T );

				if ( count == 5 ) {
					this.middle = part;
				}

				if ( count <= 3 ) {
					part.density = false;
					part.layer = 401;
				}
				part.sprite_number = count;
				part.main_part = this;
				this.parts.Add( part );
				part.update_icon();
			}
			return;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic Destroy(  ) {
			Obj_Machinery_GravityGenerator_Part O = null;

			this.investigate_log( "was destroyed!", "gravity" );
			this.on = false;
			this.update_list();

			foreach (dynamic _a in Lang13.Enumerate( this.parts, typeof(Obj_Machinery_GravityGenerator_Part) )) {
				O = _a;
				
				O.main_part = null;
				GlobalFuncs.qdel( O );
			}
			return base.Destroy();
		}

	}

}
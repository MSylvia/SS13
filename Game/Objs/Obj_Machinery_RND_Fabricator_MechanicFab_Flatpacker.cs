// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_RND_Fabricator_MechanicFab_Flatpacker : Obj_Machinery_RND_Fabricator_MechanicFab {

		public ByTable build_parts = new ByTable()
											.Set( typeof(Obj_Item_Weapon_StockParts_MicroLaser), 1 )
											.Set( typeof(Obj_Item_Weapon_StockParts_Manipulator), 1 )
											.Set( typeof(Obj_Item_Weapon_StockParts_MatterBin), 1 )
											.Set( typeof(Obj_Item_Weapon_StockParts_ScanningModule), 1 )
										;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.nano_file = "flatpacker.tmpl";
			this.build_time = 0.5;
			this.design_types = new ByTable(new object [] { 64 });
			this.one_part_set_only = false;
			this.part_sets = new ByTable().Set( "Machines", new ByTable() ).Set( "Computers", new ByTable() ).Set( "Misc", new ByTable() );
			this.icon_state = "flatpacker";
		}

		// Function from file: flatpacker.dm
		public Obj_Machinery_RND_Fabricator_MechanicFab_Flatpacker ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Flatpacker(), 
				new Obj_Item_Weapon_StockParts_MatterBin(), 
				new Obj_Item_Weapon_StockParts_MatterBin(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_Manipulator(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_StockParts_MicroLaser(), 
				new Obj_Item_Weapon_ReagentContainers_Glass_Beaker(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: flatpacker.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( base.attackby( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}

			if ( Lang13.Bool( ((Ent_Static)a).is_open_container() ) ) {
				return 1;
			}
			return null;
		}

		// Function from file: flatpacker.dm
		public override bool build_part( dynamic part = null ) {
			Obj_Structure_Closet_Crate_Flatpack FP = null;
			dynamic output = null;

			
			if ( !Lang13.Bool( part ) ) {
				return false;
			}

			if ( !this.remove_materials( part ) ) {
				this.stopped = true;
				this.visible_message( "<font color='blue'>The " + this.name + " beeps, \"Not enough materials to complete item.\"</font>" );
				return false;
			}
			this.being_built = Lang13.Call( part.build_path, this );
			this.busy = true;
			this.overlays.Add( "" + this.base_state + "_ani" );
			this.use_power = 2;
			this.updateUsrDialog();
			Task13.Sleep( ((int)( this.get_construction_time_w_coeff( part ) )) );
			this.use_power = 1;
			this.overlays.Remove( "" + this.base_state + "_ani" );

			if ( Lang13.Bool( this.being_built ) ) {
				FP = new Obj_Structure_Closet_Crate_Flatpack();
				this.being_built.loc = FP;
				FP.name += " (" + this.being_built.name + ")";
				FP.machine = this.being_built;
				FP.update_icon();
				output = this.get_output();
				FP.loc = GlobalFuncs.get_turf( output );
				this.visible_message( new Txt( " " ).icon( this ).str( " " ).The( this ).item().str( " beeps: \"Succesfully completed " ).the( this.being_built.name ).item().str( ".\"" ).ToString() );
				this.being_built = null;
			}
			this.updateUsrDialog();
			this.busy = false;
			return true;
		}

	}

}
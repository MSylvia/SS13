// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Vending_Snack : Obj_Machinery_Vending {

		public string chef_compartment_access = "28";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.product_slogans = "Try our new nougat bar!;Twice the calories for half the price!";
			this.product_ads = "The healthiest!;Award-winning chocolate bars!;Mmm! So good!;Oh my god it's so juicy!;Have a snack.;Snacks are good for you!;Have some more Getmore!;Best quality snacks straight from mars.;We love chocolate!;Try our new jerky!";
			this.products = new ByTable()
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Candy), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks_DryRamen), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Chips), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Sosjerky), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_NoRaisin), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Spacetwinkie), 6 )
				.Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Cheesiehonkers), 6 )
			;
			this.contraband = new ByTable().Set( typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks_Syndicake), 6 );
			this.refill_canister = typeof(Obj_Item_Weapon_VendingRefill_Snack);
			this.icon_state = "snack";
		}

		public Obj_Machinery_Vending_Snack ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: vending.dm
		public void food_load( dynamic S = null ) {
			
			if ( Lang13.Bool( this.dish_quants[S.name] ) ) {
				this.dish_quants[S.name]++;
			} else {
				this.dish_quants[S.name] = 1;
			}
			GlobalFuncs.sortList( this.dish_quants );
			return;
		}

		// Function from file: vending.dm
		public bool iscompartmentfull( dynamic user = null ) {
			
			if ( this.contents.len >= 30 ) {
				user.WriteMsg( "<span class='warning'>" + this + "'s chef compartment is full.</span>" );
				return true;
			}
			return false;
		}

		// Function from file: vending.dm
		public bool junk_check( dynamic S = null ) {
			
			if ( S.junkiness != 0 ) {
				return false;
			}
			return true;
		}

		// Function from file: vending.dm
		public bool compartment_access_check( dynamic user = null ) {
			this.req_access_txt = this.chef_compartment_access;

			if ( !this.allowed( user ) && !Lang13.Bool( this.emagged ) && this.scan_id ) {
				user.WriteMsg( "<span class='warning'>" + this + "'s chef compartment blinks red: Access denied.</span>" );
				this.req_access_txt = "0";
				return false;
			}
			this.req_access_txt = "0";
			return true;
		}

		// Function from file: vending.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic T = null;
			int loaded = 0;
			int denied_items = 0;
			Obj_Item_Weapon_ReagentContainers_Food_Snacks S = null;

			
			if ( A is Obj_Item_Weapon_ReagentContainers_Food_Snacks ) {
				
				if ( !this.compartment_access_check( user ) ) {
					return null;
				}

				if ( this.junk_check( A ) ) {
					
					if ( !this.iscompartmentfull( user ) ) {
						
						if ( !Lang13.Bool( user.drop_item() ) ) {
							return null;
						}
						A.loc = this;
						this.food_load( A );
						user.WriteMsg( "<span class='notice'>You insert " + A + " into " + this + "'s chef compartment.</span>" );
					}
				} else {
					user.WriteMsg( "<span class='notice'>" + this + "'s chef compartment does not accept junk food.</span>" );
				}
				return null;
			}

			if ( A is Obj_Item_Weapon_Storage_Bag_Tray ) {
				
				if ( !this.compartment_access_check( user ) ) {
					return null;
				}
				T = A;
				loaded = 0;
				denied_items = 0;

				foreach (dynamic _a in Lang13.Enumerate( T.contents, typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks) )) {
					S = _a;
					

					if ( this.iscompartmentfull( user ) ) {
						break;
					}

					if ( this.junk_check( S ) ) {
						((Obj_Item_Weapon_Storage)T).remove_from_storage( S, this );
						this.food_load( S );
						loaded++;
					} else {
						denied_items++;
					}
				}

				if ( denied_items != 0 ) {
					user.WriteMsg( "<span class='notice'>" + this + " refuses some items.</span>" );
				}

				if ( loaded != 0 ) {
					user.WriteMsg( "<span class='notice'>You insert " + loaded + " dishes into " + this + "'s chef compartment.</span>" );
				}
				this.updateUsrDialog();
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: vending.dm
		public override dynamic Destroy(  ) {
			Obj_Item_Weapon_ReagentContainers_Food_Snacks S = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj_Item_Weapon_ReagentContainers_Food_Snacks) )) {
				S = _a;
				
				S.loc = GlobalFuncs.get_turf( this );
			}
			GlobalFuncs.qdel( this.wires );
			this.wires = null;
			return base.Destroy();
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_MechaParts_MechaEquipment_AnticcwArmorBooster : Obj_Item_MechaParts_MechaEquipment {

		public double deflect_coeff = 1.41;
		public double damage_coeff = 0.8;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.origin_tech = "materials=3";
			this.equip_cooldown = 10;
			this.energy_drain = 50;
			this.range = 0;
			this.icon_state = "mecha_abooster_ccw";
		}

		public Obj_Item_MechaParts_MechaEquipment_AnticcwArmorBooster ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: tools.dm
		public void dynattackby( Obj W = null, Ent_Static user = null ) {
			
			if ( !this.action_checks( user ) ) {
				this.chassis.dynattackby( W, user ); return;
			}
			this.chassis.log_message( "Attacked by " + W + ". Attacker - " + user );

			if ( Rand13.PercentChance( Convert.ToInt32( this.chassis.deflect_chance * this.deflect_coeff ) ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>The " + W + " bounces off " + this.chassis + " armor.</span>" );
				this.chassis.log_append_to_last( "Armor saved." );
			} else {
				this.chassis.occupant_message( "<font color='red'><b>" + user + " hits " + this.chassis + " with " + W + ".</b></font>" );
				user.visible_message( "<font color='red'><b>" + user + " hits " + this.chassis + " with " + W + ".</b></font>", "<font color='red'><b>You hit " + this + " with " + W + ".</b></font>" );
				this.chassis.take_damage( Num13.Floor( Convert.ToDouble( W.force * this.damage_coeff ) ), W.damtype );
				this.chassis.check_for_internal_damage( new ByTable(new object [] { 2, 8, 16 }) );
			}
			this.set_ready_state( false );
			this.chassis.use_power( this.energy_drain );
			this.do_after_cooldown();
			return;
		}

		// Function from file: tools.dm
		public override string get_equip_info(  ) {
			
			if ( !( this.chassis != null ) ) {
				return null;
			}
			return "<span style=\"color:" + ( this.equip_ready ? "#0f0" : "#f00" ) + ";\">*</span>&nbsp;" + this.name;
		}

		// Function from file: tools.dm
		public override void detach( dynamic moveto = null ) {
			this.chassis.proc_res["dynattackby"] = null;
			base.detach( (object)(moveto) );
			return;
		}

		// Function from file: tools.dm
		public override void attach( Obj_Mecha M = null ) {
			base.attach( M );
			this.chassis.proc_res["dynattackby"] = this;
			return;
		}

		// Function from file: tools.dm
		public override bool can_attach( Obj_Mecha M = null ) {
			
			if ( base.can_attach( M ) ) {
				
				if ( !( M is Obj_Mecha_Combat_Honker ) ) {
					
					if ( !Lang13.Bool( M.proc_res["dynattackby"] ) ) {
						return true;
					}
				}
			}
			return false;
		}

	}

}
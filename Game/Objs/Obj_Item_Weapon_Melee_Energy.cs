// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Melee_Energy : Obj_Item_Weapon_Melee {

		public bool active = false;
		public int force_on = 30;
		public int throwforce_on = 20;
		public string icon_state_on = "axe1";
		public ByTable attack_verb_on = new ByTable(new object [] { "attacked", "slashed", "stabbed", "sliced", "torn", "ripped", "diced", "cut" });
		public int w_class_on = 4;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.heat = 3500;
		}

		public Obj_Item_Weapon_Melee_Energy ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: energy.dm
		public override int is_hot(  ) {
			return ( this.active ?1:0) * this.heat;
		}

		// Function from file: energy.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( Lang13.Bool( user.disabilities & 256 ) && Rand13.PercentChance( 50 ) ) {
				user.WriteMsg( "<span class='warning'>You accidentally cut yourself with " + this + ", like a doofus!</span>" );
				((Mob_Living)user).take_organ_damage( 5, 5 );
			}
			this.active = !this.active;

			if ( this.active ) {
				this.force = this.force_on;
				this.throwforce = this.throwforce_on;
				this.hitsound = "sound/weapons/blade1.ogg";
				this.throw_speed = 4;

				if ( this.attack_verb_on.len != 0 ) {
					this.attack_verb = this.attack_verb_on;
				}

				if ( !Lang13.Bool( this.item_color ) ) {
					this.icon_state = this.icon_state_on;
				} else {
					this.icon_state = "sword" + this.item_color;
				}
				this.w_class = this.w_class_on;
				GlobalFuncs.playsound( user, "sound/weapons/saberon.ogg", 35, 1 );
				user.WriteMsg( "<span class='notice'>" + this + " is now active.</span>" );
			} else {
				this.force = Lang13.Initial( this, "force" );
				this.throwforce = Lang13.Initial( this, "throwforce" );
				this.hitsound = Lang13.Initial( this, "hitsound" );
				this.throw_speed = Lang13.Initial( this, "throw_speed" );

				if ( this.attack_verb_on.len != 0 ) {
					this.attack_verb = new ByTable();
				}
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.w_class = Lang13.Initial( this, "w_class" );
				GlobalFuncs.playsound( user, "sound/weapons/saberoff.ogg", 35, 1 );
				user.WriteMsg( "<span class='notice'>" + this + " can now be concealed.</span>" );
			}
			this.add_fingerprint( user );
			return null;
		}

		// Function from file: energy.dm
		public override int is_sharp(  ) {
			return ( this.active ?1:0) * this.sharpness;
		}

		// Function from file: energy.dm
		public override bool rejects_blood(  ) {
			return true;
		}

		// Function from file: energy.dm
		public override int suicide_act( Mob_Living_Carbon_Human user = null ) {
			user.visible_message( Rand13.Pick(new object [] { new Txt( "<span class='suicide'>" ).item( user ).str( " is slitting " ).his_her_its_their().str( " stomach open with the " ).item( this.name ).str( "! It looks like " ).he_she_it_they().str( "'s trying to commit seppuku.</span>" ).ToString(), new Txt( "<span class='suicide'>" ).item( user ).str( " is falling on the " ).item( this.name ).str( "! It looks like " ).he_she_it_they().str( "'s trying to commit suicide.</span>" ).ToString() }) );
			return 3;
		}

	}

}
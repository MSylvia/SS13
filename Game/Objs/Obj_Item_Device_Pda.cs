// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Pda : Obj_Item_Device {

		public dynamic owner = null;
		public dynamic default_cartridge = 0;
		public dynamic cartridge = null;
		public double? mode = 0;
		public string icon_alert = "pda-r";
		public int scanmode = 0;
		public bool fon = false;
		public double f_lum = 3;
		public bool silent = false;
		public bool toff = false;
		public dynamic tnote = null;
		public dynamic last_text = null;
		public int last_noise = 0;
		public dynamic ttone = "beep";
		public string lock_code = "";
		public int honkamt = 0;
		public bool mimeamt = false;
		public dynamic note = "Congratulations, your station has chosen the Thinktronic 5230 Personal Data Assistant!";
		public dynamic notehtml = "";
		public bool notescanned = false;
		public string cart = "";
		public bool detonate = true;
		public bool hidden = false;
		public int emped = 0;
		public dynamic id = null;
		public dynamic ownjob = null;
		public dynamic pai = null;
		public dynamic photo = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.w_class = 1;
			this.slot_flags = 768;
			this.origin_tech = "programming=2";
			this.icon = "icons/obj/pda.dmi";
			this.icon_state = "pda";
		}

		// Function from file: PDA.dm
		public Obj_Item_Device_Pda ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.fon ) {
				
				if ( !( this.loc is Tile ) ) {
					this.loc.AddLuminosity( this.f_lum );
					this.SetLuminosity( 0 );
				} else {
					this.SetLuminosity( this.f_lum );
				}
			}
			GlobalVars.PDAs.Add( this );

			if ( Lang13.Bool( this.default_cartridge ) ) {
				this.cartridge = Lang13.Call( this.default_cartridge, this );
			}
			new Obj_Item_Weapon_Pen( this );
			return;
		}

		// Function from file: PDA.dm
		public override double emp_act( int severity = 0 ) {
			Ent_Static A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Ent_Static) )) {
				A = _a;
				
				A.emp_act( severity );
			}
			this.emped += 1;
			Task13.Schedule( severity * 200, (Task13.Closure)(() => {
				this.emped -= 1;
				return;
			}));
			return 0;
		}

		// Function from file: PDA.dm
		public override dynamic Destroy(  ) {
			GlobalVars.PDAs.Remove( this );
			return base.Destroy();
		}

		// Function from file: PDA.dm
		public override bool afterattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, string click_parameters = null ) {
			int reagents_length = 0;
			dynamic re = null;
			dynamic T = null;
			dynamic T2 = null;
			dynamic T3 = null;
			dynamic T4 = null;
			dynamic T5 = null;

			
			if ( !( proximity_flag == true ) ) {
				return false;
			}

			switch ((int)( this.scanmode )) {
				case 3:
					
					if ( !( target.reagents == null ) ) {
						
						if ( target.reagents.reagent_list.len > 0 ) {
							reagents_length = target.reagents.reagent_list.len;
							user.WriteMsg( "<span class='notice'>" + reagents_length + " chemical agent" + ( reagents_length > 1 ? "s" : "" ) + " found.</span>" );

							foreach (dynamic _a in Lang13.Enumerate( target.reagents.reagent_list )) {
								re = _a;
								
								user.WriteMsg( "<span class='notice'>	 " + re + "</span>" );
							}
						} else {
							user.WriteMsg( "<span class='notice'>No active chemical agents found in " + target + ".</span>" );
						}
					} else {
						user.WriteMsg( "<span class='notice'>No significant chemical agents found in " + target + ".</span>" );
					}
					break;
				case 5:
					
					if ( target is Obj_Item_Weapon_Tank ) {
						T = target;
						this.atmosanalyzer_scan( T.air_contents, user, T );
					} else if ( target is Obj_Machinery_PortableAtmospherics ) {
						T2 = target;
						this.atmosanalyzer_scan( T2.air_contents, user, T2 );
					} else if ( target is Obj_Machinery_Atmospherics_Pipe ) {
						T3 = target;
						this.atmosanalyzer_scan( T3.parent.air, user, T3 );
					} else if ( target is Obj_Machinery_Power_RadCollector ) {
						T4 = target;

						if ( Lang13.Bool( T4.P ) ) {
							this.atmosanalyzer_scan( T4.P.air_contents, user, T4 );
						}
					} else if ( target is Obj_Item_Weapon_Flamethrower ) {
						T5 = target;

						if ( Lang13.Bool( T5.ptank ) ) {
							this.atmosanalyzer_scan( T5.ptank.air_contents, user, T5 );
						}
					}
					break;
			}

			if ( !( this.scanmode != 0 ) && target is Obj_Item_Weapon_Paper && Lang13.Bool( this.owner ) ) {
				
				if ( !Lang13.Bool( target.info ) ) {
					user.WriteMsg( "<span class='warning'>Unable to scan! Paper is blank.</span>" );
					return false;
				}
				this.notehtml = target.info;
				this.note = GlobalFuncs.replacetext( this.notehtml, "<BR>", "[br]" );
				this.note = GlobalFuncs.replacetext( this.note, "<li>", "[*]" );
				this.note = GlobalFuncs.replacetext( this.note, "<ul>", "[list]" );
				this.note = GlobalFuncs.replacetext( this.note, "</ul>", "[/list]" );
				this.note = String13.HtmlEncode( this.note );
				this.notescanned = true;
				user.WriteMsg( "<span class='notice'>Paper scanned. Saved to PDA's notekeeper.</span>" );
			}
			return false;
		}

		// Function from file: PDA.dm
		public override bool attack( dynamic M = null, dynamic user = null, bool? def_zone = null ) {
			
			if ( M is Mob_Living_Carbon ) {
				
				switch ((int)( this.scanmode )) {
					case 1:
						((Ent_Static)M).visible_message( "<span class='alert'>" + user + " has analyzed " + M + "'s vitals!</span>" );
						GlobalFuncs.healthscan( user, M, true );
						this.add_fingerprint( user );
						break;
					case 2:
						
						break;
					case 4:
						((Ent_Static)M).visible_message( "<span class='warning'>" + user + " has analyzed " + M + "'s radiation levels!</span>" );
						user.show_message( "<span class='notice'>Analyzing Results for " + M + ":</span>" );

						if ( M.radiation != 0 ) {
							user.show_message( new Txt().green().str( "Radiation Level:" ).black().str( " " ).item( M.radiation ).ToString() );
						} else {
							user.show_message( "<span class='notice'>No radiation detected.</span>" );
						}
						break;
				}
			}
			return false;
		}

		// Function from file: PDA.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic idcard = null;
			dynamic O = null;
			dynamic P = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Cartridge && !Lang13.Bool( this.cartridge ) ) {
				this.cartridge = A;

				if ( !((Mob)user).unEquip( A ) ) {
					return null;
				}
				this.cartridge.loc = this;
				user.WriteMsg( "<span class='notice'>You insert " + this.cartridge + " into " + this + ".</span>" );

				if ( Lang13.Bool( this.cartridge.radio ) ) {
					this.cartridge.radio.hostpda = this;
				}
			} else if ( A is Obj_Item_Weapon_Card_Id ) {
				idcard = A;

				if ( !Lang13.Bool( idcard.registered_name ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>" ).The( this ).item().str( " rejects the ID!</span>" ).ToString() );
					return null;
				}

				if ( !Lang13.Bool( this.owner ) ) {
					this.owner = idcard.registered_name;
					this.ownjob = idcard.assignment;
					this.update_label();
					user.WriteMsg( "<span class='notice'>Card scanned.</span>" );
				} else {
					
					if ( user.contents.Contains( this ) && user.contents.Contains( A ) || this.loc is Tile && Map13.GetDistance( this, user ) <= 1 && user.contents.Contains( A ) ) {
						
						if ( !this.id_check( user, 2 ) ) {
							return null;
						}
						user.WriteMsg( new Txt( "<span class='notice'>You put the ID into " ).the( this ).item().str( "'s slot.</span>" ).ToString() );
						this.updateSelfDialog();
					}
					return null;
				}
				this.updateSelfDialog();
			} else if ( A is Obj_Item_Device_Paicard && !Lang13.Bool( this.pai ) ) {
				
				if ( !((Mob)user).unEquip( A ) ) {
					return null;
				}
				A.loc = this;
				this.pai = A;
				user.WriteMsg( new Txt( "<span class='notice'>You slot " ).the( A ).item().str( " into " ).item( this ).str( ".</span>" ).ToString() );
				this.updateUsrDialog();
			} else if ( A is Obj_Item_Weapon_Pen ) {
				O = Lang13.FindIn( typeof(Obj_Item_Weapon_Pen), this );

				if ( Lang13.Bool( O ) ) {
					user.WriteMsg( new Txt( "<span class='warning'>There is already a pen in " ).the( this ).item().str( "!</span>" ).ToString() );
				} else {
					
					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					A.loc = this;
					user.WriteMsg( new Txt( "<span class='notice'>You slide " ).the( A ).item().str( " into " ).the( this ).item().str( ".</span>" ).ToString() );
				}
			} else if ( A is Obj_Item_Weapon_Photo ) {
				P = A;
				this.photo = P.img;
				user.WriteMsg( new Txt( "<span class='notice'>You scan " ).the( A ).item().str( ".</span>" ).ToString() );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override bool AltClick( Mob user = null ) {
			base.AltClick( user );

			if ( Task13.User is Mob_Living_Silicon ) {
				return false;
			}

			if ( Task13.User.canUseTopic( this ) ) {
				
				if ( Lang13.Bool( this.id ) ) {
					this.remove_id();
				} else {
					Task13.User.WriteMsg( "<span class='warning'>This PDA does not have an ID in it!</span>" );
				}
			}
			return false;
		}

		// Function from file: PDA.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hsrc = null ) {
			Mob U = null;
			Ent_Static T = null;
			string n = null;
			dynamic t = null;
			dynamic P = null;
			dynamic P2 = null;
			dynamic P3 = null;
			Obj_Machinery_Door_Poddoor M = null;
			dynamic P4 = null;
			int difficulty = 0;
			dynamic T2 = null;

			base.Topic( href, href_list, (object)(hsrc) );
			U = Task13.User;

			if ( Task13.User.canUseTopic( this ) ) {
				this.add_fingerprint( U );
				U.set_machine( this );

				dynamic _c = href_list["choice"]; // Was a switch-case, sorry for the mess.
				if ( _c=="Close" ) {
					U.unset_machine();
					Interface13.Browse( U, null, "window=pda" );
					return null;
				} else if ( _c=="Refresh" ) {
					
				} else if ( _c=="Return" ) {
					
					if ( ( this.mode ??0) <= 9 ) {
						this.mode = 0;
					} else {
						this.mode = Num13.Floor( ( this.mode ??0) / 10 );

						if ( this.mode == 4 || this.mode == 5 ) {
							this.mode = 0;
						} else if ( ( this.mode ??0) >= 40 && ( this.mode ??0) <= 59 ) {
							this.cartridge.mode = this.mode;
							this.cartridge.unlock();
						}
					}
				} else if ( _c=="Authenticate" ) {
					this.id_check( U, 1 );
				} else if ( _c=="UpdateInfo" ) {
					this.ownjob = this.id.assignment;
					this.update_label();
				} else if ( _c=="Eject" ) {
					
					if ( !( this.cartridge == null ) ) {
						T = this.loc;

						if ( T is Mob ) {
							T = T.loc;
						}
						this.cartridge.loc = T;
						this.scanmode = 0;

						if ( Lang13.Bool( this.cartridge.radio ) ) {
							this.cartridge.radio.hostpda = null;
						}
						this.cartridge = null;
					}
				} else if ( _c=="0" ) {
					this.mode = 0;
				} else if ( _c=="1" ) {
					this.mode = 1;
				} else if ( _c=="2" ) {
					this.mode = 2;
				} else if ( _c=="21" ) {
					this.mode = 21;
				} else if ( _c=="3" ) {
					this.mode = 3;
				} else if ( _c=="4" ) {
					this.mode = 0;
				} else if ( _c=="Light" ) {
					
					if ( this.fon ) {
						this.fon = false;

						if ( U.contents.Contains( this ) ) {
							U.AddLuminosity( -this.f_lum );
						} else {
							this.SetLuminosity( 0 );
						}
					} else {
						this.fon = true;

						if ( U.contents.Contains( this ) ) {
							U.AddLuminosity( this.f_lum );
						} else {
							this.SetLuminosity( this.f_lum );
						}
					}
				} else if ( _c=="Medical Scan" ) {
					
					if ( this.scanmode == 1 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_medical ) {
						this.scanmode = 1;
					}
				} else if ( _c=="Reagent Scan" ) {
					
					if ( this.scanmode == 3 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_reagent_scanner ) {
						this.scanmode = 3;
					}
				} else if ( _c=="Halogen Counter" ) {
					
					if ( this.scanmode == 4 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_engine ) {
						this.scanmode = 4;
					}
				} else if ( _c=="Honk" ) {
					
					if ( !( this.last_noise != 0 && Game13.time < this.last_noise + 20 ) ) {
						GlobalFuncs.playsound( this.loc, "sound/items/bikehorn.ogg", 50, 1 );
						this.last_noise = Game13.time;
					}
				} else if ( _c=="Trombone" ) {
					
					if ( !( this.last_noise != 0 && Game13.time < this.last_noise + 20 ) ) {
						GlobalFuncs.playsound( this.loc, "sound/misc/sadtrombone.ogg", 50, 1 );
						this.last_noise = Game13.time;
					}
				} else if ( _c=="Gas Scan" ) {
					
					if ( this.scanmode == 5 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_atmos ) {
						this.scanmode = 5;
					}
				} else if ( _c=="Edit" ) {
					n = GlobalFuncs.stripped_multiline_input( U, "Please enter message", this.name, this.note );

					if ( Map13.GetDistance( this, U ) <= 1 && this.loc == U ) {
						
						if ( this.mode == 1 && Lang13.Bool( n ) ) {
							this.note = n;
							this.notehtml = GlobalFuncs.parsepencode( n, U, "Times New Roman" );
							this.notescanned = false;
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _c=="Toggle Messenger" ) {
					this.toff = !this.toff;
				} else if ( _c=="Toggle Ringer" ) {
					this.silent = !this.silent;
				} else if ( _c=="Clear" ) {
					this.tnote = null;
				} else if ( _c=="Ringtone" ) {
					t = Interface13.Input( U, "Please enter new ringtone", this.name, this.ttone, null, InputType.Str );

					if ( Map13.GetDistance( this, U ) <= 1 && this.loc == U ) {
						
						if ( Lang13.Bool( t ) ) {
							
							if ( this.hidden_uplink != null && GlobalFuncs.trim( String13.ToLower( t ) ) == GlobalFuncs.trim( String13.ToLower( this.lock_code ) ) ) {
								this.hidden_uplink.interact( U );
								U.WriteMsg( "The PDA softly beeps." );
								Interface13.Browse( U, null, "window=pda" );
								this.mode = 0;
							} else {
								t = String13.SubStr( GlobalFuncs.sanitize( t ), 1, 20 );
								this.ttone = t;
							}
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _c=="Message" ) {
					P = Lang13.FindObj( href_list["target"] );
					this.create_message( U, P );
				} else if ( _c=="MessageAll" ) {
					this.send_to_all( U );
				} else if ( _c=="Send Honk" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
						P2 = Lang13.FindObj( href_list["target"] );

						if ( !( P2 == null ) ) {
							
							if ( !P2.toff && this.cartridge.honk_charges > 0 ) {
								this.cartridge.honk_charges--;
								U.show_message( "<span class='notice'>Virus sent!</span>", 1 );
								P2.honkamt = Rand13.Int( 15, 20 );
							}
						} else {
							U.WriteMsg( "PDA not found." );
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _c=="Send Silence" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
						P3 = Lang13.FindObj( href_list["target"] );

						if ( !( P3 == null ) ) {
							
							if ( !P3.toff && this.cartridge.mime_charges > 0 ) {
								this.cartridge.mime_charges--;
								U.show_message( "<span class='notice'>Virus sent!</span>", 1 );
								P3.silent = 1;
								P3.ttone = "silence";
							}
						} else {
							U.WriteMsg( "PDA not found." );
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _c=="Toggle Door" ) {
					
					if ( Lang13.Bool( this.cartridge ) && this.cartridge.access_remote_door ) {
						
						foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_Door_Poddoor) )) {
							M = _a;
							

							if ( M.id == this.cartridge.remote_door_id ) {
								
								if ( M.density ) {
									M.open();
								} else {
									M.close();
								}
							}
						}
					}
				} else if ( _c=="Detonate" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate ) {
						P4 = Lang13.FindObj( href_list["target"] );

						if ( !( P4 == null ) ) {
							
							if ( !P4.toff && this.cartridge.shock_charges > 0 ) {
								this.cartridge.shock_charges--;
								difficulty = 0;

								if ( Lang13.Bool( P4.cartridge ) ) {
									difficulty += P4.cartridge.access_medical ?1:0;
									difficulty += P4.cartridge.access_security ?1:0;
									difficulty += P4.cartridge.access_engine ?1:0;
									difficulty += P4.cartridge.access_clown ?1:0;
									difficulty += P4.cartridge.access_janitor ?1:0;
									difficulty += ( P4.cartridge.access_manifest ?1:0) * 2;
								} else {
									difficulty += 2;
								}

								if ( Rand13.PercentChance( difficulty * 15 ) || P4.hidden_uplink != null ) {
									U.show_message( "<span class='danger'>An error flashes on your " + this + ".</span>", 1 );
								} else {
									U.show_message( "<span class='notice'>Success!</span>", 1 );
									P4.explode();
								}
							}
						} else {
							U.WriteMsg( "PDA not found." );
						}
					} else {
						U.unset_machine();
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _c=="pai" ) {
					
					dynamic _b = href_list["option"]; // Was a switch-case, sorry for the mess.
					if ( _b=="1" ) {
						((Obj_Item)this.pai).attack_self( U );
					} else if ( _b=="2" ) {
						T2 = GlobalFuncs.get_turf( this.loc );

						if ( Lang13.Bool( T2 ) ) {
							this.pai.loc = T2;
						}
					}
				} else {
					this.mode = String13.ParseNumber( href_list["choice"] );

					if ( Lang13.Bool( this.cartridge ) ) {
						this.cartridge.mode = this.mode;
						this.cartridge.unlock();
					}
				}
			} else {
				U.unset_machine();
				Interface13.Browse( U, null, "window=pda" );
				return null;
			}

			if ( this.mode == 2 || this.mode == 21 ) {
				this.overlays.Cut();
			}

			if ( this.honkamt > 0 && Rand13.PercentChance( 60 ) ) {
				this.honkamt--;
				GlobalFuncs.playsound( this.loc, "sound/items/bikehorn.ogg", 30, 1 );
			}

			if ( U.machine == this && href_list["skiprefresh"] != "1" ) {
				this.attack_self( U );
			} else {
				U.unset_machine();
				Interface13.Browse( U, null, "window=pda" );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic assets = null;
			string dat = null;
			int count = 0;
			Obj_Item_Device_Pda P = null;
			dynamic T = null;
			GasMixture environment = null;
			ByTable env_gases = null;
			double pressure = 0;
			double total_moles = 0;
			dynamic id = null;
			double gas_level = 0;

			assets = GlobalFuncs.get_asset_datum( typeof(Asset_Simple_Pda) );
			assets.send( user );
			((Mob)user).set_machine( this );

			if ( this.hidden_uplink != null && Lang13.Bool( this.hidden_uplink.active ) ) {
				this.hidden_uplink.interact( user );
				return null;
			}
			dat = "<html><head><title>Personal Data Assistant</title></head><body bgcolor=\"#808000\"><style>a, a:link, a:visited, a:active, a:hover { color: #000000; }img {border-style:none;}</style>";
			dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Close'><img src=pda_exit.png> Close</a>" ).ToString();

			if ( !( this.cartridge == null ) && this.mode == 0 ) {
				dat += new Txt( " | <a href='byond://?src=" ).Ref( this ).str( ";choice=Eject'><img src=pda_eject.png> Eject " ).item( this.cartridge ).str( "</a>" ).ToString();
			}

			if ( Lang13.Bool( this.mode ) ) {
				dat += new Txt( " | <a href='byond://?src=" ).Ref( this ).str( ";choice=Return'><img src=pda_menu.png> Return</a>" ).ToString();
			}
			dat += new Txt( " | <a href='byond://?src=" ).Ref( this ).str( ";choice=Refresh'><img src=pda_refresh.png> Refresh</a>" ).ToString();
			dat += "<br>";

			if ( !Lang13.Bool( this.owner ) ) {
				dat += "Warning: No owner information entered.  Please swipe card.<br><br>";
				dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Refresh'><img src=pda_refresh.png> Retry</a>" ).ToString();
			} else {
				
				switch ((int?)( this.mode )) {
					case 0:
						dat += "<h2>PERSONAL DATA ASSISTANT v.1.2</h2>";
						dat += "Owner: " + this.owner + ", " + this.ownjob + "<br>";
						dat += new Txt( "ID: <A href='?src=" ).Ref( this ).str( ";choice=Authenticate'>" ).item( ( Lang13.Bool( this.id ) ? "" + this.id.registered_name + ", " + this.id.assignment : "----------" ) ).ToString();
						dat += new Txt( "<br><A href='?src=" ).Ref( this ).str( ";choice=UpdateInfo'>" ).item( ( Lang13.Bool( this.id ) ? "Update PDA Info" : "" ) ).str( "</A><br><br>" ).ToString();
						dat += "" + GlobalFuncs.worldtime2text() + "<br>";
						dat += "" + String13.FormatTime( Game13.realtime, "MMM DD" ) + " " + ( GlobalVars.year_integer + 540 );
						dat += "<br><br>";
						dat += "<h4>General Functions</h4>";
						dat += "<ul>";
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=1'><img src=pda_notes.png> Notekeeper</a></li>" ).ToString();
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=2'><img src=pda_mail.png> Messenger</a></li>" ).ToString();

						if ( Lang13.Bool( this.cartridge ) ) {
							
							if ( this.cartridge.access_clown ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Honk'><img src=pda_honk.png> Honk Synthesizer</a></li>" ).ToString();
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Trombone'><img src=pda_honk.png> Sad Trombone</a></li>" ).ToString();
							}

							if ( this.cartridge.access_manifest ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=41'><img src=pda_notes.png> View Crew Manifest</a></li>" ).ToString();
							}

							if ( this.cartridge.access_status_display ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=42'><img src=pda_status.png> Set Status Display</a></li>" ).ToString();
							}
							dat += "</ul>";

							if ( this.cartridge.access_engine ) {
								dat += "<h4>Engineering Functions</h4>";
								dat += "<ul>";
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=43'><img src=pda_power.png> Power Monitor</a></li>" ).ToString();
								dat += "</ul>";
							}

							if ( this.cartridge.access_medical ) {
								dat += "<h4>Medical Functions</h4>";
								dat += "<ul>";
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=44'><img src=pda_medical.png> Medical Records</a></li>" ).ToString();
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Medical Scan'><img src=pda_scanner.png> " ).item( ( this.scanmode == 1 ? "Disable" : "Enable" ) ).str( " Medical Scanner</a></li>" ).ToString();
								dat += "</ul>";
							}

							if ( this.cartridge.access_security ) {
								dat += "<h4>Security Functions</h4>";
								dat += "<ul>";
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=45'><img src=pda_cuffs.png> Security Records</A></li>" ).ToString();
								dat += "</ul>";
							}

							if ( this.cartridge.access_quartermaster ) {
								dat += "<h4>Quartermaster Functions:</h4>";
								dat += "<ul>";
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=47'><img src=pda_crate.png> Supply Records</A></li>" ).ToString();
								dat += "</ul>";
							}
						}
						dat += "</ul>";
						dat += "<h4>Utilities</h4>";
						dat += "<ul>";

						if ( Lang13.Bool( this.cartridge ) ) {
							
							if ( this.cartridge.bot_access_flags != 0 ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=54'><img src=pda_medbot.png> Bots Access</a></li>" ).ToString();
							}

							if ( this.cartridge.access_janitor ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=49'><img src=pda_bucket.png> Custodial Locator</a></li>" ).ToString();
							}

							if ( this.cartridge.radio is Obj_Item_Radio_Integrated_Signal ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=40'><img src=pda_signaler.png> Signaler System</a></li>" ).ToString();
							}

							if ( this.cartridge.access_newscaster ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=53'><img src=pda_notes.png> Newscaster Access </a></li>" ).ToString();
							}

							if ( this.cartridge.access_reagent_scanner ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Reagent Scan'><img src=pda_reagent.png> " ).item( ( this.scanmode == 3 ? "Disable" : "Enable" ) ).str( " Reagent Scanner</a></li>" ).ToString();
							}

							if ( this.cartridge.access_engine ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Halogen Counter'><img src=pda_reagent.png> " ).item( ( this.scanmode == 4 ? "Disable" : "Enable" ) ).str( " Halogen Counter</a></li>" ).ToString();
							}

							if ( this.cartridge.access_atmos ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Gas Scan'><img src=pda_reagent.png> " ).item( ( this.scanmode == 5 ? "Disable" : "Enable" ) ).str( " Gas Scanner</a></li>" ).ToString();
							}

							if ( this.cartridge.access_remote_door ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Door'><img src=pda_rdoor.png> Toggle Remote Door</a></li>" ).ToString();
							}
						}
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=3'><img src=pda_atmos.png> Atmospheric Scan</a></li>" ).ToString();
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Light'><img src=pda_flashlight.png> " ).item( ( this.fon ? "Disable" : "Enable" ) ).str( " Flashlight</a></li>" ).ToString();

						if ( Lang13.Bool( this.pai ) ) {
							
							if ( this.pai.loc != this ) {
								this.pai = null;
							} else {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=pai;option=1'>pAI Device Configuration</a></li>" ).ToString();
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=pai;option=2'>Eject pAI Device</a></li>" ).ToString();
							}
						}
						dat += "</ul>";
						break;
					case 1:
						dat += "<h4><img src=pda_notes.png> Notekeeper V2.2</h4>";
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Edit'>Edit</a><br>" ).ToString();

						if ( this.notescanned ) {
							dat += "(This is a scanned image, editing it may cause some text formatting to change.)<br>";
						}
						dat += "<HR><font face=\"" + "Verdana" + "\">" + ( !Lang13.Bool( this.notehtml ) ? this.note : this.notehtml ) + "</font>";
						break;
					case 2:
						dat += "<h4><img src=pda_mail.png> SpaceMessenger V3.9.6</h4>";
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Ringer'><img src=pda_bell.png> Ringer: " ).item( ( this.silent ? "Off" : "On" ) ).str( "</a> | " ).ToString();
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Messenger'><img src=pda_mail.png> Send / Receive: " ).item( ( this.toff ? "Off" : "On" ) ).str( "</a> | " ).ToString();
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Ringtone'><img src=pda_bell.png> Set Ringtone</a> | " ).ToString();
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=21'><img src=pda_mail.png> Messages</a><br>" ).ToString();

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate ) {
							dat += "<b>" + this.cartridge.shock_charges + " detonation charges left.</b><HR>";
						}

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
							dat += "<b>" + this.cartridge.honk_charges + " viral files left.</b><HR>";
						}

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
							dat += "<b>" + this.cartridge.mime_charges + " viral files left.</b><HR>";
						}
						dat += "<h4><img src=pda_menu.png> Detected PDAs</h4>";
						dat += "<ul>";
						count = 0;

						if ( !this.toff ) {
							
							foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.sortNames( GlobalFuncs.get_viewable_pdas() ), typeof(Obj_Item_Device_Pda) )) {
								P = _a;
								

								if ( P == this ) {
									continue;
								}
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Message;target=" ).Ref( P ).str( "'>" ).item( P ).str( "</a>" ).ToString();

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate && P.detonate ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Detonate;target=" ).Ref( P ).str( "'><img src=pda_boom.png>*Detonate*</a>)" ).ToString();
								}

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Send Honk;target=" ).Ref( P ).str( "'><img src=pda_honk.png>*Send Virus*</a>)" ).ToString();
								}

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Send Silence;target=" ).Ref( P ).str( "'>*Send Virus*</a>)" ).ToString();
								}
								dat += "</li>";
								count++;
							}
						}
						dat += "</ul>";

						if ( count == 0 ) {
							dat += "None detected.<br>";
						} else if ( Lang13.Bool( this.cartridge ) && this.cartridge.spam_enabled ) {
							dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=MessageAll'>Send To All</a>" ).ToString();
						}
						break;
					case 21:
						dat += "<h4><img src=pda_mail.png> SpaceMessenger V3.9.6</h4>";
						dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=Clear'><img src=pda_blank.png> Clear Messages</a>" ).ToString();
						dat += "<h4><img src=pda_mail.png> Messages</h4>";
						dat += this.tnote;
						dat += "<br>";
						break;
					case 3:
						dat += "<h4><img src=pda_atmos.png> Atmospheric Readings</h4>";
						T = GlobalFuncs.get_turf( user.loc );

						if ( T == null ) {
							dat += "Unable to obtain a reading.<br>";
						} else {
							environment = ((Ent_Static)T).return_air();
							env_gases = environment.gases;
							pressure = environment.return_pressure();
							total_moles = environment.total_moles();
							dat += "Air Pressure: " + Num13.Round( pressure, 0.1 ) + " kPa<br>";

							if ( total_moles != 0 ) {
								
								foreach (dynamic _b in Lang13.Enumerate( env_gases )) {
									id = _b;
									
									gas_level = Convert.ToDouble( env_gases[id][1] / total_moles );

									if ( Lang13.Bool( ((dynamic)( GlobalVars.hardcoded_gases != null || gas_level > 0.01 )).Contains( id ) ) ) {
										dat += "" + env_gases[id][3][2] + ": " + Num13.Floor( gas_level * 100 ) + "%<br>";
									}
								}
							}
							dat += "Temperature: " + Num13.Floor( Convert.ToDouble( environment.temperature - 273.41 ) ) + "&deg;C<br>";
						}
						dat += "<br>";
						break;
					default:
						dat += this.cart;
						break;
				}
			}
			dat += "</body></html>";
			Interface13.Browse( user, dat, "window=pda;size=400x444;border=1;can_resize=1;can_close=0;can_minimize=0" );
			GlobalFuncs.onclose( user, "pda", this );
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic MouseDrop( dynamic over = null, dynamic src_location = null, dynamic over_location = null, string src_control = null, dynamic over_control = null, string _params = null ) {
			Mob M = null;

			M = Task13.User;

			if ( !( over is Obj_Screen ) && Task13.User.canUseTopic( this ) ) {
				return this.attack_self( M );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic GetID(  ) {
			return this.id;
		}

		// Function from file: PDA.dm
		public override dynamic GetAccess(  ) {
			
			if ( Lang13.Bool( this.id ) ) {
				return ((Obj_Item)this.id).GetAccess();
			} else {
				return base.GetAccess();
			}
		}

		// Function from file: PDA.dm
		public void explode(  ) {
			dynamic T = null;
			Ent_Static M = null;

			
			if ( !this.detonate ) {
				return;
			}
			T = GlobalFuncs.get_turf( this.loc );

			if ( this.loc is Mob ) {
				M = this.loc;
				((dynamic)M).show_message( "<span class='danger'>Your " + this + " explodes!</span>", 1 );
			}

			if ( Lang13.Bool( T ) ) {
				((Tile)T).hotspot_expose( 700, 125 );
				GlobalFuncs.explosion( T, -1, -1, 2, 3 );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: PDA.dm
		public bool id_check( dynamic user = null, int choice = 0 ) {
			dynamic I = null;
			dynamic I2 = null;
			dynamic old_id = null;

			
			if ( choice == 1 ) {
				
				if ( Lang13.Bool( this.id ) ) {
					this.remove_id();
				} else {
					I = ((Mob)user).get_active_hand();

					if ( I is Obj_Item_Weapon_Card_Id ) {
						
						if ( !((Mob)user).unEquip( I ) ) {
							return false;
						}
						I.loc = this;
						this.id = I;
					}
				}
			} else {
				I2 = ((Mob)user).get_active_hand();

				if ( I2 is Obj_Item_Weapon_Card_Id && Lang13.Bool( I2.registered_name ) ) {
					
					if ( !((Mob)user).unEquip( I2 ) ) {
						return false;
					}
					old_id = this.id;
					I2.loc = this;
					this.id = I2;
					((Mob)user).put_in_hands( old_id );
				}
			}
			return true;
		}

		// Function from file: PDA.dm
		public void create_message( Mob U = null, dynamic P = null ) {
			U = U ?? Task13.User;

			this.send_message( U, new ByTable(new object [] { P }) );
			return;
		}

		// Function from file: PDA.dm
		public void send_to_all( Mob U = null ) {
			U = U ?? Task13.User;

			this.send_message( U, GlobalFuncs.get_viewable_pdas() );
			return;
		}

		// Function from file: PDA.dm
		public Obj_Machinery_MessageServer can_send( Obj_Item_Device_Pda P = null ) {
			Obj_Machinery_MessageServer useMS = null;
			Obj_Machinery_MessageServer MS = null;
			Signal signal = null;
			int useTC = 0;
			dynamic pos = null;

			
			if ( !( P != null ) || Lang13.Bool( GlobalFuncs.qdeleted( P ) ) || P.toff ) {
				return null;
			}
			useMS = null;

			if ( GlobalVars.message_servers != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.message_servers, typeof(Obj_Machinery_MessageServer) )) {
					MS = _a;
					

					if ( MS.active ) {
						useMS = MS;
						break;
					}
				}
			}
			signal = this.telecomms_process();

			if ( !( P != null ) || Lang13.Bool( GlobalFuncs.qdeleted( P ) ) || P.toff ) {
				return null;
			}
			useTC = 0;

			if ( signal != null ) {
				
				if ( Lang13.Bool( signal.data["done"] ) ) {
					useTC = 1;
					pos = GlobalFuncs.get_turf( P );

					if ( Lang13.Bool( signal.data["level"].Contains( pos.z ) ) ) {
						useTC = 2;
					}
				}
			}

			if ( useTC == 2 ) {
				return useMS;
			} else {
				return null;
			}
		}

		// Function from file: PDA.dm
		public void show_to_ghosts( Mob user = null, DataPdaMsg msg = null, bool? multiple = null ) {
			multiple = multiple ?? false;

			dynamic M = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.player_list )) {
				M = _a;
				

				if ( M is Mob_Dead_Observer && Lang13.Bool( M.client ) && ( M.client.prefs.chat_toggles & 256 ) != 0 ) {
					M.WriteMsg( new Txt( "<a href='?src=" ).Ref( M ).str( ";follow=" ).Ref( user ).str( "'>(F)</a><span class='name'> " ).item( msg.sender ).str( " </span><span class='game say'>PDA Message</span> --> <span class='name'>" ).item( ( multiple == true ? "Everyone" : msg.recipient ) ).str( "</span>: <span class='message'>" ).item( msg.message ).item( msg.get_photo_ref() ).str( "</span></span>" ).ToString() );
				}
			}
			return;
		}

		// Function from file: PDA.dm
		public void show_recieved_message( DataPdaMsg msg = null, Obj_Item_Device_Pda source = null ) {
			dynamic L = null;

			this.tnote += new Txt( "<i><b>&larr; From <a href='byond://?src=" ).Ref( this ).str( ";choice=Message;target=" ).Ref( source ).str( "'>" ).item( source.owner ).str( "</a> (" ).item( source.ownjob ).str( "):</b></i><br>" ).item( msg.message ).item( msg.get_photo_ref() ).str( "<br>" ).ToString();

			if ( !this.silent ) {
				GlobalFuncs.playsound( this.loc, "sound/machines/twobeep.ogg", 50, 1 );
				this.audible_message( new Txt().icon( this ).str( " *" ).item( this.ttone ).str( "*" ).ToString(), null, 3 );
			}
			L = null;

			if ( this.loc != null && this.loc is Mob_Living ) {
				L = this.loc;
			} else {
				L = GlobalFuncs.get( this, typeof(Mob_Living_Silicon) );
			}

			if ( Lang13.Bool( L ) && Lang13.Bool( L.stat ) != true ) {
				L.WriteMsg( new Txt().icon( this ).str( " <b>Message from " ).item( source.owner ).str( " (" ).item( source.ownjob ).str( "), </b>\"" ).item( msg.message ).str( "\"" ).item( msg.get_photo_ref() ).str( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Message;skiprefresh=1;target=" ).Ref( source ).str( "'>Reply</a>)" ).ToString() );
			}
			this.overlays.Cut();
			this.overlays.Add( new Image( this.icon, this.icon_alert ) );
			return;
		}

		// Function from file: PDA.dm
		public void show_to_sender( DataPdaMsg msg = null, bool? multiple = null ) {
			multiple = multiple ?? false;

			this.tnote += "<i><b>&rarr; To " + ( multiple == true ? "Everyone" : msg.recipient ) + ":</b></i><br>" + msg.message + msg.get_photo_ref() + "<br>";
			return;
		}

		// Function from file: PDA.dm
		public void send_message( Mob user = null, ByTable targets = null ) {
			user = user ?? Task13.User;

			string message = null;
			bool multiple = false;
			DataPdaMsg last_sucessful_msg = null;
			Obj_Item_Device_Pda P = null;
			Obj_Machinery_MessageServer MS = null;
			DataPdaMsg msg = null;

			message = this.msg_input( user );

			if ( !Lang13.Bool( message ) || !( targets.len != 0 ) ) {
				return;
			}

			if ( Lang13.Bool( this.last_text ) && Game13.time < Convert.ToDouble( this.last_text + 5 ) ) {
				return;
			}
			multiple = targets.len > 1;

			foreach (dynamic _a in Lang13.Enumerate( targets, typeof(Obj_Item_Device_Pda) )) {
				P = _a;
				

				if ( P == this ) {
					continue;
				}
				MS = null;
				MS = this.can_send( P );

				if ( MS != null ) {
					msg = MS.send_pda_message( "" + P.owner, "" + this.owner, "" + message, this.photo );

					if ( msg != null ) {
						last_sucessful_msg = msg;
					}

					if ( !multiple ) {
						this.show_to_sender( msg );
					}
					P.show_recieved_message( msg, this );

					if ( !multiple ) {
						this.show_to_ghosts( user, msg );
						GlobalFuncs.log_pda( "" + user + " (PDA: " + this.name + ") sent \"" + message + "\" to " + P.name );
					}
				} else if ( !multiple ) {
					user.WriteMsg( "<span class='notice'>ERROR: Server isn't responding.</span>" );
					return;
				}
			}
			this.photo = null;

			if ( multiple ) {
				this.show_to_sender( last_sucessful_msg, true );
				this.show_to_ghosts( user, last_sucessful_msg, true );
				GlobalFuncs.log_pda( "" + user + " (PDA: " + this.name + ") sent \"" + message + "\" to Everyone" );
			}
			return;
		}

		// Function from file: PDA.dm
		public string msg_input( Mob U = null ) {
			U = U ?? Task13.User;

			string t = null;

			t = GlobalFuncs.stripped_input( U, "Please enter message", this.name, null, 1024 );

			if ( !Lang13.Bool( t ) || this.toff ) {
				return null;
			}

			if ( !( Map13.GetDistance( this, U ) <= 1 ) && this.loc != U ) {
				return null;
			}

			if ( !U.canUseTopic( this ) ) {
				return null;
			}

			if ( this.emped != 0 ) {
				t = GlobalFuncs.Gibberish( t, 100 );
			}
			return t;
		}

		// Function from file: PDA.dm
		public void remove_id(  ) {
			Ent_Static M = null;

			
			if ( Lang13.Bool( this.id ) ) {
				
				if ( this.loc is Mob ) {
					M = this.loc;
					((dynamic)M).put_in_hands( this.id );
					Task13.User.WriteMsg( "<span class='notice'>You remove the ID from the " + this.name + ".</span>" );
				} else {
					this.id.loc = GlobalFuncs.get_turf( this );
				}
				this.id = null;
			}
			return;
		}

		// Function from file: PDA.dm
		public void update_label(  ) {
			this.name = "PDA-" + this.owner + " (" + this.ownjob + ")";
			return;
		}

		// Function from file: PDA.dm
		public override bool dropped( dynamic user = null ) {
			
			if ( this.fon ) {
				((Ent_Static)user).AddLuminosity( -this.f_lum );
				this.SetLuminosity( this.f_lum );
			}
			return false;
		}

		// Function from file: PDA.dm
		public override bool pickup( dynamic user = null ) {
			
			if ( this.fon ) {
				this.SetLuminosity( 0 );
				((Ent_Static)user).AddLuminosity( this.f_lum );
			}
			return false;
		}

		// Function from file: PDA.dm
		[Verb]
		[VerbInfo( name: "Remove Pen", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void verb_remove_pen(  ) {
			dynamic O = null;
			Ent_Static M = null;

			
			if ( Task13.User is Mob_Living_Silicon ) {
				return;
			}

			if ( Task13.User.canUseTopic( this ) ) {
				O = Lang13.FindIn( typeof(Obj_Item_Weapon_Pen), this );

				if ( Lang13.Bool( O ) ) {
					
					if ( this.loc is Mob ) {
						M = this.loc;

						if ( ((Mob)M).get_active_hand() == null ) {
							((dynamic)M).put_in_hands( O );
							Task13.User.WriteMsg( new Txt( "<span class='notice'>You remove " ).the( O ).item().str( " from " ).the( this ).item().str( ".</span>" ).ToString() );
							return;
						}
					}
					O.loc = GlobalFuncs.get_turf( this );
				} else {
					Task13.User.WriteMsg( "<span class='warning'>This PDA does not have a pen in it!</span>" );
				}
			}
			return;
		}

		// Function from file: PDA.dm
		[Verb]
		[VerbInfo( name: "Eject ID", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void verb_remove_id(  ) {
			
			if ( Task13.User is Mob_Living_Silicon ) {
				return;
			}

			if ( Task13.User.canUseTopic( this ) ) {
				
				if ( Lang13.Bool( this.id ) ) {
					this.remove_id();
				} else {
					Task13.User.WriteMsg( "<span class='warning'>This PDA does not have an ID in it!</span>" );
				}
			}
			return;
		}

	}

}
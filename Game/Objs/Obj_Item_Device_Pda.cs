// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Pda : Obj_Item_Device {

		public dynamic owner = null;
		public dynamic default_cartridge = 0;
		public dynamic cartridge = null;
		public double? mode = 0;
		public int scanmode = 0;
		public bool fon = false;
		public int f_lum = 2;
		public bool silent = false;
		public bool toff = false;
		public dynamic tnote = null;
		public int last_text = 0;
		public int last_honk = 0;
		public dynamic ttone = "beep";
		public string lock_code = "";
		public int honkamt = 0;
		public bool mimeamt = false;
		public string note = "Congratulations, your station has chosen the Thinktronic 5230 Personal Data Assistant!";
		public dynamic notehtml = "";
		public string cart = "";
		public bool detonate = true;
		public bool hidden = false;
		public dynamic id = null;
		public dynamic ownjob = null;
		public dynamic pai = null;
		public Obj_Item_Device_Analyzer atmos_analys = new Obj_Item_Device_Analyzer();
		public Obj_Item_Device_DeviceAnalyser dev_analys = null;
		public bool MM = false;
		public bool DD = false;
		public ByTable applications = new ByTable();
		public ByTable incoming_transactions = new ByTable();
		public ByTable currentevents1 = new ByTable(new object [] { 
											"The Prime Minister of Space Australia has announced today a new policy to hand out fake dollar bills to the poor.", 
											"The President of Space America issued a press release today stating that he is not in fact, a Tajaran in disguise.", 
											"The Prime Minister of Space England is in hot water today after he announced that space tea would now be made with 20% more nuclear waste.", 
											"The Czar of the Space Soviet Union has issued a press release stating 'Spess Amerikans suck cocks!' we're working on a translation.", 
											"Space Israel has not gotten into trouble for bombing dirty Space Palestine again today. Don't be so anti-semitic.", 
											"Our sources tell us that the Earth country Poland has issued a press release stating that 'they didn't want to go to space anyway' and that 'space sucks'. More at eleven.", 
											"Sources are saying that the Earth country Poland has issued another press release saying they were sorry and would very much like to be in space. The Intergalactic Empire responded with the word 'No'.", 
											"The President of Space America has come under fire recently for stating that god was a chicken.", 
											"The Intergalactic Empire is in hot water this week after proposing to rename Space-Milk to Milk. The newsroom would like to apologize to any readers offended by this news.", 
											"The Prime Minister of Space Scotland has announced that 'Freedom Day' did not go as planned. Our sources report that over 2000 human heads are now being returned to their loved ones.", 
											"The Prime Minister of Space Australia has come under fire for stating 'Women are in the kitchen, men are on the sofa, jews are in the oven. My country is doing well.", 
											"Dirty Space Palestine just declared Jihad on Mighty Space Israel. For shame, Space Palestine.", 
											"The President of Space America was questioned today about his reaction to the Space Superstorm Baldman disaster, he replied 'I didn't send anybody since I figured it would quit about three quarters through.", 
											"The President of Space America was photographed today kicking a dog to death while muttering about how he liked cats better.", 
											"The President of Space America was photographed today with a fairly obvious tail protruding out of his pants, he denies the photo is real, saying 'I, president T'jkar Aw'krejn, am no Tajaran-- I mean catbeast.", 
											"The votes have come in, and the new Prime Minister of Space Uzbekistan is Kthchichikachi Breekikikiki. When questioned about his landslide victory, he replied 'SQAAAAAAAK'. His only opponent, Er'p Fh'goot, was the first openly gay catbeast to run for office.", 
											"The President of Space America has issued a press release asking for more chips in his office.", 
											"The Prime Minister of Space Uzbekistan has issued a press release, stating that 'SQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK BAWWK BAAWWWWKK'. We would like to say that Faux News does not condone or support the words of Mr. Breekikikiki.", 
											"The Prime Minister of Space Australia has come under fire for stating he was very upset with how many black people there was in his country.", 
											"The Czar of Space Russia has accused the President of Space America of being a dirty catbeast. The President wiggled his trademark ears and said that if he was a Tajaran, the Czar was a space shark. The President is being treated for bite wounds.", 
											"The 'Universes Largest Oven' has been completed today in Space Germany. Prime Minister Adole Himmler has invited Space Isreal to see the oven first at its grand opening."
										 });
		public ByTable currentevents2 = new ByTable(new object [] { 
											"CEO Discount Dan has been sued. Again.", 
											"Nanotrasen has inducted a new policy wherein clowns will be spanked for stealing milk.", 
											"Discount Dan's has created a new line of Discountu Danu food product for Space Japan. The food is comprised of Space Carp on rice. More at ten.", 
											"Discount Dan's has come under fire for their new 'Horsemeat Lasagna'", 
											"Nanotrasen's official website has been hacked this morning. The site read 'NT SUXZ, GO SYNDIEKATTZ!!1!1!!' for 48 hours until the site was fixed.", 
											"Read the all new book by a former unnamed syndicate, 'Nanotrasen sucks but the dental is good so whatever.'", 
											"Nanotrasen has released a new study that has been made useless by the internet.", 
											"Discount Dan's 'Spooky Dan' line of product has come under fire for being unintentionally racist toward ghosts.", 
											"Discount Dan's 'Discounto Danito' line of product has come out with a new 'fiesta size' burrito. CEO Discount Dan has been quoted as saying, 'A big 'ol clot for a big 'ol family!'", 
											"The Syndicate has issued a press release stating that 'Nanotrasen sucks dicks.'", 
											"Nanotrasen CEO Johnson Lovelocker has been photographed kicking a Tajaran to death. This shameful publicity stunt is part of the new 'NT Hates Catbeasts, do you?' campaign.", 
											"Nanotrasen CEO Johnson Lovelocker has been photographed kicking a Vox in the cloaca. He commented that, 'BIRDS BELONG IN MY FUCKING MEALS DAMN IT'.", 
											"Nanotrasen CEO Johnson Lovelocker is in hot water for an alleged sex scandal with a confused syndicate woman that took the motto 'Fuck NT' too seriously.", 
											"Nanotrasen CEO Johnson Lovelocker issued a press release stating, 'Anybody who's fucking impersonating me is going to get fucking bluespaced unto a spike.'. We do not condone Lovelocker's use of foul language in the newsroom.", 
											"Nanotrasen CEO Johnson Lovelocker and Discount Dan's CEO Discount Dan have been photographed buying a new friend necklace. The Syndicate issued a statement that 'That's totally gay.'", 
											"Discount Dan has been photographed this evening hunting the endangered albino space panda. When questioned, he replied that the endangered animal was 'Good eats'.", 
											"Nanotrasen's head programmer quit this evening when people did not respond well to his new features on NTOS. Said features included the ability to instantly transmit pictures of your butt to people by blinking.", 
											"Nanotrasen CEO Johnson Lovelocker was photographed this morning celebrating his birthday will well deserved hookers and blow.", 
											"Discount Dan's stock has risen 20 points today after CEO Discount Dan promised to include a free toy in every 'Happy Dan' meal. In other news, we have over 300 confirmed reports of broken teeth and lead poisoning in children 6 and under.", 
											"Discount Dan has come under fire today after trying to hug a plasmaman whilst smoking a cigar. He is being treated for 3rd degree burns at the moment, and we at the newsroom wish him luck.", 
											"Nanotrasen's treasurer Shlomo Goldburginstein died today in a tragic cooking incident with NT Officer Gass Judenraigh."
										 });
		public ByTable currentevents3 = new ByTable(new object [] { 
											"Border patrol around Space America has tightened today after a wave of Tajarans yiffed their way across. We have reports of over 2000 molested Space Americans. More to come at seven.", 
											"Tajarans continue to protest in their 'Trillion Fur March' today. We have reports that the Space American army is giving a KOS order on all non-humans in the area.", 
											"Read the all new book by known Plasmaman rights activist Spookler Boney, 'AGHGHHGHGH KILL ME IT BURNS AGHHHHHHH'", 
											"Read the all new book by the worlds most renown skeleton Johnny Hips, 'It aint easy, being bony.'", 
											"Scientists in Space Austria have found a chicken with the ability to warp space-time. More at ten.", 
											"Scientists working on at the Bluespace Portal Research Facility (BPRF), have looked into the fabric of reality. They report that all it is out there is a bunch of fat nerds and a chicken.", 
											"Scientists working at the Large Hadron Collider have discovered nothing today. A sceptical scientist was quoted as saying, 'It could be nothing, but it's probably just something again.'", 
											"Johnny Hips has released a new album today, 'Tibia Blues'. The songs include classics such as 'I aint got money for milk.', 'Skeleton Rock', and a new song named, 'Bone Marrow'.", 
											"Doctors have discovered that clowns indeed do have a funny bone.", 
											"Renowned mime scientist Free Shrugs has discovered a new element today. He has named it '  ', he also says that it has the properties of '   '.", 
											"Archaeologists have discovered god's final message to his creation today. The message reads, 'bawk'.", 
											"Scientists have discovered a new type of elementary particle today. Our sources say it has a bad atitude, and enjoys the color blue.", 
											"Today, a man was discovered to be living with a 20 year old ghost in his house. When the ghost was questioned who killed him, he responded 'A FAGGOT!'. More at four.", 
											"Scientists report that ghosts do in fact exist, however, they are huge assholes.", 
											"Supermatter researchers today have reported that the substance is highly volatile and could possibly rip apart the universe in large quantities. Discount Dan has been reported as ordering over 1000 pounds of supermatter shards.", 
											"Scientists working at the BPRF have discovered a pocket universe comprised fully of dead clown souls today. 40 scientists are being treated for madness."
										 });
		public ByTable history = new ByTable(new object [] { 
											"Adolf Hitler's cyborg body was lain to rest after the ending of WW4.", 
											"World War Buttbot began, the following war claimed the asses of over 500000 young gentlemen.", 
											"The 54th President of the United States of Space America was shot in the dick. He succumbed to his injuries after medbay threw him in cryo for an entire day.", 
											"The first great zombie apocalypse began on Venus.", 
											"The first man to step on Pluto slipped and was impaled on an ice spike shortly after landing.", 
											"North Korea became the first country to land a rocket on the sun.", 
											"Kim Jong Long Dong Silver, 58th generation leader of North Korea, died after being shot seventy two times in the chest.", 
											"Nanotrasen's new 'Space Station 13' project was announced.", 
											"Jupiter and Neptune became sentient for a period of 78 hours, Jupiter was heard screaming 'WHY AM I ALIVE DEAR GOD.', whilst curiously, Neptune only said 'Well here we go again.'.", 
											"The first furry in space was thrown out an airlock, along with his fursuit.", 
											"The 89th President of Space America read Woody's Got Wood aloud in his first State of the Union, and was beaten to death shortly after.", 
											"Space France surrendered for the 10124th time, making it the most invaded country in the galaxy.", 
											"Our glorious leader Karl Pilkington the 24th was crowned emperor of the Intergalactic Human Empire.", 
											"Everyone in the universe said 'Dave sucks.' at the same time. The cause of this event was unknown, but over 200000 men named Dave were murdered.", 
											"A cult religion following the belief god was a chicken was created."
										 });
		public ByTable facts = new ByTable(new object [] { 
											"If you have 3 quarters, 4 dimes, and 4 pennies, you have $1.19. You also have the largest amount of money in coins without being able to make change for a dollar.", 
											"The numbers '172' can be found on the back of the U.S. $5 dollar bill in the bushes at the base of the Lincoln Memorial.", 
											"President Kennedy was the fastest random speaker in the world with upwards of 350 words per minute.", 
											"In the average lifetime, a person will walk the equivalent of 5 times around the equator.", 
											"Odontophobia is the fear of teeth.", 
											"The surface area of an average-sized brick is 79 cm squared.", 
											"According to suicide statistics, Monday is the favoured day for self-destruction.", 
											"The Neanderthal's brain was bigger than yours is.", 
											"The pancreas produces Insulin.", 
											"The word 'lethologica' describes the state of not being able to remember the word you want.", 
											"Every year about 98% of the atoms in your body are replaced.", 
											"The international telephone dialing code for Antarctica is 672.", 
											"Women are 37% more likely to go to a psychiatrist than men are.", 
											"The human heart creates enough pressure to squirt blood 30 feet (9 m).", 
											"When snakes are born with two heads, they fight each other for food.", 
											"Stressed is Desserts spelled backwards.", 
											"The word 'nerd' was first coined by Dr. Seuss in 'If I Ran the Zoo.'", 
											"Revolvers cannot be silenced because of all the noisy gasses which escape the cylinder gap at the rear of the barrel.", 
											"Every human spent about half an hour as a single cell.", 
											"7.5 million toothpicks can be created from a cord of wood.", 
											"If the Earth's sun were just inch in diameter, the nearest star would be 445 miles away.", 
											"There is no word in the English language that rhymes with month, orange, silver or purple.", 
											"Starfish have no brains.", 
											"2 and 5 are the only prime numbers that end in 2 or 5.", 
											"'Pronunciation' is the word which is mispronounced the most in the English language.", 
											"Women blink nearly twice as much as men.", 
											"Owls are the only birds who can see the color blue.", 
											"A pizza that has radius 'z' and height 'a' has volume Pi Ã z Ã z Ã a.", 
											"Months that begin on a Sunday will always have a 'Friday the 13th.'", 
											"Zero is an even number.", 
											"The longest English word that can be spelled without repeating any letters is 'uncopyrightable'.", 
											"10! (Ten factorial) seconds equals exactly six Earth weeks.", 
											"Want to remember the first digits of Pi easily? You can do it by counting each word's letters in 'May I have a large container of plasma?'"
										 });
		public dynamic currentevent1 = null;
		public dynamic currentevent2 = null;
		public dynamic currentevent3 = null;
		public dynamic onthisday = null;
		public dynamic didyouknow = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "electronic";
			this.w_class = 1;
			this.slot_flags = 768;
			this.icon = "icons/obj/pda.dmi";
			this.icon_state = "pda";
		}

		// Function from file: PDA.dm
		public Obj_Item_Device_Pda ( dynamic loc = null ) : base( (object)(loc) ) {
			PdaApp_BalanceCheck app = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			app = new PdaApp_BalanceCheck();
			app.onInstall( this );
			return;
		}

		// Function from file: PDA.dm
		public override dynamic emp_act( int severity = 0 ) {
			Ent_Static A = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this, typeof(Ent_Static) )) {
				A = _a;
				
				A.emp_act( severity );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override void Del(  ) {
			int loop_count = 0;

			loop_count = 0;

			while (GlobalVars.PDAs.Contains( null )) {
				GlobalVars.PDAs.Remove( null );

				if ( loop_count > 10 ) {
					break;
				}
				loop_count++;
			}
			GlobalVars.PDAs.Remove( this );
			base.Del();
			return;
		}

		// Function from file: PDA.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			GlobalVars.PDAs.Remove( this );

			if ( Lang13.Bool( this.id ) ) {
				this.id.loc = GlobalFuncs.get_turf( this.loc );
			}

			if ( Lang13.Bool( this.pai ) ) {
				this.pai.loc = GlobalFuncs.get_turf( this.loc );
			}
			base.Destroy( (object)(brokenup) );
			return null;
		}

		// Function from file: PDA.dm
		public override bool preattack( dynamic target = null, dynamic user = null, bool? proximity_flag = null, dynamic click_parameters = null ) {
			bool _default = false;

			int reagents_length = 0;
			Reagent re = null;

			
			switch ((int)( this.scanmode )) {
				case 3:
					
					if ( !((Ent_Static)target).Adjacent( user ) ) {
						return _default;
					}

					if ( !( target.reagents == null ) ) {
						
						if ( target.reagents.reagent_list.len > 0 ) {
							reagents_length = target.reagents.reagent_list.len;
							GlobalFuncs.to_chat( user, "<span class='notice'>" + reagents_length + " chemical agent" + ( reagents_length > 1 ? "s" : "" ) + " found.</span>" );

							foreach (dynamic _a in Lang13.Enumerate( target.reagents.reagent_list, typeof(Reagent) )) {
								re = _a;
								
								GlobalFuncs.to_chat( user, "<span class='notice'>	 " + re + ": " + re.volume + " units</span>" );
							}
						} else {
							GlobalFuncs.to_chat( user, "<span class='notice'>No active chemical agents found in " + target + ".</span>" );
						}
					} else {
						GlobalFuncs.to_chat( user, "<span class='notice'>No significant chemical agents found in " + target + ".</span>" );
					}
					_default = true;
					break;
				case 6:
					
					if ( this.dev_analys != null ) {
						
						if ( ((Ent_Static)target).Adjacent( user ) ) {
							return this.dev_analys.preattack( target, user, true );
						}
					}
					break;
			}
			return _default;
		}

		// Function from file: PDA.dm
		public override bool afterattack( dynamic A = null, dynamic user = null, bool? flag = null, dynamic _params = null, bool? struggle = null ) {
			
			if ( this.scanmode == 5 ) {
				
				if ( this.atmos_analys != null ) {
					
					if ( ((Ent_Static)A).Adjacent( user ) ) {
						
						if ( !Lang13.Bool( ((Ent_Static)A).attackby( this.atmos_analys, user ) ) ) {
							this.atmos_analys.afterattack( A, user, true );
						}
					}
				}
			}

			if ( !( this.scanmode != 0 ) && A is Obj_Item_Weapon_Paper && Lang13.Bool( this.owner ) ) {
				this.note = A.info;
				GlobalFuncs.to_chat( user, "<span class='notice'>Paper scanned.</span>" );
			}
			return false;
		}

		// Function from file: PDA.dm
		public override bool? attack( dynamic M = null, dynamic user = null, string def_zone = null, bool? eat_override = null ) {
			dynamic blood = null;
			dynamic O = null;

			
			if ( M is Mob_Living_Carbon ) {
				
				switch ((int)( this.scanmode )) {
					case 1:
						GlobalFuncs.healthanalyze( M, user, false );
						break;
					case 2:
						
						if ( !( M.dna is Dna ) ) {
							GlobalFuncs.to_chat( user, "<span class='notice'>No fingerprints found on " + M + "</span>" );
						} else if ( !( M is Mob_Living_Carbon_Monkey ) ) {
							
							if ( !( M.gloves == null ) ) {
								GlobalFuncs.to_chat( user, "<span class='notice'>No fingerprints found on " + M + "</span>" );
							}
						} else {
							GlobalFuncs.to_chat( user, "<span class='notice'>" + M + "'s Fingerprints: " + Num13.Md5( M.dna.uni_identity ) + "</span>" );
						}

						if ( !( M.blood_DNA != null ) ) {
							GlobalFuncs.to_chat( user, "<span class='notice'>No blood found on " + M + "</span>" );

							if ( M.blood_DNA != null ) {
								GlobalFuncs.qdel( M.blood_DNA );
								M.blood_DNA = null;
							}
						} else {
							GlobalFuncs.to_chat( user, "<span class='notice'>Blood found on " + M + ". Analysing...</span>" );
							Task13.Schedule( 15, (Task13.Closure)(() => {
								
								foreach (dynamic _a in Lang13.Enumerate( M.blood_DNA )) {
									blood = _a;
									
									GlobalFuncs.to_chat( user, "<span class='notice'>Blood type: " + M.blood_DNA[blood] + "\nDNA: " + blood + "</span>" );
								}
								return;
							}));
						}
						break;
					case 4:
						
						foreach (dynamic _b in Lang13.Enumerate( Map13.FetchViewers( null, M ) )) {
							O = _b;
							
							O.show_message( "<span class='warning'>" + user + " has analyzed " + M + "'s radiation levels!</span>", 1 );
						}
						user.show_message( "<span class='notice'>Analyzing Results for " + M + ":</span>" );

						if ( Lang13.Bool( M.radiation ) ) {
							user.show_message( "<span class='good'>Radiation Level: </span>" + M.radiation );
						} else {
							user.show_message( "<span class='notice'>No radiation detected.</span>" );
						}
						break;
				}
			}
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic idcard = null;
			dynamic O = null;
			dynamic dosh = null;
			Transaction T = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( a is Obj_Item_Weapon_Cartridge && !Lang13.Bool( this.cartridge ) ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.cartridge = a;
					GlobalFuncs.to_chat( b, "<span class='notice'>You insert " + this.cartridge + " into " + this + ".</span>" );

					if ( Lang13.Bool( this.cartridge.radio ) ) {
						this.cartridge.radio.hostpda = this;
					}
				}
			} else if ( a is Obj_Item_Weapon_Card_Id ) {
				idcard = a;

				if ( !Lang13.Bool( idcard.registered_name ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).The( this ).item().str( " rejects the ID.</span>" ).ToString() );
					return null;
				}

				if ( !Lang13.Bool( this.owner ) ) {
					this.owner = idcard.registered_name;
					this.ownjob = idcard.assignment;
					this.name = "PDA-" + this.owner + " (" + this.ownjob + ")";
					GlobalFuncs.to_chat( b, "<span class='notice'>Card scanned.</span>" );
				} else {
					
					if ( Lang13.Bool( b.contents.Contains( this ) ) && Lang13.Bool( b.contents.Contains( a ) ) || this.loc is Tile && GlobalFuncs.in_range( this, b ) && Lang13.Bool( b.contents.Contains( a ) ) ) {
						
						if ( this.can_use( b ) ) {
							this.id_check( b, 2 );
							GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You put the ID into " ).the( this ).item().str( "'s slot.</span>" ).ToString() );

							if ( this.incoming_transactions.len != 0 ) {
								this.receive_incoming_transactions( this.id );
							}
							this.updateSelfDialog();
						}
					}
					return null;
				}
				this.updateSelfDialog();
			} else if ( a is Obj_Item_Device_Paicard && !Lang13.Bool( this.pai ) ) {
				
				if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.pai = a;
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You slot " ).the( a ).item().str( " into " ).item( this ).str( ".</span>" ).ToString() );
					this.updateUsrDialog();
				}
			} else if ( a is Obj_Item_Weapon_Pen ) {
				O = Lang13.FindIn( typeof(Obj_Item_Weapon_Pen), this );

				if ( Lang13.Bool( O ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>There is already a pen in " ).the( this ).item().str( ".</span>" ).ToString() );
				} else if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>You slide " ).the( a ).item().str( " into " ).the( this ).item().str( ".</span>" ).ToString() );
				}
			} else if ( a is Obj_Item_Weapon_Spacecash ) {
				
				if ( !Lang13.Bool( this.id ) ) {
					GlobalFuncs.to_chat( b, new Txt().icon( this ).str( "<span class='warning'>There is no ID in the PDA!</span>" ).ToString() );
					return null;
				}
				dosh = a;
				this.id.virtual_wallet.money += Convert.ToDouble( dosh.worth * dosh.amount );

				if ( Rand13.PercentChance( 50 ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/polaroid1.ogg", 50, 1 );
				} else {
					GlobalFuncs.playsound( this.loc, "sound/items/polaroid2.ogg", 50, 1 );
				}
				T = new Transaction();
				T.target_name = b.name;
				T.purpose = "Currency deposit";
				T.amount = dosh.worth * dosh.amount;
				T.source_terminal = this.name;
				T.date = GlobalVars.current_date_string;
				T.time = GlobalFuncs.worldtime2text();
				this.id.virtual_wallet.transaction_log.Add( T );
				GlobalFuncs.to_chat( b, "<span class='info'>You insert " + dosh + " into the PDA.</span>" );
				GlobalFuncs.qdel( dosh );
				this.updateUsrDialog();
			}
			return null;
		}

		// Function from file: PDA.dm
		public override void AltClick( Mob user = null ) {
			
			if ( this.can_use( Task13.User ) ) {
				this.__CallVerb("Remove pen", Task13.User );
				return;
			}
			base.AltClick( user ); return;
		}

		// Function from file: PDA.dm
		public override void CtrlClick( dynamic user = null ) {
			
			if ( this.can_use( Task13.User ) ) {
				this.__CallVerb("Remove id", Task13.User );
				return;
			}
			base.CtrlClick( (object)(user) ); return;
		}

		// Function from file: PDA.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			Mob U = null;
			Ent_Static T = null;
			dynamic app = null;
			dynamic app2 = null;
			int i = 0;
			dynamic app3 = null;
			Mob user = null;
			double? amount = null;
			Transaction T2 = null;
			dynamic app4 = null;
			dynamic new_x = null;
			dynamic x_validate = null;
			dynamic new_y = null;
			dynamic y_validate = null;
			string marker_name = null;
			MinimapMarker mkr = null;
			dynamic app5 = null;
			double? to_remove = null;
			dynamic mkr2 = null;
			dynamic app6 = null;
			dynamic app7 = null;
			dynamic app8 = null;
			dynamic app9 = null;
			dynamic app10 = null;
			dynamic app11 = null;
			dynamic app12 = null;
			dynamic app13 = null;
			dynamic app14 = null;
			dynamic app15 = null;
			dynamic app16 = null;
			dynamic T3 = null;
			dynamic app17 = null;
			dynamic T4 = null;
			dynamic app18 = null;
			MineTile T5 = null;
			dynamic app19 = null;
			MineTile T6 = null;
			dynamic app20 = null;
			ByTable difficulties = null;
			dynamic choice = null;
			dynamic app21 = null;
			dynamic app22 = null;
			dynamic app23 = null;
			dynamic app24 = null;
			dynamic app25 = null;
			dynamic app26 = null;
			dynamic app27 = null;
			dynamic app28 = null;
			dynamic app29 = null;
			dynamic app30 = null;
			dynamic app31 = null;
			dynamic app32 = null;
			dynamic app33 = null;
			dynamic app34 = null;
			dynamic app35 = null;
			dynamic n = null;
			dynamic t = null;
			dynamic P = null;
			dynamic P2 = null;
			double? amount2 = null;
			Transaction T7 = null;
			dynamic P3 = null;
			dynamic P4 = null;
			Obj_Machinery_Door_Poddoor M = null;
			dynamic P5 = null;
			int difficulty = 0;
			dynamic T8 = null;

			base.Topic( href, href_list, (object)(hclient) );
			U = Task13.User;

			if ( this.can_use( U ) ) {
				this.add_fingerprint( U );
				U.set_machine( this );

				dynamic _g = href_list["choice"]; // Was a switch-case, sorry for the mess.
				if ( _g=="Close" ) {
					U.unset_machine();
					Interface13.Browse( U, null, "window=pda" );
					return null;
				} else if ( _g=="Refresh" ) {
					
				} else if ( _g=="Return" ) {
					
					if ( ( this.mode ??0) <= 9 || Lang13.Bool( Lang13.FindIn( this.mode, GlobalVars.pda_app_menus ) ) ) {
						this.mode = 0;
					} else {
						this.mode = Num13.Floor( ( this.mode ??0) / 10 );

						if ( this.mode == 4 || this.mode == 5 ) {
							this.mode = 0;
						} else if ( ( this.mode ??0) >= 40 && ( this.mode ??0) <= 53 ) {
							this.cartridge.mode = this.mode;
							this.cartridge.unlock();
						}
					}
				} else if ( _g=="Authenticate" ) {
					this.id_check( U, 1 );
				} else if ( _g=="UpdateInfo" ) {
					this.ownjob = this.id.assignment;
					this.name = "PDA-" + this.owner + " (" + this.ownjob + ")";
				} else if ( _g=="Eject" ) {
					
					if ( !( this.cartridge == null ) ) {
						T = this.loc;

						if ( T is Mob ) {
							T = T.loc;
						}
						this.cartridge.loc = T;
						this.scanmode = 0;

						if ( Lang13.Bool( this.cartridge.radio ) ) {
							this.cartridge.radio.hostpda = null;
						}
						this.cartridge = null;
					}
				} else if ( _g=="0" ) {
					this.mode = 0;
				} else if ( _g=="1" ) {
					this.mode = 1;
				} else if ( _g=="2" ) {
					this.mode = 2;
				} else if ( _g=="21" ) {
					this.mode = 21;
				} else if ( _g=="3" ) {
					this.mode = 3;
				} else if ( _g=="4" ) {
					this.mode = 0;
				} else if ( _g=="41" ) {
					this.mode = 41;
				} else if ( _g=="chatroom" ) {
					this.mode = 5;
				} else if ( _g==101 ) {
					this.mode = 101;
				} else if ( _g=="toggleDeskRinger" ) {
					app = Lang13.FindIn( typeof(PdaApp_Ringer), this.applications );

					if ( Lang13.Bool( app ) ) {
						app.status = !Lang13.Bool( app.status );
					}
				} else if ( _g=="ringerFrequency" ) {
					app2 = Lang13.FindIn( typeof(PdaApp_Ringer), this.applications );

					if ( Lang13.Bool( app2 ) ) {
						i = Convert.ToInt32( app2.frequency + String13.ParseNumber( href_list["rfreq"] ) );

						if ( i < 1200 ) {
							i = 1201;
						}

						if ( i > 1600 ) {
							i = 1599;
						}
						app2.frequency = i;
					}
				} else if ( _g==102 ) {
					this.mode = 102;
				} else if ( _g=="setFilter" ) {
					app3 = Lang13.FindIn( typeof(PdaApp_SpamFilter), this.applications );

					if ( Lang13.Bool( app3 ) ) {
						app3.function = String13.ParseNumber( href_list["filter"] );
					}
				} else if ( _g==103 ) {
					this.mode = 103;
				} else if ( _g=="printCurrency" ) {
					user = Task13.User;
					amount = Num13.Floor( Convert.ToDouble( Interface13.Input( "How much money do you wish to print?", "Currency Printer", 0, null, null, InputType.Num ) ) );

					if ( !Lang13.Bool( amount ) || ( amount ??0) < 0 || ( this.id.virtual_wallet.money ??0) <= 0 ) {
						GlobalFuncs.to_chat( user, new Txt().icon( this ).str( "<span class='warning'>The PDA's screen flashes, 'Invalid value.'</span>" ).ToString() );
						return null;
					}

					if ( ( amount ??0) > ( this.id.virtual_wallet.money ??0) ) {
						amount = this.id.virtual_wallet.money;
					}

					if ( ( amount ??0) > 10000 ) {
						GlobalFuncs.to_chat( user, new Txt().icon( this ).str( "<span class='notice'>The PDA's screen flashes, 'Maximum single withdrawl limit reached, defaulting to 10,000.'</span>" ).ToString() );
						amount = 10000;
					}
					this.id.virtual_wallet.money -= amount ??0;
					this.withdraw_arbitrary_sum( user, amount );

					if ( Rand13.PercentChance( 50 ) ) {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/polaroid1.ogg", 50, 1 );
					} else {
						GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/items/polaroid2.ogg", 50, 1 );
					}
					T2 = new Transaction();
					T2.target_name = user.name;
					T2.purpose = "Currency printed";
					T2.amount = "-" + amount;
					T2.source_terminal = this.name;
					T2.date = GlobalVars.current_date_string;
					T2.time = GlobalFuncs.worldtime2text();
					this.id.virtual_wallet.transaction_log.Add( T2 );
				} else if ( _g==104 ) {
					this.mode = 104;
				} else if ( _g=="minimapMarker" ) {
					app4 = Lang13.FindIn( typeof(PdaApp_StationMap), this.applications );

					dynamic _a = href_list["mMark"]; // Was a switch-case, sorry for the mess.
					if ( _a=="x" ) {
						new_x = Interface13.Input( "Please input desired X coordinate.", "Station Map App", app4.markx, null, null, InputType.Num );
						x_validate = new_x + GlobalVars.WORLD_X_OFFSET[GlobalVars.map.zMainStation];

						if ( Convert.ToDouble( x_validate ) < 1 || Convert.ToDouble( x_validate ) > 255 ) {
							GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid X coordinate.</span>" );
						} else {
							app4.markx = new_x;
						}
					} else if ( _a=="y" ) {
						new_y = Interface13.Input( "Please input desired Y coordinate.", "Station Map App", app4.marky, null, null, InputType.Num );
						y_validate = new_y + GlobalVars.WORLD_Y_OFFSET[GlobalVars.map.zMainStation];

						if ( Convert.ToDouble( y_validate ) < 1 || Convert.ToDouble( y_validate ) > 255 ) {
							GlobalFuncs.to_chat( Task13.User, "<span class='caution'>Error: Invalid Y coordinate.</span>" );
						} else {
							app4.marky = new_y;
						}
					} else if ( _a=="add" ) {
						marker_name = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( "Give a name to your marker", "Station Map App", "default marker", null, null, InputType.Str | InputType.Null ) ), 1, 26 );
						mkr = new MinimapMarker();
						mkr.x = app4.markx;
						mkr.y = app4.marky;
						mkr.name = marker_name;
						app4.markers.Add( mkr );
						mkr.num = app4.markers.len;
					}
				} else if ( _g=="removeMarker" ) {
					app5 = Lang13.FindIn( typeof(PdaApp_StationMap), this.applications );
					to_remove = String13.ParseNumber( href_list["rMark"] );
					mkr2 = app5.markers[to_remove];
					GlobalFuncs.qdel( mkr2 );
					mkr2 = null;
				} else if ( _g==105 ) {
					this.mode = 105;
				} else if ( _g=="snakeNewGame" ) {
					app6 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app6.ingame = 1;
					app6.snake_game.game_start();
					app6.game_tick( Task13.User );
				} else if ( _g=="snakeUp" ) {
					app7 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app7.snake_game.lastinput = GlobalVars.NORTH;
				} else if ( _g=="snakeLeft" ) {
					app8 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app8.snake_game.lastinput = GlobalVars.WEST;
				} else if ( _g=="snakeRight" ) {
					app9 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app9.snake_game.lastinput = GlobalVars.EAST;
				} else if ( _g=="snakeDown" ) {
					app10 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app10.snake_game.lastinput = GlobalVars.SOUTH;
				} else if ( _g=="snakeUnPause" ) {
					app11 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					((PdaApp_Snake)app11).pause( Task13.User );
				} else if ( _g=="snakeLabyrinth" ) {
					app12 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app12.labyrinth = String13.ParseNumber( href_list["lType"] );
					app12.snake_game.set_labyrinth( String13.ParseNumber( href_list["lType"] ) );
				} else if ( _g=="snakeLevel" ) {
					app13 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app13.snake_game.level = String13.ParseNumber( href_list["sLevel"] );
				} else if ( _g=="snakeGyro" ) {
					app14 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app14.snake_game.gyroscope = String13.ParseNumber( href_list["gSet"] );
				} else if ( _g=="snakeVolume" ) {
					app15 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
					app15.volume += String13.ParseNumber( href_list["vChange"] );
					app15.volume = Num13.MaxInt( 0, Convert.ToInt32( app15.volume ) );
					app15.volume = Num13.MinInt( 6, Convert.ToInt32( app15.volume ) );
				} else if ( _g==106 ) {
					this.mode = 106;
				} else if ( _g=="mineNewGame" ) {
					app16 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );
					T3 = Lang13.FindObj( href_list["mTile"] );
					app16.ingame = 1;
					app16.minesweeper_game.game_start( T3 );
					app16.game_tick( Task13.User );
				} else if ( _g=="mineDig" ) {
					app17 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );
					T4 = Lang13.FindObj( href_list["mTile"] );
					app17.minesweeper_game.dig_tile( T4 );
					app17.game_tick( Task13.User );
				} else if ( _g=="mineFlag" ) {
					app18 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );

					if ( !app18.minesweeper_game.gameover ) {
						
						foreach (dynamic _b in Lang13.Enumerate( app18.minesweeper_game.tiles, typeof(MineTile) )) {
							T5 = _b;
							

							if ( !T5.dug && T5.selected ) {
								
								if ( !( T5.flagged != 0 ) ) {
									T5.flagged = 1;
								} else if ( T5.flagged == 2 ) {
									T5.flagged = 1;
								} else {
									T5.flagged = 0;
								}
							}
						}
					}
				} else if ( _g=="mineQuestion" ) {
					app19 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );

					if ( !app19.minesweeper_game.gameover ) {
						
						foreach (dynamic _c in Lang13.Enumerate( app19.minesweeper_game.tiles, typeof(MineTile) )) {
							T6 = _c;
							

							if ( !T6.dug && T6.selected ) {
								
								if ( !( T6.flagged != 0 ) ) {
									T6.flagged = 2;
								} else if ( T6.flagged == 1 ) {
									T6.flagged = 2;
								} else {
									T6.flagged = 0;
								}
							}
						}
					}
				} else if ( _g=="mineSettings" ) {
					app20 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );

					if ( Interface13.Alert( Task13.User, "Changing the settings will reset the game, are you sure?", "Minesweeper Settings", "Yes", "No" ) != "Yes" ) {
						return null;
					}
					difficulties = new ByTable(new object [] { "beginner", "intermediate", "expert", "custom" });
					choice = Interface13.Input( "What Difficulty?", "Minesweeper Settings", null, null, difficulties, InputType.Any );
					app20.minesweeper_game.set_difficulty( choice );
					app20.ingame = 0;
				} else if ( _g=="mineReset" ) {
					app21 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );
					app21.minesweeper_game.face = "press";
					app21.game_update( Task13.User );
					Task13.Sleep( 5 );
					app21.minesweeper_game.reset_game();
					app21.ingame = 0;
				} else if ( _g==107 ) {
					this.mode = 107;
				} else if ( _g=="eggPrev" ) {
					app22 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app22).previous_egg();
				} else if ( _g=="eggNext" ) {
					app23 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app23).next_egg();
				} else if ( _g=="eggChose" ) {
					app24 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					app24.game_state = 1;
					app24.game_tick( Task13.User );
					app24.petname = String13.SubStr( GlobalFuncs.sanitize( Interface13.Input( Task13.User, "What name for your new pet?", "Name your new pet", "" + app24.petname, null, InputType.Str | InputType.Null ) ), 1, 26 );
					app24.last_spoken = "";
				} else if ( _g=="eggHatch" ) {
					app25 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app25).button_hatch();
				} else if ( _g=="eggTalk" ) {
					app26 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app26).button_talk();
				} else if ( _g=="eggWalk" ) {
					app27 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app27).button_walk();
				} else if ( _g=="eggFeed" ) {
					app28 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app28).button_feed();
				} else if ( _g=="eggClean" ) {
					app29 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app29).button_clean();
				} else if ( _g=="eggHeal" ) {
					app30 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app30).button_heal();
				} else if ( _g=="eggFight" ) {
					app31 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app31).button_fight();
				} else if ( _g=="eggVisit" ) {
					app32 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app32).button_visit();
				} else if ( _g=="eggWork" ) {
					app33 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app33).button_work();
				} else if ( _g=="eggRate" ) {
					app34 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app34).button_rates();
				} else if ( _g=="eggCash" ) {
					app35 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
					((PdaApp_Spesspets)app35).button_cash();
				} else if ( _g=="Light" ) {
					
					if ( this.fon ) {
						this.fon = false;
						this.set_light( 0 );
					} else {
						this.fon = true;
						this.set_light( this.f_lum );
					}
				} else if ( _g=="Medical Scan" ) {
					
					if ( this.scanmode == 1 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_medical ) {
						this.scanmode = 1;
					}
				} else if ( _g=="Reagent Scan" ) {
					
					if ( this.scanmode == 3 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_reagent_scanner ) {
						this.scanmode = 3;
					}
				} else if ( _g=="Halogen Counter" ) {
					
					if ( this.scanmode == 4 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_engine ) {
						this.scanmode = 4;
					}
				} else if ( _g=="Honk" ) {
					
					if ( !( this.last_honk != 0 && Game13.time < this.last_honk + 20 ) ) {
						GlobalFuncs.playsound( this.loc, "sound/items/bikehorn.ogg", 50, 1 );
						this.last_honk = Game13.time;
					}
				} else if ( _g=="Gas Scan" ) {
					
					if ( this.scanmode == 5 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_atmos ) {
						this.scanmode = 5;
					}
				} else if ( _g=="Device Analyser" ) {
					
					if ( this.scanmode == 6 ) {
						this.scanmode = 0;
					} else if ( !( this.cartridge == null ) && this.cartridge.access_mechanic ) {
						
						if ( !( this.dev_analys != null ) ) {
							this.dev_analys = new Obj_Item_Device_DeviceAnalyser( this );
							this.dev_analys.max_designs = 5;
						}
						this.scanmode = 6;
					}
				} else if ( _g=="Edit" ) {
					n = Interface13.Input( U, "Please enter message", this.name, this.notehtml, null, InputType.StrMultiline );

					if ( GlobalFuncs.in_range( this, U ) && this.loc == U ) {
						n = String13.SubStr( GlobalFuncs.adminscrub( n ), 1, 1024 );

						if ( this.mode == 1 ) {
							this.note = GlobalFuncs.replacetext( n, "\n", "<BR>" );
							this.notehtml = n;
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _g=="Toggle Messenger" ) {
					this.toff = !this.toff;
				} else if ( _g=="Toggle Ringer" ) {
					this.silent = !this.silent;
				} else if ( _g=="Clear" ) {
					this.tnote = null;
				} else if ( _g=="Ringtone" ) {
					t = Interface13.Input( U, "Please enter new ringtone", this.name, this.ttone, null, InputType.Str );

					if ( GlobalFuncs.in_range( this, U ) && this.loc == U ) {
						
						if ( Lang13.Bool( t ) ) {
							
							if ( this.hidden_uplink != null && this.hidden_uplink.check_trigger( U, GlobalFuncs.trim( String13.ToLower( t ) ), GlobalFuncs.trim( String13.ToLower( this.lock_code ) ) ) ) {
								GlobalFuncs.to_chat( U, "The PDA softly beeps." );
								Interface13.Browse( U, null, "window=pda" );
								this.mode = 0;
							} else {
								t = String13.SubStr( GlobalFuncs.sanitize( t ), 1, 20 );
								this.ttone = t;
							}
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _g=="Message" ) {
					P = Lang13.FindObj( href_list["target"] );
					this.create_message( U, P );
				} else if ( _g=="transferFunds" ) {
					
					if ( !Lang13.Bool( this.id ) ) {
						return null;
					}
					P2 = Lang13.FindObj( href_list["target"] );
					amount2 = Num13.Floor( Convert.ToDouble( Interface13.Input( "How much money do you wish to transfer to " + P2.owner + "?", "Money Transfer", 0, null, null, InputType.Num ) ) );

					if ( !Lang13.Bool( amount2 ) || ( amount2 ??0) < 0 || ( this.id.virtual_wallet.money ??0) <= 0 ) {
						GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>The PDA's screen flashes, 'Invalid value.'</span>" ).ToString() );
						return null;
					}

					if ( ( amount2 ??0) > ( this.id.virtual_wallet.money ??0) ) {
						amount2 = this.id.virtual_wallet.money;
					}

					switch ((int)( ((Obj_Item_Device_Pda)P2).receive_funds( this.owner, amount2, this.name ) )) {
						case 1:
							GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='notice'>The PDA's screen flashes, 'Transaction complete!'</span>" ).ToString() );
							break;
						case 2:
							GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='notice'>The PDA's screen flashes, 'Transaction complete! The recipient will earn the funds once he enters his ID in his PDA.'</span>" ).ToString() );
							break;
						default:
							GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='warning'>The PDA's screen flashes, 'Error, transaction canceled'</span>" ).ToString() );
							return null;
							break;
					}
					this.id.virtual_wallet.money -= amount2 ??0;
					T7 = new Transaction();
					T7.target_name = P2.owner;
					T7.purpose = "Money transfer";
					T7.amount = "-" + amount2;
					T7.source_terminal = this.name;
					T7.date = GlobalVars.current_date_string;
					T7.time = GlobalFuncs.worldtime2text();
					this.id.virtual_wallet.transaction_log.Add( T7 );
				} else if ( _g=="Send Honk" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
						P3 = Lang13.FindObj( href_list["target"] );

						if ( !( P3 == null ) ) {
							
							if ( !P3.toff && this.cartridge.honk_charges > 0 ) {
								this.cartridge.honk_charges--;
								U.show_message( "<span class='notice'>Virus sent!</span>", 1 );
								P3.honkamt = Rand13.Int( 15, 20 );
							}
						} else {
							GlobalFuncs.to_chat( U, "PDA not found." );
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _g=="Send Silence" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
						P4 = Lang13.FindObj( href_list["target"] );

						if ( !( P4 == null ) ) {
							
							if ( !P4.toff && this.cartridge.mime_charges > 0 ) {
								this.cartridge.mime_charges--;
								U.show_message( "<span class='notice'>Virus sent!</span>", 1 );
								P4.silent = 1;
								P4.ttone = "silence";
							}
						} else {
							GlobalFuncs.to_chat( U, "PDA not found." );
						}
					} else {
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _g=="Toggle Door" ) {
					
					if ( Lang13.Bool( this.cartridge ) && this.cartridge.access_remote_door ) {
						
						foreach (dynamic _e in Lang13.Enumerate( GlobalVars.poddoors, typeof(Obj_Machinery_Door_Poddoor) )) {
							M = _e;
							

							if ( M.id_tag == this.cartridge.remote_door_id ) {
								
								if ( M.density ) {
									M.open();
								} else {
									M.close();
								}
							}
						}
					}
				} else if ( _g=="Detonate" ) {
					
					if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate ) {
						P5 = Lang13.FindObj( href_list["target"] );

						if ( !( P5 == null ) ) {
							
							if ( !P5.toff && this.cartridge.shock_charges > 0 ) {
								this.cartridge.shock_charges--;
								difficulty = 0;

								if ( Lang13.Bool( P5.cartridge ) ) {
									difficulty += P5.cartridge.access_medical ?1:0;
									difficulty += P5.cartridge.access_security ?1:0;
									difficulty += P5.cartridge.access_engine ?1:0;
									difficulty += P5.cartridge.access_clown ?1:0;
									difficulty += P5.cartridge.access_janitor ?1:0;
									difficulty += ( P5.cartridge.access_manifest ?1:0) * 2;
								} else {
									difficulty += 2;
								}

								if ( Rand13.PercentChance( difficulty * 12 ) || P5.hidden_uplink != null ) {
									U.show_message( "<span class='warning'>An error flashes on your " + this + ".</span>", 1 );
								} else if ( Rand13.PercentChance( difficulty * 3 ) ) {
									U.show_message( "<span class='warning'>Energy feeds back into your " + this + "!</span>", 1 );
									Interface13.Browse( U, null, "window=pda" );
									this.explode();
									GlobalFuncs.log_admin( "" + GlobalFuncs.key_name( U ) + " just attempted to blow up " + P5 + " with the Detomatix cartridge but failed, blowing themselves up" );
									GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( U ) + " just attempted to blow up " + P5 + " with the Detomatix cartridge but failed, blowing themselves up" );
								} else {
									U.show_message( "<span class='notice'>Success!</span>", 1 );
									GlobalFuncs.log_admin( "" + GlobalFuncs.key_name( U ) + " just attempted to blow up " + P5 + " with the Detomatix cartridge and succeded" );
									GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( U ) + " just attempted to blow up " + P5 + " with the Detomatix cartridge and succeded" );
									P5.explode();
								}
							}
						} else {
							GlobalFuncs.to_chat( U, "PDA not found." );
						}
					} else {
						U.unset_machine();
						Interface13.Browse( U, null, "window=pda" );
						return null;
					}
				} else if ( _g=="pai" ) {
					
					dynamic _f = href_list["option"]; // Was a switch-case, sorry for the mess.
					if ( _f=="1" ) {
						((Obj_Item)this.pai).attack_self( U );
					} else if ( _f=="2" ) {
						T8 = GlobalFuncs.get_turf( this.loc );

						if ( Lang13.Bool( T8 ) ) {
							this.pai.loc = T8;
						}
					}
				} else {
					this.mode = String13.ParseNumber( href_list["choice"] );

					if ( Lang13.Bool( this.cartridge ) ) {
						this.cartridge.mode = this.mode;
						this.cartridge.unlock();
					}
				}
			} else {
				U.unset_machine();
				Interface13.Browse( U, null, "window=pda" );
				return null;
			}

			if ( this.mode == 2 || this.mode == 21 ) {
				this.overlays.len = 0;
			}

			if ( this.honkamt > 0 && Rand13.PercentChance( 60 ) ) {
				this.honkamt--;
				GlobalFuncs.playsound( this.loc, "sound/items/bikehorn.ogg", 30, 1 );
			}

			if ( U.machine == this && href_list["skiprefresh"] != "1" ) {
				this.attack_self( U );
			} else {
				U.unset_machine();
				Interface13.Browse( U, null, "window=pda" );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string dat = null;
			Asset_Simple_Pda C = null;
			PdaApp app = null;
			int count = 0;
			Obj_Item_Device_Pda P = null;
			dynamic T = null;
			GasMixture environment = null;
			dynamic pressure = null;
			dynamic total_moles = null;
			dynamic o2_level = null;
			dynamic n2_level = null;
			dynamic co2_level = null;
			dynamic plasma_level = null;
			double unknown_level = 0;
			Chatroom C2 = null;
			dynamic app2 = null;
			dynamic app3 = null;
			dynamic app4 = null;
			ByTable v_log = null;
			dynamic e = null;
			Transaction T2 = null;
			dynamic D = null;
			ByTable t_log = null;
			dynamic e2 = null;
			Transaction T3 = null;
			dynamic app5 = null;
			dynamic T4 = null;
			MinimapMarker mkr = null;
			MinimapMarker mkr2 = null;
			MinimapMarker mkr3 = null;
			Asset_Simple_PdaSnake C3 = null;
			dynamic app6 = null;
			dynamic templist = null;
			dynamic winnerlist = null;
			dynamic snakebestlist = null;
			double? x = null;
			int? x2 = null;
			Snake_Body B = null;
			string body_dir = null;
			string head_dir = null;
			Asset_Simple_PdaMine C4 = null;
			dynamic app7 = null;
			MineTile T5 = null;
			MineTile T6 = null;
			string mine_icon = null;
			dynamic mine_counter = null;
			MineTile T7 = null;
			int time_counter = 0;
			int? x3 = null;
			int? x4 = null;
			int? y = null;
			int? y2 = null;
			Asset_Simple_PdaSpesspets C5 = null;
			dynamic app8 = null;
			int eggstate = 0;

			((Mob)user).set_machine( this );

			if ( this.active_uplink_check( user ) ) {
				return null;
			}
			dat = new Txt( "<html><head><title>Personal Data Assistant</title></head><body bgcolor=\"#808000\"><style>a, a:link, a:visited, a:active, a:hover { color: #000000; }img {border-style:none;}</style>\n<a href='byond://?src=" ).Ref( this ).str( ";choice=Close'><img src=pda_exit.png> Close</a>" ).ToString();

			if ( !( this.cartridge == null ) && this.mode == 0 ) {
				dat += new Txt( " | <a href='byond://?src=" ).Ref( this ).str( ";choice=Eject'><img src=pda_eject.png> Eject " ).item( this.cartridge ).str( "</a>" ).ToString();
			}

			if ( Lang13.Bool( this.mode ) ) {
				dat += new Txt( " | <a href='byond://?src=" ).Ref( this ).str( ";choice=Return'><img src=pda_menu.png> Return</a>" ).ToString();
			}
			dat += new Txt( "| <a href='byond://?src=" ).Ref( this ).str( ";choice=Refresh'><img src=pda_refresh.png> Refresh</a>\n		<br>" ).ToString();

			if ( !Lang13.Bool( this.owner ) ) {
				dat += new Txt( "Warning: No owner information entered.  Please swipe card.<br><br>\n			<a href='byond://?src=" ).Ref( this ).str( ";choice=Refresh'><img src=pda_refresh.png> Retry</a>" ).ToString();
			} else {
				
				switch ((int?)( this.mode )) {
					case 0:
						
						if ( Lang13.Bool( user.client ) ) {
							C = new Asset_Simple_Pda();
							GlobalFuncs.send_asset_list( user.client, C.assets );
						}
						dat += "<h2>PERSONAL DATA ASSISTANT v.1.3</h2>\n					Owner: " + this.owner + ", " + this.ownjob + "<br>";
						dat += new Txt( "ID: <A href='?src=" ).Ref( this ).str( ";choice=Authenticate'>" ).item( ( Lang13.Bool( this.id ) ? "" + this.id.registered_name + ", " + this.id.assignment : "----------" ) ).ToString();
						dat += new Txt( "<br><A href='?src=" ).Ref( this ).str( ";choice=UpdateInfo'>" ).item( ( Lang13.Bool( this.id ) ? "Update PDA Info" : "" ) ).str( "</A><br><br>" ).ToString();
						dat += new Txt( "Station Time: " ).item( GlobalFuncs.worldtime2text() ).str( @"
					<br><br>
					<h4>General Functions</h4>
					<ul>
					<li><a href='byond://?src=" ).Ref( this ).str( ";choice=1'><img src=pda_notes.png> Notekeeper</a></li>\n					<li><a href='byond://?src=" ).Ref( this ).str( ";choice=2'><img src=pda_mail.png> Messenger</a></li>\n					<li><a href='byond://?src=" ).Ref( this ).str( ";choice=50'><img src=pda_clock.png> Current Events</a></li>" ).ToString();
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=41'><img src=pda_notes.png> View Crew Manifest</a></li>" ).ToString();

						if ( Lang13.Bool( this.cartridge ) ) {
							
							if ( this.cartridge.access_clown ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Honk'><img src=pda_honk.png> Honk Synthesizer</a></li>" ).ToString();
							}

							if ( this.cartridge.access_status_display ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=42'><img src=pda_status.png> Set Status Display</a></li>" ).ToString();
							}
						}
						dat += "</ul>";
						dat += "<h4>Applications</h4>";

						if ( this.applications.len == 0 ) {
							dat += "<i>No application currently installed.</i>";
						} else {
							dat += "<ul>";

							foreach (dynamic _a in Lang13.Enumerate( this.applications, typeof(PdaApp) )) {
								app = _a;
								

								if ( app.menu != 0 ) {
									dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=" ).item( app.menu ).str( "'>" ).item( ( Lang13.Bool( app.icon ) ? "<img src=" + app.icon + ".png> " : "" ) ).item( app.name ).str( "</a></li>" ).ToString();
								} else {
									dat += "<li>" + ( Lang13.Bool( app.icon ) ? "<img src=" + app.icon + ".png> " : "" ) + app.name + "</li>";
								}
							}
							dat += "</ul>";
						}

						if ( Lang13.Bool( this.cartridge ) ) {
							
							if ( this.cartridge.access_engine || this.cartridge.access_atmos ) {
								dat += new Txt( "<h4>Engineering Functions</h4>\n							<ul>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=43'><img src=pda_power.png> Power Monitor</a></li>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=53'><img src=pda_alert.png> Alert Monitor</a></li>\n							</ul>" ).ToString();
							}

							if ( this.cartridge.access_mechanic ) {
								dat += new Txt( "<h4>Mechanic Functions</h4>\n							<ul>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Device Analyser'><img src=pda_scanner.png> " ).item( ( this.scanmode == 6 ? "Disable" : "Enable" ) ).str( " Device Analyser</a></li>\n							</ul>" ).ToString();
							}

							if ( this.cartridge.access_medical ) {
								dat += new Txt( "<h4>Medical Functions</h4>\n							<ul>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=44'><img src=pda_medical.png> Medical Records</a></li>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Medical Scan'><img src=pda_scanner.png> " ).item( ( this.scanmode == 1 ? "Disable" : "Enable" ) ).str( " Medical Scanner</a></li>\n							</ul>" ).ToString();
							}

							if ( this.cartridge.access_security ) {
								dat += new Txt( "<h4>Security Functions</h4>\n							<ul>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=45'><img src=pda_cuffs.png> Security Records</A></li>" ).ToString();
							}

							if ( this.cartridge.radio is Obj_Item_Radio_Integrated_Beepsky ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=46'><img src=pda_cuffs.png> Security Bot Access</a></li>\n							</ul>" ).ToString();
							} else {
								dat += "</ul>";
							}

							if ( this.cartridge.access_quartermaster ) {
								dat += new Txt( "<h4>Quartermaster Functions:</h4>\n							<ul>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=47'><img src=pda_crate.png> Supply Records</A></li>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=48'><img src=pda_mule.png> Delivery Bot Control</A></li>\n							</ul>" ).ToString();
							}
						}
						dat += "</ul>\n					<h4>Utilities</h4>\n					<ul>";

						if ( Lang13.Bool( this.cartridge ) ) {
							
							if ( this.cartridge.access_janitor ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=49'><img src=pda_bucket.png> Custodial Locator</a></li>" ).ToString();
							}

							if ( this.cartridge.radio is Obj_Item_Radio_Integrated_Signal ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=40'><img src=pda_signaler.png> Signaler System</a></li>" ).ToString();
							}

							if ( this.cartridge.access_reagent_scanner ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Reagent Scan'><img src=pda_reagent.png> " ).item( ( this.scanmode == 3 ? "Disable" : "Enable" ) ).str( " Reagent Scanner</a></li>" ).ToString();
							}

							if ( this.cartridge.access_engine ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Halogen Counter'><img src=pda_reagent.png> " ).item( ( this.scanmode == 4 ? "Disable" : "Enable" ) ).str( " Halogen Counter</a></li>" ).ToString();
							}

							if ( this.cartridge.access_atmos ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Gas Scan'><img src=pda_reagent.png> " ).item( ( this.scanmode == 5 ? "Disable" : "Enable" ) ).str( " Gas Scanner</a></li>" ).ToString();
							}

							if ( this.cartridge.access_remote_door ) {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Door'><img src=pda_rdoor.png> Toggle Remote Door</a></li>" ).ToString();
							}
						}
						dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=3'><img src=pda_atmos.png> Atmospheric Scan</a></li>\n					<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Light'><img src=pda_flashlight.png> " ).item( ( this.fon ? "Disable" : "Enable" ) ).str( " Flashlight</a></li>" ).ToString();

						if ( Lang13.Bool( this.pai ) ) {
							
							if ( this.pai.loc != this ) {
								this.pai = null;
							} else {
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=pai;option=1'>pAI Device Configuration</a></li>\n							<li><a href='byond://?src=" ).Ref( this ).str( ";choice=pai;option=2'>Eject pAI Device</a></li>" ).ToString();
							}
						}
						dat += "</ul>";
						break;
					case 1:
						dat += new Txt( "<h4><img src=pda_notes.png> Notekeeper V2.1</h4>\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=Edit'> Edit</a><br>" ).ToString();
						dat += this.note;
						break;
					case 2:
						dat += new Txt( "<h4><img src=pda_mail.png> SpaceMessenger V3.9.4</h4>\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Ringer'><img src=pda_bell.png> Ringer: " ).item( ( this.silent ? "Off" : "On" ) ).str( "</a> |\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=Toggle Messenger'><img src=pda_mail.png> Send / Receive: " ).item( ( this.toff ? "Off" : "On" ) ).str( "</a> |\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=Ringtone'><img src=pda_bell.png> Set Ringtone</a> |\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=21'><img src=pda_mail.png> Messages</a><br>" ).ToString();

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate ) {
							dat += "<b>" + this.cartridge.shock_charges + " detonation charges left.</b><HR>";
						}

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
							dat += "<b>" + this.cartridge.honk_charges + " viral files left.</b><HR>";
						}

						if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
							dat += "<b>" + this.cartridge.mime_charges + " viral files left.</b><HR>";
						}
						dat += "<h4><img src=pda_menu.png> Detected PDAs</h4>\n					<ul>";
						count = 0;

						if ( !this.toff ) {
							
							foreach (dynamic _b in Lang13.Enumerate( GlobalFuncs.sortNames( GlobalFuncs.get_viewable_pdas() ), typeof(Obj_Item_Device_Pda) )) {
								P = _b;
								

								if ( P == this ) {
									continue;
								}

								if ( P.hidden ) {
									continue;
								}
								dat += new Txt( "<li><a href='byond://?src=" ).Ref( this ).str( ";choice=Message;target=" ).Ref( P ).str( "'>" ).item( P ).str( "</a>" ).ToString();

								if ( Lang13.Bool( this.id ) && !( P is Obj_Item_Device_Pda_Ai ) ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=transferFunds;target=" ).Ref( P ).str( "'><img src=pda_money.png>*Send Money*</a>)" ).ToString();
								}

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Syndicate && P.detonate ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Detonate;target=" ).Ref( P ).str( "'><img src=pda_boom.png>*Detonate*</a>)" ).ToString();
								}

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Clown ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Send Honk;target=" ).Ref( P ).str( "'><img src=pda_honk.png>*Send Virus*</a>)" ).ToString();
								}

								if ( this.cartridge is Obj_Item_Weapon_Cartridge_Mime ) {
									dat += new Txt( " (<a href='byond://?src=" ).Ref( this ).str( ";choice=Send Silence;target=" ).Ref( P ).str( "'>*Send Virus*</a>)" ).ToString();
								}
								dat += "</li>";
								count++;
							}
						}
						dat += "</ul>";

						if ( count == 0 ) {
							dat += "None detected.<br>";
						}
						break;
					case 21:
						dat += new Txt( "<h4><img src=pda_mail.png> SpaceMessenger V3.9.4</h4>\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=Clear'><img src=pda_blank.png> Clear Messages</a>\n					<h4><img src=pda_mail.png> Messages</h4>" ).ToString();
						dat += this.tnote;
						dat += "<br>";
						break;
					case 3:
						dat += "<h4><img src=pda_atmos.png> Atmospheric Readings</h4>";
						T = GlobalFuncs.get_turf( user.loc );

						if ( T == null ) {
							dat += "Unable to obtain a reading.<br>";
						} else {
							environment = ((Ent_Static)T).return_air();
							pressure = environment.return_pressure();
							total_moles = environment.f_total_moles();
							dat += "Air Pressure: " + Num13.Round( Convert.ToDouble( pressure ), 0.1 ) + " kPa<br>";

							if ( Lang13.Bool( total_moles ) ) {
								o2_level = environment.oxygen / total_moles;
								n2_level = environment.nitrogen / total_moles;
								co2_level = environment.carbon_dioxide / total_moles;
								plasma_level = environment.toxins / total_moles;
								unknown_level = 1 - Convert.ToDouble( o2_level + n2_level + co2_level + plasma_level );
								dat += "Nitrogen: " + Num13.Floor( Convert.ToDouble( n2_level * 100 ) ) + "%<br>\n							Oxygen: " + Num13.Floor( Convert.ToDouble( o2_level * 100 ) ) + "%<br>\n							Carbon Dioxide: " + Num13.Floor( Convert.ToDouble( co2_level * 100 ) ) + "%<br>\n							Plasma: " + Num13.Floor( Convert.ToDouble( plasma_level * 100 ) ) + "%<br>";

								if ( unknown_level > 0.01 ) {
									dat += "OTHER: " + Num13.Floor( unknown_level ) + "%<br>";
								}
							}
							dat += "Temperature: " + Num13.Floor( ( environment.temperature ??0) - 273.41 ) + "&deg;C<br>";
						}
						dat += "<br>";
						break;
					case 5:
						dat += "<h4><img src=pda_chatroom.png> Nanotrasen Relay Chat</h4>\n					<h4><img src=pda_menu.png> Detected Channels</h4>: <li>";

						foreach (dynamic _c in Lang13.Enumerate( GlobalVars.chatrooms, typeof(Chatroom) )) {
							C2 = _c;
							
							dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";pdachannel=" ).item( C2.name ).str( "'>#" ).item( String13.HtmlEncode( String13.ToLower( C2.name ) ) ).ToString();

							if ( C2.password != "" ) {
								dat += " <img src=pda_locked.png>";
							}
							dat += "</li>";
						}
						break;
					case 41:
						dat += "<h4><img src=pda_notes.png> Crew Manifest</h4>\n					Entries cannot be modified from this terminal.<br><br>";

						if ( GlobalVars.data_core != null ) {
							dat += GlobalVars.data_core.get_manifest( true );
						}
						dat += "<br>";
						break;
					case 50:
						dat += "<h4><img src=pda_clock.png> Current Events</h4>\n					Station Time: <b>" + GlobalFuncs.worldtime2text() + "</b>.<br>\n					Empire Date: <b>" + this.MM + "/" + this.DD + "/" + GlobalVars.game_year + "</b>.<br><br>\n					<b>Current Events,</b><br>\n					<li>" + this.currentevent1 + "</li<br>\n					<li>" + this.currentevent2 + "</li><br>\n					<li>" + this.currentevent3 + "</li><br><br>\n					<b>On this day,</b><br>\n					<li>" + this.onthisday + "</li><br><br>\n					<b>Did you know...</b><br>\n					<li>" + this.didyouknow + "</li><br>";
						break;
					case 101:
						app2 = Lang13.FindIn( typeof(PdaApp_Ringer), this.applications );
						dat += "<h4>Ringer Application</h4>";

						if ( Lang13.Bool( app2 ) ) {
							dat += new Txt( "\n					Status: <a href='byond://?src=" ).Ref( this ).str( ";choice=toggleDeskRinger'>" ).item( ( Lang13.Bool( app2.status ) ? "On" : "Off" ) ).str( "</a><br>\n					Frequency:\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=ringerFrequency;rfreq=-10'>-</a>\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=ringerFrequency;rfreq=-2'>-</a>\n						" ).item( GlobalFuncs.format_frequency( app2.frequency ) ).str( "\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=ringerFrequency;rfreq=2'>+</a>\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=ringerFrequency;rfreq=10'>+</a><br>\n						<br>\n					" ).ToString();
						}
						break;
					case 102:
						app3 = Lang13.FindIn( typeof(PdaApp_SpamFilter), this.applications );
						dat += "<h4>Spam Filtering Application</h4>";

						if ( Lang13.Bool( app3 ) ) {
							dat += "\n					<ul>\n					<li>" + ( Convert.ToInt32( app3.function ) == 2 ? "<b>Block the spam.</b>" : new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=setFilter;filter=2'>Block the spam.</a>" ).ToString() ) + "</li>\n					<li>" + ( Lang13.Bool( app3.function ) == true ? "<b>Conceal the spam.</b>" : new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=setFilter;filter=1'>Conceal the spam.</a>" ).ToString() ) + "</li>\n					<li>" + ( Lang13.Bool( app3.function ) == false ? "<b>Do nothing.</b>" : new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=setFilter;filter=0'>Do nothing.</a>" ).ToString() ) + "</li>\n					</ul>\n					";
						}
						break;
					case 103:
						app4 = Lang13.FindIn( typeof(PdaApp_BalanceCheck), this.applications );
						dat += "<h4><img src=" + app4.icon + ".png> Virtual Wallet and Balance Check Application</h4>";

						if ( Lang13.Bool( app4 ) ) {
							
							if ( !Lang13.Bool( this.id ) ) {
								dat += "<i>Insert an ID card in the PDA to use this application.</i>";
							} else {
								
								if ( !( this.id.virtual_wallet != null ) ) {
									((Obj_Item_Weapon_Card_Id)this.id).update_virtual_wallet();
								}
								dat += new Txt( "<hr>\n							<h5>Virtual Wallet</h5>\n							Owner: <b>" ).item( this.id.virtual_wallet.owner_name ).str( "</b><br>\n							Balance: <b>" ).item( this.id.virtual_wallet.money ).str( "</b>$  <u><a href='byond://?src=" ).Ref( this ).str( ";choice=printCurrency'><img src=" ).item( app4.icon ).str( ".png>Print Currency</a></u>\n							<h6>Transaction History</h6>\n							On " ).item( this.MM ).str( "/" ).item( this.DD ).str( "/" ).item( GlobalVars.game_year ).str( ":\n							<ul>\n							" ).ToString();
								v_log = new ByTable();

								foreach (dynamic _d in Lang13.Enumerate( this.id.virtual_wallet.transaction_log )) {
									e = _d;
									
									v_log.Add( e );
								}

								foreach (dynamic _e in Lang13.Enumerate( GlobalFuncs.reverseRange( v_log ), typeof(Transaction) )) {
									T2 = _e;
									
									dat += "<li>[" + T2.time + "] " + T2.amount + "$, " + T2.purpose + " at " + T2.source_terminal + "</li>";
								}
								dat += "</ul><hr>";

								if ( !Lang13.Bool( app4.linked_db ) ) {
									app4.reconnect_database();
								}

								if ( Lang13.Bool( app4.linked_db ) ) {
									
									if ( Lang13.Bool( app4.linked_db.activated ) ) {
										D = ((Obj_Machinery_AccountDatabase)app4.linked_db).attempt_account_access( this.id.associated_account_number, 0, 2, false );

										if ( Lang13.Bool( D ) ) {
											dat += "\n										<h5>Bank Account</h5>\n										Owner: <b>" + D.owner_name + "</b><br>\n										Balance: <b>" + D.money + "</b>$\n										<h6>Transaction History</h6>\n										On " + this.MM + "/" + this.DD + "/" + GlobalVars.game_year + ":\n										<ul>\n										";
											t_log = new ByTable();

											foreach (dynamic _f in Lang13.Enumerate( D.transaction_log )) {
												e2 = _f;
												
												t_log.Add( e2 );
											}

											foreach (dynamic _g in Lang13.Enumerate( GlobalFuncs.reverseRange( t_log ), typeof(Transaction) )) {
												T3 = _g;
												

												if ( T3.purpose == "Account creation" ) {
													dat += "</ul>\n												On " + ( this.DD ? "" + ( ( ( this.MM ?1:0) - 2 ) % 12 + 1 ) : "" + this.MM ) + "/" + ( ( ( this.DD ?1:0) - 2 ) % 30 + 1 ) + "/" + ( this.DD == this.MM ? "" + ( GlobalVars.game_year - 1 ) : "" + GlobalVars.game_year ) + ":\n												<ul>\n												<li>[" + T3.time + "] " + T3.amount + "$, " + T3.purpose + " at " + T3.source_terminal + "</li>\n												</ul>";
												} else {
													dat += "<li>[" + T3.time + "] " + T3.amount + "$, " + T3.purpose + " at " + T3.source_terminal + "</li>";
												}
											}

											if ( !( D.transaction_log.len != 0 ) ) {
												dat += "</ul>";
											}
										} else {
											dat += "\n										<h5>Bank Account</h5>\n										<i>Unable to access bank account. Either its security settings don't allow remote checking or the account is nonexistent.</i>\n										";
										}
									} else {
										dat += "\n									<h5>Bank Account</h5>\n									<i>Unfortunately your station's Accounts Database doesn't allow remote access. Negociate with your HoP or Captain to solve this issue.</i>\n									";
									}
								} else {
									dat += "\n								<h5>Bank Account</h5>\n								<i>Unable to connect to accounts database. The database is either nonexistent, inoperative, or too far away.</i>\n								";
								}
							}
						}
						break;
					case 104:
						app5 = Lang13.FindIn( typeof(PdaApp_StationMap), this.applications );
						dat += "<h4>Station Map Application</h4>";

						if ( Lang13.Bool( app5 ) ) {
							T4 = GlobalFuncs.get_turf( this.loc );

							if ( !File13.Exists( "icons/pda_icons/pda_minimap_" + GlobalVars.map.nameShort + ".png" ) ) {
								dat += "<span class='warning'>It appears that our services have yet to produce a minimap of this station. We apologize for the inconvenience.</span>";
							}

							if ( Convert.ToInt32( T4.z ) == GlobalVars.map.zMainStation ) {
								dat += "Current Location: <b>" + T4.loc.name + " (" + ( T4.x - GlobalVars.WORLD_X_OFFSET[GlobalVars.map.zMainStation] ) + "," + ( T4.y - GlobalVars.WORLD_Y_OFFSET[GlobalVars.map.zMainStation] ) + ",1)</b><br>";
							} else {
								dat += "Current Location: <b>Unknown</b><br>";
							}

							if ( File13.Exists( "icons/pda_icons/pda_minimap_" + GlobalVars.map.nameShort + ".png" ) ) {
								dat += "\n						<div style=\"position: relative; left: 0; top: 0;\">\n						<img src=\"pda_minimap_" + GlobalVars.map.nameShort + ".png\" style=\"position: relative; top: 0; left: 0;\"/>\n						";

								if ( Convert.ToInt32( T4.z ) == GlobalVars.map.zMainStation ) {
									dat += "<img src=\"pda_minimap_loc.gif\" style=\"position: absolute; top: " + ( T4.y * -1 + 247 ) + "px; left: " + ( T4.x - 8 ) + "px;\"/>";
								}

								foreach (dynamic _h in Lang13.Enumerate( app5.markers, typeof(MinimapMarker) )) {
									mkr = _h;
									
									dat += "<img src=\"pda_minimap_mkr.gif\" style=\"position: absolute; top: " + ( ( mkr.y + GlobalVars.WORLD_Y_OFFSET[GlobalVars.map.zMainStation] ) * -1 + 247 ) + "px; left: " + ( mkr.x + GlobalVars.WORLD_X_OFFSET[GlobalVars.map.zMainStation] - 8 ) + "px;\"/>";
								}
								dat += "</div>";
							} else {
								dat += "\n						<div style=\"position: relative; left: 0; top: 0;\">\n						<img src=\"pda_minimap_bg_notfound.png\" style=\"position: relative; top: 0; left: 0;\"/>\n						";

								if ( Convert.ToInt32( T4.z ) == GlobalVars.map.zMainStation ) {
									dat += "<img src=\"pda_minimap_loc.gif\" style=\"position: absolute; top: " + ( T4.y * -1 + 247 ) + "px; left: " + ( T4.x - 8 ) + "px;\"/>";
								}

								foreach (dynamic _i in Lang13.Enumerate( app5.markers, typeof(MinimapMarker) )) {
									mkr2 = _i;
									
									dat += "<img src=\"pda_minimap_mkr.gif\" style=\"position: absolute; top: " + ( ( mkr2.y + GlobalVars.WORLD_Y_OFFSET[GlobalVars.map.zMainStation] ) * -1 + 247 ) + "px; left: " + ( mkr2.x + GlobalVars.WORLD_X_OFFSET[GlobalVars.map.zMainStation] - 8 ) + "px;\"/>";
								}
								dat += "</div>";
							}
							dat += new Txt( "<h5>Markers</h5>\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=minimapMarker;mMark=x'>X=" ).item( app5.markx ).str( "</a>;\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=minimapMarker;mMark=y'>Y=" ).item( app5.marky ).str( "</a>;\n					<a href='byond://?src=" ).Ref( this ).str( ";choice=minimapMarker;mMark=add'>Add New Marker</a>\n					" ).ToString();

							if ( !( app5.markers.len != 0 ) ) {
								dat += "<br><span class='warning'>no markers</span>";
							} else {
								dat += "<ul>";

								foreach (dynamic _j in Lang13.Enumerate( app5.markers, typeof(MinimapMarker) )) {
									mkr3 = _j;
									
									dat += new Txt( "<li>" ).item( mkr3.name ).str( " (" ).item( mkr3.x ).str( "/" ).item( mkr3.y ).str( ") <a href='byond://?src=" ).Ref( this ).str( ";choice=removeMarker;rMark=" ).item( mkr3.num ).str( "'>remove</a></li>" ).ToString();
								}
								dat += "</ul>";
							}
						}
						break;
					case 105:
						
						if ( Lang13.Bool( user.client ) ) {
							C3 = new Asset_Simple_PdaSnake();
							GlobalFuncs.send_asset_list( user.client, C3.assets );
						}
						app6 = Lang13.FindIn( typeof(PdaApp_Snake), this.applications );
						dat += new Txt( "<h4><img src=" ).item( app6.icon ).str( ".png> Snake II  <a href='byond://?src=" ).Ref( this ).str( ";choice=snakeVolume;vChange=-1'><b>-</b></a><img src=\"snake_volume" ).item( app6.volume ).str( ".png\"/><a href='byond://?src=" ).Ref( this ).str( ";choice=snakeVolume;vChange=1'><b>+</b></a></h4>" ).ToString();

						if ( Lang13.Bool( app6 ) ) {
							dat += "<br>\n						<div style=\"position: relative; left: 0; top: 0;\">\n						<img src=\"snake_background.png\" style=\"position: relative; top: 0; left: 0;\"/>\n						";

							if ( !Lang13.Bool( app6.ingame ) ) {
								dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeNewGame'><img src=\"snake_newgame.png\" style=\"position: absolute; top: 50px; left: 100px;\"/></a>" ).ToString();
								dat += "<img src=\"snake_highscore.png\" style=\"position: absolute; top: 90px; left: 50px;\"/>";
								templist = app6.highscores[app6.snake_game.level];
								winnerlist = GlobalVars.snake_station_highscores[app6.snake_game.level];
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( templist[app6.labyrinth + 1] / 1000 ) ) % 10 + ".png\" style=\"position: absolute; top: 90px; left: 210px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( templist[app6.labyrinth + 1] / 100 ) ) % 10 + ".png\" style=\"position: absolute; top: 90px; left: 226px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( templist[app6.labyrinth + 1] / 10 ) ) % 10 + ".png\" style=\"position: absolute; top: 90px; left: 242px;\"/>";
								dat += "<img src=\"snake_" + templist[app6.labyrinth + 1] % 10 + ".png\" style=\"position: absolute; top: 90px; left: 258px;\"/>";
								dat += "<img src=\"snake_station.png\" style=\"position: absolute; top: 130px; left: 50px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( winnerlist[app6.labyrinth + 1] / 1000 ) ) % 10 + ".png\" style=\"position: absolute; top: 130px; left: 178px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( winnerlist[app6.labyrinth + 1] / 100 ) ) % 10 + ".png\" style=\"position: absolute; top: 130px; left: 194px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( Convert.ToDouble( winnerlist[app6.labyrinth + 1] / 10 ) ) % 10 + ".png\" style=\"position: absolute; top: 130px; left: 210px;\"/>";
								dat += "<img src=\"snake_" + winnerlist[app6.labyrinth + 1] % 10 + ".png\" style=\"position: absolute; top: 130px; left: 226px;\"/>";
								snakebestlist = GlobalVars.snake_best_players[app6.snake_game.level];
								dat += "<br>(Station Highscore held by <B>" + snakebestlist[app6.labyrinth + 1] + "</B>)";
								dat += "<br>Set speed: ";
								x = null;
								x = 1;

								while (( x ??0) <= 9) {
									
									if ( x == app6.snake_game.level ) {
										dat += "<B>" + x + "</B>, ";
									} else {
										dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeLevel;sLevel=" ).item( x ).str( "'>" ).item( x ).str( "</a>, " ).ToString();
									}
									x++;
								}
								dat += "<br>Set labyrinth: " + ( !Lang13.Bool( app6.labyrinth ) ? "<b>None</b>" : new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeLabyrinth;lType=0'>None</a>" ).ToString() ) + ", ";
								x2 = null;
								x2 = 1;

								while (( x2 ??0) <= 7) {
									
									if ( x2 == Lang13.IntNullable( app6.labyrinth ) ) {
										dat += "<B>" + x2 + "</B>, ";
									} else {
										dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeLabyrinth;lType=" ).item( x2 ).str( "'>" ).item( x2 ).str( "</a>, " ).ToString();
									}
									x2++;
								}
								dat += "<br>Gyroscope (orient yourself to control): ";

								if ( Lang13.Bool( app6.snake_game.gyroscope ) ) {
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeGyro;gSet=0'>ON</a>" ).ToString();
								} else {
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeGyro;gSet=1'>OFF</a>" ).ToString();
								}
							} else {
								
								if ( Lang13.Bool( app6.labyrinth ) ) {
									dat += "<img src=\"snake_maze" + app6.labyrinth + ".png\" style=\"position: absolute; top: 0px; left: 0px;\"/>";
								}

								foreach (dynamic _r in Lang13.Enumerate( app6.snake_game.snakeparts, typeof(Snake_Body) )) {
									B = _r;
									
									body_dir = "";

									if ( B.life == 1 ) {
										
										switch ((int?)( B.dir )) {
											case 4:
												body_dir = "pda_snake_bodytail_east";
												break;
											case 8:
												body_dir = "pda_snake_bodytail_west";
												break;
											case 1:
												body_dir = "pda_snake_bodytail_north";
												break;
											case 2:
												body_dir = "pda_snake_bodytail_south";
												break;
										}
									} else if ( ( B.life ??0) > 1 ) {
										
										if ( Lang13.Bool( B.corner ) ) {
											
											switch ((int?)( B.dir )) {
												case 4:
													
													switch ((int?)( B.corner )) {
														case 2:
															body_dir = "pda_snake_bodycorner_eastsouth2";
															break;
														case 1:
															body_dir = "pda_snake_bodycorner_eastnorth2";
															break;
													}
													break;
												case 8:
													
													switch ((int?)( B.corner )) {
														case 2:
															body_dir = "pda_snake_bodycorner_westsouth2";
															break;
														case 1:
															body_dir = "pda_snake_bodycorner_westnorth2";
															break;
													}
													break;
												case 1:
													
													switch ((int?)( B.corner )) {
														case 4:
															body_dir = "pda_snake_bodycorner_eastnorth";
															break;
														case 8:
															body_dir = "pda_snake_bodycorner_westnorth";
															break;
													}
													break;
												case 2:
													
													switch ((int?)( B.corner )) {
														case 4:
															body_dir = "pda_snake_bodycorner_eastsouth";
															break;
														case 8:
															body_dir = "pda_snake_bodycorner_westsouth";
															break;
													}
													break;
											}
										} else {
											
											switch ((int?)( B.dir )) {
												case 4:
													body_dir = "pda_snake_body_east";
													break;
												case 8:
													body_dir = "pda_snake_body_west";
													break;
												case 1:
													body_dir = "pda_snake_body_north";
													break;
												case 2:
													body_dir = "pda_snake_body_south";
													break;
											}
										}

										if ( B.isfull ) {
											body_dir += "_full";
										}
									}

									if ( !B.flicking ) {
										dat += "<img src=\"" + body_dir + ".png\" style=\"position: absolute; top: " + ( ( B.y ??0) * -16 + 152 ) + "px; left: " + ( ( B.x ??0) * 16 - 16 ) + "px;\"/>";
									}
								}
								dat += "<img src=\"pda_snake_egg.png\" style=\"position: absolute; top: " + ( ( app6.snake_game.next_egg.y ??0) * -16 + 152 ) + "px; left: " + ( ( app6.snake_game.next_egg.x ??0) * 16 - 16 ) + "px;\"/>";

								if ( ( app6.snake_game.next_bonus.life ??0) > 0 ) {
									dat += "<img src=\"pda_snake_bonus" + app6.snake_game.next_bonus.bonustype + ".png\" style=\"position: absolute; top: " + ( ( app6.snake_game.next_bonus.y ??0) * -16 + 152 ) + "px; left: " + ( ( app6.snake_game.next_bonus.x ??0) * 16 - 8 ) + "px;\"/>";
									dat += "<img src=\"pda_snake_bonus" + app6.snake_game.next_bonus.bonustype + ".png\" style=\"position: absolute; top: " + -28 + "px; left: " + 272 + "px;\"/>";
									dat += "<img src=\"snake_" + Num13.Floor( ( app6.snake_game.next_bonus.life ??0) / 10 ) % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + 294 + "px;\"/>";
									dat += "<img src=\"snake_" + ( app6.snake_game.next_bonus.life ??0) % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + 310 + "px;\"/>";
								}
								dat += "<img src=\"snake_" + Num13.Floor( app6.snake_game.snakescore / 1000 ) % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + -6 + "px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( app6.snake_game.snakescore / 100 ) % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + 10 + "px;\"/>";
								dat += "<img src=\"snake_" + Num13.Floor( app6.snake_game.snakescore / 10 ) % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + 26 + "px;\"/>";
								dat += "<img src=\"snake_" + app6.snake_game.snakescore % 10 + ".png\" style=\"position: absolute; top: " + -30 + "px; left: " + 42 + "px;\"/>";
								head_dir = "";

								switch ((int?)( app6.snake_game.head.dir )) {
									case 4:
										head_dir = "pda_snake_head_east";
										break;
									case 8:
										head_dir = "pda_snake_head_west";
										break;
									case 1:
										head_dir = "pda_snake_head_north";
										break;
									case 2:
										head_dir = "pda_snake_head_south";
										break;
								}

								if ( app6.snake_game.head.open_mouth ) {
									head_dir += "_open";
								}

								if ( !app6.snake_game.head.flicking ) {
									dat += "<img src=\"" + head_dir + ".png\" style=\"position: absolute; top: " + ( ( app6.snake_game.head.y ??0) * -16 + 152 ) + "px; left: " + ( ( app6.snake_game.head.x ??0) * 16 - 16 ) + "px;\"/>";
								}

								if ( Lang13.Bool( app6.paused ) ) {
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeUnPause'><img src=\"snake_pause.png\" style=\"position: absolute; top: 50px; left: 128px;\"/></a>" ).ToString();
								}
							}
							dat += "</div>";
							dat += new Txt( "<h5>Controls</h5>\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeUp'><img src=\"pda_snake_arrow_north.png\"></a>\n						<br><a href='byond://?src=" ).Ref( this ).str( ";choice=snakeLeft'><img src=\"pda_snake_arrow_west.png\"></a>\n						<a href='byond://?src=" ).Ref( this ).str( ";choice=snakeRight'><img src=\"pda_snake_arrow_east.png\"></a>\n						<br><a href='byond://?src=" ).Ref( this ).str( ";choice=snakeDown'><img src=\"pda_snake_arrow_south.png\"></a>\n						" ).ToString();
						}
						break;
					case 106:
						
						if ( Lang13.Bool( user.client ) ) {
							C4 = new Asset_Simple_PdaMine();
							GlobalFuncs.send_asset_list( user.client, C4.assets );
						}
						app7 = Lang13.FindIn( typeof(PdaApp_Minesweeper), this.applications );
						dat += "<h4><img src=" + app7.icon + ".png> Minesweeper</h4>";

						if ( Lang13.Bool( app7 ) ) {
							dat += "<br>\n						<div style=\"position: relative; left: 0; top: 0;\">\n						<img src=\"minesweeper_bg_" + app7.minesweeper_game.current_difficulty + ".png\" style=\"position: relative; top: 0; left: 0;\"/>\n						";

							if ( !Lang13.Bool( app7.ingame ) ) {
								
								foreach (dynamic _t in Lang13.Enumerate( app7.minesweeper_game.tiles, typeof(MineTile) )) {
									T5 = _t;
									
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineNewGame;mTile=" ).Ref( T5 ).str( "'><img src=\"minesweeper_tile_full.png\" style=\"position: absolute; top: " ).item( ( T5.y ??0) * -16 + Convert.ToDouble( app7.minesweeper_game.rows * 16 ) ).str( "px; left: " ).item( ( T5.x ??0) * 16 ).str( "px;\"/></a>" ).ToString();
								}
							} else {
								
								foreach (dynamic _u in Lang13.Enumerate( app7.minesweeper_game.tiles, typeof(MineTile) )) {
									T6 = _u;
									
									mine_icon = "";

									if ( T6.dug ) {
										
										if ( T6.mined ) {
											mine_icon = "minesweeper_tile_mine_splode";
										} else if ( T6.num != 0 ) {
											mine_icon = "minesweeper_tile_" + T6.num;
										} else {
											mine_icon = "minesweeper_tile_empty";
										}
									} else if ( T6.mined && app7.minesweeper_game.gameover ) {
										
										if ( T6.flagged == 1 ) {
											mine_icon = "minesweeper_tile_flag";
										} else {
											mine_icon = "minesweeper_tile_mine_unsplode";
										}
									} else if ( T6.flagged == 1 ) {
										
										if ( app7.minesweeper_game.gameover ) {
											mine_icon = "minesweeper_tile_mine_wrong";
										} else {
											mine_icon = "minesweeper_tile_flag";
										}
									} else if ( T6.flagged == 2 ) {
										mine_icon = "minesweeper_tile_question";
									} else {
										mine_icon = "minesweeper_tile_full";
									}

									if ( T6.selected && !app7.minesweeper_game.gameover ) {
										mine_icon += "_selected";
									}
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineDig;mTile=" ).Ref( T6 ).str( "'><img src=\"" ).item( mine_icon ).str( ".png\" style=\"position: absolute; top: " ).item( ( T6.y ??0) * -16 + Convert.ToDouble( app7.minesweeper_game.rows * 16 ) ).str( "px; left: " ).item( ( T6.x ??0) * 16 ).str( "px;\"/></a>" ).ToString();
								}
								dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineFlag'><img src=\"minesweeper_flag.png\" style=\"position: absolute; top: " ).item( app7.minesweeper_game.rows * 16 + 48 ).str( "px; left: 16px;\"/></a>" ).ToString();
								dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineQuestion'><img src=\"minesweeper_question.png\" style=\"position: absolute; top: " ).item( app7.minesweeper_game.rows * 16 + 48 ).str( "px; left: 48px;\"/></a>" ).ToString();
							}
							dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineSettings'><img src=\"minesweeper_settings.png\" style=\"position: absolute; top: " ).item( app7.minesweeper_game.rows * 16 + 48 ).str( "px; left: 96px;\"/></a>" ).ToString();
							dat += "<img src=\"minesweeper_frame_smiley.png\" style=\"position: absolute; top: -33px; left: " + ( app7.minesweeper_game.columns * 8 + 3 ) + "px;\"/></a>";
							dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=mineReset'><img src=\"minesweeper_smiley_" ).item( app7.minesweeper_game.face ).str( ".png\" style=\"position: absolute; top: -32px; left: " ).item( app7.minesweeper_game.columns * 8 + 4 ).str( "px;\"/></a>" ).ToString();
							dat += "<img src=\"minesweeper_frame_counter.png\" style=\"position: absolute; top: -33px; left: 21px;\"/>";
							mine_counter = app7.minesweeper_game.initial_mines;

							foreach (dynamic _v in Lang13.Enumerate( app7.minesweeper_game.tiles, typeof(MineTile) )) {
								T7 = _v;
								

								if ( T7.flagged == 1 ) {
									mine_counter--;
								}
							}
							dat += "<img src=\"minesweeper_counter_" + Num13.Floor( Convert.ToDouble( mine_counter / 100 ) ) % 10 + ".png\" style=\"position: absolute; top: -32px; left: 22px;\"/>";
							dat += "<img src=\"minesweeper_counter_" + Num13.Floor( Convert.ToDouble( mine_counter / 10 ) ) % 10 + ".png\" style=\"position: absolute; top: -32px; left: 35px;\"/>";
							dat += "<img src=\"minesweeper_counter_" + mine_counter % 10 + ".png\" style=\"position: absolute; top: -32px; left: 48px;\"/>";
							dat += "<img src=\"minesweeper_frame_counter.png\" style=\"position: absolute; top: -33px; left: " + ( app7.minesweeper_game.columns * 16 - 30 ) + "px;\"/>";
							time_counter = Num13.Floor( ( Game13.time - app7.minesweeper_game.timer ) / 10 );
							time_counter = Num13.MinInt( 999, time_counter );

							if ( !Lang13.Bool( app7.ingame ) || app7.minesweeper_game.gameover ) {
								time_counter = app7.minesweeper_game.end_timer;
							}
							dat += "<img src=\"minesweeper_counter_" + Num13.Floor( time_counter / 100 ) % 10 + ".png\" style=\"position: absolute; top: -32px; left: " + ( app7.minesweeper_game.columns * 16 - 29 ) + "px;\"/>";
							dat += "<img src=\"minesweeper_counter_" + Num13.Floor( time_counter / 10 ) % 10 + ".png\" style=\"position: absolute; top: -32px; left: " + ( app7.minesweeper_game.columns * 16 - 16 ) + "px;\"/>";
							dat += "<img src=\"minesweeper_counter_" + time_counter % 10 + ".png\" style=\"position: absolute; top: -32px; left: " + ( app7.minesweeper_game.columns * 16 - 3 ) + "px;\"/>";
							dat += "<img src=\"minesweeper_border_cornertopleft.png\" style=\"position: absolute; top: -16px; left: 0px;\"/>";
							dat += "<img src=\"minesweeper_border_cornerbotleft.png\" style=\"position: absolute; top: " + app7.minesweeper_game.rows * 16 + "px; left: 0px;\"/>";
							dat += "<img src=\"minesweeper_border_cornertopright.png\" style=\"position: absolute; top: -16px; left: " + ( app7.minesweeper_game.columns * 16 + 16 ) + "px;\"/>";
							dat += "<img src=\"minesweeper_border_cornerbotright.png\" style=\"position: absolute; top: " + app7.minesweeper_game.rows * 16 + "px; left: " + ( app7.minesweeper_game.columns * 16 + 16 ) + "px;\"/>";
							x3 = null;
							x3 = 1;

							while (( x3 ??0) <= Convert.ToDouble( app7.minesweeper_game.columns )) {
								dat += "<img src=\"minesweeper_border_top.png\" style=\"position: absolute; top: -16px; left: " + ( x3 ??0) * 16 + "px;\"/>";
								x3++;
							}
							x4 = null;
							x4 = 1;

							while (( x4 ??0) <= Convert.ToDouble( app7.minesweeper_game.columns )) {
								dat += "<img src=\"minesweeper_border_bot.png\" style=\"position: absolute; top: " + app7.minesweeper_game.rows * 16 + "px; left: " + ( x4 ??0) * 16 + "px;\"/>";
								x4++;
							}
							y = null;
							y = 0;

							while (( y ??0) < Convert.ToDouble( app7.minesweeper_game.rows )) {
								dat += "<img src=\"minesweeper_border_left.png\" style=\"position: absolute; top: " + ( y ??0) * 16 + "px; left: 0px;\"/>";
								y++;
							}
							y2 = null;
							y2 = 0;

							while (( y2 ??0) < Convert.ToDouble( app7.minesweeper_game.rows )) {
								dat += "<img src=\"minesweeper_border_right.png\" style=\"position: absolute; top: " + ( y2 ??0) * 16 + "px; left: " + ( app7.minesweeper_game.columns * 16 + 16 ) + "px;\"/>";
								y2++;
							}
							dat += "</div>";

							if ( app7.minesweeper_game.current_difficulty != "custom" ) {
								dat += "<br>" + app7.minesweeper_game.current_difficulty + " difficulty highscore held by <b>" + GlobalVars.minesweeper_best_players[app7.minesweeper_game.current_difficulty] + "</b> (in <b>" + GlobalVars.minesweeper_station_highscores[app7.minesweeper_game.current_difficulty] + "</b> seconds)";
							}
						}
						break;
					case 107:
						
						if ( Lang13.Bool( user.client ) ) {
							C5 = new Asset_Simple_PdaSpesspets();
							GlobalFuncs.send_asset_list( user.client, C5.assets );
						}
						app8 = Lang13.FindIn( typeof(PdaApp_Spesspets), this.applications );
						dat += "<h4><img src=" + app8.icon + ".png> Spess Pets</h4>";

						if ( Lang13.Bool( app8 ) ) {
							dat += "<br>Name = " + app8.petname + "<br>Level = " + app8.level + "<br>\n						<div style=\"position: relative; left: 0; top: 0;\">\n						<img src=\"spesspets_bg.png\" style=\"position: relative; top: 0; left: 0;\"/>\n						";

							switch ((int)( app8.game_state )) {
								case 0:
									dat += new Txt( "<br><a href='byond://?src=" ).Ref( this ).str( ";choice=eggPrev'><img src=\"pda_snake_arrow_west.png\"></a><a href='byond://?src=" ).Ref( this ).str( ";choice=eggNext'><img src=\"pda_snake_arrow_east.png\"></a>" ).ToString();
									dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggChose'><img src=\"spesspets_egg0.png\" style=\"position: absolute; top: 32px; left: 32px;\"/></a>" ).ToString();
									dat += "</div>";
									break;
								case 1:
									eggstate = 0;

									if ( Convert.ToDouble( app8.hatching ) > 1200 ) {
										eggstate = 3;
									} else if ( Convert.ToDouble( app8.hatching ) > 600 ) {
										eggstate = 2;
									} else if ( Convert.ToDouble( app8.hatching ) > 300 ) {
										eggstate = 1;
									}
									dat += "<img src=\"spesspets_egg" + eggstate + ".png\" style=\"position: absolute; top: 32px; left: 32px;\"/>";

									if ( eggstate >= 2 ) {
										dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggHatch'><img src=\"spesspets_hatch.png\" style=\"position: absolute; top: 64px; left: 0px;\"/></a>" ).ToString();
									}
									break;
								case 2:
									
									if ( app8.ishungry ) {
										dat += "<img src=\"spesspets_hunger.png\" style=\"position: absolute; top: 32px; left: 64px;\"/>";
									}

									if ( app8.isdirty ) {
										dat += "<img src=\"spesspets_dirty.png\" style=\"position: absolute; top: 32px; left: 96px;\"/>";
									}

									if ( app8.ishurt != 0 ) {
										dat += "<img src=\"spesspets_hurt.png\" style=\"position: absolute; top: 32px; left: 128px;\"/>";
									}

									if ( app8.isatwork != 0 ) {
										dat += "<img src=\"spesspets_mine.png\" style=\"position: absolute; top: 32px; left: 32px;\"/>";
									} else {
										dat += "<img src=\"spesspets_" + app8.race + ".png\" style=\"position: absolute; top: 0px; left: 0px;\"/>";

										if ( app8.issleeping != 0 ) {
											dat += "<img src=\"spesspets_sleep.png\" style=\"position: absolute; top: 0px; left: 32px;\"/>";
										} else {
											dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggTalk'><img src=\"spesspets_talk.png\" style=\"position: absolute; top: 96px; left: 0px;\"/></a>" ).ToString();
											dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggWalk'><img src=\"spesspets_walk.png\" style=\"position: absolute; top: 96px; left: 32px;\"/></a>" ).ToString();

											if ( app8.ishungry ) {
												dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggFeed'><img src=\"spesspets_feed.png\" style=\"position: absolute; top: 96px; left: 64px;\"/></a>" ).ToString();
											}

											if ( app8.isdirty ) {
												dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggClean'><img src=\"spesspets_clean.png\" style=\"position: absolute; top: 96px; left: 96px;\"/></a>" ).ToString();
											}

											if ( app8.ishurt != 0 ) {
												dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggHeal'><img src=\"spesspets_heal.png\" style=\"position: absolute; top: 112px; left: 0px;\"/></a>" ).ToString();
											}
											dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggFight'><img src=\"spesspets_fight.png\" style=\"position: absolute; top: 112px; left: 32px;\"/></a>" ).ToString();
											dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggVisit'><img src=\"spesspets_visit.png\" style=\"position: absolute; top: 112px; left: 64px;\"/></a>" ).ToString();

											if ( Convert.ToDouble( app8.level ) >= 16 ) {
												dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggWork'><img src=\"spesspets_work.png\" style=\"position: absolute; top: 112px; left: 96px;\"/></a>" ).ToString();
											}
										}
									}

									if ( app8.total_coins != 0 ) {
										dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggRate'><img src=\"spesspets_rate.png\" style=\"position: absolute; top: 96px; left: 128px;\"/></a>" ).ToString();
									}

									if ( app8.total_coins != 0 ) {
										dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";choice=eggCash'><img src=\"spesspets_cash.png\" style=\"position: absolute; top: 112px; left: 128px;\"/></a>" ).ToString();
									}
									dat += "</div>";
									break;
								case 3:
									dat += "</div>";
									break;
							}

							if ( app8.last_spoken != "" ) {
								dat += "<br><br><br><br>" + app8.last_spoken;
							}

							if ( app8.total_coins != 0 ) {
								dat += "<br>nanocoins: " + app8.total_coins;
							}
						}
						break;
					default:
						dat += this.cart;
						break;
				}
			}
			dat += "</body></html>";
			Interface13.Browse( user, dat, "window=pda;size=400x444;border=1;can_resize=1;can_close=0;can_minimize=0" );
			GlobalFuncs.onclose( user, "pda", this );
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic MouseDrop( Mob over_object = null, dynamic src_location = null, Ent_Static over_location = null, dynamic src_control = null, dynamic over_control = null, string _params = null ) {
			Mob M = null;

			M = Task13.User;

			if ( !( over_object is Obj_Screen ) && this.can_use( M ) ) {
				return this.attack_self( M );
			}
			return null;
		}

		// Function from file: PDA.dm
		public override dynamic GetID(  ) {
			return this.id;
		}

		// Function from file: PDA.dm
		public override dynamic GetAccess(  ) {
			
			if ( Lang13.Bool( this.id ) ) {
				return this.id.GetAccess();
			} else {
				return base.GetAccess();
			}
		}

		// Function from file: PDA.dm
		public ByTable available_pdas(  ) {
			ByTable names = null;
			ByTable plist = null;
			ByTable namecounts = null;
			Obj_Item_Device_Pda P = null;
			dynamic name = null;

			names = new ByTable();
			plist = new ByTable();
			namecounts = new ByTable();

			if ( this.toff ) {
				GlobalFuncs.to_chat( Task13.User, "Turn on your receiver in order to send messages." );
				return null;
			}

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.PDAs, typeof(Obj_Item_Device_Pda) )) {
				P = _a;
				

				if ( !Lang13.Bool( P.owner ) ) {
					continue;
				} else if ( P.hidden ) {
					continue;
				} else if ( P == this ) {
					continue;
				} else if ( P.toff ) {
					continue;
				}
				name = P.owner;

				if ( names.Contains( name ) ) {
					namecounts[name]++;
					name = "" + name + " (" + namecounts[name] + ")";
				} else {
					names.Add( name );
					namecounts[name] = 1;
				}
				plist["" + name] = P;
			}
			return plist;
		}

		// Function from file: PDA.dm
		public void explode(  ) {
			dynamic T = null;
			Ent_Static M = null;

			
			if ( !this.detonate ) {
				return;
			}
			T = GlobalFuncs.get_turf( this.loc );

			if ( this.loc is Mob ) {
				M = this.loc;
				((dynamic)M).show_message( "<span class='warning'>Your " + this + " explodes!</span>", 1 );
			}

			if ( Lang13.Bool( T ) ) {
				((Tile)T).hotspot_expose( 700, 125, null, this.loc is Tile );
				GlobalFuncs.explosion( T, -1, -1, 2, 3 );
			}
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: PDA.dm
		public void id_check( dynamic user = null, int choice = 0 ) {
			dynamic I = null;
			dynamic I2 = null;
			dynamic old_id = null;

			
			if ( choice == 1 ) {
				
				if ( Lang13.Bool( this.id ) ) {
					this.remove_id();
				} else {
					I = ((Mob)user).get_active_hand();

					if ( I is Obj_Item_Weapon_Card_Id ) {
						
						if ( Lang13.Bool( user.drop_item( I, this ) ) ) {
							this.id = I;
						}
					}
				}
			} else {
				I2 = ((Mob)user).get_active_hand();

				if ( I2 is Obj_Item_Weapon_Card_Id && Lang13.Bool( I2.registered_name ) ) {
					old_id = this.id;

					if ( Lang13.Bool( user.drop_item( I2, this ) ) ) {
						this.id = I2;
						((Mob)user).put_in_hands( old_id );
					}
				}
			}

			if ( Lang13.Bool( this.id ) && this.incoming_transactions.len != 0 ) {
				this.receive_incoming_transactions( this.id );
			}
			return;
		}

		// Function from file: PDA.dm
		public void create_message( Mob U = null, dynamic P = null ) {
			U = U ?? Task13.User;

			dynamic t = null;
			Obj_Machinery_MessageServer useMS = null;
			Obj_Machinery_MessageServer MS = null;
			Game_Data signal = null;
			int useTC = 0;
			dynamic pos = null;
			Mob_Dead_Observer M = null;
			dynamic who = null;
			Mob_Living_Silicon_Ai ai = null;
			dynamic O = null;
			dynamic L = null;

			t = Interface13.Input( U, "Please enter message", this.name, null, null, InputType.Str );
			t = String13.SubStr( GlobalFuncs.sanitize( t ), 1, 1024 );

			if ( !Lang13.Bool( t ) || !( P is Obj_Item_Device_Pda ) ) {
				return;
			}

			if ( !GlobalFuncs.in_range( this, U ) && this.loc != U ) {
				return;
			}

			if ( P == null || P.toff || this.toff ) {
				return;
			}

			if ( this.last_text != 0 && Game13.time < this.last_text + 5 ) {
				return;
			}

			if ( !this.can_use( U ) ) {
				return;
			}
			this.last_text = Game13.time;
			useMS = null;

			if ( GlobalVars.message_servers != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.message_servers, typeof(Obj_Machinery_MessageServer) )) {
					MS = _a;
					

					if ( MS.active ) {
						useMS = MS;
						break;
					}
				}
			}
			signal = this.telecomms_process();
			useTC = 0;

			if ( signal != null ) {
				
				if ( Lang13.Bool( ((dynamic)signal).data["done"] ) ) {
					useTC = 1;
					pos = GlobalFuncs.get_turf( P );

					if ( Lang13.Bool( ((dynamic)signal).data["level"].Contains( pos.z ) ) ) {
						useTC = 2;

						if ( Convert.ToDouble( ((dynamic)signal).data["compression"] ) > 0 ) {
							t = GlobalFuncs.Gibberish( t, ((dynamic)signal).data["compression"] + 50 );
						}
					}
				}
			}

			if ( useMS != null && useTC != 0 ) {
				
				if ( useTC != 2 ) {
					GlobalFuncs.to_chat( U, "ERROR: Cannot reach recepient." );
					return;
				}
				useMS.send_pda_message( "" + P.owner, "" + this.owner, "" + t );
				this.tnote += "<i><b>&rarr; To " + P.owner + ":</b></i><br>" + t + "<br>";
				P.tnote += new Txt( "<i><b>&larr; From <a href='byond://?src=" ).Ref( P ).str( ";choice=Message;target=" ).Ref( this ).str( "'>" ).item( this.owner ).str( "</a> (" ).item( this.ownjob ).str( "):</b></i><br>" ).item( t ).str( "<br>" ).ToString();

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.player_list, typeof(Mob_Dead_Observer) )) {
					M = _b;
					

					if ( M.stat == 2 && M.client != null && Lang13.Bool( M.client.prefs.toggles & 32768 ) ) {
						M.show_message( "<span class='game say'>PDA Message - <span class='name'>" + this.owner + "</span> -> <span class='name'>" + P.owner + "</span>: <span class='message'>" + t + "</span></span>" );
					}
				}

				if ( Rand13.PercentChance( 15 ) ) {
					who = this.owner;

					if ( Rand13.PercentChance( 50 ) ) {
						who = P.owner;
					}

					foreach (dynamic _c in Lang13.Enumerate( GlobalVars.mob_list, typeof(Mob_Living_Silicon_Ai) )) {
						ai = _c;
						

						if ( ai.aiPDA != P && ai.aiPDA != this ) {
							ai.show_message( "<i>Intercepted message from <b>" + who + "</b>: " + t + "</i>" );
						}
					}
				}

				if ( !Lang13.Bool( P.silent ) ) {
					GlobalFuncs.playsound( P.loc, "sound/machines/twobeep.ogg", 50, 1 );
				}

				foreach (dynamic _d in Lang13.Enumerate( Map13.FetchHearers( P.loc, 3 ) )) {
					O = _d;
					

					if ( !Lang13.Bool( P.silent ) ) {
						O.show_message( new Txt().icon( P ).str( " *" ).item( P.ttone ).str( "*" ).ToString() );
					}
				}
				L = null;

				if ( P.loc != null && P.loc is Mob_Living ) {
					L = P.loc;
				} else {
					L = GlobalFuncs.get( P, typeof(Mob_Living_Silicon) );
				}

				if ( Lang13.Bool( L ) ) {
					L.show_message( new Txt().icon( P ).str( " <b>Message from " ).item( this.owner ).str( " (" ).item( this.ownjob ).str( "), </b>\"" ).item( t ).str( "\" (<a href='byond://?src=" ).Ref( P ).str( ";choice=Message;skiprefresh=1;target=" ).Ref( this ).str( "'>Reply</a>)" ).ToString(), 2 );
				}
				GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]PDA: " + ( "" + Task13.User + " (PDA: " + this.name + ") sent \"" + t + "\" to " + P.name ) ) );
				P.overlays.len = 0;
				P.overlays += new Image( "icons/obj/pda.dmi", "pda-r" );
			} else {
				GlobalFuncs.to_chat( U, "<span class='notice'>ERROR: Messaging server is not responding.</span>" );
			}
			return;
		}

		// Function from file: PDA.dm
		public void remove_id(  ) {
			Ent_Static M = null;

			
			if ( Lang13.Bool( this.id ) ) {
				
				if ( this.loc is Mob ) {
					M = this.loc;
					((dynamic)M).put_in_hands( this.id );
					GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You remove the ID from the " + this.name + ".</span>" );
				} else {
					this.id.loc = GlobalFuncs.get_turf( this );
				}
				this.id = null;
			}
			return;
		}

		// Function from file: PDA.dm
		public void receive_incoming_transactions( dynamic ID_card = null ) {
			dynamic transac = null;
			Transaction T = null;
			Ent_Static L = null;

			
			foreach (dynamic _a in Lang13.Enumerate( this.incoming_transactions )) {
				transac = _a;
				

				if ( !( this.id.virtual_wallet != null ) ) {
					((Obj_Item_Weapon_Card_Id)this.id).update_virtual_wallet();
				}
				this.id.virtual_wallet.money += Convert.ToDouble( transac[2] );
				T = new Transaction();
				T.target_name = transac[1];
				T.purpose = "Money transfer";
				T.amount = transac[2];
				T.source_terminal = transac[3];
				T.date = GlobalVars.current_date_string;
				T.time = GlobalFuncs.worldtime2text();
				this.id.virtual_wallet.transaction_log.Add( T );
			}
			this.incoming_transactions = new ByTable();
			L = null;

			if ( this.loc != null && this.loc is Mob_Living ) {
				L = this.loc;
			}
			GlobalFuncs.to_chat( L, new Txt().icon( this ).str( "<span class='notice'> <b>Transactions successfully received! </b></span>" ).ToString() );
			return;
		}

		// Function from file: PDA.dm
		public int receive_funds( dynamic creditor_name = null, double? arbitrary_sum = null, string other_pda = null ) {
			dynamic U = null;
			dynamic O = null;
			dynamic L = null;
			Transaction T = null;

			U = GlobalFuncs.get_turf( this );

			if ( !this.silent ) {
				GlobalFuncs.playsound( U, "sound/machines/twobeep.ogg", 50, 1 );
			}

			foreach (dynamic _a in Lang13.Enumerate( Map13.FetchHearers( U, 3 ) )) {
				O = _a;
				

				if ( !this.silent ) {
					O.show_message( new Txt().icon( this ).str( " *" ).item( this.ttone ).str( "*" ).ToString() );
				}
			}
			L = null;

			if ( this.loc != null && this.loc is Mob_Living ) {
				L = this.loc;
			} else {
				L = GlobalFuncs.get( this, typeof(Mob_Living_Silicon) );
			}

			if ( Lang13.Bool( L ) ) {
				GlobalFuncs.to_chat( L, new Txt().icon( this ).str( " <b>Money transfer from " ).item( creditor_name ).str( " (" ).item( arbitrary_sum ).str( "$) </b>" ).item( ( Lang13.Bool( this.id ) ? "" : "Insert your ID in the PDA to receive the funds." ) ).ToString() );
			}
			this.tnote += "<i><b>&larr; Money transfer from " + creditor_name + " (" + arbitrary_sum + "$)<br>";

			if ( Lang13.Bool( this.id ) ) {
				
				if ( !( this.id.virtual_wallet != null ) ) {
					((Obj_Item_Weapon_Card_Id)this.id).update_virtual_wallet();
				}
				this.id.virtual_wallet.money += arbitrary_sum ??0;
				T = new Transaction();
				T.target_name = creditor_name;
				T.purpose = "Money transfer";
				T.amount = arbitrary_sum;
				T.source_terminal = other_pda;
				T.date = GlobalVars.current_date_string;
				T.time = GlobalFuncs.worldtime2text();
				this.id.virtual_wallet.transaction_log.Add( T );
				return 1;
			} else {
				this.incoming_transactions.Or( new ByTable(new object [] { new ByTable(new object [] { creditor_name, arbitrary_sum, other_pda }) }) );
				return 2;
			}
		}

		// Function from file: PDA.dm
		public void withdraw_arbitrary_sum( Mob user = null, double? arbitrary_sum = null ) {
			Mob H = null;

			
			if ( user is Mob_Living_Carbon_Human ) {
				H = user;

				if ( ((dynamic)H).wear_id is Obj_Item_Weapon_Storage_Wallet ) {
					GlobalFuncs.dispense_cash( arbitrary_sum, ((dynamic)H).wear_id );
					GlobalFuncs.to_chat( Task13.User, new Txt().icon( this ).str( "<span class='notice'>Funds were transferred into your physical wallet!</span>" ).ToString() );
					return;
				}
			}
			GlobalFuncs.dispense_cash( arbitrary_sum, GlobalFuncs.get_turf( this ) );
			return;
		}

		// Function from file: PDA.dm
		public bool can_use( dynamic user = null ) {
			
			if ( Lang13.Bool( user ) && user is Mob ) {
				
				if ( Lang13.Bool( user.stat ) || ((Mob)user).restrained() || user.paralysis != 0 || Lang13.Bool( user.stunned ) || user.weakened != 0 ) {
					return false;
				}

				if ( this.loc == user ) {
					return true;
				}
			}
			return false;
		}

		// Function from file: PDA.dm
		[Verb]
		[VerbInfo( name: "Remove pen", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void verb_remove_pen(  ) {
			dynamic O = null;
			Ent_Static M = null;

			
			if ( Task13.User is Mob_Living_Silicon ) {
				return;
			}

			if ( this.can_use( Task13.User ) ) {
				O = Lang13.FindIn( typeof(Obj_Item_Weapon_Pen), this );

				if ( Lang13.Bool( O ) ) {
					
					if ( this.loc is Mob ) {
						M = this.loc;

						if ( ((Mob)M).get_active_hand() == null ) {
							((dynamic)M).put_in_hands( O );
							GlobalFuncs.to_chat( Task13.User, new Txt( "<span class='notice'>You remove " ).the( O ).item().str( " from " ).the( this ).item().str( ".</span>" ).ToString() );
							return;
						}
					}
					O.loc = GlobalFuncs.get_turf( this );
				} else {
					GlobalFuncs.to_chat( Task13.User, "<span class='notice'>This PDA does not have a pen in it.</span>" );
				}
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You cannot do this while restrained.</span>" );
			}
			return;
		}

		// Function from file: PDA.dm
		[Verb]
		[VerbInfo( name: "Remove id", group: "Object", access: VerbAccess.InUserContents, range: 127 )]
		public void verb_remove_id(  ) {
			
			if ( Task13.User is Mob_Living_Silicon ) {
				return;
			}

			if ( this.can_use( Task13.User ) ) {
				
				if ( Lang13.Bool( this.id ) ) {
					this.remove_id();
				} else {
					GlobalFuncs.to_chat( Task13.User, "<span class='notice'>This PDA does not have an ID in it.</span>" );
				}
			} else {
				GlobalFuncs.to_chat( Task13.User, "<span class='notice'>You cannot do this while restrained.</span>" );
			}
			return;
		}

	}

}
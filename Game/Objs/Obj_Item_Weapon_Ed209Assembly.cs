// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Ed209Assembly : Obj_Item_Weapon {

		public int build_step = 0;
		public string created_name = "ED-209 Security Robot";
		public string lasercolor = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "ed209_frame";
			this.icon = "icons/obj/aibots.dmi";
			this.icon_state = "ed209_frame";
		}

		public Obj_Item_Weapon_Ed209Assembly ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: construction.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			string t = null;
			string newcolor = null;
			dynamic WT = null;
			dynamic coil = null;
			string newname = null;
			dynamic T = null;
			dynamic T2 = null;

			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( A is Obj_Item_Weapon_Pen ) {
				t = GlobalFuncs.stripped_input( user, "Enter new robot name", this.name, this.created_name, 26 );

				if ( !Lang13.Bool( t ) ) {
					return null;
				}

				if ( !( Map13.GetDistance( this, Task13.User ) <= 1 ) && this.loc != Task13.User ) {
					return null;
				}
				this.created_name = t;
				return null;
			}

			switch ((int)( this.build_step )) {
				case 0:
				case 1:
					
					if ( A is Obj_Item_RobotParts_LLeg || A is Obj_Item_RobotParts_RLeg ) {
						
						if ( !((Mob)user).unEquip( A ) ) {
							return null;
						}
						GlobalFuncs.qdel( A );
						this.build_step++;
						user.WriteMsg( "<span class='notice'>You add the robot leg to " + this + ".</span>" );
						this.name = "legs/frame assembly";

						if ( this.build_step == 1 ) {
							this.item_state = "ed209_leg";
							this.icon_state = "ed209_leg";
						} else {
							this.item_state = "ed209_legs";
							this.icon_state = "ed209_legs";
						}
					}
					break;
				case 2:
					newcolor = "";

					if ( A is Obj_Item_Clothing_Suit_Redtag ) {
						newcolor = "r";
					} else if ( A is Obj_Item_Clothing_Suit_Bluetag ) {
						newcolor = "b";
					}

					if ( Lang13.Bool( newcolor ) || A is Obj_Item_Clothing_Suit_Armor_Vest ) {
						
						if ( !((Mob)user).unEquip( A ) ) {
							return null;
						}
						this.lasercolor = newcolor;
						GlobalFuncs.qdel( A );
						this.build_step++;
						user.WriteMsg( "<span class='notice'>You add the armor to " + this + ".</span>" );
						this.name = "vest/legs/frame assembly";
						this.item_state = "" + this.lasercolor + "ed209_shell";
						this.icon_state = "" + this.lasercolor + "ed209_shell";
					}
					break;
				case 3:
					
					if ( A is Obj_Item_Weapon_Weldingtool ) {
						WT = A;

						if ( ((Obj_Item_Weapon_Weldingtool)WT).remove_fuel( 0, user ) ) {
							this.build_step++;
							this.name = "shielded frame assembly";
							user.WriteMsg( "<span class='notice'>You weld the vest to " + this + ".</span>" );
						}
					}
					break;
				case 4:
					
					switch ((string)( this.lasercolor )) {
						case "b":
							
							if ( !( A is Obj_Item_Clothing_Head_Helmet_Bluetaghelm ) ) {
								return null;
							}
							break;
						case "r":
							
							if ( !( A is Obj_Item_Clothing_Head_Helmet_Redtaghelm ) ) {
								return null;
							}
							break;
						case "":
							
							if ( !( A is Obj_Item_Clothing_Head_Helmet ) ) {
								return null;
							}
							break;
					}

					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					GlobalFuncs.qdel( A );
					this.build_step++;
					user.WriteMsg( "<span class='notice'>You add the helmet to " + this + ".</span>" );
					this.name = "covered and shielded frame assembly";
					this.item_state = "" + this.lasercolor + "ed209_hat";
					this.icon_state = "" + this.lasercolor + "ed209_hat";
					break;
				case 5:
					
					if ( A is Obj_Item_Device_Assembly_ProxSensor ) {
						
						if ( !((Mob)user).unEquip( A ) ) {
							return null;
						}
						GlobalFuncs.qdel( A );
						this.build_step++;
						user.WriteMsg( "<span class='notice'>You add the prox sensor to " + this + ".</span>" );
						this.name = "covered, shielded and sensored frame assembly";
						this.item_state = "" + this.lasercolor + "ed209_prox";
						this.icon_state = "" + this.lasercolor + "ed209_prox";
					}
					break;
				case 6:
					
					if ( A is Obj_Item_Stack_CableCoil ) {
						coil = A;

						if ( ( ((Obj_Item_Stack)coil).get_amount() ??0) < 1 ) {
							user.WriteMsg( "<span class='warning'>You need one length of cable to wire the ED-209!</span>" );
							return null;
						}
						user.WriteMsg( "<span class='notice'>You start to wire " + this + "...</span>" );

						if ( GlobalFuncs.do_after( user, 40, null, this ) ) {
							
							if ( ( ((Obj_Item_Stack)coil).get_amount() ??0) >= 1 && this.build_step == 6 ) {
								((Obj_Item_Stack)coil).use( 1 );
								this.build_step = 7;
								user.WriteMsg( "<span class='notice'>You wire the ED-209 assembly.</span>" );
								this.name = "wired ED-209 assembly";
							}
						}
					}
					break;
				case 7:
					newname = "";

					switch ((string)( this.lasercolor )) {
						case "b":
							
							if ( !( A is Obj_Item_Weapon_Gun_Energy_Laser_Bluetag ) ) {
								return null;
							}
							newname = "bluetag ED-209 assembly";
							break;
						case "r":
							
							if ( !( A is Obj_Item_Weapon_Gun_Energy_Laser_Redtag ) ) {
								return null;
							}
							newname = "redtag ED-209 assembly";
							break;
						case "":
							
							if ( !( A is Obj_Item_Weapon_Gun_Energy_Gun_Advtaser ) ) {
								return null;
							}
							newname = "taser ED-209 assembly";
							break;
						default:
							return null;
							break;
					}

					if ( !((Mob)user).unEquip( A ) ) {
						return null;
					}
					this.name = newname;
					this.build_step++;
					user.WriteMsg( "<span class='notice'>You add " + A + " to " + this + ".</span>" );
					this.item_state = "" + this.lasercolor + "ed209_taser";
					this.icon_state = "" + this.lasercolor + "ed209_taser";
					GlobalFuncs.qdel( A );
					break;
				case 8:
					
					if ( A is Obj_Item_Weapon_Screwdriver ) {
						GlobalFuncs.playsound( this.loc, "sound/items/Screwdriver.ogg", 100, 1 );
						T = GlobalFuncs.get_turf( user );
						user.WriteMsg( "<span class='notice'>You start attaching the gun to the frame...</span>" );
						Task13.Sleep( 40 );

						if ( GlobalFuncs.get_turf( user ) == T ) {
							this.build_step++;
							this.name = "armed " + this.name;
							user.WriteMsg( "<span class='notice'>Taser gun attached.</span>" );
						}
					}
					break;
				case 9:
					
					if ( A is Obj_Item_Weapon_StockParts_Cell ) {
						
						if ( !((Mob)user).unEquip( A ) ) {
							return null;
						}
						this.build_step++;
						user.WriteMsg( "<span class='notice'>You complete the ED-209.</span>" );
						T2 = GlobalFuncs.get_turf( this );
						new Mob_Living_SimpleAnimal_Bot_Ed209( T2, this.created_name, this.lasercolor );
						GlobalFuncs.qdel( A );
						((Mob)user).unEquip( this, 1 );
						GlobalFuncs.qdel( this );
					}
					break;
			}
			return null;
		}

	}

}
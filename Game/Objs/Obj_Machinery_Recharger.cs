// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Recharger : Obj_Machinery {

		public bool self_powered = false;
		public dynamic charging = null;
		public dynamic appearance_backup = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 4;
			this.active_power_usage = 250;
			this.ghost_read = false;
			this.machine_flags = 24;
			this.icon_state = "recharger0";
		}

		// Function from file: recharger.dm
		public Obj_Machinery_Recharger ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;

			if ( this.self_powered ) {
				this.use_power = 0;
				this.idle_power_usage = 0;
				this.active_power_usage = 0;
			}
			return;
		}

		// Function from file: recharger.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			
			if ( Lang13.Bool( this.charging ) ) {
				this.overlays.len = 0;
				this.charging.update_icon();
				this.overlays.Add( this.charging.appearance );
				this.icon_state = "recharger1";
			} else {
				this.overlays.len = 0;
				this.icon_state = "recharger0";
			}
			return null;
		}

		// Function from file: recharger.dm
		public override dynamic emp_act( int severity = 0 ) {
			dynamic E = null;
			dynamic B = null;

			
			if ( ( this.stat & 3 ) != 0 || !Lang13.Bool( this.anchored ) ) {
				base.emp_act( severity );
				return null;
			}

			if ( this.charging is Obj_Item_Weapon_Gun_Energy ) {
				E = this.charging;

				if ( Lang13.Bool( E.power_supply ) ) {
					E.power_supply.emp_act( severity );
				}
			} else if ( this.charging is Obj_Item_Weapon_Melee_Baton ) {
				B = this.charging;

				if ( Lang13.Bool( B.bcell ) ) {
					B.bcell.charge = 0;
				}
			}
			base.emp_act( severity );
			return null;
		}

		// Function from file: recharger.dm
		public override dynamic process(  ) {
			dynamic E = null;
			dynamic M = null;
			dynamic L = null;
			dynamic B = null;

			
			if ( !Lang13.Bool( this.anchored ) ) {
				this.icon_state = "recharger4";
				return null;
			}

			if ( !this.self_powered && ( this.stat & 3 ) != 0 ) {
				
				if ( Lang13.Bool( this.charging ) ) {
					this.charging.appearance = this.appearance_backup;
					this.charging.update_icon();
					this.charging.loc = this.loc;
					this.visible_message( new Txt( "<span class='notice'>" ).item( this ).str( " powers down and ejects " ).the( this.charging ).item().str( ".</span>" ).ToString() );
					this.charging = null;
					this.use_power = 1;
					this.appearance_backup = null;
					this.update_icon();
				}
				return null;
			}

			if ( Lang13.Bool( this.charging ) ) {
				
				if ( this.charging is Obj_Item_Weapon_Gun_Energy ) {
					E = this.charging;

					if ( Convert.ToDouble( E.power_supply.charge + 100 ) < Convert.ToDouble( E.power_supply.maxcharge ) ) {
						((Obj_Item_Weapon_Cell)E.power_supply).give( 100 );
						this.icon_state = "recharger1";

						if ( !this.self_powered ) {
							this.f_use_power( 250 );
						}
						this.update_icon();
					} else {
						E.power_supply.charge = E.power_supply.maxcharge;
						this.update_icon();
						this.icon_state = "recharger2";
					}
					return null;
				} else if ( this.charging is Obj_Item_EnergyMagazine ) {
					M = this.charging;

					if ( Convert.ToDouble( M.bullets + 3 ) < M.max_bullets ) {
						M.bullets = Num13.MinInt( M.max_bullets, Convert.ToInt32( M.bullets + 3 ) );
						this.icon_state = "recharger1";

						if ( !this.self_powered ) {
							this.f_use_power( 250 );
						}
						this.update_icon();
					} else {
						M.bullets = M.max_bullets;
						this.update_icon();
						this.icon_state = "recharger2";
					}
					return null;
				} else if ( this.charging is Obj_Item_AmmoStorage_Magazine_Lawgiver ) {
					L = this.charging;

					if ( !((Obj_Item_AmmoStorage_Magazine_Lawgiver)L).isFull() ) {
						
						if ( L.stuncharge != 100 ) {
							L.stuncharge += 20;
						} else if ( L.lasercharge != 100 ) {
							L.lasercharge += 20;
						} else if ( L.rapid_ammo_count != 5 ) {
							L.rapid_ammo_count++;
						} else if ( L.flare_ammo_count != 5 ) {
							L.flare_ammo_count++;
						} else if ( L.hi_ex_ammo_count != 5 ) {
							L.hi_ex_ammo_count++;
						}
						this.icon_state = "recharger1";

						if ( !this.self_powered ) {
							this.f_use_power( 200 );
						}
						this.update_icon();
					} else {
						this.update_icon();
						this.icon_state = "recharger2";
					}
					return null;
				} else if ( this.charging is Obj_Item_Weapon_Melee_Baton ) {
					B = this.charging;

					if ( Lang13.Bool( B.bcell ) ) {
						
						if ( ((Obj_Item_Weapon_Cell)B.bcell).give( 175 ) != 0 ) {
							this.icon_state = "recharger1";

							if ( !this.self_powered ) {
								this.f_use_power( 200 );
							}
						} else {
							this.icon_state = "recharger2";
						}
					} else {
						this.icon_state = "recharger0";
					}
				}
			}
			return null;
		}

		// Function from file: recharger.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: recharger.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Mob_Living_Silicon || Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return 1;
			}
			this.add_fingerprint( a );

			if ( Lang13.Bool( this.charging ) && this.Adjacent( a ) ) {
				this.charging.appearance = this.appearance_backup;
				this.charging.update_icon();
				this.charging.loc = this.loc;
				((Mob)a).put_in_hands( this.charging );
				this.charging = null;

				if ( !this.self_powered ) {
					this.use_power = 1;
				}
				this.appearance_backup = null;
				this.update_icon();
			}
			return null;
		}

		// Function from file: recharger.dm
		public override int wrenchAnchor( dynamic user = null ) {
			
			if ( Lang13.Bool( this.charging ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>Remove the charging item first!</span>" );
				return 0;
			}

			if ( base.wrenchAnchor( (object)(user) ) == 1 ) {
				this.pixel_x = 0;
				this.pixel_y = 0;
				this.update_icon();
			}
			return 0;
		}

		// Function from file: recharger.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Matrix M = null;

			
			if ( b is Mob_Living_Silicon ) {
				return null;
			}

			if ( a is Obj_Item_Weapon_Gun_Energy || a is Obj_Item_Weapon_Melee_Baton || a is Obj_Item_EnergyMagazine || a is Obj_Item_AmmoStorage_Magazine_Lawgiver ) {
				
				if ( Lang13.Bool( this.charging ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>There's " ).a( this.charging ).item().str( " already charging inside!</span>" ).ToString() );
					return null;
				}

				if ( !Lang13.Bool( this.anchored ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You must anchor " ).the( this ).item().str( " before you can make use of it!</span>" ).ToString() );
					return null;
				}

				if ( ( this.stat & 3 ) != 0 ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>" + this + " isn't connected to a power source.</span>" );
					return null;
				}

				if ( a is Obj_Item_Weapon_Gun_Energy_Gun_Nuclear || a is Obj_Item_Weapon_Gun_Energy_Crossbow ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>Your gun's recharge port was removed to make room for a miniaturized reactor.</span>" );
					return null;
				}

				if ( a is Obj_Item_Weapon_Gun_Energy_Staff ) {
					GlobalFuncs.to_chat( b, "<span class='notice'>The recharger rejects the magical apparatus.</span>" );
					return null;
				}

				if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
					b.WriteMsg( new Txt( "<span class='warning'>You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
					return null;
				}
				this.appearance_backup = a.appearance;
				M = Num13.Matrix();
				M.Scale( 0.625 );
				M.Translate( 0, 6 );
				a.transform = M;
				this.charging = a;

				if ( !this.self_powered ) {
					this.use_power = 2;
				}
				this.update_icon();
				return null;
			}
			base.attackby( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: recharger.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			
			if ( Lang13.Bool( this.charging ) ) {
				this.charging.appearance = this.appearance_backup;
				this.charging.update_icon();
				this.charging.loc = this.loc;
				this.charging = null;
			}
			this.appearance_backup = null;
			base.Destroy( (object)(brokenup) );
			return null;
		}

	}

}
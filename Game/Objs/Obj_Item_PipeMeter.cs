// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_PipeMeter : Obj_Item {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "buildpipe";
			this.w_class = 4;
			this.icon = "icons/obj/atmospherics/pipes/pipe_item.dmi";
			this.icon_state = "meter";
		}

		public Obj_Item_PipeMeter ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: construction.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );

			if ( !( A is Obj_Item_Weapon_Wrench ) ) {
				return base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			}

			if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Machinery_Atmospherics_Pipe), this.loc ) ) ) {
				user.WriteMsg( "<span class='warning'>You need to fasten it to a pipe!</span>" );
				return 1;
			}
			new Obj_Machinery_Meter( this.loc );
			GlobalFuncs.playsound( this.loc, "sound/items/ratchet.ogg", 50, 1 );
			user.WriteMsg( "<span class='notice'>You fasten the meter to the pipe.</span>" );
			GlobalFuncs.qdel( this );
			return null;
		}

	}

}
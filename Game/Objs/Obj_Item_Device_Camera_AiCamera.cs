// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Camera_AiCamera : Obj_Item_Device_Camera {

		public bool in_camera_mode = false;

		public Obj_Item_Device_Camera_AiCamera ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: photography.dm
		public void camera_mode_on(  ) {
			this.in_camera_mode = true;
			GlobalFuncs.to_chat( Task13.User, "<B>Camera Mode activated</B>" );
			return;
		}

		// Function from file: photography.dm
		public void camera_mode_off(  ) {
			this.in_camera_mode = false;
			GlobalFuncs.to_chat( Task13.User, "<B>Camera Mode deactivated</B>" );
			return;
		}

		// Function from file: photography.dm
		public void toggle_camera_mode(  ) {
			
			if ( this.in_camera_mode ) {
				this.camera_mode_off();
			} else {
				this.camera_mode_on();
			}
			return;
		}

		// Function from file: photography.dm
		public void viewpictures(  ) {
			ByTable nametemp = null;
			dynamic find = null;
			Picture selection = null;
			Picture t = null;
			Obj_Item_Weapon_Photo P = null;
			Picture q = null;

			nametemp = new ByTable();

			if ( this.aipictures.len == 0 ) {
				GlobalFuncs.to_chat( Task13.User, "<font color=red><B>No images saved</B></font>" );
				return;
			}

			foreach (dynamic _a in Lang13.Enumerate( this.aipictures, typeof(Picture) )) {
				t = _a;
				
				nametemp.Add( t.fields["name"] );
			}
			find = Interface13.Input( "Select image (listed in order taken)", null, null, null, nametemp, InputType.Any );
			P = new Obj_Item_Weapon_Photo();

			foreach (dynamic _b in Lang13.Enumerate( this.aipictures, typeof(Picture) )) {
				q = _b;
				

				if ( q.fields["name"] == find ) {
					selection = q;
					break;
				}
			}
			P.icon = selection.fields["icon"];
			P.img = selection.fields["img"];
			P.info = selection.fields["info"];
			P.pixel_x = Convert.ToInt32( selection.fields["pixel_x"] );
			P.pixel_y = Convert.ToInt32( selection.fields["pixel_y"] );
			P.show( Task13.User );
			GlobalFuncs.to_chat( Task13.User, P.info );
			Lang13.Delete( P );
			P = null;
			return;
		}

	}

}
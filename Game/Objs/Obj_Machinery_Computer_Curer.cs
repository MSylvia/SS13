// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_Curer : Obj_Machinery_Computer {

		public int curing = 0;
		public bool virusing = false;
		public dynamic container = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "dna";
		}

		public Obj_Machinery_Computer_Curer ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: curer.dm
		public void createcure( dynamic container = null ) {
			Obj_Item_Weapon_ReagentContainers_Glass_Beaker product = null;
			dynamic B = null;
			ByTable data = null;

			product = new Obj_Item_Weapon_ReagentContainers_Glass_Beaker( this.loc );
			B = Lang13.FindIn( typeof(Reagent_Blood), container.reagents.reagent_list );
			data = new ByTable();
			data["antibodies"] = B.data["antibodies"];
			((Reagents)product.reagents).add_reagent( "antibodies", 30, data );
			this.alert_noise( "buzz" );
			return;
		}

		// Function from file: curer.dm
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return null;
			}
			Task13.User.machine = this;

			if ( Lang13.Bool( href_list["antibody"] ) ) {
				this.curing = 10;
			} else if ( Lang13.Bool( href_list["eject"] ) ) {
				this.container.loc = this.loc;
				this.container = null;
			}
			this.add_fingerprint( Task13.User );
			this.updateUsrDialog();
			return null;
		}

		// Function from file: curer.dm
		public override dynamic process(  ) {
			base.process();

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.f_use_power( 500 );

			if ( this.curing != 0 ) {
				this.curing -= 1;

				if ( this.curing == 0 ) {
					
					if ( Lang13.Bool( this.container ) ) {
						this.createcure( this.container );
					}
				}
			}
			return null;
		}

		// Function from file: curer.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			dynamic B = null;
			string code = null;
			dynamic V = null;

			
			if ( Lang13.Bool( base.attack_hand( (object)(a), (object)(b), (object)(c) ) ) ) {
				return null;
			}
			a.machine = this;

			if ( this.curing != 0 ) {
				dat = "Antibody production in progress";
			} else if ( this.virusing ) {
				dat = "Virus production in progress";
			} else if ( Lang13.Bool( this.container ) ) {
				B = Lang13.FindIn( typeof(Reagent_Blood), this.container.reagents.reagent_list );

				if ( Lang13.Bool( B ) ) {
					dat = "Blood sample inserted.";
					code = "";

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.ANTIGENS )) {
						V = _a;
						

						if ( ( ((int)( String13.ParseNumber( V ) ??0 )) & Convert.ToInt32( B.data["antibodies"] ) ) != 0 ) {
							code += GlobalVars.ANTIGENS[V];
						}
					}
					dat += "<BR>Antibodies: " + code;
					dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";antibody=1'>Begin antibody production</a>" ).ToString();
				} else {
					dat += "<BR>Please check container contents.";
				}
				dat += new Txt( "<BR><A href='?src=" ).Ref( this ).str( ";eject=1'>Eject container</a>" ).ToString();
			} else {
				dat = "Please insert a container.";
			}
			Interface13.Browse( a, dat, "window=computer;size=400x500" );
			GlobalFuncs.onclose( a, "computer" );
			return null;
		}

		// Function from file: curer.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: curer.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

		// Function from file: curer.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic C = null;
			Obj_Item_Weapon_ReagentContainers_Glass_Beaker product = null;
			ByTable data = null;

			
			if ( a is Obj_Item_Weapon_Screwdriver ) {
				return base.attackby( (object)(a), (object)(b), (object)(c) );
			}

			if ( a is Obj_Item_Weapon_ReagentContainers ) {
				C = b;

				if ( !Lang13.Bool( this.container ) ) {
					
					if ( Lang13.Bool( C.drop_item( a, this ) ) ) {
						this.container = a;
					}
				}
			}

			if ( a is Obj_Item_Weapon_Virusdish ) {
				
				if ( this.virusing ) {
					GlobalFuncs.to_chat( b, "<b>The pathogen materializer is still recharging.." );
					return null;
				}
				product = new Obj_Item_Weapon_ReagentContainers_Glass_Beaker( this.loc );
				data = new ByTable()
					.Set( "donor", null )
					.Set( "viruses", null )
					.Set( "blood_DNA", null )
					.Set( "blood_type", null )
					.Set( "resistances", null )
					.Set( "trace_chem", null )
					.Set( "virus2", new ByTable() )
					.Set( "antibodies", 0 )
				;
				data["virus2"] |= a.virus2;
				((Reagents)product.reagents).add_reagent( "blood", 30, data );
				this.virusing = true;
				Task13.Schedule( 1200, (Task13.Closure)(() => {
					this.virusing = false;
					return;
				}));
				this.alert_noise( "buzz" );
				return null;
			}
			this.attack_hand( b );
			return null;
		}

	}

}
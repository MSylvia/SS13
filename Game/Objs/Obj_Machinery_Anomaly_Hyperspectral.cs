// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Anomaly_Hyperspectral : Obj_Machinery_Anomaly {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/xenoarchaeology.dmi";
			this.icon_state = "scanner";
		}

		// Function from file: analysis_hyperspectral.dm
		public Obj_Machinery_Anomaly_Hyperspectral ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Anom_Hyper(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule(), 
				new Obj_Item_Weapon_StockParts_ScanningModule()
			 });
			this.RefreshParts();
			return;
		}

		// Function from file: analysis_hyperspectral.dm
		public override string ScanResults(  ) {
			string results = null;
			dynamic scanned_sample = null;
			string carrier = null;
			int num_reagents = 0;
			Reagent A = null;
			Reagent R = null;
			double specifity = 0;

			results = "The scan was inconclusive. Check sample integrity and carrier consistency.";
			num_reagents = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.held_container.reagents.reagent_list, typeof(Reagent) )) {
				A = _a;
				
				R = A;

				if ( R is Reagent_AnalysisSample ) {
					scanned_sample = R.data;
				} else {
					carrier = R.id;
				}
				num_reagents++;
			}

			if ( num_reagents == 2 && Lang13.Bool( scanned_sample ) && Lang13.Bool( carrier ) ) {
				specifity = this.GetResultSpecifity( scanned_sample, carrier );
				results = "Spectral signature over carrier (" + carrier + "):<br>";

				if ( specifity <= 0.25 ) {
					results += "<img src=\"http://i.imgur.com/TAQHn.jpg\"></img><br>";
				} else if ( specifity <= 0.5 ) {
					results += "<img src=\"http://i.imgur.com/EwOZ7.jpg\"></img><br>";
				} else if ( specifity <= 0.75 ) {
					results += "<img src=\"http://i.imgur.com/1qCae.jpg\"></img><br>";
				} else {
					results += "<img src=\"http://i.imgur.com/9T9nc.jpg\"></img><br>";
				}
				results += "<br>";

				if ( Lang13.Bool( scanned_sample.artifact_id ) ) {
					results += "Detected energy signatures " + ( 1 - specifity ) * 100 + "% consistent with standard background readings.<br>";

					if ( Rand13.PercentChance( ((int)( ( specifity + ( 1 - specifity ) * 0.5 ) * 100 )) ) ) {
						results += "Anomalous exotic energy signature isolated: <font color='red'><b>" + scanned_sample.artifact_id + ".</b></font>";
					}
				} else {
					results += "Detected energy signatures " + ( ( Rand13.Float() * 2 - 1 ) * ( 1 - specifity ) * 5 + 95 ) + "% consistent with standard background readings.";
				}
			}
			return results;
		}

		// Function from file: analysis_hyperspectral.dm
		public override dynamic process(  ) {
			base.process();

			if ( this.scan_process != 0 ) {
				this.icon_state = "scanner_active";
			} else {
				this.icon_state = "scanner";

				if ( Rand13.PercentChance( 10 ) ) {
					Icon13.Flick( this, "scanner_active" );
				}
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Claypot : Obj_Structure {

		public string plant_name = "";

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon = "icons/obj/hydroponics2.dmi";
			this.icon_state = "claypot";
		}

		public Obj_Structure_Claypot ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hydro_tools.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Claypot C = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				GlobalFuncs.playsound( this.loc, "sound/items/Ratchet.ogg", 50, 1 );

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					this.anchored = !Lang13.Bool( this.anchored );
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( "es " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( ".</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You " ).item( ( Lang13.Bool( this.anchored ) ? "wrench" : "unwrench" ) ).str( " " ).the( this ).item().str( " " ).item( ( Lang13.Bool( this.anchored ) ? "in place" : "from its fixture" ) ).str( ".</span>" ).ToString(), "<span class='notice'>You hear a ratchet.</span>" );
				}
			} else if ( Lang13.Bool( this.plant_name ) && a is Obj_Item_Weapon_Pickaxe_Shovel ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='notice'>" ).icon( this ).str( " You start removing the " ).item( this.plant_name ).str( " from " ).the( this ).item().str( ".</span>" ).ToString() );

				if ( GlobalFuncs.do_after( b, this, 30 ) ) {
					GlobalFuncs.playsound( this.loc, "sound/items/shovel.ogg", 50, 1 );
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " removes the " ).item( this.plant_name ).str( " from " ).the( this ).item().str( ".</span>" ).ToString(), new Txt( "<span class='notice'>" ).icon( this ).str( " You remove the " ).item( this.plant_name ).str( " from " ).the( this ).item().str( ".</span>" ).ToString(), "<span class='notice'>You hear some digging.</span>" );
					C = new Obj_Item_Claypot( this.loc );
					GlobalFuncs.transfer_fingerprints( this, C );
					GlobalFuncs.qdel( this );
				}
			} else if ( a is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown || a is Obj_Item_Weapon_Grown ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>There is already a plant in " ).the( this ).item().str( "</span>" ).ToString() );
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: hydro_tools.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			GlobalFuncs.to_chat( a, "It's too heavy to pick up while it has a plant in it." );
			return null;
		}

		// Function from file: hydro_tools.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( Lang13.Bool( this.plant_name ) ) {
				GlobalFuncs.to_chat( user, "<span class='info'>You can see " + this.plant_name + " planted in it.</span>" );
			}
			return null;
		}

	}

}
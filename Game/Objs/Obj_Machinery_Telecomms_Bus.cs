// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Telecomms_Bus : Obj_Machinery_Telecomms {

		public dynamic change_frequency = 0;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.idle_power_usage = 50;
			this.machinetype = 2;
			this.circuitboard = "/obj/item/weapon/circuitboard/telecomms/bus";
			this.netspeed = 40;
			this.icon_state = "bus";
		}

		// Function from file: bus.dm
		public Obj_Machinery_Telecomms_Bus ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.component_parts = new ByTable();
			this.component_parts.Add( new Obj_Item_Weapon_Circuitboard_Telecomms_Bus( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Subspace_Filter( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.component_parts.Add( new Obj_Item_Weapon_StockParts_Manipulator( null ) );
			this.component_parts.Add( new Obj_Item_Stack_CableCoil( null, 1 ) );
			this.RefreshParts();
			return;
		}

		// Function from file: bus.dm
		public override void receive_information( Signal signal = null, Obj_Machinery_Telecomms machine_from = null ) {
			int? send_to_processor = null;
			ByTable try_send = null;
			int i = 0;
			dynamic send = null;
			int? can_send = null;

			
			if ( this.is_freq_listening( signal ) ) {
				
				if ( Lang13.Bool( this.change_frequency ) ) {
					
					if ( signal.frequency != GlobalVars.SYND_FREQ ) {
						signal.frequency = this.change_frequency;
					}
				}

				if ( !( machine_from is Obj_Machinery_Telecomms_Processor ) && machine_from != this ) {
					send_to_processor = this.relay_information( signal, "/obj/machinery/telecomms/processor" );

					if ( Lang13.Bool( send_to_processor ) ) {
						return;
					}
					signal.data["slow"] += Rand13.Int( 1, 5 );
					this.receive_information( signal, this );
				}
				try_send = new ByTable(new object [] { "/obj/machinery/telecomms/server", "/obj/machinery/telecomms/hub", "/obj/machinery/telecomms/broadcaster", "/obj/machinery/telecomms/bus" });
				i = 0;

				foreach (dynamic _a in Lang13.Enumerate( try_send )) {
					send = _a;
					

					if ( i != 0 ) {
						signal.data["slow"] += Rand13.Int( 0, 1 );
					}
					i++;
					can_send = this.relay_information( signal, send );

					if ( Lang13.Bool( can_send ) ) {
						break;
					}
				}
			}
			return;
		}

		// Function from file: machine_interactions.dm
		public override void Options_Topic( string href = null, ByTable href_list = null ) {
			dynamic newfreq = null;

			
			if ( Lang13.Bool( href_list["change_freq"] ) ) {
				newfreq = Interface13.Input( Task13.User, "Specify a new frequency for new signals to change to. Enter null to turn off frequency changing. Decimals assigned automatically.", this, this.network, null, InputType.Num | InputType.Null );

				if ( this.canAccess( Task13.User ) ) {
					
					if ( Lang13.Bool( newfreq ) ) {
						
						if ( String13.FindIgnoreCase( String13.NumberToString( Convert.ToDouble( newfreq ) ), ".", 1, 0 ) != 0 ) {
							newfreq *= 10;
						}

						if ( Convert.ToDouble( newfreq ) < 10000 ) {
							this.change_frequency = newfreq;
							this.temp = "<font color = #666633>-% New frequency to change to assigned: \"" + newfreq + " GHz\" %-</font color>";
						}
					} else {
						this.change_frequency = 0;
						this.temp = "<font color = #666633>-% Frequency changing deactivated %-</font color>";
					}
				}
			}
			return;
		}

		// Function from file: machine_interactions.dm
		public override string Options_Menu(  ) {
			string dat = null;

			dat = new Txt( "<br>Change Signal Frequency: <A href='?src=" ).Ref( this ).str( ";change_freq=1'>" ).item( ( Lang13.Bool( this.change_frequency ) ? "YES (" + this.change_frequency + ")" : "NO" ) ).str( "</a>" ).ToString();
			return dat;
		}

	}

}
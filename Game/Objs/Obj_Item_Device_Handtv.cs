// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Handtv : Obj_Item_Device {

		public dynamic current = null;
		public string network = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 1;
			this.icon_state = "handtv";
		}

		public Obj_Item_Device_Handtv ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: handtv.dm
		public override bool? check_eye( Mob user = null ) {
			
			if ( this.loc != user || user.get_active_hand() != this || !user.canmove || Lang13.Bool( user.blinded ) || !Lang13.Bool( this.current ) || !Lang13.Bool( this.current.active ) ) {
				return null;
			}
			user.reset_view( this.current );
			return true;
		}

		// Function from file: handtv.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			ByTable cameras = null;
			Obj_Item_Device_CameraBug C = null;
			ByTable friendly_cameras = null;
			Obj_Item_Device_CameraBug C2 = null;
			dynamic target = null;
			Obj_Item_Device_CameraBug C3 = null;

			
			if ( !Lang13.Bool( this.network ) && Lang13.Bool( user.mind ) ) {
				this.network = new Txt().Ref( user.mind ).ToString();
			}
			cameras = new ByTable();

			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.camera_bugs, typeof(Obj_Item_Device_CameraBug) )) {
				C = _a;
				

				if ( C.network == this.network ) {
					cameras.Add( C );
				}
			}

			if ( !( cameras.len != 0 ) ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>No camera bugs found.</span>" );
				return null;
			}
			friendly_cameras = new ByTable();

			foreach (dynamic _b in Lang13.Enumerate( cameras, typeof(Obj_Item_Device_CameraBug) )) {
				C2 = _b;
				
				friendly_cameras.Add( C2.c_tag );
			}
			target = Interface13.Input( "Select the camera to observe", null, null, null, GlobalFuncs.sortList( friendly_cameras ), InputType.Null | InputType.Any );

			if ( !Lang13.Bool( target ) ) {
				((Mob)user).unset_machine();
				user.reset_view( user );
				return null;
			}

			foreach (dynamic _c in Lang13.Enumerate( cameras, typeof(Obj_Item_Device_CameraBug) )) {
				C3 = _c;
				

				if ( C3.c_tag == target ) {
					target = C3;
					break;
				}
			}

			if ( Lang13.Bool( user.stat ) ) {
				return null;
			}

			if ( Lang13.Bool( target ) ) {
				user.client.eye = target;
				((Mob)user).set_machine( this );
				this.current = target;
			} else {
				((Mob)user).unset_machine();
				return null;
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_ShieldGen_External : Obj_Machinery_ShieldGen {

		// Function from file: shield_gen_external.dm
		public Obj_Machinery_ShieldGen_External ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: shield_gen_external.dm
		public override ByTable get_shielded_turfs(  ) {
			ByTable open = null;
			ByTable closed = null;
			dynamic T = null;
			dynamic O = null;
			bool add_this_turf = false;
			Tile_Simulated G = null;

			open = new ByTable(new object [] { GlobalFuncs.get_turf( this ) });
			closed = new ByTable();

			while (open.len != 0) {
				
				foreach (dynamic _c in Lang13.Enumerate( open )) {
					T = _c;
					

					foreach (dynamic _b in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( T, 1 ) )) {
						O = _b;
						

						if ( Map13.GetDistance( O, this ) > this.field_radius ) {
							continue;
						}
						add_this_turf = false;

						if ( O is Tile_Space ) {
							
							foreach (dynamic _a in Lang13.Enumerate( Map13.FetchInRangeExcludeThis( O, 1 ), typeof(Tile_Simulated) )) {
								G = _a;
								
								add_this_turf = true;
								break;
							}

							if ( add_this_turf && !open.Contains( O ) && !closed.Contains( O ) ) {
								open.Add( O );
							}
						}
					}
					open.Remove( T );
					closed.Add( T );
				}
			}
			return closed;
		}

	}

}
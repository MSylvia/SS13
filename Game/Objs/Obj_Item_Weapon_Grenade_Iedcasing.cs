// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_Grenade_Iedcasing : Obj_Item_Weapon_Grenade {

		public int range = 3;
		public ByTable times = new ByTable();

		protected override void __FieldInit() {
			base.__FieldInit();

			this.display_timer = false;
			this.icon_state = "improvised_grenade";
		}

		// Function from file: ghettobomb.dm
		public Obj_Item_Weapon_Grenade_Iedcasing ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.overlays.Add( new Image( "icons/obj/grenade.dmi", null, "improvised_grenade_filled" ) );
			this.overlays.Add( new Image( "icons/obj/grenade.dmi", null, "improvised_grenade_wired" ) );
			this.times = new ByTable().Set( "5", 10 ).Set( "-1", 20 ).Set( "" + Rand13.Int( 30, 80 ), 50 ).Set( "" + Rand13.Int( 65, 180 ), 20 );
			this.det_time = String13.ParseNumber( GlobalFuncs.pickweight( this.times ) );

			if ( ( this.det_time ??0) < 0 ) {
				this.range = 1;
				this.det_time = Rand13.Int( 30, 80 );
			} else {
				this.range = Convert.ToInt32( Rand13.Pick(new object [] { 2, 2, 2, 3, 3, 3, 4 }) );
			}
			return;
		}

		// Function from file: ghettobomb.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );
			user.WriteMsg( "You can't tell when it will explode!" );
			return 0;
		}

		// Function from file: ghettobomb.dm
		public override void prime(  ) {
			this.update_mob();
			GlobalFuncs.explosion( this.loc, -1, -1, 2, null, null, null, 4 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: ghettobomb.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			dynamic bombturf = null;
			dynamic A = null;
			dynamic C = null;

			
			if ( !this.active ) {
				
				if ( this.clown_check( user ) ) {
					user.WriteMsg( "<span class='warning'>You light the " + this.name + "!</span>" );
					this.active = true;
					this.overlays.Remove( new Image( "icons/obj/grenade.dmi", null, "improvised_grenade_filled" ) );
					this.icon_state = Lang13.Initial( this, "icon_state" ) + "_active";
					this.add_fingerprint( user );
					bombturf = GlobalFuncs.get_turf( this );
					A = GlobalFuncs.get_area( bombturf );
					GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( Task13.User ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( Task13.User ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( Task13.User ).str( "'>FLW</A>) has primed a " ).item( this.name ).str( " for detonation at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( Task13.User ) + " has primed a " + this.name + " for detonation at " + A.name + " (" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")." );

					if ( user is Mob_Living_Carbon ) {
						C = user;
						((Mob_Living_Carbon)C).throw_mode_on();
					}
					Task13.Schedule( ((int)( this.det_time ??0 )), (Task13.Closure)(() => {
						this.prime();
						return;
					}));
				}
			}
			return null;
		}

		// Function from file: ghettobomb.dm
		public override void CheckParts( Game_Data holder = null ) {
			dynamic can = null;
			dynamic muh_layer = null;

			can = Lang13.FindIn( typeof(Obj_Item_Weapon_ReagentContainers_Food_Drinks_SodaCans), this.contents );

			if ( Lang13.Bool( can ) ) {
				muh_layer = can.layer;
				can.layer = GlobalVars.FLOAT_LAYER;
				this.underlays.Add( can );
				can.layer = muh_layer;
			}
			return;
		}

	}

}
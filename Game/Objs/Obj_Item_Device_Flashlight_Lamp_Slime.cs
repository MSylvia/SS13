// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Flashlight_Lamp_Slime : Obj_Item_Device_Flashlight_Lamp {

		public int brightness_max = 6;
		public int brightness_min = 2;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 2;
			this.item_state = "";
			this.origin_tech = "biotech=3";
			this.light_color = "#AFC84B";
			this.icon_state = "slimelamp";
		}

		public Obj_Item_Device_Flashlight_Lamp_Slime ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: flashlight.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( !( user.loc is Tile ) ) {
				GlobalFuncs.to_chat( user, "You cannot turn the light on while in this " + user.loc + "." );
				return 0;
			}
			this.on = !this.on;
			this.slime_brightness( user );
			return 1;
		}

		// Function from file: flashlight.dm
		public void slime_brightness( dynamic user = null ) {
			
			if ( this.on ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-on";
				this.set_light( this.brightness_max );
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.set_light( this.brightness_min );
			}
			return;
		}

		// Function from file: flashlight.dm
		public override bool initialize( bool? suppress_icon_check = null ) {
			base.initialize( suppress_icon_check );

			if ( this.on ) {
				this.icon_state = "" + Lang13.Initial( this, "icon_state" ) + "-on";
				this.set_light( this.brightness_max );
			} else {
				this.icon_state = Lang13.Initial( this, "icon_state" );
				this.set_light( this.brightness_min );
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_Bomberflame : Obj_Structure {

		public bool? destroy_environnement = false;
		public bool? hurt_players = false;
		public int? fuel = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.anchored = 1;
			this.icon = "icons/obj/bomberman.dmi";
			this.icon_state = "explosion_core";
			this.layer = 11;
		}

		// Function from file: bomberman.dm
		public Obj_Structure_Bomberflame ( dynamic loc = null, bool? initial = null, int? power = null, dynamic flame_dir = null, bool? destroy = null, bool? hurt = null ) : base( (object)(loc) ) {
			initial = initial ?? true;
			power = power ?? 1;
			flame_dir = flame_dir ?? GlobalVars.SOUTH;
			destroy = destroy ?? false;
			hurt = hurt ?? false;

			dynamic T1 = null;
			dynamic T2 = null;

			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.fuel = power;
			this.dir = Convert.ToInt32( flame_dir );
			this.destroy_environnement = destroy;
			this.hurt_players = hurt;
			T1 = GlobalFuncs.get_turf( this );
			T2 = null;

			if ( !( initial == true ) ) {
				
				if ( Lang13.Bool( this.fuel ) ) {
					this.icon_state = "explosion_branch";
				} else {
					this.icon_state = "explosion_tip";
				}
				Map13.Step( this, Convert.ToInt32( flame_dir ) );
				T2 = GlobalFuncs.get_turf( this );

				if ( T1 == T2 ) {
					GlobalFuncs.qdel( this );
					return;
				}
			} else {
				T2 = T1;
			}
			GlobalVars.bombermangear.Add( this );
			this.collisions( T2 );
			Task13.Schedule( 1, (Task13.Closure)(() => {
				
				if ( Lang13.Bool( this.fuel ) ) {
					this.propagate( initial );
				}
				return;
			}));
			Task13.Sleep( 5 );
			this.collisions( T2 );
			Task13.Sleep( 5 );
			GlobalFuncs.qdel( this );
			return;
		}

		// Function from file: bomberman.dm
		public override bool singuloCanEat(  ) {
			return false;
		}

		// Function from file: bomberman.dm
		public override dynamic cultify(  ) {
			return null;
		}

		// Function from file: bomberman.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			return false;
		}

		// Function from file: bomberman.dm
		public override dynamic Bump(Ent_Static Obstacle = null, dynamic yes = null) {
			Obj_Structure_Bomberman chained_explosion = null;
			Obj_Structure_Softwall wall_break = null;
			Obj_Structure_Table table = null;
			Obj_Structure_Rack rack = null;
			Obj_Structure_Grille grille = null;
			Ent_Static T = null;
			Tile_Simulated_Wall T2 = null;
			Obj_Machinery_PortableAtmospherics_Canister canister = null;
			Obj_Machinery_Computer computer = null;
			dynamic x = null;

			
			if ( Obstacle is Obj_Structure_Bomberman ) {
				chained_explosion = (Obj_Structure_Bomberman)Obstacle;
				((dynamic)chained_explosion).detonate();
			} else if ( Obstacle is Obj_Structure_Softwall ) {
				wall_break = (Obj_Structure_Softwall)Obstacle;
				((Obj_Structure_Softwall)wall_break).pulverized();
			}

			if ( this.destroy_environnement == true ) {
				
				if ( Obstacle is Obj_Structure_Closet ) {
					GlobalFuncs.qdel( Obstacle );
				} else if ( Obstacle is Obj_Structure_Table ) {
					table = (Obj_Structure_Table)Obstacle;
					((dynamic)table).destroy();
				} else if ( Obstacle is Obj_Structure_Rack ) {
					rack = (Obj_Structure_Rack)Obstacle;
					((dynamic)rack).destroy();
				} else if ( Obstacle is Obj_Structure_Grille ) {
					grille = (Obj_Structure_Grille)Obstacle;
					((dynamic)grille).broken = 1;
					grille.icon_state = "" + Lang13.Initial( grille, "icon_state" ) + "-b";
					grille.density = false;

					if ( Rand13.PercentChance( 35 ) ) {
						T = grille.loc;
						((dynamic)T).spawn_powerup();
					}
				} else if ( Obstacle is Obj_Structure_Window ) {
					GlobalFuncs.qdel( Obstacle );
				} else if ( Obstacle is Tile_Simulated_Wall && !( Obstacle is Tile_Simulated_Wall_RWall ) ) {
					T2 = (Tile_Simulated_Wall)Obstacle;
					((dynamic)T2).ChangeTurf( typeof(Tile_Simulated_Floor_Plating) );
					T2.icon_state = "wall_thermite";

					if ( Rand13.PercentChance( 35 ) ) {
						((dynamic)T2).spawn_powerup();
					}
				} else if ( Obstacle is Obj_Structure_ReagentDispensers_Fueltank ) {
					Obstacle.ex_act( 1 );
				} else if ( Obstacle is Obj_Machinery_PortableAtmospherics_Canister ) {
					canister = (Obj_Machinery_PortableAtmospherics_Canister)Obstacle;
					((dynamic)canister).health = 0;
					((dynamic)canister).healthcheck();
				} else if ( Obstacle is Obj_Machinery_Computer ) {
					computer = (Obj_Machinery_Computer)Obstacle;

					foreach (dynamic _a in Lang13.Enumerate( computer.verbs )) {
						x = _a;
						
						computer.verbs.Remove( x );
					}
					((dynamic)computer).set_broken();
				} else if ( Obstacle is Obj_Mecha ) {
					
					if ( ( this.fuel ??0) <= 2 ) {
						Obstacle.ex_act( 3 );
					} else if ( ( this.fuel ??0) <= 10 ) {
						Obstacle.ex_act( 2 );
					} else {
						Obstacle.ex_act( 1 );
					}
				}
			}
			base.Bump( Obstacle );
			return null;
		}

		// Function from file: bomberman.dm
		public void propagate( bool? init = null ) {
			dynamic direction = null;

			
			if ( init == true ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cardinal )) {
					direction = _a;
					
					Task13.Schedule( 0, (Task13.Closure)(() => {
						new Obj_Structure_Bomberflame( GlobalFuncs.get_turf( this ), false, ( this.fuel ??0) - 1, direction, this.destroy_environnement, this.hurt_players );
						return;
					}));
				}
			} else {
				new Obj_Structure_Bomberflame( GlobalFuncs.get_turf( this ), false, ( this.fuel ??0) - 1, this.dir, this.destroy_environnement, this.hurt_players );
			}
			return;
		}

		// Function from file: bomberman.dm
		public void collisions( dynamic T = null ) {
			Obj_Item_Weapon_Bomberman dispenser = null;
			Mob_Living L = null;
			Obj_Item_Weapon_Bomberman dispenser2 = null;
			Mob_Living L2 = null;

			
			foreach (dynamic _a in Lang13.Enumerate( T, typeof(Obj_Item_Weapon_Bomberman) )) {
				dispenser = _a;
				
				dispenser.lost();
				((Tile)T).turf_animation( "icons/obj/bomberman.dmi", "dispenser_break", 0, 0, 3.9, "sound/bomberman/bombed.ogg" );
			}

			foreach (dynamic _c in Lang13.Enumerate( T, typeof(Mob_Living) )) {
				L = _c;
				

				foreach (dynamic _b in Lang13.Enumerate( L, typeof(Obj_Item_Weapon_Bomberman) )) {
					dispenser2 = _b;
					
					L.u_equip( dispenser2, true );
					dispenser2.loc = L.loc;
					dispenser2.lost();
					((Tile)T).turf_animation( "icons/obj/bomberman.dmi", "dispenser_break", 0, 0, 3.9, "sound/bomberman/bombed.ogg" );
				}
			}

			if ( this.hurt_players == true ) {
				
				foreach (dynamic _d in Lang13.Enumerate( T, typeof(Mob_Living) )) {
					L2 = _d;
					

					if ( ( this.fuel ??0) <= 2 ) {
						L2.ex_act( 3 );
					} else if ( ( this.fuel ??0) <= 10 ) {
						L2.ex_act( 2 );
					} else {
						L2.ex_act( 1 );
					}
				}
			}
			return;
		}

		// Function from file: bomberman.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			base.Destroy( (object)(brokenup) );
			GlobalVars.bombermangear.Remove( this );
			return null;
		}

	}

}
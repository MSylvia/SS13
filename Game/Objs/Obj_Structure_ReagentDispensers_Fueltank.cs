// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Structure_ReagentDispensers_Fueltank : Obj_Structure_ReagentDispensers {

		public bool modded = false;
		public dynamic rig = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "weldtank";
		}

		// Function from file: reagent_dispenser.dm
		public Obj_Structure_ReagentDispensers_Fueltank ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			((Reagents)this.reagents).add_reagent( "fuel", 1000 );
			return;
		}

		// Function from file: reagent_dispenser.dm
		public void explode(  ) {
			
			if ( ( this.reagents.total_volume ??0) > 500 ) {
				GlobalFuncs.explosion( this.loc, 1, 2, 4 );
			} else if ( ( this.reagents.total_volume ??0) > 100 ) {
				GlobalFuncs.explosion( this.loc, 0, 1, 3 );
			} else {
				GlobalFuncs.explosion( this.loc, -1, 1, 2 );
			}

			if ( this != null ) {
				GlobalFuncs.qdel( this );
			}
			return;
		}

		// Function from file: reagent_dispenser.dm
		public override bool Bumped( Ent_Static AM = null, dynamic yes = null ) {
			
			if ( AM is Obj_Structure_Bed_Chair_Vehicle_Wizmobile ) {
				this.visible_message( new Txt( "<span class='danger'>" ).the( AM ).item().str( " crashes into " ).the( this ).item().str( "!!</span>" ).ToString() );
				this.explode();
			}
			return base.Bumped( AM, (object)(yes) );
		}

		// Function from file: reagent_dispenser.dm
		public override bool fire_act( GasMixture air = null, double? exposed_temperature = null, int exposed_volume = 0 ) {
			
			if ( ( exposed_temperature ??0) >= 561.1500244140625 ) {
				this.explode();
			}
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			this.explode();
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override bool blob_act( dynamic severity = null ) {
			this.explode();
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override int? bullet_act( dynamic Proj = null, dynamic def_zone = null ) {
			
			if ( Proj is Obj_Item_Projectile_Beam || Proj is Obj_Item_Projectile_Bullet || Proj is Obj_Item_Projectile_Ricochet ) {
				
				if ( !( Proj is Obj_Item_Projectile_Beam_Lastertag ) && !( Proj is Obj_Item_Projectile_Beam_Practice ) ) {
					GlobalVars.diaryofmeanpeople.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]ATTACK: " + ( "<font color='red'>" + GlobalFuncs.key_name( Proj.firer ) + " shot " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with a " + Proj.type + "</font>" ) ) );

					if ( Lang13.Bool( Proj.firer ) ) {
						Proj.firer.attack_log.Add( "[" + GlobalFuncs.time_stamp() + "] <b>" + GlobalFuncs.key_name( Proj.firer ) + "</b> shot <b>" + this + "(" + this.x + "," + this.y + "," + this.z + ")</b> with a <b>" + Proj.type + "</b>" );
						GlobalFuncs.msg_admin_attack( "" + GlobalFuncs.key_name( Proj.firer ) + " shot " + this + "/(" + GlobalFuncs.formatJumpTo( this ) + ") with a " + Proj.type + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + Proj.firer.x + ";Y=" + Proj.firer.y + ";Z=" + Proj.firer.z + "'>JMP</a>)" );
					} else {
						GlobalFuncs.msg_admin_attack( "" + this + " was shot by a " + Proj.type + " (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + this.x + ";Y=" + this.y + ";Z=" + this.z + "'>JMP</a>)" );
					}
					this.explode();
				}
			}
			return null;
		}

		// Function from file: reagent_dispenser.dm
		public override bool apply_beam_damage( Obj_Effect_Beam B = null ) {
			
			if ( GlobalFuncs.get_turf( this ) is Tile && B.get_damage() >= 15 ) {
				this.explode();
			}
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override void beam_disconnect( Obj_Effect_Beam B = null ) {
			base.beam_disconnect( B );
			this.apply_beam_damage( B );
			return;
		}

		// Function from file: reagent_dispenser.dm
		public override bool beam_connect( Obj_Effect_Beam B = null ) {
			base.beam_connect( B );
			this.apply_beam_damage( B );
			return false;
		}

		// Function from file: reagent_dispenser.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic H = null;
			Icon test = null;

			
			if ( a is Obj_Item_Weapon_Wrench ) {
				((Ent_Static)b).visible_message( "" + b + " wrenches " + this + "'s faucet " + ( this.modded ? "closed" : "open" ) + ".", "You wrench " + this + "'s faucet " + ( this.modded ? "closed" : "open" ) );
				this.modded = ( this.modded ? false : true );
			}

			if ( a is Obj_Item_Device_AssemblyHolder ) {
				
				if ( Lang13.Bool( this.rig ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>There is another device in the way.</span>" );
					return base.attackby( (object)(a), (object)(b), (object)(c) );
				}
				((Ent_Static)b).visible_message( new Txt().item( b ).str( " begins rigging " ).item( a ).str( " to " ).the( this ).item().str( "." ).ToString(), new Txt( "You begin rigging " ).item( a ).str( " to " ).the( this ).item().ToString() );

				if ( GlobalFuncs.do_after( b, this, 20 ) ) {
					
					if ( !Lang13.Bool( b.drop_item( a, this ) ) ) {
						b.WriteMsg( new Txt( "<span class='warning'>Oops! You can't let go of " ).the( a ).item().str( "!</span>" ).ToString() );
						return null;
					}
					((Ent_Static)b).visible_message( new Txt( "<span class='notice'>" ).item( b ).str( " rigs " ).item( a ).str( " to " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You rig " ).item( a ).str( " to " ).the( this ).item().str( "</span>" ).ToString() );
					H = a;

					if ( H.a_left is Obj_Item_Device_Assembly_Igniter || H.a_right is Obj_Item_Device_Assembly_Igniter ) {
						GlobalFuncs.message_admins( "" + GlobalFuncs.key_name_admin( b ) + " rigged fueltank at (" + this.loc.x + "," + this.loc.y + "," + this.loc.z + ") for explosion." );
						GlobalVars.diary.WriteMsg( String13.HtmlDecode( "[" + GlobalFuncs.time_stamp() + "]GAME: " + ( "" + GlobalFuncs.key_name( b ) + " rigged fueltank at (" + this.loc.x + "," + this.loc.y + "," + this.loc.z + ") for explosion." ) ) );
					}
					this.rig = a;
					test = GlobalFuncs.getFlatIcon( a );
					test.Shift( GlobalVars.NORTH, 1 );
					test.Shift( GlobalVars.EAST, 6 );
					this.overlays.Add( test );
				}
			}
			return base.attackby( (object)(a), (object)(b), (object)(c) );
		}

		// Function from file: reagent_dispenser.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.rig ) ) {
				Task13.User.visible_message( new Txt().item( Task13.User ).str( " begins to detach " ).item( this.rig ).str( " from " ).the( this ).item().str( "." ).ToString(), new Txt( "You begin to detach " ).item( this.rig ).str( " from " ).the( this ).item().ToString() );

				if ( GlobalFuncs.do_after( Task13.User, this, 20 ) ) {
					Task13.User.visible_message( new Txt( "<span class='notice'>" ).item( Task13.User ).str( " detaches " ).item( this.rig ).str( " from " ).the( this ).item().str( "." ).ToString(), new Txt( "<span class='notice'>You detach " ).item( this.rig ).str( " from " ).the( this ).item().str( "</span>" ).ToString() );

					if ( Lang13.Bool( this.rig ) ) {
						this.rig.loc = GlobalFuncs.get_turf( Task13.User );
						this.rig = null;
					}
					this.overlays = new ByTable();
				}
			}
			return null;
		}

		// Function from file: reagent_dispenser.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );

			if ( this.modded ) {
				GlobalFuncs.to_chat( user, "<span class='warning'>Fuel faucet is wrenched open, leaking the fuel!</span>" );
			}

			if ( Lang13.Bool( this.rig ) ) {
				GlobalFuncs.to_chat( user, "<span class='notice'>There is some kind of device rigged to the tank.</span>" );
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Tomato : Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown {

		public Type splat = typeof(Obj_Effect_Decal_Cleanable_TomatoSmudge);

		protected override void __FieldInit() {
			base.__FieldInit();

			this.seed = typeof(Obj_Item_Seeds_Tomatoseed);
			this.filling_color = "#FF6347";
			this.icon_state = "tomato";
		}

		public Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown_Tomato ( dynamic newloc = null, int? new_potency = null ) : base( (object)(newloc), new_potency ) {
			
		}

		// Function from file: grown.dm
		public override bool throw_impact( dynamic target = null, Mob_Living_Carbon thrower = null ) {
			
			if ( !base.throw_impact( (object)(target), thrower ) ) {
				this.squish( target );
				GlobalFuncs.qdel( this );
			}
			return false;
		}

		// Function from file: grown.dm
		public virtual void squish( dynamic target = null ) {
			dynamic T = null;
			Ent_Static A = null;

			T = GlobalFuncs.get_turf( target );
			Lang13.Call( this.splat, T );
			this.visible_message( "The " + this.name + " has been squashed.", "<span class='italics'>You hear a smack.</span>" );

			foreach (dynamic _a in Lang13.Enumerate( GlobalFuncs.get_turf( target ), typeof(Ent_Static) )) {
				A = _a;
				
				this.reagents.reaction( A );
			}
			return;
		}

		// Function from file: grown.dm
		public override bool add_juice( dynamic loc = null, int? potency = null ) {
			
			if ( base.add_juice( (object)(loc), potency ) ) {
				this.reagents.add_reagent( "nutriment", Num13.Round( ( this.potency ??0) / 10, 1 ) + 1 );
				this.reagents.add_reagent( "vitamin", Num13.Round( ( this.potency ??0) / 25, 1 ) + 1 );
				this.bitesize = Num13.Round( ( this.reagents.total_volume ??0) / 2, 1 ) + 1;
			}
			return false;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Effect_Decal_Cleanable_Blood_Gibs : Obj_Effect_Decal_Cleanable_Blood {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.random_icon_states = new ByTable(new object [] { "gib1", "gib2", "gib3", "gib4", "gib5", "gib6" });
			this.icon_state = "gibbl5";
		}

		// Function from file: humans.dm
		public Obj_Effect_Decal_Cleanable_Blood_Gibs ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.reagents.add_reagent( "liquidgibs", 5 );
			return;
		}

		// Function from file: disposal-structures.dm
		public override void pipe_eject( int? direction = null ) {
			ByTable dirs = null;

			
			if ( Lang13.Bool( direction ) ) {
				dirs = new ByTable(new object [] { direction, Num13.Rotate( direction, -45 ), Num13.Rotate( direction, 45 ) });
			} else {
				dirs = GlobalVars.alldirs.Copy();
			}
			this.streak( dirs );
			return;
		}

		// Function from file: humans.dm
		public void streak( ByTable directions = null ) {
			dynamic direction = null;
			int? i = null;
			Obj_Effect_Decal_Cleanable_Blood_Splatter b = null;
			Disease D = null;
			dynamic ND = null;

			direction = Rand13.PickFromTable( directions );
			i = null;
			i = 0;

			while (( i ??0) < Convert.ToDouble( Rand13.PickWeighted(new object [] { 13107, 1, 39321, 2, 58981, 3, 65535, 4 }) )) {
				Task13.Sleep( 3 );

				if ( ( i ??0) > 0 ) {
					b = new Obj_Effect_Decal_Cleanable_Blood_Splatter( this.loc );

					foreach (dynamic _a in Lang13.Enumerate( this.viruses, typeof(Disease) )) {
						D = _a;
						
						ND = D.Copy( true );
						b.viruses.Add( ND );
						ND.holder = b;
					}
				}
				Map13.StepTowards( this, Map13.GetStep( this, Convert.ToInt32( direction ) ), 0 );

				if ( ( i ??0) > 0 ) {
					break;
				}
				i++;
			}
			return;
		}

		// Function from file: humans.dm
		public override bool ex_act( double? severity = null, dynamic target = null ) {
			return false;
		}

		// Function from file: humans.dm
		public override void replace_decal( Obj_Effect_Decal_Cleanable C = null ) {
			return;
		}

	}

}
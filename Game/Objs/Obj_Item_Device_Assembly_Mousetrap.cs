// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Assembly_Mousetrap : Obj_Item_Device_Assembly {

		public bool armed = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.materials = new ByTable().Set( "$metal", 100 );
			this.origin_tech = "combat=1";
			this.attachable = true;
			this.icon_state = "mousetrap";
		}

		public Obj_Item_Device_Assembly_Mousetrap ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mousetrap.dm
		public override bool hitby( Ent_Dynamic AM = null, bool? skipcatch = null, bool? hitpush = null, bool? blocked = null ) {
			
			if ( !this.armed ) {
				return base.hitby( AM, skipcatch, hitpush, blocked );
			}
			this.visible_message( "<span class='warning'>" + this + " is triggered by " + AM + ".</span>" );
			this.triggered( null );
			return false;
		}

		// Function from file: mousetrap.dm
		public override bool on_found( dynamic finder = null ) {
			
			if ( this.armed ) {
				((Ent_Static)finder).visible_message( "<span class='warning'>" + finder + " accidentally sets off " + this + ", breaking their fingers.</span>", "<span class='warning'>You accidentally trigger " + this + "!</span>" );
				this.triggered( finder, ( finder.hand ? "l_hand" : "r_hand" ) );
				return true;
			}
			return false;
		}

		// Function from file: mousetrap.dm
		public override dynamic Crossed( Ent_Dynamic O = null, dynamic X = null ) {
			Ent_Dynamic H = null;
			Ent_Dynamic SA = null;

			
			if ( this.armed ) {
				
				if ( O is Mob_Living_Carbon_Human ) {
					H = O;

					if ( ((dynamic)H).m_intent == "run" ) {
						this.triggered( H );
						H.visible_message( "<span class='warning'>" + H + " accidentally steps on " + this + ".</span>", "<span class='warning'>You accidentally step on " + this + "</span>" );
					}
				} else if ( O is Mob_Living_SimpleAnimal ) {
					SA = O;

					if ( !Lang13.Bool( ((dynamic)SA).flying ) ) {
						this.triggered( O );
					}
				} else if ( O.density ) {
					this.triggered( O );
				}
			}
			base.Crossed( O, (object)(X) );
			return null;
		}

		// Function from file: mousetrap.dm
		public override dynamic attack_hand( dynamic a = null, bool? b = null, bool? c = null ) {
			string which_hand = null;

			
			if ( this.armed ) {
				
				if ( ( ((Mob_Living)a).getBrainLoss() >= 60 || Lang13.Bool( a.disabilities & 256 ) ) && Rand13.PercentChance( 50 ) ) {
					which_hand = "l_hand";

					if ( !a.hand ) {
						which_hand = "r_hand";
					}
					this.triggered( a, which_hand );
					((Ent_Static)a).visible_message( "<span class='warning'>" + a + " accidentally sets off " + this + ", breaking their fingers.</span>", "<span class='warning'>You accidentally trigger " + this + "!</span>" );
					return null;
				}
			}
			base.attack_hand( (object)(a), b, c );
			return null;
		}

		// Function from file: mousetrap.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			string which_hand = null;

			
			if ( !this.armed ) {
				user.WriteMsg( "<span class='notice'>You arm " + this + ".</span>" );
			} else {
				
				if ( ( ((Mob_Living)user).getBrainLoss() >= 60 || Lang13.Bool( user.disabilities & 256 ) ) && Rand13.PercentChance( 50 ) ) {
					which_hand = "l_hand";

					if ( !user.hand ) {
						which_hand = "r_hand";
					}
					this.triggered( user, which_hand );
					((Ent_Static)user).visible_message( "<span class='warning'>" + user + " accidentally sets off " + this + ", breaking their fingers.</span>", "<span class='warning'>You accidentally trigger " + this + "!</span>" );
					return null;
				}
				user.WriteMsg( "<span class='notice'>You disarm " + this + ".</span>" );
			}
			this.armed = !this.armed;
			this.update_icon();
			GlobalFuncs.playsound( user.loc, "sound/weapons/handcuffs.ogg", 30, 1, -3 );
			return null;
		}

		// Function from file: mousetrap.dm
		public bool triggered( dynamic target = null, string type = null ) {
			type = type ?? "feet";

			Obj_Item_Organ_Limb affecting = null;
			dynamic H = null;
			dynamic M = null;

			
			if ( !this.armed ) {
				return false;
			}
			affecting = null;

			if ( target is Mob_Living_Carbon_Human ) {
				H = target;

				if ( H.dna.species.specflags.Contains( 8192 ) ) {
					GlobalFuncs.playsound( this.loc, "sound/effects/snap.ogg", 50, 1 );
					this.armed = false;
					this.update_icon();
					this.pulse( false );
					return false;
				}

				switch ((string)( type )) {
					case "feet":
						
						if ( !Lang13.Bool( H.shoes ) ) {
							affecting = ((Mob_Living_Carbon_Human)H).get_organ( Rand13.Pick(new object [] { "l_leg", "r_leg" }) );
							((Mob)H).Weaken( 3 );
						}
						break;
					case "l_hand":
					case "r_hand":
						
						if ( !Lang13.Bool( H.gloves ) ) {
							affecting = ((Mob_Living_Carbon_Human)H).get_organ( type );
							((Mob)H).Stun( 3 );
						}
						break;
				}

				if ( affecting != null ) {
					
					if ( affecting.take_damage( 1, 0 ) ) {
						((Mob_Living)H).update_damage_overlays(  );
					}
					((Mob_Living)H).updatehealth();
				}
			} else if ( target is Mob_Living_SimpleAnimal_Mouse ) {
				M = target;
				this.visible_message( "<span class='boldannounce'>SPLAT!</span>" );
				((Mob_Living_SimpleAnimal_Mouse)M).splat();
			}
			GlobalFuncs.playsound( this.loc, "sound/effects/snap.ogg", 50, 1 );
			this.armed = false;
			this.update_icon();
			this.pulse( false );
			return false;
		}

		// Function from file: mousetrap.dm
		public override bool update_icon( dynamic new_state = null, dynamic new_icon = null, int? new_px = null, int? new_py = null ) {
			
			if ( this.armed ) {
				this.icon_state = "mousetraparmed";
			} else {
				this.icon_state = "mousetrap";
			}

			if ( this.holder != null ) {
				this.holder.update_icon();
			}
			return false;
		}

		// Function from file: mousetrap.dm
		public override string describe(  ) {
			return "The pressure switch is " + ( this.armed ? "primed" : "safe" ) + ".";
		}

		// Function from file: mousetrap.dm
		public override bool activate(  ) {
			Mob user = null;

			
			if ( base.activate() ) {
				this.armed = !this.armed;

				if ( !this.armed ) {
					
					if ( Task13.User is Mob_Living_Carbon_Human ) {
						user = Task13.User;

						if ( ((Mob_Living)user).getBrainLoss() >= 60 || Lang13.Bool( user.disabilities & 256 ) && Rand13.PercentChance( 50 ) ) {
							user.WriteMsg( "<span class='warning'>Your hand slips, setting off the trigger!</span>" );
							this.pulse( false );
						}
					}
				}
				this.update_icon();

				if ( Task13.User != null ) {
					GlobalFuncs.playsound( Task13.User.loc, "sound/weapons/handcuffs.ogg", 30, 1, -3 );
				}
			}
			return false;
		}

		// Function from file: mousetrap.dm
		public override double examine( dynamic user = null ) {
			base.examine( (object)(user) );

			if ( this.armed ) {
				user.WriteMsg( "It looks like it's armed." );
			}
			return 0;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Power_Treadmill : Obj_Machinery_Power {

		public double count_power = 0;
		public double tick_power = 0;
		public double power_efficiency = 1;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.flags = 512;
			this.machine_flags = 10;
			this.component_parts = new ByTable(new object [] { 
				new Obj_Item_Weapon_Circuitboard_Treadmill(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_Capacitor(), 
				new Obj_Item_Weapon_StockParts_ConsoleScreen()
			 });
			this.icon_state = "treadmill";
		}

		// Function from file: treadmill.dm
		public Obj_Machinery_Power_Treadmill ( dynamic loc = null ) : base( (object)(loc) ) {
			
			if ( Lang13.Bool( this.anchored ) ) {
				this.connect_to_network();
			}
			this.RefreshParts();
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: treadmill.dm
		public override int wrenchAnchor( dynamic user = null ) {
			base.wrenchAnchor( (object)(user) );

			if ( Lang13.Bool( this.anchored ) ) {
				this.connect_to_network();
			} else {
				this.disconnect_from_network();
			}
			return 0;
		}

		// Function from file: treadmill.dm
		public override bool CanPass( dynamic mover = null, dynamic target = null, double? height = null, bool? air_group = null ) {
			height = height ?? 1.5;
			air_group = air_group ?? false;

			
			if ( mover is Ent_Dynamic && ((Ent_Static)mover).checkpass( 2 ) != 0 ) {
				return true;
			}

			if ( Map13.GetDistance( this.loc, target ) == this.dir ) {
				
				if ( air_group == true ) {
					return true;
				}
				return false;
			} else {
				return true;
			}
		}

		// Function from file: treadmill.dm
		public override bool CheckExit( Ent_Dynamic mover = null, Ent_Static target = null ) {
			
			if ( mover is Ent_Dynamic && mover.checkpass( 2 ) != 0 ) {
				return true;
			}

			if ( Map13.GetDistance( mover.loc, target ) == this.dir ) {
				this.powerwalk( mover );
				return false;
			}
			return true;
		}

		// Function from file: treadmill.dm
		public void powerwalk( Ent_Dynamic AM = null ) {
			Ent_Dynamic runner = null;
			dynamic cached_temp = null;
			double calc = 0;
			Reagent R = null;

			
			if ( !( AM is Mob ) ) {
				return;
			}

			if ( GlobalFuncs.get_turf( AM ) != this.loc ) {
				return;
			}
			runner = AM;
			cached_temp = ((dynamic)runner).bodytemperature;

			if ( Lang13.Bool( ((dynamic)runner).burn_calories( 0.3 ) ) ) {
				Icon13.Flick( "treadmill-running", this );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/machines/click.ogg", 50, 1 );
				calc = this.power_efficiency * Convert.ToDouble( ((dynamic)runner).treadmill_speed ) * 400;

				if ( Lang13.Bool( runner.reagents ) ) {
					
					foreach (dynamic _a in Lang13.Enumerate( runner.reagents.reagent_list, typeof(Reagent) )) {
						R = _a;
						
						calc *= R.sport;
					}
				}
				Interface13.Stat( null, ((dynamic)runner).mutations.Contains( 4 ) );

				if ( Lang13.Bool( runner.reagents ) ) {
					calc *= 5;
				}
				this.count_power += calc;

				if ( Convert.ToDouble( ((dynamic)runner).bodytemperature ) > 99 ) {
					
					if ( Rand13.PercentChance( 5 ) ) {
						((dynamic)runner).emote( "collapse" );
					}

					if ( Rand13.PercentChance( 10 ) ) {
						GlobalFuncs.to_chat( runner, "<span class='warning'>You really should take a rest!</span>" );
					}

					if ( Rand13.PercentChance( 5 ) ) {
						GlobalFuncs.to_chat( runner, "<span class='warning'>Your legs really hurt!</span>" );
						((dynamic)runner).apply_damage( 5, "brute", "l_leg" );
						((dynamic)runner).apply_damage( 5, "brute", "r_leg" );
					}
					((dynamic)runner).bodytemperature = Num13.MaxInt( 99, Convert.ToInt32( cached_temp ) );
				}
			} else {
				GlobalFuncs.to_chat( runner, "<span class='warning'>You're exhausted! You can't run anymore!</span>" );
			}
			return;
		}

		// Function from file: treadmill.dm
		public override dynamic process(  ) {
			this.tick_power = this.count_power;
			this.count_power = 0;
			this.add_avail( this.tick_power );
			return null;
		}

		// Function from file: treadmill.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			base.examine( (object)(user), size );
			GlobalFuncs.to_chat( user, "<span class='info'>During the last cycle, it produced " + this.tick_power + " watts.</span>" );
			return null;
		}

		// Function from file: treadmill.dm
		public override dynamic RefreshParts(  ) {
			int calc = 0;
			Obj_Item_Weapon_StockParts SP = null;

			calc = 0;

			foreach (dynamic _a in Lang13.Enumerate( this.component_parts, typeof(Obj_Item_Weapon_StockParts) )) {
				SP = _a;
				

				if ( SP is Obj_Item_Weapon_StockParts_Capacitor ) {
					calc += SP.rating;
				}
			}
			this.power_efficiency = calc / 4;
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Device_Remote : Obj_Item_Device {

		public ContextClick_RemoteControl controller = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.w_class = 2;
			this.icon = "icons/obj/remote.dmi";
		}

		public Obj_Item_Device_Remote ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: remote.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( this.controller != null ) {
				
				if ( Lang13.Bool( this.controller.action( a, b, c ) ) ) {
					return 1;
				}
			}
			return base.attackby( (object)(a), (object)(b), (object)(c) );
		}

		// Function from file: remote.dm
		public override dynamic attack_self( dynamic user = null, dynamic flag = null, bool? emp = null ) {
			
			if ( this.controller != null ) {
				
				if ( Lang13.Bool( this.controller.action( null, user, flag ) ) ) {
					return 1;
				}
			}
			return base.attack_self( (object)(user), (object)(flag), emp );
		}

		// Function from file: remote.dm
		public override dynamic examine( dynamic user = null, string size = null ) {
			dynamic button_id = null;
			dynamic button = null;

			base.examine( (object)(user), size );

			if ( this.controller != null ) {
				
				foreach (dynamic _a in Lang13.Enumerate( this.controller.buttons )) {
					button_id = _a;
					
					button = this.controller.get_button_by_id( button_id );

					if ( Lang13.Bool( button ) ) {
						GlobalFuncs.to_chat( user, new Txt( " " ).icon( button ).str( " It has " ).a( button ).item().str( " attached." ).ToString() );
					}
				}
			}
			return null;
		}

	}

}
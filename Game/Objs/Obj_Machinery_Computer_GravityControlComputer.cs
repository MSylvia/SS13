// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_Computer_GravityControlComputer : Obj_Machinery_Computer {

		public dynamic gravity_generator = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "airtunnel0e";
		}

		// Function from file: gravitygenerator.dm
		public Obj_Machinery_Computer_GravityControlComputer ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 5, (Task13.Closure)(() => {
				this.updatemodules();
				return;
				return;
			}));
			return;
		}

		// Function from file: vgstation13.dme
		public override dynamic Topic( string href = null, ByTable href_list = null, dynamic hclient = null, HtmlInterface currui = null ) {
			dynamic A = null;
			Obj_Machinery_GravityGenerator G = null;
			dynamic A2 = null;

			
			if ( Lang13.Bool( base.Topic( href, href_list, (object)(hclient) ) ) ) {
				return 1;
			}

			if ( Map13.GetDistance( this, Task13.User ) > 1 ) {
				
				if ( !( Task13.User is Mob_Living_Silicon ) ) {
					Task13.User.unset_machine();
					Interface13.Browse( Task13.User, null, "window=air_alarm" );
					return null;
				}
			}

			if ( Lang13.Bool( href_list["gentoggle"] ) ) {
				
				if ( Lang13.Bool( this.gravity_generator.on ) ) {
					this.gravity_generator.on = 0;

					foreach (dynamic _b in Lang13.Enumerate( this.gravity_generator.localareas )) {
						A = _b;
						

						foreach (dynamic _a in Lang13.Enumerate( GlobalVars.machines, typeof(Obj_Machinery_GravityGenerator) )) {
							G = _a;
							

							if ( G.localareas.Contains( A ) && G.on ) {
								break;
							}
						}

						if ( !( G != null ) ) {
							((Zone)A).gravitychange( false, A );
						}
					}
				} else {
					
					foreach (dynamic _c in Lang13.Enumerate( this.gravity_generator.localareas )) {
						A2 = _c;
						
						this.gravity_generator.on = 1;
						((Zone)A2).gravitychange( true, A2 );
					}
				}
				this.updateUsrDialog();
				return null;
			}
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			string dat = null;
			dynamic A = null;

			((Mob)a).set_machine( this );
			this.add_fingerprint( a );

			if ( ( this.stat & 3 ) != 0 ) {
				return null;
			}
			this.updatemodules();
			dat = "<h3>Generator Control System</h3>";

			if ( Lang13.Bool( this.gravity_generator ) ) {
				
				if ( Lang13.Bool( this.gravity_generator.on ) ) {
					dat += "<font color=green><br><tt>Gravity Status: ON</tt></font><br>";
				} else {
					dat += "<font color=red><br><tt>Gravity Status: OFF</tt></font><br>";
				}
				dat += "<br><tt>Currently Supplying Gravitons To:</tt><br>";

				foreach (dynamic _a in Lang13.Enumerate( this.gravity_generator.localareas )) {
					A = _a;
					

					if ( A.has_gravity == true && Lang13.Bool( this.gravity_generator.on ) ) {
						dat += "<tt><font color=green>" + A + "</tt></font><br>";
					} else if ( A.has_gravity == true ) {
						dat += "<tt><font color=yellow>" + A + "</tt></font><br>";
					} else {
						dat += "<tt><font color=red>" + A + "</tt></font><br>";
					}
				}
				dat += "<br><tt>Maintainence Functions:</tt><br>";

				if ( Lang13.Bool( this.gravity_generator.on ) ) {
					dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";gentoggle=1'><font color=red> TURN GRAVITY GENERATOR OFF. </font></a>" ).ToString();
				} else {
					dat += new Txt( "<a href='byond://?src=" ).Ref( this ).str( ";gentoggle=1'><font color=green> TURN GRAVITY GENERATOR ON. </font></a>" ).ToString();
				}
			} else {
				dat += "No local gravity generator detected!";
			}
			Interface13.Browse( a, dat, "window=gravgen" );
			GlobalFuncs.onclose( a, "gravgen" );
			return null;
		}

		// Function from file: gravitygenerator.dm
		public override dynamic attack_ai( dynamic user = null ) {
			return this.attack_hand( user );
		}

		// Function from file: gravitygenerator.dm
		public override dynamic attack_paw( Mob a = null, dynamic b = null, dynamic c = null ) {
			return this.attack_hand( a );
		}

		// Function from file: gravitygenerator.dm
		public dynamic findgenerator(  ) {
			dynamic foundgenerator = null;

			foundgenerator = null;

			foreach (dynamic _a in Lang13.Enumerate( new ByTable(new object [] { GlobalVars.NORTH, GlobalVars.EAST, GlobalVars.SOUTH, GlobalVars.WEST }) )) {
				this.dir = Convert.ToInt32( _a );
				
				foundgenerator = Lang13.FindIn( typeof(Obj_Machinery_GravityGenerator), Map13.GetStep( this, this.dir ) );

				if ( !( foundgenerator == null ) ) {
					break;
				}
			}
			return foundgenerator;
		}

		// Function from file: gravitygenerator.dm
		public void updatemodules(  ) {
			this.gravity_generator = this.findgenerator();
			return;
		}

	}

}
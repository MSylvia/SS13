// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Claypot : Obj_Item {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.item_state = "claypot";
			this.inhand_states = new ByTable().Set( "left_hand", "icons/mob/in-hand/left/misc_tools.dmi" ).Set( "right_hand", "icons/mob/in-hand/right/misc_tools.dmi" );
			this.force = 5;
			this.throwforce = 20;
			this.throw_speed = 1;
			this.throw_range = 3;
			this.icon = "icons/obj/hydroponics2.dmi";
			this.icon_state = "claypot-item";
		}

		public Obj_Item_Claypot ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: hydro_tools.dm
		public override dynamic throw_impact( dynamic hit_atom = null, dynamic speed = null, Mob user = null ) {
			base.throw_impact( (object)(hit_atom), (object)(speed), user );

			if ( Rand13.PercentChance( 40 ) ) {
				GlobalFuncs.playsound( this.loc, "sound/effects/hit_on_shattered_glass.ogg", 75, 1 );
				new Obj_Effect_Decal_Cleanable_ClayFragments( this.loc );
				this.visible_message( new Txt( "<span class='warning'>" ).The( this.name ).item().str( " has been smashed.</span>" ).ToString(), "<span class='warning'>You hear a crashing sound.</span>" );
				GlobalFuncs.qdel( this );
			}
			return null;
		}

		// Function from file: hydro_tools.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( a is Obj_Item_Weapon_ReagentContainers_Food_Snacks_Grown || a is Obj_Item_Weapon_Grown ) {
				GlobalFuncs.to_chat( b, "<span class='warning'>You have to transplant the plant into the pot directly from the hydroponic tray, using a spade.</span>" );
			} else if ( a is Obj_Item_Weapon_Pickaxe_Shovel ) {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>There is no plant to remove in " ).the( this ).item().str( ".</span>" ).ToString() );
			} else {
				GlobalFuncs.to_chat( b, new Txt( "<span class='warning'>You cannot plant " ).the( a ).item().str( " in " ).the( this ).item().str( ".</span>" ).ToString() );
			}
			return null;
		}

	}

}
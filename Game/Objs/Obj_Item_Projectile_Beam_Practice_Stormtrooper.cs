// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Item_Projectile_Beam_Practice_Stormtrooper : Obj_Item_Projectile_Beam_Practice {

		public Obj_Item_Projectile_Beam_Practice_Stormtrooper ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: beams.dm
		public override bool on_hit( dynamic atarget = null, int? blocked = null ) {
			blocked = blocked ?? 0;

			dynamic L = null;
			dynamic message = null;

			
			if ( base.on_hit( (object)(atarget), blocked ) ) {
				L = atarget;
				message = Rand13.Pick(new object [] { new Txt().the( this ).item().str( " narrowly whizzes past " ).item( L ).str( "!" ).ToString(), new Txt().the( this ).item().str( " almost hits " ).item( L ).str( "!" ).ToString(), new Txt().the( this ).item().str( " straight up misses its target." ).ToString(), new Txt().item( L ).str( "'s hair is singed off by " ).the( this ).item().str( "!" ).ToString(), new Txt().the( this ).item().str( " misses " ).item( L ).str( " by a millimetre!" ).ToString(), new Txt().the( this ).item().str( " doesn't hit" ).ToString(), new Txt().the( this ).item().str( " misses its intended target." ).ToString(), new Txt().item( L ).str( " has a lucky escape from " ).the( this ).item().str( "!" ).ToString() });
				atarget.loc.visible_message( "<span class='danger'>" + message + "</span>" );
			}
			return false;
		}

	}

}
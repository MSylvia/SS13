// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Obj_Machinery_BunsenBurner : Obj_Machinery {

		public bool heating = false;
		public bool heated = false;
		public dynamic held_container = null;
		public int heat_time = 50;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.ghost_read = false;
			this.icon = "icons/obj/device.dmi";
			this.icon_state = "bunsen0";
		}

		public Obj_Machinery_BunsenBurner ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: bunsen_burner.dm
		public void try_heating(  ) {
			this.visible_message( new Txt( "<span class='notice'>" ).icon( this ).str( " " ).item( this ).str( " hisses.</span>" ).ToString() );

			if ( Lang13.Bool( this.held_container ) && this.heating ) {
				this.heated = true;
				((Reagents)this.held_container.reagents).handle_reactions();
				this.heated = false;
				Task13.Schedule( this.heat_time, (Task13.Closure)(() => {
					this.try_heating();
					return;
				}));
			}
			return;
		}

		// Function from file: bunsen_burner.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			
			if ( Lang13.Bool( this.held_container ) ) {
				this.underlays = null;
				GlobalFuncs.to_chat( a, "<span class='notice'>You remove the " + this.held_container + " from the " + this + ".</span>" );
				this.held_container.loc = this.loc;
				((Ent_Static)this.held_container).attack_hand( a );
				this.held_container = null;
			} else {
				GlobalFuncs.to_chat( a, "<span class='warning'>There is nothing on the " + this + ".</span>" );
			}
			return null;
		}

		// Function from file: bunsen_burner.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Image I = null;

			
			if ( a is Obj_Item_Weapon_ReagentContainers ) {
				
				if ( Lang13.Bool( this.held_container ) ) {
					GlobalFuncs.to_chat( b, "<span class='warning'>You must remove the " + this.held_container + " first.</span>" );
				} else if ( Lang13.Bool( b.drop_item( a, this ) ) ) {
					this.held_container = a;
					GlobalFuncs.to_chat( b, "<span class='notice'>You put the " + this.held_container + " onto the " + this + ".</span>" );
					I = new Image( a, null, null, GlobalVars.FLOAT_LAYER );
					this.underlays.Add( I );

					if ( this.heating ) {
						Task13.Schedule( this.heat_time, (Task13.Closure)(() => {
							this.try_heating();
							return;
						}));
					}
					return 1;
				}
			} else {
				GlobalFuncs.to_chat( b, "<span class='warning'>You can't put the " + a + " onto the " + this + ".</span>" );
			}
			return null;
		}

		// Function from file: bunsen_burner.dm
		[Verb]
		[VerbInfo( name: "Toggle bunsen burner", group: "Object", access: VerbAccess.InView, range: 1 )]
		public void toggle(  ) {
			this.heating = !this.heating;
			this.icon_state = "bunsen" + this.heating;

			if ( this.heating ) {
				Task13.Schedule( this.heat_time, (Task13.Closure)(() => {
					this.try_heating();
					return;
				}));
			}
			return;
		}

	}

}
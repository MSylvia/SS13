// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Zone_TurretProtected : Zone {

		public ByTable turretTargets = new ByTable();

		public Zone_TurretProtected ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: turrets.dm
		public override dynamic Exited( Ent_Dynamic Obj = null, Ent_Static newloc = null ) {
			
			if ( Obj is Mob && !( Obj is Mob_Living_Silicon ) ) {
				this.turretTargets.Remove( Obj );
			} else if ( Obj is Obj_Structure_Bed_Chair_Vehicle ) {
				this.turretTargets.Remove( Obj );
			} else if ( Obj is Obj_Mecha ) {
				this.turretTargets.Remove( Obj );
			}
			base.Exited( Obj, newloc );
			return 1;
		}

		// Function from file: turrets.dm
		public override dynamic Entered( Ent_Dynamic Obj = null, Ent_Static oldloc = null ) {
			Ent_Dynamic Mech = null;

			base.Entered( Obj, oldloc );

			if ( Obj is Mob_Living_Carbon ) {
				this.turretTargets.Or( Obj );
			} else if ( Obj is Obj_Mecha ) {
				Mech = Obj;

				if ( Lang13.Bool( ((dynamic)Mech).occupant ) ) {
					this.turretTargets.Or( Mech );
				}
			} else if ( Obj is Obj_Structure_Bed_Chair_Vehicle ) {
				this.turretTargets.Or( Obj );
			} else if ( Obj is Mob_Living_SimpleAnimal ) {
				this.turretTargets.Or( Obj );
			}
			return 1;
		}

		// Function from file: turrets.dm
		public void subjectDied( dynamic target = null ) {
			Ent_Dynamic L = null;

			
			if ( target is Mob_Living ) {
				
				if ( !( target is Mob_Living_Silicon ) ) {
					L = target;

					if ( Lang13.Bool( ((dynamic)L).stat ) ) {
						Interface13.Stat( null, this.turretTargets.Contains( L ) );

						if ( false ) {
							this.Exited( L );
						}
					}
				}
			}
			return;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Floor_Plating : Tile_Simulated_Floor {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.intact = false;
			this.broken_states = new ByTable(new object [] { "platingdmg1", "platingdmg2", "platingdmg3" });
			this.burnt_states = new ByTable(new object [] { "panelscorched" });
			this.icon_state = "warnplate";
			this.dir = 5;
		}

		// Function from file: plating.dm
		public Tile_Simulated_Floor_Plating ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_plating = this.icon_state;
			return;
		}

		// Function from file: plating.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			dynamic R = null;
			dynamic W = null;
			dynamic T = null;
			dynamic L = null;
			dynamic F = null;
			dynamic welder = null;

			
			if ( Lang13.Bool( base.attackby( (object)(A), (object)(user), _params, silent, replace_spent ) ) ) {
				return null;
			}

			if ( A is Obj_Item_Stack_Rods ) {
				
				if ( this.broken || this.burnt ) {
					user.WriteMsg( "<span class='warning'>Repair the plating first!</span>" );
					return null;
				}
				R = A;

				if ( ( ((Obj_Item_Stack)R).get_amount() ??0) < 2 ) {
					user.WriteMsg( "<span class='warning'>You need two rods to make a reinforced floor!</span>" );
					return null;
				} else {
					user.WriteMsg( "<span class='notice'>You begin reinforcing the floor...</span>" );

					if ( GlobalFuncs.do_after( user, 30, null, this ) ) {
						
						if ( ( ((Obj_Item_Stack)R).get_amount() ??0) >= 2 && !( this is Tile_Simulated_Floor_Engine ) ) {
							this.ChangeTurf( typeof(Tile_Simulated_Floor_Engine) );
							GlobalFuncs.playsound( this, "sound/items/Deconstruct.ogg", 80, 1 );
							((Obj_Item_Stack)R).use( 2 );
							user.WriteMsg( "<span class='notice'>You reinforce the floor.</span>" );
						}
						return null;
					}
				}
			} else if ( A is Obj_Item_Stack_Tile ) {
				
				if ( !this.broken && !this.burnt ) {
					W = A;

					if ( !( ((Obj_Item_Stack)W).use( 1 ) != 0 ) ) {
						return null;
					}
					T = this.ChangeTurf( W.turf_type );

					if ( W is Obj_Item_Stack_Tile_Light ) {
						L = W;
						F = T;
						F.state = L.state;
					}
					GlobalFuncs.playsound( this, "sound/weapons/genhit.ogg", 50, 1 );
				} else {
					user.WriteMsg( "<span class='warning'>This section is too damaged to support a tile! Use a welder to fix the damage.</span>" );
				}
			} else if ( A is Obj_Item_Weapon_Weldingtool ) {
				welder = A;

				if ( ((Obj_Item_Weapon_Weldingtool)welder).isOn() && ( this.broken || this.burnt ) ) {
					
					if ( ((Obj_Item_Weapon_Weldingtool)welder).remove_fuel( 0, user ) ) {
						user.WriteMsg( "<span class='danger'>You fix some dents on the broken plating.</span>" );
						GlobalFuncs.playsound( this, "sound/items/welder.ogg", 80, 1 );
						this.icon_state = this.icon_plating;
						this.burnt = false;
						this.broken = false;
					}
				}
			}
			return null;
		}

		// Function from file: plating.dm
		public override bool update_icon(  ) {
			
			if ( !base.update_icon() ) {
				return false;
			}

			if ( !this.broken && !this.burnt ) {
				this.icon_state = this.icon_plating;
			}
			return false;
		}

	}

}
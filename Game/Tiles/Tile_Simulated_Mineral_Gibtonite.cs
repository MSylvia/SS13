// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Mineral_Gibtonite : Tile_Simulated_Mineral {

		public int det_time = 8;
		public int stage = 0;
		public dynamic activated_ckey = null;
		public dynamic activated_name = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.mineralAmt = 1;
			this.scan_state = "rock_Gibtonite";
			this.icon_state = "rock_Gibtonite";
		}

		// Function from file: mine_turfs.dm
		public Tile_Simulated_Mineral_Gibtonite ( dynamic loc = null ) : base( (object)(loc) ) {
			this.det_time = Rand13.Int( 8, 10 );
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: mine_turfs.dm
		public override void gets_drilled( dynamic user = null, bool? triggered_by_explosion = null ) {
			triggered_by_explosion = triggered_by_explosion ?? false;

			dynamic bombturf = null;
			Obj_Item_Weapon_Twohanded_Required_Gibtonite G = null;
			dynamic G2 = null;

			
			if ( this.stage == 0 && this.mineralAmt >= 1 ) {
				GlobalFuncs.playsound( this, "sound/effects/hit_on_shattered_glass.ogg", 50, 1 );
				this.explosive_reaction( user, triggered_by_explosion );
				return;
			}

			if ( this.stage == 1 && this.mineralAmt >= 1 ) {
				bombturf = GlobalFuncs.get_turf( this );
				this.mineralAmt = 0;
				GlobalFuncs.explosion( bombturf, 1, 2, 5, null, 0 );
			}

			if ( this.stage == 2 ) {
				G = new Obj_Item_Weapon_Twohanded_Required_Gibtonite( this );

				if ( this.det_time <= 0 ) {
					G.quality = 3;
					G.icon_state = "Gibtonite ore 3";
				}

				if ( this.det_time >= 1 && this.det_time <= 2 ) {
					G.quality = 2;
					G.icon_state = "Gibtonite ore 2";
				}
			}
			G2 = this.ChangeTurf( this.turf_type );
			((Tile)G2).fullUpdateMineralOverlays();
			return;
		}

		// Function from file: mine_turfs.dm
		public void defuse(  ) {
			
			if ( this.stage == 1 ) {
				this.icon_state = "rock_Gibtonite_inactive";
				this.desc = "An inactive gibtonite reserve. The ore can be extracted.";
				this.stage = 2;

				if ( this.det_time < 0 ) {
					this.det_time = 0;
				}
				this.visible_message( "<span class='notice'>The chain reaction was stopped! The gibtonite had " + this.det_time + " reactions left till the explosion!</span>" );
			}
			return;
		}

		// Function from file: mine_turfs.dm
		public void countdown( int? notify_admins = null ) {
			notify_admins = notify_admins ?? 0;

			dynamic bombturf = null;

			
			while (this.stage == 1 && this.det_time > 0 && this.mineralAmt >= 1) {
				this.det_time--;
				Task13.Sleep( 5 );
			}

			if ( this.stage == 1 && this.det_time <= 0 && this.mineralAmt >= 1 ) {
				bombturf = GlobalFuncs.get_turf( this );
				this.mineralAmt = 0;
				GlobalFuncs.explosion( bombturf, 1, 3, 5, null, notify_admins );
			}
			return;
		}

		// Function from file: mine_turfs.dm
		public void explosive_reaction( dynamic user = null, bool? triggered_by_explosion = null ) {
			triggered_by_explosion = triggered_by_explosion ?? false;

			dynamic bombturf = null;
			dynamic A = null;
			int? notify_admins = null;

			
			if ( this.stage == 0 ) {
				this.icon_state = "rock_Gibtonite_active";
				this.name = "gibtonite deposit";
				this.desc = "An active gibtonite reserve. Run!";
				this.stage = 1;
				this.visible_message( "<span class='danger'>There was gibtonite inside! It's going to explode!</span>" );
				bombturf = GlobalFuncs.get_turf( this );
				A = GlobalFuncs.get_area( bombturf );
				notify_admins = 0;

				if ( this.z != 5 ) {
					notify_admins = 1;

					if ( !( triggered_by_explosion == true ) ) {
						GlobalFuncs.message_admins( new Txt().item( GlobalFuncs.key_name_admin( user ) ).str( "<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A> (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) has triggered a gibtonite deposit reaction at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( bombturf.x ).str( ";Y=" ).item( bombturf.y ).str( ";Z=" ).item( bombturf.z ).str( "'>" ).item( A.name ).str( " (JMP)</a>." ).ToString() );
					} else {
						GlobalFuncs.message_admins( "An explosion has triggered a gibtonite deposit reaction at <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" + bombturf.x + ";Y=" + bombturf.y + ";Z=" + bombturf.z + "'>" + A.name + " (JMP)</a>." );
					}
				}

				if ( !( triggered_by_explosion == true ) ) {
					GlobalFuncs.log_game( "" + GlobalFuncs.key_name( user ) + " has triggered a gibtonite deposit reaction at " + A.name + " (" + A.x + ", " + A.y + ", " + A.z + ")." );
				} else {
					GlobalFuncs.log_game( "An explosion has triggered a gibtonite deposit reaction at " + A.name + "(" + bombturf.x + "," + bombturf.y + "," + bombturf.z + ")" );
				}
				this.countdown( notify_admins );
			}
			return;
		}

		// Function from file: mine_turfs.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( A is Obj_Item_Device_MiningScanner || A is Obj_Item_Device_TScanner_AdvMiningScanner && this.stage == 1 ) {
				((Ent_Static)user).visible_message( "<span class='notice'>You use " + A + " to locate where to cut off the chain reaction and attempt to stop it...</span>" );
				this.defuse();
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

	}

}
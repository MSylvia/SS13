// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Floor_Mineral_Plasma : Tile_Simulated_Floor_Mineral {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.floor_tile = typeof(Obj_Item_Stack_Tile_Mineral_Plasma);
			this.icons = new ByTable(new object [] { "plasma", "plasma_dam" });
			this.icon_state = "plasma";
		}

		public Tile_Simulated_Floor_Mineral_Plasma ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: mineral_floor.dm
		public void ignite( int exposed_temperature = 0 ) {
			
			if ( exposed_temperature > 300 ) {
				this.PlasmaBurn();
			}
			return;
		}

		// Function from file: mineral_floor.dm
		public void PlasmaBurn(  ) {
			this.make_plating();
			this.atmos_spawn_air( 5, 20 );
			return;
		}

		// Function from file: mineral_floor.dm
		public override dynamic attackby( dynamic A = null, dynamic user = null, string _params = null, bool? silent = null, bool? replace_spent = null ) {
			
			if ( ((Obj_Item)A).is_hot() > 300 ) {
				GlobalFuncs.message_admins( new Txt( "Plasma flooring was ignited by " ).item( GlobalFuncs.key_name_admin( user ) ).str( "(<A HREF='?_src_=holder;adminmoreinfo=" ).Ref( user ).str( "'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=" ).Ref( user ).str( "'>FLW</A>) in (" ).item( this.x ).str( "," ).item( this.y ).str( "," ).item( this.z ).str( " - <A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=" ).item( this.x ).str( ";Y=" ).item( this.y ).str( ";Z=" ).item( this.z ).str( "'>JMP</a>)" ).ToString() );
				GlobalFuncs.log_game( "Plasma flooring was ignited by " + GlobalFuncs.key_name( user ) + " in (" + this.x + "," + this.y + "," + this.z + ")" );
				this.ignite( ((Obj_Item)A).is_hot() );
				return null;
			}
			base.attackby( (object)(A), (object)(user), _params, silent, replace_spent );
			return null;
		}

		// Function from file: mineral_floor.dm
		public override dynamic temperature_expose( GasMixture air = null, dynamic exposed_temperature = null, int? exposed_volume = null ) {
			
			if ( Convert.ToDouble( exposed_temperature ) > 300 ) {
				this.PlasmaBurn();
			}
			return null;
		}

	}

}
// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Unsimulated_Floor_Asteroid : Tile_Unsimulated_Floor {

		public bool dug = false;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.oxygen = 0.01;
			this.nitrogen = 0.01;
			this.temperature = 2.73;
			this.icon_state = "asteroid";
		}

		// Function from file: mine_turfs.dm
		public Tile_Unsimulated_Floor_Asteroid ( dynamic loc = null ) : base( (object)(loc) ) {
			string proper_name = null;

			proper_name = this.name;
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.name = proper_name;

			if ( Rand13.PercentChance( 20 ) ) {
				this.icon_state = "asteroid" + Rand13.Int( 0, 12 );
			}

			if ( GlobalVars.ticker != null ) {
				this.initialize();
			}
			return;
		}

		// Function from file: mine_turfs.dm
		public override int canBuildPlating( Obj_Item_Stack_Tile_Wood material = null ) {
			
			if ( this.x >= Game13.map_size_x - 7 || this.x <= 7 ) {
				return 0;
			} else if ( this.y >= ( Game13.map_size_y - 7 != 0 || this.y <= 7 ?1:0) ) {
				return 0;
			} else if ( !this.dug ) {
				return 2;
			}

			if ( Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Lattice), this.contents ) ) ) {
				return 1;
			}
			return 0;
		}

		// Function from file: mine_turfs.dm
		public override bool canBuildLattice( Obj_Item_Stack material = null ) {
			
			if ( this.x >= Game13.map_size_x - 7 || this.x <= 7 ) {
				return false;
			} else if ( this.y >= ( Game13.map_size_y - 7 != 0 || this.y <= 7 ?1:0) ) {
				return false;
			} else if ( !Lang13.Bool( Lang13.FindIn( typeof(Obj_Structure_Lattice), this.contents ) ) ) {
				return true;
			}
			return false;
		}

		// Function from file: mine_turfs.dm
		public override dynamic canBuildCatwalk(  ) {
			return 0;
		}

		// Function from file: mine_turfs.dm
		public void fullUpdateMineralOverlays(  ) {
			Tile A = null;

			
			if ( Map13.GetStep( this, ((int)( GlobalVars.WEST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.WEST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.EAST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.EAST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.NORTH )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.NORTH )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.NORTHWEST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.NORTHWEST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.NORTHEAST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.NORTHEAST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.SOUTHWEST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.SOUTHWEST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.SOUTHEAST )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.SOUTHEAST )) );
				((dynamic)A).updateMineralOverlays();
			}

			if ( Map13.GetStep( this, ((int)( GlobalVars.SOUTH )) ) is Tile_Unsimulated_Floor_Asteroid ) {
				A = Map13.GetStep( this, ((int)( GlobalVars.SOUTH )) );
				((dynamic)A).updateMineralOverlays();
			}
			this.updateMineralOverlays();
			return;
		}

		// Function from file: mine_turfs.dm
		public void updateMineralOverlays(  ) {
			dynamic dir = null;

			this.overlays.len = 0;
			Task13.Schedule( 1, (Task13.Closure)(() => {
				
				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.cardinal )) {
					dir = _b;
					

					if ( Map13.GetStep( this, Convert.ToInt32( dir ) ) is Tile_Unsimulated_Mineral ) {
						
						dynamic _a = dir; // Was a switch-case, sorry for the mess.
						if ( _a==1 ) {
							this.overlays.Add( new Image( "icons/turf/walls.dmi", "rock_side_n" ) );
						} else if ( _a==2 ) {
							this.overlays.Add( new Image( "icons/turf/walls.dmi", "rock_side_s", null, 6 ) );
						} else if ( _a==4 ) {
							this.overlays.Add( new Image( "icons/turf/walls.dmi", "rock_side_e", null, 6 ) );
						} else if ( _a==8 ) {
							this.overlays.Add( new Image( "icons/turf/walls.dmi", "rock_side_w", null, 6 ) );
						}
					}
				}
				return;
			}));
			return;
		}

		// Function from file: mine_turfs.dm
		public void gets_dug(  ) {
			
			if ( this.dug ) {
				return;
			}
			new Obj_Item_Weapon_Ore_Glass( this );
			new Obj_Item_Weapon_Ore_Glass( this );
			new Obj_Item_Weapon_Ore_Glass( this );
			new Obj_Item_Weapon_Ore_Glass( this );
			new Obj_Item_Weapon_Ore_Glass( this );
			this.dug = true;
			this.icon_state = "asteroid_dug";
			return;
		}

		// Function from file: mine_turfs.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			dynamic used_digging = null;

			
			if ( !Lang13.Bool( a ) || !Lang13.Bool( b ) ) {
				return 0;
			}

			if ( a is Obj_Item_Weapon_Pickaxe ) {
				used_digging = a;

				if ( GlobalFuncs.get_turf( b ) != b.loc ) {
					return null;
				}

				if ( !( ( used_digging.diggables & 2 ) != 0 ) ) {
					GlobalFuncs.to_chat( b, new Txt( "<span class='rose'>You can't dig soft soil with " ).the( a ).item().str( ".</span>" ).ToString() );
					return null;
				}

				if ( this.dug ) {
					GlobalFuncs.to_chat( b, "<span class='rose'>This area has already been dug.</span>" );
					return null;
				}
				GlobalFuncs.to_chat( b, "<span class='rose'>You start digging.<span>" );
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), "sound/effects/rustle1.ogg", 50, 1 );

				if ( GlobalFuncs.do_after( b, used_digging.digspeed ) && Lang13.Bool( b ) ) {
					GlobalFuncs.playsound( this, "sound/items/shovel.ogg", 50, 1 );
					GlobalFuncs.to_chat( b, "<span class='notice'>You dug a hole.</span>" );
					this.gets_dug();
				}
			} else {
				base.attackby( (object)(a), (object)(b), (object)(c) );
			}
			return null;
		}

		// Function from file: mine_turfs.dm
		public override bool ex_act( double? severity = null, dynamic child = null ) {
			
			switch ((int?)( severity )) {
				case 3:
					return false;
					break;
				case 2:
					
					if ( Rand13.PercentChance( 70 ) ) {
						this.gets_dug();
					}
					break;
				case 1:
					this.gets_dug();
					break;
			}
			return false;
		}

		// Function from file: mine_turfs.dm
		public override void initialize(  ) {
			this.updateMineralOverlays();
			return;
		}

	}

}
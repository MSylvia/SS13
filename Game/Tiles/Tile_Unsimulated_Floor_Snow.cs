// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Unsimulated_Floor_Snow : Tile_Unsimulated_Floor {

		public int snowballs = 0;
		public dynamic snowlayers = null;
		public dynamic dirtlayers = null;

		protected override void __FieldInit() {
			base.__FieldInit();

			this.luminosity = 1;
			this.temperature = 233.41;
			this.oxygen = 27.282615661621094;
			this.nitrogen = 102.63461303710938;
			this.light_color = "#e5ffff";
			this.can_border_transition = true;
			this.dynamic_lighting = false;
			this.icon = "icons/turf/newsnow.dmi";
			this.icon_state = "snow0";
		}

		// Function from file: floor.dm
		public Tile_Unsimulated_Floor_Snow ( dynamic loc = null ) : base( (object)(loc) ) {
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			this.icon_state = "snow" + Rand13.Int( 0, 6 );
			this.relativewall_neighbours();
			this.snowballs = Rand13.Int( 30, 50 );
			this.update_icon();

			if ( Rand13.PercentChance( 5 ) && !( this.contents.len != 0 ) ) {
				new Obj_Structure_Flora_Tree_Pine( this );
			}
			return;
		}

		// Function from file: floor.dm
		public override bool? update_icon( dynamic location = null, dynamic target = null ) {
			dynamic dirtdir = null;
			dynamic diagdir = null;
			dynamic dirtdir2 = null;
			int? realdir = null;
			bool lightson = false;
			dynamic direction = null;
			dynamic snow1 = null;
			dynamic snow2 = null;

			
			if ( this.overlays.len > 2 ) {
				this.overlays.Cut();
			}

			if ( !( GlobalVars.snowlayers.len != 0 ) ) {
				GlobalVars.snowlayers["1"] = new Image( "icons/turf/snowfx.dmi", "snowlayer1", 17 );
				GlobalVars.snowlayers["2"] = new Image( "icons/turf/snowfx.dmi", "snowlayer2", 17 );
			}

			if ( !( GlobalVars.dirtlayers.len != 0 ) ) {
				
				foreach (dynamic _a in Lang13.Enumerate( GlobalVars.alldirs )) {
					dirtdir = _a;
					
					GlobalVars.dirtlayers["side" + dirtdir] = new Image( "icons/turf/newsnow.dmi", "snowpath-Side", null, null, dirtdir );
				}

				foreach (dynamic _b in Lang13.Enumerate( GlobalVars.diagonal )) {
					diagdir = _b;
					
					GlobalVars.dirtlayers["diag" + diagdir] = new Image( "icons/turf/newsnow.dmi", "dirtquarter", null, 201, diagdir );
					GlobalVars.dirtlayers["snow" + diagdir] = new Image( "icons/turf/newsnow.dmi", "snowpath", null, null, diagdir );
				}

				foreach (dynamic _d in Lang13.Enumerate( GlobalVars.cardinal )) {
					dirtdir2 = _d;
					
					GlobalVars.dirtlayers["snow" + dirtdir2] = new Image( "icons/turf/newsnow.dmi", "snowpath-half", null, null, dirtdir2 );
					realdir = null;

					dynamic _c = dirtdir2; // Was a switch-case, sorry for the mess.
					if ( _c==1 ) {
						realdir = 14;
					} else if ( _c==2 ) {
						realdir = 13;
					} else if ( _c==4 ) {
						realdir = 11;
					} else if ( _c==8 ) {
						realdir = 7;
					}
					GlobalVars.dirtlayers["snow" + realdir] = new Image( "icons/turf/newsnow.dmi", "snowpath-TJunction", null, null, dirtdir2 );
				}
				GlobalVars.dirtlayers["snow15"] = new Image( "icons/turf/newsnow.dmi", "snowpath-Crossroads" );
				GlobalVars.dirtlayers["snow0"] = new Image( "icons/turf/newsnow.dmi", "snowpath-circle" );
				GlobalVars.dirtlayers["snow3"] = new Image( "icons/turf/newsnow.dmi", "snowpath", null, null, 1 );
				GlobalVars.dirtlayers["snow12"] = new Image( "icons/turf/newsnow.dmi", "snowpath", null, null, 8 );
			}
			lightson = false;

			foreach (dynamic _f in Lang13.Enumerate( GlobalVars.alldirs )) {
				direction = _f;
				

				if ( !( Map13.GetStep( this, Convert.ToInt32( direction ) ) is Tile_Unsimulated_Floor_Snow ) ) {
					
					if ( Map13.GetStep( this, Convert.ToInt32( direction ) ) is Tile_Simulated_Floor ) {
						lightson = true;
					}
					this.overlays.Add( GlobalVars.dirtlayers["side" + direction] );
					snow1 = GlobalVars.snowlayers["1"];
					snow2 = GlobalVars.snowlayers["2"];
					snow1.alpha = 255;
					snow2.alpha = 255;

					dynamic _e = direction; // Was a switch-case, sorry for the mess.
					if ( _e==1 ) {
						snow1.pixel_y = 32;
						this.overlays.Add( snow1 );
						snow2.pixel_y = 32;
						this.overlays.Add( snow2 );
					} else if ( _e==2 ) {
						snow1.pixel_y = -32;
						this.overlays.Add( snow1 );
						snow2.pixel_y = -32;
						this.overlays.Add( snow2 );
					} else if ( _e==4 ) {
						snow1.pixel_x = 32;
						this.overlays.Add( snow1 );
						snow2.pixel_x = 32;
						this.overlays.Add( snow2 );
					} else if ( _e==8 ) {
						snow1.pixel_x = -32;
						this.overlays.Add( snow1 );
						snow2.pixel_x = -32;
						this.overlays.Add( snow2 );
					}
					snow1.alpha = 64;
					snow2.alpha = 64;
					snow1.pixel_x = 0;
					snow2.pixel_x = 0;
					snow1.pixel_y = 0;
					snow2.pixel_y = 0;
				}
			}

			if ( lightson ) {
				this.set_light( 5, 0.5 );
			} else {
				this.set_light( 0, 0 );
			}
			this.overlays.Add( GlobalVars.snowlayers["1"] );
			this.overlays.Add( GlobalVars.snowlayers["2"] );
			return null;
		}

		// Function from file: floor.dm
		public override dynamic Entered( Ent_Dynamic Obj = null, Ent_Static oldloc = null ) {
			ByTable snowsound = null;

			base.Entered( Obj, oldloc );

			if ( Obj is Mob_Living_Carbon && !Lang13.Bool( ((dynamic)Obj).stat ) ) {
				snowsound = new ByTable(new object [] { "sound/misc/snow1.ogg", "sound/misc/snow2.ogg", "sound/misc/snow3.ogg", "sound/misc/snow4.ogg", "sound/misc/snow5.ogg", "sound/misc/snow6.ogg" });
				GlobalFuncs.playsound( GlobalFuncs.get_turf( this ), Rand13.PickFromTable( snowsound ), 10, 1, -1, null, null, 123 );
			}
			return null;
		}

		// Function from file: floor.dm
		public override dynamic attack_hand( dynamic a = null, dynamic b = null, dynamic c = null ) {
			Obj_Item_Stack_Sheet_Snow snowball = null;

			
			if ( this.snowballs > 0 ) {
				((Mob)a).delayNextAttack( 15 );

				if ( GlobalFuncs.do_after( a, this, 15 ) ) {
					this.snowballs -= 1;
					snowball = new Obj_Item_Stack_Sheet_Snow();
					((Mob)a).put_in_hands( snowball );

					if ( this.snowballs <= 0 ) {
						this.ChangeTurf( typeof(Tile_Unsimulated_Floor_Snow_Undersnow) );
						this.relativewall_neighbours();
					}
				}
			}
			base.attack_hand( (object)(a), (object)(b), (object)(c) );
			return null;
		}

		// Function from file: floor.dm
		public override dynamic attackby( dynamic a = null, dynamic b = null, dynamic c = null ) {
			int? i = null;
			Obj_Item_Stack_Sheet_Snow snowball = null;

			base.attackby( (object)(a), (object)(b), (object)(c) );

			if ( this.snowballs >= 0 ) {
				
				if ( a is Obj_Item_Weapon_Pickaxe_Shovel ) {
					((Mob)b).delayNextAttack( 15 );

					if ( GlobalFuncs.do_after( b, this, 25 ) ) {
						i = null;
						i = 0;

						while (( i ??0) < Num13.MinInt( this.snowballs, 10 )) {
							snowball = new Obj_Item_Stack_Sheet_Snow( b.loc );
							snowball.pixel_x = Rand13.Int( -16, 16 );
							snowball.pixel_y = Rand13.Int( -16, 16 );
							i++;
						}
						this.snowballs = Num13.MinInt( this.snowballs - 10, 0 );
					}

					if ( this.snowballs <= 0 ) {
						this.ChangeTurf( typeof(Tile_Unsimulated_Floor_Snow_Undersnow) );
					}
				}
			}
			return null;
		}

		// Function from file: floor.dm
		public override void relativewall_neighbours( dynamic at = null ) {
			dynamic direction = null;
			Tile adj_tile = null;

			
			foreach (dynamic _a in Lang13.Enumerate( GlobalVars.alldirs )) {
				direction = _a;
				
				adj_tile = Map13.GetStep( this, Convert.ToInt32( direction ) );

				if ( adj_tile is Tile_Unsimulated_Floor_Snow ) {
					adj_tile.update_icon();
				}
			}
			return;
		}

	}

}
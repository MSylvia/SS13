// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Wall_Cult : Tile_Simulated_Wall {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.walltype = "cult";
			this.dismantle_type = typeof(Tile_Simulated_Floor_Engine_Cult);
			this.girder_type = typeof(Obj_Structure_Cultgirder);
			this.icon_state = "cult";
		}

		public Tile_Simulated_Wall_Cult ( dynamic loc = null ) : base( (object)(loc) ) {
			
		}

		// Function from file: walls_misc.dm
		public override bool attack_construct( Mob_Living_SimpleAnimal_Construct user = null, dynamic dist = null ) {
			
			if ( user is Mob_Living_SimpleAnimal_Construct_Builder && user.Adjacent( this ) ) {
				this.dismantle_wall( true );
				return true;
			}
			return false;
		}

		// Function from file: walls_misc.dm
		public override void dismantle_wall( bool? devastated = null, bool? explode = null ) {
			devastated = devastated ?? false;
			explode = explode ?? false;

			Obj O = null;
			Obj P = null;

			
			if ( !( devastated == true ) ) {
				GlobalFuncs.getFromPool( typeof(Obj_Effect_Decal_Cleanable_Blood), this );
				Lang13.Call( this.girder_type, this );
			} else if ( Rand13.PercentChance( 10 ) ) {
				GlobalFuncs.getFromPool( typeof(Obj_Effect_Decal_Cleanable_Blood), this );
			}

			foreach (dynamic _a in Lang13.Enumerate( this.contents, typeof(Obj) )) {
				O = _a;
				

				if ( O is Obj_Structure_Sign_Poster ) {
					P = O;
					((Obj_Structure_Sign_Poster)P).roll_and_drop( this );
				}
			}
			this.ChangeTurf( this.dismantle_type );
			return;
		}

		// Function from file: walls_misc.dm
		public override void cultify(  ) {
			return;
		}

	}

}
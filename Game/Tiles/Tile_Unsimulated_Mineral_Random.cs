// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Unsimulated_Mineral_Random : Tile_Unsimulated_Mineral {

		public ByTable mineralSpawnChanceList = new ByTable().Set( "Iron", 50 ).Set( "Plasma", 25 ).Set( "Uranium", 5 ).Set( "Gold", 5 ).Set( "Silver", 5 ).Set( "Gibtonite", 5 ).Set( "Diamond", 1 ).Set( "Cave", 1 );
		public int mineralChance = 10;

		// Function from file: mine_turfs.dm
		public Tile_Unsimulated_Mineral_Random ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic mineral_name = null;

			this.icon_state = "rock";

			if ( Rand13.PercentChance( this.mineralChance ) && !( this.mineral != null ) ) {
				mineral_name = GlobalFuncs.pickweight( this.mineralSpawnChanceList );

				if ( !( GlobalVars.name_to_mineral != null ) ) {
					GlobalFuncs.SetupMinerals();
				}

				if ( Lang13.Bool( mineral_name ) ) {
					Interface13.Stat( null, GlobalVars.name_to_mineral.Contains( mineral_name ) );

					if ( false ) {
						this.mineral = GlobalVars.name_to_mineral[mineral_name];
						this.mineral.UpdateTurf( this );
					} else {
						Game13.log.WriteMsg( "## WARNING: " + ( "Unknown mineral ID: " + mineral_name ) );
					}
				}
			}
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			return;
		}

		// Function from file: mine_turfs.dm
		public override dynamic Destroy( dynamic brokenup = null ) {
			return null;
		}

	}

}
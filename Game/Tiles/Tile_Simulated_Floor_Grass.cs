// FILE AUTOGENERATED BY SOMNIUM13.

using System;
using Somnium.Engine.ByImpl;

namespace Somnium.Game {
	class Tile_Simulated_Floor_Grass : Tile_Simulated_Floor {

		protected override void __FieldInit() {
			base.__FieldInit();

			this.icon_state = "grass1";
		}

		// Function from file: floor_types.dm
		public Tile_Simulated_Floor_Grass ( dynamic loc = null ) : base( (object)(loc) ) {
			dynamic direction = null;
			Tile FF = null;

			
			if ( this.floor_tile != null ) {
				GlobalFuncs.returnToPool( this.floor_tile );
				this.floor_tile = null;
			}
			this.floor_tile = GlobalFuncs.getFromPool( typeof(Obj_Item_Stack_Tile_Grass), null );
			((dynamic)this.floor_tile).New();
			this.icon_state = "grass" + Rand13.Pick(new object [] { "1", "2", "3", "4" });
			// Warning: Super call was HERE! If anything above HERE is needed by the super call, it might break!;
			Task13.Schedule( 4, (Task13.Closure)(() => {
				
				if ( this != null ) {
					this.update_icon();

					foreach (dynamic _a in Lang13.Enumerate( GlobalVars.cardinal )) {
						direction = _a;
						

						if ( Map13.GetStep( this, Convert.ToInt32( direction ) ) is Tile_Simulated_Floor ) {
							FF = Map13.GetStep( this, Convert.ToInt32( direction ) );
							FF.update_icon();
						}
					}
				}
				return;
			}));
			return;
		}

	}

}